{"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/error-type.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/error-type.ts","statementMap":{"0":{"start":{"line":1,"column":39},"end":{"line":15,"column":19}},"1":{"start":{"line":2,"column":2},"end":{"line":2,"column":40}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":32}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":34}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":30}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":28}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":34}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":30}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":34}},"9":{"start":{"line":10,"column":2},"end":{"line":10,"column":32}},"10":{"start":{"line":11,"column":2},"end":{"line":11,"column":34}},"11":{"start":{"line":12,"column":2},"end":{"line":12,"column":42}},"12":{"start":{"line":13,"column":2},"end":{"line":13,"column":32}},"13":{"start":{"line":14,"column":2},"end":{"line":14,"column":20}},"14":{"start":{"line":16,"column":30},"end":{"line":16,"column":63}},"15":{"start":{"line":17,"column":38},"end":{"line":17,"column":105}},"16":{"start":{"line":17,"column":90},"end":{"line":17,"column":102}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":40},"end":{"line":1,"column":41}},"loc":{"start":{"line":1,"column":56},"end":{"line":15,"column":1}},"line":1},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":79},"end":{"line":17,"column":80}},"loc":{"start":{"line":17,"column":90},"end":{"line":17,"column":102}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":3},"end":{"line":15,"column":18}},"type":"binary-expr","locations":[{"start":{"line":15,"column":3},"end":{"line":15,"column":12}},{"start":{"line":15,"column":16},"end":{"line":15,"column":18}}],"line":15}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":12},"f":{"0":1,"1":12},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/error-type.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum ErrorType {\n    /** Division by zero. */\n    DIV_BY_ZERO = '#DIV/0!',\n\n    /** Function error. */\n    NAME = '#NAME?',\n    VALUE = '#VALUE!',\n    NUM = '#NUM!',\n    NA = '#N/A',\n\n    /** Cyclic dependency. */\n    CYCLE = '#CYCLE!',\n\n    /** Wrong reference. */\n    REF = '#REF!',\n\n    /** Array spill error. */\n    SPILL = '#SPILL!',\n\n    /** Calculation error. */\n    CALC = '#CALC!',\n\n    /** Generic error */\n    ERROR = '#ERROR!',\n\n    /** connected to remote */\n    CONNECT = '#GETTING_DATA',\n\n    /** In the case of SUM(B1 C1), */\n    NULL = '#NULL!',\n}\n\nexport const ERROR_TYPE_SET = new Set(Object.values(ErrorType));\n\nexport const ERROR_TYPE_COUNT_ARRAY = [...new Set(Object.values(ErrorType).map((error) => error.length))];\n"],"mappings":"AAgBO,WAAK,YAAL,kBAAKA,eAAL;AAEH,EAAAA,WAAA,iBAAc;AAGd,EAAAA,WAAA,UAAO;AACP,EAAAA,WAAA,WAAQ;AACR,EAAAA,WAAA,SAAM;AACN,EAAAA,WAAA,QAAK;AAGL,EAAAA,WAAA,WAAQ;AAGR,EAAAA,WAAA,SAAM;AAGN,EAAAA,WAAA,WAAQ;AAGR,EAAAA,WAAA,UAAO;AAGP,EAAAA,WAAA,WAAQ;AAGR,EAAAA,WAAA,aAAU;AAGV,EAAAA,WAAA,UAAO;AA7BC,SAAAA;AAAA,GAAA;AAgCL,aAAM,iBAAiB,IAAI,IAAI,OAAO,OAAO,SAAS,CAAC;AAEvD,aAAM,yBAAyB,CAAC,GAAG,IAAI,IAAI,OAAO,OAAO,SAAS,EAAE,IAAI,CAAC,UAAU,MAAM,MAAM,CAAC,CAAC;","names":["ErrorType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5c11820eb7501eb34f92f0ecb1ee7104bee4fbd0"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/common.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/common.ts","statementMap":{"0":{"start":{"line":1,"column":45},"end":{"line":1,"column":63}},"1":{"start":{"line":2,"column":39},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":43},"end":{"line":3,"column":60}},"3":{"start":{"line":4,"column":39},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":42},"end":{"line":9,"column":22}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":35}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":33}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":23}},"8":{"start":{"line":10,"column":48},"end":{"line":14,"column":28}},"9":{"start":{"line":11,"column":2},"end":{"line":11,"column":70}},"10":{"start":{"line":12,"column":2},"end":{"line":12,"column":66}},"11":{"start":{"line":13,"column":2},"end":{"line":13,"column":29}},"12":{"start":{"line":15,"column":45},"end":{"line":21,"column":25}},"13":{"start":{"line":16,"column":2},"end":{"line":16,"column":35}},"14":{"start":{"line":17,"column":2},"end":{"line":17,"column":37}},"15":{"start":{"line":18,"column":2},"end":{"line":18,"column":43}},"16":{"start":{"line":19,"column":2},"end":{"line":19,"column":41}},"17":{"start":{"line":20,"column":2},"end":{"line":20,"column":26}},"18":{"start":{"line":22,"column":45},"end":{"line":26,"column":25}},"19":{"start":{"line":23,"column":2},"end":{"line":23,"column":60}},"20":{"start":{"line":24,"column":2},"end":{"line":24,"column":58}},"21":{"start":{"line":25,"column":2},"end":{"line":25,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":43},"end":{"line":5,"column":44}},"loc":{"start":{"line":5,"column":62},"end":{"line":9,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":49},"end":{"line":10,"column":50}},"loc":{"start":{"line":10,"column":74},"end":{"line":14,"column":1}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":46},"end":{"line":15,"column":47}},"loc":{"start":{"line":15,"column":68},"end":{"line":21,"column":1}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":46},"end":{"line":22,"column":47}},"loc":{"start":{"line":22,"column":68},"end":{"line":26,"column":1}},"line":22}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":3},"end":{"line":9,"column":21}},"type":"binary-expr","locations":[{"start":{"line":9,"column":3},"end":{"line":9,"column":15}},{"start":{"line":9,"column":19},"end":{"line":9,"column":21}}],"line":9},"1":{"loc":{"start":{"line":14,"column":3},"end":{"line":14,"column":27}},"type":"binary-expr","locations":[{"start":{"line":14,"column":3},"end":{"line":14,"column":21}},{"start":{"line":14,"column":25},"end":{"line":14,"column":27}}],"line":14},"2":{"loc":{"start":{"line":21,"column":3},"end":{"line":21,"column":24}},"type":"binary-expr","locations":[{"start":{"line":21,"column":3},"end":{"line":21,"column":18}},{"start":{"line":21,"column":22},"end":{"line":21,"column":24}}],"line":21},"3":{"loc":{"start":{"line":26,"column":3},"end":{"line":26,"column":24}},"type":"binary-expr","locations":[{"start":{"line":26,"column":3},"end":{"line":26,"column":18}},{"start":{"line":26,"column":22},"end":{"line":26,"column":24}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1},"f":{"0":1,"1":1,"2":1,"3":1},"b":{"0":[1,1],"1":[1,1],"2":[1,1],"3":[1,1]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/common.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n    BooleanNumber,\n    ICellData,\n    IColumnData,\n    IObjectArrayPrimitiveType,\n    IObjectMatrixPrimitiveType,\n    IRange,\n    IRowData,\n    IUnitRange,\n    Nullable,\n    ObjectMatrix,\n    Styles,\n} from '@univerjs/core';\n\nexport const ERROR_VALUE_OBJECT_CLASS_TYPE = 'errorValueObject';\n\nexport const ASYNC_OBJECT_CLASS_TYPE = 'asyncObject';\n\nexport const REFERENCE_OBJECT_CLASS_TYPE = 'referenceObject';\n\nexport const VALUE_OBJECT_CLASS_TYPE = 'valueObject';\n\nexport enum BooleanValue {\n    FALSE = 'FALSE',\n    TRUE = 'TRUE',\n}\n\nexport enum AstNodePromiseType {\n    SUCCESS,\n    ERROR,\n}\n\nexport interface ISheetItem {\n    cellData: ObjectMatrix<ICellData>;\n    rowCount: number;\n    columnCount: number;\n    rowData: IObjectArrayPrimitiveType<Partial<IRowData>>;\n    columnData: IObjectArrayPrimitiveType<Partial<IColumnData>>;\n    defaultColumnWidth?: number;\n    defaultRowHeight?: number;\n}\n\nexport interface ISheetData {\n    [sheetId: string]: ISheetItem;\n}\n\n/**\n * The subset of workbook data needs to be assembled into a new reference object when being passed in,\n * and then input through the FormulaCurrentConfigService.\n */\nexport interface IUnitData {\n    [unitId: string]: ISheetData;\n}\n\n/**\n * Style data, numfmt needs to be queried from the style sheet\n */\nexport interface IUnitStylesData {\n    [unitId: string]: Styles;\n}\n\nexport interface IRuntimeUnitDataType {\n    [unitId: string]: Nullable<{ [sheetId: string]: ObjectMatrix<Nullable<ICellData>> }>;\n}\n\nexport interface IRuntimeUnitDataPrimitiveType {\n    [unitId: string]: Nullable<{ [sheetId: string]: IObjectMatrixPrimitiveType<Nullable<ICellData>> }>;\n}\n\nexport interface IRuntimeOtherUnitDataType {\n    [unitId: string]: Nullable<{ [sheetId: string]: Nullable<{ [formulaId: string]: IObjectMatrixPrimitiveType<Nullable<ICellData>[][]> }> }>;\n}\n\nexport interface IUnitSheetNameMap {\n    [unitId: string]: Nullable<{ [sheetName: string]: string }>;\n}\n\nexport interface IUnitSheetIdToNameMap {\n    [unitId: string]: Nullable<{ [sheetId: string]: string }>;\n}\n\nexport interface IDirtyUnitSheetNameMap {\n    [unitId: string]: Nullable<{ [sheetId: string]: string }>;\n}\n\nexport interface IDirtyUnitSheetDefinedNameMap {\n    [unitId: string]: Nullable<{ [name: string]: string }>;\n}\n\nexport interface IDirtyUnitFeatureMap {\n    [unitId: string]: Nullable<{ [sheetId: string]: { [featureId: string]: boolean } }>;\n}\n\nexport interface IDirtyUnitOtherFormulaMap {\n    [unitId: string]: Nullable<{ [sheetId: string]: { [formulaId: string]: boolean } }>;\n}\n\nexport interface IArrayFormulaRangeType {\n    [unitId: string]: Nullable<{ [sheetId: string]: IObjectMatrixPrimitiveType<IRange> }>;\n}\n\nexport interface IFeatureDirtyRangeType {\n    [unitId: string]: Nullable<{ [sheetId: string]: IRange[] }>;\n}\n\nexport interface IArrayFormulaUnitCellType extends IRuntimeUnitDataPrimitiveType {}\n\nexport interface IFormulaData {\n    [unitId: string]: Nullable<{ [sheetId: string]: Nullable<IObjectMatrixPrimitiveType<Nullable<IFormulaDataItem>>> }>;\n}\n\nexport interface IFormulaIdMap {\n    f: string;\n    r: number;\n    c: number;\n}\n\nexport interface IFormulaIdMapData {\n    [unitId: string]: Nullable<{ [subUnitId: string]: Nullable<{ [formulaId: string]: IFormulaIdMap }> }>;\n}\n\nexport interface IOtherFormulaData {\n    [unitId: string]: Nullable<{ [subUnitId: string]: Nullable<{ [formulaId: string]: IOtherFormulaDataItem }> }>;\n}\n/**\n * @f  formulaString, the text string of the formula.\n * @si The formula ID can be utilized in scenarios such as copy-pasting and drag-filling to convert formulas into references, eliminating the need for recreating the formulaString.\n */\nexport interface IFormulaDataItem {\n    f: string; // formulaString\n    x?: number; // Offset from x direction\n    y?: number; // Offset from y direction\n    si?: string; // formulaId,\n    // row: number;\n    // column: number;\n    // sheetId: string;\n}\n\nexport interface IOtherFormulaDataItem {\n    f: string; // formulaString\n    ranges: IRange[];\n}\n\nexport interface ISuperTable {\n    sheetId: string;\n    hasCustomTitle: BooleanNumber;\n    titleMap: Map<string, number>;\n    range: IRange;\n}\n\nexport enum TableOptionType {\n    ALL = '#All',\n    DATA = '#Data',\n    HEADERS = '#Headers',\n    TOTALS = '#Totals',\n}\n\nexport interface IUnitExcludedCell {\n    [unitId: string]: Nullable<{ [sheetId: string]: ObjectMatrix<boolean> }>;\n}\n\nexport interface IUnitRowData {\n    [unitId: string]: Nullable<{ [sheetId: string]: IObjectArrayPrimitiveType<Partial<IRowData>> }>;\n}\n\nexport interface IFormulaDatasetConfig {\n    formulaData: IFormulaData;\n    arrayFormulaCellData: IArrayFormulaUnitCellType;\n    arrayFormulaRange: IArrayFormulaRangeType;\n    forceCalculate: boolean;\n    dirtyRanges: IUnitRange[];\n    dirtyNameMap: IDirtyUnitSheetNameMap;\n    dirtyDefinedNameMap: IDirtyUnitSheetNameMap;\n    dirtyUnitFeatureMap: IDirtyUnitFeatureMap;\n    dirtyUnitOtherFormulaMap: IDirtyUnitOtherFormulaMap;\n    clearDependencyTreeCache?: IUnitSheetIdToNameMap;\n    excludedCell?: IUnitExcludedCell;\n    allUnitData?: IUnitData;\n    unitStylesData?: IUnitStylesData;\n    unitSheetNameMap?: IUnitSheetNameMap;\n    maxIteration?: number;\n    rowData?: IUnitRowData; // Include rows hidden by filters\n}\n\nexport enum ConcatenateType {\n    FRONT,\n    BACK,\n}\n"],"mappings":"AA8BO,aAAM,gCAAgC;AAEtC,aAAM,0BAA0B;AAEhC,aAAM,8BAA8B;AAEpC,aAAM,0BAA0B;AAEhC,WAAK,eAAL,kBAAKA,kBAAL;AACH,EAAAA,cAAA,WAAQ;AACR,EAAAA,cAAA,UAAO;AAFC,SAAAA;AAAA,GAAA;AAKL,WAAK,qBAAL,kBAAKC,wBAAL;AACH,EAAAA,wCAAA;AACA,EAAAA,wCAAA;AAFQ,SAAAA;AAAA,GAAA;AA2HL,WAAK,kBAAL,kBAAKC,qBAAL;AACH,EAAAA,iBAAA,SAAM;AACN,EAAAA,iBAAA,UAAO;AACP,EAAAA,iBAAA,aAAU;AACV,EAAAA,iBAAA,YAAS;AAJD,SAAAA;AAAA,GAAA;AAkCL,WAAK,kBAAL,kBAAKC,qBAAL;AACH,EAAAA,kCAAA;AACA,EAAAA,kCAAA;AAFQ,SAAAA;AAAA,GAAA;","names":["BooleanValue","AstNodePromiseType","TableOptionType","ConcatenateType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b45bbef79875571c3323fa80d087f09f12bf96b5"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/inverted-index-cache.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/inverted-index-cache.ts","statementMap":{"0":{"start":{"line":15,"column":27},"end":{"line":15,"column":36}},"1":{"start":{"line":16,"column":43},"end":{"line":16,"column":52}},"2":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"3":{"start":{"line":19,"column":6},"end":{"line":19,"column":13}},"4":{"start":{"line":21,"column":18},"end":{"line":21,"column":41}},"5":{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},"6":{"start":{"line":23,"column":6},"end":{"line":23,"column":42}},"7":{"start":{"line":24,"column":6},"end":{"line":24,"column":39}},"8":{"start":{"line":26,"column":19},"end":{"line":26,"column":39}},"9":{"start":{"line":27,"column":4},"end":{"line":30,"column":5}},"10":{"start":{"line":28,"column":6},"end":{"line":28,"column":43}},"11":{"start":{"line":29,"column":6},"end":{"line":29,"column":37}},"12":{"start":{"line":31,"column":20},"end":{"line":31,"column":40}},"13":{"start":{"line":32,"column":4},"end":{"line":35,"column":5}},"14":{"start":{"line":33,"column":6},"end":{"line":33,"column":44}},"15":{"start":{"line":34,"column":6},"end":{"line":34,"column":38}},"16":{"start":{"line":36,"column":19},"end":{"line":36,"column":39}},"17":{"start":{"line":37,"column":4},"end":{"line":40,"column":5}},"18":{"start":{"line":38,"column":6},"end":{"line":38,"column":43}},"19":{"start":{"line":39,"column":6},"end":{"line":39,"column":37}},"20":{"start":{"line":41,"column":4},"end":{"line":41,"column":22}},"21":{"start":{"line":44,"column":4},"end":{"line":44,"column":62}},"22":{"start":{"line":47,"column":17},"end":{"line":47,"column":79}},"23":{"start":{"line":48,"column":4},"end":{"line":48,"column":109}},"24":{"start":{"line":48,"column":45},"end":{"line":48,"column":107}},"25":{"start":{"line":48,"column":80},"end":{"line":48,"column":106}},"26":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"27":{"start":{"line":52,"column":6},"end":{"line":52,"column":13}},"28":{"start":{"line":54,"column":18},"end":{"line":54,"column":57}},"29":{"start":{"line":55,"column":4},"end":{"line":58,"column":5}},"30":{"start":{"line":56,"column":6},"end":{"line":56,"column":42}},"31":{"start":{"line":57,"column":6},"end":{"line":57,"column":55}},"32":{"start":{"line":59,"column":19},"end":{"line":59,"column":39}},"33":{"start":{"line":60,"column":4},"end":{"line":63,"column":5}},"34":{"start":{"line":61,"column":6},"end":{"line":61,"column":43}},"35":{"start":{"line":62,"column":6},"end":{"line":62,"column":37}},"36":{"start":{"line":64,"column":20},"end":{"line":64,"column":40}},"37":{"start":{"line":65,"column":4},"end":{"line":70,"column":5}},"38":{"start":{"line":66,"column":6},"end":{"line":66,"column":37}},"39":{"start":{"line":67,"column":6},"end":{"line":67,"column":43}},"40":{"start":{"line":68,"column":6},"end":{"line":68,"column":38}},"41":{"start":{"line":69,"column":6},"end":{"line":69,"column":13}},"42":{"start":{"line":71,"column":4},"end":{"line":71,"column":57}},"43":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"44":{"start":{"line":75,"column":6},"end":{"line":75,"column":19}},"45":{"start":{"line":77,"column":22},"end":{"line":77,"column":88}},"46":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"47":{"start":{"line":79,"column":6},"end":{"line":79,"column":18}},"48":{"start":{"line":81,"column":19},"end":{"line":81,"column":47}},"49":{"start":{"line":82,"column":4},"end":{"line":82,"column":31}},"50":{"start":{"line":85,"column":22},"end":{"line":85,"column":88}},"51":{"start":{"line":86,"column":4},"end":{"line":91,"column":5}},"52":{"start":{"line":87,"column":6},"end":{"line":90,"column":8}},"53":{"start":{"line":92,"column":19},"end":{"line":92,"column":65}},"54":{"start":{"line":93,"column":4},"end":{"line":98,"column":5}},"55":{"start":{"line":94,"column":6},"end":{"line":97,"column":8}},"56":{"start":{"line":99,"column":4},"end":{"line":99,"column":39}},"57":{"start":{"line":99,"column":26},"end":{"line":99,"column":37}},"58":{"start":{"line":100,"column":24},"end":{"line":100,"column":26}},"59":{"start":{"line":101,"column":27},"end":{"line":101,"column":29}},"60":{"start":{"line":102,"column":25},"end":{"line":102,"column":38}},"61":{"start":{"line":103,"column":4},"end":{"line":128,"column":5}},"62":{"start":{"line":103,"column":17},"end":{"line":103,"column":18}},"63":{"start":{"line":104,"column":27},"end":{"line":104,"column":36}},"64":{"start":{"line":105,"column":6},"end":{"line":127,"column":7}},"65":{"start":{"line":106,"column":8},"end":{"line":109,"column":9}},"66":{"start":{"line":107,"column":10},"end":{"line":107,"column":58}},"67":{"start":{"line":108,"column":10},"end":{"line":108,"column":16}},"68":{"start":{"line":110,"column":8},"end":{"line":110,"column":48}},"69":{"start":{"line":111,"column":8},"end":{"line":111,"column":33}},"70":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"71":{"start":{"line":113,"column":10},"end":{"line":113,"column":61}},"72":{"start":{"line":116,"column":8},"end":{"line":124,"column":9}},"73":{"start":{"line":117,"column":10},"end":{"line":117,"column":41}},"74":{"start":{"line":118,"column":10},"end":{"line":118,"column":59}},"75":{"start":{"line":119,"column":10},"end":{"line":119,"column":35}},"76":{"start":{"line":120,"column":10},"end":{"line":122,"column":11}},"77":{"start":{"line":121,"column":12},"end":{"line":121,"column":63}},"78":{"start":{"line":123,"column":10},"end":{"line":123,"column":19}},"79":{"start":{"line":125,"column":8},"end":{"line":125,"column":47}},"80":{"start":{"line":126,"column":8},"end":{"line":126,"column":57}},"81":{"start":{"line":129,"column":4},"end":{"line":132,"column":6}},"82":{"start":{"line":135,"column":4},"end":{"line":135,"column":24}},"83":{"start":{"line":136,"column":4},"end":{"line":136,"column":40}},"84":{"start":{"line":139,"column":17},"end":{"line":139,"column":53}},"85":{"start":{"line":140,"column":4},"end":{"line":147,"column":5}},"86":{"start":{"line":141,"column":28},"end":{"line":141,"column":77}},"87":{"start":{"line":142,"column":6},"end":{"line":142,"column":47}},"88":{"start":{"line":143,"column":6},"end":{"line":146,"column":7}},"89":{"start":{"line":144,"column":8},"end":{"line":144,"column":45}},"90":{"start":{"line":145,"column":8},"end":{"line":145,"column":15}},"91":{"start":{"line":148,"column":14},"end":{"line":148,"column":22}},"92":{"start":{"line":149,"column":14},"end":{"line":149,"column":20}},"93":{"start":{"line":150,"column":4},"end":{"line":154,"column":5}},"94":{"start":{"line":151,"column":6},"end":{"line":151,"column":39}},"95":{"start":{"line":152,"column":6},"end":{"line":152,"column":39}},"96":{"start":{"line":153,"column":6},"end":{"line":153,"column":33}},"97":{"start":{"line":155,"column":4},"end":{"line":155,"column":33}},"98":{"start":{"line":158,"column":41},"end":{"line":158,"column":65}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":2},"end":{"line":17,"column":3}},"loc":{"start":{"line":17,"column":43},"end":{"line":42,"column":3}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":43,"column":2},"end":{"line":43,"column":3}},"loc":{"start":{"line":43,"column":49},"end":{"line":45,"column":3}},"line":43},"2":{"name":"(anonymous_2)","decl":{"start":{"line":46,"column":2},"end":{"line":46,"column":3}},"loc":{"start":{"line":46,"column":64},"end":{"line":49,"column":3}},"line":46},"3":{"name":"(anonymous_3)","decl":{"start":{"line":48,"column":36},"end":{"line":48,"column":37}},"loc":{"start":{"line":48,"column":45},"end":{"line":48,"column":107}},"line":48},"4":{"name":"(anonymous_4)","decl":{"start":{"line":48,"column":62},"end":{"line":48,"column":63}},"loc":{"start":{"line":48,"column":80},"end":{"line":48,"column":106}},"line":48},"5":{"name":"(anonymous_5)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":70},"end":{"line":72,"column":3}},"line":50},"6":{"name":"(anonymous_6)","decl":{"start":{"line":73,"column":2},"end":{"line":73,"column":3}},"loc":{"start":{"line":73,"column":60},"end":{"line":83,"column":3}},"line":73},"7":{"name":"(anonymous_7)","decl":{"start":{"line":84,"column":2},"end":{"line":84,"column":3}},"loc":{"start":{"line":84,"column":67},"end":{"line":133,"column":3}},"line":84},"8":{"name":"(anonymous_8)","decl":{"start":{"line":99,"column":16},"end":{"line":99,"column":17}},"loc":{"start":{"line":99,"column":26},"end":{"line":99,"column":37}},"line":99},"9":{"name":"(anonymous_9)","decl":{"start":{"line":134,"column":2},"end":{"line":134,"column":3}},"loc":{"start":{"line":134,"column":10},"end":{"line":137,"column":3}},"line":134},"10":{"name":"(anonymous_10)","decl":{"start":{"line":138,"column":2},"end":{"line":138,"column":3}},"loc":{"start":{"line":138,"column":50},"end":{"line":156,"column":3}},"line":138}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},{"start":{},"end":{}}],"line":18},"1":{"loc":{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},{"start":{},"end":{}}],"line":22},"2":{"loc":{"start":{"line":27,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":30,"column":5}},{"start":{},"end":{}}],"line":27},"3":{"loc":{"start":{"line":32,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":35,"column":5}},{"start":{},"end":{}}],"line":32},"4":{"loc":{"start":{"line":37,"column":4},"end":{"line":40,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":40,"column":5}},{"start":{},"end":{}}],"line":37},"5":{"loc":{"start":{"line":48,"column":11},"end":{"line":48,"column":108}},"type":"binary-expr","locations":[{"start":{"line":48,"column":11},"end":{"line":48,"column":15}},{"start":{"line":48,"column":19},"end":{"line":48,"column":108}}],"line":48},"6":{"loc":{"start":{"line":48,"column":80},"end":{"line":48,"column":106}},"type":"binary-expr","locations":[{"start":{"line":48,"column":80},"end":{"line":48,"column":92}},{"start":{"line":48,"column":96},"end":{"line":48,"column":106}}],"line":48},"7":{"loc":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},{"start":{},"end":{}}],"line":51},"8":{"loc":{"start":{"line":51,"column":8},"end":{"line":51,"column":57}},"type":"binary-expr","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":21}},{"start":{"line":51,"column":25},"end":{"line":51,"column":40}},{"start":{"line":51,"column":44},"end":{"line":51,"column":57}}],"line":51},"9":{"loc":{"start":{"line":55,"column":4},"end":{"line":58,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":58,"column":5}},{"start":{},"end":{}}],"line":55},"10":{"loc":{"start":{"line":60,"column":4},"end":{"line":63,"column":5}},"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":63,"column":5}},{"start":{},"end":{}}],"line":60},"11":{"loc":{"start":{"line":65,"column":4},"end":{"line":70,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":70,"column":5}},{"start":{},"end":{}}],"line":65},"12":{"loc":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},{"start":{},"end":{}}],"line":74},"13":{"loc":{"start":{"line":74,"column":8},"end":{"line":74,"column":35}},"type":"binary-expr","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":21}},{"start":{"line":74,"column":25},"end":{"line":74,"column":35}}],"line":74},"14":{"loc":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},{"start":{},"end":{}}],"line":78},"15":{"loc":{"start":{"line":86,"column":4},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":91,"column":5}},{"start":{},"end":{}}],"line":86},"16":{"loc":{"start":{"line":86,"column":8},"end":{"line":86,"column":81}},"type":"binary-expr","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":21}},{"start":{"line":86,"column":25},"end":{"line":86,"column":45}},{"start":{"line":86,"column":49},"end":{"line":86,"column":67}},{"start":{"line":86,"column":71},"end":{"line":86,"column":81}}],"line":86},"17":{"loc":{"start":{"line":93,"column":4},"end":{"line":98,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":98,"column":5}},{"start":{},"end":{}}],"line":93},"18":{"loc":{"start":{"line":105,"column":6},"end":{"line":127,"column":7}},"type":"if","locations":[{"start":{"line":105,"column":6},"end":{"line":127,"column":7}},{"start":{"line":115,"column":13},"end":{"line":127,"column":7}}],"line":105},"19":{"loc":{"start":{"line":106,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":109,"column":9}},{"start":{},"end":{}}],"line":106},"20":{"loc":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},{"start":{},"end":{}}],"line":112},"21":{"loc":{"start":{"line":112,"column":12},"end":{"line":112,"column":68}},"type":"binary-expr","locations":[{"start":{"line":112,"column":12},"end":{"line":112,"column":35}},{"start":{"line":112,"column":39},"end":{"line":112,"column":68}}],"line":112},"22":{"loc":{"start":{"line":116,"column":8},"end":{"line":124,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":124,"column":9}},{"start":{},"end":{}}],"line":116},"23":{"loc":{"start":{"line":120,"column":10},"end":{"line":122,"column":11}},"type":"if","locations":[{"start":{"line":120,"column":10},"end":{"line":122,"column":11}},{"start":{},"end":{}}],"line":120},"24":{"loc":{"start":{"line":120,"column":14},"end":{"line":120,"column":70}},"type":"binary-expr","locations":[{"start":{"line":120,"column":14},"end":{"line":120,"column":37}},{"start":{"line":120,"column":41},"end":{"line":120,"column":70}}],"line":120},"25":{"loc":{"start":{"line":140,"column":4},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":147,"column":5}},{"start":{},"end":{}}],"line":140},"26":{"loc":{"start":{"line":141,"column":29},"end":{"line":141,"column":64}},"type":"cond-expr","locations":[{"start":{"line":141,"column":48},"end":{"line":141,"column":49}},{"start":{"line":141,"column":52},"end":{"line":141,"column":64}}],"line":141},"27":{"loc":{"start":{"line":143,"column":6},"end":{"line":146,"column":7}},"type":"if","locations":[{"start":{"line":143,"column":6},"end":{"line":146,"column":7}},{"start":{},"end":{}}],"line":143}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/inverted-index-cache.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { NumericTuple } from '@flatten-js/interval-tree';\nimport IntervalTree from '@flatten-js/interval-tree';\n\nexport class InvertedIndexCache {\n    /**\n     * {\n     *    unitId:{\n     *       sheetId:{\n     *          'columnIndex': {\n     *              10:[1,3,4,5],\n     *              5:[2,6,11,22]\n     *          }\n     *       }\n     *    }\n     * }\n     */\n    private _cache: Map<string, Map<string, Map<number, Map<string | number | boolean | null, Set<number>>>>> = new Map();\n\n    private _continueBuildingCache: Map<string, Map<string, Map<number, IntervalTree<NumericTuple>>>> = new Map();\n\n    set(unitId: string, sheetId: string, column: number, value: string | number | boolean | null, row: number) {\n        if (!this.shouldContinueBuildingCache(unitId, sheetId, column, row)) {\n            return;\n        }\n\n        let unitMap = this._cache.get(unitId);\n        if (unitMap == null) {\n            unitMap = new Map();\n            this._cache.set(unitId, unitMap);\n        }\n\n        let sheetMap = unitMap.get(sheetId);\n        if (sheetMap == null) {\n            sheetMap = new Map();\n            unitMap.set(sheetId, sheetMap);\n        }\n\n        let columnMap = sheetMap.get(column);\n        if (columnMap == null) {\n            columnMap = new Map();\n            sheetMap.set(column, columnMap);\n        }\n\n        let cellList = columnMap.get(value);\n        if (cellList == null) {\n            cellList = new Set<number>();\n            columnMap.set(value, cellList);\n        }\n\n        cellList.add(row);\n    }\n\n    getCellValuePositions(unitId: string, sheetId: string, column: number) {\n        return this._cache.get(unitId)?.get(sheetId)?.get(column);\n    }\n\n    getCellPositions(unitId: string, sheetId: string, column: number, value: string | number | boolean, rowsInCache: NumericTuple[]) {\n        const rows = this._cache.get(unitId)?.get(sheetId)?.get(column)?.get(value);\n        // return rows?.values().filter((row) => rowsInCache.some(([start, end]) => row >= start && row <= end));\n        return rows && [...rows].filter((row) => rowsInCache.some(([start, end]) => row >= start && row <= end));\n    }\n\n    setContinueBuildingCache(unitId: string, sheetId: string, column: number, startRow: number, endRow: number) {\n        if (column === -1 || startRow === -1 || endRow === -1) {\n            return;\n        }\n\n        let unitMap = this._continueBuildingCache.get(unitId);\n        if (unitMap == null) {\n            unitMap = new Map();\n            this._continueBuildingCache.set(unitId, unitMap);\n        }\n\n        let sheetMap = unitMap.get(sheetId);\n        if (sheetMap == null) {\n            sheetMap = new Map();\n            unitMap.set(sheetId, sheetMap);\n        }\n\n        let columnMap = sheetMap.get(column);\n        if (columnMap == null) {\n            columnMap = new IntervalTree<NumericTuple>();\n            columnMap.insert([startRow, endRow]);\n            sheetMap.set(column, columnMap);\n            return;\n        }\n\n        this._handleNewInterval(columnMap, startRow, endRow);\n    }\n\n    shouldContinueBuildingCache(unitId: string, sheetId: string, column: number, row: number) {\n        if (column === -1 || row === -1) {\n            return false;\n        }\n\n        const columnMap = this._continueBuildingCache.get(unitId)?.get(sheetId)?.get(column);\n\n        if (!columnMap) {\n            return true;\n        }\n\n        const result = columnMap.search([row, row]);\n\n        return result.length === 0;\n    }\n\n    canUseCache(unitId: string, sheetId: string, column: number, rangeStartRow: number, rangeEndRow: number) {\n        const columnMap = this._continueBuildingCache.get(unitId)?.get(sheetId)?.get(column);\n\n        if (column === -1 || rangeStartRow === -1 || rangeEndRow === -1 || !columnMap) {\n            return {\n                rowsInCache: [],\n                rowsNotInCache: [],\n            };\n        }\n\n        const result = columnMap.search([rangeStartRow, rangeEndRow]);\n\n        if (result.length === 0) {\n            return {\n                rowsInCache: [],\n                rowsNotInCache: [],\n            };\n        }\n\n        result.sort((a, b) => a[0] - b[0]);\n\n        const rowsInCache: NumericTuple[] = [];\n        const rowsNotInCache: NumericTuple[] = [];\n\n        let _rangeStartRow = rangeStartRow;\n\n        for (let i = 0; i < result.length; i++) {\n            const [start, end] = result[i];\n\n            if (_rangeStartRow >= start) {\n                if (rangeEndRow <= end) {\n                    rowsInCache.push([_rangeStartRow, rangeEndRow]);\n                    break;\n                }\n\n                rowsInCache.push([_rangeStartRow, end]);\n                _rangeStartRow = end + 1;\n\n                if (i === result.length - 1 && _rangeStartRow <= rangeEndRow) {\n                    rowsNotInCache.push([_rangeStartRow, rangeEndRow]);\n                }\n            } else {\n                if (rangeEndRow > end) {\n                    rowsInCache.push([start, end]);\n                    rowsNotInCache.push([_rangeStartRow, start - 1]);\n                    _rangeStartRow = end + 1;\n\n                    if (i === result.length - 1 && _rangeStartRow <= rangeEndRow) {\n                        rowsNotInCache.push([_rangeStartRow, rangeEndRow]);\n                    }\n                    continue;\n                }\n\n                rowsInCache.push([start, rangeEndRow]);\n                rowsNotInCache.push([_rangeStartRow, start - 1]);\n            }\n        }\n\n        return {\n            rowsInCache,\n            rowsNotInCache,\n        };\n    }\n\n    clear() {\n        this._cache.clear();\n        this._continueBuildingCache.clear();\n    }\n\n    private _handleNewInterval(columnMap: IntervalTree<NumericTuple>, startRow: number, endRow: number) {\n        let result = columnMap.search([startRow, endRow]);\n\n        // the range is not overlapping with any existing range\n        if (result.length === 0) {\n            // check if the range is adjacent to any existing range\n            const adjacentRange: NumericTuple = [startRow - 1 < 0 ? 0 : startRow - 1, endRow + 1];\n\n            result = columnMap.search(adjacentRange);\n\n            // the range is not overlapping or adjacent to any existing range, then insert it\n            if (result.length === 0) {\n                columnMap.insert([startRow, endRow]);\n                return;\n            }\n        }\n\n        // merge overlapping or adjacent ranges\n        let min = startRow;\n        let max = endRow;\n\n        for (const interval of result) {\n            min = Math.min(min, interval[0]);\n            max = Math.max(max, interval[1]);\n            columnMap.remove(interval);\n        }\n\n        columnMap.insert([min, max]);\n    }\n}\n\nexport const CELL_INVERTED_INDEX_CACHE = new InvertedIndexCache();\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"49968537c78bb7b96e4d3bc82836817bccf5eab9"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/token.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/token.ts","statementMap":{"0":{"start":{"line":1,"column":43},"end":{"line":15,"column":23}},"1":{"start":{"line":2,"column":2},"end":{"line":2,"column":31}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":32}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":35}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":34}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":38}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":32}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":33}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":37}},"9":{"start":{"line":10,"column":2},"end":{"line":10,"column":39}},"10":{"start":{"line":11,"column":2},"end":{"line":11,"column":49}},"11":{"start":{"line":12,"column":2},"end":{"line":12,"column":36}},"12":{"start":{"line":13,"column":2},"end":{"line":13,"column":46}},"13":{"start":{"line":14,"column":2},"end":{"line":14,"column":24}},"14":{"start":{"line":16,"column":42},"end":{"line":24,"column":22}},"15":{"start":{"line":17,"column":2},"end":{"line":17,"column":32}},"16":{"start":{"line":18,"column":2},"end":{"line":18,"column":36}},"17":{"start":{"line":19,"column":2},"end":{"line":19,"column":38}},"18":{"start":{"line":20,"column":2},"end":{"line":20,"column":48}},"19":{"start":{"line":21,"column":2},"end":{"line":21,"column":35}},"20":{"start":{"line":22,"column":2},"end":{"line":22,"column":45}},"21":{"start":{"line":23,"column":2},"end":{"line":23,"column":23}},"22":{"start":{"line":25,"column":55},"end":{"line":38,"column":2}},"23":{"start":{"line":39,"column":34},"end":{"line":39,"column":73}},"24":{"start":{"line":40,"column":58},"end":{"line":47,"column":2}},"25":{"start":{"line":48,"column":40},"end":{"line":60,"column":20}},"26":{"start":{"line":49,"column":2},"end":{"line":49,"column":36}},"27":{"start":{"line":50,"column":2},"end":{"line":50,"column":37}},"28":{"start":{"line":51,"column":2},"end":{"line":51,"column":29}},"29":{"start":{"line":52,"column":2},"end":{"line":52,"column":40}},"30":{"start":{"line":53,"column":2},"end":{"line":53,"column":40}},"31":{"start":{"line":54,"column":2},"end":{"line":54,"column":35}},"32":{"start":{"line":55,"column":2},"end":{"line":55,"column":36}},"33":{"start":{"line":56,"column":2},"end":{"line":56,"column":29}},"34":{"start":{"line":57,"column":2},"end":{"line":57,"column":43}},"35":{"start":{"line":58,"column":2},"end":{"line":58,"column":44}},"36":{"start":{"line":59,"column":2},"end":{"line":59,"column":21}},"37":{"start":{"line":61,"column":41},"end":{"line":65,"column":21}},"38":{"start":{"line":62,"column":2},"end":{"line":62,"column":35}},"39":{"start":{"line":63,"column":2},"end":{"line":63,"column":30}},"40":{"start":{"line":64,"column":2},"end":{"line":64,"column":22}},"41":{"start":{"line":66,"column":48},"end":{"line":66,"column":96}},"42":{"start":{"line":67,"column":41},"end":{"line":72,"column":21}},"43":{"start":{"line":68,"column":2},"end":{"line":68,"column":27}},"44":{"start":{"line":69,"column":2},"end":{"line":69,"column":30}},"45":{"start":{"line":70,"column":2},"end":{"line":70,"column":29}},"46":{"start":{"line":71,"column":2},"end":{"line":71,"column":22}},"47":{"start":{"line":73,"column":27},"end":{"line":73,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":44},"end":{"line":1,"column":45}},"loc":{"start":{"line":1,"column":64},"end":{"line":15,"column":1}},"line":1},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":43},"end":{"line":16,"column":44}},"loc":{"start":{"line":16,"column":62},"end":{"line":24,"column":1}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":48,"column":41},"end":{"line":48,"column":42}},"loc":{"start":{"line":48,"column":58},"end":{"line":60,"column":1}},"line":48},"3":{"name":"(anonymous_3)","decl":{"start":{"line":61,"column":42},"end":{"line":61,"column":43}},"loc":{"start":{"line":61,"column":60},"end":{"line":65,"column":1}},"line":61},"4":{"name":"(anonymous_4)","decl":{"start":{"line":67,"column":42},"end":{"line":67,"column":43}},"loc":{"start":{"line":67,"column":60},"end":{"line":72,"column":1}},"line":67}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":3},"end":{"line":15,"column":22}},"type":"binary-expr","locations":[{"start":{"line":15,"column":3},"end":{"line":15,"column":16}},{"start":{"line":15,"column":20},"end":{"line":15,"column":22}}],"line":15},"1":{"loc":{"start":{"line":24,"column":3},"end":{"line":24,"column":21}},"type":"binary-expr","locations":[{"start":{"line":24,"column":3},"end":{"line":24,"column":15}},{"start":{"line":24,"column":19},"end":{"line":24,"column":21}}],"line":24},"2":{"loc":{"start":{"line":60,"column":3},"end":{"line":60,"column":19}},"type":"binary-expr","locations":[{"start":{"line":60,"column":3},"end":{"line":60,"column":13}},{"start":{"line":60,"column":17},"end":{"line":60,"column":19}}],"line":60},"3":{"loc":{"start":{"line":65,"column":3},"end":{"line":65,"column":20}},"type":"binary-expr","locations":[{"start":{"line":65,"column":3},"end":{"line":65,"column":14}},{"start":{"line":65,"column":18},"end":{"line":65,"column":20}}],"line":65},"4":{"loc":{"start":{"line":72,"column":3},"end":{"line":72,"column":20}},"type":"binary-expr","locations":[{"start":{"line":72,"column":3},"end":{"line":72,"column":14}},{"start":{"line":72,"column":18},"end":{"line":72,"column":20}}],"line":72}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1},"b":{"0":[1,1],"1":[1,1],"2":[1,1],"3":[1,1],"4":[1,1]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/token.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum operatorToken {\n    PLUS = '+',\n    MINUS = '-',\n    MULTIPLY = '*',\n    DIVIDED = '/',\n    CONCATENATE = '&',\n    POWER = '^',\n    EQUALS = '=',\n    NOT_EQUAL = '<>',\n    GREATER_THAN = '>',\n    GREATER_THAN_OR_EQUAL = '>=',\n    LESS_THAN = '<',\n    LESS_THAN_OR_EQUAL = '<=',\n}\n\nexport enum compareToken {\n    EQUALS = '=',\n    NOT_EQUAL = '<>',\n    GREATER_THAN = '>',\n    GREATER_THAN_OR_EQUAL = '>=',\n    LESS_THAN = '<',\n    LESS_THAN_OR_EQUAL = '<=',\n}\n\nexport const OPERATOR_TOKEN_PRIORITY = new Map([\n    [operatorToken.NOT_EQUAL as string, 4],\n    [operatorToken.LESS_THAN as string, 4],\n    [operatorToken.GREATER_THAN_OR_EQUAL as string, 4],\n    [operatorToken.EQUALS as string, 4],\n    [operatorToken.GREATER_THAN as string, 4],\n    [operatorToken.LESS_THAN_OR_EQUAL as string, 4],\n    [operatorToken.CONCATENATE as string, 3],\n    [operatorToken.PLUS as string, 2],\n    [operatorToken.MINUS as string, 2],\n    [operatorToken.DIVIDED as string, 1],\n    [operatorToken.MULTIPLY as string, 1],\n    [operatorToken.POWER as string, 0],\n]);\n\nexport const OPERATOR_TOKEN_SET = new Set(OPERATOR_TOKEN_PRIORITY.keys());\n\nexport const OPERATOR_TOKEN_COMPARE_SET = new Set([\n    operatorToken.EQUALS as string,\n    operatorToken.NOT_EQUAL,\n    operatorToken.GREATER_THAN,\n    operatorToken.GREATER_THAN_OR_EQUAL,\n    operatorToken.LESS_THAN,\n    operatorToken.LESS_THAN_OR_EQUAL,\n]);\n\nexport enum matchToken {\n    OPEN_BRACKET = '(',\n    CLOSE_BRACKET = ')',\n    COMMA = ',',\n    SINGLE_QUOTATION = \"'\",\n    DOUBLE_QUOTATION = '\"',\n    OPEN_BRACES = '{',\n    CLOSE_BRACES = '}',\n    COLON = ':',\n    OPEN_SQUARE_BRACKET = '[',\n    CLOSE_SQUARE_BRACKET = ']',\n}\n\nexport enum suffixToken {\n    PERCENTAGE = '%',\n    POUND = '#',\n}\n\nexport const SUFFIX_TOKEN_SET = new Set([suffixToken.PERCENTAGE as string, suffixToken.POUND]);\n\nexport enum prefixToken {\n    AT = '@',\n    MINUS = '-',\n    PLUS = '+',\n}\n\nexport const SPACE_TOKEN = ' ';\n"],"mappings":"AAgBO,WAAK,gBAAL,kBAAKA,mBAAL;AACH,EAAAA,eAAA,UAAO;AACP,EAAAA,eAAA,WAAQ;AACR,EAAAA,eAAA,cAAW;AACX,EAAAA,eAAA,aAAU;AACV,EAAAA,eAAA,iBAAc;AACd,EAAAA,eAAA,WAAQ;AACR,EAAAA,eAAA,YAAS;AACT,EAAAA,eAAA,eAAY;AACZ,EAAAA,eAAA,kBAAe;AACf,EAAAA,eAAA,2BAAwB;AACxB,EAAAA,eAAA,eAAY;AACZ,EAAAA,eAAA,wBAAqB;AAZb,SAAAA;AAAA,GAAA;AAeL,WAAK,eAAL,kBAAKC,kBAAL;AACH,EAAAA,cAAA,YAAS;AACT,EAAAA,cAAA,eAAY;AACZ,EAAAA,cAAA,kBAAe;AACf,EAAAA,cAAA,2BAAwB;AACxB,EAAAA,cAAA,eAAY;AACZ,EAAAA,cAAA,wBAAqB;AANb,SAAAA;AAAA,GAAA;AASL,aAAM,0BAA0B,oBAAI,IAAI;AAAA,EAC3C,CAAC,sBAAmC,CAAC;AAAA,EACrC,CAAC,qBAAmC,CAAC;AAAA,EACrC,CAAC,kCAA+C,CAAC;AAAA,EACjD,CAAC,kBAAgC,CAAC;AAAA,EAClC,CAAC,wBAAsC,CAAC;AAAA,EACxC,CAAC,+BAA4C,CAAC;AAAA,EAC9C,CAAC,uBAAqC,CAAC;AAAA,EACvC,CAAC,gBAA8B,CAAC;AAAA,EAChC,CAAC,iBAA+B,CAAC;AAAA,EACjC,CAAC,mBAAiC,CAAC;AAAA,EACnC,CAAC,oBAAkC,CAAC;AAAA,EACpC,CAAC,iBAA+B,CAAC;AACrC,CAAC;AAEM,aAAM,qBAAqB,IAAI,IAAI,wBAAwB,KAAK,CAAC;AAEjE,aAAM,6BAA6B,oBAAI,IAAI;AAAA,EAC9C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AAEM,WAAK,aAAL,kBAAKC,gBAAL;AACH,EAAAA,YAAA,kBAAe;AACf,EAAAA,YAAA,mBAAgB;AAChB,EAAAA,YAAA,WAAQ;AACR,EAAAA,YAAA,sBAAmB;AACnB,EAAAA,YAAA,sBAAmB;AACnB,EAAAA,YAAA,iBAAc;AACd,EAAAA,YAAA,kBAAe;AACf,EAAAA,YAAA,WAAQ;AACR,EAAAA,YAAA,yBAAsB;AACtB,EAAAA,YAAA,0BAAuB;AAVf,SAAAA;AAAA,GAAA;AAaL,WAAK,cAAL,kBAAKC,iBAAL;AACH,EAAAA,aAAA,gBAAa;AACb,EAAAA,aAAA,WAAQ;AAFA,SAAAA;AAAA,GAAA;AAKL,aAAM,mBAAmB,oBAAI,IAAI,CAAC,sBAAkC,eAAiB,CAAC;AAEtF,WAAK,cAAL,kBAAKC,iBAAL;AACH,EAAAA,aAAA,QAAK;AACL,EAAAA,aAAA,WAAQ;AACR,EAAAA,aAAA,UAAO;AAHC,SAAAA;AAAA,GAAA;AAML,aAAM,cAAc;","names":["operatorToken","compareToken","matchToken","suffixToken","prefixToken"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ec3b32bec4eb6c9c5d3bb002b33dc3d2d5223129"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/regex.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/regex.ts","statementMap":{"0":{"start":{"line":2,"column":31},"end":{"line":2,"column":65}},"1":{"start":{"line":3,"column":44},"end":{"line":3,"column":71}},"2":{"start":{"line":4,"column":32},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":31},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":28},"end":{"line":6,"column":41}},"5":{"start":{"line":7,"column":21},"end":{"line":7,"column":32}},"6":{"start":{"line":8,"column":18},"end":{"line":8,"column":31}},"7":{"start":{"line":9,"column":42},"end":{"line":9,"column":91}},"8":{"start":{"line":10,"column":41},"end":{"line":10,"column":112}},"9":{"start":{"line":11,"column":46},"end":{"line":11,"column":170}},"10":{"start":{"line":12,"column":59},"end":{"line":12,"column":101}},"11":{"start":{"line":13,"column":44},"end":{"line":13,"column":133}},"12":{"start":{"line":14,"column":57},"end":{"line":14,"column":97}},"13":{"start":{"line":15,"column":35},"end":{"line":15,"column":149}},"14":{"start":{"line":16,"column":48},"end":{"line":16,"column":79}},"15":{"start":{"line":17,"column":38},"end":{"line":17,"column":158}},"16":{"start":{"line":18,"column":51},"end":{"line":18,"column":85}},"17":{"start":{"line":19,"column":42},"end":{"line":19,"column":113}},"18":{"start":{"line":20,"column":55},"end":{"line":20,"column":93}},"19":{"start":{"line":21,"column":45},"end":{"line":21,"column":119}},"20":{"start":{"line":22,"column":58},"end":{"line":22,"column":99}},"21":{"start":{"line":23,"column":25},"end":{"line":23,"column":93}},"22":{"start":{"line":24,"column":26},"end":{"line":24,"column":48}},"23":{"start":{"line":25,"column":28},"end":{"line":25,"column":46}},"24":{"start":{"line":26,"column":36},"end":{"line":26,"column":97}},"25":{"start":{"line":27,"column":48},"end":{"line":27,"column":92}},"26":{"start":{"line":28,"column":51},"end":{"line":28,"column":169}},"27":{"start":{"line":29,"column":53},"end":{"line":29,"column":217}},"28":{"start":{"line":30,"column":40},"end":{"line":30,"column":47}},"29":{"start":{"line":31,"column":53},"end":{"line":31,"column":94}},"30":{"start":{"line":32,"column":33},"end":{"line":32,"column":40}},"31":{"start":{"line":33,"column":46},"end":{"line":33,"column":80}},"32":{"start":{"line":35,"column":2},"end":{"line":35,"column":58}},"33":{"start":{"line":36,"column":2},"end":{"line":36,"column":63}},"34":{"start":{"line":39,"column":2},"end":{"line":39,"column":60}},"35":{"start":{"line":40,"column":2},"end":{"line":40,"column":65}},"36":{"start":{"line":43,"column":2},"end":{"line":43,"column":49}},"37":{"start":{"line":44,"column":2},"end":{"line":44,"column":54}},"38":{"start":{"line":47,"column":2},"end":{"line":47,"column":52}},"39":{"start":{"line":48,"column":2},"end":{"line":48,"column":57}},"40":{"start":{"line":51,"column":2},"end":{"line":51,"column":56}},"41":{"start":{"line":52,"column":2},"end":{"line":52,"column":61}},"42":{"start":{"line":55,"column":2},"end":{"line":55,"column":59}},"43":{"start":{"line":56,"column":2},"end":{"line":56,"column":64}},"44":{"start":{"line":59,"column":2},"end":{"line":59,"column":54}},"45":{"start":{"line":60,"column":2},"end":{"line":60,"column":59}},"46":{"start":{"line":63,"column":2},"end":{"line":63,"column":47}},"47":{"start":{"line":64,"column":2},"end":{"line":64,"column":52}},"48":{"start":{"line":67,"column":2},"end":{"line":67,"column":134}}},"fnMap":{"0":{"name":"regexTestSingeRange","decl":{"start":{"line":34,"column":16},"end":{"line":34,"column":35}},"loc":{"start":{"line":34,"column":43},"end":{"line":37,"column":1}},"line":34},"1":{"name":"regexTestMultipleRange","decl":{"start":{"line":38,"column":16},"end":{"line":38,"column":38}},"loc":{"start":{"line":38,"column":46},"end":{"line":41,"column":1}},"line":38},"2":{"name":"regexTestRow","decl":{"start":{"line":42,"column":16},"end":{"line":42,"column":28}},"loc":{"start":{"line":42,"column":36},"end":{"line":45,"column":1}},"line":42},"3":{"name":"regexTestColumn","decl":{"start":{"line":46,"column":16},"end":{"line":46,"column":31}},"loc":{"start":{"line":46,"column":39},"end":{"line":49,"column":1}},"line":46},"4":{"name":"regexTestSingleRow","decl":{"start":{"line":50,"column":16},"end":{"line":50,"column":34}},"loc":{"start":{"line":50,"column":42},"end":{"line":53,"column":1}},"line":50},"5":{"name":"regexTestSingleColumn","decl":{"start":{"line":54,"column":16},"end":{"line":54,"column":37}},"loc":{"start":{"line":54,"column":45},"end":{"line":57,"column":1}},"line":54},"6":{"name":"regexTestSuperTableColumn","decl":{"start":{"line":58,"column":16},"end":{"line":58,"column":41}},"loc":{"start":{"line":58,"column":49},"end":{"line":61,"column":1}},"line":58},"7":{"name":"regexTestArrayValue","decl":{"start":{"line":62,"column":16},"end":{"line":62,"column":35}},"loc":{"start":{"line":62,"column":43},"end":{"line":65,"column":1}},"line":62},"8":{"name":"isReferenceString","decl":{"start":{"line":66,"column":16},"end":{"line":66,"column":33}},"loc":{"start":{"line":66,"column":45},"end":{"line":68,"column":1}},"line":66}},"branchMap":{"0":{"loc":{"start":{"line":67,"column":9},"end":{"line":67,"column":133}},"type":"binary-expr","locations":[{"start":{"line":67,"column":9},"end":{"line":67,"column":39}},{"start":{"line":67,"column":43},"end":{"line":67,"column":76}},{"start":{"line":67,"column":80},"end":{"line":67,"column":103}},{"start":{"line":67,"column":107},"end":{"line":67,"column":133}}],"line":67}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":2,"47":2,"48":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":2,"8":0},"b":{"0":[0,0,0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/regex.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { prefixToken, suffixToken } from './token';\n\n// export const UNIT_NAME_REGEX = '\\'?\\\\[((?![\\\\/?:\"<>|*\\\\\\\\]).)*\\\\]';\n// export const UNIT_NAME_REGEX = '\\'?\\\\[((?![\\\\/?:\"<>|*\\\\\\\\]).)*?\\\\]';\n// export const UNIT_NAME_REGEX = '\\\\[((?![\\\\/?:\"<>|*\\\\\\\\]).)*?\\\\]';\n\nexport const UNIT_NAME_REGEX = '\\\\[([^\\\\[\\\\]\\\\/?:\"<>|*\\\\\\\\]+)\\\\]'; // '[Book-1.xlsx]Sheet1'!$A$4 gets [Book-1.xlsx] as unitId\n\nexport const UNIT_NAME_REGEX_PRECOMPILING = new RegExp(UNIT_NAME_REGEX);\n\nexport const SHEET_NAME_REGEX = '((?![\\\\[\\\\]\\\\/?*\\\\\\\\]).)*!';\n\nexport const ABSOLUTE_SYMBOL = '$';\n\nexport const RANGE_SYMBOL = '\\\\s*?:\\\\s*?';\n\n// Column numbers range from A to Z, and row numbers start at 1\nconst COLUMN_REGEX = '[A-Za-z]+';\nconst ROW_REGEX = '[1-9][0-9]*';\n\nexport const UNIT_NAME_SHEET_NAME_REGEX = `'?(${UNIT_NAME_REGEX})?(${SHEET_NAME_REGEX})?'?`;\n\nexport const SIMPLE_SINGLE_RANGE_REGEX = `\\\\${ABSOLUTE_SYMBOL}?${COLUMN_REGEX}\\\\${ABSOLUTE_SYMBOL}?${ROW_REGEX}`;\n\nexport const REFERENCE_MULTIPLE_RANGE_REGEX = `^(${prefixToken.AT})?${UNIT_NAME_SHEET_NAME_REGEX}${SIMPLE_SINGLE_RANGE_REGEX}${RANGE_SYMBOL}${SIMPLE_SINGLE_RANGE_REGEX}$`;\n\nexport const REFERENCE_MULTIPLE_RANGE_REGEX_PRECOMPILING = new RegExp(REFERENCE_MULTIPLE_RANGE_REGEX);\n\nexport const REFERENCE_SINGLE_RANGE_REGEX = `^${UNIT_NAME_SHEET_NAME_REGEX}\\\\s*?${SIMPLE_SINGLE_RANGE_REGEX}(${suffixToken.POUND})?$`;\n\nexport const REFERENCE_SINGLE_RANGE_REGEX_PRECOMPILING = new RegExp(REFERENCE_SINGLE_RANGE_REGEX);\n\nexport const REFERENCE_REGEX_ROW = `^${UNIT_NAME_SHEET_NAME_REGEX}\\\\${ABSOLUTE_SYMBOL}?${ROW_REGEX}${RANGE_SYMBOL}\\\\${ABSOLUTE_SYMBOL}?${ROW_REGEX}$`;\n\nexport const REFERENCE_REGEX_ROW_PRECOMPILING = new RegExp(REFERENCE_REGEX_ROW);\n\nexport const REFERENCE_REGEX_COLUMN = `^${UNIT_NAME_SHEET_NAME_REGEX}\\\\${ABSOLUTE_SYMBOL}?${COLUMN_REGEX}${RANGE_SYMBOL}\\\\${ABSOLUTE_SYMBOL}?${COLUMN_REGEX}$`;\n\nexport const REFERENCE_REGEX_COLUMN_PRECOMPILING = new RegExp(REFERENCE_REGEX_COLUMN);\n\nexport const REFERENCE_REGEX_SINGLE_ROW = `^${UNIT_NAME_SHEET_NAME_REGEX}\\\\s*?\\\\${ABSOLUTE_SYMBOL}?${ROW_REGEX}$`;\n\nexport const REFERENCE_REGEX_SINGLE_ROW_PRECOMPILING = new RegExp(REFERENCE_REGEX_SINGLE_ROW);\n\nexport const REFERENCE_REGEX_SINGLE_COLUMN = `^${UNIT_NAME_SHEET_NAME_REGEX}\\\\s*?\\\\${ABSOLUTE_SYMBOL}?${COLUMN_REGEX}$`;\n\nexport const REFERENCE_REGEX_SINGLE_COLUMN_PRECOMPILING = new RegExp(REFERENCE_REGEX_SINGLE_COLUMN);\n\nconst TABLE_NAME_REGEX = '((?![~!@#$%^&*()_+<>?:,./;’，。、‘：“《》？~！@#￥%……（）【】\\\\[\\\\]\\\\/\\\\\\\\]).)+';\n\nconst TABLE_TITLE_REGEX = '\\\\[#.+\\\\]\\\\s*?,\\\\s*?';\n\nconst TABLE_CONTENT_REGEX = '\\\\[((?<!#).)*\\\\]';\n\nconst TABLE_MULTIPLE_COLUMN_REGEX = `${TABLE_CONTENT_REGEX}${RANGE_SYMBOL}${TABLE_CONTENT_REGEX}`;\n\nexport const REFERENCE_TABLE_ALL_COLUMN_REGEX = `^(${UNIT_NAME_REGEX})?${TABLE_NAME_REGEX}$`;\n\nexport const REFERENCE_TABLE_SINGLE_COLUMN_REGEX = `^(${UNIT_NAME_REGEX})?${TABLE_NAME_REGEX}(${TABLE_CONTENT_REGEX}|\\\\[${TABLE_TITLE_REGEX}${TABLE_CONTENT_REGEX}\\\\])+$`; // =Table1[Column1] | =Table1[[#Title],[Column1]]\n\nexport const REFERENCE_TABLE_MULTIPLE_COLUMN_REGEX = `^(${UNIT_NAME_REGEX})?${TABLE_NAME_REGEX}(\\\\[${TABLE_MULTIPLE_COLUMN_REGEX}\\\\])?$|^${TABLE_NAME_REGEX}(\\\\[${TABLE_TITLE_REGEX}${TABLE_MULTIPLE_COLUMN_REGEX}\\\\])?$`; // =Table1[[#Title],[Column1]:[Column2]] | =Table1[[Column1]:[Column2]]\n\nexport const SUPER_TABLE_COLUMN_REGEX = '[.*?]';\n\nexport const SUPER_TABLE_COLUMN_REGEX_PRECOMPILING = new RegExp(SUPER_TABLE_COLUMN_REGEX, 'g');\n\nexport const ARRAY_VALUE_REGEX = '{.*?}';\n\nexport const ARRAY_VALUE_REGEX_PRECOMPILING = new RegExp(ARRAY_VALUE_REGEX, 'g');\n\nexport function regexTestSingeRange(token: string): boolean {\n    REFERENCE_SINGLE_RANGE_REGEX_PRECOMPILING.lastIndex = 0;\n    return REFERENCE_SINGLE_RANGE_REGEX_PRECOMPILING.test(token);\n}\n\nexport function regexTestMultipleRange(token: string): boolean {\n    REFERENCE_MULTIPLE_RANGE_REGEX_PRECOMPILING.lastIndex = 0;\n    return REFERENCE_MULTIPLE_RANGE_REGEX_PRECOMPILING.test(token);\n}\n\nexport function regexTestRow(token: string): boolean {\n    REFERENCE_REGEX_ROW_PRECOMPILING.lastIndex = 0;\n    return REFERENCE_REGEX_ROW_PRECOMPILING.test(token);\n}\n\nexport function regexTestColumn(token: string): boolean {\n    REFERENCE_REGEX_COLUMN_PRECOMPILING.lastIndex = 0;\n    return REFERENCE_REGEX_COLUMN_PRECOMPILING.test(token);\n}\n\nexport function regexTestSingleRow(token: string): boolean {\n    REFERENCE_REGEX_SINGLE_ROW_PRECOMPILING.lastIndex = 0;\n    return REFERENCE_REGEX_SINGLE_ROW_PRECOMPILING.test(token);\n}\n\nexport function regexTestSingleColumn(token: string): boolean {\n    REFERENCE_REGEX_SINGLE_COLUMN_PRECOMPILING.lastIndex = 0;\n    return REFERENCE_REGEX_SINGLE_COLUMN_PRECOMPILING.test(token);\n}\n\nexport function regexTestSuperTableColumn(token: string): boolean {\n    SUPER_TABLE_COLUMN_REGEX_PRECOMPILING.lastIndex = 0;\n    return SUPER_TABLE_COLUMN_REGEX_PRECOMPILING.test(token);\n}\n\nexport function regexTestArrayValue(token: string): boolean {\n    ARRAY_VALUE_REGEX_PRECOMPILING.lastIndex = 0;\n    return ARRAY_VALUE_REGEX_PRECOMPILING.test(token);\n}\n\nexport function isReferenceString(refString: string) {\n    return (\n        regexTestSingeRange(refString) ||\n        regexTestMultipleRange(refString) ||\n        regexTestRow(refString) ||\n        regexTestColumn(refString)\n    );\n}\n"],"mappings":"AAgBA,SAAS,aAAa,mBAAmB;AAMlC,aAAM,kBAAkB;AAExB,aAAM,+BAA+B,IAAI,OAAO,eAAe;AAE/D,aAAM,mBAAmB;AAEzB,aAAM,kBAAkB;AAExB,aAAM,eAAe;AAG5B,MAAM,eAAe;AACrB,MAAM,YAAY;AAEX,aAAM,6BAA6B,MAAM,eAAe,MAAM,gBAAgB;AAE9E,aAAM,4BAA4B,KAAK,eAAe,IAAI,YAAY,KAAK,eAAe,IAAI,SAAS;AAEvG,aAAM,iCAAiC,KAAK,YAAY,EAAE,KAAK,0BAA0B,GAAG,yBAAyB,GAAG,YAAY,GAAG,yBAAyB;AAEhK,aAAM,8CAA8C,IAAI,OAAO,8BAA8B;AAE7F,aAAM,+BAA+B,IAAI,0BAA0B,QAAQ,yBAAyB,IAAI,YAAY,KAAK;AAEzH,aAAM,4CAA4C,IAAI,OAAO,4BAA4B;AAEzF,aAAM,sBAAsB,IAAI,0BAA0B,KAAK,eAAe,IAAI,SAAS,GAAG,YAAY,KAAK,eAAe,IAAI,SAAS;AAE3I,aAAM,mCAAmC,IAAI,OAAO,mBAAmB;AAEvE,aAAM,yBAAyB,IAAI,0BAA0B,KAAK,eAAe,IAAI,YAAY,GAAG,YAAY,KAAK,eAAe,IAAI,YAAY;AAEpJ,aAAM,sCAAsC,IAAI,OAAO,sBAAsB;AAE7E,aAAM,6BAA6B,IAAI,0BAA0B,UAAU,eAAe,IAAI,SAAS;AAEvG,aAAM,0CAA0C,IAAI,OAAO,0BAA0B;AAErF,aAAM,gCAAgC,IAAI,0BAA0B,UAAU,eAAe,IAAI,YAAY;AAE7G,aAAM,6CAA6C,IAAI,OAAO,6BAA6B;AAElG,MAAM,mBAAmB;AAEzB,MAAM,oBAAoB;AAE1B,MAAM,sBAAsB;AAE5B,MAAM,8BAA8B,GAAG,mBAAmB,GAAG,YAAY,GAAG,mBAAmB;AAExF,aAAM,mCAAmC,KAAK,eAAe,KAAK,gBAAgB;AAElF,aAAM,sCAAsC,KAAK,eAAe,KAAK,gBAAgB,IAAI,mBAAmB,OAAO,iBAAiB,GAAG,mBAAmB;AAE1J,aAAM,wCAAwC,KAAK,eAAe,KAAK,gBAAgB,OAAO,2BAA2B,WAAW,gBAAgB,OAAO,iBAAiB,GAAG,2BAA2B;AAE1M,aAAM,2BAA2B;AAEjC,aAAM,wCAAwC,IAAI,OAAO,0BAA0B,GAAG;AAEtF,aAAM,oBAAoB;AAE1B,aAAM,iCAAiC,IAAI,OAAO,mBAAmB,GAAG;AAExE,gBAAS,oBAAoB,OAAwB;AACxD,4CAA0C,YAAY;AACtD,SAAO,0CAA0C,KAAK,KAAK;AAC/D;AAEO,gBAAS,uBAAuB,OAAwB;AAC3D,8CAA4C,YAAY;AACxD,SAAO,4CAA4C,KAAK,KAAK;AACjE;AAEO,gBAAS,aAAa,OAAwB;AACjD,mCAAiC,YAAY;AAC7C,SAAO,iCAAiC,KAAK,KAAK;AACtD;AAEO,gBAAS,gBAAgB,OAAwB;AACpD,sCAAoC,YAAY;AAChD,SAAO,oCAAoC,KAAK,KAAK;AACzD;AAEO,gBAAS,mBAAmB,OAAwB;AACvD,0CAAwC,YAAY;AACpD,SAAO,wCAAwC,KAAK,KAAK;AAC7D;AAEO,gBAAS,sBAAsB,OAAwB;AAC1D,6CAA2C,YAAY;AACvD,SAAO,2CAA2C,KAAK,KAAK;AAChE;AAEO,gBAAS,0BAA0B,OAAwB;AAC9D,wCAAsC,YAAY;AAClD,SAAO,sCAAsC,KAAK,KAAK;AAC3D;AAEO,gBAAS,oBAAoB,OAAwB;AACxD,iCAA+B,YAAY;AAC3C,SAAO,+BAA+B,KAAK,KAAK;AACpD;AAEO,gBAAS,kBAAkB,WAAmB;AACjD,SACI,oBAAoB,SAAS,KAC7B,uBAAuB,SAAS,KAChC,aAAa,SAAS,KACtB,gBAAgB,SAAS;AAEjC;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dd7593723ab97e958c533cc9df673dd7e0af8263"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/compare.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/compare.ts","statementMap":{"0":{"start":{"line":2,"column":51},"end":{"line":6,"column":31}},"1":{"start":{"line":3,"column":2},"end":{"line":3,"column":68}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":68}},"3":{"start":{"line":5,"column":2},"end":{"line":5,"column":32}},"4":{"start":{"line":7,"column":50},"end":{"line":12,"column":30}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":72}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":66}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":66}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":31}},"9":{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":65}},"11":{"start":{"line":17,"column":2},"end":{"line":19,"column":4}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":30}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":56}},"14":{"start":{"line":25,"column":18},"end":{"line":36,"column":4}},"15":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"16":{"start":{"line":27,"column":6},"end":{"line":27,"column":39}},"17":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"18":{"start":{"line":30,"column":6},"end":{"line":30,"column":18}},"19":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"20":{"start":{"line":33,"column":6},"end":{"line":33,"column":17}},"21":{"start":{"line":35,"column":4},"end":{"line":35,"column":17}},"22":{"start":{"line":37,"column":16},"end":{"line":37,"column":42}},"23":{"start":{"line":38,"column":2},"end":{"line":38,"column":34}},"24":{"start":{"line":41,"column":2},"end":{"line":46,"column":5}},"25":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"26":{"start":{"line":43,"column":6},"end":{"line":43,"column":32}},"27":{"start":{"line":45,"column":4},"end":{"line":45,"column":15}},"28":{"start":{"line":49,"column":15},"end":{"line":49,"column":20}},"29":{"start":{"line":50,"column":2},"end":{"line":67,"column":3}},"30":{"start":{"line":52,"column":6},"end":{"line":52,"column":52}},"31":{"start":{"line":53,"column":6},"end":{"line":53,"column":12}},"32":{"start":{"line":55,"column":6},"end":{"line":55,"column":53}},"33":{"start":{"line":56,"column":6},"end":{"line":56,"column":12}},"34":{"start":{"line":59,"column":6},"end":{"line":59,"column":93}},"35":{"start":{"line":60,"column":6},"end":{"line":60,"column":12}},"36":{"start":{"line":63,"column":6},"end":{"line":63,"column":53}},"37":{"start":{"line":64,"column":6},"end":{"line":64,"column":12}},"38":{"start":{"line":66,"column":6},"end":{"line":66,"column":12}},"39":{"start":{"line":68,"column":2},"end":{"line":68,"column":16}},"40":{"start":{"line":71,"column":2},"end":{"line":71,"column":50}},"41":{"start":{"line":74,"column":2},"end":{"line":83,"column":3}},"42":{"start":{"line":76,"column":6},"end":{"line":76,"column":25}},"43":{"start":{"line":78,"column":6},"end":{"line":78,"column":28}},"44":{"start":{"line":80,"column":6},"end":{"line":80,"column":25}},"45":{"start":{"line":82,"column":6},"end":{"line":82,"column":28}},"46":{"start":{"line":86,"column":2},"end":{"line":86,"column":60}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":52},"end":{"line":2,"column":53}},"loc":{"start":{"line":2,"column":80},"end":{"line":6,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":51},"end":{"line":7,"column":52}},"loc":{"start":{"line":7,"column":78},"end":{"line":12,"column":1}},"line":7},"2":{"name":"getCompare","decl":{"start":{"line":13,"column":16},"end":{"line":13,"column":26}},"loc":{"start":{"line":13,"column":29},"end":{"line":20,"column":1}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":10}},"loc":{"start":{"line":17,"column":19},"end":{"line":19,"column":3}},"line":17},"4":{"name":"isWildcard","decl":{"start":{"line":21,"column":16},"end":{"line":21,"column":26}},"loc":{"start":{"line":21,"column":32},"end":{"line":23,"column":1}},"line":21},"5":{"name":"isMatchWildcard","decl":{"start":{"line":24,"column":16},"end":{"line":24,"column":31}},"loc":{"start":{"line":24,"column":53},"end":{"line":39,"column":1}},"line":24},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":57},"end":{"line":25,"column":58}},"loc":{"start":{"line":25,"column":68},"end":{"line":36,"column":3}},"line":25},"7":{"name":"replaceWildcard","decl":{"start":{"line":40,"column":16},"end":{"line":40,"column":31}},"loc":{"start":{"line":40,"column":39},"end":{"line":47,"column":1}},"line":40},"8":{"name":"(anonymous_8)","decl":{"start":{"line":41,"column":34},"end":{"line":41,"column":35}},"loc":{"start":{"line":41,"column":45},"end":{"line":46,"column":3}},"line":41},"9":{"name":"compareWithWildcard","decl":{"start":{"line":48,"column":16},"end":{"line":48,"column":35}},"loc":{"start":{"line":48,"column":67},"end":{"line":69,"column":1}},"line":48},"10":{"name":"escapeRegExp","decl":{"start":{"line":70,"column":16},"end":{"line":70,"column":28}},"loc":{"start":{"line":70,"column":34},"end":{"line":72,"column":1}},"line":70},"11":{"name":"getMatchModeValue","decl":{"start":{"line":73,"column":16},"end":{"line":73,"column":33}},"loc":{"start":{"line":73,"column":50},"end":{"line":84,"column":1}},"line":73},"12":{"name":"getSearchModeValue","decl":{"start":{"line":85,"column":16},"end":{"line":85,"column":34}},"loc":{"start":{"line":85,"column":52},"end":{"line":87,"column":1}},"line":85}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":3},"end":{"line":6,"column":30}},"type":"binary-expr","locations":[{"start":{"line":6,"column":3},"end":{"line":6,"column":24}},{"start":{"line":6,"column":28},"end":{"line":6,"column":30}}],"line":6},"1":{"loc":{"start":{"line":12,"column":3},"end":{"line":12,"column":29}},"type":"binary-expr","locations":[{"start":{"line":12,"column":3},"end":{"line":12,"column":23}},{"start":{"line":12,"column":27},"end":{"line":12,"column":29}}],"line":12},"2":{"loc":{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},{"start":{},"end":{}}],"line":14},"3":{"loc":{"start":{"line":14,"column":6},"end":{"line":14,"column":27}},"type":"binary-expr","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":10}},{"start":{"line":14,"column":14},"end":{"line":14,"column":27}}],"line":14},"4":{"loc":{"start":{"line":22,"column":9},"end":{"line":22,"column":55}},"type":"binary-expr","locations":[{"start":{"line":22,"column":9},"end":{"line":22,"column":30}},{"start":{"line":22,"column":34},"end":{"line":22,"column":55}}],"line":22},"5":{"loc":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},{"start":{},"end":{}}],"line":26},"6":{"loc":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},{"start":{},"end":{}}],"line":29},"7":{"loc":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},{"start":{},"end":{}}],"line":32},"8":{"loc":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},{"start":{},"end":{}}],"line":42},"9":{"loc":{"start":{"line":50,"column":2},"end":{"line":67,"column":3}},"type":"switch","locations":[{"start":{"line":51,"column":4},"end":{"line":53,"column":12}},{"start":{"line":54,"column":4},"end":{"line":56,"column":12}},{"start":{"line":57,"column":4},"end":{"line":57,"column":35}},{"start":{"line":58,"column":4},"end":{"line":60,"column":12}},{"start":{"line":61,"column":4},"end":{"line":61,"column":32}},{"start":{"line":62,"column":4},"end":{"line":64,"column":12}},{"start":{"line":65,"column":4},"end":{"line":66,"column":12}}],"line":50},"10":{"loc":{"start":{"line":59,"column":15},"end":{"line":59,"column":92}},"type":"binary-expr","locations":[{"start":{"line":59,"column":15},"end":{"line":59,"column":51}},{"start":{"line":59,"column":55},"end":{"line":59,"column":92}}],"line":59},"11":{"loc":{"start":{"line":74,"column":2},"end":{"line":83,"column":3}},"type":"switch","locations":[{"start":{"line":75,"column":4},"end":{"line":76,"column":25}},{"start":{"line":77,"column":4},"end":{"line":78,"column":28}},{"start":{"line":79,"column":4},"end":{"line":80,"column":25}},{"start":{"line":81,"column":4},"end":{"line":82,"column":28}}],"line":74},"12":{"loc":{"start":{"line":86,"column":9},"end":{"line":86,"column":49}},"type":"cond-expr","locations":[{"start":{"line":86,"column":34},"end":{"line":86,"column":35}},{"start":{"line":86,"column":48},"end":{"line":86,"column":49}}],"line":86}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},"f":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"0":[1,1],"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0,0,0,0],"10":[0,0],"11":[0,0,0,0],"12":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/compare.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { compareToken } from '../../basics/token';\n\n/**\n * For SearchType\n */\nexport enum ArrayBinarySearchType {\n    MIN, // Ascending order\n    MAX, // Descending order\n}\n\n/**\n * For MatchType\n */\nexport enum ArrayOrderSearchType {\n    NORMAL, // Exact match.\n    MIN, // Exact match. If none found, return the next smaller item.\n    MAX, // Exact match. If none found, return the next larger item.\n}\n\nexport function getCompare() {\n    if (Intl && Intl.Collator) {\n        return new Intl.Collator(undefined, { numeric: false }).compare;\n    }\n\n    return (a: string, b: string): number => {\n        return a.localeCompare(b);\n    };\n}\n\nexport function isWildcard(str: string) {\n    return str.indexOf('*') > -1 || str.indexOf('?') > -1;\n}\n\nexport function isMatchWildcard(currentValue: string, value: string) {\n    const pattern = escapeRegExp(value).replace(/~?[*?]/g, (match) => {\n        if (match.startsWith('~')) {\n            return `\\\\${match.substring(1)}`;\n        }\n        if (match === '*') {\n            return '.*';\n        }\n        if (match === '?') {\n            return '.';\n        }\n        return match;\n    });\n    const regex = new RegExp(`^${pattern}$`);\n    return regex.test(currentValue);\n}\n\nexport function replaceWildcard(value: string) {\n    return value.replace(/~?[*?]/g, (match) => {\n        if (match.startsWith('~')) {\n            return match.substring(1);\n        }\n        return ' ';\n    });\n}\n\nexport function compareWithWildcard(currentValue: string, value: string, operator: compareToken) {\n    let result = false;\n\n    switch (operator) {\n        case compareToken.EQUALS:\n            result = isMatchWildcard(currentValue, value);\n            break;\n        case compareToken.NOT_EQUAL:\n            result = !isMatchWildcard(currentValue, value);\n            break;\n        case compareToken.GREATER_THAN:\n        case compareToken.GREATER_THAN_OR_EQUAL:\n            result = isMatchWildcard(currentValue, value) || currentValue > replaceWildcard(value);\n\n            break;\n\n        case compareToken.LESS_THAN:\n        case compareToken.LESS_THAN_OR_EQUAL:\n            result = currentValue < replaceWildcard(value);\n            break;\n\n        default:\n            break;\n    }\n\n    return result;\n}\n\nexport function escapeRegExp(str: string) {\n    return str.replace(/[.+^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nexport function getMatchModeValue(matchModeValue: number) {\n    switch (matchModeValue) {\n        case 1:\n            return ArrayOrderSearchType.MAX;\n        case 0:\n            return ArrayOrderSearchType.NORMAL;\n        case -1:\n            return ArrayOrderSearchType.MIN;\n        default:\n            return ArrayOrderSearchType.NORMAL;\n    }\n}\n\nexport function getSearchModeValue(searchModeValue: number) {\n    return searchModeValue === -2 ? ArrayBinarySearchType.MAX : ArrayBinarySearchType.MIN;\n}\n"],"mappings":"AAgBA,SAAS,oBAAoB;AAKtB,WAAK,wBAAL,kBAAKA,2BAAL;AACH,EAAAA,8CAAA;AACA,EAAAA,8CAAA;AAFQ,SAAAA;AAAA,GAAA;AAQL,WAAK,uBAAL,kBAAKC,0BAAL;AACH,EAAAA,4CAAA;AACA,EAAAA,4CAAA;AACA,EAAAA,4CAAA;AAHQ,SAAAA;AAAA,GAAA;AAML,gBAAS,aAAa;AACzB,MAAI,QAAQ,KAAK,UAAU;AACvB,WAAO,IAAI,KAAK,SAAS,QAAW,EAAE,SAAS,MAAM,CAAC,EAAE;AAAA,EAC5D;AAEA,SAAO,CAAC,GAAW,MAAsB;AACrC,WAAO,EAAE,cAAc,CAAC;AAAA,EAC5B;AACJ;AAEO,gBAAS,WAAW,KAAa;AACpC,SAAO,IAAI,QAAQ,GAAG,IAAI,MAAM,IAAI,QAAQ,GAAG,IAAI;AACvD;AAEO,gBAAS,gBAAgB,cAAsB,OAAe;AACjE,QAAM,UAAU,aAAa,KAAK,EAAE,QAAQ,WAAW,CAAC,UAAU;AAC9D,QAAI,MAAM,WAAW,GAAG,GAAG;AACvB,aAAO,KAAK,MAAM,UAAU,CAAC,CAAC;AAAA,IAClC;AACA,QAAI,UAAU,KAAK;AACf,aAAO;AAAA,IACX;AACA,QAAI,UAAU,KAAK;AACf,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX,CAAC;AACD,QAAM,QAAQ,IAAI,OAAO,IAAI,OAAO,GAAG;AACvC,SAAO,MAAM,KAAK,YAAY;AAClC;AAEO,gBAAS,gBAAgB,OAAe;AAC3C,SAAO,MAAM,QAAQ,WAAW,CAAC,UAAU;AACvC,QAAI,MAAM,WAAW,GAAG,GAAG;AACvB,aAAO,MAAM,UAAU,CAAC;AAAA,IAC5B;AACA,WAAO;AAAA,EACX,CAAC;AACL;AAEO,gBAAS,oBAAoB,cAAsB,OAAe,UAAwB;AAC7F,MAAI,SAAS;AAEb,UAAQ,UAAU;AAAA,IACd,KAAK,aAAa;AACd,eAAS,gBAAgB,cAAc,KAAK;AAC5C;AAAA,IACJ,KAAK,aAAa;AACd,eAAS,CAAC,gBAAgB,cAAc,KAAK;AAC7C;AAAA,IACJ,KAAK,aAAa;AAAA,IAClB,KAAK,aAAa;AACd,eAAS,gBAAgB,cAAc,KAAK,KAAK,eAAe,gBAAgB,KAAK;AAErF;AAAA,IAEJ,KAAK,aAAa;AAAA,IAClB,KAAK,aAAa;AACd,eAAS,eAAe,gBAAgB,KAAK;AAC7C;AAAA,IAEJ;AACI;AAAA,EACR;AAEA,SAAO;AACX;AAEO,gBAAS,aAAa,KAAa;AACtC,SAAO,IAAI,QAAQ,qBAAqB,MAAM;AAClD;AAEO,gBAAS,kBAAkB,gBAAwB;AACtD,UAAQ,gBAAgB;AAAA,IACpB,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX;AACI,aAAO;AAAA,EACf;AACJ;AAEO,gBAAS,mBAAmB,iBAAyB;AACxD,SAAO,oBAAoB,KAAK,cAA4B;AAChE;","names":["ArrayBinarySearchType","ArrayOrderSearchType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5b16382b2517b57a89ed38f7995172e14baa77e6"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/cache-lru.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/cache-lru.ts","statementMap":{"0":{"start":{"line":5,"column":4},"end":{"line":5,"column":41}},"1":{"start":{"line":8,"column":17},"end":{"line":8,"column":42}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":32}},"3":{"start":{"line":12,"column":17},"end":{"line":12,"column":42}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":33}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":24}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":50}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":45}},"8":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"9":{"start":{"line":26,"column":6},"end":{"line":26,"column":27}},"10":{"start":{"line":28,"column":4},"end":{"line":28,"column":51}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":2},"end":{"line":4,"column":3}},"loc":{"start":{"line":4,"column":26},"end":{"line":6,"column":3}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":2},"end":{"line":7,"column":3}},"loc":{"start":{"line":7,"column":27},"end":{"line":10,"column":3}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":2},"end":{"line":11,"column":3}},"loc":{"start":{"line":11,"column":21},"end":{"line":14,"column":3}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":2},"end":{"line":15,"column":3}},"loc":{"start":{"line":15,"column":10},"end":{"line":17,"column":3}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":18,"column":2},"end":{"line":18,"column":3}},"loc":{"start":{"line":18,"column":24},"end":{"line":20,"column":3}},"line":18},"5":{"name":"(anonymous_5)","decl":{"start":{"line":21,"column":2},"end":{"line":21,"column":3}},"loc":{"start":{"line":21,"column":31},"end":{"line":23,"column":3}},"line":21},"6":{"name":"(anonymous_6)","decl":{"start":{"line":24,"column":2},"end":{"line":24,"column":3}},"loc":{"start":{"line":24,"column":23},"end":{"line":29,"column":3}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},{"start":{},"end":{}}],"line":25}},"s":{"0":9,"1":5,"2":5,"3":22,"4":22,"5":0,"6":0,"7":0,"8":27,"9":27,"10":0},"f":{"0":9,"1":5,"2":22,"3":0,"4":0,"5":0,"6":27},"b":{"0":[27,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/cache-lru.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { hashAlgorithm, LRUMap } from '@univerjs/core';\n\nexport class FormulaAstLRU<T> {\n    private _cache: LRUMap<string, T>;\n\n    constructor(cacheCount: number) {\n        this._cache = new LRUMap<string, T>(cacheCount);\n    }\n\n    set(formulaString: string, node: T) {\n        const hash = this._hash(formulaString);\n        this._cache.set(hash, node);\n    }\n\n    get(formulaString: string) {\n        const hash = this._hash(formulaString);\n        return this._cache.get(hash);\n    }\n\n    clear() {\n        this._cache.clear();\n    }\n\n    delete(formulaString: string) {\n        this._cache.delete(this._hash(formulaString));\n    }\n\n    forEach(callbackfn: (value: T, key: string, map: LRUMap<string, T>) => void, thisArg?: any) {\n        this._cache.forEach(callbackfn, thisArg);\n    }\n\n    private _hash(formulaString: string) {\n        if (formulaString.length <= 64) {\n            return formulaString;\n        }\n        return hashAlgorithm(formulaString).toString();\n    }\n}\n"],"mappings":"AAgBA,SAAS,eAAe,cAAc;AAE/B,aAAM,cAAiB;AAAA,EAClB;AAAA,EAER,YAAY,YAAoB;AAC5B,SAAK,SAAS,IAAI,OAAkB,UAAU;AAAA,EAClD;AAAA,EAEA,IAAI,eAAuB,MAAS;AAChC,UAAM,OAAO,KAAK,MAAM,aAAa;AACrC,SAAK,OAAO,IAAI,MAAM,IAAI;AAAA,EAC9B;AAAA,EAEA,IAAI,eAAuB;AACvB,UAAM,OAAO,KAAK,MAAM,aAAa;AACrC,WAAO,KAAK,OAAO,IAAI,IAAI;AAAA,EAC/B;AAAA,EAEA,QAAQ;AACJ,SAAK,OAAO,MAAM;AAAA,EACtB;AAAA,EAEA,OAAO,eAAuB;AAC1B,SAAK,OAAO,OAAO,KAAK,MAAM,aAAa,CAAC;AAAA,EAChD;AAAA,EAEA,QAAQ,YAAqE,SAAe;AACxF,SAAK,OAAO,QAAQ,YAAY,OAAO;AAAA,EAC3C;AAAA,EAEQ,MAAM,eAAuB;AACjC,QAAI,cAAc,UAAU,IAAI;AAC5B,aAAO;AAAA,IACX;AACA,WAAO,cAAc,aAAa,EAAE,SAAS;AAAA,EACjD;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"662d71155df5d33697d4e4dfdff3112830d7493d"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/numfmt-kit.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/numfmt-kit.ts","statementMap":{"0":{"start":{"line":4,"column":24},"end":{"line":32,"column":1}},"1":{"start":{"line":33,"column":39},"end":{"line":47,"column":26}},"2":{"start":{"line":34,"column":2},"end":{"line":34,"column":66}},"3":{"start":{"line":35,"column":2},"end":{"line":35,"column":64}},"4":{"start":{"line":36,"column":2},"end":{"line":36,"column":68}},"5":{"start":{"line":37,"column":2},"end":{"line":37,"column":72}},"6":{"start":{"line":38,"column":2},"end":{"line":38,"column":60}},"7":{"start":{"line":39,"column":2},"end":{"line":39,"column":60}},"8":{"start":{"line":40,"column":2},"end":{"line":40,"column":72}},"9":{"start":{"line":41,"column":2},"end":{"line":41,"column":68}},"10":{"start":{"line":42,"column":2},"end":{"line":42,"column":72}},"11":{"start":{"line":43,"column":2},"end":{"line":43,"column":60}},"12":{"start":{"line":44,"column":2},"end":{"line":44,"column":67}},"13":{"start":{"line":45,"column":2},"end":{"line":45,"column":65}},"14":{"start":{"line":46,"column":2},"end":{"line":46,"column":27}},"15":{"start":{"line":48,"column":28},"end":{"line":62,"column":1}},"16":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"17":{"start":{"line":65,"column":4},"end":{"line":65,"column":16}},"18":{"start":{"line":67,"column":23},"end":{"line":67,"column":67}},"19":{"start":{"line":68,"column":20},"end":{"line":68,"column":58}},"20":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"21":{"start":{"line":70,"column":4},"end":{"line":70,"column":16}},"22":{"start":{"line":72,"column":21},"end":{"line":72,"column":45}},"23":{"start":{"line":73,"column":18},"end":{"line":73,"column":39}},"24":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"25":{"start":{"line":75,"column":4},"end":{"line":75,"column":16}},"26":{"start":{"line":77,"column":21},"end":{"line":77,"column":42}},"27":{"start":{"line":78,"column":2},"end":{"line":78,"column":35}},"28":{"start":{"line":79,"column":2},"end":{"line":79,"column":14}},"29":{"start":{"line":82,"column":25},"end":{"line":82,"column":56}},"30":{"start":{"line":83,"column":22},"end":{"line":83,"column":50}},"31":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"32":{"start":{"line":85,"column":4},"end":{"line":85,"column":19}},"33":{"start":{"line":87,"column":2},"end":{"line":89,"column":3}},"34":{"start":{"line":88,"column":4},"end":{"line":88,"column":22}},"35":{"start":{"line":90,"column":2},"end":{"line":95,"column":3}},"36":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"37":{"start":{"line":92,"column":6},"end":{"line":92,"column":21}},"38":{"start":{"line":94,"column":4},"end":{"line":94,"column":22}},"39":{"start":{"line":96,"column":2},"end":{"line":101,"column":3}},"40":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"41":{"start":{"line":98,"column":6},"end":{"line":98,"column":21}},"42":{"start":{"line":100,"column":4},"end":{"line":100,"column":22}},"43":{"start":{"line":102,"column":2},"end":{"line":107,"column":3}},"44":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"45":{"start":{"line":104,"column":6},"end":{"line":104,"column":21}},"46":{"start":{"line":106,"column":4},"end":{"line":106,"column":22}},"47":{"start":{"line":108,"column":2},"end":{"line":108,"column":20}},"48":{"start":{"line":110,"column":30},"end":{"line":110,"column":52}},"49":{"start":{"line":112,"column":27},"end":{"line":112,"column":61}},"50":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"51":{"start":{"line":114,"column":4},"end":{"line":114,"column":28}},"52":{"start":{"line":116,"column":15},"end":{"line":116,"column":46}},"53":{"start":{"line":117,"column":2},"end":{"line":117,"column":43}},"54":{"start":{"line":118,"column":2},"end":{"line":118,"column":14}},"55":{"start":{"line":121,"column":2},"end":{"line":121,"column":32}},"56":{"start":{"line":124,"column":2},"end":{"line":126,"column":3}},"57":{"start":{"line":125,"column":4},"end":{"line":125,"column":30}},"58":{"start":{"line":127,"column":15},"end":{"line":127,"column":56}},"59":{"start":{"line":128,"column":2},"end":{"line":128,"column":35}},"60":{"start":{"line":131,"column":2},"end":{"line":131,"column":94}},"61":{"start":{"line":131,"column":42},"end":{"line":131,"column":64}},"62":{"start":{"line":135,"column":2},"end":{"line":139,"column":3}},"63":{"start":{"line":136,"column":4},"end":{"line":136,"column":23}},"64":{"start":{"line":137,"column":9},"end":{"line":139,"column":3}},"65":{"start":{"line":138,"column":4},"end":{"line":138,"column":27}},"66":{"start":{"line":140,"column":30},"end":{"line":140,"column":66}},"67":{"start":{"line":141,"column":26},"end":{"line":141,"column":58}},"68":{"start":{"line":142,"column":2},"end":{"line":147,"column":3}},"69":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"70":{"start":{"line":144,"column":6},"end":{"line":144,"column":16}},"71":{"start":{"line":146,"column":4},"end":{"line":146,"column":23}},"72":{"start":{"line":148,"column":2},"end":{"line":153,"column":3}},"73":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"74":{"start":{"line":150,"column":6},"end":{"line":150,"column":25}},"75":{"start":{"line":152,"column":4},"end":{"line":152,"column":14}},"76":{"start":{"line":154,"column":2},"end":{"line":154,"column":40}},"77":{"start":{"line":156,"column":49},"end":{"line":163,"column":2}},"78":{"start":{"line":165,"column":2},"end":{"line":165,"column":53}},"79":{"start":{"line":168,"column":22},"end":{"line":168,"column":34}},"80":{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},"81":{"start":{"line":170,"column":4},"end":{"line":170,"column":24}},"82":{"start":{"line":172,"column":16},"end":{"line":172,"column":18}},"83":{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},"84":{"start":{"line":174,"column":4},"end":{"line":174,"column":46}},"85":{"start":{"line":176,"column":2},"end":{"line":176,"column":112}},"86":{"start":{"line":179,"column":2},"end":{"line":179,"column":72}},"87":{"start":{"line":181,"column":35},"end":{"line":181,"column":57}},"88":{"start":{"line":183,"column":15},"end":{"line":183,"column":20}},"89":{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},"90":{"start":{"line":185,"column":4},"end":{"line":185,"column":33}},"91":{"start":{"line":187,"column":21},"end":{"line":187,"column":59}},"92":{"start":{"line":188,"column":2},"end":{"line":194,"column":3}},"93":{"start":{"line":189,"column":4},"end":{"line":193,"column":6}},"94":{"start":{"line":195,"column":24},"end":{"line":195,"column":50}},"95":{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},"96":{"start":{"line":197,"column":4},"end":{"line":197,"column":75}},"97":{"start":{"line":199,"column":22},"end":{"line":199,"column":46}},"98":{"start":{"line":200,"column":2},"end":{"line":202,"column":3}},"99":{"start":{"line":201,"column":4},"end":{"line":201,"column":71}},"100":{"start":{"line":203,"column":22},"end":{"line":203,"column":46}},"101":{"start":{"line":204,"column":2},"end":{"line":206,"column":3}},"102":{"start":{"line":205,"column":4},"end":{"line":205,"column":71}},"103":{"start":{"line":207,"column":2},"end":{"line":209,"column":4}},"104":{"start":{"line":212,"column":2},"end":{"line":215,"column":5}},"105":{"start":{"line":216,"column":2},"end":{"line":220,"column":4}},"106":{"start":{"line":223,"column":2},"end":{"line":223,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":33,"column":40},"end":{"line":33,"column":41}},"loc":{"start":{"line":33,"column":63},"end":{"line":47,"column":1}},"line":33},"1":{"name":"handleNumfmtInCell","decl":{"start":{"line":63,"column":16},"end":{"line":63,"column":34}},"loc":{"start":{"line":63,"column":58},"end":{"line":80,"column":1}},"line":63},"2":{"name":"compareNumfmtPriority","decl":{"start":{"line":81,"column":16},"end":{"line":81,"column":37}},"loc":{"start":{"line":81,"column":59},"end":{"line":109,"column":1}},"line":81},"3":{"name":"getNumberFormatType","decl":{"start":{"line":111,"column":9},"end":{"line":111,"column":28}},"loc":{"start":{"line":111,"column":38},"end":{"line":119,"column":1}},"line":111},"4":{"name":"clearNumberFormatTypeCache","decl":{"start":{"line":120,"column":16},"end":{"line":120,"column":42}},"loc":{"start":{"line":120,"column":45},"end":{"line":122,"column":1}},"line":120},"5":{"name":"getNumberFormatTypeRaw","decl":{"start":{"line":123,"column":9},"end":{"line":123,"column":31}},"loc":{"start":{"line":123,"column":41},"end":{"line":129,"column":1}},"line":123},"6":{"name":"isAccounting","decl":{"start":{"line":130,"column":9},"end":{"line":130,"column":21}},"loc":{"start":{"line":130,"column":31},"end":{"line":132,"column":1}},"line":130},"7":{"name":"(anonymous_7)","decl":{"start":{"line":131,"column":32},"end":{"line":131,"column":33}},"loc":{"start":{"line":131,"column":42},"end":{"line":131,"column":64}},"line":131},"8":{"name":"comparePatternPriority","decl":{"start":{"line":134,"column":16},"end":{"line":134,"column":38}},"loc":{"start":{"line":134,"column":79},"end":{"line":155,"column":1}},"line":134},"9":{"name":"getCurrencySymbol","decl":{"start":{"line":164,"column":9},"end":{"line":164,"column":26}},"loc":{"start":{"line":164,"column":35},"end":{"line":166,"column":1}},"line":164},"10":{"name":"getCurrencyFormat","decl":{"start":{"line":167,"column":16},"end":{"line":167,"column":33}},"loc":{"start":{"line":167,"column":60},"end":{"line":177,"column":1}},"line":167},"11":{"name":"applyCurrencyFormat","decl":{"start":{"line":178,"column":16},"end":{"line":178,"column":35}},"loc":{"start":{"line":178,"column":70},"end":{"line":180,"column":1}},"line":178},"12":{"name":"stringIsNumberPattern","decl":{"start":{"line":182,"column":16},"end":{"line":182,"column":37}},"loc":{"start":{"line":182,"column":45},"end":{"line":210,"column":1}},"line":182},"13":{"name":"setNumberPatternCache","decl":{"start":{"line":211,"column":9},"end":{"line":211,"column":30}},"loc":{"start":{"line":211,"column":54},"end":{"line":221,"column":1}},"line":211},"14":{"name":"clearStringToNumberPatternCache","decl":{"start":{"line":222,"column":16},"end":{"line":222,"column":47}},"loc":{"start":{"line":222,"column":50},"end":{"line":224,"column":1}},"line":222}},"branchMap":{"0":{"loc":{"start":{"line":47,"column":3},"end":{"line":47,"column":25}},"type":"binary-expr","locations":[{"start":{"line":47,"column":3},"end":{"line":47,"column":19}},{"start":{"line":47,"column":23},"end":{"line":47,"column":25}}],"line":47},"1":{"loc":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},{"start":{},"end":{}}],"line":64},"2":{"loc":{"start":{"line":64,"column":6},"end":{"line":64,"column":37}},"type":"binary-expr","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":21}},{"start":{"line":64,"column":25},"end":{"line":64,"column":37}}],"line":64},"3":{"loc":{"start":{"line":67,"column":23},"end":{"line":67,"column":67}},"type":"binary-expr","locations":[{"start":{"line":67,"column":23},"end":{"line":67,"column":54}},{"start":{"line":67,"column":58},"end":{"line":67,"column":67}}],"line":67},"4":{"loc":{"start":{"line":68,"column":20},"end":{"line":68,"column":58}},"type":"binary-expr","locations":[{"start":{"line":68,"column":20},"end":{"line":68,"column":48}},{"start":{"line":68,"column":52},"end":{"line":68,"column":58}}],"line":68},"5":{"loc":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},{"start":{},"end":{}}],"line":69},"6":{"loc":{"start":{"line":69,"column":6},"end":{"line":69,"column":116}},"type":"binary-expr","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":26}},{"start":{"line":69,"column":30},"end":{"line":69,"column":47}},{"start":{"line":69,"column":51},"end":{"line":69,"column":83}},{"start":{"line":69,"column":87},"end":{"line":69,"column":116}}],"line":69},"7":{"loc":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},{"start":{},"end":{}}],"line":74},"8":{"loc":{"start":{"line":74,"column":6},"end":{"line":74,"column":43}},"type":"binary-expr","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":24}},{"start":{"line":74,"column":28},"end":{"line":74,"column":43}}],"line":74},"9":{"loc":{"start":{"line":77,"column":21},"end":{"line":77,"column":42}},"type":"binary-expr","locations":[{"start":{"line":77,"column":21},"end":{"line":77,"column":31}},{"start":{"line":77,"column":35},"end":{"line":77,"column":42}}],"line":77},"10":{"loc":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},{"start":{},"end":{}}],"line":84},"11":{"loc":{"start":{"line":87,"column":2},"end":{"line":89,"column":3}},"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":89,"column":3}},{"start":{},"end":{}}],"line":87},"12":{"loc":{"start":{"line":90,"column":2},"end":{"line":95,"column":3}},"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":95,"column":3}},{"start":{},"end":{}}],"line":90},"13":{"loc":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},{"start":{},"end":{}}],"line":91},"14":{"loc":{"start":{"line":96,"column":2},"end":{"line":101,"column":3}},"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":101,"column":3}},{"start":{},"end":{}}],"line":96},"15":{"loc":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},{"start":{},"end":{}}],"line":97},"16":{"loc":{"start":{"line":102,"column":2},"end":{"line":107,"column":3}},"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":107,"column":3}},{"start":{},"end":{}}],"line":102},"17":{"loc":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},{"start":{},"end":{}}],"line":103},"18":{"loc":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},{"start":{},"end":{}}],"line":113},"19":{"loc":{"start":{"line":124,"column":2},"end":{"line":126,"column":3}},"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":126,"column":3}},{"start":{},"end":{}}],"line":124},"20":{"loc":{"start":{"line":127,"column":15},"end":{"line":127,"column":56}},"type":"binary-expr","locations":[{"start":{"line":127,"column":15},"end":{"line":127,"column":43}},{"start":{"line":127,"column":47},"end":{"line":127,"column":56}}],"line":127},"21":{"loc":{"start":{"line":131,"column":9},"end":{"line":131,"column":93}},"type":"binary-expr","locations":[{"start":{"line":131,"column":9},"end":{"line":131,"column":65}},{"start":{"line":131,"column":69},"end":{"line":131,"column":93}}],"line":131},"22":{"loc":{"start":{"line":135,"column":2},"end":{"line":139,"column":3}},"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":139,"column":3}},{"start":{"line":137,"column":9},"end":{"line":139,"column":3}}],"line":135},"23":{"loc":{"start":{"line":137,"column":9},"end":{"line":139,"column":3}},"type":"if","locations":[{"start":{"line":137,"column":9},"end":{"line":139,"column":3}},{"start":{},"end":{}}],"line":137},"24":{"loc":{"start":{"line":142,"column":2},"end":{"line":147,"column":3}},"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":147,"column":3}},{"start":{},"end":{}}],"line":142},"25":{"loc":{"start":{"line":142,"column":6},"end":{"line":142,"column":73}},"type":"binary-expr","locations":[{"start":{"line":142,"column":6},"end":{"line":142,"column":37}},{"start":{"line":142,"column":41},"end":{"line":142,"column":73}}],"line":142},"26":{"loc":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},{"start":{},"end":{}}],"line":143},"27":{"loc":{"start":{"line":143,"column":8},"end":{"line":143,"column":149}},"type":"binary-expr","locations":[{"start":{"line":143,"column":8},"end":{"line":143,"column":33}},{"start":{"line":143,"column":48},"end":{"line":143,"column":69}},{"start":{"line":143,"column":84},"end":{"line":143,"column":110}},{"start":{"line":143,"column":127},"end":{"line":143,"column":149}}],"line":143},"28":{"loc":{"start":{"line":148,"column":2},"end":{"line":153,"column":3}},"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":153,"column":3}},{"start":{},"end":{}}],"line":148},"29":{"loc":{"start":{"line":148,"column":6},"end":{"line":148,"column":79}},"type":"binary-expr","locations":[{"start":{"line":148,"column":6},"end":{"line":148,"column":41}},{"start":{"line":148,"column":45},"end":{"line":148,"column":79}}],"line":148},"30":{"loc":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},{"start":{},"end":{}}],"line":149},"31":{"loc":{"start":{"line":149,"column":8},"end":{"line":149,"column":329}},"type":"binary-expr","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":33}},{"start":{"line":149,"column":54},"end":{"line":149,"column":75}},{"start":{"line":149,"column":96},"end":{"line":149,"column":121}},{"start":{"line":149,"column":140},"end":{"line":149,"column":161}},{"start":{"line":149,"column":180},"end":{"line":149,"column":205}},{"start":{"line":149,"column":226},"end":{"line":149,"column":247}},{"start":{"line":149,"column":268},"end":{"line":149,"column":293}},{"start":{"line":149,"column":308},"end":{"line":149,"column":329}}],"line":149},"32":{"loc":{"start":{"line":154,"column":9},"end":{"line":154,"column":39}},"type":"binary-expr","locations":[{"start":{"line":154,"column":9},"end":{"line":154,"column":24}},{"start":{"line":154,"column":28},"end":{"line":154,"column":39}}],"line":154},"33":{"loc":{"start":{"line":165,"column":9},"end":{"line":165,"column":52}},"type":"binary-expr","locations":[{"start":{"line":165,"column":9},"end":{"line":165,"column":45}},{"start":{"line":165,"column":49},"end":{"line":165,"column":52}}],"line":165},"34":{"loc":{"start":{"line":167,"column":42},"end":{"line":167,"column":58}},"type":"default-arg","locations":[{"start":{"line":167,"column":57},"end":{"line":167,"column":58}}],"line":167},"35":{"loc":{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},"type":"if","locations":[{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},{"start":{},"end":{}}],"line":169},"36":{"loc":{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},{"start":{},"end":{}}],"line":173},"37":{"loc":{"start":{"line":178,"column":52},"end":{"line":178,"column":68}},"type":"default-arg","locations":[{"start":{"line":178,"column":67},"end":{"line":178,"column":68}}],"line":178},"38":{"loc":{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},{"start":{},"end":{}}],"line":184},"39":{"loc":{"start":{"line":184,"column":6},"end":{"line":184,"column":52}},"type":"binary-expr","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":28}},{"start":{"line":184,"column":32},"end":{"line":184,"column":52}}],"line":184},"40":{"loc":{"start":{"line":188,"column":2},"end":{"line":194,"column":3}},"type":"if","locations":[{"start":{"line":188,"column":2},"end":{"line":194,"column":3}},{"start":{},"end":{}}],"line":188},"41":{"loc":{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},{"start":{},"end":{}}],"line":196},"42":{"loc":{"start":{"line":196,"column":6},"end":{"line":196,"column":38}},"type":"binary-expr","locations":[{"start":{"line":196,"column":6},"end":{"line":196,"column":19}},{"start":{"line":196,"column":23},"end":{"line":196,"column":38}}],"line":196},"43":{"loc":{"start":{"line":200,"column":2},"end":{"line":202,"column":3}},"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":202,"column":3}},{"start":{},"end":{}}],"line":200},"44":{"loc":{"start":{"line":200,"column":6},"end":{"line":200,"column":34}},"type":"binary-expr","locations":[{"start":{"line":200,"column":6},"end":{"line":200,"column":17}},{"start":{"line":200,"column":21},"end":{"line":200,"column":34}}],"line":200},"45":{"loc":{"start":{"line":204,"column":2},"end":{"line":206,"column":3}},"type":"if","locations":[{"start":{"line":204,"column":2},"end":{"line":206,"column":3}},{"start":{},"end":{}}],"line":204},"46":{"loc":{"start":{"line":204,"column":6},"end":{"line":204,"column":34}},"type":"binary-expr","locations":[{"start":{"line":204,"column":6},"end":{"line":204,"column":17}},{"start":{"line":204,"column":21},"end":{"line":204,"column":34}}],"line":204}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":2,"89":2,"90":0,"91":2,"92":2,"93":0,"94":2,"95":2,"96":0,"97":2,"98":2,"99":0,"100":2,"101":2,"102":0,"103":2,"104":0,"105":0,"106":0},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":2,"13":0,"14":0},"b":{"0":[1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0,0,0,0,0,0],"32":[0,0],"33":[0,0],"34":[0],"35":[0,0],"36":[0,0],"37":[0],"38":[0,2],"39":[2,0],"40":[0,2],"41":[0,2],"42":[2,0],"43":[0,2],"44":[2,0],"45":[0,2],"46":[2,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/numfmt-kit.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, Nullable, Styles } from '@univerjs/core';\nimport { LocaleType, numfmt } from '@univerjs/core';\nimport { FormulaAstLRU } from '../../basics/cache-lru';\nimport { operatorToken } from '../../basics/token';\n\nconst currencySymbols = [\n    '$',\n    '£',\n    '¥',\n    '¤',\n    '֏',\n    '؋',\n    '৳',\n    '฿',\n    '៛',\n    '₡',\n    '₦',\n    '₩',\n    '₪',\n    '₫',\n    '€',\n    '₭',\n    '₮',\n    '₱',\n    '₲',\n    '₴',\n    '₸',\n    '₹',\n    '₺',\n    '₼',\n    '₽',\n    '₾',\n    '₿',\n];\n\ntype FormatType =\n    | 'currency'\n    | 'date'\n    | 'datetime'\n    | 'error'\n    | 'fraction'\n    | 'general'\n    | 'grouped'\n    | 'number'\n    | 'percent'\n    | 'scientific'\n    | 'text'\n    | 'time';\n\nenum NumberFormatType {\n    General,\n    Number,\n    Currency,\n    Accounting,\n    Date,\n    Time,\n    Percentage,\n    Fraction,\n    Scientific,\n    Text,\n    Special,\n    Custom,\n}\n\n// except error/grouped\nconst NumberFormatTypeMap = {\n    currency: NumberFormatType.Currency,\n    date: NumberFormatType.Date,\n    datetime: NumberFormatType.Time,\n    error: NumberFormatType.Custom,\n    fraction: NumberFormatType.Fraction,\n    general: NumberFormatType.General,\n    grouped: NumberFormatType.Custom,\n    number: NumberFormatType.Number,\n    percent: NumberFormatType.Percentage,\n    scientific: NumberFormatType.Scientific,\n    text: NumberFormatType.Text,\n    time: NumberFormatType.Time,\n    unknown: NumberFormatType.Custom,\n};\n/**\n * Handling number formats in styles\n *\n * @param oldCell\n * @param cell\n */\nexport function handleNumfmtInCell(oldCell: Nullable<ICellData>, cell: Nullable<ICellData>, styles: Styles | undefined) {\n    if (oldCell == null || cell == null) {\n        return cell;\n    }\n\n    const oldCellStyle = styles?.getStyleByCell(oldCell) || oldCell.s;\n    const cellStyle = styles?.getStyleByCell(cell) || cell.s;\n\n    if (oldCellStyle == null || cellStyle == null || typeof oldCellStyle !== 'object' || typeof cellStyle !== 'object') {\n        return cell;\n    }\n\n    const oldPattern = oldCellStyle?.n?.pattern;\n    const pattern = cellStyle?.n?.pattern;\n\n    if (oldPattern == null || pattern == null) {\n        return cell;\n    }\n\n    // The number format calculated by the formula, if the current cell already has a number format, the original format is used, if not, a new one is set.\n    // Why?\n    // Due to the forced calculation mechanism during initialization, if the formula may overwrite the original number format, the number format set for the formula cell may never take effect.\n    const newPattern = oldPattern || pattern;\n\n    cellStyle!.n!.pattern = newPattern;\n\n    return cell;\n}\n\n/**\n * Process the priority of the newly set number format and the original format.\n *\n * Here is the priority of the number format in Excel:\n * ┌─────────────────┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐\n * │                 │ new format                                                                                                                                       │\n * ├─────────────────┼────────────┬────────────┬────────────┬────────────┬──────────┬──────────┬────────────┬──────────┬────────────┬──────────┬────────────┬───────────┤\n * │ Original format │ General    │ Number     │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Special    │ Custom    │\n * ├─────────────────┼────────────┼────────────┼────────────┼────────────┼──────────┼──────────┼────────────┼──────────┼────────────┼──────────┼────────────┼───────────┤\n * │ General         │ General    │ Number     │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Special    │ Custom    │\n * │ Number          │ Number     │ Number     │ Number     │ Number     │ Number   │ Number   │ Number     │ Number   │ Number     │ Number   │ Number     │ Number    │\n * │ Currency        │ Currency   │ Currency   │ Currency   │ Currency   │ Currency │ Currency │ Currency   │ Currency │ Currency   │ Currency │ Currency   │ Currency  │\n * │ Accounting      │ Accounting │ Accounting │ Accounting │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Accounting │ Custom    │\n * │ Date            │ Date       │ Date       │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Date       │ Custom    │\n * │ Time            │ Time       │ Time       │ Time       │ Time       │ Time     │ Time     │ Time       │ Time     │ Time       │ Time     │ Time       │ Time      │\n * │ Percentage      │ Percentage │ Percentage │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Percentage │ Custom    │\n * │ Fraction        │ Fraction   │ Fraction   │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Fraction   │ Custom    │\n * │ Scientific      │ Scientific │ Scientific │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Scientific │ Custom    │\n * │ Text            │ Text       │ Text       │ Text       │ Text       │ Text     │ Text     │ Text       │ Text     │ Text       │ Text     │ Text       │ Text      │\n * │ Special         │ Special    │ Special    │ Special    │ Special    │ Special  │ Special  │ Special    │ Special  │ Special    │ Special  │ Special    │ Special   │\n * │ Custom          │ Custom     │ Custom     │ Currency   │ Accounting │ Date     │ Custom   │ Percentage │ Fraction │ Scientific │ Text     │ Custom     │ Custom    │\n * └─────────────────┴────────────┴────────────┴────────────┴────────────┴──────────┴──────────┴────────────┴──────────┴────────────┴──────────┴────────────┴───────────┘\n *\n * The number formats supported by Univer are different from Excel, so it only processes the parts that are the same as Excel. For different parts, we consider the newly set number format to have a higher priority.\n *\n * In the future, if Univer completely matches Excel, we will implement Excel’s priority rules.\n *\n * @param oldPattern\n * @param pattern\n * @returns\n */\nexport function compareNumfmtPriority(oldPattern: string, pattern: string) {\n    const oldPatternType = getNumberFormatType(oldPattern);\n    const patternType = getNumberFormatType(pattern);\n\n    if (oldPatternType === NumberFormatType.General) {\n        return pattern;\n    }\n\n    if ([NumberFormatType.Number, NumberFormatType.Currency, NumberFormatType.Time, NumberFormatType.Text, NumberFormatType.Special].includes(oldPatternType)) {\n        return oldPattern;\n    }\n\n    if (oldPatternType === NumberFormatType.Accounting) {\n        if ([NumberFormatType.Date, NumberFormatType.Time, NumberFormatType.Percentage, NumberFormatType.Fraction, NumberFormatType.Scientific, NumberFormatType.Text, NumberFormatType.Custom].includes(patternType)) {\n            return pattern;\n        }\n        return oldPattern;\n    }\n\n    if ([NumberFormatType.Date, NumberFormatType.Percentage, NumberFormatType.Fraction, NumberFormatType.Scientific].includes(oldPatternType)) {\n        if ([NumberFormatType.Currency, NumberFormatType.Accounting, NumberFormatType.Date, NumberFormatType.Time, NumberFormatType.Percentage, NumberFormatType.Fraction, NumberFormatType.Scientific, NumberFormatType.Text, NumberFormatType.Custom].includes(patternType)) {\n            return pattern;\n        }\n        return oldPattern;\n    }\n\n    if (oldPatternType === NumberFormatType.Custom) {\n        if ([NumberFormatType.Currency, NumberFormatType.Accounting, NumberFormatType.Date, NumberFormatType.Percentage, NumberFormatType.Fraction, NumberFormatType.Scientific, NumberFormatType.Text].includes(patternType)) {\n            return pattern;\n        }\n        return oldPattern;\n    }\n\n    return oldPattern;\n}\n\nconst numberFormatTypeCache = new FormulaAstLRU<NumberFormatType>(100000);\nfunction getNumberFormatType(pattern: string) {\n    const patternTypeCache = numberFormatTypeCache.get(pattern);\n    if (patternTypeCache !== undefined) {\n        return patternTypeCache;\n    }\n\n    const type = getNumberFormatTypeRaw(pattern);\n    numberFormatTypeCache.set(pattern, type);\n\n    return type;\n}\n\nexport function clearNumberFormatTypeCache() {\n    numberFormatTypeCache.clear();\n}\n\n/**\n * Get the type of the number format\n *\n * @param pattern\n * @returns\n */\nfunction getNumberFormatTypeRaw(pattern: string): NumberFormatType {\n    if (isAccounting(pattern)) {\n        return NumberFormatType.Accounting;\n    }\n\n    const type = numfmt.getInfo(pattern).type as FormatType || 'unknown';\n    return NumberFormatTypeMap[type];\n}\n\nfunction isAccounting(pattern: string) {\n    return !!currencySymbols.find((code) => pattern.includes(code)) && pattern.startsWith('_(');\n};\n\n/**\n * The number format of the formula inherits the number format of the referenced cell, usually taking the format of the cell at the front position, but some formats have higher priority, there are some special cases.\n *\n * e.g.\n * Currency * Currency = General\n * Currency / Currency = General\n *\n * For two cells with the same number format, the calculated result should inherit the following number format\n * ┌─────┬─────────┬──────────┬────────────┬─────────┬─────────┬────────────┬──────────┬────────────┬──────┬─────────┬──────────┐\n * │     │ Number  │ Currency │ Accounting │ Date    │ Time    │ Percentage │ Fraction │ Scientific │ Text │ Special │ Custom   │\n * ├─────┼─────────┼──────────┼────────────┼─────────┼─────────┼────────────┼──────────┼────────────┼──────┼─────────┼──────────┤\n * │  +  │ Number  │ Currency │ Accounting │ General │ Time    │ Percentage │ Fraction │ Scientific │ Text │ Special │ General  │\n * │  -  │ Number  │ Currency │ Accounting │ General │ Time    │ Percentage │ Fraction │ Scientific │ Text │ Special │ General  │\n * │  *  │ General │ General  │ General    │ General │ General │ Percentage │ Fraction │ Scientific │ Text │ General │ General  │\n * │  /  │ General │ General  │ General    │ General │ General │ Percentage │ Fraction │ Scientific │ Text │ General │ General  │\n * └─────┴─────────┴──────────┴────────────┴─────────┴─────────┴────────────┴──────────┴────────────┴──────┴─────────┴──────────┘\n *\n * @param previousPattern\n * @param nextPattern\n */\nexport function comparePatternPriority(previousPattern: string, nextPattern: string, operator: operatorToken) {\n    if (previousPattern === '') {\n        return nextPattern;\n    } else if (nextPattern === '') {\n        return previousPattern;\n    }\n\n    const previousPatternType = getNumberFormatType(previousPattern);\n    const nextPatternType = getNumberFormatType(nextPattern);\n\n    if (operator === operatorToken.PLUS || operator === operatorToken.MINUS) {\n        if ((previousPatternType === NumberFormatType.Date && nextPatternType === NumberFormatType.Date) || (previousPatternType === NumberFormatType.Custom && nextPatternType === NumberFormatType.Custom)) {\n            return '';\n        }\n\n        return nextPattern;\n    }\n\n    if (operator === operatorToken.MULTIPLY || operator === operatorToken.DIVIDED) {\n        if ((previousPatternType === NumberFormatType.Percentage && nextPatternType === NumberFormatType.Percentage) || (previousPatternType === NumberFormatType.Fraction && nextPatternType === NumberFormatType.Fraction) || (previousPatternType === NumberFormatType.Scientific && nextPatternType === NumberFormatType.Scientific) || (previousPatternType === NumberFormatType.Text && nextPatternType === NumberFormatType.Text)) {\n            return nextPattern;\n        }\n\n        return '';\n    }\n\n    return previousPattern || nextPattern;\n}\n\n/**\n * Get the currency symbol based on the locale\n * Now define it here\n * TODO: import from sheet-numfmt currencySymbolMap later\n *\n * @param locale\n * @returns\n */\nconst countryCurrencySymbolMap = new Map<LocaleType, string>([\n    [LocaleType.EN_US, '$'],\n    // [LocaleType.JA_JP, '¥'],\n    [LocaleType.RU_RU, '₽'],\n    [LocaleType.VI_VN, '₫'],\n    [LocaleType.ZH_CN, '¥'],\n    [LocaleType.ZH_TW, 'NT$'],\n]);\n\nfunction getCurrencySymbol(locale: LocaleType): string {\n    return countryCurrencySymbolMap.get(locale) || '$';\n}\n\nexport function getCurrencyFormat(locale: LocaleType, numberDigits: number = 2): string {\n    let _numberDigits = numberDigits;\n\n    if (numberDigits > 127) {\n        _numberDigits = 127;\n    }\n\n    let decimal = '';\n\n    if (_numberDigits > 0) {\n        decimal = `.${'0'.repeat(_numberDigits)}`;\n    }\n\n    return `\"${getCurrencySymbol(locale)}\"#,##0${decimal}_);[Red](\"${getCurrencySymbol(locale)}\"#,##0${decimal})`;\n}\n\nexport function applyCurrencyFormat(locale: LocaleType, number: number, numberDigits: number = 2): string {\n    return numfmt.format(getCurrencyFormat(locale, numberDigits), number);\n}\n\n/**\n * String is number pattern or date or time, for example\n * \"20%\"\n * \"2012-12-12\"\n * \"16:48:00\"\n *\n * @param locale\n * @returns\n */\nconst stringToNumberPatternCache = new FormulaAstLRU<{\n    value: number;\n    pattern: string;\n}>(100000);\n\nexport function stringIsNumberPattern(input: string) {\n    let _input = input;\n\n    if (_input.startsWith('\"') && _input.endsWith('\"')) {\n        _input = _input.slice(1, -1);\n    }\n\n    const cacheValue = stringToNumberPatternCache.get(_input);\n\n    if (cacheValue) {\n        return {\n            isNumberPattern: true,\n            value: cacheValue.value,\n            pattern: cacheValue.pattern,\n        };\n    }\n\n    const numberPattern = numfmt.parseNumber(_input);\n\n    if (numberPattern && numberPattern.z) {\n        return setNumberPatternCache(_input, numberPattern.v as number, numberPattern.z as string);\n    }\n\n    const datePattern = numfmt.parseDate(_input);\n\n    if (datePattern && datePattern.z) {\n        return setNumberPatternCache(_input, datePattern.v as number, datePattern.z as string);\n    }\n\n    const timePattern = numfmt.parseTime(_input);\n\n    if (timePattern && timePattern.z) {\n        return setNumberPatternCache(_input, timePattern.v as number, timePattern.z as string);\n    }\n\n    return {\n        isNumberPattern: false,\n    };\n}\n\nfunction setNumberPatternCache(input: string, value: number, pattern: string) {\n    stringToNumberPatternCache.set(input, {\n        value,\n        pattern,\n    });\n\n    return {\n        isNumberPattern: true,\n        value,\n        pattern,\n    };\n}\n\nexport function clearStringToNumberPatternCache() {\n    stringToNumberPatternCache.clear();\n}\n"],"mappings":"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","names":["NumberFormatType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8a1dedfcede640c3a39eb8ec56095f9731ab9fa6"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/object-class-type.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/object-class-type.ts","statementMap":{"0":{"start":{"line":2,"column":12},"end":{"line":2,"column":14}},"1":{"start":{"line":6,"column":4},"end":{"line":6,"column":24}},"2":{"start":{"line":13,"column":4},"end":{"line":13,"column":27}},"3":{"start":{"line":16,"column":4},"end":{"line":16,"column":17}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":17}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":17}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":17}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":17}},"8":{"start":{"line":31,"column":4},"end":{"line":31,"column":17}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":17}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":2},"end":{"line":3,"column":3}},"loc":{"start":{"line":3,"column":12},"end":{"line":4,"column":3}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":5,"column":2},"end":{"line":5,"column":3}},"loc":{"start":{"line":5,"column":15},"end":{"line":7,"column":3}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":2},"end":{"line":12,"column":3}},"loc":{"start":{"line":12,"column":22},"end":{"line":14,"column":3}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":2},"end":{"line":15,"column":3}},"loc":{"start":{"line":15,"column":12},"end":{"line":17,"column":3}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":18,"column":2},"end":{"line":18,"column":3}},"loc":{"start":{"line":18,"column":18},"end":{"line":20,"column":3}},"line":18},"5":{"name":"(anonymous_5)","decl":{"start":{"line":21,"column":2},"end":{"line":21,"column":3}},"loc":{"start":{"line":21,"column":23},"end":{"line":23,"column":3}},"line":21},"6":{"name":"(anonymous_6)","decl":{"start":{"line":24,"column":2},"end":{"line":24,"column":3}},"loc":{"start":{"line":24,"column":22},"end":{"line":26,"column":3}},"line":24},"7":{"name":"(anonymous_7)","decl":{"start":{"line":27,"column":2},"end":{"line":27,"column":3}},"loc":{"start":{"line":27,"column":12},"end":{"line":29,"column":3}},"line":27},"8":{"name":"(anonymous_8)","decl":{"start":{"line":30,"column":2},"end":{"line":30,"column":3}},"loc":{"start":{"line":30,"column":18},"end":{"line":32,"column":3}},"line":30},"9":{"name":"(anonymous_9)","decl":{"start":{"line":33,"column":2},"end":{"line":33,"column":3}},"loc":{"start":{"line":33,"column":22},"end":{"line":35,"column":3}},"line":33}},"branchMap":{},"s":{"0":359,"1":0,"2":0,"3":0,"4":0,"5":0,"6":10,"7":35,"8":0,"9":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":10,"7":35,"8":0,"9":0},"b":{},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/object-class-type.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ObjectClassType {\n    pattern: string = '';\n\n    dispose() {\n\n    }\n\n    getPattern() {\n        return this.pattern;\n    }\n\n    /**\n     * Only used in NumberValueObject\n     * @param pattern\n     */\n    setPattern(pattern: string) {\n        this.pattern = pattern;\n    }\n\n    isError() {\n        return false;\n    }\n\n    isAsyncObject() {\n        return false;\n    }\n\n    isAsyncArrayObject() {\n        return false;\n    }\n\n    isReferenceObject() {\n        return false;\n    }\n\n    isArray() {\n        return false;\n    }\n\n    isValueObject() {\n        return false;\n    }\n\n    isEqualType(object: ObjectClassType) {\n        return false;\n    }\n}\n"],"mappings":"AAgBO,aAAM,gBAAgB;AAAA,EACzB,UAAkB;AAAA,EAElB,UAAU;AAAA,EAEV;AAAA,EAEA,aAAa;AACT,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,SAAiB;AACxB,SAAK,UAAU;AAAA,EACnB;AAAA,EAEA,UAAU;AACN,WAAO;AAAA,EACX;AAAA,EAEA,gBAAgB;AACZ,WAAO;AAAA,EACX;AAAA,EAEA,qBAAqB;AACjB,WAAO;AAAA,EACX;AAAA,EAEA,oBAAoB;AAChB,WAAO;AAAA,EACX;AAAA,EAEA,UAAU;AACN,WAAO;AAAA,EACX;AAAA,EAEA,gBAAgB;AACZ,WAAO;AAAA,EACX;AAAA,EAEA,YAAY,QAAyB;AACjC,WAAO;AAAA,EACX;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7cc6b5234f74853086235a490790df0629e889f7"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/base-value-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/base-value-object.ts","statementMap":{"0":{"start":{"line":8,"column":4},"end":{"line":8,"column":12}},"1":{"start":{"line":9,"column":4},"end":{"line":9,"column":31}},"2":{"start":{"line":13,"column":4},"end":{"line":13,"column":16}},"3":{"start":{"line":16,"column":4},"end":{"line":25,"column":6}},"4":{"start":{"line":28,"column":4},"end":{"line":28,"column":13}},"5":{"start":{"line":31,"column":4},"end":{"line":31,"column":14}},"6":{"start":{"line":38,"column":4},"end":{"line":38,"column":28}},"7":{"start":{"line":39,"column":4},"end":{"line":39,"column":16}},"8":{"start":{"line":42,"column":4},"end":{"line":42,"column":28}},"9":{"start":{"line":45,"column":4},"end":{"line":45,"column":17}},"10":{"start":{"line":48,"column":4},"end":{"line":48,"column":17}},"11":{"start":{"line":51,"column":4},"end":{"line":51,"column":17}},"12":{"start":{"line":54,"column":4},"end":{"line":54,"column":17}},"13":{"start":{"line":57,"column":4},"end":{"line":57,"column":17}},"14":{"start":{"line":60,"column":4},"end":{"line":60,"column":17}},"15":{"start":{"line":63,"column":4},"end":{"line":63,"column":17}},"16":{"start":{"line":66,"column":4},"end":{"line":66,"column":52}},"17":{"start":{"line":69,"column":4},"end":{"line":69,"column":52}},"18":{"start":{"line":72,"column":4},"end":{"line":72,"column":52}},"19":{"start":{"line":75,"column":4},"end":{"line":75,"column":52}},"20":{"start":{"line":78,"column":4},"end":{"line":78,"column":52}},"21":{"start":{"line":81,"column":4},"end":{"line":81,"column":52}},"22":{"start":{"line":84,"column":4},"end":{"line":84,"column":52}},"23":{"start":{"line":87,"column":4},"end":{"line":87,"column":52}},"24":{"start":{"line":90,"column":4},"end":{"line":90,"column":52}},"25":{"start":{"line":93,"column":4},"end":{"line":93,"column":52}},"26":{"start":{"line":96,"column":4},"end":{"line":96,"column":52}},"27":{"start":{"line":99,"column":4},"end":{"line":99,"column":52}},"28":{"start":{"line":102,"column":4},"end":{"line":102,"column":52}},"29":{"start":{"line":110,"column":4},"end":{"line":110,"column":51}},"30":{"start":{"line":118,"column":4},"end":{"line":118,"column":51}},"31":{"start":{"line":121,"column":4},"end":{"line":121,"column":51}},"32":{"start":{"line":124,"column":4},"end":{"line":124,"column":58}},"33":{"start":{"line":127,"column":4},"end":{"line":127,"column":61}},"34":{"start":{"line":130,"column":4},"end":{"line":130,"column":73}},"35":{"start":{"line":133,"column":4},"end":{"line":133,"column":70}},"36":{"start":{"line":136,"column":4},"end":{"line":136,"column":61}},"37":{"start":{"line":139,"column":4},"end":{"line":139,"column":64}},"38":{"start":{"line":142,"column":4},"end":{"line":142,"column":51}},"39":{"start":{"line":145,"column":4},"end":{"line":145,"column":51}},"40":{"start":{"line":148,"column":4},"end":{"line":148,"column":52}},"41":{"start":{"line":151,"column":4},"end":{"line":151,"column":52}},"42":{"start":{"line":154,"column":4},"end":{"line":154,"column":52}},"43":{"start":{"line":157,"column":4},"end":{"line":157,"column":52}},"44":{"start":{"line":160,"column":4},"end":{"line":160,"column":52}},"45":{"start":{"line":163,"column":4},"end":{"line":163,"column":51}},"46":{"start":{"line":166,"column":23},"end":{"line":166,"column":49}},"47":{"start":{"line":167,"column":4},"end":{"line":186,"column":5}},"48":{"start":{"line":168,"column":6},"end":{"line":172,"column":7}},"49":{"start":{"line":169,"column":8},"end":{"line":169,"column":44}},"50":{"start":{"line":171,"column":8},"end":{"line":171,"column":30}},"51":{"start":{"line":173,"column":11},"end":{"line":186,"column":5}},"52":{"start":{"line":174,"column":6},"end":{"line":178,"column":7}},"53":{"start":{"line":175,"column":8},"end":{"line":175,"column":55}},"54":{"start":{"line":177,"column":8},"end":{"line":177,"column":41}},"55":{"start":{"line":179,"column":11},"end":{"line":186,"column":5}},"56":{"start":{"line":180,"column":28},"end":{"line":180,"column":52}},"57":{"start":{"line":181,"column":6},"end":{"line":185,"column":7}},"58":{"start":{"line":182,"column":8},"end":{"line":182,"column":52}},"59":{"start":{"line":184,"column":8},"end":{"line":184,"column":38}},"60":{"start":{"line":187,"column":4},"end":{"line":187,"column":24}},"61":{"start":{"line":190,"column":4},"end":{"line":190,"column":52}},"62":{"start":{"line":193,"column":4},"end":{"line":193,"column":52}},"63":{"start":{"line":196,"column":4},"end":{"line":196,"column":52}},"64":{"start":{"line":199,"column":4},"end":{"line":199,"column":52}},"65":{"start":{"line":202,"column":4},"end":{"line":202,"column":52}},"66":{"start":{"line":205,"column":4},"end":{"line":205,"column":52}},"67":{"start":{"line":208,"column":4},"end":{"line":208,"column":52}},"68":{"start":{"line":211,"column":4},"end":{"line":211,"column":52}},"69":{"start":{"line":214,"column":4},"end":{"line":214,"column":52}},"70":{"start":{"line":217,"column":4},"end":{"line":217,"column":52}},"71":{"start":{"line":220,"column":4},"end":{"line":220,"column":52}},"72":{"start":{"line":223,"column":4},"end":{"line":223,"column":52}},"73":{"start":{"line":226,"column":4},"end":{"line":226,"column":52}},"74":{"start":{"line":229,"column":4},"end":{"line":229,"column":52}},"75":{"start":{"line":232,"column":4},"end":{"line":232,"column":52}},"76":{"start":{"line":235,"column":4},"end":{"line":235,"column":52}},"77":{"start":{"line":238,"column":4},"end":{"line":238,"column":52}},"78":{"start":{"line":241,"column":4},"end":{"line":241,"column":52}},"79":{"start":{"line":250,"column":4},"end":{"line":250,"column":16}},"80":{"start":{"line":259,"column":4},"end":{"line":259,"column":16}},"81":{"start":{"line":267,"column":4},"end":{"line":267,"column":16}},"82":{"start":{"line":275,"column":4},"end":{"line":275,"column":16}},"83":{"start":{"line":278,"column":4},"end":{"line":278,"column":52}},"84":{"start":{"line":281,"column":4},"end":{"line":281,"column":52}},"85":{"start":{"line":284,"column":4},"end":{"line":284,"column":52}},"86":{"start":{"line":287,"column":4},"end":{"line":287,"column":52}},"87":{"start":{"line":290,"column":4},"end":{"line":290,"column":52}},"88":{"start":{"line":293,"column":4},"end":{"line":293,"column":52}},"89":{"start":{"line":296,"column":4},"end":{"line":296,"column":52}},"90":{"start":{"line":299,"column":4},"end":{"line":299,"column":52}},"91":{"start":{"line":302,"column":4},"end":{"line":302,"column":52}},"92":{"start":{"line":305,"column":4},"end":{"line":305,"column":52}},"93":{"start":{"line":308,"column":4},"end":{"line":308,"column":52}},"94":{"start":{"line":311,"column":4},"end":{"line":311,"column":52}},"95":{"start":{"line":314,"column":30},"end":{"line":314,"column":33}},"96":{"start":{"line":315,"column":37},"end":{"line":315,"column":77}},"97":{"start":{"line":318,"column":4},"end":{"line":318,"column":22}},"98":{"start":{"line":319,"column":4},"end":{"line":319,"column":33}},"99":{"start":{"line":320,"column":4},"end":{"line":320,"column":39}},"100":{"start":{"line":323,"column":16},"end":{"line":323,"column":46}},"101":{"start":{"line":324,"column":19},"end":{"line":324,"column":49}},"102":{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},"103":{"start":{"line":326,"column":6},"end":{"line":326,"column":20}},"104":{"start":{"line":328,"column":21},"end":{"line":328,"column":66}},"105":{"start":{"line":329,"column":4},"end":{"line":329,"column":45}},"106":{"start":{"line":330,"column":4},"end":{"line":330,"column":20}},"107":{"start":{"line":333,"column":4},"end":{"line":333,"column":27}},"108":{"start":{"line":336,"column":4},"end":{"line":336,"column":27}},"109":{"start":{"line":339,"column":4},"end":{"line":339,"column":30}},"110":{"start":{"line":342,"column":4},"end":{"line":344,"column":5}},"111":{"start":{"line":343,"column":6},"end":{"line":343,"column":18}},"112":{"start":{"line":345,"column":4},"end":{"line":345,"column":17}},"113":{"start":{"line":348,"column":4},"end":{"line":348,"column":16}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":2},"end":{"line":7,"column":3}},"loc":{"start":{"line":7,"column":25},"end":{"line":10,"column":3}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":2},"end":{"line":12,"column":3}},"loc":{"start":{"line":12,"column":18},"end":{"line":14,"column":3}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":2},"end":{"line":15,"column":3}},"loc":{"start":{"line":15,"column":16},"end":{"line":26,"column":3}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":2},"end":{"line":27,"column":3}},"loc":{"start":{"line":27,"column":13},"end":{"line":29,"column":3}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":2},"end":{"line":30,"column":3}},"loc":{"start":{"line":30,"column":18},"end":{"line":32,"column":3}},"line":30},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":2},"end":{"line":33,"column":3}},"loc":{"start":{"line":33,"column":18},"end":{"line":34,"column":3}},"line":33},"6":{"name":"(anonymous_6)","decl":{"start":{"line":35,"column":2},"end":{"line":35,"column":3}},"loc":{"start":{"line":35,"column":23},"end":{"line":36,"column":3}},"line":35},"7":{"name":"(anonymous_7)","decl":{"start":{"line":37,"column":2},"end":{"line":37,"column":3}},"loc":{"start":{"line":37,"column":23},"end":{"line":40,"column":3}},"line":37},"8":{"name":"(anonymous_8)","decl":{"start":{"line":41,"column":2},"end":{"line":41,"column":3}},"loc":{"start":{"line":41,"column":18},"end":{"line":43,"column":3}},"line":41},"9":{"name":"(anonymous_9)","decl":{"start":{"line":44,"column":2},"end":{"line":44,"column":3}},"loc":{"start":{"line":44,"column":11},"end":{"line":46,"column":3}},"line":44},"10":{"name":"(anonymous_10)","decl":{"start":{"line":47,"column":2},"end":{"line":47,"column":3}},"loc":{"start":{"line":47,"column":13},"end":{"line":49,"column":3}},"line":47},"11":{"name":"(anonymous_11)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":13},"end":{"line":52,"column":3}},"line":50},"12":{"name":"(anonymous_12)","decl":{"start":{"line":53,"column":2},"end":{"line":53,"column":3}},"loc":{"start":{"line":53,"column":14},"end":{"line":55,"column":3}},"line":53},"13":{"name":"(anonymous_13)","decl":{"start":{"line":56,"column":2},"end":{"line":56,"column":3}},"loc":{"start":{"line":56,"column":13},"end":{"line":58,"column":3}},"line":56},"14":{"name":"(anonymous_14)","decl":{"start":{"line":59,"column":2},"end":{"line":59,"column":3}},"loc":{"start":{"line":59,"column":12},"end":{"line":61,"column":3}},"line":59},"15":{"name":"(anonymous_15)","decl":{"start":{"line":62,"column":2},"end":{"line":62,"column":3}},"loc":{"start":{"line":62,"column":11},"end":{"line":64,"column":3}},"line":62},"16":{"name":"(anonymous_16)","decl":{"start":{"line":65,"column":2},"end":{"line":65,"column":3}},"loc":{"start":{"line":65,"column":8},"end":{"line":67,"column":3}},"line":65},"17":{"name":"(anonymous_17)","decl":{"start":{"line":68,"column":2},"end":{"line":68,"column":3}},"loc":{"start":{"line":68,"column":8},"end":{"line":70,"column":3}},"line":68},"18":{"name":"(anonymous_18)","decl":{"start":{"line":71,"column":2},"end":{"line":71,"column":3}},"loc":{"start":{"line":71,"column":8},"end":{"line":73,"column":3}},"line":71},"19":{"name":"(anonymous_19)","decl":{"start":{"line":74,"column":2},"end":{"line":74,"column":3}},"loc":{"start":{"line":74,"column":10},"end":{"line":76,"column":3}},"line":74},"20":{"name":"(anonymous_20)","decl":{"start":{"line":77,"column":2},"end":{"line":77,"column":3}},"loc":{"start":{"line":77,"column":11},"end":{"line":79,"column":3}},"line":77},"21":{"name":"(anonymous_21)","decl":{"start":{"line":80,"column":2},"end":{"line":80,"column":3}},"loc":{"start":{"line":80,"column":15},"end":{"line":82,"column":3}},"line":80},"22":{"name":"(anonymous_22)","decl":{"start":{"line":83,"column":2},"end":{"line":83,"column":3}},"loc":{"start":{"line":83,"column":16},"end":{"line":85,"column":3}},"line":83},"23":{"name":"(anonymous_23)","decl":{"start":{"line":86,"column":2},"end":{"line":86,"column":3}},"loc":{"start":{"line":86,"column":18},"end":{"line":88,"column":3}},"line":86},"24":{"name":"(anonymous_24)","decl":{"start":{"line":89,"column":2},"end":{"line":89,"column":3}},"loc":{"start":{"line":89,"column":20},"end":{"line":91,"column":3}},"line":89},"25":{"name":"(anonymous_25)","decl":{"start":{"line":92,"column":2},"end":{"line":92,"column":3}},"loc":{"start":{"line":92,"column":21},"end":{"line":94,"column":3}},"line":92},"26":{"name":"(anonymous_26)","decl":{"start":{"line":95,"column":2},"end":{"line":95,"column":3}},"loc":{"start":{"line":95,"column":24},"end":{"line":97,"column":3}},"line":95},"27":{"name":"(anonymous_27)","decl":{"start":{"line":98,"column":2},"end":{"line":98,"column":3}},"loc":{"start":{"line":98,"column":23},"end":{"line":100,"column":3}},"line":98},"28":{"name":"(anonymous_28)","decl":{"start":{"line":101,"column":2},"end":{"line":101,"column":3}},"loc":{"start":{"line":101,"column":19},"end":{"line":103,"column":3}},"line":101},"29":{"name":"(anonymous_29)","decl":{"start":{"line":109,"column":2},"end":{"line":109,"column":3}},"loc":{"start":{"line":109,"column":18},"end":{"line":111,"column":3}},"line":109},"30":{"name":"(anonymous_30)","decl":{"start":{"line":117,"column":2},"end":{"line":117,"column":3}},"loc":{"start":{"line":117,"column":23},"end":{"line":119,"column":3}},"line":117},"31":{"name":"(anonymous_31)","decl":{"start":{"line":120,"column":2},"end":{"line":120,"column":3}},"loc":{"start":{"line":120,"column":58},"end":{"line":122,"column":3}},"line":120},"32":{"name":"(anonymous_32)","decl":{"start":{"line":123,"column":2},"end":{"line":123,"column":3}},"loc":{"start":{"line":123,"column":23},"end":{"line":125,"column":3}},"line":123},"33":{"name":"(anonymous_33)","decl":{"start":{"line":126,"column":2},"end":{"line":126,"column":3}},"loc":{"start":{"line":126,"column":26},"end":{"line":128,"column":3}},"line":126},"34":{"name":"(anonymous_34)","decl":{"start":{"line":129,"column":2},"end":{"line":129,"column":3}},"loc":{"start":{"line":129,"column":36},"end":{"line":131,"column":3}},"line":129},"35":{"name":"(anonymous_35)","decl":{"start":{"line":132,"column":2},"end":{"line":132,"column":3}},"loc":{"start":{"line":132,"column":33},"end":{"line":134,"column":3}},"line":132},"36":{"name":"(anonymous_36)","decl":{"start":{"line":135,"column":2},"end":{"line":135,"column":3}},"loc":{"start":{"line":135,"column":26},"end":{"line":137,"column":3}},"line":135},"37":{"name":"(anonymous_37)","decl":{"start":{"line":138,"column":2},"end":{"line":138,"column":3}},"loc":{"start":{"line":138,"column":29},"end":{"line":140,"column":3}},"line":138},"38":{"name":"(anonymous_38)","decl":{"start":{"line":141,"column":2},"end":{"line":141,"column":3}},"loc":{"start":{"line":141,"column":32},"end":{"line":143,"column":3}},"line":141},"39":{"name":"(anonymous_39)","decl":{"start":{"line":144,"column":2},"end":{"line":144,"column":3}},"loc":{"start":{"line":144,"column":31},"end":{"line":146,"column":3}},"line":144},"40":{"name":"(anonymous_40)","decl":{"start":{"line":147,"column":2},"end":{"line":147,"column":3}},"loc":{"start":{"line":147,"column":16},"end":{"line":149,"column":3}},"line":147},"41":{"name":"(anonymous_41)","decl":{"start":{"line":150,"column":2},"end":{"line":150,"column":3}},"loc":{"start":{"line":150,"column":17},"end":{"line":152,"column":3}},"line":150},"42":{"name":"(anonymous_42)","decl":{"start":{"line":153,"column":2},"end":{"line":153,"column":3}},"loc":{"start":{"line":153,"column":20},"end":{"line":155,"column":3}},"line":153},"43":{"name":"(anonymous_43)","decl":{"start":{"line":156,"column":2},"end":{"line":156,"column":3}},"loc":{"start":{"line":156,"column":19},"end":{"line":158,"column":3}},"line":156},"44":{"name":"(anonymous_44)","decl":{"start":{"line":159,"column":2},"end":{"line":159,"column":3}},"loc":{"start":{"line":159,"column":26},"end":{"line":161,"column":3}},"line":159},"45":{"name":"(anonymous_45)","decl":{"start":{"line":162,"column":2},"end":{"line":162,"column":3}},"loc":{"start":{"line":162,"column":29},"end":{"line":164,"column":3}},"line":162},"46":{"name":"(anonymous_46)","decl":{"start":{"line":165,"column":2},"end":{"line":165,"column":3}},"loc":{"start":{"line":165,"column":62},"end":{"line":188,"column":3}},"line":165},"47":{"name":"(anonymous_47)","decl":{"start":{"line":189,"column":2},"end":{"line":189,"column":3}},"loc":{"start":{"line":189,"column":19},"end":{"line":191,"column":3}},"line":189},"48":{"name":"(anonymous_48)","decl":{"start":{"line":192,"column":2},"end":{"line":192,"column":3}},"loc":{"start":{"line":192,"column":26},"end":{"line":194,"column":3}},"line":192},"49":{"name":"(anonymous_49)","decl":{"start":{"line":195,"column":2},"end":{"line":195,"column":3}},"loc":{"start":{"line":195,"column":9},"end":{"line":197,"column":3}},"line":195},"50":{"name":"(anonymous_50)","decl":{"start":{"line":198,"column":2},"end":{"line":198,"column":3}},"loc":{"start":{"line":198,"column":9},"end":{"line":200,"column":3}},"line":198},"51":{"name":"(anonymous_51)","decl":{"start":{"line":201,"column":2},"end":{"line":201,"column":3}},"loc":{"start":{"line":201,"column":8},"end":{"line":203,"column":3}},"line":201},"52":{"name":"(anonymous_52)","decl":{"start":{"line":204,"column":2},"end":{"line":204,"column":3}},"loc":{"start":{"line":204,"column":9},"end":{"line":206,"column":3}},"line":204},"53":{"name":"(anonymous_53)","decl":{"start":{"line":207,"column":2},"end":{"line":207,"column":3}},"loc":{"start":{"line":207,"column":9},"end":{"line":209,"column":3}},"line":207},"54":{"name":"(anonymous_54)","decl":{"start":{"line":210,"column":2},"end":{"line":210,"column":3}},"loc":{"start":{"line":210,"column":10},"end":{"line":212,"column":3}},"line":210},"55":{"name":"(anonymous_55)","decl":{"start":{"line":213,"column":2},"end":{"line":213,"column":3}},"loc":{"start":{"line":213,"column":8},"end":{"line":215,"column":3}},"line":213},"56":{"name":"(anonymous_56)","decl":{"start":{"line":216,"column":2},"end":{"line":216,"column":3}},"loc":{"start":{"line":216,"column":9},"end":{"line":218,"column":3}},"line":216},"57":{"name":"(anonymous_57)","decl":{"start":{"line":219,"column":2},"end":{"line":219,"column":3}},"loc":{"start":{"line":219,"column":9},"end":{"line":221,"column":3}},"line":219},"58":{"name":"(anonymous_58)","decl":{"start":{"line":222,"column":2},"end":{"line":222,"column":3}},"loc":{"start":{"line":222,"column":10},"end":{"line":224,"column":3}},"line":222},"59":{"name":"(anonymous_59)","decl":{"start":{"line":225,"column":2},"end":{"line":225,"column":3}},"loc":{"start":{"line":225,"column":8},"end":{"line":227,"column":3}},"line":225},"60":{"name":"(anonymous_60)","decl":{"start":{"line":228,"column":2},"end":{"line":228,"column":3}},"loc":{"start":{"line":228,"column":9},"end":{"line":230,"column":3}},"line":228},"61":{"name":"(anonymous_61)","decl":{"start":{"line":231,"column":2},"end":{"line":231,"column":3}},"loc":{"start":{"line":231,"column":9},"end":{"line":233,"column":3}},"line":231},"62":{"name":"(anonymous_62)","decl":{"start":{"line":234,"column":2},"end":{"line":234,"column":3}},"loc":{"start":{"line":234,"column":21},"end":{"line":236,"column":3}},"line":234},"63":{"name":"(anonymous_63)","decl":{"start":{"line":237,"column":2},"end":{"line":237,"column":3}},"loc":{"start":{"line":237,"column":28},"end":{"line":239,"column":3}},"line":237},"64":{"name":"(anonymous_64)","decl":{"start":{"line":240,"column":2},"end":{"line":240,"column":3}},"loc":{"start":{"line":240,"column":10},"end":{"line":242,"column":3}},"line":240},"65":{"name":"(anonymous_65)","decl":{"start":{"line":249,"column":2},"end":{"line":249,"column":3}},"loc":{"start":{"line":249,"column":9},"end":{"line":251,"column":3}},"line":249},"66":{"name":"(anonymous_66)","decl":{"start":{"line":258,"column":2},"end":{"line":258,"column":3}},"loc":{"start":{"line":258,"column":11},"end":{"line":260,"column":3}},"line":258},"67":{"name":"(anonymous_67)","decl":{"start":{"line":266,"column":2},"end":{"line":266,"column":3}},"loc":{"start":{"line":266,"column":8},"end":{"line":268,"column":3}},"line":266},"68":{"name":"(anonymous_68)","decl":{"start":{"line":274,"column":2},"end":{"line":274,"column":3}},"loc":{"start":{"line":274,"column":8},"end":{"line":276,"column":3}},"line":274},"69":{"name":"(anonymous_69)","decl":{"start":{"line":277,"column":2},"end":{"line":277,"column":3}},"loc":{"start":{"line":277,"column":8},"end":{"line":279,"column":3}},"line":277},"70":{"name":"(anonymous_70)","decl":{"start":{"line":280,"column":2},"end":{"line":280,"column":3}},"loc":{"start":{"line":280,"column":10},"end":{"line":282,"column":3}},"line":280},"71":{"name":"(anonymous_71)","decl":{"start":{"line":283,"column":2},"end":{"line":283,"column":3}},"loc":{"start":{"line":283,"column":8},"end":{"line":285,"column":3}},"line":283},"72":{"name":"(anonymous_72)","decl":{"start":{"line":286,"column":2},"end":{"line":286,"column":3}},"loc":{"start":{"line":286,"column":8},"end":{"line":288,"column":3}},"line":286},"73":{"name":"(anonymous_73)","decl":{"start":{"line":289,"column":2},"end":{"line":289,"column":3}},"loc":{"start":{"line":289,"column":21},"end":{"line":291,"column":3}},"line":289},"74":{"name":"(anonymous_74)","decl":{"start":{"line":292,"column":2},"end":{"line":292,"column":3}},"loc":{"start":{"line":292,"column":28},"end":{"line":294,"column":3}},"line":292},"75":{"name":"(anonymous_75)","decl":{"start":{"line":295,"column":2},"end":{"line":295,"column":3}},"loc":{"start":{"line":295,"column":21},"end":{"line":297,"column":3}},"line":295},"76":{"name":"(anonymous_76)","decl":{"start":{"line":298,"column":2},"end":{"line":298,"column":3}},"loc":{"start":{"line":298,"column":28},"end":{"line":300,"column":3}},"line":298},"77":{"name":"(anonymous_77)","decl":{"start":{"line":301,"column":2},"end":{"line":301,"column":3}},"loc":{"start":{"line":301,"column":20},"end":{"line":303,"column":3}},"line":301},"78":{"name":"(anonymous_78)","decl":{"start":{"line":304,"column":2},"end":{"line":304,"column":3}},"loc":{"start":{"line":304,"column":27},"end":{"line":306,"column":3}},"line":304},"79":{"name":"(anonymous_79)","decl":{"start":{"line":307,"column":2},"end":{"line":307,"column":3}},"loc":{"start":{"line":307,"column":31},"end":{"line":309,"column":3}},"line":307},"80":{"name":"(anonymous_80)","decl":{"start":{"line":310,"column":2},"end":{"line":310,"column":3}},"loc":{"start":{"line":310,"column":32},"end":{"line":312,"column":3}},"line":310},"81":{"name":"(anonymous_81)","decl":{"start":{"line":317,"column":2},"end":{"line":317,"column":3}},"loc":{"start":{"line":317,"column":46},"end":{"line":321,"column":3}},"line":317},"82":{"name":"(anonymous_82)","decl":{"start":{"line":322,"column":2},"end":{"line":322,"column":3}},"loc":{"start":{"line":322,"column":46},"end":{"line":331,"column":3}},"line":322},"83":{"name":"(anonymous_83)","decl":{"start":{"line":332,"column":2},"end":{"line":332,"column":3}},"loc":{"start":{"line":332,"column":13},"end":{"line":334,"column":3}},"line":332},"84":{"name":"(anonymous_84)","decl":{"start":{"line":335,"column":2},"end":{"line":335,"column":3}},"loc":{"start":{"line":335,"column":17},"end":{"line":337,"column":3}},"line":335},"85":{"name":"(anonymous_85)","decl":{"start":{"line":338,"column":2},"end":{"line":338,"column":3}},"loc":{"start":{"line":338,"column":20},"end":{"line":340,"column":3}},"line":338},"86":{"name":"(anonymous_86)","decl":{"start":{"line":341,"column":2},"end":{"line":341,"column":3}},"loc":{"start":{"line":341,"column":22},"end":{"line":346,"column":3}},"line":341},"87":{"name":"(anonymous_87)","decl":{"start":{"line":347,"column":2},"end":{"line":347,"column":3}},"loc":{"start":{"line":347,"column":12},"end":{"line":349,"column":3}},"line":347}},"branchMap":{"0":{"loc":{"start":{"line":120,"column":33},"end":{"line":120,"column":56}},"type":"default-arg","locations":[{"start":{"line":120,"column":51},"end":{"line":120,"column":56}}],"line":120},"1":{"loc":{"start":{"line":165,"column":21},"end":{"line":165,"column":60}},"type":"default-arg","locations":[{"start":{"line":165,"column":39},"end":{"line":165,"column":60}}],"line":165},"2":{"loc":{"start":{"line":167,"column":4},"end":{"line":186,"column":5}},"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":186,"column":5}},{"start":{"line":173,"column":11},"end":{"line":186,"column":5}}],"line":167},"3":{"loc":{"start":{"line":168,"column":6},"end":{"line":172,"column":7}},"type":"if","locations":[{"start":{"line":168,"column":6},"end":{"line":172,"column":7}},{"start":{"line":170,"column":13},"end":{"line":172,"column":7}}],"line":168},"4":{"loc":{"start":{"line":173,"column":11},"end":{"line":186,"column":5}},"type":"if","locations":[{"start":{"line":173,"column":11},"end":{"line":186,"column":5}},{"start":{"line":179,"column":11},"end":{"line":186,"column":5}}],"line":173},"5":{"loc":{"start":{"line":174,"column":6},"end":{"line":178,"column":7}},"type":"if","locations":[{"start":{"line":174,"column":6},"end":{"line":178,"column":7}},{"start":{"line":176,"column":13},"end":{"line":178,"column":7}}],"line":174},"6":{"loc":{"start":{"line":179,"column":11},"end":{"line":186,"column":5}},"type":"if","locations":[{"start":{"line":179,"column":11},"end":{"line":186,"column":5}},{"start":{},"end":{}}],"line":179},"7":{"loc":{"start":{"line":180,"column":28},"end":{"line":180,"column":52}},"type":"cond-expr","locations":[{"start":{"line":180,"column":36},"end":{"line":180,"column":42}},{"start":{"line":180,"column":45},"end":{"line":180,"column":52}}],"line":180},"8":{"loc":{"start":{"line":181,"column":6},"end":{"line":185,"column":7}},"type":"if","locations":[{"start":{"line":181,"column":6},"end":{"line":185,"column":7}},{"start":{"line":183,"column":13},"end":{"line":185,"column":7}}],"line":181},"9":{"loc":{"start":{"line":317,"column":26},"end":{"line":317,"column":44}},"type":"default-arg","locations":[{"start":{"line":317,"column":42},"end":{"line":317,"column":44}}],"line":317},"10":{"loc":{"start":{"line":322,"column":27},"end":{"line":322,"column":44}},"type":"default-arg","locations":[{"start":{"line":322,"column":42},"end":{"line":322,"column":44}}],"line":322},"11":{"loc":{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},"type":"if","locations":[{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},{"start":{},"end":{}}],"line":325},"12":{"loc":{"start":{"line":342,"column":4},"end":{"line":344,"column":5}},"type":"if","locations":[{"start":{"line":342,"column":4},"end":{"line":344,"column":5}},{"start":{},"end":{}}],"line":342}},"s":{"0":359,"1":359,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":261,"11":0,"12":249,"13":0,"14":343,"15":294,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":1,"97":4,"98":4,"99":4,"100":18,"101":18,"102":18,"103":14,"104":4,"105":4,"106":4,"107":13,"108":0,"109":0,"110":0,"111":0,"112":0,"113":17},"f":{"0":359,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":261,"11":0,"12":249,"13":0,"14":343,"15":294,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":4,"82":18,"83":13,"84":0,"85":0,"86":0,"87":17},"b":{"0":[0],"1":[0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0],"10":[18],"11":[14,4],"12":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/base-value-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CustomData, Nullable } from '@univerjs/core';\nimport { FormulaAstLRU } from '../../basics/cache-lru';\nimport { ConcatenateType } from '../../basics/common';\nimport { ErrorType } from '../../basics/error-type';\nimport { ObjectClassType } from '../../basics/object-class-type';\nimport { compareToken } from '../../basics/token';\n\nexport type callbackMapFnType = (currentValue: BaseValueObject, row: number, column: number) => BaseValueObject;\n\nexport interface IArrayValueObject {\n    calculateValueList: Nullable<BaseValueObject>[][];\n    rowCount: number;\n    columnCount: number;\n    unitId: string;\n    sheetId: string;\n    row: number;\n    column: number;\n}\nexport class BaseValueObject extends ObjectClassType {\n    private _customData: CustomData;\n\n    constructor(private _rawValue: string | number | boolean) {\n        super();\n    }\n\n    override isValueObject() {\n        return true;\n    }\n\n    toUnitRange() {\n        return {\n            range: {\n                startColumn: -1,\n                startRow: -1,\n                endRow: -1,\n                endColumn: -1,\n            },\n            sheetId: '',\n            unitId: '',\n        };\n    }\n\n    getValue(): string | number | boolean {\n        /** abstract */\n        return 0;\n    }\n\n    getArrayValue(): Nullable<BaseValueObject>[][] {\n        /** abstract */\n        return [];\n    }\n\n    setValue(value: string | number | boolean) {\n        /** abstract */\n    }\n\n    setArrayValue(value: BaseValueObject[][]) {\n        /** abstract */\n    }\n\n    withCustomData(data: CustomData) {\n        this._customData = data;\n        return this;\n    }\n\n    getCustomData() {\n        return this._customData;\n    }\n\n    isCube() {\n        return false;\n    }\n\n    isString() {\n        return false;\n    }\n\n    isNumber() {\n        return false;\n    }\n\n    isBoolean() {\n        return false;\n    }\n\n    isLambda() {\n        return false;\n    }\n\n    override isError() {\n        return false;\n    }\n\n    isNull() {\n        return false;\n    }\n\n    sum(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    max(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    min(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    count(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    countA(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    countBlank(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    getNegative(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    getReciprocal(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    plus(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    minus(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    multiply(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    divided(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    mod(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    /**\n     * return every value in the array after the callback function, excluding the error value\n     * @param callbackFn\n     * @returns\n     */\n    map(callbackFn: callbackMapFnType): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.NAME);\n    }\n\n    /**\n     * return every value in the array after the callback function\n     * @param callbackFn\n     * @returns\n     */\n    mapValue(callbackFn: callbackMapFnType): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.NAME);\n    }\n\n    compare(valueObject: BaseValueObject, operator: compareToken, isCaseSensitive: boolean = false): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.NAME);\n    }\n\n    isEqual(valueObject: BaseValueObject): BaseValueObject {\n        return this.compare(valueObject as BaseValueObject, compareToken.EQUALS);\n    }\n\n    isNotEqual(valueObject: BaseValueObject): BaseValueObject {\n        return this.compare(valueObject as BaseValueObject, compareToken.NOT_EQUAL);\n    }\n\n    isGreaterThanOrEqual(valueObject: BaseValueObject): BaseValueObject {\n        return this.compare(valueObject as BaseValueObject, compareToken.GREATER_THAN_OR_EQUAL);\n    }\n\n    isLessThanOrEqual(valueObject: BaseValueObject): BaseValueObject {\n        return this.compare(valueObject as BaseValueObject, compareToken.LESS_THAN_OR_EQUAL);\n    }\n\n    isLessThan(valueObject: BaseValueObject): BaseValueObject {\n        return this.compare(valueObject as BaseValueObject, compareToken.LESS_THAN);\n    }\n\n    isGreaterThan(valueObject: BaseValueObject): BaseValueObject {\n        return this.compare(valueObject as BaseValueObject, compareToken.GREATER_THAN);\n    }\n\n    concatenateFront(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.NAME);\n    }\n\n    concatenateBack(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.NAME);\n    }\n\n    plusBy(value: string | number | boolean): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    minusBy(value: string | number | boolean): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    multiplyBy(value: string | number | boolean): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    dividedBy(value: string | number | boolean): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    modInverse(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    compareBy(value: string | number | boolean, operator: compareToken): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.NAME);\n    }\n\n    concatenate(value: string | number | boolean, concatenateType = ConcatenateType.FRONT): string {\n        let currentValue = this.getValue().toString();\n        if (typeof value === 'string') {\n            if (concatenateType === ConcatenateType.FRONT) {\n                currentValue = value + currentValue;\n            } else {\n                currentValue += value;\n            }\n        } else if (typeof value === 'number') {\n            if (concatenateType === ConcatenateType.FRONT) {\n                currentValue = value.toString() + currentValue;\n            } else {\n                currentValue += value.toString();\n            }\n        } else if (typeof value === 'boolean') {\n            const booleanString = value ? 'TRUE' : 'FALSE';\n            if (concatenateType === ConcatenateType.FRONT) {\n                currentValue = booleanString + currentValue;\n            } else {\n                currentValue += booleanString;\n            }\n        }\n\n        return currentValue;\n    }\n\n    pow(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    powInverse(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    sqrt(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    cbrt(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    cos(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    cosh(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    acos(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    acosh(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    sin(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    sinh(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    asin(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    asinh(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    tan(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    tanh(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    atan(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    atan2(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    atan2Inverse(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    atanh(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    /**\n     * Calculate the mean of the entire array.\n     *\n     * reference https://numpy.org/doc/stable/reference/generated/numpy.mean.html#numpy.mean\n     *\n     */\n    mean(): BaseValueObject {\n        /** abstract */\n        return this;\n    }\n\n    /**\n     * Calculate the median of the entire array.\n     *\n     * reference https://numpy.org/doc/stable/reference/generated/numpy.median.html\n     *\n     */\n    median(): BaseValueObject {\n        /** abstract */\n        return this;\n    }\n\n    /**\n     * Calculate the variance of the entire array.\n     *\n     * reference https://numpy.org/doc/stable/reference/generated/numpy.var.html\n     */\n    var(): BaseValueObject {\n        /** abstract */\n        return this;\n    }\n\n    /**\n     * Calculate the standard deviation of the entire array.\n     *\n     * reference https://numpy.org/doc/stable/reference/generated/numpy.std.html\n     */\n    std(): BaseValueObject {\n        /** abstract */\n        return this;\n    }\n\n    log(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    log10(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    exp(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    abs(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    round(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    roundInverse(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    floor(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    floorInverse(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    ceil(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    ceilInverse(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    convertToNumberObjectValue(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    convertToBooleanObjectValue(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n}\n\nconst Error_CACHE_LRU_COUNT = 1000;\n\nexport const ErrorValueObjectCache = new FormulaAstLRU<ErrorValueObject>(Error_CACHE_LRU_COUNT);\nexport class ErrorValueObject extends BaseValueObject {\n    static create(errorType: ErrorType, errorContent: string = '') {\n        const key = `${errorType}-${errorContent}`;\n        const cached = ErrorValueObjectCache.get(key);\n        if (cached) {\n            return cached;\n        }\n        const instance = new ErrorValueObject(errorType, errorContent);\n        ErrorValueObjectCache.set(key, instance);\n        return instance;\n    }\n\n    constructor(\n        private _errorType: ErrorType,\n        private _errorContent: string = ''\n    ) {\n        super(_errorType);\n    }\n\n    override getValue() {\n        return this._errorType;\n    }\n\n    getErrorType() {\n        return this._errorType;\n    }\n\n    getErrorContent() {\n        return this._errorContent;\n    }\n\n    override isEqualType(object: ObjectClassType) {\n        if ((object as ErrorValueObject).getErrorType() === this.getErrorType()) {\n            return true;\n        }\n        return false;\n    }\n\n    override isError() {\n        return true;\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"99674864e405c9d4eb23b712dc948445ddd6c270"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/calculate.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/calculate.ts","statementMap":{"0":{"start":{"line":4,"column":2},"end":{"line":23,"column":3}},"1":{"start":{"line":6,"column":6},"end":{"line":6,"column":35}},"2":{"start":{"line":7,"column":6},"end":{"line":7,"column":12}},"3":{"start":{"line":9,"column":6},"end":{"line":9,"column":38}},"4":{"start":{"line":10,"column":6},"end":{"line":10,"column":12}},"5":{"start":{"line":12,"column":6},"end":{"line":12,"column":47}},"6":{"start":{"line":13,"column":6},"end":{"line":13,"column":12}},"7":{"start":{"line":15,"column":6},"end":{"line":15,"column":41}},"8":{"start":{"line":16,"column":6},"end":{"line":16,"column":12}},"9":{"start":{"line":18,"column":6},"end":{"line":18,"column":50}},"10":{"start":{"line":19,"column":6},"end":{"line":19,"column":12}},"11":{"start":{"line":21,"column":6},"end":{"line":21,"column":38}},"12":{"start":{"line":22,"column":6},"end":{"line":22,"column":12}},"13":{"start":{"line":24,"column":2},"end":{"line":24,"column":16}}},"fnMap":{"0":{"name":"reverseCompareOperator","decl":{"start":{"line":2,"column":16},"end":{"line":2,"column":38}},"loc":{"start":{"line":2,"column":49},"end":{"line":25,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":2},"end":{"line":23,"column":3}},"type":"switch","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":12}},{"start":{"line":8,"column":4},"end":{"line":10,"column":12}},{"start":{"line":11,"column":4},"end":{"line":13,"column":12}},{"start":{"line":14,"column":4},"end":{"line":16,"column":12}},{"start":{"line":17,"column":4},"end":{"line":19,"column":12}},{"start":{"line":20,"column":4},"end":{"line":22,"column":12}}],"line":4}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"f":{"0":0},"b":{"0":[0,0,0,0,0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/calculate.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { compareToken } from './token';\n\nexport function reverseCompareOperator(operator: compareToken): compareToken {\n    let result: compareToken;\n    switch (operator) {\n        case compareToken.EQUALS:\n            result = compareToken.EQUALS;\n            break;\n        case compareToken.GREATER_THAN:\n            result = compareToken.LESS_THAN;\n            break;\n        case compareToken.GREATER_THAN_OR_EQUAL:\n            result = compareToken.LESS_THAN_OR_EQUAL;\n            break;\n        case compareToken.LESS_THAN:\n            result = compareToken.GREATER_THAN;\n            break;\n        case compareToken.LESS_THAN_OR_EQUAL:\n            result = compareToken.GREATER_THAN_OR_EQUAL;\n            break;\n        case compareToken.NOT_EQUAL:\n            result = compareToken.NOT_EQUAL;\n            break;\n    }\n    return result;\n}\n"],"mappings":"AAgBA,SAAS,oBAAoB;AAEtB,gBAAS,uBAAuB,UAAsC;AACzE,MAAI;AACJ,UAAQ,UAAU;AAAA,IACd,KAAK,aAAa;AACd,eAAS,aAAa;AACtB;AAAA,IACJ,KAAK,aAAa;AACd,eAAS,aAAa;AACtB;AAAA,IACJ,KAAK,aAAa;AACd,eAAS,aAAa;AACtB;AAAA,IACJ,KAAK,aAAa;AACd,eAAS,aAAa;AACtB;AAAA,IACJ,KAAK,aAAa;AACd,eAAS,aAAa;AACtB;AAAA,IACJ,KAAK,aAAa;AACd,eAAS,aAAa;AACtB;AAAA,EACR;AACA,SAAO;AACX;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ac6106bb926586db8d7a182a9929a05c843ba661"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/math-kit.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/math-kit.ts","statementMap":{"0":{"start":{"line":3,"column":17},"end":{"line":3,"column":22}},"1":{"start":{"line":4,"column":2},"end":{"line":6,"column":3}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":18}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":42}},"4":{"start":{"line":10,"column":17},"end":{"line":10,"column":22}},"5":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":18}},"7":{"start":{"line":14,"column":2},"end":{"line":14,"column":42}},"8":{"start":{"line":17,"column":17},"end":{"line":17,"column":22}},"9":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"11":{"start":{"line":21,"column":2},"end":{"line":21,"column":42}},"12":{"start":{"line":24,"column":17},"end":{"line":24,"column":22}},"13":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"14":{"start":{"line":26,"column":4},"end":{"line":26,"column":18}},"15":{"start":{"line":28,"column":2},"end":{"line":28,"column":42}},"16":{"start":{"line":31,"column":17},"end":{"line":31,"column":44}},"17":{"start":{"line":32,"column":18},"end":{"line":32,"column":43}},"18":{"start":{"line":33,"column":2},"end":{"line":33,"column":63}},"19":{"start":{"line":36,"column":17},"end":{"line":36,"column":44}},"20":{"start":{"line":37,"column":18},"end":{"line":37,"column":43}},"21":{"start":{"line":38,"column":2},"end":{"line":38,"column":63}},"22":{"start":{"line":41,"column":17},"end":{"line":41,"column":44}},"23":{"start":{"line":42,"column":18},"end":{"line":42,"column":43}},"24":{"start":{"line":43,"column":2},"end":{"line":43,"column":62}},"25":{"start":{"line":46,"column":2},"end":{"line":46,"column":72}},"26":{"start":{"line":49,"column":2},"end":{"line":49,"column":53}},"27":{"start":{"line":52,"column":2},"end":{"line":52,"column":26}},"28":{"start":{"line":55,"column":2},"end":{"line":55,"column":25}},"29":{"start":{"line":58,"column":2},"end":{"line":58,"column":17}},"30":{"start":{"line":61,"column":2},"end":{"line":61,"column":15}},"31":{"start":{"line":64,"column":2},"end":{"line":64,"column":16}},"32":{"start":{"line":67,"column":2},"end":{"line":67,"column":15}},"33":{"start":{"line":70,"column":2},"end":{"line":70,"column":16}},"34":{"start":{"line":73,"column":2},"end":{"line":73,"column":55}},"35":{"start":{"line":76,"column":2},"end":{"line":76,"column":44}},"36":{"start":{"line":79,"column":22},"end":{"line":79,"column":43}},"37":{"start":{"line":80,"column":2},"end":{"line":80,"column":83}},"38":{"start":{"line":83,"column":2},"end":{"line":83,"column":31}}},"fnMap":{"0":{"name":"plus","decl":{"start":{"line":2,"column":16},"end":{"line":2,"column":20}},"loc":{"start":{"line":2,"column":27},"end":{"line":8,"column":1}},"line":2},"1":{"name":"minus","decl":{"start":{"line":9,"column":16},"end":{"line":9,"column":21}},"loc":{"start":{"line":9,"column":28},"end":{"line":15,"column":1}},"line":9},"2":{"name":"multiply","decl":{"start":{"line":16,"column":16},"end":{"line":16,"column":24}},"loc":{"start":{"line":16,"column":31},"end":{"line":22,"column":1}},"line":16},"3":{"name":"divide","decl":{"start":{"line":23,"column":16},"end":{"line":23,"column":22}},"loc":{"start":{"line":23,"column":29},"end":{"line":29,"column":1}},"line":23},"4":{"name":"round","decl":{"start":{"line":30,"column":16},"end":{"line":30,"column":21}},"loc":{"start":{"line":30,"column":39},"end":{"line":34,"column":1}},"line":30},"5":{"name":"floor","decl":{"start":{"line":35,"column":16},"end":{"line":35,"column":21}},"loc":{"start":{"line":35,"column":39},"end":{"line":39,"column":1}},"line":35},"6":{"name":"ceil","decl":{"start":{"line":40,"column":16},"end":{"line":40,"column":20}},"loc":{"start":{"line":40,"column":38},"end":{"line":44,"column":1}},"line":40},"7":{"name":"baseEpsilon","decl":{"start":{"line":45,"column":16},"end":{"line":45,"column":27}},"loc":{"start":{"line":45,"column":42},"end":{"line":47,"column":1}},"line":45},"8":{"name":"mod","decl":{"start":{"line":48,"column":16},"end":{"line":48,"column":19}},"loc":{"start":{"line":48,"column":35},"end":{"line":50,"column":1}},"line":48},"9":{"name":"pow","decl":{"start":{"line":51,"column":16},"end":{"line":51,"column":19}},"loc":{"start":{"line":51,"column":36},"end":{"line":53,"column":1}},"line":51},"10":{"name":"sqrt","decl":{"start":{"line":54,"column":16},"end":{"line":54,"column":20}},"loc":{"start":{"line":54,"column":27},"end":{"line":56,"column":1}},"line":54},"11":{"name":"equals","decl":{"start":{"line":57,"column":16},"end":{"line":57,"column":22}},"loc":{"start":{"line":57,"column":29},"end":{"line":59,"column":1}},"line":57},"12":{"name":"greaterThan","decl":{"start":{"line":60,"column":16},"end":{"line":60,"column":27}},"loc":{"start":{"line":60,"column":34},"end":{"line":62,"column":1}},"line":60},"13":{"name":"greaterThanOrEquals","decl":{"start":{"line":63,"column":16},"end":{"line":63,"column":35}},"loc":{"start":{"line":63,"column":42},"end":{"line":65,"column":1}},"line":63},"14":{"name":"lessThan","decl":{"start":{"line":66,"column":16},"end":{"line":66,"column":24}},"loc":{"start":{"line":66,"column":31},"end":{"line":68,"column":1}},"line":66},"15":{"name":"lessThanOrEquals","decl":{"start":{"line":69,"column":16},"end":{"line":69,"column":32}},"loc":{"start":{"line":69,"column":39},"end":{"line":71,"column":1}},"line":69},"16":{"name":"strip","decl":{"start":{"line":72,"column":16},"end":{"line":72,"column":21}},"loc":{"start":{"line":72,"column":43},"end":{"line":74,"column":1}},"line":72},"17":{"name":"withinErrorMargin","decl":{"start":{"line":75,"column":16},"end":{"line":75,"column":33}},"loc":{"start":{"line":75,"column":75},"end":{"line":77,"column":1}},"line":75},"18":{"name":"stripErrorMargin","decl":{"start":{"line":78,"column":16},"end":{"line":78,"column":32}},"loc":{"start":{"line":78,"column":73},"end":{"line":81,"column":1}},"line":78},"19":{"name":"getFractionalPart","decl":{"start":{"line":82,"column":16},"end":{"line":82,"column":33}},"loc":{"start":{"line":82,"column":39},"end":{"line":84,"column":1}},"line":82}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":2},"end":{"line":6,"column":3}},"type":"if","locations":[{"start":{"line":4,"column":2},"end":{"line":6,"column":3}},{"start":{},"end":{}}],"line":4},"1":{"loc":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},{"start":{},"end":{}}],"line":11},"2":{"loc":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},{"start":{},"end":{}}],"line":18},"3":{"loc":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},{"start":{},"end":{}}],"line":25},"4":{"loc":{"start":{"line":72,"column":27},"end":{"line":72,"column":41}},"type":"default-arg","locations":[{"start":{"line":72,"column":39},"end":{"line":72,"column":41}}],"line":72},"5":{"loc":{"start":{"line":75,"column":47},"end":{"line":75,"column":73}},"type":"default-arg","locations":[{"start":{"line":75,"column":59},"end":{"line":75,"column":73}}],"line":75},"6":{"loc":{"start":{"line":78,"column":38},"end":{"line":78,"column":52}},"type":"default-arg","locations":[{"start":{"line":78,"column":50},"end":{"line":78,"column":52}}],"line":78},"7":{"loc":{"start":{"line":78,"column":54},"end":{"line":78,"column":71}},"type":"default-arg","locations":[{"start":{"line":78,"column":66},"end":{"line":78,"column":71}}],"line":78},"8":{"loc":{"start":{"line":80,"column":9},"end":{"line":80,"column":82}},"type":"cond-expr","locations":[{"start":{"line":80,"column":58},"end":{"line":80,"column":69}},{"start":{"line":80,"column":72},"end":{"line":80,"column":82}}],"line":80}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0],"5":[0],"6":[0],"7":[0],"8":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/math-kit.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Since Excel follows the IEEE 754 specification, it only handles precision issues when displaying cells. For example, =0.1+0.2, the stored value in XML is 0.30000000000000004, and the displayed value is 0.3. The accuracy of the calculation process does not need to be considered. We only focus on the accuracy of the calculation results. Any result is processed within 15 digits.\n\n Reference https://en.wikipedia.org/wiki/Numeric_precision_in_Microsoft_Excel\n */\n\nimport Decimal from 'decimal.js';\n\nexport function plus(a: number, b: number): number {\n    const result = a + b;\n    if (Number.isSafeInteger(result)) {\n        return result;\n    }\n    return new Decimal(a).add(b).toNumber();\n}\n\nexport function minus(a: number, b: number): number {\n    const result = a - b;\n    if (Number.isSafeInteger(result)) {\n        return result;\n    }\n    return new Decimal(a).sub(b).toNumber();\n}\n\nexport function multiply(a: number, b: number): number {\n    const result = a * b;\n    if (Number.isSafeInteger(result)) {\n        return result;\n    }\n    return new Decimal(a).mul(b).toNumber();\n}\n\nexport function divide(a: number, b: number): number {\n    const result = a / b;\n    if (Number.isSafeInteger(result)) {\n        return result;\n    }\n    return new Decimal(a).div(b).toNumber();\n}\n/**\n * Rounds a number to a specified number of decimal places.\n * @param base The number to round.\n * @param precision The number of decimal places to round to.\n * @returns The rounded number.\n */\nexport function round(base: number, precision: number): number {\n    const factor = 10 ** Math.trunc(precision);\n    const epsilon = baseEpsilon(base, factor);\n    return Math.round(multiply(base, factor) + epsilon) / factor;\n}\n\n/**\n * Rounds down a number to a specified number of decimal places.\n * @param base The number to round down.\n * @param precision The number of decimal places to round down to.\n * @returns The floored number.\n */\nexport function floor(base: number, precision: number): number {\n    const factor = 10 ** Math.trunc(precision);\n    const epsilon = baseEpsilon(base, factor);\n    return Math.floor(multiply(base, factor) + epsilon) / factor;\n}\n\n/**\n * Rounds up a number to a specified number of decimal places.\n * @param base The number to round up.\n * @param precision The number of decimal places to round up to.\n * @returns The ceiled number.\n */\nexport function ceil(base: number, precision: number): number {\n    const factor = 10 ** Math.trunc(precision);\n    const epsilon = baseEpsilon(base, factor);\n    return Math.ceil(multiply(base, factor) - epsilon) / factor;\n}\n\nexport function baseEpsilon(base: number, factor: number) {\n    return Number.EPSILON * Math.max(1, Math.abs(multiply(base, factor)));\n}\n\n/**\n * Returns the remainder of division of two numbers.\n * @param base The dividend.\n * @param divisor The divisor.\n * @returns The remainder.\n */\nexport function mod(base: number, divisor: number): number {\n    return base - divisor * Math.floor(base / divisor);\n}\n\n/**\n * Raises a base number to the power of the exponent.\n *\n * @param base The base number.\n * @param exponent The exponent.\n * @returns The result of base raised to the power of exponent.\n */\nexport function pow(base: number, exponent: number): number {\n    return base ** exponent;\n}\n\n/**\n * Calculates the square root of a number.\n * @param base The number to take the square root of.\n * @returns The square root of base.\n */\nexport function sqrt(base: number): number {\n    return Math.sqrt(base);\n}\n\n/**\n * Compares two numbers for equality.\n * @param a The first number.\n * @param b The second number.\n * @returns True if numbers are equal, false otherwise.\n */\nexport function equals(a: number, b: number): boolean {\n    return a === b;\n}\n\n/**\n * Checks if the first number is greater than the second number.\n * @param a The first number.\n * @param b The second number.\n * @returns True if a is greater than b, false otherwise.\n */\nexport function greaterThan(a: number, b: number): boolean {\n    return a > b;\n}\n\n/**\n * Checks if the first number is greater than or equal to the second number.\n * @param a The first number.\n * @param b The second number.\n * @returns True if a is greater than or equal to b, false otherwise.\n */\nexport function greaterThanOrEquals(a: number, b: number): boolean {\n    return a >= b;\n}\n\n/**\n * Checks if the first number is less than the second number.\n * @param a The first number.\n * @param b The second number.\n * @returns True if a is less than b, false otherwise.\n */\nexport function lessThan(a: number, b: number): boolean {\n    return a < b;\n}\n\n/**\n * Checks if the first number is less than or equal to the second number.\n * @param a The first number.\n * @param b The second number.\n * @returns True if a is less than or equal to b, false otherwise.\n */\nexport function lessThanOrEquals(a: number, b: number): boolean {\n    return a <= b;\n}\n\n/**\n * Complete the number to the specified accuracy and solve the accuracy error,\n *\n * e.g. strip(0.30000000000000004,15) => 0.3\n *\n * Why precision is 15?\n *\n * Excel only saves 15 digits\n *\n  reference: https://stackoverflow.com/questions/1458633/how-to-deal-with-floating-point-number-precision-in-javascript\n * @param num\n * @param precision\n * @returns\n */\nexport function strip(num: number, precision = 15) {\n    return Number.parseFloat(num.toPrecision(precision));\n}\n\n/**\n * Set an error range for floating-point calculations. If the error is less than Number.EPSILON, we can consider the result reliable.\n * @param left\n * @param right\n * @returns\n */\nexport function withinErrorMargin(left: number, right: number, tolerance = Number.EPSILON) {\n    return Math.abs(left - right) < tolerance;\n}\n\n/**\n * Tolerance for the results of accuracy issues to tolerate certain errors\n *\n * Why is precision 12?\n   This is an empirical choice. Generally, choosing 12 can solve most of the 0001 and 0009 problems. e.g. floor(5,1.23) = 0.0800000000000001\n\n   why is tolerance 1e-10?\n   Since the value of Number.EPSILON is too small to be applicable to all floating-point precision processing, for most application scenarios, the error range of 1e-10 can tolerate common floating-point errors.\n   For example, =30.2 - 30 displayed as 0.2 in Excel\n * @param num\n * @param precision\n * @param tolerance\n * @returns\n */\nexport function stripErrorMargin(num: number, precision = 12, tolerance = 1e-10) {\n    const stripResult = strip(num, precision);\n    return withinErrorMargin(num, stripResult, tolerance) ? stripResult : strip(num);\n}\n\n/**\n * Get the fractional part of the number\n * @param num\n * @returns\n */\nexport function getFractionalPart(num: number): number {\n    return num - Math.trunc(num);\n}\n"],"mappings":"AAsBA,OAAO,aAAa;AAEb,gBAAS,KAAK,GAAW,GAAmB;AAC/C,QAAM,SAAS,IAAI;AACnB,MAAI,OAAO,cAAc,MAAM,GAAG;AAC9B,WAAO;AAAA,EACX;AACA,SAAO,IAAI,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAC1C;AAEO,gBAAS,MAAM,GAAW,GAAmB;AAChD,QAAM,SAAS,IAAI;AACnB,MAAI,OAAO,cAAc,MAAM,GAAG;AAC9B,WAAO;AAAA,EACX;AACA,SAAO,IAAI,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAC1C;AAEO,gBAAS,SAAS,GAAW,GAAmB;AACnD,QAAM,SAAS,IAAI;AACnB,MAAI,OAAO,cAAc,MAAM,GAAG;AAC9B,WAAO;AAAA,EACX;AACA,SAAO,IAAI,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAC1C;AAEO,gBAAS,OAAO,GAAW,GAAmB;AACjD,QAAM,SAAS,IAAI;AACnB,MAAI,OAAO,cAAc,MAAM,GAAG;AAC9B,WAAO;AAAA,EACX;AACA,SAAO,IAAI,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAC1C;AAOO,gBAAS,MAAM,MAAc,WAA2B;AAC3D,QAAM,SAAS,MAAM,KAAK,MAAM,SAAS;AACzC,QAAM,UAAU,YAAY,MAAM,MAAM;AACxC,SAAO,KAAK,MAAM,SAAS,MAAM,MAAM,IAAI,OAAO,IAAI;AAC1D;AAQO,gBAAS,MAAM,MAAc,WAA2B;AAC3D,QAAM,SAAS,MAAM,KAAK,MAAM,SAAS;AACzC,QAAM,UAAU,YAAY,MAAM,MAAM;AACxC,SAAO,KAAK,MAAM,SAAS,MAAM,MAAM,IAAI,OAAO,IAAI;AAC1D;AAQO,gBAAS,KAAK,MAAc,WAA2B;AAC1D,QAAM,SAAS,MAAM,KAAK,MAAM,SAAS;AACzC,QAAM,UAAU,YAAY,MAAM,MAAM;AACxC,SAAO,KAAK,KAAK,SAAS,MAAM,MAAM,IAAI,OAAO,IAAI;AACzD;AAEO,gBAAS,YAAY,MAAc,QAAgB;AACtD,SAAO,OAAO,UAAU,KAAK,IAAI,GAAG,KAAK,IAAI,SAAS,MAAM,MAAM,CAAC,CAAC;AACxE;AAQO,gBAAS,IAAI,MAAc,SAAyB;AACvD,SAAO,OAAO,UAAU,KAAK,MAAM,OAAO,OAAO;AACrD;AASO,gBAAS,IAAI,MAAc,UAA0B;AACxD,SAAO,QAAQ;AACnB;AAOO,gBAAS,KAAK,MAAsB;AACvC,SAAO,KAAK,KAAK,IAAI;AACzB;AAQO,gBAAS,OAAO,GAAW,GAAoB;AAClD,SAAO,MAAM;AACjB;AAQO,gBAAS,YAAY,GAAW,GAAoB;AACvD,SAAO,IAAI;AACf;AAQO,gBAAS,oBAAoB,GAAW,GAAoB;AAC/D,SAAO,KAAK;AAChB;AAQO,gBAAS,SAAS,GAAW,GAAoB;AACpD,SAAO,IAAI;AACf;AAQO,gBAAS,iBAAiB,GAAW,GAAoB;AAC5D,SAAO,KAAK;AAChB;AAgBO,gBAAS,MAAM,KAAa,YAAY,IAAI;AAC/C,SAAO,OAAO,WAAW,IAAI,YAAY,SAAS,CAAC;AACvD;AAQO,gBAAS,kBAAkB,MAAc,OAAe,YAAY,OAAO,SAAS;AACvF,SAAO,KAAK,IAAI,OAAO,KAAK,IAAI;AACpC;AAgBO,gBAAS,iBAAiB,KAAa,YAAY,IAAI,YAAY,OAAO;AAC7E,QAAM,cAAc,MAAM,KAAK,SAAS;AACxC,SAAO,kBAAkB,KAAK,aAAa,SAAS,IAAI,cAAc,MAAM,GAAG;AACnF;AAOO,gBAAS,kBAAkB,KAAqB;AACnD,SAAO,MAAM,KAAK,MAAM,GAAG;AAC/B;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"170edf1d7e59e35248b6755cf625fa5892e2ccde"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/primitive-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/primitive-object.ts","statementMap":{"0":{"start":{"line":14,"column":4},"end":{"line":14,"column":62}},"1":{"start":{"line":15,"column":4},"end":{"line":15,"column":26}},"2":{"start":{"line":18,"column":4},"end":{"line":18,"column":16}},"3":{"start":{"line":21,"column":4},"end":{"line":21,"column":57}},"4":{"start":{"line":24,"column":4},"end":{"line":24,"column":58}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":61}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":60}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":56}},"8":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"9":{"start":{"line":37,"column":6},"end":{"line":37,"column":73}},"10":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"11":{"start":{"line":40,"column":6},"end":{"line":40,"column":77}},"12":{"start":{"line":42,"column":4},"end":{"line":42,"column":70}},"13":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"14":{"start":{"line":46,"column":6},"end":{"line":46,"column":71}},"15":{"start":{"line":48,"column":4},"end":{"line":48,"column":101}},"16":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"17":{"start":{"line":52,"column":6},"end":{"line":52,"column":72}},"18":{"start":{"line":54,"column":4},"end":{"line":54,"column":100}},"19":{"start":{"line":57,"column":4},"end":{"line":57,"column":53}},"20":{"start":{"line":60,"column":4},"end":{"line":60,"column":54}},"21":{"start":{"line":63,"column":4},"end":{"line":63,"column":57}},"22":{"start":{"line":66,"column":4},"end":{"line":66,"column":56}},"23":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"24":{"start":{"line":70,"column":6},"end":{"line":70,"column":69}},"25":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"26":{"start":{"line":73,"column":6},"end":{"line":73,"column":73}},"27":{"start":{"line":75,"column":4},"end":{"line":75,"column":66}},"28":{"start":{"line":78,"column":4},"end":{"line":78,"column":56}},"29":{"start":{"line":81,"column":4},"end":{"line":81,"column":46}},"30":{"start":{"line":84,"column":4},"end":{"line":84,"column":46}},"31":{"start":{"line":87,"column":4},"end":{"line":87,"column":45}},"32":{"start":{"line":90,"column":4},"end":{"line":90,"column":46}},"33":{"start":{"line":93,"column":4},"end":{"line":93,"column":46}},"34":{"start":{"line":96,"column":4},"end":{"line":96,"column":47}},"35":{"start":{"line":99,"column":4},"end":{"line":99,"column":45}},"36":{"start":{"line":102,"column":4},"end":{"line":102,"column":46}},"37":{"start":{"line":105,"column":4},"end":{"line":105,"column":46}},"38":{"start":{"line":108,"column":4},"end":{"line":108,"column":47}},"39":{"start":{"line":111,"column":4},"end":{"line":111,"column":45}},"40":{"start":{"line":114,"column":4},"end":{"line":114,"column":46}},"41":{"start":{"line":117,"column":4},"end":{"line":117,"column":46}},"42":{"start":{"line":120,"column":4},"end":{"line":120,"column":58}},"43":{"start":{"line":123,"column":4},"end":{"line":123,"column":47}},"44":{"start":{"line":126,"column":4},"end":{"line":126,"column":50}},"45":{"start":{"line":129,"column":4},"end":{"line":129,"column":50}},"46":{"start":{"line":132,"column":4},"end":{"line":132,"column":45}},"47":{"start":{"line":135,"column":4},"end":{"line":135,"column":45}},"48":{"start":{"line":138,"column":4},"end":{"line":138,"column":58}},"49":{"start":{"line":141,"column":4},"end":{"line":141,"column":58}},"50":{"start":{"line":144,"column":4},"end":{"line":144,"column":57}},"51":{"start":{"line":147,"column":4},"end":{"line":147,"column":39}},"52":{"start":{"line":150,"column":4},"end":{"line":150,"column":44}},"53":{"start":{"line":154,"column":11},"end":{"line":154,"column":16}},"54":{"start":{"line":158,"column":4},"end":{"line":161,"column":5}},"55":{"start":{"line":159,"column":6},"end":{"line":159,"column":78}},"56":{"start":{"line":160,"column":6},"end":{"line":160,"column":32}},"57":{"start":{"line":162,"column":4},"end":{"line":162,"column":79}},"58":{"start":{"line":163,"column":4},"end":{"line":163,"column":31}},"59":{"start":{"line":166,"column":4},"end":{"line":166,"column":20}},"60":{"start":{"line":167,"column":4},"end":{"line":167,"column":27}},"61":{"start":{"line":170,"column":4},"end":{"line":170,"column":23}},"62":{"start":{"line":173,"column":4},"end":{"line":173,"column":16}},"63":{"start":{"line":176,"column":25},"end":{"line":176,"column":40}},"64":{"start":{"line":177,"column":17},"end":{"line":177,"column":18}},"65":{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},"66":{"start":{"line":179,"column":6},"end":{"line":179,"column":17}},"67":{"start":{"line":181,"column":4},"end":{"line":181,"column":45}},"68":{"start":{"line":184,"column":25},"end":{"line":184,"column":40}},"69":{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},"70":{"start":{"line":186,"column":6},"end":{"line":186,"column":41}},"71":{"start":{"line":188,"column":4},"end":{"line":188,"column":58}},"72":{"start":{"line":191,"column":4},"end":{"line":191,"column":53}},"73":{"start":{"line":194,"column":4},"end":{"line":194,"column":54}},"74":{"start":{"line":197,"column":4},"end":{"line":197,"column":57}},"75":{"start":{"line":200,"column":4},"end":{"line":200,"column":56}},"76":{"start":{"line":203,"column":4},"end":{"line":203,"column":52}},"77":{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},"78":{"start":{"line":207,"column":6},"end":{"line":207,"column":73}},"79":{"start":{"line":209,"column":4},"end":{"line":211,"column":5}},"80":{"start":{"line":210,"column":6},"end":{"line":210,"column":68}},"81":{"start":{"line":212,"column":4},"end":{"line":212,"column":60}},"82":{"start":{"line":215,"column":17},"end":{"line":215,"column":22}},"83":{"start":{"line":216,"column":4},"end":{"line":221,"column":5}},"84":{"start":{"line":217,"column":6},"end":{"line":217,"column":45}},"85":{"start":{"line":218,"column":11},"end":{"line":221,"column":5}},"86":{"start":{"line":219,"column":28},"end":{"line":219,"column":67}},"87":{"start":{"line":220,"column":6},"end":{"line":220,"column":70}},"88":{"start":{"line":222,"column":4},"end":{"line":222,"column":45}},"89":{"start":{"line":225,"column":4},"end":{"line":234,"column":5}},"90":{"start":{"line":228,"column":8},"end":{"line":228,"column":20}},"91":{"start":{"line":233,"column":8},"end":{"line":233,"column":21}},"92":{"start":{"line":237,"column":4},"end":{"line":237,"column":65}},"93":{"start":{"line":240,"column":4},"end":{"line":240,"column":64}},"94":{"start":{"line":243,"column":25},"end":{"line":243,"column":40}},"95":{"start":{"line":244,"column":17},"end":{"line":244,"column":18}},"96":{"start":{"line":245,"column":4},"end":{"line":247,"column":5}},"97":{"start":{"line":246,"column":6},"end":{"line":246,"column":17}},"98":{"start":{"line":248,"column":4},"end":{"line":248,"column":44}},"99":{"start":{"line":251,"column":4},"end":{"line":251,"column":52}},"100":{"start":{"line":254,"column":4},"end":{"line":254,"column":42}},"101":{"start":{"line":257,"column":4},"end":{"line":257,"column":42}},"102":{"start":{"line":260,"column":4},"end":{"line":260,"column":41}},"103":{"start":{"line":263,"column":4},"end":{"line":263,"column":42}},"104":{"start":{"line":266,"column":4},"end":{"line":266,"column":42}},"105":{"start":{"line":269,"column":4},"end":{"line":269,"column":43}},"106":{"start":{"line":272,"column":4},"end":{"line":272,"column":41}},"107":{"start":{"line":275,"column":4},"end":{"line":275,"column":42}},"108":{"start":{"line":278,"column":4},"end":{"line":278,"column":42}},"109":{"start":{"line":281,"column":4},"end":{"line":281,"column":43}},"110":{"start":{"line":284,"column":4},"end":{"line":284,"column":41}},"111":{"start":{"line":287,"column":4},"end":{"line":287,"column":42}},"112":{"start":{"line":290,"column":4},"end":{"line":290,"column":42}},"113":{"start":{"line":293,"column":4},"end":{"line":293,"column":54}},"114":{"start":{"line":296,"column":4},"end":{"line":296,"column":43}},"115":{"start":{"line":299,"column":4},"end":{"line":299,"column":41}},"116":{"start":{"line":302,"column":4},"end":{"line":302,"column":43}},"117":{"start":{"line":305,"column":4},"end":{"line":305,"column":41}},"118":{"start":{"line":308,"column":4},"end":{"line":308,"column":41}},"119":{"start":{"line":311,"column":4},"end":{"line":311,"column":54}},"120":{"start":{"line":314,"column":4},"end":{"line":314,"column":54}},"121":{"start":{"line":317,"column":4},"end":{"line":317,"column":53}},"122":{"start":{"line":320,"column":4},"end":{"line":320,"column":62}},"123":{"start":{"line":323,"column":4},"end":{"line":323,"column":16}},"124":{"start":{"line":327,"column":11},"end":{"line":327,"column":12}},"125":{"start":{"line":329,"column":21},"end":{"line":329,"column":49}},"126":{"start":{"line":330,"column":4},"end":{"line":332,"column":5}},"127":{"start":{"line":331,"column":6},"end":{"line":331,"column":35}},"128":{"start":{"line":333,"column":4},"end":{"line":333,"column":20}},"129":{"start":{"line":336,"column":4},"end":{"line":336,"column":20}},"130":{"start":{"line":337,"column":4},"end":{"line":337,"column":35}},"131":{"start":{"line":340,"column":4},"end":{"line":340,"column":23}},"132":{"start":{"line":343,"column":4},"end":{"line":343,"column":24}},"133":{"start":{"line":346,"column":4},"end":{"line":346,"column":16}},"134":{"start":{"line":349,"column":4},"end":{"line":349,"column":51}},"135":{"start":{"line":352,"column":4},"end":{"line":352,"column":53}},"136":{"start":{"line":355,"column":4},"end":{"line":357,"column":5}},"137":{"start":{"line":356,"column":6},"end":{"line":356,"column":36}},"138":{"start":{"line":358,"column":17},"end":{"line":358,"column":52}},"139":{"start":{"line":359,"column":4},"end":{"line":361,"column":5}},"140":{"start":{"line":360,"column":6},"end":{"line":360,"column":20}},"141":{"start":{"line":362,"column":20},"end":{"line":362,"column":107}},"142":{"start":{"line":363,"column":4},"end":{"line":363,"column":74}},"143":{"start":{"line":364,"column":4},"end":{"line":364,"column":18}},"144":{"start":{"line":367,"column":4},"end":{"line":367,"column":29}},"145":{"start":{"line":370,"column":4},"end":{"line":376,"column":5}},"146":{"start":{"line":371,"column":16},"end":{"line":371,"column":41}},"147":{"start":{"line":372,"column":6},"end":{"line":374,"column":7}},"148":{"start":{"line":373,"column":8},"end":{"line":373,"column":17}},"149":{"start":{"line":375,"column":6},"end":{"line":375,"column":26}},"150":{"start":{"line":377,"column":17},"end":{"line":377,"column":53}},"151":{"start":{"line":378,"column":4},"end":{"line":380,"column":5}},"152":{"start":{"line":379,"column":6},"end":{"line":379,"column":20}},"153":{"start":{"line":381,"column":20},"end":{"line":381,"column":108}},"154":{"start":{"line":382,"column":4},"end":{"line":382,"column":74}},"155":{"start":{"line":383,"column":4},"end":{"line":383,"column":18}},"156":{"start":{"line":386,"column":4},"end":{"line":388,"column":5}},"157":{"start":{"line":387,"column":6},"end":{"line":387,"column":40}},"158":{"start":{"line":389,"column":17},"end":{"line":389,"column":56}},"159":{"start":{"line":390,"column":4},"end":{"line":392,"column":5}},"160":{"start":{"line":391,"column":6},"end":{"line":391,"column":20}},"161":{"start":{"line":393,"column":20},"end":{"line":393,"column":111}},"162":{"start":{"line":394,"column":4},"end":{"line":394,"column":74}},"163":{"start":{"line":395,"column":4},"end":{"line":395,"column":18}},"164":{"start":{"line":398,"column":4},"end":{"line":404,"column":5}},"165":{"start":{"line":399,"column":16},"end":{"line":399,"column":43}},"166":{"start":{"line":400,"column":6},"end":{"line":402,"column":7}},"167":{"start":{"line":401,"column":8},"end":{"line":401,"column":17}},"168":{"start":{"line":403,"column":6},"end":{"line":403,"column":30}},"169":{"start":{"line":405,"column":17},"end":{"line":405,"column":55}},"170":{"start":{"line":406,"column":4},"end":{"line":408,"column":5}},"171":{"start":{"line":407,"column":6},"end":{"line":407,"column":20}},"172":{"start":{"line":409,"column":20},"end":{"line":409,"column":110}},"173":{"start":{"line":410,"column":4},"end":{"line":410,"column":74}},"174":{"start":{"line":411,"column":4},"end":{"line":411,"column":18}},"175":{"start":{"line":414,"column":4},"end":{"line":416,"column":5}},"176":{"start":{"line":415,"column":6},"end":{"line":415,"column":42}},"177":{"start":{"line":417,"column":25},"end":{"line":417,"column":40}},"178":{"start":{"line":418,"column":18},"end":{"line":418,"column":40}},"179":{"start":{"line":419,"column":4},"end":{"line":421,"column":5}},"180":{"start":{"line":420,"column":6},"end":{"line":420,"column":60}},"181":{"start":{"line":422,"column":4},"end":{"line":424,"column":5}},"182":{"start":{"line":423,"column":6},"end":{"line":423,"column":54}},"183":{"start":{"line":425,"column":4},"end":{"line":440,"column":5}},"184":{"start":{"line":426,"column":6},"end":{"line":428,"column":7}},"185":{"start":{"line":427,"column":8},"end":{"line":427,"column":62}},"186":{"start":{"line":429,"column":6},"end":{"line":431,"column":7}},"187":{"start":{"line":430,"column":8},"end":{"line":430,"column":54}},"188":{"start":{"line":432,"column":6},"end":{"line":434,"column":7}},"189":{"start":{"line":433,"column":8},"end":{"line":433,"column":54}},"190":{"start":{"line":435,"column":21},"end":{"line":435,"column":45}},"191":{"start":{"line":436,"column":6},"end":{"line":438,"column":7}},"192":{"start":{"line":437,"column":8},"end":{"line":437,"column":54}},"193":{"start":{"line":439,"column":6},"end":{"line":439,"column":46}},"194":{"start":{"line":441,"column":4},"end":{"line":447,"column":5}},"195":{"start":{"line":442,"column":27},"end":{"line":442,"column":40}},"196":{"start":{"line":443,"column":6},"end":{"line":445,"column":7}},"197":{"start":{"line":444,"column":8},"end":{"line":444,"column":62}},"198":{"start":{"line":446,"column":6},"end":{"line":446,"column":71}},"199":{"start":{"line":448,"column":4},"end":{"line":448,"column":16}},"200":{"start":{"line":451,"column":4},"end":{"line":453,"column":5}},"201":{"start":{"line":452,"column":6},"end":{"line":452,"column":47}},"202":{"start":{"line":454,"column":4},"end":{"line":454,"column":101}},"203":{"start":{"line":457,"column":4},"end":{"line":459,"column":5}},"204":{"start":{"line":458,"column":6},"end":{"line":458,"column":48}},"205":{"start":{"line":460,"column":4},"end":{"line":460,"column":100}},"206":{"start":{"line":463,"column":4},"end":{"line":465,"column":5}},"207":{"start":{"line":464,"column":6},"end":{"line":464,"column":73}},"208":{"start":{"line":466,"column":4},"end":{"line":466,"column":60}},"209":{"start":{"line":469,"column":25},"end":{"line":469,"column":41}},"210":{"start":{"line":470,"column":19},"end":{"line":470,"column":25}},"211":{"start":{"line":471,"column":4},"end":{"line":473,"column":5}},"212":{"start":{"line":472,"column":6},"end":{"line":472,"column":54}},"213":{"start":{"line":474,"column":4},"end":{"line":476,"column":5}},"214":{"start":{"line":475,"column":6},"end":{"line":475,"column":52}},"215":{"start":{"line":477,"column":19},"end":{"line":477,"column":45}},"216":{"start":{"line":478,"column":4},"end":{"line":480,"column":5}},"217":{"start":{"line":479,"column":6},"end":{"line":479,"column":52}},"218":{"start":{"line":481,"column":4},"end":{"line":481,"column":44}},"219":{"start":{"line":484,"column":25},"end":{"line":484,"column":41}},"220":{"start":{"line":485,"column":19},"end":{"line":485,"column":25}},"221":{"start":{"line":486,"column":4},"end":{"line":488,"column":5}},"222":{"start":{"line":487,"column":6},"end":{"line":487,"column":54}},"223":{"start":{"line":489,"column":4},"end":{"line":491,"column":5}},"224":{"start":{"line":490,"column":6},"end":{"line":490,"column":52}},"225":{"start":{"line":492,"column":19},"end":{"line":492,"column":46}},"226":{"start":{"line":493,"column":4},"end":{"line":495,"column":5}},"227":{"start":{"line":494,"column":6},"end":{"line":494,"column":52}},"228":{"start":{"line":496,"column":4},"end":{"line":496,"column":44}},"229":{"start":{"line":499,"column":25},"end":{"line":499,"column":41}},"230":{"start":{"line":500,"column":19},"end":{"line":500,"column":25}},"231":{"start":{"line":501,"column":4},"end":{"line":503,"column":5}},"232":{"start":{"line":502,"column":6},"end":{"line":502,"column":54}},"233":{"start":{"line":504,"column":4},"end":{"line":506,"column":5}},"234":{"start":{"line":505,"column":6},"end":{"line":505,"column":52}},"235":{"start":{"line":507,"column":19},"end":{"line":507,"column":49}},"236":{"start":{"line":508,"column":4},"end":{"line":510,"column":5}},"237":{"start":{"line":509,"column":6},"end":{"line":509,"column":52}},"238":{"start":{"line":511,"column":4},"end":{"line":511,"column":44}},"239":{"start":{"line":514,"column":25},"end":{"line":514,"column":41}},"240":{"start":{"line":515,"column":19},"end":{"line":515,"column":25}},"241":{"start":{"line":516,"column":4},"end":{"line":518,"column":5}},"242":{"start":{"line":517,"column":6},"end":{"line":517,"column":54}},"243":{"start":{"line":519,"column":4},"end":{"line":521,"column":5}},"244":{"start":{"line":520,"column":6},"end":{"line":520,"column":52}},"245":{"start":{"line":522,"column":4},"end":{"line":524,"column":5}},"246":{"start":{"line":523,"column":6},"end":{"line":523,"column":60}},"247":{"start":{"line":525,"column":19},"end":{"line":525,"column":47}},"248":{"start":{"line":526,"column":4},"end":{"line":528,"column":5}},"249":{"start":{"line":527,"column":6},"end":{"line":527,"column":52}},"250":{"start":{"line":529,"column":4},"end":{"line":529,"column":44}},"251":{"start":{"line":532,"column":25},"end":{"line":532,"column":40}},"252":{"start":{"line":533,"column":17},"end":{"line":533,"column":22}},"253":{"start":{"line":534,"column":4},"end":{"line":540,"column":5}},"254":{"start":{"line":535,"column":6},"end":{"line":535,"column":45}},"255":{"start":{"line":536,"column":11},"end":{"line":540,"column":5}},"256":{"start":{"line":537,"column":6},"end":{"line":537,"column":66}},"257":{"start":{"line":538,"column":11},"end":{"line":540,"column":5}},"258":{"start":{"line":539,"column":6},"end":{"line":539,"column":46}},"259":{"start":{"line":541,"column":4},"end":{"line":541,"column":45}},"260":{"start":{"line":544,"column":4},"end":{"line":553,"column":5}},"261":{"start":{"line":548,"column":8},"end":{"line":548,"column":21}},"262":{"start":{"line":552,"column":8},"end":{"line":552,"column":20}},"263":{"start":{"line":556,"column":4},"end":{"line":560,"column":5}},"264":{"start":{"line":557,"column":6},"end":{"line":557,"column":66}},"265":{"start":{"line":559,"column":6},"end":{"line":559,"column":70}},"266":{"start":{"line":563,"column":4},"end":{"line":576,"column":5}},"267":{"start":{"line":565,"column":8},"end":{"line":565,"column":43}},"268":{"start":{"line":567,"column":8},"end":{"line":567,"column":48}},"269":{"start":{"line":569,"column":8},"end":{"line":569,"column":56}},"270":{"start":{"line":571,"column":8},"end":{"line":571,"column":45}},"271":{"start":{"line":573,"column":8},"end":{"line":573,"column":53}},"272":{"start":{"line":575,"column":8},"end":{"line":575,"column":44}},"273":{"start":{"line":579,"column":4},"end":{"line":588,"column":5}},"274":{"start":{"line":583,"column":8},"end":{"line":583,"column":21}},"275":{"start":{"line":587,"column":8},"end":{"line":587,"column":20}},"276":{"start":{"line":591,"column":4},"end":{"line":593,"column":5}},"277":{"start":{"line":592,"column":6},"end":{"line":592,"column":42}},"278":{"start":{"line":594,"column":4},"end":{"line":596,"column":5}},"279":{"start":{"line":595,"column":6},"end":{"line":595,"column":18}},"280":{"start":{"line":597,"column":25},"end":{"line":597,"column":40}},"281":{"start":{"line":598,"column":23},"end":{"line":598,"column":34}},"282":{"start":{"line":599,"column":4},"end":{"line":601,"column":5}},"283":{"start":{"line":600,"column":6},"end":{"line":600,"column":62}},"284":{"start":{"line":602,"column":4},"end":{"line":604,"column":5}},"285":{"start":{"line":603,"column":6},"end":{"line":603,"column":26}},"286":{"start":{"line":605,"column":18},"end":{"line":605,"column":42}},"287":{"start":{"line":606,"column":4},"end":{"line":608,"column":5}},"288":{"start":{"line":607,"column":6},"end":{"line":607,"column":54}},"289":{"start":{"line":609,"column":4},"end":{"line":611,"column":5}},"290":{"start":{"line":610,"column":6},"end":{"line":610,"column":52}},"291":{"start":{"line":612,"column":4},"end":{"line":620,"column":5}},"292":{"start":{"line":613,"column":6},"end":{"line":615,"column":7}},"293":{"start":{"line":614,"column":8},"end":{"line":614,"column":62}},"294":{"start":{"line":616,"column":6},"end":{"line":618,"column":7}},"295":{"start":{"line":617,"column":8},"end":{"line":617,"column":54}},"296":{"start":{"line":619,"column":6},"end":{"line":619,"column":41}},"297":{"start":{"line":621,"column":19},"end":{"line":621,"column":43}},"298":{"start":{"line":622,"column":4},"end":{"line":624,"column":5}},"299":{"start":{"line":623,"column":6},"end":{"line":623,"column":52}},"300":{"start":{"line":625,"column":4},"end":{"line":625,"column":44}},"301":{"start":{"line":628,"column":25},"end":{"line":628,"column":40}},"302":{"start":{"line":629,"column":4},"end":{"line":631,"column":5}},"303":{"start":{"line":630,"column":6},"end":{"line":630,"column":52}},"304":{"start":{"line":632,"column":19},"end":{"line":632,"column":37}},"305":{"start":{"line":633,"column":4},"end":{"line":635,"column":5}},"306":{"start":{"line":634,"column":6},"end":{"line":634,"column":52}},"307":{"start":{"line":636,"column":4},"end":{"line":636,"column":44}},"308":{"start":{"line":639,"column":25},"end":{"line":639,"column":40}},"309":{"start":{"line":640,"column":4},"end":{"line":642,"column":5}},"310":{"start":{"line":641,"column":6},"end":{"line":641,"column":52}},"311":{"start":{"line":643,"column":19},"end":{"line":643,"column":42}},"312":{"start":{"line":644,"column":4},"end":{"line":646,"column":5}},"313":{"start":{"line":645,"column":6},"end":{"line":645,"column":52}},"314":{"start":{"line":647,"column":4},"end":{"line":647,"column":44}},"315":{"start":{"line":650,"column":25},"end":{"line":650,"column":40}},"316":{"start":{"line":651,"column":4},"end":{"line":653,"column":5}},"317":{"start":{"line":652,"column":6},"end":{"line":652,"column":52}},"318":{"start":{"line":654,"column":19},"end":{"line":654,"column":41}},"319":{"start":{"line":655,"column":4},"end":{"line":657,"column":5}},"320":{"start":{"line":656,"column":6},"end":{"line":656,"column":52}},"321":{"start":{"line":658,"column":4},"end":{"line":658,"column":44}},"322":{"start":{"line":661,"column":25},"end":{"line":661,"column":40}},"323":{"start":{"line":662,"column":4},"end":{"line":664,"column":5}},"324":{"start":{"line":663,"column":6},"end":{"line":663,"column":52}},"325":{"start":{"line":665,"column":19},"end":{"line":665,"column":42}},"326":{"start":{"line":666,"column":4},"end":{"line":668,"column":5}},"327":{"start":{"line":667,"column":6},"end":{"line":667,"column":52}},"328":{"start":{"line":669,"column":4},"end":{"line":669,"column":44}},"329":{"start":{"line":672,"column":25},"end":{"line":672,"column":40}},"330":{"start":{"line":673,"column":4},"end":{"line":675,"column":5}},"331":{"start":{"line":674,"column":6},"end":{"line":674,"column":52}},"332":{"start":{"line":676,"column":19},"end":{"line":676,"column":42}},"333":{"start":{"line":677,"column":4},"end":{"line":679,"column":5}},"334":{"start":{"line":678,"column":6},"end":{"line":678,"column":52}},"335":{"start":{"line":680,"column":4},"end":{"line":680,"column":44}},"336":{"start":{"line":683,"column":25},"end":{"line":683,"column":40}},"337":{"start":{"line":684,"column":4},"end":{"line":686,"column":5}},"338":{"start":{"line":685,"column":6},"end":{"line":685,"column":52}},"339":{"start":{"line":687,"column":19},"end":{"line":687,"column":43}},"340":{"start":{"line":688,"column":4},"end":{"line":690,"column":5}},"341":{"start":{"line":689,"column":6},"end":{"line":689,"column":52}},"342":{"start":{"line":691,"column":4},"end":{"line":691,"column":44}},"343":{"start":{"line":694,"column":25},"end":{"line":694,"column":40}},"344":{"start":{"line":695,"column":4},"end":{"line":697,"column":5}},"345":{"start":{"line":696,"column":6},"end":{"line":696,"column":52}},"346":{"start":{"line":698,"column":19},"end":{"line":698,"column":41}},"347":{"start":{"line":699,"column":4},"end":{"line":701,"column":5}},"348":{"start":{"line":700,"column":6},"end":{"line":700,"column":52}},"349":{"start":{"line":702,"column":4},"end":{"line":702,"column":44}},"350":{"start":{"line":705,"column":25},"end":{"line":705,"column":40}},"351":{"start":{"line":706,"column":4},"end":{"line":708,"column":5}},"352":{"start":{"line":707,"column":6},"end":{"line":707,"column":52}},"353":{"start":{"line":709,"column":19},"end":{"line":709,"column":42}},"354":{"start":{"line":710,"column":4},"end":{"line":712,"column":5}},"355":{"start":{"line":711,"column":6},"end":{"line":711,"column":52}},"356":{"start":{"line":713,"column":4},"end":{"line":713,"column":44}},"357":{"start":{"line":716,"column":25},"end":{"line":716,"column":40}},"358":{"start":{"line":717,"column":4},"end":{"line":719,"column":5}},"359":{"start":{"line":718,"column":6},"end":{"line":718,"column":52}},"360":{"start":{"line":720,"column":19},"end":{"line":720,"column":42}},"361":{"start":{"line":721,"column":4},"end":{"line":723,"column":5}},"362":{"start":{"line":722,"column":6},"end":{"line":722,"column":52}},"363":{"start":{"line":724,"column":4},"end":{"line":724,"column":44}},"364":{"start":{"line":727,"column":25},"end":{"line":727,"column":40}},"365":{"start":{"line":728,"column":4},"end":{"line":730,"column":5}},"366":{"start":{"line":729,"column":6},"end":{"line":729,"column":52}},"367":{"start":{"line":731,"column":19},"end":{"line":731,"column":43}},"368":{"start":{"line":732,"column":4},"end":{"line":734,"column":5}},"369":{"start":{"line":733,"column":6},"end":{"line":733,"column":52}},"370":{"start":{"line":735,"column":4},"end":{"line":735,"column":44}},"371":{"start":{"line":738,"column":25},"end":{"line":738,"column":40}},"372":{"start":{"line":739,"column":4},"end":{"line":741,"column":5}},"373":{"start":{"line":740,"column":6},"end":{"line":740,"column":52}},"374":{"start":{"line":742,"column":19},"end":{"line":742,"column":41}},"375":{"start":{"line":743,"column":4},"end":{"line":745,"column":5}},"376":{"start":{"line":744,"column":6},"end":{"line":744,"column":52}},"377":{"start":{"line":746,"column":4},"end":{"line":746,"column":44}},"378":{"start":{"line":749,"column":25},"end":{"line":749,"column":40}},"379":{"start":{"line":750,"column":4},"end":{"line":752,"column":5}},"380":{"start":{"line":751,"column":6},"end":{"line":751,"column":52}},"381":{"start":{"line":753,"column":19},"end":{"line":753,"column":42}},"382":{"start":{"line":754,"column":4},"end":{"line":756,"column":5}},"383":{"start":{"line":755,"column":6},"end":{"line":755,"column":52}},"384":{"start":{"line":757,"column":4},"end":{"line":757,"column":44}},"385":{"start":{"line":760,"column":25},"end":{"line":760,"column":40}},"386":{"start":{"line":761,"column":4},"end":{"line":763,"column":5}},"387":{"start":{"line":762,"column":6},"end":{"line":762,"column":52}},"388":{"start":{"line":764,"column":19},"end":{"line":764,"column":42}},"389":{"start":{"line":765,"column":4},"end":{"line":767,"column":5}},"390":{"start":{"line":766,"column":6},"end":{"line":766,"column":52}},"391":{"start":{"line":768,"column":4},"end":{"line":768,"column":44}},"392":{"start":{"line":771,"column":4},"end":{"line":773,"column":5}},"393":{"start":{"line":772,"column":6},"end":{"line":772,"column":44}},"394":{"start":{"line":774,"column":25},"end":{"line":774,"column":40}},"395":{"start":{"line":775,"column":18},"end":{"line":775,"column":40}},"396":{"start":{"line":776,"column":4},"end":{"line":778,"column":5}},"397":{"start":{"line":777,"column":6},"end":{"line":777,"column":54}},"398":{"start":{"line":779,"column":4},"end":{"line":791,"column":5}},"399":{"start":{"line":780,"column":6},"end":{"line":782,"column":7}},"400":{"start":{"line":781,"column":8},"end":{"line":781,"column":54}},"401":{"start":{"line":783,"column":6},"end":{"line":785,"column":7}},"402":{"start":{"line":784,"column":8},"end":{"line":784,"column":62}},"403":{"start":{"line":786,"column":21},"end":{"line":786,"column":52}},"404":{"start":{"line":787,"column":6},"end":{"line":789,"column":7}},"405":{"start":{"line":788,"column":8},"end":{"line":788,"column":54}},"406":{"start":{"line":790,"column":6},"end":{"line":790,"column":46}},"407":{"start":{"line":792,"column":4},"end":{"line":794,"column":5}},"408":{"start":{"line":793,"column":6},"end":{"line":793,"column":79}},"409":{"start":{"line":795,"column":4},"end":{"line":795,"column":16}},"410":{"start":{"line":798,"column":25},"end":{"line":798,"column":40}},"411":{"start":{"line":799,"column":4},"end":{"line":801,"column":5}},"412":{"start":{"line":800,"column":6},"end":{"line":800,"column":52}},"413":{"start":{"line":802,"column":19},"end":{"line":802,"column":43}},"414":{"start":{"line":803,"column":4},"end":{"line":805,"column":5}},"415":{"start":{"line":804,"column":6},"end":{"line":804,"column":52}},"416":{"start":{"line":806,"column":4},"end":{"line":806,"column":44}},"417":{"start":{"line":809,"column":25},"end":{"line":809,"column":40}},"418":{"start":{"line":810,"column":4},"end":{"line":812,"column":5}},"419":{"start":{"line":811,"column":6},"end":{"line":811,"column":52}},"420":{"start":{"line":813,"column":4},"end":{"line":815,"column":5}},"421":{"start":{"line":814,"column":6},"end":{"line":814,"column":52}},"422":{"start":{"line":816,"column":19},"end":{"line":816,"column":41}},"423":{"start":{"line":817,"column":4},"end":{"line":819,"column":5}},"424":{"start":{"line":818,"column":6},"end":{"line":818,"column":52}},"425":{"start":{"line":820,"column":4},"end":{"line":820,"column":44}},"426":{"start":{"line":823,"column":25},"end":{"line":823,"column":40}},"427":{"start":{"line":824,"column":4},"end":{"line":826,"column":5}},"428":{"start":{"line":825,"column":6},"end":{"line":825,"column":52}},"429":{"start":{"line":827,"column":4},"end":{"line":829,"column":5}},"430":{"start":{"line":828,"column":6},"end":{"line":828,"column":52}},"431":{"start":{"line":830,"column":19},"end":{"line":830,"column":43}},"432":{"start":{"line":831,"column":4},"end":{"line":833,"column":5}},"433":{"start":{"line":832,"column":6},"end":{"line":832,"column":52}},"434":{"start":{"line":834,"column":4},"end":{"line":834,"column":44}},"435":{"start":{"line":837,"column":25},"end":{"line":837,"column":40}},"436":{"start":{"line":838,"column":4},"end":{"line":840,"column":5}},"437":{"start":{"line":839,"column":6},"end":{"line":839,"column":52}},"438":{"start":{"line":841,"column":19},"end":{"line":841,"column":41}},"439":{"start":{"line":842,"column":4},"end":{"line":844,"column":5}},"440":{"start":{"line":843,"column":6},"end":{"line":843,"column":52}},"441":{"start":{"line":845,"column":4},"end":{"line":845,"column":44}},"442":{"start":{"line":848,"column":25},"end":{"line":848,"column":40}},"443":{"start":{"line":849,"column":4},"end":{"line":851,"column":5}},"444":{"start":{"line":850,"column":6},"end":{"line":850,"column":52}},"445":{"start":{"line":852,"column":19},"end":{"line":852,"column":41}},"446":{"start":{"line":853,"column":4},"end":{"line":855,"column":5}},"447":{"start":{"line":854,"column":6},"end":{"line":854,"column":52}},"448":{"start":{"line":856,"column":4},"end":{"line":856,"column":44}},"449":{"start":{"line":859,"column":4},"end":{"line":861,"column":5}},"450":{"start":{"line":860,"column":6},"end":{"line":860,"column":44}},"451":{"start":{"line":862,"column":25},"end":{"line":862,"column":40}},"452":{"start":{"line":863,"column":18},"end":{"line":863,"column":40}},"453":{"start":{"line":864,"column":4},"end":{"line":866,"column":5}},"454":{"start":{"line":865,"column":6},"end":{"line":865,"column":54}},"455":{"start":{"line":867,"column":4},"end":{"line":876,"column":5}},"456":{"start":{"line":868,"column":6},"end":{"line":870,"column":7}},"457":{"start":{"line":869,"column":8},"end":{"line":869,"column":54}},"458":{"start":{"line":871,"column":21},"end":{"line":871,"column":106}},"459":{"start":{"line":872,"column":6},"end":{"line":874,"column":7}},"460":{"start":{"line":873,"column":8},"end":{"line":873,"column":54}},"461":{"start":{"line":875,"column":6},"end":{"line":875,"column":46}},"462":{"start":{"line":877,"column":4},"end":{"line":879,"column":5}},"463":{"start":{"line":878,"column":6},"end":{"line":878,"column":74}},"464":{"start":{"line":880,"column":4},"end":{"line":880,"column":16}},"465":{"start":{"line":883,"column":4},"end":{"line":885,"column":5}},"466":{"start":{"line":884,"column":6},"end":{"line":884,"column":44}},"467":{"start":{"line":886,"column":25},"end":{"line":886,"column":40}},"468":{"start":{"line":887,"column":18},"end":{"line":887,"column":40}},"469":{"start":{"line":888,"column":4},"end":{"line":890,"column":5}},"470":{"start":{"line":889,"column":6},"end":{"line":889,"column":54}},"471":{"start":{"line":891,"column":4},"end":{"line":900,"column":5}},"472":{"start":{"line":892,"column":6},"end":{"line":894,"column":7}},"473":{"start":{"line":893,"column":8},"end":{"line":893,"column":54}},"474":{"start":{"line":895,"column":21},"end":{"line":895,"column":106}},"475":{"start":{"line":896,"column":6},"end":{"line":898,"column":7}},"476":{"start":{"line":897,"column":8},"end":{"line":897,"column":54}},"477":{"start":{"line":899,"column":6},"end":{"line":899,"column":46}},"478":{"start":{"line":901,"column":4},"end":{"line":903,"column":5}},"479":{"start":{"line":902,"column":6},"end":{"line":902,"column":74}},"480":{"start":{"line":904,"column":4},"end":{"line":904,"column":16}},"481":{"start":{"line":907,"column":4},"end":{"line":909,"column":5}},"482":{"start":{"line":908,"column":6},"end":{"line":908,"column":43}},"483":{"start":{"line":910,"column":25},"end":{"line":910,"column":40}},"484":{"start":{"line":911,"column":18},"end":{"line":911,"column":40}},"485":{"start":{"line":912,"column":4},"end":{"line":914,"column":5}},"486":{"start":{"line":913,"column":6},"end":{"line":913,"column":54}},"487":{"start":{"line":915,"column":4},"end":{"line":924,"column":5}},"488":{"start":{"line":916,"column":6},"end":{"line":918,"column":7}},"489":{"start":{"line":917,"column":8},"end":{"line":917,"column":54}},"490":{"start":{"line":919,"column":21},"end":{"line":919,"column":104}},"491":{"start":{"line":920,"column":6},"end":{"line":922,"column":7}},"492":{"start":{"line":921,"column":8},"end":{"line":921,"column":54}},"493":{"start":{"line":923,"column":6},"end":{"line":923,"column":46}},"494":{"start":{"line":925,"column":4},"end":{"line":927,"column":5}},"495":{"start":{"line":926,"column":6},"end":{"line":926,"column":73}},"496":{"start":{"line":928,"column":4},"end":{"line":928,"column":16}},"497":{"start":{"line":931,"column":4},"end":{"line":931,"column":16}},"498":{"start":{"line":934,"column":4},"end":{"line":934,"column":52}},"499":{"start":{"line":937,"column":17},"end":{"line":937,"column":22}},"500":{"start":{"line":938,"column":4},"end":{"line":957,"column":5}},"501":{"start":{"line":940,"column":8},"end":{"line":940,"column":40}},"502":{"start":{"line":941,"column":8},"end":{"line":941,"column":14}},"503":{"start":{"line":943,"column":8},"end":{"line":943,"column":38}},"504":{"start":{"line":944,"column":8},"end":{"line":944,"column":14}},"505":{"start":{"line":946,"column":8},"end":{"line":946,"column":39}},"506":{"start":{"line":947,"column":8},"end":{"line":947,"column":14}},"507":{"start":{"line":949,"column":8},"end":{"line":949,"column":38}},"508":{"start":{"line":950,"column":8},"end":{"line":950,"column":14}},"509":{"start":{"line":952,"column":8},"end":{"line":952,"column":39}},"510":{"start":{"line":953,"column":8},"end":{"line":953,"column":14}},"511":{"start":{"line":955,"column":8},"end":{"line":955,"column":40}},"512":{"start":{"line":956,"column":8},"end":{"line":956,"column":14}},"513":{"start":{"line":958,"column":4},"end":{"line":958,"column":18}},"514":{"start":{"line":961,"column":31},"end":{"line":961,"column":34}},"515":{"start":{"line":962,"column":38},"end":{"line":962,"column":79}},"516":{"start":{"line":966,"column":19},"end":{"line":966,"column":52}},"517":{"start":{"line":967,"column":4},"end":{"line":969,"column":5}},"518":{"start":{"line":968,"column":6},"end":{"line":968,"column":20}},"519":{"start":{"line":970,"column":21},"end":{"line":970,"column":49}},"520":{"start":{"line":971,"column":4},"end":{"line":971,"column":48}},"521":{"start":{"line":972,"column":4},"end":{"line":972,"column":20}},"522":{"start":{"line":975,"column":4},"end":{"line":975,"column":20}},"523":{"start":{"line":976,"column":4},"end":{"line":976,"column":27}},"524":{"start":{"line":979,"column":4},"end":{"line":979,"column":23}},"525":{"start":{"line":982,"column":4},"end":{"line":982,"column":16}},"526":{"start":{"line":985,"column":4},"end":{"line":987,"column":5}},"527":{"start":{"line":986,"column":6},"end":{"line":986,"column":47}},"528":{"start":{"line":988,"column":4},"end":{"line":988,"column":101}},"529":{"start":{"line":991,"column":4},"end":{"line":993,"column":5}},"530":{"start":{"line":992,"column":6},"end":{"line":992,"column":48}},"531":{"start":{"line":994,"column":4},"end":{"line":994,"column":100}},"532":{"start":{"line":997,"column":4},"end":{"line":997,"column":63}},"533":{"start":{"line":1000,"column":4},"end":{"line":1000,"column":64}},"534":{"start":{"line":1003,"column":4},"end":{"line":1003,"column":67}},"535":{"start":{"line":1006,"column":4},"end":{"line":1006,"column":66}},"536":{"start":{"line":1009,"column":4},"end":{"line":1011,"column":5}},"537":{"start":{"line":1010,"column":6},"end":{"line":1010,"column":90}},"538":{"start":{"line":1012,"column":4},"end":{"line":1012,"column":77}},"539":{"start":{"line":1015,"column":23},"end":{"line":1015,"column":38}},"540":{"start":{"line":1016,"column":17},"end":{"line":1016,"column":22}},"541":{"start":{"line":1017,"column":4},"end":{"line":1031,"column":5}},"542":{"start":{"line":1018,"column":19},"end":{"line":1018,"column":24}},"543":{"start":{"line":1019,"column":6},"end":{"line":1022,"column":7}},"544":{"start":{"line":1020,"column":8},"end":{"line":1020,"column":56}},"545":{"start":{"line":1021,"column":8},"end":{"line":1021,"column":44}},"546":{"start":{"line":1023,"column":6},"end":{"line":1025,"column":7}},"547":{"start":{"line":1024,"column":8},"end":{"line":1024,"column":53}},"548":{"start":{"line":1026,"column":6},"end":{"line":1026,"column":67}},"549":{"start":{"line":1027,"column":11},"end":{"line":1031,"column":5}},"550":{"start":{"line":1028,"column":6},"end":{"line":1028,"column":45}},"551":{"start":{"line":1029,"column":11},"end":{"line":1031,"column":5}},"552":{"start":{"line":1030,"column":6},"end":{"line":1030,"column":46}},"553":{"start":{"line":1032,"column":4},"end":{"line":1032,"column":45}},"554":{"start":{"line":1035,"column":4},"end":{"line":1048,"column":5}},"555":{"start":{"line":1037,"column":8},"end":{"line":1037,"column":38}},"556":{"start":{"line":1039,"column":8},"end":{"line":1039,"column":36}},"557":{"start":{"line":1041,"column":8},"end":{"line":1041,"column":37}},"558":{"start":{"line":1043,"column":8},"end":{"line":1043,"column":36}},"559":{"start":{"line":1045,"column":8},"end":{"line":1045,"column":37}},"560":{"start":{"line":1047,"column":8},"end":{"line":1047,"column":38}},"561":{"start":{"line":1051,"column":4},"end":{"line":1060,"column":5}},"562":{"start":{"line":1055,"column":8},"end":{"line":1055,"column":20}},"563":{"start":{"line":1059,"column":8},"end":{"line":1059,"column":21}},"564":{"start":{"line":1063,"column":4},"end":{"line":1072,"column":5}},"565":{"start":{"line":1067,"column":8},"end":{"line":1067,"column":21}},"566":{"start":{"line":1071,"column":8},"end":{"line":1071,"column":20}},"567":{"start":{"line":1075,"column":4},"end":{"line":1075,"column":62}},"568":{"start":{"line":1078,"column":4},"end":{"line":1078,"column":43}},"569":{"start":{"line":1081,"column":25},"end":{"line":1081,"column":60}},"570":{"start":{"line":1082,"column":19},"end":{"line":1082,"column":69}},"571":{"start":{"line":1083,"column":4},"end":{"line":1083,"column":45}},"572":{"start":{"line":1087,"column":2},"end":{"line":1089,"column":3}},"573":{"start":{"line":1088,"column":4},"end":{"line":1088,"column":47}},"574":{"start":{"line":1090,"column":14},"end":{"line":1090,"column":19}},"575":{"start":{"line":1091,"column":2},"end":{"line":1104,"column":3}},"576":{"start":{"line":1092,"column":26},"end":{"line":1092,"column":54}},"577":{"start":{"line":1093,"column":4},"end":{"line":1097,"column":5}},"578":{"start":{"line":1094,"column":6},"end":{"line":1094,"column":19}},"579":{"start":{"line":1095,"column":11},"end":{"line":1097,"column":5}},"580":{"start":{"line":1096,"column":6},"end":{"line":1096,"column":20}},"581":{"start":{"line":1099,"column":4},"end":{"line":1103,"column":5}},"582":{"start":{"line":1100,"column":6},"end":{"line":1100,"column":19}},"583":{"start":{"line":1102,"column":6},"end":{"line":1102,"column":20}},"584":{"start":{"line":1105,"column":2},"end":{"line":1105,"column":42}},"585":{"start":{"line":1108,"column":14},"end":{"line":1108,"column":33}},"586":{"start":{"line":1109,"column":2},"end":{"line":1112,"column":3}},"587":{"start":{"line":1110,"column":4},"end":{"line":1110,"column":31}},"588":{"start":{"line":1111,"column":4},"end":{"line":1111,"column":38}},"589":{"start":{"line":1113,"column":2},"end":{"line":1113,"column":41}},"590":{"start":{"line":1116,"column":2},"end":{"line":1129,"column":3}},"591":{"start":{"line":1117,"column":17},"end":{"line":1117,"column":18}},"592":{"start":{"line":1118,"column":4},"end":{"line":1120,"column":5}},"593":{"start":{"line":1119,"column":6},"end":{"line":1119,"column":17}},"594":{"start":{"line":1121,"column":4},"end":{"line":1121,"column":53}},"595":{"start":{"line":1122,"column":9},"end":{"line":1129,"column":3}},"596":{"start":{"line":1123,"column":4},"end":{"line":1125,"column":5}},"597":{"start":{"line":1124,"column":6},"end":{"line":1124,"column":52}},"598":{"start":{"line":1126,"column":4},"end":{"line":1126,"column":55}},"599":{"start":{"line":1127,"column":9},"end":{"line":1129,"column":3}},"600":{"start":{"line":1128,"column":4},"end":{"line":1128,"column":63}},"601":{"start":{"line":1130,"column":2},"end":{"line":1130,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":2},"end":{"line":13,"column":3}},"loc":{"start":{"line":13,"column":18},"end":{"line":16,"column":3}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":2},"end":{"line":17,"column":3}},"loc":{"start":{"line":17,"column":11},"end":{"line":19,"column":3}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":2},"end":{"line":20,"column":3}},"loc":{"start":{"line":20,"column":20},"end":{"line":22,"column":3}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":2},"end":{"line":23,"column":3}},"loc":{"start":{"line":23,"column":21},"end":{"line":25,"column":3}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":2},"end":{"line":26,"column":3}},"loc":{"start":{"line":26,"column":24},"end":{"line":28,"column":3}},"line":26},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":2},"end":{"line":29,"column":3}},"loc":{"start":{"line":29,"column":23},"end":{"line":31,"column":3}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":32,"column":2},"end":{"line":32,"column":3}},"loc":{"start":{"line":32,"column":19},"end":{"line":34,"column":3}},"line":32},"7":{"name":"(anonymous_7)","decl":{"start":{"line":35,"column":2},"end":{"line":35,"column":3}},"loc":{"start":{"line":35,"column":33},"end":{"line":43,"column":3}},"line":35},"8":{"name":"(anonymous_8)","decl":{"start":{"line":44,"column":2},"end":{"line":44,"column":3}},"loc":{"start":{"line":44,"column":32},"end":{"line":49,"column":3}},"line":44},"9":{"name":"(anonymous_9)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":31},"end":{"line":55,"column":3}},"line":50},"10":{"name":"(anonymous_10)","decl":{"start":{"line":56,"column":2},"end":{"line":56,"column":3}},"loc":{"start":{"line":56,"column":16},"end":{"line":58,"column":3}},"line":56},"11":{"name":"(anonymous_11)","decl":{"start":{"line":59,"column":2},"end":{"line":59,"column":3}},"loc":{"start":{"line":59,"column":17},"end":{"line":61,"column":3}},"line":59},"12":{"name":"(anonymous_12)","decl":{"start":{"line":62,"column":2},"end":{"line":62,"column":3}},"loc":{"start":{"line":62,"column":20},"end":{"line":64,"column":3}},"line":62},"13":{"name":"(anonymous_13)","decl":{"start":{"line":65,"column":2},"end":{"line":65,"column":3}},"loc":{"start":{"line":65,"column":19},"end":{"line":67,"column":3}},"line":65},"14":{"name":"(anonymous_14)","decl":{"start":{"line":68,"column":2},"end":{"line":68,"column":3}},"loc":{"start":{"line":68,"column":29},"end":{"line":76,"column":3}},"line":68},"15":{"name":"(anonymous_15)","decl":{"start":{"line":77,"column":2},"end":{"line":77,"column":3}},"loc":{"start":{"line":77,"column":19},"end":{"line":79,"column":3}},"line":77},"16":{"name":"(anonymous_16)","decl":{"start":{"line":80,"column":2},"end":{"line":80,"column":3}},"loc":{"start":{"line":80,"column":9},"end":{"line":82,"column":3}},"line":80},"17":{"name":"(anonymous_17)","decl":{"start":{"line":83,"column":2},"end":{"line":83,"column":3}},"loc":{"start":{"line":83,"column":9},"end":{"line":85,"column":3}},"line":83},"18":{"name":"(anonymous_18)","decl":{"start":{"line":86,"column":2},"end":{"line":86,"column":3}},"loc":{"start":{"line":86,"column":8},"end":{"line":88,"column":3}},"line":86},"19":{"name":"(anonymous_19)","decl":{"start":{"line":89,"column":2},"end":{"line":89,"column":3}},"loc":{"start":{"line":89,"column":9},"end":{"line":91,"column":3}},"line":89},"20":{"name":"(anonymous_20)","decl":{"start":{"line":92,"column":2},"end":{"line":92,"column":3}},"loc":{"start":{"line":92,"column":9},"end":{"line":94,"column":3}},"line":92},"21":{"name":"(anonymous_21)","decl":{"start":{"line":95,"column":2},"end":{"line":95,"column":3}},"loc":{"start":{"line":95,"column":10},"end":{"line":97,"column":3}},"line":95},"22":{"name":"(anonymous_22)","decl":{"start":{"line":98,"column":2},"end":{"line":98,"column":3}},"loc":{"start":{"line":98,"column":8},"end":{"line":100,"column":3}},"line":98},"23":{"name":"(anonymous_23)","decl":{"start":{"line":101,"column":2},"end":{"line":101,"column":3}},"loc":{"start":{"line":101,"column":9},"end":{"line":103,"column":3}},"line":101},"24":{"name":"(anonymous_24)","decl":{"start":{"line":104,"column":2},"end":{"line":104,"column":3}},"loc":{"start":{"line":104,"column":9},"end":{"line":106,"column":3}},"line":104},"25":{"name":"(anonymous_25)","decl":{"start":{"line":107,"column":2},"end":{"line":107,"column":3}},"loc":{"start":{"line":107,"column":10},"end":{"line":109,"column":3}},"line":107},"26":{"name":"(anonymous_26)","decl":{"start":{"line":110,"column":2},"end":{"line":110,"column":3}},"loc":{"start":{"line":110,"column":8},"end":{"line":112,"column":3}},"line":110},"27":{"name":"(anonymous_27)","decl":{"start":{"line":113,"column":2},"end":{"line":113,"column":3}},"loc":{"start":{"line":113,"column":9},"end":{"line":115,"column":3}},"line":113},"28":{"name":"(anonymous_28)","decl":{"start":{"line":116,"column":2},"end":{"line":116,"column":3}},"loc":{"start":{"line":116,"column":9},"end":{"line":118,"column":3}},"line":116},"29":{"name":"(anonymous_29)","decl":{"start":{"line":119,"column":2},"end":{"line":119,"column":3}},"loc":{"start":{"line":119,"column":21},"end":{"line":121,"column":3}},"line":119},"30":{"name":"(anonymous_30)","decl":{"start":{"line":122,"column":2},"end":{"line":122,"column":3}},"loc":{"start":{"line":122,"column":10},"end":{"line":124,"column":3}},"line":122},"31":{"name":"(anonymous_31)","decl":{"start":{"line":125,"column":2},"end":{"line":125,"column":3}},"loc":{"start":{"line":125,"column":8},"end":{"line":127,"column":3}},"line":125},"32":{"name":"(anonymous_32)","decl":{"start":{"line":128,"column":2},"end":{"line":128,"column":3}},"loc":{"start":{"line":128,"column":10},"end":{"line":130,"column":3}},"line":128},"33":{"name":"(anonymous_33)","decl":{"start":{"line":131,"column":2},"end":{"line":131,"column":3}},"loc":{"start":{"line":131,"column":8},"end":{"line":133,"column":3}},"line":131},"34":{"name":"(anonymous_34)","decl":{"start":{"line":134,"column":2},"end":{"line":134,"column":3}},"loc":{"start":{"line":134,"column":8},"end":{"line":136,"column":3}},"line":134},"35":{"name":"(anonymous_35)","decl":{"start":{"line":137,"column":2},"end":{"line":137,"column":3}},"loc":{"start":{"line":137,"column":21},"end":{"line":139,"column":3}},"line":137},"36":{"name":"(anonymous_36)","decl":{"start":{"line":140,"column":2},"end":{"line":140,"column":3}},"loc":{"start":{"line":140,"column":21},"end":{"line":142,"column":3}},"line":140},"37":{"name":"(anonymous_37)","decl":{"start":{"line":143,"column":2},"end":{"line":143,"column":3}},"loc":{"start":{"line":143,"column":20},"end":{"line":145,"column":3}},"line":143},"38":{"name":"(anonymous_38)","decl":{"start":{"line":146,"column":2},"end":{"line":146,"column":3}},"loc":{"start":{"line":146,"column":31},"end":{"line":148,"column":3}},"line":146},"39":{"name":"(anonymous_39)","decl":{"start":{"line":149,"column":2},"end":{"line":149,"column":3}},"loc":{"start":{"line":149,"column":32},"end":{"line":151,"column":3}},"line":149},"40":{"name":"(anonymous_40)","decl":{"start":{"line":157,"column":2},"end":{"line":157,"column":3}},"loc":{"start":{"line":157,"column":23},"end":{"line":164,"column":3}},"line":157},"41":{"name":"(anonymous_41)","decl":{"start":{"line":165,"column":2},"end":{"line":165,"column":3}},"loc":{"start":{"line":165,"column":24},"end":{"line":168,"column":3}},"line":165},"42":{"name":"(anonymous_42)","decl":{"start":{"line":169,"column":2},"end":{"line":169,"column":3}},"loc":{"start":{"line":169,"column":13},"end":{"line":171,"column":3}},"line":169},"43":{"name":"(anonymous_43)","decl":{"start":{"line":172,"column":2},"end":{"line":172,"column":3}},"loc":{"start":{"line":172,"column":14},"end":{"line":174,"column":3}},"line":172},"44":{"name":"(anonymous_44)","decl":{"start":{"line":175,"column":2},"end":{"line":175,"column":3}},"loc":{"start":{"line":175,"column":16},"end":{"line":182,"column":3}},"line":175},"45":{"name":"(anonymous_45)","decl":{"start":{"line":183,"column":2},"end":{"line":183,"column":3}},"loc":{"start":{"line":183,"column":18},"end":{"line":189,"column":3}},"line":183},"46":{"name":"(anonymous_46)","decl":{"start":{"line":190,"column":2},"end":{"line":190,"column":3}},"loc":{"start":{"line":190,"column":20},"end":{"line":192,"column":3}},"line":190},"47":{"name":"(anonymous_47)","decl":{"start":{"line":193,"column":2},"end":{"line":193,"column":3}},"loc":{"start":{"line":193,"column":21},"end":{"line":195,"column":3}},"line":193},"48":{"name":"(anonymous_48)","decl":{"start":{"line":196,"column":2},"end":{"line":196,"column":3}},"loc":{"start":{"line":196,"column":24},"end":{"line":198,"column":3}},"line":196},"49":{"name":"(anonymous_49)","decl":{"start":{"line":199,"column":2},"end":{"line":199,"column":3}},"loc":{"start":{"line":199,"column":23},"end":{"line":201,"column":3}},"line":199},"50":{"name":"(anonymous_50)","decl":{"start":{"line":202,"column":2},"end":{"line":202,"column":3}},"loc":{"start":{"line":202,"column":19},"end":{"line":204,"column":3}},"line":202},"51":{"name":"(anonymous_51)","decl":{"start":{"line":205,"column":2},"end":{"line":205,"column":3}},"loc":{"start":{"line":205,"column":33},"end":{"line":213,"column":3}},"line":205},"52":{"name":"(anonymous_52)","decl":{"start":{"line":214,"column":2},"end":{"line":214,"column":3}},"loc":{"start":{"line":214,"column":29},"end":{"line":223,"column":3}},"line":214},"53":{"name":"(anonymous_53)","decl":{"start":{"line":224,"column":2},"end":{"line":224,"column":3}},"loc":{"start":{"line":224,"column":27},"end":{"line":235,"column":3}},"line":224},"54":{"name":"(anonymous_54)","decl":{"start":{"line":236,"column":2},"end":{"line":236,"column":3}},"loc":{"start":{"line":236,"column":32},"end":{"line":238,"column":3}},"line":236},"55":{"name":"(anonymous_55)","decl":{"start":{"line":239,"column":2},"end":{"line":239,"column":3}},"loc":{"start":{"line":239,"column":31},"end":{"line":241,"column":3}},"line":239},"56":{"name":"(anonymous_56)","decl":{"start":{"line":242,"column":2},"end":{"line":242,"column":3}},"loc":{"start":{"line":242,"column":21},"end":{"line":249,"column":3}},"line":242},"57":{"name":"(anonymous_57)","decl":{"start":{"line":250,"column":2},"end":{"line":250,"column":3}},"loc":{"start":{"line":250,"column":19},"end":{"line":252,"column":3}},"line":250},"58":{"name":"(anonymous_58)","decl":{"start":{"line":253,"column":2},"end":{"line":253,"column":3}},"loc":{"start":{"line":253,"column":9},"end":{"line":255,"column":3}},"line":253},"59":{"name":"(anonymous_59)","decl":{"start":{"line":256,"column":2},"end":{"line":256,"column":3}},"loc":{"start":{"line":256,"column":9},"end":{"line":258,"column":3}},"line":256},"60":{"name":"(anonymous_60)","decl":{"start":{"line":259,"column":2},"end":{"line":259,"column":3}},"loc":{"start":{"line":259,"column":8},"end":{"line":261,"column":3}},"line":259},"61":{"name":"(anonymous_61)","decl":{"start":{"line":262,"column":2},"end":{"line":262,"column":3}},"loc":{"start":{"line":262,"column":9},"end":{"line":264,"column":3}},"line":262},"62":{"name":"(anonymous_62)","decl":{"start":{"line":265,"column":2},"end":{"line":265,"column":3}},"loc":{"start":{"line":265,"column":9},"end":{"line":267,"column":3}},"line":265},"63":{"name":"(anonymous_63)","decl":{"start":{"line":268,"column":2},"end":{"line":268,"column":3}},"loc":{"start":{"line":268,"column":10},"end":{"line":270,"column":3}},"line":268},"64":{"name":"(anonymous_64)","decl":{"start":{"line":271,"column":2},"end":{"line":271,"column":3}},"loc":{"start":{"line":271,"column":8},"end":{"line":273,"column":3}},"line":271},"65":{"name":"(anonymous_65)","decl":{"start":{"line":274,"column":2},"end":{"line":274,"column":3}},"loc":{"start":{"line":274,"column":9},"end":{"line":276,"column":3}},"line":274},"66":{"name":"(anonymous_66)","decl":{"start":{"line":277,"column":2},"end":{"line":277,"column":3}},"loc":{"start":{"line":277,"column":9},"end":{"line":279,"column":3}},"line":277},"67":{"name":"(anonymous_67)","decl":{"start":{"line":280,"column":2},"end":{"line":280,"column":3}},"loc":{"start":{"line":280,"column":10},"end":{"line":282,"column":3}},"line":280},"68":{"name":"(anonymous_68)","decl":{"start":{"line":283,"column":2},"end":{"line":283,"column":3}},"loc":{"start":{"line":283,"column":8},"end":{"line":285,"column":3}},"line":283},"69":{"name":"(anonymous_69)","decl":{"start":{"line":286,"column":2},"end":{"line":286,"column":3}},"loc":{"start":{"line":286,"column":9},"end":{"line":288,"column":3}},"line":286},"70":{"name":"(anonymous_70)","decl":{"start":{"line":289,"column":2},"end":{"line":289,"column":3}},"loc":{"start":{"line":289,"column":9},"end":{"line":291,"column":3}},"line":289},"71":{"name":"(anonymous_71)","decl":{"start":{"line":292,"column":2},"end":{"line":292,"column":3}},"loc":{"start":{"line":292,"column":21},"end":{"line":294,"column":3}},"line":292},"72":{"name":"(anonymous_72)","decl":{"start":{"line":295,"column":2},"end":{"line":295,"column":3}},"loc":{"start":{"line":295,"column":10},"end":{"line":297,"column":3}},"line":295},"73":{"name":"(anonymous_73)","decl":{"start":{"line":298,"column":2},"end":{"line":298,"column":3}},"loc":{"start":{"line":298,"column":8},"end":{"line":300,"column":3}},"line":298},"74":{"name":"(anonymous_74)","decl":{"start":{"line":301,"column":2},"end":{"line":301,"column":3}},"loc":{"start":{"line":301,"column":10},"end":{"line":303,"column":3}},"line":301},"75":{"name":"(anonymous_75)","decl":{"start":{"line":304,"column":2},"end":{"line":304,"column":3}},"loc":{"start":{"line":304,"column":8},"end":{"line":306,"column":3}},"line":304},"76":{"name":"(anonymous_76)","decl":{"start":{"line":307,"column":2},"end":{"line":307,"column":3}},"loc":{"start":{"line":307,"column":8},"end":{"line":309,"column":3}},"line":307},"77":{"name":"(anonymous_77)","decl":{"start":{"line":310,"column":2},"end":{"line":310,"column":3}},"loc":{"start":{"line":310,"column":21},"end":{"line":312,"column":3}},"line":310},"78":{"name":"(anonymous_78)","decl":{"start":{"line":313,"column":2},"end":{"line":313,"column":3}},"loc":{"start":{"line":313,"column":21},"end":{"line":315,"column":3}},"line":313},"79":{"name":"(anonymous_79)","decl":{"start":{"line":316,"column":2},"end":{"line":316,"column":3}},"loc":{"start":{"line":316,"column":20},"end":{"line":318,"column":3}},"line":316},"80":{"name":"(anonymous_80)","decl":{"start":{"line":319,"column":2},"end":{"line":319,"column":3}},"loc":{"start":{"line":319,"column":31},"end":{"line":321,"column":3}},"line":319},"81":{"name":"(anonymous_81)","decl":{"start":{"line":322,"column":2},"end":{"line":322,"column":3}},"loc":{"start":{"line":322,"column":32},"end":{"line":324,"column":3}},"line":322},"82":{"name":"(anonymous_82)","decl":{"start":{"line":328,"column":2},"end":{"line":328,"column":3}},"loc":{"start":{"line":328,"column":37},"end":{"line":334,"column":3}},"line":328},"83":{"name":"(anonymous_83)","decl":{"start":{"line":335,"column":2},"end":{"line":335,"column":3}},"loc":{"start":{"line":335,"column":24},"end":{"line":338,"column":3}},"line":335},"84":{"name":"(anonymous_84)","decl":{"start":{"line":339,"column":2},"end":{"line":339,"column":3}},"loc":{"start":{"line":339,"column":13},"end":{"line":341,"column":3}},"line":339},"85":{"name":"(anonymous_85)","decl":{"start":{"line":342,"column":2},"end":{"line":342,"column":3}},"loc":{"start":{"line":342,"column":18},"end":{"line":344,"column":3}},"line":342},"86":{"name":"(anonymous_86)","decl":{"start":{"line":345,"column":2},"end":{"line":345,"column":3}},"loc":{"start":{"line":345,"column":13},"end":{"line":347,"column":3}},"line":345},"87":{"name":"(anonymous_87)","decl":{"start":{"line":348,"column":2},"end":{"line":348,"column":3}},"loc":{"start":{"line":348,"column":16},"end":{"line":350,"column":3}},"line":348},"88":{"name":"(anonymous_88)","decl":{"start":{"line":351,"column":2},"end":{"line":351,"column":3}},"loc":{"start":{"line":351,"column":18},"end":{"line":353,"column":3}},"line":351},"89":{"name":"(anonymous_89)","decl":{"start":{"line":354,"column":2},"end":{"line":354,"column":3}},"loc":{"start":{"line":354,"column":20},"end":{"line":365,"column":3}},"line":354},"90":{"name":"(anonymous_90)","decl":{"start":{"line":366,"column":2},"end":{"line":366,"column":3}},"loc":{"start":{"line":366,"column":14},"end":{"line":368,"column":3}},"line":366},"91":{"name":"(anonymous_91)","decl":{"start":{"line":369,"column":2},"end":{"line":369,"column":3}},"loc":{"start":{"line":369,"column":21},"end":{"line":384,"column":3}},"line":369},"92":{"name":"(anonymous_92)","decl":{"start":{"line":385,"column":2},"end":{"line":385,"column":3}},"loc":{"start":{"line":385,"column":24},"end":{"line":396,"column":3}},"line":385},"93":{"name":"(anonymous_93)","decl":{"start":{"line":397,"column":2},"end":{"line":397,"column":3}},"loc":{"start":{"line":397,"column":23},"end":{"line":412,"column":3}},"line":397},"94":{"name":"(anonymous_94)","decl":{"start":{"line":413,"column":2},"end":{"line":413,"column":3}},"loc":{"start":{"line":413,"column":19},"end":{"line":449,"column":3}},"line":413},"95":{"name":"(anonymous_95)","decl":{"start":{"line":450,"column":2},"end":{"line":450,"column":3}},"loc":{"start":{"line":450,"column":32},"end":{"line":455,"column":3}},"line":450},"96":{"name":"(anonymous_96)","decl":{"start":{"line":456,"column":2},"end":{"line":456,"column":3}},"loc":{"start":{"line":456,"column":31},"end":{"line":461,"column":3}},"line":456},"97":{"name":"(anonymous_97)","decl":{"start":{"line":462,"column":2},"end":{"line":462,"column":3}},"loc":{"start":{"line":462,"column":33},"end":{"line":467,"column":3}},"line":462},"98":{"name":"(anonymous_98)","decl":{"start":{"line":468,"column":2},"end":{"line":468,"column":3}},"loc":{"start":{"line":468,"column":16},"end":{"line":482,"column":3}},"line":468},"99":{"name":"(anonymous_99)","decl":{"start":{"line":483,"column":2},"end":{"line":483,"column":3}},"loc":{"start":{"line":483,"column":17},"end":{"line":497,"column":3}},"line":483},"100":{"name":"(anonymous_100)","decl":{"start":{"line":498,"column":2},"end":{"line":498,"column":3}},"loc":{"start":{"line":498,"column":20},"end":{"line":512,"column":3}},"line":498},"101":{"name":"(anonymous_101)","decl":{"start":{"line":513,"column":2},"end":{"line":513,"column":3}},"loc":{"start":{"line":513,"column":19},"end":{"line":530,"column":3}},"line":513},"102":{"name":"(anonymous_102)","decl":{"start":{"line":531,"column":2},"end":{"line":531,"column":3}},"loc":{"start":{"line":531,"column":29},"end":{"line":542,"column":3}},"line":531},"103":{"name":"(anonymous_103)","decl":{"start":{"line":543,"column":2},"end":{"line":543,"column":3}},"loc":{"start":{"line":543,"column":27},"end":{"line":554,"column":3}},"line":543},"104":{"name":"(anonymous_104)","decl":{"start":{"line":555,"column":2},"end":{"line":555,"column":3}},"loc":{"start":{"line":555,"column":48},"end":{"line":561,"column":3}},"line":555},"105":{"name":"(anonymous_105)","decl":{"start":{"line":562,"column":2},"end":{"line":562,"column":3}},"loc":{"start":{"line":562,"column":54},"end":{"line":577,"column":3}},"line":562},"106":{"name":"(anonymous_106)","decl":{"start":{"line":578,"column":2},"end":{"line":578,"column":3}},"loc":{"start":{"line":578,"column":28},"end":{"line":589,"column":3}},"line":578},"107":{"name":"(anonymous_107)","decl":{"start":{"line":590,"column":2},"end":{"line":590,"column":3}},"loc":{"start":{"line":590,"column":19},"end":{"line":626,"column":3}},"line":590},"108":{"name":"(anonymous_108)","decl":{"start":{"line":627,"column":2},"end":{"line":627,"column":3}},"loc":{"start":{"line":627,"column":9},"end":{"line":637,"column":3}},"line":627},"109":{"name":"(anonymous_109)","decl":{"start":{"line":638,"column":2},"end":{"line":638,"column":3}},"loc":{"start":{"line":638,"column":9},"end":{"line":648,"column":3}},"line":638},"110":{"name":"(anonymous_110)","decl":{"start":{"line":649,"column":2},"end":{"line":649,"column":3}},"loc":{"start":{"line":649,"column":8},"end":{"line":659,"column":3}},"line":649},"111":{"name":"(anonymous_111)","decl":{"start":{"line":660,"column":2},"end":{"line":660,"column":3}},"loc":{"start":{"line":660,"column":9},"end":{"line":670,"column":3}},"line":660},"112":{"name":"(anonymous_112)","decl":{"start":{"line":671,"column":2},"end":{"line":671,"column":3}},"loc":{"start":{"line":671,"column":9},"end":{"line":681,"column":3}},"line":671},"113":{"name":"(anonymous_113)","decl":{"start":{"line":682,"column":2},"end":{"line":682,"column":3}},"loc":{"start":{"line":682,"column":10},"end":{"line":692,"column":3}},"line":682},"114":{"name":"(anonymous_114)","decl":{"start":{"line":693,"column":2},"end":{"line":693,"column":3}},"loc":{"start":{"line":693,"column":8},"end":{"line":703,"column":3}},"line":693},"115":{"name":"(anonymous_115)","decl":{"start":{"line":704,"column":2},"end":{"line":704,"column":3}},"loc":{"start":{"line":704,"column":9},"end":{"line":714,"column":3}},"line":704},"116":{"name":"(anonymous_116)","decl":{"start":{"line":715,"column":2},"end":{"line":715,"column":3}},"loc":{"start":{"line":715,"column":9},"end":{"line":725,"column":3}},"line":715},"117":{"name":"(anonymous_117)","decl":{"start":{"line":726,"column":2},"end":{"line":726,"column":3}},"loc":{"start":{"line":726,"column":10},"end":{"line":736,"column":3}},"line":726},"118":{"name":"(anonymous_118)","decl":{"start":{"line":737,"column":2},"end":{"line":737,"column":3}},"loc":{"start":{"line":737,"column":8},"end":{"line":747,"column":3}},"line":737},"119":{"name":"(anonymous_119)","decl":{"start":{"line":748,"column":2},"end":{"line":748,"column":3}},"loc":{"start":{"line":748,"column":9},"end":{"line":758,"column":3}},"line":748},"120":{"name":"(anonymous_120)","decl":{"start":{"line":759,"column":2},"end":{"line":759,"column":3}},"loc":{"start":{"line":759,"column":9},"end":{"line":769,"column":3}},"line":759},"121":{"name":"(anonymous_121)","decl":{"start":{"line":770,"column":2},"end":{"line":770,"column":3}},"loc":{"start":{"line":770,"column":21},"end":{"line":796,"column":3}},"line":770},"122":{"name":"(anonymous_122)","decl":{"start":{"line":797,"column":2},"end":{"line":797,"column":3}},"loc":{"start":{"line":797,"column":10},"end":{"line":807,"column":3}},"line":797},"123":{"name":"(anonymous_123)","decl":{"start":{"line":808,"column":2},"end":{"line":808,"column":3}},"loc":{"start":{"line":808,"column":8},"end":{"line":821,"column":3}},"line":808},"124":{"name":"(anonymous_124)","decl":{"start":{"line":822,"column":2},"end":{"line":822,"column":3}},"loc":{"start":{"line":822,"column":10},"end":{"line":835,"column":3}},"line":822},"125":{"name":"(anonymous_125)","decl":{"start":{"line":836,"column":2},"end":{"line":836,"column":3}},"loc":{"start":{"line":836,"column":8},"end":{"line":846,"column":3}},"line":836},"126":{"name":"(anonymous_126)","decl":{"start":{"line":847,"column":2},"end":{"line":847,"column":3}},"loc":{"start":{"line":847,"column":8},"end":{"line":857,"column":3}},"line":847},"127":{"name":"(anonymous_127)","decl":{"start":{"line":858,"column":2},"end":{"line":858,"column":3}},"loc":{"start":{"line":858,"column":21},"end":{"line":881,"column":3}},"line":858},"128":{"name":"(anonymous_128)","decl":{"start":{"line":882,"column":2},"end":{"line":882,"column":3}},"loc":{"start":{"line":882,"column":21},"end":{"line":905,"column":3}},"line":882},"129":{"name":"(anonymous_129)","decl":{"start":{"line":906,"column":2},"end":{"line":906,"column":3}},"loc":{"start":{"line":906,"column":20},"end":{"line":929,"column":3}},"line":906},"130":{"name":"(anonymous_130)","decl":{"start":{"line":930,"column":2},"end":{"line":930,"column":3}},"loc":{"start":{"line":930,"column":31},"end":{"line":932,"column":3}},"line":930},"131":{"name":"(anonymous_131)","decl":{"start":{"line":933,"column":2},"end":{"line":933,"column":3}},"loc":{"start":{"line":933,"column":32},"end":{"line":935,"column":3}},"line":933},"132":{"name":"(anonymous_132)","decl":{"start":{"line":936,"column":2},"end":{"line":936,"column":3}},"loc":{"start":{"line":936,"column":50},"end":{"line":959,"column":3}},"line":936},"133":{"name":"(anonymous_133)","decl":{"start":{"line":965,"column":2},"end":{"line":965,"column":3}},"loc":{"start":{"line":965,"column":23},"end":{"line":973,"column":3}},"line":965},"134":{"name":"(anonymous_134)","decl":{"start":{"line":974,"column":2},"end":{"line":974,"column":3}},"loc":{"start":{"line":974,"column":24},"end":{"line":977,"column":3}},"line":974},"135":{"name":"(anonymous_135)","decl":{"start":{"line":978,"column":2},"end":{"line":978,"column":3}},"loc":{"start":{"line":978,"column":13},"end":{"line":980,"column":3}},"line":978},"136":{"name":"(anonymous_136)","decl":{"start":{"line":981,"column":2},"end":{"line":981,"column":3}},"loc":{"start":{"line":981,"column":13},"end":{"line":983,"column":3}},"line":981},"137":{"name":"(anonymous_137)","decl":{"start":{"line":984,"column":2},"end":{"line":984,"column":3}},"loc":{"start":{"line":984,"column":32},"end":{"line":989,"column":3}},"line":984},"138":{"name":"(anonymous_138)","decl":{"start":{"line":990,"column":2},"end":{"line":990,"column":3}},"loc":{"start":{"line":990,"column":31},"end":{"line":995,"column":3}},"line":990},"139":{"name":"(anonymous_139)","decl":{"start":{"line":996,"column":2},"end":{"line":996,"column":3}},"loc":{"start":{"line":996,"column":20},"end":{"line":998,"column":3}},"line":996},"140":{"name":"(anonymous_140)","decl":{"start":{"line":999,"column":2},"end":{"line":999,"column":3}},"loc":{"start":{"line":999,"column":21},"end":{"line":1001,"column":3}},"line":999},"141":{"name":"(anonymous_141)","decl":{"start":{"line":1002,"column":2},"end":{"line":1002,"column":3}},"loc":{"start":{"line":1002,"column":24},"end":{"line":1004,"column":3}},"line":1002},"142":{"name":"(anonymous_142)","decl":{"start":{"line":1005,"column":2},"end":{"line":1005,"column":3}},"loc":{"start":{"line":1005,"column":23},"end":{"line":1007,"column":3}},"line":1005},"143":{"name":"(anonymous_143)","decl":{"start":{"line":1008,"column":2},"end":{"line":1008,"column":3}},"loc":{"start":{"line":1008,"column":50},"end":{"line":1013,"column":3}},"line":1008},"144":{"name":"(anonymous_144)","decl":{"start":{"line":1014,"column":2},"end":{"line":1014,"column":3}},"loc":{"start":{"line":1014,"column":54},"end":{"line":1033,"column":3}},"line":1014},"145":{"name":"(anonymous_145)","decl":{"start":{"line":1034,"column":2},"end":{"line":1034,"column":3}},"loc":{"start":{"line":1034,"column":48},"end":{"line":1049,"column":3}},"line":1034},"146":{"name":"(anonymous_146)","decl":{"start":{"line":1050,"column":2},"end":{"line":1050,"column":3}},"loc":{"start":{"line":1050,"column":27},"end":{"line":1061,"column":3}},"line":1050},"147":{"name":"(anonymous_147)","decl":{"start":{"line":1062,"column":2},"end":{"line":1062,"column":3}},"loc":{"start":{"line":1062,"column":28},"end":{"line":1073,"column":3}},"line":1062},"148":{"name":"(anonymous_148)","decl":{"start":{"line":1074,"column":2},"end":{"line":1074,"column":3}},"loc":{"start":{"line":1074,"column":31},"end":{"line":1076,"column":3}},"line":1074},"149":{"name":"(anonymous_149)","decl":{"start":{"line":1077,"column":2},"end":{"line":1077,"column":3}},"loc":{"start":{"line":1077,"column":32},"end":{"line":1079,"column":3}},"line":1077},"150":{"name":"(anonymous_150)","decl":{"start":{"line":1080,"column":2},"end":{"line":1080,"column":3}},"loc":{"start":{"line":1080,"column":34},"end":{"line":1084,"column":3}},"line":1080},"151":{"name":"createBooleanValueObjectByRawValue","decl":{"start":{"line":1086,"column":16},"end":{"line":1086,"column":50}},"loc":{"start":{"line":1086,"column":61},"end":{"line":1106,"column":1}},"line":1086},"152":{"name":"createStringValueObjectByRawValue","decl":{"start":{"line":1107,"column":16},"end":{"line":1107,"column":49}},"loc":{"start":{"line":1107,"column":60},"end":{"line":1114,"column":1}},"line":1107},"153":{"name":"createNumberValueObjectByRawValue","decl":{"start":{"line":1115,"column":16},"end":{"line":1115,"column":49}},"loc":{"start":{"line":1115,"column":74},"end":{"line":1131,"column":1}},"line":1115}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":61}},"type":"binary-expr","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":35}},{"start":{"line":14,"column":39},"end":{"line":14,"column":61}}],"line":14},"1":{"loc":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},{"start":{},"end":{}}],"line":36},"2":{"loc":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},{"start":{},"end":{}}],"line":39},"3":{"loc":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},{"start":{},"end":{}}],"line":45},"4":{"loc":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},{"start":{},"end":{}}],"line":51},"5":{"loc":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},{"start":{},"end":{}}],"line":69},"6":{"loc":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},{"start":{},"end":{}}],"line":72},"7":{"loc":{"start":{"line":158,"column":4},"end":{"line":161,"column":5}},"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":161,"column":5}},{"start":{},"end":{}}],"line":158},"8":{"loc":{"start":{"line":159,"column":27},"end":{"line":159,"column":77}},"type":"binary-expr","locations":[{"start":{"line":159,"column":27},"end":{"line":159,"column":45}},{"start":{"line":159,"column":49},"end":{"line":159,"column":77}}],"line":159},"9":{"loc":{"start":{"line":162,"column":26},"end":{"line":162,"column":78}},"type":"binary-expr","locations":[{"start":{"line":162,"column":26},"end":{"line":162,"column":45}},{"start":{"line":162,"column":49},"end":{"line":162,"column":78}}],"line":162},"10":{"loc":{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},{"start":{},"end":{}}],"line":178},"11":{"loc":{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},{"start":{},"end":{}}],"line":185},"12":{"loc":{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},{"start":{},"end":{}}],"line":206},"13":{"loc":{"start":{"line":209,"column":4},"end":{"line":211,"column":5}},"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":211,"column":5}},{"start":{},"end":{}}],"line":209},"14":{"loc":{"start":{"line":216,"column":4},"end":{"line":221,"column":5}},"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":221,"column":5}},{"start":{"line":218,"column":11},"end":{"line":221,"column":5}}],"line":216},"15":{"loc":{"start":{"line":216,"column":8},"end":{"line":216,"column":62}},"type":"binary-expr","locations":[{"start":{"line":216,"column":8},"end":{"line":216,"column":33}},{"start":{"line":216,"column":37},"end":{"line":216,"column":62}}],"line":216},"16":{"loc":{"start":{"line":218,"column":11},"end":{"line":221,"column":5}},"type":"if","locations":[{"start":{"line":218,"column":11},"end":{"line":221,"column":5}},{"start":{},"end":{}}],"line":218},"17":{"loc":{"start":{"line":219,"column":53},"end":{"line":219,"column":66}},"type":"cond-expr","locations":[{"start":{"line":219,"column":61},"end":{"line":219,"column":62}},{"start":{"line":219,"column":65},"end":{"line":219,"column":66}}],"line":219},"18":{"loc":{"start":{"line":225,"column":4},"end":{"line":234,"column":5}},"type":"switch","locations":[{"start":{"line":226,"column":6},"end":{"line":226,"column":37}},{"start":{"line":227,"column":6},"end":{"line":228,"column":20}},{"start":{"line":229,"column":6},"end":{"line":229,"column":31}},{"start":{"line":230,"column":6},"end":{"line":230,"column":34}},{"start":{"line":231,"column":6},"end":{"line":231,"column":43}},{"start":{"line":232,"column":6},"end":{"line":233,"column":21}}],"line":225},"19":{"loc":{"start":{"line":245,"column":4},"end":{"line":247,"column":5}},"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":247,"column":5}},{"start":{},"end":{}}],"line":245},"20":{"loc":{"start":{"line":328,"column":23},"end":{"line":328,"column":35}},"type":"default-arg","locations":[{"start":{"line":328,"column":33},"end":{"line":328,"column":35}}],"line":328},"21":{"loc":{"start":{"line":330,"column":4},"end":{"line":332,"column":5}},"type":"if","locations":[{"start":{"line":330,"column":4},"end":{"line":332,"column":5}},{"start":{},"end":{}}],"line":330},"22":{"loc":{"start":{"line":355,"column":4},"end":{"line":357,"column":5}},"type":"if","locations":[{"start":{"line":355,"column":4},"end":{"line":357,"column":5}},{"start":{},"end":{}}],"line":355},"23":{"loc":{"start":{"line":359,"column":4},"end":{"line":361,"column":5}},"type":"if","locations":[{"start":{"line":359,"column":4},"end":{"line":361,"column":5}},{"start":{},"end":{}}],"line":359},"24":{"loc":{"start":{"line":370,"column":4},"end":{"line":376,"column":5}},"type":"if","locations":[{"start":{"line":370,"column":4},"end":{"line":376,"column":5}},{"start":{},"end":{}}],"line":370},"25":{"loc":{"start":{"line":372,"column":6},"end":{"line":374,"column":7}},"type":"if","locations":[{"start":{"line":372,"column":6},"end":{"line":374,"column":7}},{"start":{},"end":{}}],"line":372},"26":{"loc":{"start":{"line":378,"column":4},"end":{"line":380,"column":5}},"type":"if","locations":[{"start":{"line":378,"column":4},"end":{"line":380,"column":5}},{"start":{},"end":{}}],"line":378},"27":{"loc":{"start":{"line":386,"column":4},"end":{"line":388,"column":5}},"type":"if","locations":[{"start":{"line":386,"column":4},"end":{"line":388,"column":5}},{"start":{},"end":{}}],"line":386},"28":{"loc":{"start":{"line":390,"column":4},"end":{"line":392,"column":5}},"type":"if","locations":[{"start":{"line":390,"column":4},"end":{"line":392,"column":5}},{"start":{},"end":{}}],"line":390},"29":{"loc":{"start":{"line":398,"column":4},"end":{"line":404,"column":5}},"type":"if","locations":[{"start":{"line":398,"column":4},"end":{"line":404,"column":5}},{"start":{},"end":{}}],"line":398},"30":{"loc":{"start":{"line":400,"column":6},"end":{"line":402,"column":7}},"type":"if","locations":[{"start":{"line":400,"column":6},"end":{"line":402,"column":7}},{"start":{},"end":{}}],"line":400},"31":{"loc":{"start":{"line":406,"column":4},"end":{"line":408,"column":5}},"type":"if","locations":[{"start":{"line":406,"column":4},"end":{"line":408,"column":5}},{"start":{},"end":{}}],"line":406},"32":{"loc":{"start":{"line":414,"column":4},"end":{"line":416,"column":5}},"type":"if","locations":[{"start":{"line":414,"column":4},"end":{"line":416,"column":5}},{"start":{},"end":{}}],"line":414},"33":{"loc":{"start":{"line":419,"column":4},"end":{"line":421,"column":5}},"type":"if","locations":[{"start":{"line":419,"column":4},"end":{"line":421,"column":5}},{"start":{},"end":{}}],"line":419},"34":{"loc":{"start":{"line":422,"column":4},"end":{"line":424,"column":5}},"type":"if","locations":[{"start":{"line":422,"column":4},"end":{"line":424,"column":5}},{"start":{},"end":{}}],"line":422},"35":{"loc":{"start":{"line":425,"column":4},"end":{"line":440,"column":5}},"type":"if","locations":[{"start":{"line":425,"column":4},"end":{"line":440,"column":5}},{"start":{},"end":{}}],"line":425},"36":{"loc":{"start":{"line":426,"column":6},"end":{"line":428,"column":7}},"type":"if","locations":[{"start":{"line":426,"column":6},"end":{"line":428,"column":7}},{"start":{},"end":{}}],"line":426},"37":{"loc":{"start":{"line":429,"column":6},"end":{"line":431,"column":7}},"type":"if","locations":[{"start":{"line":429,"column":6},"end":{"line":431,"column":7}},{"start":{},"end":{}}],"line":429},"38":{"loc":{"start":{"line":429,"column":10},"end":{"line":429,"column":67}},"type":"binary-expr","locations":[{"start":{"line":429,"column":10},"end":{"line":429,"column":40}},{"start":{"line":429,"column":44},"end":{"line":429,"column":67}}],"line":429},"39":{"loc":{"start":{"line":432,"column":6},"end":{"line":434,"column":7}},"type":"if","locations":[{"start":{"line":432,"column":6},"end":{"line":434,"column":7}},{"start":{},"end":{}}],"line":432},"40":{"loc":{"start":{"line":436,"column":6},"end":{"line":438,"column":7}},"type":"if","locations":[{"start":{"line":436,"column":6},"end":{"line":438,"column":7}},{"start":{},"end":{}}],"line":436},"41":{"loc":{"start":{"line":441,"column":4},"end":{"line":447,"column":5}},"type":"if","locations":[{"start":{"line":441,"column":4},"end":{"line":447,"column":5}},{"start":{},"end":{}}],"line":441},"42":{"loc":{"start":{"line":442,"column":27},"end":{"line":442,"column":40}},"type":"cond-expr","locations":[{"start":{"line":442,"column":35},"end":{"line":442,"column":36}},{"start":{"line":442,"column":39},"end":{"line":442,"column":40}}],"line":442},"43":{"loc":{"start":{"line":443,"column":6},"end":{"line":445,"column":7}},"type":"if","locations":[{"start":{"line":443,"column":6},"end":{"line":445,"column":7}},{"start":{},"end":{}}],"line":443},"44":{"loc":{"start":{"line":451,"column":4},"end":{"line":453,"column":5}},"type":"if","locations":[{"start":{"line":451,"column":4},"end":{"line":453,"column":5}},{"start":{},"end":{}}],"line":451},"45":{"loc":{"start":{"line":457,"column":4},"end":{"line":459,"column":5}},"type":"if","locations":[{"start":{"line":457,"column":4},"end":{"line":459,"column":5}},{"start":{},"end":{}}],"line":457},"46":{"loc":{"start":{"line":463,"column":4},"end":{"line":465,"column":5}},"type":"if","locations":[{"start":{"line":463,"column":4},"end":{"line":465,"column":5}},{"start":{},"end":{}}],"line":463},"47":{"loc":{"start":{"line":471,"column":4},"end":{"line":473,"column":5}},"type":"if","locations":[{"start":{"line":471,"column":4},"end":{"line":473,"column":5}},{"start":{},"end":{}}],"line":471},"48":{"loc":{"start":{"line":471,"column":8},"end":{"line":471,"column":58}},"type":"binary-expr","locations":[{"start":{"line":471,"column":8},"end":{"line":471,"column":34}},{"start":{"line":471,"column":38},"end":{"line":471,"column":58}}],"line":471},"49":{"loc":{"start":{"line":474,"column":4},"end":{"line":476,"column":5}},"type":"if","locations":[{"start":{"line":474,"column":4},"end":{"line":476,"column":5}},{"start":{},"end":{}}],"line":474},"50":{"loc":{"start":{"line":474,"column":8},"end":{"line":474,"column":66}},"type":"binary-expr","locations":[{"start":{"line":474,"column":8},"end":{"line":474,"column":38}},{"start":{"line":474,"column":42},"end":{"line":474,"column":66}}],"line":474},"51":{"loc":{"start":{"line":478,"column":4},"end":{"line":480,"column":5}},"type":"if","locations":[{"start":{"line":478,"column":4},"end":{"line":480,"column":5}},{"start":{},"end":{}}],"line":478},"52":{"loc":{"start":{"line":486,"column":4},"end":{"line":488,"column":5}},"type":"if","locations":[{"start":{"line":486,"column":4},"end":{"line":488,"column":5}},{"start":{},"end":{}}],"line":486},"53":{"loc":{"start":{"line":486,"column":8},"end":{"line":486,"column":58}},"type":"binary-expr","locations":[{"start":{"line":486,"column":8},"end":{"line":486,"column":34}},{"start":{"line":486,"column":38},"end":{"line":486,"column":58}}],"line":486},"54":{"loc":{"start":{"line":489,"column":4},"end":{"line":491,"column":5}},"type":"if","locations":[{"start":{"line":489,"column":4},"end":{"line":491,"column":5}},{"start":{},"end":{}}],"line":489},"55":{"loc":{"start":{"line":489,"column":8},"end":{"line":489,"column":66}},"type":"binary-expr","locations":[{"start":{"line":489,"column":8},"end":{"line":489,"column":38}},{"start":{"line":489,"column":42},"end":{"line":489,"column":66}}],"line":489},"56":{"loc":{"start":{"line":493,"column":4},"end":{"line":495,"column":5}},"type":"if","locations":[{"start":{"line":493,"column":4},"end":{"line":495,"column":5}},{"start":{},"end":{}}],"line":493},"57":{"loc":{"start":{"line":501,"column":4},"end":{"line":503,"column":5}},"type":"if","locations":[{"start":{"line":501,"column":4},"end":{"line":503,"column":5}},{"start":{},"end":{}}],"line":501},"58":{"loc":{"start":{"line":501,"column":8},"end":{"line":501,"column":58}},"type":"binary-expr","locations":[{"start":{"line":501,"column":8},"end":{"line":501,"column":34}},{"start":{"line":501,"column":38},"end":{"line":501,"column":58}}],"line":501},"59":{"loc":{"start":{"line":504,"column":4},"end":{"line":506,"column":5}},"type":"if","locations":[{"start":{"line":504,"column":4},"end":{"line":506,"column":5}},{"start":{},"end":{}}],"line":504},"60":{"loc":{"start":{"line":504,"column":8},"end":{"line":504,"column":66}},"type":"binary-expr","locations":[{"start":{"line":504,"column":8},"end":{"line":504,"column":38}},{"start":{"line":504,"column":42},"end":{"line":504,"column":66}}],"line":504},"61":{"loc":{"start":{"line":508,"column":4},"end":{"line":510,"column":5}},"type":"if","locations":[{"start":{"line":508,"column":4},"end":{"line":510,"column":5}},{"start":{},"end":{}}],"line":508},"62":{"loc":{"start":{"line":516,"column":4},"end":{"line":518,"column":5}},"type":"if","locations":[{"start":{"line":516,"column":4},"end":{"line":518,"column":5}},{"start":{},"end":{}}],"line":516},"63":{"loc":{"start":{"line":516,"column":8},"end":{"line":516,"column":58}},"type":"binary-expr","locations":[{"start":{"line":516,"column":8},"end":{"line":516,"column":34}},{"start":{"line":516,"column":38},"end":{"line":516,"column":58}}],"line":516},"64":{"loc":{"start":{"line":519,"column":4},"end":{"line":521,"column":5}},"type":"if","locations":[{"start":{"line":519,"column":4},"end":{"line":521,"column":5}},{"start":{},"end":{}}],"line":519},"65":{"loc":{"start":{"line":519,"column":8},"end":{"line":519,"column":66}},"type":"binary-expr","locations":[{"start":{"line":519,"column":8},"end":{"line":519,"column":38}},{"start":{"line":519,"column":42},"end":{"line":519,"column":66}}],"line":519},"66":{"loc":{"start":{"line":522,"column":4},"end":{"line":524,"column":5}},"type":"if","locations":[{"start":{"line":522,"column":4},"end":{"line":524,"column":5}},{"start":{},"end":{}}],"line":522},"67":{"loc":{"start":{"line":526,"column":4},"end":{"line":528,"column":5}},"type":"if","locations":[{"start":{"line":526,"column":4},"end":{"line":528,"column":5}},{"start":{},"end":{}}],"line":526},"68":{"loc":{"start":{"line":534,"column":4},"end":{"line":540,"column":5}},"type":"if","locations":[{"start":{"line":534,"column":4},"end":{"line":540,"column":5}},{"start":{"line":536,"column":11},"end":{"line":540,"column":5}}],"line":534},"69":{"loc":{"start":{"line":536,"column":11},"end":{"line":540,"column":5}},"type":"if","locations":[{"start":{"line":536,"column":11},"end":{"line":540,"column":5}},{"start":{"line":538,"column":11},"end":{"line":540,"column":5}}],"line":536},"70":{"loc":{"start":{"line":538,"column":11},"end":{"line":540,"column":5}},"type":"if","locations":[{"start":{"line":538,"column":11},"end":{"line":540,"column":5}},{"start":{},"end":{}}],"line":538},"71":{"loc":{"start":{"line":544,"column":4},"end":{"line":553,"column":5}},"type":"switch","locations":[{"start":{"line":545,"column":6},"end":{"line":545,"column":31}},{"start":{"line":546,"column":6},"end":{"line":546,"column":37}},{"start":{"line":547,"column":6},"end":{"line":548,"column":21}},{"start":{"line":549,"column":6},"end":{"line":549,"column":34}},{"start":{"line":550,"column":6},"end":{"line":550,"column":43}},{"start":{"line":551,"column":6},"end":{"line":552,"column":20}}],"line":544},"72":{"loc":{"start":{"line":556,"column":4},"end":{"line":560,"column":5}},"type":"if","locations":[{"start":{"line":556,"column":4},"end":{"line":560,"column":5}},{"start":{"line":558,"column":11},"end":{"line":560,"column":5}}],"line":556},"73":{"loc":{"start":{"line":556,"column":8},"end":{"line":556,"column":65}},"type":"binary-expr","locations":[{"start":{"line":556,"column":8},"end":{"line":556,"column":38}},{"start":{"line":556,"column":42},"end":{"line":556,"column":65}}],"line":556},"74":{"loc":{"start":{"line":563,"column":4},"end":{"line":576,"column":5}},"type":"switch","locations":[{"start":{"line":564,"column":6},"end":{"line":565,"column":43}},{"start":{"line":566,"column":6},"end":{"line":567,"column":48}},{"start":{"line":568,"column":6},"end":{"line":569,"column":56}},{"start":{"line":570,"column":6},"end":{"line":571,"column":45}},{"start":{"line":572,"column":6},"end":{"line":573,"column":53}},{"start":{"line":574,"column":6},"end":{"line":575,"column":44}}],"line":563},"75":{"loc":{"start":{"line":579,"column":4},"end":{"line":588,"column":5}},"type":"switch","locations":[{"start":{"line":580,"column":6},"end":{"line":580,"column":31}},{"start":{"line":581,"column":6},"end":{"line":581,"column":37}},{"start":{"line":582,"column":6},"end":{"line":583,"column":21}},{"start":{"line":584,"column":6},"end":{"line":584,"column":34}},{"start":{"line":585,"column":6},"end":{"line":585,"column":43}},{"start":{"line":586,"column":6},"end":{"line":587,"column":20}}],"line":579},"76":{"loc":{"start":{"line":591,"column":4},"end":{"line":593,"column":5}},"type":"if","locations":[{"start":{"line":591,"column":4},"end":{"line":593,"column":5}},{"start":{},"end":{}}],"line":591},"77":{"loc":{"start":{"line":594,"column":4},"end":{"line":596,"column":5}},"type":"if","locations":[{"start":{"line":594,"column":4},"end":{"line":596,"column":5}},{"start":{},"end":{}}],"line":594},"78":{"loc":{"start":{"line":599,"column":4},"end":{"line":601,"column":5}},"type":"if","locations":[{"start":{"line":599,"column":4},"end":{"line":601,"column":5}},{"start":{},"end":{}}],"line":599},"79":{"loc":{"start":{"line":602,"column":4},"end":{"line":604,"column":5}},"type":"if","locations":[{"start":{"line":602,"column":4},"end":{"line":604,"column":5}},{"start":{},"end":{}}],"line":602},"80":{"loc":{"start":{"line":606,"column":4},"end":{"line":608,"column":5}},"type":"if","locations":[{"start":{"line":606,"column":4},"end":{"line":608,"column":5}},{"start":{},"end":{}}],"line":606},"81":{"loc":{"start":{"line":609,"column":4},"end":{"line":611,"column":5}},"type":"if","locations":[{"start":{"line":609,"column":4},"end":{"line":611,"column":5}},{"start":{},"end":{}}],"line":609},"82":{"loc":{"start":{"line":609,"column":8},"end":{"line":609,"column":65}},"type":"binary-expr","locations":[{"start":{"line":609,"column":8},"end":{"line":609,"column":38}},{"start":{"line":609,"column":42},"end":{"line":609,"column":65}}],"line":609},"83":{"loc":{"start":{"line":612,"column":4},"end":{"line":620,"column":5}},"type":"if","locations":[{"start":{"line":612,"column":4},"end":{"line":620,"column":5}},{"start":{},"end":{}}],"line":612},"84":{"loc":{"start":{"line":613,"column":6},"end":{"line":615,"column":7}},"type":"if","locations":[{"start":{"line":613,"column":6},"end":{"line":615,"column":7}},{"start":{},"end":{}}],"line":613},"85":{"loc":{"start":{"line":616,"column":6},"end":{"line":618,"column":7}},"type":"if","locations":[{"start":{"line":616,"column":6},"end":{"line":618,"column":7}},{"start":{},"end":{}}],"line":616},"86":{"loc":{"start":{"line":622,"column":4},"end":{"line":624,"column":5}},"type":"if","locations":[{"start":{"line":622,"column":4},"end":{"line":624,"column":5}},{"start":{},"end":{}}],"line":622},"87":{"loc":{"start":{"line":629,"column":4},"end":{"line":631,"column":5}},"type":"if","locations":[{"start":{"line":629,"column":4},"end":{"line":631,"column":5}},{"start":{},"end":{}}],"line":629},"88":{"loc":{"start":{"line":633,"column":4},"end":{"line":635,"column":5}},"type":"if","locations":[{"start":{"line":633,"column":4},"end":{"line":635,"column":5}},{"start":{},"end":{}}],"line":633},"89":{"loc":{"start":{"line":640,"column":4},"end":{"line":642,"column":5}},"type":"if","locations":[{"start":{"line":640,"column":4},"end":{"line":642,"column":5}},{"start":{},"end":{}}],"line":640},"90":{"loc":{"start":{"line":644,"column":4},"end":{"line":646,"column":5}},"type":"if","locations":[{"start":{"line":644,"column":4},"end":{"line":646,"column":5}},{"start":{},"end":{}}],"line":644},"91":{"loc":{"start":{"line":651,"column":4},"end":{"line":653,"column":5}},"type":"if","locations":[{"start":{"line":651,"column":4},"end":{"line":653,"column":5}},{"start":{},"end":{}}],"line":651},"92":{"loc":{"start":{"line":655,"column":4},"end":{"line":657,"column":5}},"type":"if","locations":[{"start":{"line":655,"column":4},"end":{"line":657,"column":5}},{"start":{},"end":{}}],"line":655},"93":{"loc":{"start":{"line":662,"column":4},"end":{"line":664,"column":5}},"type":"if","locations":[{"start":{"line":662,"column":4},"end":{"line":664,"column":5}},{"start":{},"end":{}}],"line":662},"94":{"loc":{"start":{"line":666,"column":4},"end":{"line":668,"column":5}},"type":"if","locations":[{"start":{"line":666,"column":4},"end":{"line":668,"column":5}},{"start":{},"end":{}}],"line":666},"95":{"loc":{"start":{"line":673,"column":4},"end":{"line":675,"column":5}},"type":"if","locations":[{"start":{"line":673,"column":4},"end":{"line":675,"column":5}},{"start":{},"end":{}}],"line":673},"96":{"loc":{"start":{"line":677,"column":4},"end":{"line":679,"column":5}},"type":"if","locations":[{"start":{"line":677,"column":4},"end":{"line":679,"column":5}},{"start":{},"end":{}}],"line":677},"97":{"loc":{"start":{"line":684,"column":4},"end":{"line":686,"column":5}},"type":"if","locations":[{"start":{"line":684,"column":4},"end":{"line":686,"column":5}},{"start":{},"end":{}}],"line":684},"98":{"loc":{"start":{"line":688,"column":4},"end":{"line":690,"column":5}},"type":"if","locations":[{"start":{"line":688,"column":4},"end":{"line":690,"column":5}},{"start":{},"end":{}}],"line":688},"99":{"loc":{"start":{"line":695,"column":4},"end":{"line":697,"column":5}},"type":"if","locations":[{"start":{"line":695,"column":4},"end":{"line":697,"column":5}},{"start":{},"end":{}}],"line":695},"100":{"loc":{"start":{"line":699,"column":4},"end":{"line":701,"column":5}},"type":"if","locations":[{"start":{"line":699,"column":4},"end":{"line":701,"column":5}},{"start":{},"end":{}}],"line":699},"101":{"loc":{"start":{"line":706,"column":4},"end":{"line":708,"column":5}},"type":"if","locations":[{"start":{"line":706,"column":4},"end":{"line":708,"column":5}},{"start":{},"end":{}}],"line":706},"102":{"loc":{"start":{"line":710,"column":4},"end":{"line":712,"column":5}},"type":"if","locations":[{"start":{"line":710,"column":4},"end":{"line":712,"column":5}},{"start":{},"end":{}}],"line":710},"103":{"loc":{"start":{"line":717,"column":4},"end":{"line":719,"column":5}},"type":"if","locations":[{"start":{"line":717,"column":4},"end":{"line":719,"column":5}},{"start":{},"end":{}}],"line":717},"104":{"loc":{"start":{"line":721,"column":4},"end":{"line":723,"column":5}},"type":"if","locations":[{"start":{"line":721,"column":4},"end":{"line":723,"column":5}},{"start":{},"end":{}}],"line":721},"105":{"loc":{"start":{"line":728,"column":4},"end":{"line":730,"column":5}},"type":"if","locations":[{"start":{"line":728,"column":4},"end":{"line":730,"column":5}},{"start":{},"end":{}}],"line":728},"106":{"loc":{"start":{"line":732,"column":4},"end":{"line":734,"column":5}},"type":"if","locations":[{"start":{"line":732,"column":4},"end":{"line":734,"column":5}},{"start":{},"end":{}}],"line":732},"107":{"loc":{"start":{"line":739,"column":4},"end":{"line":741,"column":5}},"type":"if","locations":[{"start":{"line":739,"column":4},"end":{"line":741,"column":5}},{"start":{},"end":{}}],"line":739},"108":{"loc":{"start":{"line":743,"column":4},"end":{"line":745,"column":5}},"type":"if","locations":[{"start":{"line":743,"column":4},"end":{"line":745,"column":5}},{"start":{},"end":{}}],"line":743},"109":{"loc":{"start":{"line":750,"column":4},"end":{"line":752,"column":5}},"type":"if","locations":[{"start":{"line":750,"column":4},"end":{"line":752,"column":5}},{"start":{},"end":{}}],"line":750},"110":{"loc":{"start":{"line":754,"column":4},"end":{"line":756,"column":5}},"type":"if","locations":[{"start":{"line":754,"column":4},"end":{"line":756,"column":5}},{"start":{},"end":{}}],"line":754},"111":{"loc":{"start":{"line":761,"column":4},"end":{"line":763,"column":5}},"type":"if","locations":[{"start":{"line":761,"column":4},"end":{"line":763,"column":5}},{"start":{},"end":{}}],"line":761},"112":{"loc":{"start":{"line":765,"column":4},"end":{"line":767,"column":5}},"type":"if","locations":[{"start":{"line":765,"column":4},"end":{"line":767,"column":5}},{"start":{},"end":{}}],"line":765},"113":{"loc":{"start":{"line":771,"column":4},"end":{"line":773,"column":5}},"type":"if","locations":[{"start":{"line":771,"column":4},"end":{"line":773,"column":5}},{"start":{},"end":{}}],"line":771},"114":{"loc":{"start":{"line":776,"column":4},"end":{"line":778,"column":5}},"type":"if","locations":[{"start":{"line":776,"column":4},"end":{"line":778,"column":5}},{"start":{},"end":{}}],"line":776},"115":{"loc":{"start":{"line":779,"column":4},"end":{"line":791,"column":5}},"type":"if","locations":[{"start":{"line":779,"column":4},"end":{"line":791,"column":5}},{"start":{},"end":{}}],"line":779},"116":{"loc":{"start":{"line":780,"column":6},"end":{"line":782,"column":7}},"type":"if","locations":[{"start":{"line":780,"column":6},"end":{"line":782,"column":7}},{"start":{},"end":{}}],"line":780},"117":{"loc":{"start":{"line":780,"column":10},"end":{"line":780,"column":67}},"type":"binary-expr","locations":[{"start":{"line":780,"column":10},"end":{"line":780,"column":40}},{"start":{"line":780,"column":44},"end":{"line":780,"column":67}}],"line":780},"118":{"loc":{"start":{"line":783,"column":6},"end":{"line":785,"column":7}},"type":"if","locations":[{"start":{"line":783,"column":6},"end":{"line":785,"column":7}},{"start":{},"end":{}}],"line":783},"119":{"loc":{"start":{"line":783,"column":10},"end":{"line":783,"column":43}},"type":"binary-expr","locations":[{"start":{"line":783,"column":10},"end":{"line":783,"column":28}},{"start":{"line":783,"column":32},"end":{"line":783,"column":43}}],"line":783},"120":{"loc":{"start":{"line":787,"column":6},"end":{"line":789,"column":7}},"type":"if","locations":[{"start":{"line":787,"column":6},"end":{"line":789,"column":7}},{"start":{},"end":{}}],"line":787},"121":{"loc":{"start":{"line":792,"column":4},"end":{"line":794,"column":5}},"type":"if","locations":[{"start":{"line":792,"column":4},"end":{"line":794,"column":5}},{"start":{},"end":{}}],"line":792},"122":{"loc":{"start":{"line":793,"column":63},"end":{"line":793,"column":76}},"type":"cond-expr","locations":[{"start":{"line":793,"column":71},"end":{"line":793,"column":72}},{"start":{"line":793,"column":75},"end":{"line":793,"column":76}}],"line":793},"123":{"loc":{"start":{"line":799,"column":4},"end":{"line":801,"column":5}},"type":"if","locations":[{"start":{"line":799,"column":4},"end":{"line":801,"column":5}},{"start":{},"end":{}}],"line":799},"124":{"loc":{"start":{"line":803,"column":4},"end":{"line":805,"column":5}},"type":"if","locations":[{"start":{"line":803,"column":4},"end":{"line":805,"column":5}},{"start":{},"end":{}}],"line":803},"125":{"loc":{"start":{"line":810,"column":4},"end":{"line":812,"column":5}},"type":"if","locations":[{"start":{"line":810,"column":4},"end":{"line":812,"column":5}},{"start":{},"end":{}}],"line":810},"126":{"loc":{"start":{"line":810,"column":8},"end":{"line":810,"column":61}},"type":"binary-expr","locations":[{"start":{"line":810,"column":8},"end":{"line":810,"column":40}},{"start":{"line":810,"column":44},"end":{"line":810,"column":61}}],"line":810},"127":{"loc":{"start":{"line":813,"column":4},"end":{"line":815,"column":5}},"type":"if","locations":[{"start":{"line":813,"column":4},"end":{"line":815,"column":5}},{"start":{},"end":{}}],"line":813},"128":{"loc":{"start":{"line":817,"column":4},"end":{"line":819,"column":5}},"type":"if","locations":[{"start":{"line":817,"column":4},"end":{"line":819,"column":5}},{"start":{},"end":{}}],"line":817},"129":{"loc":{"start":{"line":824,"column":4},"end":{"line":826,"column":5}},"type":"if","locations":[{"start":{"line":824,"column":4},"end":{"line":826,"column":5}},{"start":{},"end":{}}],"line":824},"130":{"loc":{"start":{"line":824,"column":8},"end":{"line":824,"column":61}},"type":"binary-expr","locations":[{"start":{"line":824,"column":8},"end":{"line":824,"column":40}},{"start":{"line":824,"column":44},"end":{"line":824,"column":61}}],"line":824},"131":{"loc":{"start":{"line":827,"column":4},"end":{"line":829,"column":5}},"type":"if","locations":[{"start":{"line":827,"column":4},"end":{"line":829,"column":5}},{"start":{},"end":{}}],"line":827},"132":{"loc":{"start":{"line":831,"column":4},"end":{"line":833,"column":5}},"type":"if","locations":[{"start":{"line":831,"column":4},"end":{"line":833,"column":5}},{"start":{},"end":{}}],"line":831},"133":{"loc":{"start":{"line":838,"column":4},"end":{"line":840,"column":5}},"type":"if","locations":[{"start":{"line":838,"column":4},"end":{"line":840,"column":5}},{"start":{},"end":{}}],"line":838},"134":{"loc":{"start":{"line":842,"column":4},"end":{"line":844,"column":5}},"type":"if","locations":[{"start":{"line":842,"column":4},"end":{"line":844,"column":5}},{"start":{},"end":{}}],"line":842},"135":{"loc":{"start":{"line":849,"column":4},"end":{"line":851,"column":5}},"type":"if","locations":[{"start":{"line":849,"column":4},"end":{"line":851,"column":5}},{"start":{},"end":{}}],"line":849},"136":{"loc":{"start":{"line":853,"column":4},"end":{"line":855,"column":5}},"type":"if","locations":[{"start":{"line":853,"column":4},"end":{"line":855,"column":5}},{"start":{},"end":{}}],"line":853},"137":{"loc":{"start":{"line":859,"column":4},"end":{"line":861,"column":5}},"type":"if","locations":[{"start":{"line":859,"column":4},"end":{"line":861,"column":5}},{"start":{},"end":{}}],"line":859},"138":{"loc":{"start":{"line":864,"column":4},"end":{"line":866,"column":5}},"type":"if","locations":[{"start":{"line":864,"column":4},"end":{"line":866,"column":5}},{"start":{},"end":{}}],"line":864},"139":{"loc":{"start":{"line":867,"column":4},"end":{"line":876,"column":5}},"type":"if","locations":[{"start":{"line":867,"column":4},"end":{"line":876,"column":5}},{"start":{},"end":{}}],"line":867},"140":{"loc":{"start":{"line":868,"column":6},"end":{"line":870,"column":7}},"type":"if","locations":[{"start":{"line":868,"column":6},"end":{"line":870,"column":7}},{"start":{},"end":{}}],"line":868},"141":{"loc":{"start":{"line":868,"column":10},"end":{"line":868,"column":67}},"type":"binary-expr","locations":[{"start":{"line":868,"column":10},"end":{"line":868,"column":40}},{"start":{"line":868,"column":44},"end":{"line":868,"column":67}}],"line":868},"142":{"loc":{"start":{"line":871,"column":21},"end":{"line":871,"column":106}},"type":"cond-expr","locations":[{"start":{"line":871,"column":40},"end":{"line":871,"column":77}},{"start":{"line":871,"column":80},"end":{"line":871,"column":106}}],"line":871},"143":{"loc":{"start":{"line":872,"column":6},"end":{"line":874,"column":7}},"type":"if","locations":[{"start":{"line":872,"column":6},"end":{"line":874,"column":7}},{"start":{},"end":{}}],"line":872},"144":{"loc":{"start":{"line":877,"column":4},"end":{"line":879,"column":5}},"type":"if","locations":[{"start":{"line":877,"column":4},"end":{"line":879,"column":5}},{"start":{},"end":{}}],"line":877},"145":{"loc":{"start":{"line":878,"column":58},"end":{"line":878,"column":71}},"type":"cond-expr","locations":[{"start":{"line":878,"column":66},"end":{"line":878,"column":67}},{"start":{"line":878,"column":70},"end":{"line":878,"column":71}}],"line":878},"146":{"loc":{"start":{"line":883,"column":4},"end":{"line":885,"column":5}},"type":"if","locations":[{"start":{"line":883,"column":4},"end":{"line":885,"column":5}},{"start":{},"end":{}}],"line":883},"147":{"loc":{"start":{"line":888,"column":4},"end":{"line":890,"column":5}},"type":"if","locations":[{"start":{"line":888,"column":4},"end":{"line":890,"column":5}},{"start":{},"end":{}}],"line":888},"148":{"loc":{"start":{"line":891,"column":4},"end":{"line":900,"column":5}},"type":"if","locations":[{"start":{"line":891,"column":4},"end":{"line":900,"column":5}},{"start":{},"end":{}}],"line":891},"149":{"loc":{"start":{"line":892,"column":6},"end":{"line":894,"column":7}},"type":"if","locations":[{"start":{"line":892,"column":6},"end":{"line":894,"column":7}},{"start":{},"end":{}}],"line":892},"150":{"loc":{"start":{"line":892,"column":10},"end":{"line":892,"column":67}},"type":"binary-expr","locations":[{"start":{"line":892,"column":10},"end":{"line":892,"column":40}},{"start":{"line":892,"column":44},"end":{"line":892,"column":67}}],"line":892},"151":{"loc":{"start":{"line":895,"column":21},"end":{"line":895,"column":106}},"type":"cond-expr","locations":[{"start":{"line":895,"column":40},"end":{"line":895,"column":77}},{"start":{"line":895,"column":80},"end":{"line":895,"column":106}}],"line":895},"152":{"loc":{"start":{"line":896,"column":6},"end":{"line":898,"column":7}},"type":"if","locations":[{"start":{"line":896,"column":6},"end":{"line":898,"column":7}},{"start":{},"end":{}}],"line":896},"153":{"loc":{"start":{"line":901,"column":4},"end":{"line":903,"column":5}},"type":"if","locations":[{"start":{"line":901,"column":4},"end":{"line":903,"column":5}},{"start":{},"end":{}}],"line":901},"154":{"loc":{"start":{"line":902,"column":58},"end":{"line":902,"column":71}},"type":"cond-expr","locations":[{"start":{"line":902,"column":66},"end":{"line":902,"column":67}},{"start":{"line":902,"column":70},"end":{"line":902,"column":71}}],"line":902},"155":{"loc":{"start":{"line":907,"column":4},"end":{"line":909,"column":5}},"type":"if","locations":[{"start":{"line":907,"column":4},"end":{"line":909,"column":5}},{"start":{},"end":{}}],"line":907},"156":{"loc":{"start":{"line":912,"column":4},"end":{"line":914,"column":5}},"type":"if","locations":[{"start":{"line":912,"column":4},"end":{"line":914,"column":5}},{"start":{},"end":{}}],"line":912},"157":{"loc":{"start":{"line":915,"column":4},"end":{"line":924,"column":5}},"type":"if","locations":[{"start":{"line":915,"column":4},"end":{"line":924,"column":5}},{"start":{},"end":{}}],"line":915},"158":{"loc":{"start":{"line":916,"column":6},"end":{"line":918,"column":7}},"type":"if","locations":[{"start":{"line":916,"column":6},"end":{"line":918,"column":7}},{"start":{},"end":{}}],"line":916},"159":{"loc":{"start":{"line":916,"column":10},"end":{"line":916,"column":67}},"type":"binary-expr","locations":[{"start":{"line":916,"column":10},"end":{"line":916,"column":40}},{"start":{"line":916,"column":44},"end":{"line":916,"column":67}}],"line":916},"160":{"loc":{"start":{"line":919,"column":21},"end":{"line":919,"column":104}},"type":"cond-expr","locations":[{"start":{"line":919,"column":40},"end":{"line":919,"column":76}},{"start":{"line":919,"column":79},"end":{"line":919,"column":104}}],"line":919},"161":{"loc":{"start":{"line":920,"column":6},"end":{"line":922,"column":7}},"type":"if","locations":[{"start":{"line":920,"column":6},"end":{"line":922,"column":7}},{"start":{},"end":{}}],"line":920},"162":{"loc":{"start":{"line":925,"column":4},"end":{"line":927,"column":5}},"type":"if","locations":[{"start":{"line":925,"column":4},"end":{"line":927,"column":5}},{"start":{},"end":{}}],"line":925},"163":{"loc":{"start":{"line":926,"column":57},"end":{"line":926,"column":70}},"type":"cond-expr","locations":[{"start":{"line":926,"column":65},"end":{"line":926,"column":66}},{"start":{"line":926,"column":69},"end":{"line":926,"column":70}}],"line":926},"164":{"loc":{"start":{"line":938,"column":4},"end":{"line":957,"column":5}},"type":"switch","locations":[{"start":{"line":939,"column":6},"end":{"line":941,"column":14}},{"start":{"line":942,"column":6},"end":{"line":944,"column":14}},{"start":{"line":945,"column":6},"end":{"line":947,"column":14}},{"start":{"line":948,"column":6},"end":{"line":950,"column":14}},{"start":{"line":951,"column":6},"end":{"line":953,"column":14}},{"start":{"line":954,"column":6},"end":{"line":956,"column":14}}],"line":938},"165":{"loc":{"start":{"line":967,"column":4},"end":{"line":969,"column":5}},"type":"if","locations":[{"start":{"line":967,"column":4},"end":{"line":969,"column":5}},{"start":{},"end":{}}],"line":967},"166":{"loc":{"start":{"line":985,"column":4},"end":{"line":987,"column":5}},"type":"if","locations":[{"start":{"line":985,"column":4},"end":{"line":987,"column":5}},{"start":{},"end":{}}],"line":985},"167":{"loc":{"start":{"line":991,"column":4},"end":{"line":993,"column":5}},"type":"if","locations":[{"start":{"line":991,"column":4},"end":{"line":993,"column":5}},{"start":{},"end":{}}],"line":991},"168":{"loc":{"start":{"line":1009,"column":4},"end":{"line":1011,"column":5}},"type":"if","locations":[{"start":{"line":1009,"column":4},"end":{"line":1011,"column":5}},{"start":{},"end":{}}],"line":1009},"169":{"loc":{"start":{"line":1014,"column":29},"end":{"line":1014,"column":52}},"type":"default-arg","locations":[{"start":{"line":1014,"column":47},"end":{"line":1014,"column":52}}],"line":1014},"170":{"loc":{"start":{"line":1017,"column":4},"end":{"line":1031,"column":5}},"type":"if","locations":[{"start":{"line":1017,"column":4},"end":{"line":1031,"column":5}},{"start":{"line":1027,"column":11},"end":{"line":1031,"column":5}}],"line":1017},"171":{"loc":{"start":{"line":1019,"column":6},"end":{"line":1022,"column":7}},"type":"if","locations":[{"start":{"line":1019,"column":6},"end":{"line":1022,"column":7}},{"start":{},"end":{}}],"line":1019},"172":{"loc":{"start":{"line":1023,"column":6},"end":{"line":1025,"column":7}},"type":"if","locations":[{"start":{"line":1023,"column":6},"end":{"line":1025,"column":7}},{"start":{},"end":{}}],"line":1023},"173":{"loc":{"start":{"line":1027,"column":11},"end":{"line":1031,"column":5}},"type":"if","locations":[{"start":{"line":1027,"column":11},"end":{"line":1031,"column":5}},{"start":{"line":1029,"column":11},"end":{"line":1031,"column":5}}],"line":1027},"174":{"loc":{"start":{"line":1029,"column":11},"end":{"line":1031,"column":5}},"type":"if","locations":[{"start":{"line":1029,"column":11},"end":{"line":1031,"column":5}},{"start":{},"end":{}}],"line":1029},"175":{"loc":{"start":{"line":1035,"column":4},"end":{"line":1048,"column":5}},"type":"switch","locations":[{"start":{"line":1036,"column":6},"end":{"line":1037,"column":38}},{"start":{"line":1038,"column":6},"end":{"line":1039,"column":36}},{"start":{"line":1040,"column":6},"end":{"line":1041,"column":37}},{"start":{"line":1042,"column":6},"end":{"line":1043,"column":36}},{"start":{"line":1044,"column":6},"end":{"line":1045,"column":37}},{"start":{"line":1046,"column":6},"end":{"line":1047,"column":38}}],"line":1035},"176":{"loc":{"start":{"line":1051,"column":4},"end":{"line":1060,"column":5}},"type":"switch","locations":[{"start":{"line":1052,"column":6},"end":{"line":1052,"column":34}},{"start":{"line":1053,"column":6},"end":{"line":1053,"column":37}},{"start":{"line":1054,"column":6},"end":{"line":1055,"column":20}},{"start":{"line":1056,"column":6},"end":{"line":1056,"column":31}},{"start":{"line":1057,"column":6},"end":{"line":1057,"column":34}},{"start":{"line":1058,"column":6},"end":{"line":1059,"column":21}}],"line":1051},"177":{"loc":{"start":{"line":1063,"column":4},"end":{"line":1072,"column":5}},"type":"switch","locations":[{"start":{"line":1064,"column":6},"end":{"line":1064,"column":31}},{"start":{"line":1065,"column":6},"end":{"line":1065,"column":37}},{"start":{"line":1066,"column":6},"end":{"line":1067,"column":21}},{"start":{"line":1068,"column":6},"end":{"line":1068,"column":34}},{"start":{"line":1069,"column":6},"end":{"line":1069,"column":43}},{"start":{"line":1070,"column":6},"end":{"line":1071,"column":20}}],"line":1063},"178":{"loc":{"start":{"line":1087,"column":2},"end":{"line":1089,"column":3}},"type":"if","locations":[{"start":{"line":1087,"column":2},"end":{"line":1089,"column":3}},{"start":{},"end":{}}],"line":1087},"179":{"loc":{"start":{"line":1091,"column":2},"end":{"line":1104,"column":3}},"type":"if","locations":[{"start":{"line":1091,"column":2},"end":{"line":1104,"column":3}},{"start":{"line":1098,"column":9},"end":{"line":1104,"column":3}}],"line":1091},"180":{"loc":{"start":{"line":1093,"column":4},"end":{"line":1097,"column":5}},"type":"if","locations":[{"start":{"line":1093,"column":4},"end":{"line":1097,"column":5}},{"start":{"line":1095,"column":11},"end":{"line":1097,"column":5}}],"line":1093},"181":{"loc":{"start":{"line":1095,"column":11},"end":{"line":1097,"column":5}},"type":"if","locations":[{"start":{"line":1095,"column":11},"end":{"line":1097,"column":5}},{"start":{},"end":{}}],"line":1095},"182":{"loc":{"start":{"line":1099,"column":4},"end":{"line":1103,"column":5}},"type":"if","locations":[{"start":{"line":1099,"column":4},"end":{"line":1103,"column":5}},{"start":{"line":1101,"column":11},"end":{"line":1103,"column":5}}],"line":1099},"183":{"loc":{"start":{"line":1109,"column":2},"end":{"line":1112,"column":3}},"type":"if","locations":[{"start":{"line":1109,"column":2},"end":{"line":1112,"column":3}},{"start":{},"end":{}}],"line":1109},"184":{"loc":{"start":{"line":1109,"column":6},"end":{"line":1109,"column":71}},"type":"binary-expr","locations":[{"start":{"line":1109,"column":6},"end":{"line":1109,"column":29}},{"start":{"line":1109,"column":33},"end":{"line":1109,"column":71}}],"line":1109},"185":{"loc":{"start":{"line":1115,"column":60},"end":{"line":1115,"column":72}},"type":"default-arg","locations":[{"start":{"line":1115,"column":70},"end":{"line":1115,"column":72}}],"line":1115},"186":{"loc":{"start":{"line":1116,"column":2},"end":{"line":1129,"column":3}},"type":"if","locations":[{"start":{"line":1116,"column":2},"end":{"line":1129,"column":3}},{"start":{"line":1122,"column":9},"end":{"line":1129,"column":3}}],"line":1116},"187":{"loc":{"start":{"line":1118,"column":4},"end":{"line":1120,"column":5}},"type":"if","locations":[{"start":{"line":1118,"column":4},"end":{"line":1120,"column":5}},{"start":{},"end":{}}],"line":1118},"188":{"loc":{"start":{"line":1122,"column":9},"end":{"line":1129,"column":3}},"type":"if","locations":[{"start":{"line":1122,"column":9},"end":{"line":1129,"column":3}},{"start":{"line":1127,"column":9},"end":{"line":1129,"column":3}}],"line":1122},"189":{"loc":{"start":{"line":1123,"column":4},"end":{"line":1125,"column":5}},"type":"if","locations":[{"start":{"line":1123,"column":4},"end":{"line":1125,"column":5}},{"start":{},"end":{}}],"line":1123},"190":{"loc":{"start":{"line":1127,"column":9},"end":{"line":1129,"column":3}},"type":"if","locations":[{"start":{"line":1127,"column":9},"end":{"line":1129,"column":3}},{"start":{},"end":{}}],"line":1127}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":2,"54":9,"55":7,"56":7,"57":2,"58":2,"59":2,"60":2,"61":13,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":308,"125":308,"126":308,"127":0,"128":308,"129":308,"130":308,"131":317,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":1,"515":1,"516":2,"517":2,"518":1,"519":1,"520":1,"521":1,"522":1,"523":1,"524":1,"525":2,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":1,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":2,"586":2,"587":0,"588":0,"589":2,"590":306,"591":0,"592":0,"593":0,"594":0,"595":306,"596":305,"597":0,"598":305,"599":1,"600":0,"601":1},"f":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":9,"41":2,"42":13,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":308,"83":308,"84":317,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":2,"134":1,"135":1,"136":2,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":1,"149":0,"150":0,"151":0,"152":2,"153":306},"b":{"0":[1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[7,2],"8":[7,1],"9":[2,1],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0,0,0],"19":[0,0],"20":[3],"21":[0,308],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0,0,0,0,0],"72":[0,0],"73":[0,0],"74":[0,0,0,0,0,0],"75":[0,0,0,0,0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0,0,0,0,0],"165":[1,1],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0,0,0,0,0],"176":[0,0,0,0,0,0],"177":[0,0,0,0,0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,2],"184":[2,0],"185":[306],"186":[0,306],"187":[0,0],"188":[305,1],"189":[0,305],"190":[0,1]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/primitive-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isRealNum } from '@univerjs/core';\nimport { FormulaAstLRU } from '../../basics/cache-lru';\nimport { reverseCompareOperator } from '../../basics/calculate';\nimport { BooleanValue, ConcatenateType } from '../../basics/common';\nimport { ErrorType } from '../../basics/error-type';\nimport { compareToken, operatorToken } from '../../basics/token';\nimport { compareWithWildcard, isWildcard } from '../utils/compare';\nimport { ceil, divide, equals, floor, greaterThan, greaterThanOrEquals, lessThan, lessThanOrEquals, minus, mod, multiply, plus, pow, round, sqrt } from '../utils/math-kit';\nimport { comparePatternPriority } from '../utils/numfmt-kit';\nimport { BaseValueObject, ErrorValueObject } from './base-value-object';\n\nexport type PrimitiveValueType = string | boolean | number | null;\n\nexport type FormulaFunctionValueType = PrimitiveValueType | PrimitiveValueType[][] | BaseValueObject;\nexport type FormulaFunctionResultValueType = PrimitiveValueType | PrimitiveValueType[][];\n\nexport class NullValueObject extends BaseValueObject {\n    private static _instance: NullValueObject;\n\n    static create() {\n        this._instance = this._instance || new NullValueObject(0);\n        return this._instance;\n    }\n\n    override isNull(): boolean {\n        return true;\n    }\n\n    override plus(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).plus(valueObject);\n    }\n\n    override minus(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).minus(valueObject);\n    }\n\n    override multiply(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).multiply(valueObject);\n    }\n\n    override divided(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).divided(valueObject);\n    }\n\n    override mod(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).mod(valueObject);\n    }\n\n    override compare(valueObject: BaseValueObject, operator: compareToken): BaseValueObject {\n        if (valueObject.isString()) {\n            return StringValueObject.create('').compare(valueObject, operator);\n        }\n        if (valueObject.isBoolean()) {\n            return BooleanValueObject.create(false).compare(valueObject, operator);\n        }\n        return NumberValueObject.create(0).compare(valueObject, operator);\n    }\n\n    override concatenateFront(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.concatenateBack(StringValueObject.create(''));\n        }\n        return StringValueObject.create(this.concatenate(valueObject.getValue(), ConcatenateType.FRONT));\n    }\n\n    override concatenateBack(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.concatenateFront(StringValueObject.create(''));\n        }\n        return StringValueObject.create(this.concatenate(valueObject.getValue(), ConcatenateType.BACK));\n    }\n\n    override plusBy(value: string | number | boolean): BaseValueObject {\n        return NumberValueObject.create(0).plusBy(value);\n    }\n\n    override minusBy(value: string | number | boolean): BaseValueObject {\n        return NumberValueObject.create(0).minusBy(value);\n    }\n\n    override multiplyBy(value: string | number | boolean): BaseValueObject {\n        return NumberValueObject.create(0).multiplyBy(value);\n    }\n\n    override dividedBy(value: string | number | boolean): BaseValueObject {\n        return NumberValueObject.create(0).dividedBy(value);\n    }\n\n    override compareBy(value: string | number | boolean, operator: compareToken): BaseValueObject {\n        if (typeof value === 'string') {\n            return StringValueObject.create('').compareBy(value, operator);\n        }\n        if (typeof value === 'boolean') {\n            return BooleanValueObject.create(false).compareBy(value, operator);\n        }\n        return NumberValueObject.create(0).compareBy(value, operator);\n    }\n\n    override pow(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).pow(valueObject);\n    }\n\n    override sqrt(): BaseValueObject {\n        return NumberValueObject.create(0).sqrt();\n    }\n\n    override cbrt(): BaseValueObject {\n        return NumberValueObject.create(0).cbrt();\n    }\n\n    override cos(): BaseValueObject {\n        return NumberValueObject.create(0).cos();\n    }\n\n    override cosh(): BaseValueObject {\n        return NumberValueObject.create(0).cosh();\n    }\n\n    override acos(): BaseValueObject {\n        return NumberValueObject.create(0).acos();\n    }\n\n    override acosh(): BaseValueObject {\n        return NumberValueObject.create(0).acosh();\n    }\n\n    override sin(): BaseValueObject {\n        return NumberValueObject.create(0).sin();\n    }\n\n    override sinh(): BaseValueObject {\n        return NumberValueObject.create(0).sinh();\n    }\n\n    override asin(): BaseValueObject {\n        return NumberValueObject.create(0).asin();\n    }\n\n    override asinh(): BaseValueObject {\n        return NumberValueObject.create(0).asinh();\n    }\n\n    override tan(): BaseValueObject {\n        return NumberValueObject.create(0).tan();\n    }\n\n    override tanh(): BaseValueObject {\n        return NumberValueObject.create(0).tanh();\n    }\n\n    override atan(): BaseValueObject {\n        return NumberValueObject.create(0).atan();\n    }\n\n    override atan2(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).atan2(valueObject);\n    }\n\n    override atanh(): BaseValueObject {\n        return NumberValueObject.create(0).atanh();\n    }\n\n    override log(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.NUM);\n    }\n\n    override log10(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.NUM);\n    }\n\n    override exp(): BaseValueObject {\n        return NumberValueObject.create(0).exp();\n    }\n\n    override abs(): BaseValueObject {\n        return NumberValueObject.create(0).abs();\n    }\n\n    override round(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).round(valueObject);\n    }\n\n    override floor(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).floor(valueObject);\n    }\n\n    override ceil(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).ceil(valueObject);\n    }\n\n    override convertToNumberObjectValue() {\n        return NumberValueObject.create(0);\n    }\n\n    override convertToBooleanObjectValue() {\n        return BooleanValueObject.create(false);\n    }\n}\n\nexport class BooleanValueObject extends BaseValueObject {\n    private _value: boolean = false;\n\n    private static _instanceTrue: BooleanValueObject;\n\n    private static _instanceFalse: BooleanValueObject;\n\n    static create(value: boolean) {\n        if (value) {\n            this._instanceTrue = this._instanceTrue || new BooleanValueObject(true);\n            return this._instanceTrue;\n        }\n        this._instanceFalse = this._instanceFalse || new BooleanValueObject(false);\n        return this._instanceFalse;\n    }\n\n    constructor(rawValue: boolean) {\n        super(rawValue);\n\n        this._value = rawValue;\n    }\n\n    override getValue() {\n        return this._value;\n    }\n\n    override isBoolean() {\n        return true;\n    }\n\n    override getNegative(): BaseValueObject {\n        const currentValue = this.getValue();\n        let result = 0;\n        if (currentValue) {\n            result = 1;\n        }\n        return NumberValueObject.create(-result);\n    }\n\n    override getReciprocal(): BaseValueObject {\n        const currentValue = this.getValue();\n        if (currentValue) {\n            return NumberValueObject.create(1);\n        }\n        return ErrorValueObject.create(ErrorType.DIV_BY_ZERO);\n    }\n\n    override plus(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().plus(valueObject);\n    }\n\n    override minus(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().minus(valueObject);\n    }\n\n    override multiply(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().multiply(valueObject);\n    }\n\n    override divided(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().divided(valueObject);\n    }\n\n    override mod(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().mod(valueObject);\n    }\n\n    override compare(valueObject: BaseValueObject, operator: compareToken): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.compare(this, reverseCompareOperator(operator));\n        }\n\n        if (valueObject.isNull()) {\n            return this._convertToNumber().compare(valueObject, operator);\n        }\n        return this.compareBy(valueObject.getValue(), operator);\n    }\n\n    override compareBy(value: string | number | boolean, operator: compareToken): BaseValueObject {\n        let result = false;\n        // FALSE > 0 and FALSE > \"Univer\" get TRUE\n        if (typeof value === 'string' || typeof value === 'number') {\n            result = this._compareString(operator);\n        } else if (typeof value === 'boolean') {\n            const booleanNumber = NumberValueObject.create(value ? 1 : 0);\n            return this._convertToNumber().compare(booleanNumber, operator);\n        }\n\n        return BooleanValueObject.create(result);\n    }\n\n    private _compareString(operator: compareToken): boolean {\n        switch (operator) {\n            case compareToken.GREATER_THAN:\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                return true;\n            case compareToken.EQUALS:\n            case compareToken.LESS_THAN:\n            case compareToken.LESS_THAN_OR_EQUAL:\n            case compareToken.NOT_EQUAL:\n                return false;\n        }\n    }\n\n    override concatenateFront(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().concatenateFront(valueObject);\n    }\n\n    override concatenateBack(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().concatenateBack(valueObject);\n    }\n\n    private _convertToNumber() {\n        const currentValue = this.getValue();\n        let result = 0;\n        if (currentValue) {\n            result = 1;\n        }\n        return NumberValueObject.create(result);\n    }\n\n    override pow(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().pow(valueObject);\n    }\n\n    override sqrt(): BaseValueObject {\n        return this._convertToNumber().sqrt();\n    }\n\n    override cbrt(): BaseValueObject {\n        return this._convertToNumber().cbrt();\n    }\n\n    override cos(): BaseValueObject {\n        return this._convertToNumber().cos();\n    }\n\n    override cosh(): BaseValueObject {\n        return this._convertToNumber().cosh();\n    }\n\n    override acos(): BaseValueObject {\n        return this._convertToNumber().acos();\n    }\n\n    override acosh(): BaseValueObject {\n        return this._convertToNumber().acosh();\n    }\n\n    override sin(): BaseValueObject {\n        return this._convertToNumber().sin();\n    }\n\n    override sinh(): BaseValueObject {\n        return this._convertToNumber().sinh();\n    }\n\n    override asin(): BaseValueObject {\n        return this._convertToNumber().asin();\n    }\n\n    override asinh(): BaseValueObject {\n        return this._convertToNumber().asinh();\n    }\n\n    override tan(): BaseValueObject {\n        return this._convertToNumber().tan();\n    }\n\n    override tanh(): BaseValueObject {\n        return this._convertToNumber().tanh();\n    }\n\n    override atan(): BaseValueObject {\n        return this._convertToNumber().atan();\n    }\n\n    override atan2(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().atan2(valueObject);\n    }\n\n    override atanh(): BaseValueObject {\n        return this._convertToNumber().atanh();\n    }\n\n    override log(): BaseValueObject {\n        return this._convertToNumber().log();\n    }\n\n    override log10(): BaseValueObject {\n        return this._convertToNumber().log10();\n    }\n\n    override exp(): BaseValueObject {\n        return this._convertToNumber().exp();\n    }\n\n    override abs(): BaseValueObject {\n        return this._convertToNumber().abs();\n    }\n\n    override round(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().round(valueObject);\n    }\n\n    override floor(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().floor(valueObject);\n    }\n\n    override ceil(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().ceil(valueObject);\n    }\n\n    override convertToNumberObjectValue() {\n        return createNumberValueObjectByRawValue(this.getValue());\n    }\n\n    override convertToBooleanObjectValue() {\n        return this;\n    }\n}\n\nexport class NumberValueObject extends BaseValueObject {\n    private _value: number = 0;\n\n    static create(value: number, pattern: string = '') {\n        const instance = new NumberValueObject(value);\n        if (pattern) {\n            instance.setPattern(pattern);\n        }\n\n        return instance;\n    }\n\n    constructor(rawValue: number) {\n        super(rawValue);\n\n        this._value = Number(rawValue);\n    }\n\n    override getValue() {\n        return this._value;\n    }\n\n    override setValue(value: number) {\n        this._value = value;\n    }\n\n    override isNumber() {\n        return true;\n    }\n\n    override getNegative(): BaseValueObject {\n        return NumberValueObject.create(0).minus(this);\n    }\n\n    override getReciprocal(): BaseValueObject {\n        return NumberValueObject.create(1).divided(this);\n    }\n\n    override plus(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.plus(this);\n        }\n\n        let object = this.plusBy(valueObject.getValue());\n\n        // = 1 + #NAME? gets #NAME?, = 1 + #VALUE! gets #VALUE!\n        if (object.isError()) {\n            return object;\n        }\n\n        // Set number format\n        const pattern = comparePatternPriority(this.getPattern(), valueObject.getPattern(), operatorToken.PLUS);\n        object = NumberValueObject.create(Number(object.getValue()), pattern);\n\n        return object;\n    }\n\n    equalZero() {\n        return this._value === 0;\n    }\n\n    override minus(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            const o = valueObject.getNegative();\n            if (o.isError()) {\n                return o;\n            }\n            return (o as BaseValueObject).plus(this);\n        }\n        let object = this.minusBy(valueObject.getValue());\n\n        // = 1 - #NAME? gets #NAME?, = 1 - #VALUE! gets #VALUE!\n        if (object.isError()) {\n            return object;\n        }\n\n        // Set number format\n        const pattern = comparePatternPriority(this.getPattern(), valueObject.getPattern(), operatorToken.MINUS);\n        object = NumberValueObject.create(Number(object.getValue()), pattern);\n\n        return object;\n    }\n\n    override multiply(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.multiply(this);\n        }\n        let object = this.multiplyBy(valueObject.getValue());\n\n        // = 1 * #NAME? gets #NAME?, = 1 * #VALUE! gets #VALUE!\n        if (object.isError()) {\n            return object;\n        }\n\n        // Set number format\n        const pattern = comparePatternPriority(this.getPattern(), valueObject.getPattern(), operatorToken.MULTIPLY);\n        object = NumberValueObject.create(Number(object.getValue()), pattern);\n\n        return object;\n    }\n\n    override divided(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            const o = valueObject.getReciprocal();\n            if (o.isError()) {\n                return o;\n            }\n            return (o as BaseValueObject).multiply(this);\n        }\n        let object = this.dividedBy(valueObject.getValue());\n\n        // = 1 / #NAME? gets #NAME?, = 1 / #VALUE! gets #VALUE!\n        if (object.isError()) {\n            return object;\n        }\n\n        // Set number format\n        const pattern = comparePatternPriority(this.getPattern(), valueObject.getPattern(), operatorToken.DIVIDED);\n        object = NumberValueObject.create(Number(object.getValue()), pattern);\n\n        return object;\n    }\n\n    override mod(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.modInverse(this);\n        }\n\n        const currentValue = this.getValue();\n        const value = valueObject.getValue();\n\n        if (valueObject.isNull()) {\n            return ErrorValueObject.create(ErrorType.DIV_BY_ZERO);\n        }\n\n        if (typeof value === 'string') {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n        if (typeof value === 'number') {\n            if (value === 0) {\n                return ErrorValueObject.create(ErrorType.DIV_BY_ZERO);\n            }\n\n            if (!Number.isFinite(currentValue) || !Number.isFinite(value)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            // Parameters in MOD caused an out of range error. Namely, the error occurs when the following is true: (divisor * 1125900000000) is less than or equal to dividend.\n            if (Math.abs(value) * 1125900000000 <= Math.abs(currentValue)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            const result = mod(currentValue, value);\n\n            if (!Number.isFinite(result)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            return NumberValueObject.create(result);\n        }\n        if (typeof value === 'boolean') {\n            const booleanValue = value ? 1 : 0;\n\n            if (booleanValue === 0) {\n                return ErrorValueObject.create(ErrorType.DIV_BY_ZERO);\n            }\n\n            return NumberValueObject.create(mod(currentValue, booleanValue));\n        }\n\n        return this;\n    }\n\n    override concatenateFront(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.concatenateBack(this);\n        }\n        return StringValueObject.create(this.concatenate(valueObject.getValue(), ConcatenateType.FRONT));\n    }\n\n    override concatenateBack(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.concatenateFront(this);\n        }\n        return StringValueObject.create(this.concatenate(valueObject.getValue(), ConcatenateType.BACK));\n    }\n\n    override compare(valueObject: BaseValueObject, operator: compareToken): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.compare(this, reverseCompareOperator(operator));\n        }\n        return this.compareBy(valueObject.getValue(), operator);\n    }\n\n    override plusBy(value: string | number | boolean): BaseValueObject {\n        const currentValue = +this.getValue();\n        const _value = +value;\n\n        if (Number.isNaN(currentValue) || Number.isNaN(_value)) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        if (!Number.isFinite(currentValue) || !Number.isFinite(_value)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = plus(currentValue, _value);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override minusBy(value: string | number | boolean): BaseValueObject {\n        const currentValue = +this.getValue();\n        const _value = +value;\n\n        if (Number.isNaN(currentValue) || Number.isNaN(_value)) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        if (!Number.isFinite(currentValue) || !Number.isFinite(_value)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = minus(currentValue, _value);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override multiplyBy(value: string | number | boolean): BaseValueObject {\n        const currentValue = +this.getValue();\n        const _value = +value;\n\n        if (Number.isNaN(currentValue) || Number.isNaN(_value)) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        if (!Number.isFinite(currentValue) || !Number.isFinite(_value)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = multiply(currentValue, _value);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override dividedBy(value: string | number | boolean): BaseValueObject {\n        const currentValue = +this.getValue();\n        const _value = +value;\n\n        if (Number.isNaN(currentValue) || Number.isNaN(_value)) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        if (!Number.isFinite(currentValue) || !Number.isFinite(_value)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        if (_value === 0) {\n            return ErrorValueObject.create(ErrorType.DIV_BY_ZERO);\n        }\n\n        const result = divide(currentValue, _value);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override compareBy(value: string | number | boolean, operator: compareToken): BaseValueObject {\n        const currentValue = this.getValue();\n        let result = false;\n\n        if (typeof value === 'string') {\n            result = this._compareString(operator);\n        } else if (typeof value === 'number') {\n            result = this._compareNumber(currentValue, value, operator);\n        } else if (typeof value === 'boolean') {\n            result = this._compareBoolean(operator);\n        }\n\n        return BooleanValueObject.create(result);\n    }\n\n    private _compareString(operator: compareToken): boolean {\n        switch (operator) {\n            case compareToken.EQUALS:\n            case compareToken.GREATER_THAN:\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                return false;\n            case compareToken.LESS_THAN:\n            case compareToken.LESS_THAN_OR_EQUAL:\n            case compareToken.NOT_EQUAL:\n                return true;\n        }\n    }\n\n    private _compareNumber(currentValue: number, value: number, operator: compareToken): boolean {\n        if (!Number.isFinite(currentValue) || !Number.isFinite(value)) {\n            return this._compareInfinity(currentValue, value, operator);\n        } else {\n            return this._compareFiniteNumber(currentValue, value, operator);\n        }\n    }\n\n    private _compareFiniteNumber(currentValue: number, value: number, operator: compareToken): boolean {\n        switch (operator) {\n            case compareToken.EQUALS:\n                return equals(currentValue, value);\n            case compareToken.GREATER_THAN:\n                return greaterThan(currentValue, value);\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                return greaterThanOrEquals(currentValue, value);\n            case compareToken.LESS_THAN:\n                return lessThan(currentValue, value);\n            case compareToken.LESS_THAN_OR_EQUAL:\n                return lessThanOrEquals(currentValue, value);\n            case compareToken.NOT_EQUAL:\n                return !equals(currentValue, value);\n        }\n    }\n\n    private _compareBoolean(operator: compareToken): boolean {\n        switch (operator) {\n            case compareToken.EQUALS:\n            case compareToken.GREATER_THAN:\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                return false;\n            case compareToken.LESS_THAN:\n            case compareToken.LESS_THAN_OR_EQUAL:\n            case compareToken.NOT_EQUAL:\n                return true;\n        }\n    }\n\n    override pow(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.powInverse(this);\n        }\n\n        if (this.isError()) {\n            return this;\n        }\n\n        const currentValue = this.getValue();\n\n        let _valueObject = valueObject;\n\n        if (valueObject.isString()) {\n            _valueObject = valueObject.convertToNumberObjectValue();\n        }\n\n        if (_valueObject.isError()) {\n            return _valueObject;\n        }\n\n        const value = +_valueObject.getValue();\n\n        if (Number.isNaN(value)) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        if (!Number.isFinite(currentValue) || !Number.isFinite(value)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        if (currentValue === 0) {\n            if (value < 0) {\n                return ErrorValueObject.create(ErrorType.DIV_BY_ZERO);\n            }\n\n            if (value === 0) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            return NumberValueObject.create(0);\n        }\n\n        const result = pow(currentValue, value);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override sqrt(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = sqrt(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override cbrt(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.cbrt(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override cos(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.cos(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override cosh(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.cosh(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override acos(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.acos(currentValue);\n\n        if (Number.isNaN(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override acosh(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.acosh(currentValue);\n\n        if (Number.isNaN(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override sin(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.sin(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override sinh(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.sinh(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override asin(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.asin(currentValue);\n\n        if (Number.isNaN(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override asinh(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.asinh(currentValue);\n\n        if (Number.isNaN(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override tan(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.tan(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override tanh(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.tanh(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override atan(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.atan(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override atan2(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.atan2Inverse(this);\n        }\n\n        const currentValue = this.getValue();\n        const value = valueObject.getValue();\n\n        if (typeof value === 'string') {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n        if (typeof value === 'number') {\n            if (!Number.isFinite(currentValue) || !Number.isFinite(value)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            // ATAN2(y, x) calculates the angle of the point (x, y) relative to the positive x-axis. When x and y are both 0, the point is actually the origin itself, and there is no concept of the angle \"starting from\" the origin to the origin.\n            if (currentValue === 0 && value === 0) {\n                return ErrorValueObject.create(ErrorType.DIV_BY_ZERO);\n            }\n\n            const result = Math.atan2(currentValue, value);\n\n            if (!Number.isFinite(result)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            return NumberValueObject.create(result);\n        }\n        if (typeof value === 'boolean') {\n            return NumberValueObject.create(Math.atan2(currentValue, value ? 1 : 0));\n        }\n\n        return this;\n    }\n\n    override atanh(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.atanh(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override log(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (typeof currentValue === 'number' && currentValue <= 0) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.log(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override log10(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (typeof currentValue === 'number' && currentValue <= 0) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.log10(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override exp(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.exp(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override abs(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.abs(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override round(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.roundInverse(this);\n        }\n\n        const currentValue = this.getValue();\n        const value = valueObject.getValue();\n\n        if (typeof value === 'string') {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n        if (typeof value === 'number') {\n            if (!Number.isFinite(currentValue) || !Number.isFinite(value)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            // for excel negative special handle\n            const result = currentValue < 0 ? -round(Math.abs(currentValue), value) : round(currentValue, value);\n\n            if (!Number.isFinite(result)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            return NumberValueObject.create(result);\n        }\n        if (typeof value === 'boolean') {\n            return NumberValueObject.create(round(currentValue, value ? 1 : 0));\n        }\n\n        return this;\n    }\n\n    override floor(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.floorInverse(this);\n        }\n\n        const currentValue = this.getValue();\n        const value = valueObject.getValue();\n\n        if (typeof value === 'string') {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n        if (typeof value === 'number') {\n            if (!Number.isFinite(currentValue) || !Number.isFinite(value)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            // for excel negative special handle\n            const result = currentValue < 0 ? -floor(Math.abs(currentValue), value) : floor(currentValue, value);\n\n            if (!Number.isFinite(result)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            return NumberValueObject.create(result);\n        }\n        if (typeof value === 'boolean') {\n            return NumberValueObject.create(floor(currentValue, value ? 1 : 0));\n        }\n\n        return this;\n    }\n\n    override ceil(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.ceilInverse(this);\n        }\n\n        const currentValue = this.getValue();\n        const value = valueObject.getValue();\n\n        if (typeof value === 'string') {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n        if (typeof value === 'number') {\n            if (!Number.isFinite(currentValue) || !Number.isFinite(value)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            // for excel negative special handle\n            const result = currentValue < 0 ? -ceil(Math.abs(currentValue), value) : ceil(currentValue, value);\n\n            if (!Number.isFinite(result)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            return NumberValueObject.create(result);\n        }\n        if (typeof value === 'boolean') {\n            return NumberValueObject.create(ceil(currentValue, value ? 1 : 0));\n        }\n\n        return this;\n    }\n\n    override convertToNumberObjectValue() {\n        return this;\n    }\n\n    override convertToBooleanObjectValue() {\n        return createBooleanValueObjectByRawValue(true);\n    }\n\n    private _compareInfinity(currentValue: number, value: number, operator: compareToken) {\n        let result = false;\n        switch (operator) {\n            case compareToken.EQUALS:\n                result = currentValue === value;\n                break;\n            case compareToken.GREATER_THAN:\n                result = currentValue > value;\n                break;\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                result = currentValue >= value;\n                break;\n            case compareToken.LESS_THAN:\n                result = currentValue < value;\n                break;\n            case compareToken.LESS_THAN_OR_EQUAL:\n                result = currentValue <= value;\n                break;\n            case compareToken.NOT_EQUAL:\n                result = currentValue !== value;\n                break;\n        }\n\n        return result;\n    }\n}\n\nconst STRING_CACHE_LRU_COUNT = 100000;\n\nexport const StringValueObjectCache = new FormulaAstLRU<StringValueObject>(STRING_CACHE_LRU_COUNT);\nexport class StringValueObject extends BaseValueObject {\n    private _value: string;\n\n    static create(value: string) {\n        const cached = StringValueObjectCache.get(value);\n        if (cached) {\n            return cached;\n        }\n        const instance = new StringValueObject(value);\n        StringValueObjectCache.set(value, instance);\n        return instance;\n    }\n\n    constructor(rawValue: string) {\n        super(rawValue);\n        this._value = rawValue;\n    }\n\n    override getValue() {\n        return this._value;\n    }\n\n    override isString() {\n        return true;\n    }\n\n    override concatenateFront(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.concatenateBack(this);\n        }\n        return StringValueObject.create(this.concatenate(valueObject.getValue(), ConcatenateType.FRONT));\n    }\n\n    override concatenateBack(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.concatenateFront(this);\n        }\n        return StringValueObject.create(this.concatenate(valueObject.getValue(), ConcatenateType.BACK));\n    }\n\n    override plus(valueObject: BaseValueObject): BaseValueObject {\n        return this.convertToNumberObjectValue().plus(valueObject);\n    }\n\n    override minus(valueObject: BaseValueObject): BaseValueObject {\n        return this.convertToNumberObjectValue().minus(valueObject);\n    }\n\n    override multiply(valueObject: BaseValueObject): BaseValueObject {\n        return this.convertToNumberObjectValue().multiply(valueObject);\n    }\n\n    override divided(valueObject: BaseValueObject): BaseValueObject {\n        return this.convertToNumberObjectValue().divided(valueObject);\n    }\n\n    override compare(valueObject: BaseValueObject, operator: compareToken, isCaseSensitive?: boolean): BaseValueObject {\n        if (valueObject.isArray()) {\n            // const o = valueObject.getReciprocal();\n            // if (o.isError()) {\n            //     return o;\n            // }\n            return valueObject.compare(this, reverseCompareOperator(operator), isCaseSensitive);\n        }\n        return this.compareBy(valueObject.getValue(), operator, isCaseSensitive);\n    }\n\n    override compareBy(value: string | number | boolean, operator: compareToken, isCaseSensitive: boolean = false): BaseValueObject {\n        let currentValue = this.getValue();\n        let result = false;\n\n        if (typeof value === 'string') {\n            // Case sensitivity needs to be considered, most functions are case-insensitive, like VLOOKUP/HLOOKUP/XLOOKUP/MATCH/COUNTIF/COUNTIFS/SUMIF/SUMIFS/SEARCH/FIND(in SUBSTITUTE)\n            // A few functions are case-sensitive, like EXACT/FIND/FINDB/REPLACE/REPLACEB/MIDB\n            let _value = value;\n\n            if (!isCaseSensitive) {\n                currentValue = currentValue.toLocaleLowerCase();\n                _value = _value.toLocaleLowerCase();\n            }\n\n            if (isWildcard(_value)) {\n                return this._checkWildcard(_value, operator);\n            }\n\n            result = this._compareString(currentValue, _value, operator);\n        } else if (typeof value === 'number') {\n            result = this._compareNumber(operator);\n        } else if (typeof value === 'boolean') {\n            result = this._compareBoolean(operator);\n        }\n\n        return BooleanValueObject.create(result);\n    }\n\n    private _compareString(currentValue: string, value: string, operator: compareToken): boolean {\n        switch (operator) {\n            case compareToken.EQUALS:\n                return currentValue === value;\n            case compareToken.GREATER_THAN:\n                return currentValue > value;\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                return currentValue >= value;\n            case compareToken.LESS_THAN:\n                return currentValue < value;\n            case compareToken.LESS_THAN_OR_EQUAL:\n                return currentValue <= value;\n            case compareToken.NOT_EQUAL:\n                return currentValue !== value;\n        }\n    }\n\n    private _compareNumber(operator: compareToken): boolean {\n        switch (operator) {\n            case compareToken.NOT_EQUAL:\n            case compareToken.GREATER_THAN:\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                return true;\n            case compareToken.EQUALS:\n            case compareToken.LESS_THAN:\n            case compareToken.LESS_THAN_OR_EQUAL:\n                return false;\n        }\n    }\n\n    private _compareBoolean(operator: compareToken): boolean {\n        switch (operator) {\n            case compareToken.EQUALS:\n            case compareToken.GREATER_THAN:\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                return false;\n            case compareToken.LESS_THAN:\n            case compareToken.LESS_THAN_OR_EQUAL:\n            case compareToken.NOT_EQUAL:\n                return true;\n        }\n    }\n\n    override convertToNumberObjectValue() {\n        return createNumberValueObjectByRawValue(this.getValue());\n    }\n\n    override convertToBooleanObjectValue() {\n        return BooleanValueObject.create(true);\n    }\n\n    private _checkWildcard(value: string, operator: compareToken) {\n        const currentValue = this.getValue().toLocaleLowerCase();\n        const result = compareWithWildcard(currentValue, value, operator);\n\n        return BooleanValueObject.create(result);\n    }\n}\n\nexport function createBooleanValueObjectByRawValue(rawValue: string | number | boolean) {\n    if (typeof rawValue === 'boolean') {\n        return BooleanValueObject.create(rawValue);\n    }\n    let value = false;\n    if (typeof rawValue === 'string') {\n        const rawValueUpper = rawValue.toLocaleUpperCase();\n        if (rawValueUpper === BooleanValue.TRUE) {\n            value = true;\n        } else if (rawValueUpper === BooleanValue.FALSE) {\n            value = false;\n        }\n    } else {\n        if (rawValue === 1) {\n            value = true;\n        } else {\n            value = false;\n        }\n    }\n    return BooleanValueObject.create(value);\n}\n\nexport function createStringValueObjectByRawValue(rawValue: string | number | boolean) {\n    let value = rawValue.toString();\n\n    if (value.charAt(0) === '\"' && value.charAt(value.length - 1) === '\"') {\n        value = value.slice(1, -1);\n        value = value.replace(/\"\"/g, '\"');\n    }\n\n    return StringValueObject.create(value);\n}\n\nexport function createNumberValueObjectByRawValue(rawValue: string | number | boolean, pattern: string = '') {\n    if (typeof rawValue === 'boolean') {\n        let result = 0;\n        if (rawValue) {\n            result = 1;\n        }\n        return NumberValueObject.create(result, pattern);\n    } else if (typeof rawValue === 'number') {\n        if (!Number.isFinite(rawValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n        return NumberValueObject.create(rawValue, pattern);\n    } else if (isRealNum(rawValue)) {\n        return NumberValueObject.create(Number(rawValue), pattern);\n    }\n    return ErrorValueObject.create(ErrorType.VALUE);\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f8368968207c0b7c6d5bfb642a584cf28d05aec3"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/array-value-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/array-value-object.ts","statementMap":{"0":{"start":{"line":11,"column":40},"end":{"line":26,"column":27}},"1":{"start":{"line":12,"column":2},"end":{"line":12,"column":64}},"2":{"start":{"line":13,"column":2},"end":{"line":13,"column":62}},"3":{"start":{"line":14,"column":2},"end":{"line":14,"column":70}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":68}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":60}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":68}},"7":{"start":{"line":18,"column":2},"end":{"line":18,"column":88}},"8":{"start":{"line":19,"column":2},"end":{"line":19,"column":86}},"9":{"start":{"line":20,"column":2},"end":{"line":20,"column":60}},"10":{"start":{"line":21,"column":2},"end":{"line":21,"column":64}},"11":{"start":{"line":22,"column":2},"end":{"line":22,"column":65}},"12":{"start":{"line":23,"column":2},"end":{"line":23,"column":63}},"13":{"start":{"line":24,"column":2},"end":{"line":24,"column":65}},"14":{"start":{"line":25,"column":2},"end":{"line":25,"column":28}},"15":{"start":{"line":27,"column":41},"end":{"line":33,"column":28}},"16":{"start":{"line":28,"column":2},"end":{"line":28,"column":70}},"17":{"start":{"line":29,"column":2},"end":{"line":29,"column":62}},"18":{"start":{"line":30,"column":2},"end":{"line":30,"column":68}},"19":{"start":{"line":31,"column":2},"end":{"line":31,"column":68}},"20":{"start":{"line":32,"column":2},"end":{"line":32,"column":29}},"21":{"start":{"line":35,"column":2},"end":{"line":35,"column":12}},"22":{"start":{"line":38,"column":25},"end":{"line":38,"column":27}},"23":{"start":{"line":39,"column":2},"end":{"line":48,"column":3}},"24":{"start":{"line":39,"column":15},"end":{"line":39,"column":16}},"25":{"start":{"line":40,"column":16},"end":{"line":40,"column":24}},"26":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"27":{"start":{"line":42,"column":6},"end":{"line":42,"column":29}},"28":{"start":{"line":44,"column":4},"end":{"line":47,"column":5}},"29":{"start":{"line":44,"column":17},"end":{"line":44,"column":18}},"30":{"start":{"line":45,"column":19},"end":{"line":45,"column":25}},"31":{"start":{"line":46,"column":6},"end":{"line":46,"column":61}},"32":{"start":{"line":49,"column":2},"end":{"line":49,"column":24}},"33":{"start":{"line":52,"column":25},"end":{"line":52,"column":27}},"34":{"start":{"line":53,"column":2},"end":{"line":68,"column":3}},"35":{"start":{"line":53,"column":15},"end":{"line":53,"column":16}},"36":{"start":{"line":54,"column":16},"end":{"line":54,"column":24}},"37":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"38":{"start":{"line":56,"column":6},"end":{"line":56,"column":29}},"39":{"start":{"line":58,"column":4},"end":{"line":67,"column":5}},"40":{"start":{"line":58,"column":17},"end":{"line":58,"column":18}},"41":{"start":{"line":59,"column":19},"end":{"line":59,"column":25}},"42":{"start":{"line":60,"column":6},"end":{"line":66,"column":7}},"43":{"start":{"line":61,"column":8},"end":{"line":61,"column":36}},"44":{"start":{"line":62,"column":13},"end":{"line":66,"column":7}},"45":{"start":{"line":63,"column":8},"end":{"line":63,"column":51}},"46":{"start":{"line":65,"column":8},"end":{"line":65,"column":47}},"47":{"start":{"line":69,"column":2},"end":{"line":69,"column":24}},"48":{"start":{"line":78,"column":4},"end":{"line":78,"column":42}},"49":{"start":{"line":86,"column":31},"end":{"line":86,"column":60}},"50":{"start":{"line":87,"column":33},"end":{"line":95,"column":5}},"51":{"start":{"line":96,"column":4},"end":{"line":96,"column":54}},"52":{"start":{"line":98,"column":12},"end":{"line":98,"column":14}},"53":{"start":{"line":99,"column":14},"end":{"line":99,"column":16}},"54":{"start":{"line":100,"column":17},"end":{"line":100,"column":19}},"55":{"start":{"line":101,"column":12},"end":{"line":101,"column":14}},"56":{"start":{"line":102,"column":13},"end":{"line":102,"column":15}},"57":{"start":{"line":103,"column":16},"end":{"line":103,"column":18}},"58":{"start":{"line":104,"column":19},"end":{"line":104,"column":21}},"59":{"start":{"line":105,"column":32},"end":{"line":105,"column":41}},"60":{"start":{"line":110,"column":18},"end":{"line":110,"column":22}},"61":{"start":{"line":113,"column":4},"end":{"line":113,"column":82}},"62":{"start":{"line":114,"column":4},"end":{"line":114,"column":47}},"63":{"start":{"line":117,"column":4},"end":{"line":117,"column":22}},"64":{"start":{"line":118,"column":4},"end":{"line":118,"column":30}},"65":{"start":{"line":119,"column":4},"end":{"line":119,"column":33}},"66":{"start":{"line":120,"column":4},"end":{"line":120,"column":23}},"67":{"start":{"line":123,"column":4},"end":{"line":125,"column":7}},"68":{"start":{"line":124,"column":6},"end":{"line":124,"column":15}},"69":{"start":{"line":128,"column":4},"end":{"line":128,"column":26}},"70":{"start":{"line":131,"column":4},"end":{"line":131,"column":30}},"71":{"start":{"line":134,"column":4},"end":{"line":134,"column":29}},"72":{"start":{"line":137,"column":4},"end":{"line":137,"column":36}},"73":{"start":{"line":140,"column":4},"end":{"line":140,"column":27}},"74":{"start":{"line":141,"column":4},"end":{"line":141,"column":33}},"75":{"start":{"line":144,"column":4},"end":{"line":144,"column":26}},"76":{"start":{"line":147,"column":4},"end":{"line":147,"column":24}},"77":{"start":{"line":150,"column":4},"end":{"line":150,"column":28}},"78":{"start":{"line":153,"column":4},"end":{"line":153,"column":25}},"79":{"start":{"line":156,"column":4},"end":{"line":156,"column":28}},"80":{"start":{"line":159,"column":4},"end":{"line":159,"column":31}},"81":{"start":{"line":162,"column":4},"end":{"line":162,"column":24}},"82":{"start":{"line":165,"column":4},"end":{"line":165,"column":23}},"83":{"start":{"line":166,"column":4},"end":{"line":166,"column":25}},"84":{"start":{"line":169,"column":4},"end":{"line":169,"column":16}},"85":{"start":{"line":172,"column":4},"end":{"line":172,"column":31}},"86":{"start":{"line":175,"column":4},"end":{"line":175,"column":61}},"87":{"start":{"line":178,"column":22},"end":{"line":178,"column":39}},"88":{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},"89":{"start":{"line":180,"column":6},"end":{"line":180,"column":18}},"90":{"start":{"line":182,"column":14},"end":{"line":182,"column":31}},"91":{"start":{"line":183,"column":4},"end":{"line":185,"column":5}},"92":{"start":{"line":184,"column":6},"end":{"line":184,"column":18}},"93":{"start":{"line":186,"column":4},"end":{"line":186,"column":13}},"94":{"start":{"line":189,"column":4},"end":{"line":189,"column":55}},"95":{"start":{"line":192,"column":4},"end":{"line":194,"column":5}},"96":{"start":{"line":193,"column":6},"end":{"line":193,"column":49}},"97":{"start":{"line":195,"column":4},"end":{"line":195,"column":23}},"98":{"start":{"line":196,"column":4},"end":{"line":196,"column":38}},"99":{"start":{"line":199,"column":21},"end":{"line":199,"column":22}},"100":{"start":{"line":200,"column":21},"end":{"line":200,"column":39}},"101":{"start":{"line":201,"column":24},"end":{"line":201,"column":25}},"102":{"start":{"line":202,"column":24},"end":{"line":202,"column":45}},"103":{"start":{"line":203,"column":4},"end":{"line":208,"column":6}},"104":{"start":{"line":211,"column":57},"end":{"line":211,"column":80}},"105":{"start":{"line":212,"column":22},"end":{"line":212,"column":42}},"106":{"start":{"line":213,"column":4},"end":{"line":219,"column":5}},"107":{"start":{"line":213,"column":17},"end":{"line":213,"column":25}},"108":{"start":{"line":214,"column":6},"end":{"line":218,"column":7}},"109":{"start":{"line":214,"column":19},"end":{"line":214,"column":30}},"110":{"start":{"line":215,"column":8},"end":{"line":217,"column":9}},"111":{"start":{"line":216,"column":10},"end":{"line":216,"column":17}},"112":{"start":{"line":222,"column":57},"end":{"line":222,"column":80}},"113":{"start":{"line":223,"column":22},"end":{"line":223,"column":42}},"114":{"start":{"line":224,"column":4},"end":{"line":230,"column":5}},"115":{"start":{"line":224,"column":17},"end":{"line":224,"column":23}},"116":{"start":{"line":225,"column":6},"end":{"line":229,"column":7}},"117":{"start":{"line":225,"column":19},"end":{"line":225,"column":28}},"118":{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},"119":{"start":{"line":227,"column":10},"end":{"line":227,"column":17}},"120":{"start":{"line":234,"column":4},"end":{"line":242,"column":7}},"121":{"start":{"line":235,"column":6},"end":{"line":241,"column":7}},"122":{"start":{"line":236,"column":8},"end":{"line":239,"column":10}},"123":{"start":{"line":240,"column":8},"end":{"line":240,"column":21}},"124":{"start":{"line":243,"column":4},"end":{"line":243,"column":23}},"125":{"start":{"line":247,"column":4},"end":{"line":255,"column":7}},"126":{"start":{"line":248,"column":6},"end":{"line":254,"column":7}},"127":{"start":{"line":249,"column":8},"end":{"line":252,"column":10}},"128":{"start":{"line":253,"column":8},"end":{"line":253,"column":21}},"129":{"start":{"line":256,"column":4},"end":{"line":256,"column":23}},"130":{"start":{"line":259,"column":38},"end":{"line":259,"column":61}},"131":{"start":{"line":260,"column":4},"end":{"line":260,"column":93}},"132":{"start":{"line":263,"column":34},"end":{"line":263,"column":57}},"133":{"start":{"line":264,"column":4},"end":{"line":264,"column":89}},"134":{"start":{"line":274,"column":21},"end":{"line":274,"column":44}},"135":{"start":{"line":275,"column":4},"end":{"line":275,"column":65}},"136":{"start":{"line":278,"column":30},"end":{"line":278,"column":53}},"137":{"start":{"line":279,"column":33},"end":{"line":279,"column":59}},"138":{"start":{"line":280,"column":4},"end":{"line":282,"column":5}},"139":{"start":{"line":281,"column":6},"end":{"line":281,"column":42}},"140":{"start":{"line":283,"column":21},"end":{"line":283,"column":23}},"141":{"start":{"line":284,"column":4},"end":{"line":284,"column":21}},"142":{"start":{"line":285,"column":4},"end":{"line":296,"column":5}},"143":{"start":{"line":285,"column":17},"end":{"line":285,"column":18}},"144":{"start":{"line":286,"column":6},"end":{"line":295,"column":7}},"145":{"start":{"line":286,"column":19},"end":{"line":286,"column":20}},"146":{"start":{"line":287,"column":25},"end":{"line":287,"column":44}},"147":{"start":{"line":288,"column":8},"end":{"line":290,"column":9}},"148":{"start":{"line":289,"column":10},"end":{"line":289,"column":19}},"149":{"start":{"line":291,"column":8},"end":{"line":294,"column":9}},"150":{"start":{"line":292,"column":24},"end":{"line":292,"column":38}},"151":{"start":{"line":293,"column":10},"end":{"line":293,"column":34}},"152":{"start":{"line":297,"column":4},"end":{"line":297,"column":20}},"153":{"start":{"line":304,"column":4},"end":{"line":306,"column":5}},"154":{"start":{"line":305,"column":6},"end":{"line":305,"column":32}},"155":{"start":{"line":307,"column":21},"end":{"line":307,"column":23}},"156":{"start":{"line":308,"column":4},"end":{"line":308,"column":21}},"157":{"start":{"line":309,"column":4},"end":{"line":314,"column":5}},"158":{"start":{"line":309,"column":17},"end":{"line":309,"column":18}},"159":{"start":{"line":310,"column":6},"end":{"line":313,"column":7}},"160":{"start":{"line":310,"column":19},"end":{"line":310,"column":20}},"161":{"start":{"line":311,"column":22},"end":{"line":311,"column":36}},"162":{"start":{"line":312,"column":8},"end":{"line":312,"column":32}},"163":{"start":{"line":315,"column":19},"end":{"line":315,"column":72}},"164":{"start":{"line":316,"column":4},"end":{"line":316,"column":47}},"165":{"start":{"line":317,"column":4},"end":{"line":317,"column":32}},"166":{"start":{"line":318,"column":4},"end":{"line":318,"column":18}},"167":{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},"168":{"start":{"line":326,"column":6},"end":{"line":326,"column":35}},"169":{"start":{"line":328,"column":24},"end":{"line":328,"column":26}},"170":{"start":{"line":329,"column":24},"end":{"line":329,"column":26}},"171":{"start":{"line":330,"column":27},"end":{"line":330,"column":29}},"172":{"start":{"line":331,"column":27},"end":{"line":331,"column":29}},"173":{"start":{"line":332,"column":16},"end":{"line":332,"column":17}},"174":{"start":{"line":333,"column":4},"end":{"line":348,"column":5}},"175":{"start":{"line":333,"column":17},"end":{"line":333,"column":18}},"176":{"start":{"line":334,"column":6},"end":{"line":347,"column":7}},"177":{"start":{"line":334,"column":19},"end":{"line":334,"column":20}},"178":{"start":{"line":335,"column":22},"end":{"line":335,"column":36}},"179":{"start":{"line":336,"column":8},"end":{"line":339,"column":9}},"180":{"start":{"line":337,"column":10},"end":{"line":337,"column":18}},"181":{"start":{"line":338,"column":10},"end":{"line":338,"column":19}},"182":{"start":{"line":340,"column":8},"end":{"line":346,"column":9}},"183":{"start":{"line":341,"column":10},"end":{"line":341,"column":34}},"184":{"start":{"line":342,"column":10},"end":{"line":342,"column":39}},"185":{"start":{"line":344,"column":10},"end":{"line":344,"column":34}},"186":{"start":{"line":345,"column":10},"end":{"line":345,"column":39}},"187":{"start":{"line":349,"column":19},"end":{"line":354,"column":5}},"188":{"start":{"line":355,"column":4},"end":{"line":355,"column":35}},"189":{"start":{"line":356,"column":4},"end":{"line":356,"column":18}},"190":{"start":{"line":366,"column":19},"end":{"line":366,"column":20}},"191":{"start":{"line":367,"column":18},"end":{"line":367,"column":32}},"192":{"start":{"line":368,"column":18},"end":{"line":368,"column":19}},"193":{"start":{"line":369,"column":22},"end":{"line":369,"column":23}},"194":{"start":{"line":370,"column":21},"end":{"line":370,"column":38}},"195":{"start":{"line":371,"column":21},"end":{"line":371,"column":22}},"196":{"start":{"line":372,"column":4},"end":{"line":376,"column":5}},"197":{"start":{"line":373,"column":6},"end":{"line":373,"column":34}},"198":{"start":{"line":374,"column":6},"end":{"line":374,"column":46}},"199":{"start":{"line":375,"column":6},"end":{"line":375,"column":33}},"200":{"start":{"line":377,"column":4},"end":{"line":381,"column":5}},"201":{"start":{"line":378,"column":6},"end":{"line":378,"column":40}},"202":{"start":{"line":379,"column":6},"end":{"line":379,"column":55}},"203":{"start":{"line":380,"column":6},"end":{"line":380,"column":39}},"204":{"start":{"line":382,"column":4},"end":{"line":384,"column":5}},"205":{"start":{"line":383,"column":6},"end":{"line":383,"column":13}},"206":{"start":{"line":385,"column":21},"end":{"line":385,"column":99}},"207":{"start":{"line":386,"column":18},"end":{"line":386,"column":48}},"208":{"start":{"line":387,"column":4},"end":{"line":389,"column":5}},"209":{"start":{"line":388,"column":6},"end":{"line":388,"column":19}},"210":{"start":{"line":390,"column":19},"end":{"line":390,"column":21}},"211":{"start":{"line":391,"column":18},"end":{"line":391,"column":30}},"212":{"start":{"line":392,"column":27},"end":{"line":392,"column":28}},"213":{"start":{"line":393,"column":30},"end":{"line":393,"column":31}},"214":{"start":{"line":394,"column":4},"end":{"line":412,"column":5}},"215":{"start":{"line":394,"column":17},"end":{"line":394,"column":25}},"216":{"start":{"line":395,"column":6},"end":{"line":395,"column":30}},"217":{"start":{"line":396,"column":6},"end":{"line":398,"column":7}},"218":{"start":{"line":397,"column":8},"end":{"line":397,"column":38}},"219":{"start":{"line":399,"column":6},"end":{"line":410,"column":7}},"220":{"start":{"line":399,"column":19},"end":{"line":399,"column":30}},"221":{"start":{"line":400,"column":8},"end":{"line":402,"column":9}},"222":{"start":{"line":401,"column":10},"end":{"line":401,"column":17}},"223":{"start":{"line":404,"column":19},"end":{"line":404,"column":52}},"224":{"start":{"line":405,"column":8},"end":{"line":407,"column":9}},"225":{"start":{"line":406,"column":10},"end":{"line":406,"column":42}},"226":{"start":{"line":408,"column":8},"end":{"line":408,"column":61}},"227":{"start":{"line":409,"column":8},"end":{"line":409,"column":30}},"228":{"start":{"line":411,"column":6},"end":{"line":411,"column":25}},"229":{"start":{"line":413,"column":4},"end":{"line":415,"column":5}},"230":{"start":{"line":414,"column":6},"end":{"line":414,"column":13}},"231":{"start":{"line":416,"column":21},"end":{"line":416,"column":67}},"232":{"start":{"line":417,"column":24},"end":{"line":417,"column":79}},"233":{"start":{"line":418,"column":27},"end":{"line":418,"column":111}},"234":{"start":{"line":419,"column":4},"end":{"line":419,"column":55}},"235":{"start":{"line":420,"column":4},"end":{"line":420,"column":51}},"236":{"start":{"line":421,"column":4},"end":{"line":421,"column":26}},"237":{"start":{"line":424,"column":19},"end":{"line":424,"column":53}},"238":{"start":{"line":425,"column":4},"end":{"line":425,"column":35}},"239":{"start":{"line":426,"column":4},"end":{"line":426,"column":23}},"240":{"start":{"line":427,"column":4},"end":{"line":427,"column":48}},"241":{"start":{"line":430,"column":4},"end":{"line":430,"column":23}},"242":{"start":{"line":431,"column":4},"end":{"line":431,"column":41}},"243":{"start":{"line":434,"column":27},"end":{"line":434,"column":61}},"244":{"start":{"line":435,"column":21},"end":{"line":435,"column":35}},"245":{"start":{"line":436,"column":24},"end":{"line":436,"column":41}},"246":{"start":{"line":437,"column":21},"end":{"line":437,"column":80}},"247":{"start":{"line":438,"column":4},"end":{"line":438,"column":49}},"248":{"start":{"line":439,"column":4},"end":{"line":439,"column":20}},"249":{"start":{"line":451,"column":25},"end":{"line":481,"column":5}},"250":{"start":{"line":452,"column":6},"end":{"line":454,"column":7}},"251":{"start":{"line":453,"column":8},"end":{"line":453,"column":20}},"252":{"start":{"line":456,"column":6},"end":{"line":460,"column":7}},"253":{"start":{"line":457,"column":8},"end":{"line":457,"column":74}},"254":{"start":{"line":459,"column":8},"end":{"line":459,"column":53}},"255":{"start":{"line":461,"column":6},"end":{"line":465,"column":7}},"256":{"start":{"line":462,"column":8},"end":{"line":462,"column":27}},"257":{"start":{"line":463,"column":8},"end":{"line":463,"column":41}},"258":{"start":{"line":464,"column":8},"end":{"line":464,"column":21}},"259":{"start":{"line":466,"column":6},"end":{"line":480,"column":7}},"260":{"start":{"line":467,"column":8},"end":{"line":472,"column":9}},"261":{"start":{"line":468,"column":10},"end":{"line":471,"column":11}},"262":{"start":{"line":469,"column":12},"end":{"line":469,"column":33}},"263":{"start":{"line":470,"column":12},"end":{"line":470,"column":47}},"264":{"start":{"line":473,"column":13},"end":{"line":480,"column":7}},"265":{"start":{"line":474,"column":8},"end":{"line":479,"column":9}},"266":{"start":{"line":475,"column":10},"end":{"line":478,"column":11}},"267":{"start":{"line":476,"column":12},"end":{"line":476,"column":33}},"268":{"start":{"line":477,"column":12},"end":{"line":477,"column":47}},"269":{"start":{"line":482,"column":4},"end":{"line":490,"column":5}},"270":{"start":{"line":483,"column":6},"end":{"line":485,"column":9}},"271":{"start":{"line":484,"column":8},"end":{"line":484,"column":45}},"272":{"start":{"line":487,"column":6},"end":{"line":489,"column":9}},"273":{"start":{"line":488,"column":8},"end":{"line":488,"column":45}},"274":{"start":{"line":491,"column":4},"end":{"line":493,"column":5}},"275":{"start":{"line":492,"column":6},"end":{"line":492,"column":28}},"276":{"start":{"line":494,"column":4},"end":{"line":496,"column":5}},"277":{"start":{"line":495,"column":6},"end":{"line":495,"column":30}},"278":{"start":{"line":499,"column":4},"end":{"line":501,"column":5}},"279":{"start":{"line":500,"column":6},"end":{"line":500,"column":13}},"280":{"start":{"line":502,"column":73},"end":{"line":502,"column":95}},"281":{"start":{"line":503,"column":4},"end":{"line":505,"column":5}},"282":{"start":{"line":504,"column":6},"end":{"line":504,"column":97}},"283":{"start":{"line":506,"column":19},"end":{"line":506,"column":102}},"284":{"start":{"line":507,"column":4},"end":{"line":507,"column":18}},"285":{"start":{"line":521,"column":24},"end":{"line":521,"column":36}},"286":{"start":{"line":522,"column":18},"end":{"line":522,"column":48}},"287":{"start":{"line":523,"column":26},"end":{"line":523,"column":46}},"288":{"start":{"line":524,"column":16},"end":{"line":524,"column":17}},"289":{"start":{"line":525,"column":14},"end":{"line":525,"column":36}},"290":{"start":{"line":526,"column":26},"end":{"line":526,"column":28}},"291":{"start":{"line":527,"column":30},"end":{"line":527,"column":32}},"292":{"start":{"line":528,"column":29},"end":{"line":528,"column":31}},"293":{"start":{"line":529,"column":4},"end":{"line":558,"column":5}},"294":{"start":{"line":530,"column":21},"end":{"line":530,"column":50}},"295":{"start":{"line":531,"column":24},"end":{"line":531,"column":43}},"296":{"start":{"line":533,"column":6},"end":{"line":543,"column":7}},"297":{"start":{"line":534,"column":8},"end":{"line":534,"column":74}},"298":{"start":{"line":536,"column":31},"end":{"line":536,"column":51}},"299":{"start":{"line":537,"column":8},"end":{"line":542,"column":9}},"300":{"start":{"line":538,"column":34},"end":{"line":538,"column":56}},"301":{"start":{"line":539,"column":10},"end":{"line":539,"column":97}},"302":{"start":{"line":541,"column":10},"end":{"line":541,"column":140}},"303":{"start":{"line":544,"column":6},"end":{"line":546,"column":7}},"304":{"start":{"line":545,"column":8},"end":{"line":545,"column":39}},"305":{"start":{"line":547,"column":6},"end":{"line":550,"column":7}},"306":{"start":{"line":548,"column":8},"end":{"line":548,"column":33}},"307":{"start":{"line":549,"column":8},"end":{"line":549,"column":14}},"308":{"start":{"line":551,"column":6},"end":{"line":557,"column":7}},"309":{"start":{"line":552,"column":8},"end":{"line":552,"column":37}},"310":{"start":{"line":553,"column":8},"end":{"line":553,"column":27}},"311":{"start":{"line":555,"column":8},"end":{"line":555,"column":36}},"312":{"start":{"line":556,"column":8},"end":{"line":556,"column":25}},"313":{"start":{"line":559,"column":4},"end":{"line":561,"column":5}},"314":{"start":{"line":560,"column":6},"end":{"line":560,"column":78}},"315":{"start":{"line":562,"column":4},"end":{"line":565,"column":5}},"316":{"start":{"line":563,"column":6},"end":{"line":563,"column":72}},"317":{"start":{"line":563,"column":34},"end":{"line":563,"column":72}},"318":{"start":{"line":564,"column":6},"end":{"line":564,"column":127}},"319":{"start":{"line":566,"column":4},"end":{"line":569,"column":5}},"320":{"start":{"line":567,"column":6},"end":{"line":567,"column":72}},"321":{"start":{"line":567,"column":34},"end":{"line":567,"column":72}},"322":{"start":{"line":568,"column":6},"end":{"line":568,"column":127}},"323":{"start":{"line":570,"column":4},"end":{"line":570,"column":18}},"324":{"start":{"line":573,"column":25},"end":{"line":573,"column":52}},"325":{"start":{"line":574,"column":4},"end":{"line":585,"column":7}},"326":{"start":{"line":575,"column":6},"end":{"line":577,"column":7}},"327":{"start":{"line":576,"column":8},"end":{"line":576,"column":20}},"328":{"start":{"line":578,"column":6},"end":{"line":581,"column":7}},"329":{"start":{"line":579,"column":8},"end":{"line":579,"column":37}},"330":{"start":{"line":580,"column":8},"end":{"line":580,"column":21}},"331":{"start":{"line":582,"column":6},"end":{"line":584,"column":8}},"332":{"start":{"line":586,"column":4},"end":{"line":586,"column":26}},"333":{"start":{"line":589,"column":25},"end":{"line":589,"column":75}},"334":{"start":{"line":590,"column":4},"end":{"line":605,"column":7}},"335":{"start":{"line":591,"column":6},"end":{"line":593,"column":7}},"336":{"start":{"line":592,"column":8},"end":{"line":592,"column":20}},"337":{"start":{"line":594,"column":6},"end":{"line":597,"column":7}},"338":{"start":{"line":595,"column":8},"end":{"line":595,"column":37}},"339":{"start":{"line":596,"column":8},"end":{"line":596,"column":21}},"340":{"start":{"line":598,"column":6},"end":{"line":600,"column":7}},"341":{"start":{"line":599,"column":8},"end":{"line":599,"column":20}},"342":{"start":{"line":601,"column":21},"end":{"line":601,"column":59}},"343":{"start":{"line":602,"column":6},"end":{"line":604,"column":7}},"344":{"start":{"line":603,"column":8},"end":{"line":603,"column":37}},"345":{"start":{"line":606,"column":4},"end":{"line":606,"column":26}},"346":{"start":{"line":609,"column":25},"end":{"line":609,"column":75}},"347":{"start":{"line":610,"column":4},"end":{"line":625,"column":7}},"348":{"start":{"line":611,"column":6},"end":{"line":613,"column":7}},"349":{"start":{"line":612,"column":8},"end":{"line":612,"column":20}},"350":{"start":{"line":614,"column":6},"end":{"line":617,"column":7}},"351":{"start":{"line":615,"column":8},"end":{"line":615,"column":37}},"352":{"start":{"line":616,"column":8},"end":{"line":616,"column":21}},"353":{"start":{"line":618,"column":6},"end":{"line":620,"column":7}},"354":{"start":{"line":619,"column":8},"end":{"line":619,"column":20}},"355":{"start":{"line":621,"column":21},"end":{"line":621,"column":62}},"356":{"start":{"line":622,"column":6},"end":{"line":624,"column":7}},"357":{"start":{"line":623,"column":8},"end":{"line":623,"column":37}},"358":{"start":{"line":626,"column":4},"end":{"line":626,"column":26}},"359":{"start":{"line":629,"column":25},"end":{"line":629,"column":52}},"360":{"start":{"line":630,"column":4},"end":{"line":635,"column":7}},"361":{"start":{"line":631,"column":6},"end":{"line":633,"column":7}},"362":{"start":{"line":632,"column":8},"end":{"line":632,"column":20}},"363":{"start":{"line":634,"column":6},"end":{"line":634,"column":48}},"364":{"start":{"line":636,"column":4},"end":{"line":636,"column":26}},"365":{"start":{"line":639,"column":25},"end":{"line":639,"column":52}},"366":{"start":{"line":640,"column":4},"end":{"line":645,"column":7}},"367":{"start":{"line":641,"column":6},"end":{"line":643,"column":7}},"368":{"start":{"line":642,"column":8},"end":{"line":642,"column":20}},"369":{"start":{"line":644,"column":6},"end":{"line":644,"column":48}},"370":{"start":{"line":646,"column":4},"end":{"line":646,"column":26}},"371":{"start":{"line":649,"column":25},"end":{"line":649,"column":52}},"372":{"start":{"line":650,"column":4},"end":{"line":654,"column":7}},"373":{"start":{"line":651,"column":6},"end":{"line":653,"column":7}},"374":{"start":{"line":652,"column":8},"end":{"line":652,"column":50}},"375":{"start":{"line":655,"column":4},"end":{"line":655,"column":26}},"376":{"start":{"line":658,"column":29},"end":{"line":658,"column":59}},"377":{"start":{"line":659,"column":4},"end":{"line":659,"column":40}},"378":{"start":{"line":662,"column":29},"end":{"line":662,"column":59}},"379":{"start":{"line":663,"column":4},"end":{"line":663,"column":42}},"380":{"start":{"line":666,"column":4},"end":{"line":666,"column":58}},"381":{"start":{"line":669,"column":4},"end":{"line":669,"column":59}},"382":{"start":{"line":672,"column":4},"end":{"line":672,"column":62}},"383":{"start":{"line":675,"column":4},"end":{"line":675,"column":61}},"384":{"start":{"line":678,"column":4},"end":{"line":678,"column":57}},"385":{"start":{"line":681,"column":4},"end":{"line":686,"column":7}},"386":{"start":{"line":682,"column":6},"end":{"line":684,"column":7}},"387":{"start":{"line":683,"column":8},"end":{"line":683,"column":28}},"388":{"start":{"line":685,"column":6},"end":{"line":685,"column":43}},"389":{"start":{"line":689,"column":4},"end":{"line":689,"column":88}},"390":{"start":{"line":692,"column":4},"end":{"line":692,"column":71}},"391":{"start":{"line":695,"column":4},"end":{"line":695,"column":70}},"392":{"start":{"line":698,"column":30},"end":{"line":707,"column":5}},"393":{"start":{"line":699,"column":6},"end":{"line":701,"column":7}},"394":{"start":{"line":700,"column":8},"end":{"line":700,"column":40}},"395":{"start":{"line":702,"column":6},"end":{"line":706,"column":7}},"396":{"start":{"line":703,"column":8},"end":{"line":703,"column":28}},"397":{"start":{"line":705,"column":8},"end":{"line":705,"column":46}},"398":{"start":{"line":708,"column":4},"end":{"line":708,"column":44}},"399":{"start":{"line":711,"column":21},"end":{"line":711,"column":35}},"400":{"start":{"line":712,"column":24},"end":{"line":712,"column":41}},"401":{"start":{"line":713,"column":19},"end":{"line":713,"column":21}},"402":{"start":{"line":714,"column":4},"end":{"line":730,"column":5}},"403":{"start":{"line":714,"column":17},"end":{"line":714,"column":18}},"404":{"start":{"line":715,"column":22},"end":{"line":715,"column":24}},"405":{"start":{"line":716,"column":6},"end":{"line":728,"column":7}},"406":{"start":{"line":716,"column":19},"end":{"line":716,"column":20}},"407":{"start":{"line":717,"column":20},"end":{"line":717,"column":37}},"408":{"start":{"line":718,"column":8},"end":{"line":727,"column":9}},"409":{"start":{"line":719,"column":10},"end":{"line":719,"column":64}},"410":{"start":{"line":721,"column":31},"end":{"line":721,"column":59}},"411":{"start":{"line":722,"column":10},"end":{"line":726,"column":11}},"412":{"start":{"line":723,"column":12},"end":{"line":723,"column":56}},"413":{"start":{"line":725,"column":12},"end":{"line":725,"column":50}},"414":{"start":{"line":729,"column":6},"end":{"line":729,"column":27}},"415":{"start":{"line":731,"column":4},"end":{"line":731,"column":63}},"416":{"start":{"line":734,"column":4},"end":{"line":734,"column":57}},"417":{"start":{"line":742,"column":4},"end":{"line":747,"column":7}},"418":{"start":{"line":743,"column":6},"end":{"line":745,"column":7}},"419":{"start":{"line":744,"column":8},"end":{"line":744,"column":28}},"420":{"start":{"line":746,"column":6},"end":{"line":746,"column":43}},"421":{"start":{"line":750,"column":4},"end":{"line":755,"column":7}},"422":{"start":{"line":751,"column":6},"end":{"line":753,"column":7}},"423":{"start":{"line":752,"column":8},"end":{"line":752,"column":28}},"424":{"start":{"line":754,"column":6},"end":{"line":754,"column":33}},"425":{"start":{"line":758,"column":4},"end":{"line":763,"column":7}},"426":{"start":{"line":759,"column":6},"end":{"line":761,"column":7}},"427":{"start":{"line":760,"column":8},"end":{"line":760,"column":28}},"428":{"start":{"line":762,"column":6},"end":{"line":762,"column":33}},"429":{"start":{"line":766,"column":4},"end":{"line":771,"column":7}},"430":{"start":{"line":767,"column":6},"end":{"line":769,"column":7}},"431":{"start":{"line":768,"column":8},"end":{"line":768,"column":28}},"432":{"start":{"line":770,"column":6},"end":{"line":770,"column":32}},"433":{"start":{"line":774,"column":4},"end":{"line":779,"column":7}},"434":{"start":{"line":775,"column":6},"end":{"line":777,"column":7}},"435":{"start":{"line":776,"column":8},"end":{"line":776,"column":28}},"436":{"start":{"line":778,"column":6},"end":{"line":778,"column":33}},"437":{"start":{"line":782,"column":4},"end":{"line":787,"column":7}},"438":{"start":{"line":783,"column":6},"end":{"line":785,"column":7}},"439":{"start":{"line":784,"column":8},"end":{"line":784,"column":28}},"440":{"start":{"line":786,"column":6},"end":{"line":786,"column":33}},"441":{"start":{"line":790,"column":4},"end":{"line":795,"column":7}},"442":{"start":{"line":791,"column":6},"end":{"line":793,"column":7}},"443":{"start":{"line":792,"column":8},"end":{"line":792,"column":28}},"444":{"start":{"line":794,"column":6},"end":{"line":794,"column":34}},"445":{"start":{"line":798,"column":4},"end":{"line":803,"column":7}},"446":{"start":{"line":799,"column":6},"end":{"line":801,"column":7}},"447":{"start":{"line":800,"column":8},"end":{"line":800,"column":28}},"448":{"start":{"line":802,"column":6},"end":{"line":802,"column":32}},"449":{"start":{"line":806,"column":4},"end":{"line":811,"column":7}},"450":{"start":{"line":807,"column":6},"end":{"line":809,"column":7}},"451":{"start":{"line":808,"column":8},"end":{"line":808,"column":28}},"452":{"start":{"line":810,"column":6},"end":{"line":810,"column":33}},"453":{"start":{"line":814,"column":4},"end":{"line":819,"column":7}},"454":{"start":{"line":815,"column":6},"end":{"line":817,"column":7}},"455":{"start":{"line":816,"column":8},"end":{"line":816,"column":28}},"456":{"start":{"line":818,"column":6},"end":{"line":818,"column":33}},"457":{"start":{"line":822,"column":4},"end":{"line":827,"column":7}},"458":{"start":{"line":823,"column":6},"end":{"line":825,"column":7}},"459":{"start":{"line":824,"column":8},"end":{"line":824,"column":28}},"460":{"start":{"line":826,"column":6},"end":{"line":826,"column":34}},"461":{"start":{"line":830,"column":4},"end":{"line":835,"column":7}},"462":{"start":{"line":831,"column":6},"end":{"line":833,"column":7}},"463":{"start":{"line":832,"column":8},"end":{"line":832,"column":28}},"464":{"start":{"line":834,"column":6},"end":{"line":834,"column":32}},"465":{"start":{"line":838,"column":4},"end":{"line":843,"column":7}},"466":{"start":{"line":839,"column":6},"end":{"line":841,"column":7}},"467":{"start":{"line":840,"column":8},"end":{"line":840,"column":28}},"468":{"start":{"line":842,"column":6},"end":{"line":842,"column":33}},"469":{"start":{"line":846,"column":4},"end":{"line":851,"column":7}},"470":{"start":{"line":847,"column":6},"end":{"line":849,"column":7}},"471":{"start":{"line":848,"column":8},"end":{"line":848,"column":28}},"472":{"start":{"line":850,"column":6},"end":{"line":850,"column":33}},"473":{"start":{"line":854,"column":4},"end":{"line":859,"column":7}},"474":{"start":{"line":855,"column":6},"end":{"line":857,"column":7}},"475":{"start":{"line":856,"column":8},"end":{"line":856,"column":28}},"476":{"start":{"line":858,"column":6},"end":{"line":858,"column":34}},"477":{"start":{"line":862,"column":4},"end":{"line":862,"column":60}},"478":{"start":{"line":865,"column":4},"end":{"line":870,"column":7}},"479":{"start":{"line":866,"column":6},"end":{"line":868,"column":7}},"480":{"start":{"line":867,"column":8},"end":{"line":867,"column":28}},"481":{"start":{"line":869,"column":6},"end":{"line":869,"column":45}},"482":{"start":{"line":873,"column":16},"end":{"line":873,"column":26}},"483":{"start":{"line":874,"column":18},"end":{"line":874,"column":30}},"484":{"start":{"line":875,"column":4},"end":{"line":875,"column":62}},"485":{"start":{"line":878,"column":24},"end":{"line":878,"column":58}},"486":{"start":{"line":879,"column":21},"end":{"line":879,"column":79}},"487":{"start":{"line":880,"column":18},"end":{"line":880,"column":43}},"488":{"start":{"line":881,"column":4},"end":{"line":883,"column":5}},"489":{"start":{"line":882,"column":6},"end":{"line":882,"column":60}},"490":{"start":{"line":884,"column":4},"end":{"line":884,"column":26}},"491":{"start":{"line":885,"column":4},"end":{"line":889,"column":5}},"492":{"start":{"line":886,"column":26},"end":{"line":886,"column":80}},"493":{"start":{"line":887,"column":25},"end":{"line":887,"column":83}},"494":{"start":{"line":888,"column":6},"end":{"line":888,"column":79}},"495":{"start":{"line":890,"column":4},"end":{"line":890,"column":72}},"496":{"start":{"line":912,"column":17},"end":{"line":912,"column":28}},"497":{"start":{"line":913,"column":31},"end":{"line":913,"column":35}},"498":{"start":{"line":914,"column":4},"end":{"line":923,"column":7}},"499":{"start":{"line":915,"column":6},"end":{"line":917,"column":7}},"500":{"start":{"line":916,"column":8},"end":{"line":916,"column":15}},"501":{"start":{"line":918,"column":30},"end":{"line":918,"column":86}},"502":{"start":{"line":919,"column":6},"end":{"line":921,"column":7}},"503":{"start":{"line":920,"column":8},"end":{"line":920,"column":15}},"504":{"start":{"line":922,"column":6},"end":{"line":922,"column":50}},"505":{"start":{"line":924,"column":63},"end":{"line":924,"column":67}},"506":{"start":{"line":925,"column":42},"end":{"line":933,"column":6}},"507":{"start":{"line":934,"column":4},"end":{"line":934,"column":52}},"508":{"start":{"line":945,"column":21},"end":{"line":945,"column":35}},"509":{"start":{"line":946,"column":4},"end":{"line":948,"column":5}},"510":{"start":{"line":947,"column":6},"end":{"line":947,"column":22}},"511":{"start":{"line":949,"column":4},"end":{"line":949,"column":27}},"512":{"start":{"line":952,"column":4},"end":{"line":957,"column":7}},"513":{"start":{"line":953,"column":6},"end":{"line":955,"column":7}},"514":{"start":{"line":954,"column":8},"end":{"line":954,"column":28}},"515":{"start":{"line":956,"column":6},"end":{"line":956,"column":32}},"516":{"start":{"line":960,"column":4},"end":{"line":965,"column":7}},"517":{"start":{"line":961,"column":6},"end":{"line":963,"column":7}},"518":{"start":{"line":962,"column":8},"end":{"line":962,"column":28}},"519":{"start":{"line":964,"column":6},"end":{"line":964,"column":34}},"520":{"start":{"line":968,"column":4},"end":{"line":973,"column":7}},"521":{"start":{"line":969,"column":6},"end":{"line":971,"column":7}},"522":{"start":{"line":970,"column":8},"end":{"line":970,"column":28}},"523":{"start":{"line":972,"column":6},"end":{"line":972,"column":32}},"524":{"start":{"line":976,"column":4},"end":{"line":981,"column":7}},"525":{"start":{"line":977,"column":6},"end":{"line":979,"column":7}},"526":{"start":{"line":978,"column":8},"end":{"line":978,"column":28}},"527":{"start":{"line":980,"column":6},"end":{"line":980,"column":32}},"528":{"start":{"line":984,"column":4},"end":{"line":984,"column":59}},"529":{"start":{"line":987,"column":4},"end":{"line":992,"column":7}},"530":{"start":{"line":988,"column":6},"end":{"line":990,"column":7}},"531":{"start":{"line":989,"column":8},"end":{"line":989,"column":28}},"532":{"start":{"line":991,"column":6},"end":{"line":991,"column":45}},"533":{"start":{"line":995,"column":4},"end":{"line":995,"column":60}},"534":{"start":{"line":998,"column":4},"end":{"line":1003,"column":7}},"535":{"start":{"line":999,"column":6},"end":{"line":1001,"column":7}},"536":{"start":{"line":1000,"column":8},"end":{"line":1000,"column":28}},"537":{"start":{"line":1002,"column":6},"end":{"line":1002,"column":45}},"538":{"start":{"line":1006,"column":4},"end":{"line":1006,"column":59}},"539":{"start":{"line":1009,"column":4},"end":{"line":1014,"column":7}},"540":{"start":{"line":1010,"column":6},"end":{"line":1012,"column":7}},"541":{"start":{"line":1011,"column":8},"end":{"line":1011,"column":28}},"542":{"start":{"line":1013,"column":6},"end":{"line":1013,"column":44}},"543":{"start":{"line":1017,"column":4},"end":{"line":1017,"column":42}},"544":{"start":{"line":1020,"column":4},"end":{"line":1020,"column":30}},"545":{"start":{"line":1021,"column":4},"end":{"line":1021,"column":29}},"546":{"start":{"line":1024,"column":20},"end":{"line":1024,"column":32}},"547":{"start":{"line":1025,"column":4},"end":{"line":1047,"column":6}},"548":{"start":{"line":1026,"column":22},"end":{"line":1026,"column":30}},"549":{"start":{"line":1027,"column":22},"end":{"line":1027,"column":30}},"550":{"start":{"line":1028,"column":6},"end":{"line":1030,"column":7}},"551":{"start":{"line":1029,"column":8},"end":{"line":1029,"column":17}},"552":{"start":{"line":1031,"column":6},"end":{"line":1033,"column":7}},"553":{"start":{"line":1032,"column":8},"end":{"line":1032,"column":18}},"554":{"start":{"line":1034,"column":6},"end":{"line":1036,"column":7}},"555":{"start":{"line":1035,"column":8},"end":{"line":1035,"column":17}},"556":{"start":{"line":1037,"column":6},"end":{"line":1039,"column":7}},"557":{"start":{"line":1038,"column":8},"end":{"line":1038,"column":17}},"558":{"start":{"line":1040,"column":6},"end":{"line":1042,"column":7}},"559":{"start":{"line":1041,"column":8},"end":{"line":1041,"column":18}},"560":{"start":{"line":1043,"column":6},"end":{"line":1046,"column":8}},"561":{"start":{"line":1050,"column":17},"end":{"line":1050,"column":29}},"562":{"start":{"line":1051,"column":17},"end":{"line":1051,"column":32}},"563":{"start":{"line":1052,"column":28},"end":{"line":1052,"column":30}},"564":{"start":{"line":1053,"column":4},"end":{"line":1058,"column":5}},"565":{"start":{"line":1053,"column":19},"end":{"line":1053,"column":20}},"566":{"start":{"line":1054,"column":6},"end":{"line":1054,"column":32}},"567":{"start":{"line":1055,"column":6},"end":{"line":1057,"column":7}},"568":{"start":{"line":1055,"column":21},"end":{"line":1055,"column":22}},"569":{"start":{"line":1056,"column":8},"end":{"line":1056,"column":52}},"570":{"start":{"line":1059,"column":4},"end":{"line":1059,"column":27}},"571":{"start":{"line":1062,"column":22},"end":{"line":1062,"column":24}},"572":{"start":{"line":1063,"column":19},"end":{"line":1063,"column":33}},"573":{"start":{"line":1064,"column":22},"end":{"line":1064,"column":39}},"574":{"start":{"line":1065,"column":4},"end":{"line":1087,"column":5}},"575":{"start":{"line":1066,"column":28},"end":{"line":1066,"column":53}},"576":{"start":{"line":1067,"column":31},"end":{"line":1067,"column":59}},"577":{"start":{"line":1068,"column":6},"end":{"line":1068,"column":51}},"578":{"start":{"line":1069,"column":6},"end":{"line":1069,"column":60}},"579":{"start":{"line":1070,"column":6},"end":{"line":1082,"column":7}},"580":{"start":{"line":1071,"column":18},"end":{"line":1071,"column":44}},"581":{"start":{"line":1072,"column":8},"end":{"line":1074,"column":9}},"582":{"start":{"line":1072,"column":21},"end":{"line":1072,"column":22}},"583":{"start":{"line":1073,"column":10},"end":{"line":1073,"column":28}},"584":{"start":{"line":1075,"column":13},"end":{"line":1082,"column":7}},"585":{"start":{"line":1076,"column":21},"end":{"line":1076,"column":48}},"586":{"start":{"line":1077,"column":8},"end":{"line":1079,"column":9}},"587":{"start":{"line":1077,"column":21},"end":{"line":1077,"column":22}},"588":{"start":{"line":1078,"column":10},"end":{"line":1078,"column":37}},"589":{"start":{"line":1081,"column":8},"end":{"line":1081,"column":99}},"590":{"start":{"line":1084,"column":6},"end":{"line":1086,"column":7}},"591":{"start":{"line":1084,"column":19},"end":{"line":1084,"column":20}},"592":{"start":{"line":1085,"column":8},"end":{"line":1085,"column":36}},"593":{"start":{"line":1088,"column":19},"end":{"line":1088,"column":21}},"594":{"start":{"line":1089,"column":4},"end":{"line":1092,"column":5}},"595":{"start":{"line":1089,"column":17},"end":{"line":1089,"column":18}},"596":{"start":{"line":1090,"column":20},"end":{"line":1090,"column":32}},"597":{"start":{"line":1091,"column":6},"end":{"line":1091,"column":95}},"598":{"start":{"line":1093,"column":21},"end":{"line":1093,"column":72}},"599":{"start":{"line":1094,"column":4},"end":{"line":1094,"column":63}},"600":{"start":{"line":1095,"column":4},"end":{"line":1095,"column":20}},"601":{"start":{"line":1099,"column":21},"end":{"line":1099,"column":35}},"602":{"start":{"line":1100,"column":19},"end":{"line":1100,"column":35}},"603":{"start":{"line":1101,"column":20},"end":{"line":1101,"column":37}},"604":{"start":{"line":1102,"column":21},"end":{"line":1102,"column":41}},"605":{"start":{"line":1103,"column":24},"end":{"line":1103,"column":47}},"606":{"start":{"line":1104,"column":4},"end":{"line":1201,"column":5}},"607":{"start":{"line":1105,"column":46},"end":{"line":1111,"column":7}},"608":{"start":{"line":1112,"column":6},"end":{"line":1200,"column":7}},"609":{"start":{"line":1113,"column":8},"end":{"line":1171,"column":9}},"610":{"start":{"line":1114,"column":31},"end":{"line":1120,"column":11}},"611":{"start":{"line":1121,"column":10},"end":{"line":1132,"column":11}},"612":{"start":{"line":1122,"column":12},"end":{"line":1131,"column":15}},"613":{"start":{"line":1123,"column":14},"end":{"line":1125,"column":15}},"614":{"start":{"line":1124,"column":16},"end":{"line":1124,"column":23}},"615":{"start":{"line":1126,"column":24},"end":{"line":1126,"column":38}},"616":{"start":{"line":1127,"column":14},"end":{"line":1129,"column":15}},"617":{"start":{"line":1128,"column":16},"end":{"line":1128,"column":31}},"618":{"start":{"line":1130,"column":14},"end":{"line":1130,"column":66}},"619":{"start":{"line":1134,"column":36},"end":{"line":1138,"column":11}},"620":{"start":{"line":1139,"column":10},"end":{"line":1170,"column":11}},"621":{"start":{"line":1140,"column":12},"end":{"line":1169,"column":15}},"622":{"start":{"line":1141,"column":33},"end":{"line":1141,"column":57}},"623":{"start":{"line":1142,"column":14},"end":{"line":1150,"column":15}},"624":{"start":{"line":1143,"column":16},"end":{"line":1143,"column":65}},"625":{"start":{"line":1144,"column":21},"end":{"line":1150,"column":15}},"626":{"start":{"line":1145,"column":16},"end":{"line":1145,"column":66}},"627":{"start":{"line":1146,"column":21},"end":{"line":1150,"column":15}},"628":{"start":{"line":1147,"column":16},"end":{"line":1147,"column":66}},"629":{"start":{"line":1148,"column":21},"end":{"line":1150,"column":15}},"630":{"start":{"line":1149,"column":16},"end":{"line":1149,"column":67}},"631":{"start":{"line":1152,"column":14},"end":{"line":1158,"column":15}},"632":{"start":{"line":1153,"column":16},"end":{"line":1153,"column":43}},"633":{"start":{"line":1154,"column":21},"end":{"line":1158,"column":15}},"634":{"start":{"line":1155,"column":16},"end":{"line":1155,"column":42}},"635":{"start":{"line":1157,"column":16},"end":{"line":1157,"column":91}},"636":{"start":{"line":1159,"column":14},"end":{"line":1168,"column":15}},"637":{"start":{"line":1160,"column":16},"end":{"line":1167,"column":19}},"638":{"start":{"line":1161,"column":18},"end":{"line":1166,"column":19}},"639":{"start":{"line":1162,"column":20},"end":{"line":1164,"column":21}},"640":{"start":{"line":1163,"column":22},"end":{"line":1163,"column":52}},"641":{"start":{"line":1165,"column":20},"end":{"line":1165,"column":67}},"642":{"start":{"line":1172,"column":8},"end":{"line":1198,"column":9}},"643":{"start":{"line":1173,"column":10},"end":{"line":1197,"column":11}},"644":{"start":{"line":1174,"column":33},"end":{"line":1174,"column":41}},"645":{"start":{"line":1175,"column":12},"end":{"line":1189,"column":13}},"646":{"start":{"line":1175,"column":25},"end":{"line":1175,"column":30}},"647":{"start":{"line":1176,"column":14},"end":{"line":1188,"column":16}},"648":{"start":{"line":1190,"column":12},"end":{"line":1196,"column":14}},"649":{"start":{"line":1199,"column":8},"end":{"line":1199,"column":15}},"650":{"start":{"line":1202,"column":4},"end":{"line":1216,"column":5}},"651":{"start":{"line":1202,"column":17},"end":{"line":1202,"column":18}},"652":{"start":{"line":1203,"column":6},"end":{"line":1215,"column":8}},"653":{"start":{"line":1217,"column":4},"end":{"line":1223,"column":6}},"654":{"start":{"line":1227,"column":25},"end":{"line":1227,"column":58}},"655":{"start":{"line":1228,"column":4},"end":{"line":1230,"column":5}},"656":{"start":{"line":1229,"column":6},"end":{"line":1229,"column":21}},"657":{"start":{"line":1231,"column":4},"end":{"line":1285,"column":5}},"658":{"start":{"line":1232,"column":6},"end":{"line":1282,"column":7}},"659":{"start":{"line":1233,"column":8},"end":{"line":1233,"column":41}},"660":{"start":{"line":1234,"column":13},"end":{"line":1282,"column":7}},"661":{"start":{"line":1235,"column":8},"end":{"line":1235,"column":40}},"662":{"start":{"line":1237,"column":8},"end":{"line":1281,"column":9}},"663":{"start":{"line":1239,"column":12},"end":{"line":1239,"column":63}},"664":{"start":{"line":1240,"column":12},"end":{"line":1240,"column":18}},"665":{"start":{"line":1242,"column":12},"end":{"line":1242,"column":64}},"666":{"start":{"line":1243,"column":12},"end":{"line":1243,"column":18}},"667":{"start":{"line":1245,"column":12},"end":{"line":1245,"column":67}},"668":{"start":{"line":1246,"column":12},"end":{"line":1246,"column":18}},"669":{"start":{"line":1248,"column":12},"end":{"line":1248,"column":66}},"670":{"start":{"line":1249,"column":12},"end":{"line":1249,"column":18}},"671":{"start":{"line":1251,"column":12},"end":{"line":1251,"column":62}},"672":{"start":{"line":1252,"column":12},"end":{"line":1252,"column":18}},"673":{"start":{"line":1254,"column":12},"end":{"line":1258,"column":13}},"674":{"start":{"line":1255,"column":14},"end":{"line":1255,"column":75}},"675":{"start":{"line":1257,"column":14},"end":{"line":1257,"column":95}},"676":{"start":{"line":1259,"column":12},"end":{"line":1259,"column":18}},"677":{"start":{"line":1261,"column":12},"end":{"line":1261,"column":75}},"678":{"start":{"line":1262,"column":12},"end":{"line":1262,"column":18}},"679":{"start":{"line":1264,"column":12},"end":{"line":1264,"column":74}},"680":{"start":{"line":1265,"column":12},"end":{"line":1265,"column":18}},"681":{"start":{"line":1267,"column":12},"end":{"line":1267,"column":62}},"682":{"start":{"line":1268,"column":12},"end":{"line":1268,"column":18}},"683":{"start":{"line":1270,"column":12},"end":{"line":1270,"column":64}},"684":{"start":{"line":1271,"column":12},"end":{"line":1271,"column":18}},"685":{"start":{"line":1273,"column":12},"end":{"line":1273,"column":64}},"686":{"start":{"line":1274,"column":12},"end":{"line":1274,"column":18}},"687":{"start":{"line":1276,"column":12},"end":{"line":1276,"column":64}},"688":{"start":{"line":1277,"column":12},"end":{"line":1277,"column":18}},"689":{"start":{"line":1279,"column":12},"end":{"line":1279,"column":63}},"690":{"start":{"line":1280,"column":12},"end":{"line":1280,"column":18}},"691":{"start":{"line":1284,"column":6},"end":{"line":1284,"column":64}},"692":{"start":{"line":1286,"column":4},"end":{"line":1288,"column":5}},"693":{"start":{"line":1287,"column":6},"end":{"line":1287,"column":13}},"694":{"start":{"line":1289,"column":4},"end":{"line":1305,"column":5}},"695":{"start":{"line":1290,"column":6},"end":{"line":1296,"column":8}},"696":{"start":{"line":1298,"column":6},"end":{"line":1304,"column":8}},"697":{"start":{"line":1309,"column":19},"end":{"line":1309,"column":44}},"698":{"start":{"line":1310,"column":22},"end":{"line":1310,"column":50}},"699":{"start":{"line":1311,"column":4},"end":{"line":1313,"column":5}},"700":{"start":{"line":1312,"column":6},"end":{"line":1312,"column":32}},"701":{"start":{"line":1314,"column":4},"end":{"line":1316,"column":5}},"702":{"start":{"line":1315,"column":6},"end":{"line":1315,"column":38}},"703":{"start":{"line":1317,"column":19},"end":{"line":1317,"column":21}},"704":{"start":{"line":1318,"column":33},"end":{"line":1318,"column":68}},"705":{"start":{"line":1319,"column":28},"end":{"line":1319,"column":70}},"706":{"start":{"line":1320,"column":4},"end":{"line":1400,"column":5}},"707":{"start":{"line":1320,"column":17},"end":{"line":1320,"column":18}},"708":{"start":{"line":1321,"column":22},"end":{"line":1321,"column":24}},"709":{"start":{"line":1322,"column":6},"end":{"line":1398,"column":7}},"710":{"start":{"line":1322,"column":19},"end":{"line":1322,"column":20}},"711":{"start":{"line":1324,"column":8},"end":{"line":1332,"column":9}},"712":{"start":{"line":1325,"column":10},"end":{"line":1325,"column":54}},"713":{"start":{"line":1326,"column":15},"end":{"line":1332,"column":9}},"714":{"start":{"line":1327,"column":10},"end":{"line":1327,"column":54}},"715":{"start":{"line":1328,"column":15},"end":{"line":1332,"column":9}},"716":{"start":{"line":1329,"column":10},"end":{"line":1329,"column":54}},"717":{"start":{"line":1331,"column":10},"end":{"line":1331,"column":54}},"718":{"start":{"line":1334,"column":8},"end":{"line":1342,"column":9}},"719":{"start":{"line":1335,"column":10},"end":{"line":1335,"column":56}},"720":{"start":{"line":1336,"column":15},"end":{"line":1342,"column":9}},"721":{"start":{"line":1337,"column":10},"end":{"line":1337,"column":56}},"722":{"start":{"line":1338,"column":15},"end":{"line":1342,"column":9}},"723":{"start":{"line":1339,"column":10},"end":{"line":1339,"column":56}},"724":{"start":{"line":1341,"column":10},"end":{"line":1341,"column":56}},"725":{"start":{"line":1343,"column":8},"end":{"line":1397,"column":9}},"726":{"start":{"line":1344,"column":10},"end":{"line":1394,"column":11}},"727":{"start":{"line":1345,"column":12},"end":{"line":1345,"column":38}},"728":{"start":{"line":1346,"column":17},"end":{"line":1394,"column":11}},"729":{"start":{"line":1347,"column":12},"end":{"line":1347,"column":33}},"730":{"start":{"line":1349,"column":12},"end":{"line":1393,"column":13}},"731":{"start":{"line":1351,"column":16},"end":{"line":1351,"column":56}},"732":{"start":{"line":1352,"column":16},"end":{"line":1352,"column":22}},"733":{"start":{"line":1354,"column":16},"end":{"line":1354,"column":57}},"734":{"start":{"line":1355,"column":16},"end":{"line":1355,"column":22}},"735":{"start":{"line":1357,"column":16},"end":{"line":1357,"column":60}},"736":{"start":{"line":1358,"column":16},"end":{"line":1358,"column":22}},"737":{"start":{"line":1360,"column":16},"end":{"line":1360,"column":59}},"738":{"start":{"line":1361,"column":16},"end":{"line":1361,"column":22}},"739":{"start":{"line":1363,"column":16},"end":{"line":1363,"column":55}},"740":{"start":{"line":1364,"column":16},"end":{"line":1364,"column":22}},"741":{"start":{"line":1366,"column":16},"end":{"line":1370,"column":17}},"742":{"start":{"line":1367,"column":18},"end":{"line":1367,"column":72}},"743":{"start":{"line":1369,"column":18},"end":{"line":1369,"column":88}},"744":{"start":{"line":1371,"column":16},"end":{"line":1371,"column":22}},"745":{"start":{"line":1373,"column":16},"end":{"line":1373,"column":68}},"746":{"start":{"line":1374,"column":16},"end":{"line":1374,"column":22}},"747":{"start":{"line":1376,"column":16},"end":{"line":1376,"column":67}},"748":{"start":{"line":1377,"column":16},"end":{"line":1377,"column":22}},"749":{"start":{"line":1379,"column":16},"end":{"line":1379,"column":55}},"750":{"start":{"line":1380,"column":16},"end":{"line":1380,"column":22}},"751":{"start":{"line":1382,"column":16},"end":{"line":1382,"column":57}},"752":{"start":{"line":1383,"column":16},"end":{"line":1383,"column":22}},"753":{"start":{"line":1385,"column":16},"end":{"line":1385,"column":57}},"754":{"start":{"line":1386,"column":16},"end":{"line":1386,"column":22}},"755":{"start":{"line":1388,"column":16},"end":{"line":1388,"column":57}},"756":{"start":{"line":1389,"column":16},"end":{"line":1389,"column":22}},"757":{"start":{"line":1391,"column":16},"end":{"line":1391,"column":56}},"758":{"start":{"line":1392,"column":16},"end":{"line":1392,"column":22}},"759":{"start":{"line":1396,"column":10},"end":{"line":1396,"column":61}},"760":{"start":{"line":1399,"column":6},"end":{"line":1399,"column":27}},"761":{"start":{"line":1401,"column":4},"end":{"line":1401,"column":63}},"762":{"start":{"line":1404,"column":4},"end":{"line":1406,"column":5}},"763":{"start":{"line":1405,"column":6},"end":{"line":1405,"column":28}},"764":{"start":{"line":1407,"column":4},"end":{"line":1409,"column":5}},"765":{"start":{"line":1408,"column":6},"end":{"line":1408,"column":25}},"766":{"start":{"line":1410,"column":4},"end":{"line":1412,"column":5}},"767":{"start":{"line":1411,"column":6},"end":{"line":1411,"column":28}},"768":{"start":{"line":1413,"column":4},"end":{"line":1413,"column":27}},"769":{"start":{"line":1416,"column":4},"end":{"line":1425,"column":5}},"770":{"start":{"line":1417,"column":6},"end":{"line":1417,"column":26}},"771":{"start":{"line":1418,"column":6},"end":{"line":1418,"column":41}},"772":{"start":{"line":1419,"column":6},"end":{"line":1419,"column":47}},"773":{"start":{"line":1420,"column":6},"end":{"line":1420,"column":37}},"774":{"start":{"line":1421,"column":6},"end":{"line":1421,"column":39}},"775":{"start":{"line":1422,"column":6},"end":{"line":1422,"column":38}},"776":{"start":{"line":1423,"column":6},"end":{"line":1423,"column":44}},"777":{"start":{"line":1424,"column":6},"end":{"line":1424,"column":41}},"778":{"start":{"line":1426,"column":4},"end":{"line":1426,"column":37}},"779":{"start":{"line":1427,"column":21},"end":{"line":1427,"column":40}},"780":{"start":{"line":1428,"column":26},"end":{"line":1428,"column":41}},"781":{"start":{"line":1429,"column":19},"end":{"line":1429,"column":21}},"782":{"start":{"line":1430,"column":25},"end":{"line":1430,"column":26}},"783":{"start":{"line":1431,"column":4},"end":{"line":1444,"column":5}},"784":{"start":{"line":1431,"column":17},"end":{"line":1431,"column":18}},"785":{"start":{"line":1432,"column":24},"end":{"line":1432,"column":35}},"786":{"start":{"line":1433,"column":26},"end":{"line":1433,"column":46}},"787":{"start":{"line":1434,"column":31},"end":{"line":1434,"column":49}},"788":{"start":{"line":1435,"column":6},"end":{"line":1437,"column":7}},"789":{"start":{"line":1436,"column":8},"end":{"line":1436,"column":42}},"790":{"start":{"line":1438,"column":18},"end":{"line":1438,"column":20}},"791":{"start":{"line":1439,"column":6},"end":{"line":1442,"column":7}},"792":{"start":{"line":1439,"column":19},"end":{"line":1439,"column":20}},"793":{"start":{"line":1440,"column":24},"end":{"line":1440,"column":45}},"794":{"start":{"line":1441,"column":8},"end":{"line":1441,"column":53}},"795":{"start":{"line":1443,"column":6},"end":{"line":1443,"column":23}},"796":{"start":{"line":1445,"column":4},"end":{"line":1445,"column":35}},"797":{"start":{"line":1446,"column":4},"end":{"line":1446,"column":39}},"798":{"start":{"line":1447,"column":4},"end":{"line":1447,"column":18}},"799":{"start":{"line":1450,"column":4},"end":{"line":1453,"column":5}},"800":{"start":{"line":1451,"column":6},"end":{"line":1451,"column":15}},"801":{"start":{"line":1452,"column":6},"end":{"line":1452,"column":18}},"802":{"start":{"line":1454,"column":33},"end":{"line":1462,"column":5}},"803":{"start":{"line":1463,"column":4},"end":{"line":1463,"column":57}},"804":{"start":{"line":1468,"column":4},"end":{"line":1470,"column":5}},"805":{"start":{"line":1469,"column":6},"end":{"line":1469,"column":38}},"806":{"start":{"line":1471,"column":4},"end":{"line":1473,"column":5}},"807":{"start":{"line":1472,"column":6},"end":{"line":1472,"column":49}},"808":{"start":{"line":1474,"column":4},"end":{"line":1494,"column":5}},"809":{"start":{"line":1475,"column":28},"end":{"line":1475,"column":63}},"810":{"start":{"line":1476,"column":6},"end":{"line":1478,"column":7}},"811":{"start":{"line":1477,"column":8},"end":{"line":1477,"column":54}},"812":{"start":{"line":1479,"column":6},"end":{"line":1481,"column":7}},"813":{"start":{"line":1480,"column":8},"end":{"line":1480,"column":60}},"814":{"start":{"line":1482,"column":6},"end":{"line":1484,"column":7}},"815":{"start":{"line":1483,"column":8},"end":{"line":1483,"column":58}},"816":{"start":{"line":1485,"column":50},"end":{"line":1485,"column":81}},"817":{"start":{"line":1486,"column":6},"end":{"line":1488,"column":7}},"818":{"start":{"line":1487,"column":8},"end":{"line":1487,"column":56}},"819":{"start":{"line":1489,"column":33},"end":{"line":1489,"column":79}},"820":{"start":{"line":1490,"column":6},"end":{"line":1492,"column":7}},"821":{"start":{"line":1491,"column":8},"end":{"line":1491,"column":59}},"822":{"start":{"line":1493,"column":6},"end":{"line":1493,"column":57}},"823":{"start":{"line":1495,"column":4},"end":{"line":1497,"column":5}},"824":{"start":{"line":1496,"column":6},"end":{"line":1496,"column":57}},"825":{"start":{"line":1498,"column":4},"end":{"line":1498,"column":52}},"826":{"start":{"line":1502,"column":23},"end":{"line":1502,"column":35}},"827":{"start":{"line":1503,"column":2},"end":{"line":1503,"column":68}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":41},"end":{"line":11,"column":42}},"loc":{"start":{"line":11,"column":65},"end":{"line":26,"column":1}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":42},"end":{"line":27,"column":43}},"loc":{"start":{"line":27,"column":67},"end":{"line":33,"column":1}},"line":27},"2":{"name":"fromObjectToString","decl":{"start":{"line":34,"column":16},"end":{"line":34,"column":34}},"loc":{"start":{"line":34,"column":42},"end":{"line":36,"column":1}},"line":34},"3":{"name":"transformToValueObject","decl":{"start":{"line":37,"column":16},"end":{"line":37,"column":38}},"loc":{"start":{"line":37,"column":51},"end":{"line":50,"column":1}},"line":37},"4":{"name":"transformToValue","decl":{"start":{"line":51,"column":16},"end":{"line":51,"column":32}},"loc":{"start":{"line":51,"column":45},"end":{"line":70,"column":1}},"line":51},"5":{"name":"(anonymous_5)","decl":{"start":{"line":77,"column":2},"end":{"line":77,"column":3}},"loc":{"start":{"line":77,"column":26},"end":{"line":79,"column":3}},"line":77},"6":{"name":"(anonymous_6)","decl":{"start":{"line":85,"column":2},"end":{"line":85,"column":3}},"loc":{"start":{"line":85,"column":30},"end":{"line":97,"column":3}},"line":85},"7":{"name":"(anonymous_7)","decl":{"start":{"line":112,"column":2},"end":{"line":112,"column":3}},"loc":{"start":{"line":112,"column":24},"end":{"line":115,"column":3}},"line":112},"8":{"name":"(anonymous_8)","decl":{"start":{"line":116,"column":2},"end":{"line":116,"column":3}},"loc":{"start":{"line":116,"column":12},"end":{"line":121,"column":3}},"line":116},"9":{"name":"(anonymous_9)","decl":{"start":{"line":122,"column":2},"end":{"line":122,"column":3}},"loc":{"start":{"line":122,"column":10},"end":{"line":126,"column":3}},"line":122},"10":{"name":"(anonymous_10)","decl":{"start":{"line":123,"column":20},"end":{"line":123,"column":21}},"loc":{"start":{"line":123,"column":27},"end":{"line":125,"column":5}},"line":123},"11":{"name":"(anonymous_11)","decl":{"start":{"line":127,"column":2},"end":{"line":127,"column":3}},"loc":{"start":{"line":127,"column":16},"end":{"line":129,"column":3}},"line":127},"12":{"name":"(anonymous_12)","decl":{"start":{"line":130,"column":2},"end":{"line":130,"column":3}},"loc":{"start":{"line":130,"column":24},"end":{"line":132,"column":3}},"line":130},"13":{"name":"(anonymous_13)","decl":{"start":{"line":133,"column":2},"end":{"line":133,"column":3}},"loc":{"start":{"line":133,"column":19},"end":{"line":135,"column":3}},"line":133},"14":{"name":"(anonymous_14)","decl":{"start":{"line":136,"column":2},"end":{"line":136,"column":3}},"loc":{"start":{"line":136,"column":30},"end":{"line":138,"column":3}},"line":136},"15":{"name":"(anonymous_15)","decl":{"start":{"line":139,"column":2},"end":{"line":139,"column":3}},"loc":{"start":{"line":139,"column":26},"end":{"line":142,"column":3}},"line":139},"16":{"name":"(anonymous_16)","decl":{"start":{"line":143,"column":2},"end":{"line":143,"column":3}},"loc":{"start":{"line":143,"column":20},"end":{"line":145,"column":3}},"line":143},"17":{"name":"(anonymous_17)","decl":{"start":{"line":146,"column":2},"end":{"line":146,"column":3}},"loc":{"start":{"line":146,"column":14},"end":{"line":148,"column":3}},"line":146},"18":{"name":"(anonymous_18)","decl":{"start":{"line":149,"column":2},"end":{"line":149,"column":3}},"loc":{"start":{"line":149,"column":22},"end":{"line":151,"column":3}},"line":149},"19":{"name":"(anonymous_19)","decl":{"start":{"line":152,"column":2},"end":{"line":152,"column":3}},"loc":{"start":{"line":152,"column":15},"end":{"line":154,"column":3}},"line":152},"20":{"name":"(anonymous_20)","decl":{"start":{"line":155,"column":2},"end":{"line":155,"column":3}},"loc":{"start":{"line":155,"column":18},"end":{"line":157,"column":3}},"line":155},"21":{"name":"(anonymous_21)","decl":{"start":{"line":158,"column":2},"end":{"line":158,"column":3}},"loc":{"start":{"line":158,"column":21},"end":{"line":160,"column":3}},"line":158},"22":{"name":"(anonymous_22)","decl":{"start":{"line":161,"column":2},"end":{"line":161,"column":3}},"loc":{"start":{"line":161,"column":18},"end":{"line":163,"column":3}},"line":161},"23":{"name":"(anonymous_23)","decl":{"start":{"line":164,"column":2},"end":{"line":164,"column":3}},"loc":{"start":{"line":164,"column":23},"end":{"line":167,"column":3}},"line":164},"24":{"name":"(anonymous_24)","decl":{"start":{"line":168,"column":2},"end":{"line":168,"column":3}},"loc":{"start":{"line":168,"column":12},"end":{"line":170,"column":3}},"line":168},"25":{"name":"(anonymous_25)","decl":{"start":{"line":171,"column":2},"end":{"line":171,"column":3}},"loc":{"start":{"line":171,"column":25},"end":{"line":173,"column":3}},"line":171},"26":{"name":"(anonymous_26)","decl":{"start":{"line":174,"column":2},"end":{"line":174,"column":3}},"loc":{"start":{"line":174,"column":19},"end":{"line":176,"column":3}},"line":174},"27":{"name":"(anonymous_27)","decl":{"start":{"line":177,"column":2},"end":{"line":177,"column":3}},"loc":{"start":{"line":177,"column":28},"end":{"line":187,"column":3}},"line":177},"28":{"name":"(anonymous_28)","decl":{"start":{"line":188,"column":2},"end":{"line":188,"column":3}},"loc":{"start":{"line":188,"column":33},"end":{"line":190,"column":3}},"line":188},"29":{"name":"(anonymous_29)","decl":{"start":{"line":191,"column":2},"end":{"line":191,"column":3}},"loc":{"start":{"line":191,"column":26},"end":{"line":197,"column":3}},"line":191},"30":{"name":"(anonymous_30)","decl":{"start":{"line":198,"column":2},"end":{"line":198,"column":3}},"loc":{"start":{"line":198,"column":21},"end":{"line":209,"column":3}},"line":198},"31":{"name":"(anonymous_31)","decl":{"start":{"line":210,"column":2},"end":{"line":210,"column":3}},"loc":{"start":{"line":210,"column":21},"end":{"line":220,"column":3}},"line":210},"32":{"name":"(anonymous_32)","decl":{"start":{"line":221,"column":2},"end":{"line":221,"column":3}},"loc":{"start":{"line":221,"column":28},"end":{"line":231,"column":3}},"line":221},"33":{"name":"(anonymous_33)","decl":{"start":{"line":232,"column":2},"end":{"line":232,"column":3}},"loc":{"start":{"line":232,"column":24},"end":{"line":244,"column":3}},"line":232},"34":{"name":"(anonymous_34)","decl":{"start":{"line":234,"column":25},"end":{"line":234,"column":26}},"loc":{"start":{"line":234,"column":59},"end":{"line":242,"column":5}},"line":234},"35":{"name":"(anonymous_35)","decl":{"start":{"line":245,"column":2},"end":{"line":245,"column":3}},"loc":{"start":{"line":245,"column":25},"end":{"line":257,"column":3}},"line":245},"36":{"name":"(anonymous_36)","decl":{"start":{"line":247,"column":18},"end":{"line":247,"column":19}},"loc":{"start":{"line":247,"column":52},"end":{"line":255,"column":5}},"line":247},"37":{"name":"(anonymous_37)","decl":{"start":{"line":258,"column":2},"end":{"line":258,"column":3}},"loc":{"start":{"line":258,"column":17},"end":{"line":261,"column":3}},"line":258},"38":{"name":"(anonymous_38)","decl":{"start":{"line":262,"column":2},"end":{"line":262,"column":3}},"loc":{"start":{"line":262,"column":16},"end":{"line":265,"column":3}},"line":262},"39":{"name":"(anonymous_39)","decl":{"start":{"line":273,"column":2},"end":{"line":273,"column":3}},"loc":{"start":{"line":273,"column":18},"end":{"line":276,"column":3}},"line":273},"40":{"name":"(anonymous_40)","decl":{"start":{"line":277,"column":2},"end":{"line":277,"column":3}},"loc":{"start":{"line":277,"column":21},"end":{"line":298,"column":3}},"line":277},"41":{"name":"(anonymous_41)","decl":{"start":{"line":303,"column":2},"end":{"line":303,"column":3}},"loc":{"start":{"line":303,"column":12},"end":{"line":319,"column":3}},"line":303},"42":{"name":"(anonymous_42)","decl":{"start":{"line":324,"column":2},"end":{"line":324,"column":3}},"loc":{"start":{"line":324,"column":20},"end":{"line":357,"column":3}},"line":324},"43":{"name":"(anonymous_43)","decl":{"start":{"line":365,"column":2},"end":{"line":365,"column":3}},"loc":{"start":{"line":365,"column":31},"end":{"line":422,"column":3}},"line":365},"44":{"name":"(anonymous_44)","decl":{"start":{"line":423,"column":2},"end":{"line":423,"column":3}},"loc":{"start":{"line":423,"column":19},"end":{"line":428,"column":3}},"line":423},"45":{"name":"(anonymous_45)","decl":{"start":{"line":429,"column":2},"end":{"line":429,"column":3}},"loc":{"start":{"line":429,"column":22},"end":{"line":432,"column":3}},"line":429},"46":{"name":"(anonymous_46)","decl":{"start":{"line":433,"column":2},"end":{"line":433,"column":3}},"loc":{"start":{"line":433,"column":14},"end":{"line":440,"column":3}},"line":433},"47":{"name":"(anonymous_47)","decl":{"start":{"line":446,"column":2},"end":{"line":446,"column":3}},"loc":{"start":{"line":446,"column":107},"end":{"line":497,"column":3}},"line":446},"48":{"name":"(anonymous_48)","decl":{"start":{"line":451,"column":25},"end":{"line":451,"column":26}},"loc":{"start":{"line":451,"column":53},"end":{"line":481,"column":5}},"line":451},"49":{"name":"(anonymous_49)","decl":{"start":{"line":483,"column":27},"end":{"line":483,"column":28}},"loc":{"start":{"line":483,"column":48},"end":{"line":485,"column":7}},"line":483},"50":{"name":"(anonymous_50)","decl":{"start":{"line":487,"column":20},"end":{"line":487,"column":21}},"loc":{"start":{"line":487,"column":41},"end":{"line":489,"column":7}},"line":487},"51":{"name":"(anonymous_51)","decl":{"start":{"line":498,"column":2},"end":{"line":498,"column":3}},"loc":{"start":{"line":498,"column":106},"end":{"line":508,"column":3}},"line":498},"52":{"name":"(anonymous_52)","decl":{"start":{"line":520,"column":2},"end":{"line":520,"column":3}},"loc":{"start":{"line":520,"column":135},"end":{"line":571,"column":3}},"line":520},"53":{"name":"(anonymous_53)","decl":{"start":{"line":572,"column":2},"end":{"line":572,"column":3}},"loc":{"start":{"line":572,"column":8},"end":{"line":587,"column":3}},"line":572},"54":{"name":"(anonymous_54)","decl":{"start":{"line":574,"column":18},"end":{"line":574,"column":19}},"loc":{"start":{"line":574,"column":35},"end":{"line":585,"column":5}},"line":574},"55":{"name":"(anonymous_55)","decl":{"start":{"line":588,"column":2},"end":{"line":588,"column":3}},"loc":{"start":{"line":588,"column":8},"end":{"line":607,"column":3}},"line":588},"56":{"name":"(anonymous_56)","decl":{"start":{"line":590,"column":18},"end":{"line":590,"column":19}},"loc":{"start":{"line":590,"column":35},"end":{"line":605,"column":5}},"line":590},"57":{"name":"(anonymous_57)","decl":{"start":{"line":608,"column":2},"end":{"line":608,"column":3}},"loc":{"start":{"line":608,"column":8},"end":{"line":627,"column":3}},"line":608},"58":{"name":"(anonymous_58)","decl":{"start":{"line":610,"column":18},"end":{"line":610,"column":19}},"loc":{"start":{"line":610,"column":35},"end":{"line":625,"column":5}},"line":610},"59":{"name":"(anonymous_59)","decl":{"start":{"line":628,"column":2},"end":{"line":628,"column":3}},"loc":{"start":{"line":628,"column":10},"end":{"line":637,"column":3}},"line":628},"60":{"name":"(anonymous_60)","decl":{"start":{"line":630,"column":18},"end":{"line":630,"column":19}},"loc":{"start":{"line":630,"column":35},"end":{"line":635,"column":5}},"line":630},"61":{"name":"(anonymous_61)","decl":{"start":{"line":638,"column":2},"end":{"line":638,"column":3}},"loc":{"start":{"line":638,"column":11},"end":{"line":647,"column":3}},"line":638},"62":{"name":"(anonymous_62)","decl":{"start":{"line":640,"column":18},"end":{"line":640,"column":19}},"loc":{"start":{"line":640,"column":35},"end":{"line":645,"column":5}},"line":640},"63":{"name":"(anonymous_63)","decl":{"start":{"line":648,"column":2},"end":{"line":648,"column":3}},"loc":{"start":{"line":648,"column":15},"end":{"line":656,"column":3}},"line":648},"64":{"name":"(anonymous_64)","decl":{"start":{"line":650,"column":18},"end":{"line":650,"column":19}},"loc":{"start":{"line":650,"column":35},"end":{"line":654,"column":5}},"line":650},"65":{"name":"(anonymous_65)","decl":{"start":{"line":657,"column":2},"end":{"line":657,"column":3}},"loc":{"start":{"line":657,"column":16},"end":{"line":660,"column":3}},"line":657},"66":{"name":"(anonymous_66)","decl":{"start":{"line":661,"column":2},"end":{"line":661,"column":3}},"loc":{"start":{"line":661,"column":18},"end":{"line":664,"column":3}},"line":661},"67":{"name":"(anonymous_67)","decl":{"start":{"line":665,"column":2},"end":{"line":665,"column":3}},"loc":{"start":{"line":665,"column":20},"end":{"line":667,"column":3}},"line":665},"68":{"name":"(anonymous_68)","decl":{"start":{"line":668,"column":2},"end":{"line":668,"column":3}},"loc":{"start":{"line":668,"column":21},"end":{"line":670,"column":3}},"line":668},"69":{"name":"(anonymous_69)","decl":{"start":{"line":671,"column":2},"end":{"line":671,"column":3}},"loc":{"start":{"line":671,"column":24},"end":{"line":673,"column":3}},"line":671},"70":{"name":"(anonymous_70)","decl":{"start":{"line":674,"column":2},"end":{"line":674,"column":3}},"loc":{"start":{"line":674,"column":23},"end":{"line":676,"column":3}},"line":674},"71":{"name":"(anonymous_71)","decl":{"start":{"line":677,"column":2},"end":{"line":677,"column":3}},"loc":{"start":{"line":677,"column":19},"end":{"line":679,"column":3}},"line":677},"72":{"name":"(anonymous_72)","decl":{"start":{"line":680,"column":2},"end":{"line":680,"column":3}},"loc":{"start":{"line":680,"column":26},"end":{"line":687,"column":3}},"line":680},"73":{"name":"(anonymous_73)","decl":{"start":{"line":681,"column":20},"end":{"line":681,"column":21}},"loc":{"start":{"line":681,"column":38},"end":{"line":686,"column":5}},"line":681},"74":{"name":"(anonymous_74)","decl":{"start":{"line":688,"column":2},"end":{"line":688,"column":3}},"loc":{"start":{"line":688,"column":50},"end":{"line":690,"column":3}},"line":688},"75":{"name":"(anonymous_75)","decl":{"start":{"line":691,"column":2},"end":{"line":691,"column":3}},"loc":{"start":{"line":691,"column":32},"end":{"line":693,"column":3}},"line":691},"76":{"name":"(anonymous_76)","decl":{"start":{"line":694,"column":2},"end":{"line":694,"column":3}},"loc":{"start":{"line":694,"column":31},"end":{"line":696,"column":3}},"line":694},"77":{"name":"(anonymous_77)","decl":{"start":{"line":697,"column":2},"end":{"line":697,"column":3}},"loc":{"start":{"line":697,"column":18},"end":{"line":709,"column":3}},"line":697},"78":{"name":"(anonymous_78)","decl":{"start":{"line":698,"column":30},"end":{"line":698,"column":31}},"loc":{"start":{"line":698,"column":54},"end":{"line":707,"column":5}},"line":698},"79":{"name":"(anonymous_79)","decl":{"start":{"line":710,"column":2},"end":{"line":710,"column":3}},"loc":{"start":{"line":710,"column":23},"end":{"line":732,"column":3}},"line":710},"80":{"name":"(anonymous_80)","decl":{"start":{"line":733,"column":2},"end":{"line":733,"column":3}},"loc":{"start":{"line":733,"column":19},"end":{"line":735,"column":3}},"line":733},"81":{"name":"(anonymous_81)","decl":{"start":{"line":741,"column":2},"end":{"line":741,"column":3}},"loc":{"start":{"line":741,"column":26},"end":{"line":748,"column":3}},"line":741},"82":{"name":"(anonymous_82)","decl":{"start":{"line":742,"column":20},"end":{"line":742,"column":21}},"loc":{"start":{"line":742,"column":38},"end":{"line":747,"column":5}},"line":742},"83":{"name":"(anonymous_83)","decl":{"start":{"line":749,"column":2},"end":{"line":749,"column":3}},"loc":{"start":{"line":749,"column":9},"end":{"line":756,"column":3}},"line":749},"84":{"name":"(anonymous_84)","decl":{"start":{"line":750,"column":20},"end":{"line":750,"column":21}},"loc":{"start":{"line":750,"column":38},"end":{"line":755,"column":5}},"line":750},"85":{"name":"(anonymous_85)","decl":{"start":{"line":757,"column":2},"end":{"line":757,"column":3}},"loc":{"start":{"line":757,"column":9},"end":{"line":764,"column":3}},"line":757},"86":{"name":"(anonymous_86)","decl":{"start":{"line":758,"column":20},"end":{"line":758,"column":21}},"loc":{"start":{"line":758,"column":38},"end":{"line":763,"column":5}},"line":758},"87":{"name":"(anonymous_87)","decl":{"start":{"line":765,"column":2},"end":{"line":765,"column":3}},"loc":{"start":{"line":765,"column":8},"end":{"line":772,"column":3}},"line":765},"88":{"name":"(anonymous_88)","decl":{"start":{"line":766,"column":20},"end":{"line":766,"column":21}},"loc":{"start":{"line":766,"column":38},"end":{"line":771,"column":5}},"line":766},"89":{"name":"(anonymous_89)","decl":{"start":{"line":773,"column":2},"end":{"line":773,"column":3}},"loc":{"start":{"line":773,"column":9},"end":{"line":780,"column":3}},"line":773},"90":{"name":"(anonymous_90)","decl":{"start":{"line":774,"column":20},"end":{"line":774,"column":21}},"loc":{"start":{"line":774,"column":38},"end":{"line":779,"column":5}},"line":774},"91":{"name":"(anonymous_91)","decl":{"start":{"line":781,"column":2},"end":{"line":781,"column":3}},"loc":{"start":{"line":781,"column":9},"end":{"line":788,"column":3}},"line":781},"92":{"name":"(anonymous_92)","decl":{"start":{"line":782,"column":20},"end":{"line":782,"column":21}},"loc":{"start":{"line":782,"column":38},"end":{"line":787,"column":5}},"line":782},"93":{"name":"(anonymous_93)","decl":{"start":{"line":789,"column":2},"end":{"line":789,"column":3}},"loc":{"start":{"line":789,"column":10},"end":{"line":796,"column":3}},"line":789},"94":{"name":"(anonymous_94)","decl":{"start":{"line":790,"column":20},"end":{"line":790,"column":21}},"loc":{"start":{"line":790,"column":38},"end":{"line":795,"column":5}},"line":790},"95":{"name":"(anonymous_95)","decl":{"start":{"line":797,"column":2},"end":{"line":797,"column":3}},"loc":{"start":{"line":797,"column":8},"end":{"line":804,"column":3}},"line":797},"96":{"name":"(anonymous_96)","decl":{"start":{"line":798,"column":20},"end":{"line":798,"column":21}},"loc":{"start":{"line":798,"column":38},"end":{"line":803,"column":5}},"line":798},"97":{"name":"(anonymous_97)","decl":{"start":{"line":805,"column":2},"end":{"line":805,"column":3}},"loc":{"start":{"line":805,"column":9},"end":{"line":812,"column":3}},"line":805},"98":{"name":"(anonymous_98)","decl":{"start":{"line":806,"column":20},"end":{"line":806,"column":21}},"loc":{"start":{"line":806,"column":38},"end":{"line":811,"column":5}},"line":806},"99":{"name":"(anonymous_99)","decl":{"start":{"line":813,"column":2},"end":{"line":813,"column":3}},"loc":{"start":{"line":813,"column":9},"end":{"line":820,"column":3}},"line":813},"100":{"name":"(anonymous_100)","decl":{"start":{"line":814,"column":20},"end":{"line":814,"column":21}},"loc":{"start":{"line":814,"column":38},"end":{"line":819,"column":5}},"line":814},"101":{"name":"(anonymous_101)","decl":{"start":{"line":821,"column":2},"end":{"line":821,"column":3}},"loc":{"start":{"line":821,"column":10},"end":{"line":828,"column":3}},"line":821},"102":{"name":"(anonymous_102)","decl":{"start":{"line":822,"column":20},"end":{"line":822,"column":21}},"loc":{"start":{"line":822,"column":38},"end":{"line":827,"column":5}},"line":822},"103":{"name":"(anonymous_103)","decl":{"start":{"line":829,"column":2},"end":{"line":829,"column":3}},"loc":{"start":{"line":829,"column":8},"end":{"line":836,"column":3}},"line":829},"104":{"name":"(anonymous_104)","decl":{"start":{"line":830,"column":20},"end":{"line":830,"column":21}},"loc":{"start":{"line":830,"column":38},"end":{"line":835,"column":5}},"line":830},"105":{"name":"(anonymous_105)","decl":{"start":{"line":837,"column":2},"end":{"line":837,"column":3}},"loc":{"start":{"line":837,"column":9},"end":{"line":844,"column":3}},"line":837},"106":{"name":"(anonymous_106)","decl":{"start":{"line":838,"column":20},"end":{"line":838,"column":21}},"loc":{"start":{"line":838,"column":38},"end":{"line":843,"column":5}},"line":838},"107":{"name":"(anonymous_107)","decl":{"start":{"line":845,"column":2},"end":{"line":845,"column":3}},"loc":{"start":{"line":845,"column":9},"end":{"line":852,"column":3}},"line":845},"108":{"name":"(anonymous_108)","decl":{"start":{"line":846,"column":20},"end":{"line":846,"column":21}},"loc":{"start":{"line":846,"column":38},"end":{"line":851,"column":5}},"line":846},"109":{"name":"(anonymous_109)","decl":{"start":{"line":853,"column":2},"end":{"line":853,"column":3}},"loc":{"start":{"line":853,"column":10},"end":{"line":860,"column":3}},"line":853},"110":{"name":"(anonymous_110)","decl":{"start":{"line":854,"column":20},"end":{"line":854,"column":21}},"loc":{"start":{"line":854,"column":38},"end":{"line":859,"column":5}},"line":854},"111":{"name":"(anonymous_111)","decl":{"start":{"line":861,"column":2},"end":{"line":861,"column":3}},"loc":{"start":{"line":861,"column":21},"end":{"line":863,"column":3}},"line":861},"112":{"name":"(anonymous_112)","decl":{"start":{"line":864,"column":2},"end":{"line":864,"column":3}},"loc":{"start":{"line":864,"column":28},"end":{"line":871,"column":3}},"line":864},"113":{"name":"(anonymous_113)","decl":{"start":{"line":865,"column":20},"end":{"line":865,"column":21}},"loc":{"start":{"line":865,"column":38},"end":{"line":870,"column":5}},"line":865},"114":{"name":"(anonymous_114)","decl":{"start":{"line":872,"column":2},"end":{"line":872,"column":3}},"loc":{"start":{"line":872,"column":17},"end":{"line":876,"column":3}},"line":872},"115":{"name":"(anonymous_115)","decl":{"start":{"line":877,"column":2},"end":{"line":877,"column":3}},"loc":{"start":{"line":877,"column":11},"end":{"line":891,"column":3}},"line":877},"116":{"name":"(anonymous_116)","decl":{"start":{"line":911,"column":2},"end":{"line":911,"column":3}},"loc":{"start":{"line":911,"column":16},"end":{"line":935,"column":3}},"line":911},"117":{"name":"(anonymous_117)","decl":{"start":{"line":914,"column":18},"end":{"line":914,"column":19}},"loc":{"start":{"line":914,"column":35},"end":{"line":923,"column":5}},"line":914},"118":{"name":"(anonymous_118)","decl":{"start":{"line":944,"column":2},"end":{"line":944,"column":3}},"loc":{"start":{"line":944,"column":16},"end":{"line":950,"column":3}},"line":944},"119":{"name":"(anonymous_119)","decl":{"start":{"line":951,"column":2},"end":{"line":951,"column":3}},"loc":{"start":{"line":951,"column":8},"end":{"line":958,"column":3}},"line":951},"120":{"name":"(anonymous_120)","decl":{"start":{"line":952,"column":20},"end":{"line":952,"column":21}},"loc":{"start":{"line":952,"column":38},"end":{"line":957,"column":5}},"line":952},"121":{"name":"(anonymous_121)","decl":{"start":{"line":959,"column":2},"end":{"line":959,"column":3}},"loc":{"start":{"line":959,"column":10},"end":{"line":966,"column":3}},"line":959},"122":{"name":"(anonymous_122)","decl":{"start":{"line":960,"column":20},"end":{"line":960,"column":21}},"loc":{"start":{"line":960,"column":38},"end":{"line":965,"column":5}},"line":960},"123":{"name":"(anonymous_123)","decl":{"start":{"line":967,"column":2},"end":{"line":967,"column":3}},"loc":{"start":{"line":967,"column":8},"end":{"line":974,"column":3}},"line":967},"124":{"name":"(anonymous_124)","decl":{"start":{"line":968,"column":20},"end":{"line":968,"column":21}},"loc":{"start":{"line":968,"column":38},"end":{"line":973,"column":5}},"line":968},"125":{"name":"(anonymous_125)","decl":{"start":{"line":975,"column":2},"end":{"line":975,"column":3}},"loc":{"start":{"line":975,"column":8},"end":{"line":982,"column":3}},"line":975},"126":{"name":"(anonymous_126)","decl":{"start":{"line":976,"column":20},"end":{"line":976,"column":21}},"loc":{"start":{"line":976,"column":38},"end":{"line":981,"column":5}},"line":976},"127":{"name":"(anonymous_127)","decl":{"start":{"line":983,"column":2},"end":{"line":983,"column":3}},"loc":{"start":{"line":983,"column":21},"end":{"line":985,"column":3}},"line":983},"128":{"name":"(anonymous_128)","decl":{"start":{"line":986,"column":2},"end":{"line":986,"column":3}},"loc":{"start":{"line":986,"column":28},"end":{"line":993,"column":3}},"line":986},"129":{"name":"(anonymous_129)","decl":{"start":{"line":987,"column":20},"end":{"line":987,"column":21}},"loc":{"start":{"line":987,"column":38},"end":{"line":992,"column":5}},"line":987},"130":{"name":"(anonymous_130)","decl":{"start":{"line":994,"column":2},"end":{"line":994,"column":3}},"loc":{"start":{"line":994,"column":21},"end":{"line":996,"column":3}},"line":994},"131":{"name":"(anonymous_131)","decl":{"start":{"line":997,"column":2},"end":{"line":997,"column":3}},"loc":{"start":{"line":997,"column":28},"end":{"line":1004,"column":3}},"line":997},"132":{"name":"(anonymous_132)","decl":{"start":{"line":998,"column":20},"end":{"line":998,"column":21}},"loc":{"start":{"line":998,"column":38},"end":{"line":1003,"column":5}},"line":998},"133":{"name":"(anonymous_133)","decl":{"start":{"line":1005,"column":2},"end":{"line":1005,"column":3}},"loc":{"start":{"line":1005,"column":20},"end":{"line":1007,"column":3}},"line":1005},"134":{"name":"(anonymous_134)","decl":{"start":{"line":1008,"column":2},"end":{"line":1008,"column":3}},"loc":{"start":{"line":1008,"column":27},"end":{"line":1015,"column":3}},"line":1008},"135":{"name":"(anonymous_135)","decl":{"start":{"line":1009,"column":20},"end":{"line":1009,"column":21}},"loc":{"start":{"line":1009,"column":38},"end":{"line":1014,"column":5}},"line":1009},"136":{"name":"(anonymous_136)","decl":{"start":{"line":1016,"column":2},"end":{"line":1016,"column":3}},"loc":{"start":{"line":1016,"column":12},"end":{"line":1018,"column":3}},"line":1016},"137":{"name":"(anonymous_137)","decl":{"start":{"line":1019,"column":2},"end":{"line":1019,"column":3}},"loc":{"start":{"line":1019,"column":16},"end":{"line":1022,"column":3}},"line":1019},"138":{"name":"(anonymous_138)","decl":{"start":{"line":1023,"column":2},"end":{"line":1023,"column":3}},"loc":{"start":{"line":1023,"column":15},"end":{"line":1048,"column":3}},"line":1023},"139":{"name":"(anonymous_139)","decl":{"start":{"line":1025,"column":11},"end":{"line":1025,"column":12}},"loc":{"start":{"line":1025,"column":21},"end":{"line":1047,"column":5}},"line":1025},"140":{"name":"(anonymous_140)","decl":{"start":{"line":1049,"column":2},"end":{"line":1049,"column":3}},"loc":{"start":{"line":1049,"column":25},"end":{"line":1060,"column":3}},"line":1049},"141":{"name":"(anonymous_141)","decl":{"start":{"line":1061,"column":2},"end":{"line":1061,"column":3}},"loc":{"start":{"line":1061,"column":76},"end":{"line":1096,"column":3}},"line":1061},"142":{"name":"(anonymous_142)","decl":{"start":{"line":1098,"column":2},"end":{"line":1098,"column":3}},"loc":{"start":{"line":1098,"column":97},"end":{"line":1224,"column":3}},"line":1098},"143":{"name":"(anonymous_143)","decl":{"start":{"line":1122,"column":33},"end":{"line":1122,"column":34}},"loc":{"start":{"line":1122,"column":42},"end":{"line":1131,"column":13}},"line":1122},"144":{"name":"(anonymous_144)","decl":{"start":{"line":1140,"column":38},"end":{"line":1140,"column":39}},"loc":{"start":{"line":1140,"column":66},"end":{"line":1169,"column":13}},"line":1140},"145":{"name":"(anonymous_145)","decl":{"start":{"line":1160,"column":37},"end":{"line":1160,"column":38}},"loc":{"start":{"line":1160,"column":48},"end":{"line":1167,"column":17}},"line":1160},"146":{"name":"(anonymous_146)","decl":{"start":{"line":1226,"column":2},"end":{"line":1226,"column":3}},"loc":{"start":{"line":1226,"column":144},"end":{"line":1306,"column":3}},"line":1226},"147":{"name":"(anonymous_147)","decl":{"start":{"line":1308,"column":2},"end":{"line":1308,"column":3}},"loc":{"start":{"line":1308,"column":81},"end":{"line":1402,"column":3}},"line":1308},"148":{"name":"(anonymous_148)","decl":{"start":{"line":1403,"column":2},"end":{"line":1403,"column":3}},"loc":{"start":{"line":1403,"column":40},"end":{"line":1414,"column":3}},"line":1403},"149":{"name":"(anonymous_149)","decl":{"start":{"line":1415,"column":2},"end":{"line":1415,"column":3}},"loc":{"start":{"line":1415,"column":25},"end":{"line":1448,"column":3}},"line":1415},"150":{"name":"(anonymous_150)","decl":{"start":{"line":1449,"column":2},"end":{"line":1449,"column":3}},"loc":{"start":{"line":1449,"column":72},"end":{"line":1464,"column":3}},"line":1449},"151":{"name":"(anonymous_151)","decl":{"start":{"line":1467,"column":2},"end":{"line":1467,"column":3}},"loc":{"start":{"line":1467,"column":26},"end":{"line":1499,"column":3}},"line":1467},"152":{"name":"isStringWrappedByDoubleQuotes","decl":{"start":{"line":1501,"column":9},"end":{"line":1501,"column":38}},"loc":{"start":{"line":1501,"column":46},"end":{"line":1504,"column":1}},"line":1501}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":3},"end":{"line":26,"column":26}},"type":"binary-expr","locations":[{"start":{"line":26,"column":3},"end":{"line":26,"column":20}},{"start":{"line":26,"column":24},"end":{"line":26,"column":26}}],"line":26},"1":{"loc":{"start":{"line":33,"column":3},"end":{"line":33,"column":27}},"type":"binary-expr","locations":[{"start":{"line":33,"column":3},"end":{"line":33,"column":21}},{"start":{"line":33,"column":25},"end":{"line":33,"column":27}}],"line":33},"2":{"loc":{"start":{"line":37,"column":39},"end":{"line":37,"column":49}},"type":"default-arg","locations":[{"start":{"line":37,"column":47},"end":{"line":37,"column":49}}],"line":37},"3":{"loc":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},{"start":{},"end":{}}],"line":41},"4":{"loc":{"start":{"line":51,"column":33},"end":{"line":51,"column":43}},"type":"default-arg","locations":[{"start":{"line":51,"column":41},"end":{"line":51,"column":43}}],"line":51},"5":{"loc":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},{"start":{},"end":{}}],"line":55},"6":{"loc":{"start":{"line":60,"column":6},"end":{"line":66,"column":7}},"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":66,"column":7}},{"start":{"line":62,"column":13},"end":{"line":66,"column":7}}],"line":60},"7":{"loc":{"start":{"line":62,"column":13},"end":{"line":66,"column":7}},"type":"if","locations":[{"start":{"line":62,"column":13},"end":{"line":66,"column":7}},{"start":{"line":64,"column":13},"end":{"line":66,"column":7}}],"line":62},"8":{"loc":{"start":{"line":90,"column":19},"end":{"line":90,"column":39}},"type":"binary-expr","locations":[{"start":{"line":90,"column":19},"end":{"line":90,"column":34}},{"start":{"line":90,"column":38},"end":{"line":90,"column":39}}],"line":90},"9":{"loc":{"start":{"line":113,"column":10},"end":{"line":113,"column":80}},"type":"cond-expr","locations":[{"start":{"line":113,"column":41},"end":{"line":113,"column":49}},{"start":{"line":113,"column":52},"end":{"line":113,"column":80}}],"line":113},"10":{"loc":{"start":{"line":175,"column":11},"end":{"line":175,"column":60}},"type":"binary-expr","locations":[{"start":{"line":175,"column":11},"end":{"line":175,"column":38}},{"start":{"line":175,"column":42},"end":{"line":175,"column":60}}],"line":175},"11":{"loc":{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},{"start":{},"end":{}}],"line":179},"12":{"loc":{"start":{"line":183,"column":4},"end":{"line":185,"column":5}},"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":185,"column":5}},{"start":{},"end":{}}],"line":183},"13":{"loc":{"start":{"line":189,"column":11},"end":{"line":189,"column":54}},"type":"binary-expr","locations":[{"start":{"line":189,"column":11},"end":{"line":189,"column":32}},{"start":{"line":189,"column":36},"end":{"line":189,"column":54}}],"line":189},"14":{"loc":{"start":{"line":192,"column":4},"end":{"line":194,"column":5}},"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":194,"column":5}},{"start":{},"end":{}}],"line":192},"15":{"loc":{"start":{"line":192,"column":8},"end":{"line":192,"column":60}},"type":"binary-expr","locations":[{"start":{"line":192,"column":8},"end":{"line":192,"column":29}},{"start":{"line":192,"column":33},"end":{"line":192,"column":60}}],"line":192},"16":{"loc":{"start":{"line":215,"column":8},"end":{"line":217,"column":9}},"type":"if","locations":[{"start":{"line":215,"column":8},"end":{"line":217,"column":9}},{"start":{},"end":{}}],"line":215},"17":{"loc":{"start":{"line":215,"column":21},"end":{"line":215,"column":60}},"type":"binary-expr","locations":[{"start":{"line":215,"column":21},"end":{"line":215,"column":38}},{"start":{"line":215,"column":42},"end":{"line":215,"column":60}}],"line":215},"18":{"loc":{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},"type":"if","locations":[{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},{"start":{},"end":{}}],"line":226},"19":{"loc":{"start":{"line":226,"column":21},"end":{"line":226,"column":60}},"type":"binary-expr","locations":[{"start":{"line":226,"column":21},"end":{"line":226,"column":38}},{"start":{"line":226,"column":42},"end":{"line":226,"column":60}}],"line":226},"20":{"loc":{"start":{"line":235,"column":6},"end":{"line":241,"column":7}},"type":"if","locations":[{"start":{"line":235,"column":6},"end":{"line":241,"column":7}},{"start":{},"end":{}}],"line":235},"21":{"loc":{"start":{"line":235,"column":10},"end":{"line":235,"column":57}},"type":"binary-expr","locations":[{"start":{"line":235,"column":10},"end":{"line":235,"column":28}},{"start":{"line":235,"column":32},"end":{"line":235,"column":57}}],"line":235},"22":{"loc":{"start":{"line":248,"column":6},"end":{"line":254,"column":7}},"type":"if","locations":[{"start":{"line":248,"column":6},"end":{"line":254,"column":7}},{"start":{},"end":{}}],"line":248},"23":{"loc":{"start":{"line":248,"column":10},"end":{"line":248,"column":57}},"type":"binary-expr","locations":[{"start":{"line":248,"column":10},"end":{"line":248,"column":28}},{"start":{"line":248,"column":32},"end":{"line":248,"column":57}}],"line":248},"24":{"loc":{"start":{"line":260,"column":11},"end":{"line":260,"column":92}},"type":"binary-expr","locations":[{"start":{"line":260,"column":11},"end":{"line":260,"column":42}},{"start":{"line":260,"column":46},"end":{"line":260,"column":64}},{"start":{"line":260,"column":68},"end":{"line":260,"column":92}}],"line":260},"25":{"loc":{"start":{"line":264,"column":11},"end":{"line":264,"column":88}},"type":"binary-expr","locations":[{"start":{"line":264,"column":11},"end":{"line":264,"column":38}},{"start":{"line":264,"column":42},"end":{"line":264,"column":60}},{"start":{"line":264,"column":64},"end":{"line":264,"column":88}}],"line":264},"26":{"loc":{"start":{"line":280,"column":4},"end":{"line":282,"column":5}},"type":"if","locations":[{"start":{"line":280,"column":4},"end":{"line":282,"column":5}},{"start":{},"end":{}}],"line":280},"27":{"loc":{"start":{"line":280,"column":8},"end":{"line":280,"column":90}},"type":"binary-expr","locations":[{"start":{"line":280,"column":8},"end":{"line":280,"column":44}},{"start":{"line":280,"column":48},"end":{"line":280,"column":90}}],"line":280},"28":{"loc":{"start":{"line":288,"column":8},"end":{"line":290,"column":9}},"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":290,"column":9}},{"start":{},"end":{}}],"line":288},"29":{"loc":{"start":{"line":288,"column":12},"end":{"line":288,"column":50}},"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":28}},{"start":{"line":288,"column":32},"end":{"line":288,"column":50}}],"line":288},"30":{"loc":{"start":{"line":291,"column":8},"end":{"line":294,"column":9}},"type":"if","locations":[{"start":{"line":291,"column":8},"end":{"line":294,"column":9}},{"start":{},"end":{}}],"line":291},"31":{"loc":{"start":{"line":304,"column":4},"end":{"line":306,"column":5}},"type":"if","locations":[{"start":{"line":304,"column":4},"end":{"line":306,"column":5}},{"start":{},"end":{}}],"line":304},"32":{"loc":{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},"type":"if","locations":[{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},{"start":{},"end":{}}],"line":325},"33":{"loc":{"start":{"line":336,"column":8},"end":{"line":339,"column":9}},"type":"if","locations":[{"start":{"line":336,"column":8},"end":{"line":339,"column":9}},{"start":{},"end":{}}],"line":336},"34":{"loc":{"start":{"line":336,"column":12},"end":{"line":336,"column":62}},"type":"binary-expr","locations":[{"start":{"line":336,"column":12},"end":{"line":336,"column":25}},{"start":{"line":336,"column":29},"end":{"line":336,"column":44}},{"start":{"line":336,"column":48},"end":{"line":336,"column":62}}],"line":336},"35":{"loc":{"start":{"line":340,"column":8},"end":{"line":346,"column":9}},"type":"if","locations":[{"start":{"line":340,"column":8},"end":{"line":346,"column":9}},{"start":{"line":343,"column":15},"end":{"line":346,"column":9}}],"line":340},"36":{"loc":{"start":{"line":372,"column":4},"end":{"line":376,"column":5}},"type":"if","locations":[{"start":{"line":372,"column":4},"end":{"line":376,"column":5}},{"start":{},"end":{}}],"line":372},"37":{"loc":{"start":{"line":373,"column":17},"end":{"line":373,"column":33}},"type":"binary-expr","locations":[{"start":{"line":373,"column":17},"end":{"line":373,"column":28}},{"start":{"line":373,"column":32},"end":{"line":373,"column":33}}],"line":373},"38":{"loc":{"start":{"line":374,"column":16},"end":{"line":374,"column":45}},"type":"binary-expr","locations":[{"start":{"line":374,"column":16},"end":{"line":374,"column":27}},{"start":{"line":374,"column":31},"end":{"line":374,"column":45}}],"line":374},"39":{"loc":{"start":{"line":375,"column":16},"end":{"line":375,"column":32}},"type":"binary-expr","locations":[{"start":{"line":375,"column":16},"end":{"line":375,"column":27}},{"start":{"line":375,"column":31},"end":{"line":375,"column":32}}],"line":375},"40":{"loc":{"start":{"line":377,"column":4},"end":{"line":381,"column":5}},"type":"if","locations":[{"start":{"line":377,"column":4},"end":{"line":381,"column":5}},{"start":{},"end":{}}],"line":377},"41":{"loc":{"start":{"line":378,"column":20},"end":{"line":378,"column":39}},"type":"binary-expr","locations":[{"start":{"line":378,"column":20},"end":{"line":378,"column":34}},{"start":{"line":378,"column":38},"end":{"line":378,"column":39}}],"line":378},"42":{"loc":{"start":{"line":379,"column":19},"end":{"line":379,"column":54}},"type":"binary-expr","locations":[{"start":{"line":379,"column":19},"end":{"line":379,"column":33}},{"start":{"line":379,"column":37},"end":{"line":379,"column":54}}],"line":379},"43":{"loc":{"start":{"line":380,"column":19},"end":{"line":380,"column":38}},"type":"binary-expr","locations":[{"start":{"line":380,"column":19},"end":{"line":380,"column":33}},{"start":{"line":380,"column":37},"end":{"line":380,"column":38}}],"line":380},"44":{"loc":{"start":{"line":382,"column":4},"end":{"line":384,"column":5}},"type":"if","locations":[{"start":{"line":382,"column":4},"end":{"line":384,"column":5}},{"start":{},"end":{}}],"line":382},"45":{"loc":{"start":{"line":382,"column":8},"end":{"line":382,"column":70}},"type":"binary-expr","locations":[{"start":{"line":382,"column":8},"end":{"line":382,"column":34}},{"start":{"line":382,"column":38},"end":{"line":382,"column":70}}],"line":382},"46":{"loc":{"start":{"line":387,"column":4},"end":{"line":389,"column":5}},"type":"if","locations":[{"start":{"line":387,"column":4},"end":{"line":389,"column":5}},{"start":{},"end":{}}],"line":387},"47":{"loc":{"start":{"line":396,"column":6},"end":{"line":398,"column":7}},"type":"if","locations":[{"start":{"line":396,"column":6},"end":{"line":398,"column":7}},{"start":{},"end":{}}],"line":396},"48":{"loc":{"start":{"line":400,"column":8},"end":{"line":402,"column":9}},"type":"if","locations":[{"start":{"line":400,"column":8},"end":{"line":402,"column":9}},{"start":{},"end":{}}],"line":400},"49":{"loc":{"start":{"line":404,"column":19},"end":{"line":404,"column":52}},"type":"binary-expr","locations":[{"start":{"line":404,"column":19},"end":{"line":404,"column":30}},{"start":{"line":404,"column":34},"end":{"line":404,"column":52}}],"line":404},"50":{"loc":{"start":{"line":405,"column":8},"end":{"line":407,"column":9}},"type":"if","locations":[{"start":{"line":405,"column":8},"end":{"line":407,"column":9}},{"start":{},"end":{}}],"line":405},"51":{"loc":{"start":{"line":413,"column":4},"end":{"line":415,"column":5}},"type":"if","locations":[{"start":{"line":413,"column":4},"end":{"line":415,"column":5}},{"start":{},"end":{}}],"line":413},"52":{"loc":{"start":{"line":413,"column":8},"end":{"line":413,"column":53}},"type":"binary-expr","locations":[{"start":{"line":413,"column":8},"end":{"line":413,"column":27}},{"start":{"line":413,"column":31},"end":{"line":413,"column":53}}],"line":413},"53":{"loc":{"start":{"line":416,"column":21},"end":{"line":416,"column":67}},"type":"cond-expr","locations":[{"start":{"line":416,"column":35},"end":{"line":416,"column":37}},{"start":{"line":416,"column":40},"end":{"line":416,"column":67}}],"line":416},"54":{"loc":{"start":{"line":417,"column":24},"end":{"line":417,"column":79}},"type":"cond-expr","locations":[{"start":{"line":417,"column":41},"end":{"line":417,"column":43}},{"start":{"line":417,"column":46},"end":{"line":417,"column":79}}],"line":417},"55":{"loc":{"start":{"line":446,"column":27},"end":{"line":446,"column":64}},"type":"default-arg","locations":[{"start":{"line":446,"column":40},"end":{"line":446,"column":64}}],"line":446},"56":{"loc":{"start":{"line":446,"column":66},"end":{"line":446,"column":80}},"type":"default-arg","locations":[{"start":{"line":446,"column":75},"end":{"line":446,"column":80}}],"line":446},"57":{"loc":{"start":{"line":446,"column":82},"end":{"line":446,"column":105}},"type":"default-arg","locations":[{"start":{"line":446,"column":100},"end":{"line":446,"column":105}}],"line":446},"58":{"loc":{"start":{"line":452,"column":6},"end":{"line":454,"column":7}},"type":"if","locations":[{"start":{"line":452,"column":6},"end":{"line":454,"column":7}},{"start":{},"end":{}}],"line":452},"59":{"loc":{"start":{"line":456,"column":6},"end":{"line":460,"column":7}},"type":"if","locations":[{"start":{"line":456,"column":6},"end":{"line":460,"column":7}},{"start":{"line":458,"column":13},"end":{"line":460,"column":7}}],"line":456},"60":{"loc":{"start":{"line":461,"column":6},"end":{"line":465,"column":7}},"type":"if","locations":[{"start":{"line":461,"column":6},"end":{"line":465,"column":7}},{"start":{},"end":{}}],"line":461},"61":{"loc":{"start":{"line":466,"column":6},"end":{"line":480,"column":7}},"type":"if","locations":[{"start":{"line":466,"column":6},"end":{"line":480,"column":7}},{"start":{"line":473,"column":13},"end":{"line":480,"column":7}}],"line":466},"62":{"loc":{"start":{"line":467,"column":8},"end":{"line":472,"column":9}},"type":"if","locations":[{"start":{"line":467,"column":8},"end":{"line":472,"column":9}},{"start":{},"end":{}}],"line":467},"63":{"loc":{"start":{"line":468,"column":10},"end":{"line":471,"column":11}},"type":"if","locations":[{"start":{"line":468,"column":10},"end":{"line":471,"column":11}},{"start":{},"end":{}}],"line":468},"64":{"loc":{"start":{"line":468,"column":14},"end":{"line":468,"column":141}},"type":"binary-expr","locations":[{"start":{"line":468,"column":14},"end":{"line":468,"column":30}},{"start":{"line":468,"column":34},"end":{"line":468,"column":141}}],"line":468},"65":{"loc":{"start":{"line":473,"column":13},"end":{"line":480,"column":7}},"type":"if","locations":[{"start":{"line":473,"column":13},"end":{"line":480,"column":7}},{"start":{},"end":{}}],"line":473},"66":{"loc":{"start":{"line":474,"column":8},"end":{"line":479,"column":9}},"type":"if","locations":[{"start":{"line":474,"column":8},"end":{"line":479,"column":9}},{"start":{},"end":{}}],"line":474},"67":{"loc":{"start":{"line":475,"column":10},"end":{"line":478,"column":11}},"type":"if","locations":[{"start":{"line":475,"column":10},"end":{"line":478,"column":11}},{"start":{},"end":{}}],"line":475},"68":{"loc":{"start":{"line":475,"column":14},"end":{"line":475,"column":141}},"type":"binary-expr","locations":[{"start":{"line":475,"column":14},"end":{"line":475,"column":30}},{"start":{"line":475,"column":34},"end":{"line":475,"column":141}}],"line":475},"69":{"loc":{"start":{"line":482,"column":4},"end":{"line":490,"column":5}},"type":"if","locations":[{"start":{"line":482,"column":4},"end":{"line":490,"column":5}},{"start":{"line":486,"column":11},"end":{"line":490,"column":5}}],"line":482},"70":{"loc":{"start":{"line":491,"column":4},"end":{"line":493,"column":5}},"type":"if","locations":[{"start":{"line":491,"column":4},"end":{"line":493,"column":5}},{"start":{},"end":{}}],"line":491},"71":{"loc":{"start":{"line":494,"column":4},"end":{"line":496,"column":5}},"type":"if","locations":[{"start":{"line":494,"column":4},"end":{"line":496,"column":5}},{"start":{},"end":{}}],"line":494},"72":{"loc":{"start":{"line":498,"column":28},"end":{"line":498,"column":66}},"type":"default-arg","locations":[{"start":{"line":498,"column":41},"end":{"line":498,"column":66}}],"line":498},"73":{"loc":{"start":{"line":498,"column":68},"end":{"line":498,"column":104}},"type":"default-arg","locations":[{"start":{"line":498,"column":80},"end":{"line":498,"column":104}}],"line":498},"74":{"loc":{"start":{"line":499,"column":4},"end":{"line":501,"column":5}},"type":"if","locations":[{"start":{"line":499,"column":4},"end":{"line":501,"column":5}},{"start":{},"end":{}}],"line":499},"75":{"loc":{"start":{"line":503,"column":4},"end":{"line":505,"column":5}},"type":"if","locations":[{"start":{"line":503,"column":4},"end":{"line":505,"column":5}},{"start":{},"end":{}}],"line":503},"76":{"loc":{"start":{"line":520,"column":57},"end":{"line":520,"column":95}},"type":"default-arg","locations":[{"start":{"line":520,"column":70},"end":{"line":520,"column":95}}],"line":520},"77":{"loc":{"start":{"line":520,"column":97},"end":{"line":520,"column":133}},"type":"default-arg","locations":[{"start":{"line":520,"column":109},"end":{"line":520,"column":133}}],"line":520},"78":{"loc":{"start":{"line":533,"column":6},"end":{"line":543,"column":7}},"type":"if","locations":[{"start":{"line":533,"column":6},"end":{"line":543,"column":7}},{"start":{"line":535,"column":13},"end":{"line":543,"column":7}}],"line":533},"79":{"loc":{"start":{"line":534,"column":24},"end":{"line":534,"column":73}},"type":"cond-expr","locations":[{"start":{"line":534,"column":67},"end":{"line":534,"column":68}},{"start":{"line":534,"column":71},"end":{"line":534,"column":73}}],"line":534},"80":{"loc":{"start":{"line":537,"column":8},"end":{"line":542,"column":9}},"type":"if","locations":[{"start":{"line":537,"column":8},"end":{"line":542,"column":9}},{"start":{"line":540,"column":15},"end":{"line":542,"column":9}}],"line":537},"81":{"loc":{"start":{"line":539,"column":26},"end":{"line":539,"column":96}},"type":"cond-expr","locations":[{"start":{"line":539,"column":58},"end":{"line":539,"column":59}},{"start":{"line":539,"column":62},"end":{"line":539,"column":96}}],"line":539},"82":{"loc":{"start":{"line":544,"column":6},"end":{"line":546,"column":7}},"type":"if","locations":[{"start":{"line":544,"column":6},"end":{"line":546,"column":7}},{"start":{},"end":{}}],"line":544},"83":{"loc":{"start":{"line":547,"column":6},"end":{"line":550,"column":7}},"type":"if","locations":[{"start":{"line":547,"column":6},"end":{"line":550,"column":7}},{"start":{},"end":{}}],"line":547},"84":{"loc":{"start":{"line":551,"column":6},"end":{"line":557,"column":7}},"type":"if","locations":[{"start":{"line":551,"column":6},"end":{"line":557,"column":7}},{"start":{"line":554,"column":13},"end":{"line":557,"column":7}}],"line":551},"85":{"loc":{"start":{"line":559,"column":4},"end":{"line":561,"column":5}},"type":"if","locations":[{"start":{"line":559,"column":4},"end":{"line":561,"column":5}},{"start":{},"end":{}}],"line":559},"86":{"loc":{"start":{"line":560,"column":13},"end":{"line":560,"column":77}},"type":"cond-expr","locations":[{"start":{"line":560,"column":38},"end":{"line":560,"column":68}},{"start":{"line":560,"column":71},"end":{"line":560,"column":77}}],"line":560},"87":{"loc":{"start":{"line":562,"column":4},"end":{"line":565,"column":5}},"type":"if","locations":[{"start":{"line":562,"column":4},"end":{"line":565,"column":5}},{"start":{},"end":{}}],"line":562},"88":{"loc":{"start":{"line":563,"column":6},"end":{"line":563,"column":72}},"type":"if","locations":[{"start":{"line":563,"column":6},"end":{"line":563,"column":72}},{"start":{},"end":{}}],"line":563},"89":{"loc":{"start":{"line":564,"column":13},"end":{"line":564,"column":126}},"type":"cond-expr","locations":[{"start":{"line":564,"column":56},"end":{"line":564,"column":90}},{"start":{"line":564,"column":93},"end":{"line":564,"column":126}}],"line":564},"90":{"loc":{"start":{"line":566,"column":4},"end":{"line":569,"column":5}},"type":"if","locations":[{"start":{"line":566,"column":4},"end":{"line":569,"column":5}},{"start":{},"end":{}}],"line":566},"91":{"loc":{"start":{"line":567,"column":6},"end":{"line":567,"column":72}},"type":"if","locations":[{"start":{"line":567,"column":6},"end":{"line":567,"column":72}},{"start":{},"end":{}}],"line":567},"92":{"loc":{"start":{"line":568,"column":13},"end":{"line":568,"column":126}},"type":"cond-expr","locations":[{"start":{"line":568,"column":56},"end":{"line":568,"column":89}},{"start":{"line":568,"column":92},"end":{"line":568,"column":126}}],"line":568},"93":{"loc":{"start":{"line":575,"column":6},"end":{"line":577,"column":7}},"type":"if","locations":[{"start":{"line":575,"column":6},"end":{"line":577,"column":7}},{"start":{},"end":{}}],"line":575},"94":{"loc":{"start":{"line":575,"column":10},"end":{"line":575,"column":106}},"type":"binary-expr","locations":[{"start":{"line":575,"column":10},"end":{"line":575,"column":29}},{"start":{"line":575,"column":33},"end":{"line":575,"column":55}},{"start":{"line":575,"column":59},"end":{"line":575,"column":82}},{"start":{"line":575,"column":86},"end":{"line":575,"column":106}}],"line":575},"95":{"loc":{"start":{"line":578,"column":6},"end":{"line":581,"column":7}},"type":"if","locations":[{"start":{"line":578,"column":6},"end":{"line":581,"column":7}},{"start":{},"end":{}}],"line":578},"96":{"loc":{"start":{"line":591,"column":6},"end":{"line":593,"column":7}},"type":"if","locations":[{"start":{"line":591,"column":6},"end":{"line":593,"column":7}},{"start":{},"end":{}}],"line":591},"97":{"loc":{"start":{"line":594,"column":6},"end":{"line":597,"column":7}},"type":"if","locations":[{"start":{"line":594,"column":6},"end":{"line":597,"column":7}},{"start":{},"end":{}}],"line":594},"98":{"loc":{"start":{"line":598,"column":6},"end":{"line":600,"column":7}},"type":"if","locations":[{"start":{"line":598,"column":6},"end":{"line":600,"column":7}},{"start":{},"end":{}}],"line":598},"99":{"loc":{"start":{"line":598,"column":10},"end":{"line":598,"column":83}},"type":"binary-expr","locations":[{"start":{"line":598,"column":10},"end":{"line":598,"column":32}},{"start":{"line":598,"column":36},"end":{"line":598,"column":56}},{"start":{"line":598,"column":60},"end":{"line":598,"column":83}}],"line":598},"100":{"loc":{"start":{"line":602,"column":6},"end":{"line":604,"column":7}},"type":"if","locations":[{"start":{"line":602,"column":6},"end":{"line":604,"column":7}},{"start":{},"end":{}}],"line":602},"101":{"loc":{"start":{"line":611,"column":6},"end":{"line":613,"column":7}},"type":"if","locations":[{"start":{"line":611,"column":6},"end":{"line":613,"column":7}},{"start":{},"end":{}}],"line":611},"102":{"loc":{"start":{"line":614,"column":6},"end":{"line":617,"column":7}},"type":"if","locations":[{"start":{"line":614,"column":6},"end":{"line":617,"column":7}},{"start":{},"end":{}}],"line":614},"103":{"loc":{"start":{"line":618,"column":6},"end":{"line":620,"column":7}},"type":"if","locations":[{"start":{"line":618,"column":6},"end":{"line":620,"column":7}},{"start":{},"end":{}}],"line":618},"104":{"loc":{"start":{"line":618,"column":10},"end":{"line":618,"column":83}},"type":"binary-expr","locations":[{"start":{"line":618,"column":10},"end":{"line":618,"column":32}},{"start":{"line":618,"column":36},"end":{"line":618,"column":56}},{"start":{"line":618,"column":60},"end":{"line":618,"column":83}}],"line":618},"105":{"loc":{"start":{"line":622,"column":6},"end":{"line":624,"column":7}},"type":"if","locations":[{"start":{"line":622,"column":6},"end":{"line":624,"column":7}},{"start":{},"end":{}}],"line":622},"106":{"loc":{"start":{"line":631,"column":6},"end":{"line":633,"column":7}},"type":"if","locations":[{"start":{"line":631,"column":6},"end":{"line":633,"column":7}},{"start":{},"end":{}}],"line":631},"107":{"loc":{"start":{"line":631,"column":10},"end":{"line":631,"column":131}},"type":"binary-expr","locations":[{"start":{"line":631,"column":10},"end":{"line":631,"column":29}},{"start":{"line":631,"column":33},"end":{"line":631,"column":54}},{"start":{"line":631,"column":58},"end":{"line":631,"column":80}},{"start":{"line":631,"column":84},"end":{"line":631,"column":104}},{"start":{"line":631,"column":108},"end":{"line":631,"column":131}}],"line":631},"108":{"loc":{"start":{"line":641,"column":6},"end":{"line":643,"column":7}},"type":"if","locations":[{"start":{"line":641,"column":6},"end":{"line":643,"column":7}},{"start":{},"end":{}}],"line":641},"109":{"loc":{"start":{"line":641,"column":10},"end":{"line":641,"column":53}},"type":"binary-expr","locations":[{"start":{"line":641,"column":10},"end":{"line":641,"column":29}},{"start":{"line":641,"column":33},"end":{"line":641,"column":53}}],"line":641},"110":{"loc":{"start":{"line":651,"column":6},"end":{"line":653,"column":7}},"type":"if","locations":[{"start":{"line":651,"column":6},"end":{"line":653,"column":7}},{"start":{},"end":{}}],"line":651},"111":{"loc":{"start":{"line":651,"column":10},"end":{"line":651,"column":86}},"type":"binary-expr","locations":[{"start":{"line":651,"column":10},"end":{"line":651,"column":29}},{"start":{"line":651,"column":33},"end":{"line":651,"column":53}},{"start":{"line":651,"column":57},"end":{"line":651,"column":86}}],"line":651},"112":{"loc":{"start":{"line":682,"column":6},"end":{"line":684,"column":7}},"type":"if","locations":[{"start":{"line":682,"column":6},"end":{"line":684,"column":7}},{"start":{},"end":{}}],"line":682},"113":{"loc":{"start":{"line":699,"column":6},"end":{"line":701,"column":7}},"type":"if","locations":[{"start":{"line":699,"column":6},"end":{"line":701,"column":7}},{"start":{},"end":{}}],"line":699},"114":{"loc":{"start":{"line":702,"column":6},"end":{"line":706,"column":7}},"type":"if","locations":[{"start":{"line":702,"column":6},"end":{"line":706,"column":7}},{"start":{"line":704,"column":13},"end":{"line":706,"column":7}}],"line":702},"115":{"loc":{"start":{"line":718,"column":8},"end":{"line":727,"column":9}},"type":"if","locations":[{"start":{"line":718,"column":8},"end":{"line":727,"column":9}},{"start":{"line":720,"column":15},"end":{"line":727,"column":9}}],"line":718},"116":{"loc":{"start":{"line":721,"column":31},"end":{"line":721,"column":59}},"type":"binary-expr","locations":[{"start":{"line":721,"column":31},"end":{"line":721,"column":37}},{"start":{"line":721,"column":41},"end":{"line":721,"column":59}}],"line":721},"117":{"loc":{"start":{"line":722,"column":10},"end":{"line":726,"column":11}},"type":"if","locations":[{"start":{"line":722,"column":10},"end":{"line":726,"column":11}},{"start":{"line":724,"column":17},"end":{"line":726,"column":11}}],"line":722},"118":{"loc":{"start":{"line":743,"column":6},"end":{"line":745,"column":7}},"type":"if","locations":[{"start":{"line":743,"column":6},"end":{"line":745,"column":7}},{"start":{},"end":{}}],"line":743},"119":{"loc":{"start":{"line":751,"column":6},"end":{"line":753,"column":7}},"type":"if","locations":[{"start":{"line":751,"column":6},"end":{"line":753,"column":7}},{"start":{},"end":{}}],"line":751},"120":{"loc":{"start":{"line":759,"column":6},"end":{"line":761,"column":7}},"type":"if","locations":[{"start":{"line":759,"column":6},"end":{"line":761,"column":7}},{"start":{},"end":{}}],"line":759},"121":{"loc":{"start":{"line":767,"column":6},"end":{"line":769,"column":7}},"type":"if","locations":[{"start":{"line":767,"column":6},"end":{"line":769,"column":7}},{"start":{},"end":{}}],"line":767},"122":{"loc":{"start":{"line":775,"column":6},"end":{"line":777,"column":7}},"type":"if","locations":[{"start":{"line":775,"column":6},"end":{"line":777,"column":7}},{"start":{},"end":{}}],"line":775},"123":{"loc":{"start":{"line":783,"column":6},"end":{"line":785,"column":7}},"type":"if","locations":[{"start":{"line":783,"column":6},"end":{"line":785,"column":7}},{"start":{},"end":{}}],"line":783},"124":{"loc":{"start":{"line":791,"column":6},"end":{"line":793,"column":7}},"type":"if","locations":[{"start":{"line":791,"column":6},"end":{"line":793,"column":7}},{"start":{},"end":{}}],"line":791},"125":{"loc":{"start":{"line":799,"column":6},"end":{"line":801,"column":7}},"type":"if","locations":[{"start":{"line":799,"column":6},"end":{"line":801,"column":7}},{"start":{},"end":{}}],"line":799},"126":{"loc":{"start":{"line":807,"column":6},"end":{"line":809,"column":7}},"type":"if","locations":[{"start":{"line":807,"column":6},"end":{"line":809,"column":7}},{"start":{},"end":{}}],"line":807},"127":{"loc":{"start":{"line":815,"column":6},"end":{"line":817,"column":7}},"type":"if","locations":[{"start":{"line":815,"column":6},"end":{"line":817,"column":7}},{"start":{},"end":{}}],"line":815},"128":{"loc":{"start":{"line":823,"column":6},"end":{"line":825,"column":7}},"type":"if","locations":[{"start":{"line":823,"column":6},"end":{"line":825,"column":7}},{"start":{},"end":{}}],"line":823},"129":{"loc":{"start":{"line":831,"column":6},"end":{"line":833,"column":7}},"type":"if","locations":[{"start":{"line":831,"column":6},"end":{"line":833,"column":7}},{"start":{},"end":{}}],"line":831},"130":{"loc":{"start":{"line":839,"column":6},"end":{"line":841,"column":7}},"type":"if","locations":[{"start":{"line":839,"column":6},"end":{"line":841,"column":7}},{"start":{},"end":{}}],"line":839},"131":{"loc":{"start":{"line":847,"column":6},"end":{"line":849,"column":7}},"type":"if","locations":[{"start":{"line":847,"column":6},"end":{"line":849,"column":7}},{"start":{},"end":{}}],"line":847},"132":{"loc":{"start":{"line":855,"column":6},"end":{"line":857,"column":7}},"type":"if","locations":[{"start":{"line":855,"column":6},"end":{"line":857,"column":7}},{"start":{},"end":{}}],"line":855},"133":{"loc":{"start":{"line":866,"column":6},"end":{"line":868,"column":7}},"type":"if","locations":[{"start":{"line":866,"column":6},"end":{"line":868,"column":7}},{"start":{},"end":{}}],"line":866},"134":{"loc":{"start":{"line":872,"column":7},"end":{"line":872,"column":15}},"type":"default-arg","locations":[{"start":{"line":872,"column":14},"end":{"line":872,"column":15}}],"line":872},"135":{"loc":{"start":{"line":875,"column":23},"end":{"line":875,"column":60}},"type":"cond-expr","locations":[{"start":{"line":875,"column":36},"end":{"line":875,"column":41}},{"start":{"line":875,"column":44},"end":{"line":875,"column":60}}],"line":875},"136":{"loc":{"start":{"line":881,"column":4},"end":{"line":883,"column":5}},"type":"if","locations":[{"start":{"line":881,"column":4},"end":{"line":883,"column":5}},{"start":{},"end":{}}],"line":881},"137":{"loc":{"start":{"line":882,"column":13},"end":{"line":882,"column":59}},"type":"binary-expr","locations":[{"start":{"line":882,"column":13},"end":{"line":882,"column":31}},{"start":{"line":882,"column":35},"end":{"line":882,"column":59}}],"line":882},"138":{"loc":{"start":{"line":885,"column":4},"end":{"line":889,"column":5}},"type":"if","locations":[{"start":{"line":885,"column":4},"end":{"line":889,"column":5}},{"start":{},"end":{}}],"line":885},"139":{"loc":{"start":{"line":886,"column":26},"end":{"line":886,"column":80}},"type":"binary-expr","locations":[{"start":{"line":886,"column":26},"end":{"line":886,"column":52}},{"start":{"line":886,"column":56},"end":{"line":886,"column":80}}],"line":886},"140":{"loc":{"start":{"line":887,"column":25},"end":{"line":887,"column":83}},"type":"binary-expr","locations":[{"start":{"line":887,"column":25},"end":{"line":887,"column":55}},{"start":{"line":887,"column":59},"end":{"line":887,"column":83}}],"line":887},"141":{"loc":{"start":{"line":890,"column":11},"end":{"line":890,"column":71}},"type":"binary-expr","locations":[{"start":{"line":890,"column":11},"end":{"line":890,"column":43}},{"start":{"line":890,"column":47},"end":{"line":890,"column":71}}],"line":890},"142":{"loc":{"start":{"line":911,"column":6},"end":{"line":911,"column":14}},"type":"default-arg","locations":[{"start":{"line":911,"column":13},"end":{"line":911,"column":14}}],"line":911},"143":{"loc":{"start":{"line":915,"column":6},"end":{"line":917,"column":7}},"type":"if","locations":[{"start":{"line":915,"column":6},"end":{"line":917,"column":7}},{"start":{},"end":{}}],"line":915},"144":{"loc":{"start":{"line":915,"column":10},"end":{"line":915,"column":131}},"type":"binary-expr","locations":[{"start":{"line":915,"column":10},"end":{"line":915,"column":29}},{"start":{"line":915,"column":33},"end":{"line":915,"column":54}},{"start":{"line":915,"column":58},"end":{"line":915,"column":80}},{"start":{"line":915,"column":84},"end":{"line":915,"column":107}},{"start":{"line":915,"column":111},"end":{"line":915,"column":131}}],"line":915},"145":{"loc":{"start":{"line":919,"column":6},"end":{"line":921,"column":7}},"type":"if","locations":[{"start":{"line":919,"column":6},"end":{"line":921,"column":7}},{"start":{},"end":{}}],"line":919},"146":{"loc":{"start":{"line":944,"column":6},"end":{"line":944,"column":14}},"type":"default-arg","locations":[{"start":{"line":944,"column":13},"end":{"line":944,"column":14}}],"line":944},"147":{"loc":{"start":{"line":946,"column":4},"end":{"line":948,"column":5}},"type":"if","locations":[{"start":{"line":946,"column":4},"end":{"line":948,"column":5}},{"start":{},"end":{}}],"line":946},"148":{"loc":{"start":{"line":953,"column":6},"end":{"line":955,"column":7}},"type":"if","locations":[{"start":{"line":953,"column":6},"end":{"line":955,"column":7}},{"start":{},"end":{}}],"line":953},"149":{"loc":{"start":{"line":961,"column":6},"end":{"line":963,"column":7}},"type":"if","locations":[{"start":{"line":961,"column":6},"end":{"line":963,"column":7}},{"start":{},"end":{}}],"line":961},"150":{"loc":{"start":{"line":969,"column":6},"end":{"line":971,"column":7}},"type":"if","locations":[{"start":{"line":969,"column":6},"end":{"line":971,"column":7}},{"start":{},"end":{}}],"line":969},"151":{"loc":{"start":{"line":977,"column":6},"end":{"line":979,"column":7}},"type":"if","locations":[{"start":{"line":977,"column":6},"end":{"line":979,"column":7}},{"start":{},"end":{}}],"line":977},"152":{"loc":{"start":{"line":988,"column":6},"end":{"line":990,"column":7}},"type":"if","locations":[{"start":{"line":988,"column":6},"end":{"line":990,"column":7}},{"start":{},"end":{}}],"line":988},"153":{"loc":{"start":{"line":999,"column":6},"end":{"line":1001,"column":7}},"type":"if","locations":[{"start":{"line":999,"column":6},"end":{"line":1001,"column":7}},{"start":{},"end":{}}],"line":999},"154":{"loc":{"start":{"line":1010,"column":6},"end":{"line":1012,"column":7}},"type":"if","locations":[{"start":{"line":1010,"column":6},"end":{"line":1012,"column":7}},{"start":{},"end":{}}],"line":1010},"155":{"loc":{"start":{"line":1028,"column":6},"end":{"line":1030,"column":7}},"type":"if","locations":[{"start":{"line":1028,"column":6},"end":{"line":1030,"column":7}},{"start":{},"end":{}}],"line":1028},"156":{"loc":{"start":{"line":1031,"column":6},"end":{"line":1033,"column":7}},"type":"if","locations":[{"start":{"line":1031,"column":6},"end":{"line":1033,"column":7}},{"start":{},"end":{}}],"line":1031},"157":{"loc":{"start":{"line":1034,"column":6},"end":{"line":1036,"column":7}},"type":"if","locations":[{"start":{"line":1034,"column":6},"end":{"line":1036,"column":7}},{"start":{},"end":{}}],"line":1034},"158":{"loc":{"start":{"line":1034,"column":10},"end":{"line":1034,"column":48}},"type":"binary-expr","locations":[{"start":{"line":1034,"column":10},"end":{"line":1034,"column":27}},{"start":{"line":1034,"column":31},"end":{"line":1034,"column":48}}],"line":1034},"159":{"loc":{"start":{"line":1037,"column":6},"end":{"line":1039,"column":7}},"type":"if","locations":[{"start":{"line":1037,"column":6},"end":{"line":1039,"column":7}},{"start":{},"end":{}}],"line":1037},"160":{"loc":{"start":{"line":1040,"column":6},"end":{"line":1042,"column":7}},"type":"if","locations":[{"start":{"line":1040,"column":6},"end":{"line":1042,"column":7}},{"start":{},"end":{}}],"line":1040},"161":{"loc":{"start":{"line":1065,"column":4},"end":{"line":1087,"column":5}},"type":"if","locations":[{"start":{"line":1065,"column":4},"end":{"line":1087,"column":5}},{"start":{"line":1083,"column":11},"end":{"line":1087,"column":5}}],"line":1065},"162":{"loc":{"start":{"line":1070,"column":6},"end":{"line":1082,"column":7}},"type":"if","locations":[{"start":{"line":1070,"column":6},"end":{"line":1082,"column":7}},{"start":{"line":1075,"column":13},"end":{"line":1082,"column":7}}],"line":1070},"163":{"loc":{"start":{"line":1070,"column":10},"end":{"line":1070,"column":55}},"type":"binary-expr","locations":[{"start":{"line":1070,"column":10},"end":{"line":1070,"column":29}},{"start":{"line":1070,"column":33},"end":{"line":1070,"column":55}}],"line":1070},"164":{"loc":{"start":{"line":1075,"column":13},"end":{"line":1082,"column":7}},"type":"if","locations":[{"start":{"line":1075,"column":13},"end":{"line":1082,"column":7}},{"start":{"line":1080,"column":13},"end":{"line":1082,"column":7}}],"line":1075},"165":{"loc":{"start":{"line":1075,"column":17},"end":{"line":1075,"column":61}},"type":"binary-expr","locations":[{"start":{"line":1075,"column":17},"end":{"line":1075,"column":36}},{"start":{"line":1075,"column":40},"end":{"line":1075,"column":61}}],"line":1075},"166":{"loc":{"start":{"line":1104,"column":4},"end":{"line":1201,"column":5}},"type":"if","locations":[{"start":{"line":1104,"column":4},"end":{"line":1201,"column":5}},{"start":{},"end":{}}],"line":1104},"167":{"loc":{"start":{"line":1112,"column":6},"end":{"line":1200,"column":7}},"type":"if","locations":[{"start":{"line":1112,"column":6},"end":{"line":1200,"column":7}},{"start":{},"end":{}}],"line":1112},"168":{"loc":{"start":{"line":1113,"column":8},"end":{"line":1171,"column":9}},"type":"if","locations":[{"start":{"line":1113,"column":8},"end":{"line":1171,"column":9}},{"start":{"line":1133,"column":15},"end":{"line":1171,"column":9}}],"line":1113},"169":{"loc":{"start":{"line":1121,"column":10},"end":{"line":1132,"column":11}},"type":"if","locations":[{"start":{"line":1121,"column":10},"end":{"line":1132,"column":11}},{"start":{},"end":{}}],"line":1121},"170":{"loc":{"start":{"line":1123,"column":14},"end":{"line":1125,"column":15}},"type":"if","locations":[{"start":{"line":1123,"column":14},"end":{"line":1125,"column":15}},{"start":{},"end":{}}],"line":1123},"171":{"loc":{"start":{"line":1123,"column":18},"end":{"line":1123,"column":65}},"type":"binary-expr","locations":[{"start":{"line":1123,"column":18},"end":{"line":1123,"column":32}},{"start":{"line":1123,"column":36},"end":{"line":1123,"column":65}}],"line":1123},"172":{"loc":{"start":{"line":1127,"column":14},"end":{"line":1129,"column":15}},"type":"if","locations":[{"start":{"line":1127,"column":14},"end":{"line":1129,"column":15}},{"start":{},"end":{}}],"line":1127},"173":{"loc":{"start":{"line":1139,"column":10},"end":{"line":1170,"column":11}},"type":"if","locations":[{"start":{"line":1139,"column":10},"end":{"line":1170,"column":11}},{"start":{},"end":{}}],"line":1139},"174":{"loc":{"start":{"line":1142,"column":14},"end":{"line":1150,"column":15}},"type":"if","locations":[{"start":{"line":1142,"column":14},"end":{"line":1150,"column":15}},{"start":{"line":1144,"column":21},"end":{"line":1150,"column":15}}],"line":1142},"175":{"loc":{"start":{"line":1144,"column":21},"end":{"line":1150,"column":15}},"type":"if","locations":[{"start":{"line":1144,"column":21},"end":{"line":1150,"column":15}},{"start":{"line":1146,"column":21},"end":{"line":1150,"column":15}}],"line":1144},"176":{"loc":{"start":{"line":1146,"column":21},"end":{"line":1150,"column":15}},"type":"if","locations":[{"start":{"line":1146,"column":21},"end":{"line":1150,"column":15}},{"start":{"line":1148,"column":21},"end":{"line":1150,"column":15}}],"line":1146},"177":{"loc":{"start":{"line":1148,"column":21},"end":{"line":1150,"column":15}},"type":"if","locations":[{"start":{"line":1148,"column":21},"end":{"line":1150,"column":15}},{"start":{},"end":{}}],"line":1148},"178":{"loc":{"start":{"line":1152,"column":14},"end":{"line":1158,"column":15}},"type":"if","locations":[{"start":{"line":1152,"column":14},"end":{"line":1158,"column":15}},{"start":{"line":1154,"column":21},"end":{"line":1158,"column":15}}],"line":1152},"179":{"loc":{"start":{"line":1154,"column":21},"end":{"line":1158,"column":15}},"type":"if","locations":[{"start":{"line":1154,"column":21},"end":{"line":1158,"column":15}},{"start":{"line":1156,"column":21},"end":{"line":1158,"column":15}}],"line":1154},"180":{"loc":{"start":{"line":1159,"column":14},"end":{"line":1168,"column":15}},"type":"if","locations":[{"start":{"line":1159,"column":14},"end":{"line":1168,"column":15}},{"start":{},"end":{}}],"line":1159},"181":{"loc":{"start":{"line":1159,"column":18},"end":{"line":1159,"column":74}},"type":"binary-expr","locations":[{"start":{"line":1159,"column":18},"end":{"line":1159,"column":39}},{"start":{"line":1159,"column":43},"end":{"line":1159,"column":74}}],"line":1159},"182":{"loc":{"start":{"line":1161,"column":18},"end":{"line":1166,"column":19}},"type":"if","locations":[{"start":{"line":1161,"column":18},"end":{"line":1166,"column":19}},{"start":{},"end":{}}],"line":1161},"183":{"loc":{"start":{"line":1161,"column":22},"end":{"line":1161,"column":75}},"type":"binary-expr","locations":[{"start":{"line":1161,"column":22},"end":{"line":1161,"column":39}},{"start":{"line":1161,"column":43},"end":{"line":1161,"column":75}}],"line":1161},"184":{"loc":{"start":{"line":1162,"column":20},"end":{"line":1164,"column":21}},"type":"if","locations":[{"start":{"line":1162,"column":20},"end":{"line":1164,"column":21}},{"start":{},"end":{}}],"line":1162},"185":{"loc":{"start":{"line":1172,"column":8},"end":{"line":1198,"column":9}},"type":"if","locations":[{"start":{"line":1172,"column":8},"end":{"line":1198,"column":9}},{"start":{},"end":{}}],"line":1172},"186":{"loc":{"start":{"line":1228,"column":4},"end":{"line":1230,"column":5}},"type":"if","locations":[{"start":{"line":1228,"column":4},"end":{"line":1230,"column":5}},{"start":{},"end":{}}],"line":1228},"187":{"loc":{"start":{"line":1231,"column":4},"end":{"line":1285,"column":5}},"type":"if","locations":[{"start":{"line":1231,"column":4},"end":{"line":1285,"column":5}},{"start":{"line":1283,"column":11},"end":{"line":1285,"column":5}}],"line":1231},"188":{"loc":{"start":{"line":1231,"column":8},"end":{"line":1231,"column":35}},"type":"binary-expr","locations":[{"start":{"line":1231,"column":8},"end":{"line":1231,"column":20}},{"start":{"line":1231,"column":24},"end":{"line":1231,"column":35}}],"line":1231},"189":{"loc":{"start":{"line":1232,"column":6},"end":{"line":1282,"column":7}},"type":"if","locations":[{"start":{"line":1232,"column":6},"end":{"line":1282,"column":7}},{"start":{"line":1234,"column":13},"end":{"line":1282,"column":7}}],"line":1232},"190":{"loc":{"start":{"line":1234,"column":13},"end":{"line":1282,"column":7}},"type":"if","locations":[{"start":{"line":1234,"column":13},"end":{"line":1282,"column":7}},{"start":{"line":1236,"column":13},"end":{"line":1282,"column":7}}],"line":1234},"191":{"loc":{"start":{"line":1237,"column":8},"end":{"line":1281,"column":9}},"type":"switch","locations":[{"start":{"line":1238,"column":10},"end":{"line":1240,"column":18}},{"start":{"line":1241,"column":10},"end":{"line":1243,"column":18}},{"start":{"line":1244,"column":10},"end":{"line":1246,"column":18}},{"start":{"line":1247,"column":10},"end":{"line":1249,"column":18}},{"start":{"line":1250,"column":10},"end":{"line":1252,"column":18}},{"start":{"line":1253,"column":10},"end":{"line":1259,"column":18}},{"start":{"line":1260,"column":10},"end":{"line":1262,"column":18}},{"start":{"line":1263,"column":10},"end":{"line":1265,"column":18}},{"start":{"line":1266,"column":10},"end":{"line":1268,"column":18}},{"start":{"line":1269,"column":10},"end":{"line":1271,"column":18}},{"start":{"line":1272,"column":10},"end":{"line":1274,"column":18}},{"start":{"line":1275,"column":10},"end":{"line":1277,"column":18}},{"start":{"line":1278,"column":10},"end":{"line":1280,"column":18}}],"line":1237},"192":{"loc":{"start":{"line":1254,"column":12},"end":{"line":1258,"column":13}},"type":"if","locations":[{"start":{"line":1254,"column":12},"end":{"line":1258,"column":13}},{"start":{"line":1256,"column":19},"end":{"line":1258,"column":13}}],"line":1254},"193":{"loc":{"start":{"line":1286,"column":4},"end":{"line":1288,"column":5}},"type":"if","locations":[{"start":{"line":1286,"column":4},"end":{"line":1288,"column":5}},{"start":{},"end":{}}],"line":1286},"194":{"loc":{"start":{"line":1289,"column":4},"end":{"line":1305,"column":5}},"type":"if","locations":[{"start":{"line":1289,"column":4},"end":{"line":1305,"column":5}},{"start":{"line":1297,"column":11},"end":{"line":1305,"column":5}}],"line":1289},"195":{"loc":{"start":{"line":1311,"column":4},"end":{"line":1313,"column":5}},"type":"if","locations":[{"start":{"line":1311,"column":4},"end":{"line":1313,"column":5}},{"start":{},"end":{}}],"line":1311},"196":{"loc":{"start":{"line":1314,"column":4},"end":{"line":1316,"column":5}},"type":"if","locations":[{"start":{"line":1314,"column":4},"end":{"line":1316,"column":5}},{"start":{},"end":{}}],"line":1314},"197":{"loc":{"start":{"line":1324,"column":8},"end":{"line":1332,"column":9}},"type":"if","locations":[{"start":{"line":1324,"column":8},"end":{"line":1332,"column":9}},{"start":{"line":1326,"column":15},"end":{"line":1332,"column":9}}],"line":1324},"198":{"loc":{"start":{"line":1326,"column":15},"end":{"line":1332,"column":9}},"type":"if","locations":[{"start":{"line":1326,"column":15},"end":{"line":1332,"column":9}},{"start":{"line":1328,"column":15},"end":{"line":1332,"column":9}}],"line":1326},"199":{"loc":{"start":{"line":1328,"column":15},"end":{"line":1332,"column":9}},"type":"if","locations":[{"start":{"line":1328,"column":15},"end":{"line":1332,"column":9}},{"start":{"line":1330,"column":15},"end":{"line":1332,"column":9}}],"line":1328},"200":{"loc":{"start":{"line":1334,"column":8},"end":{"line":1342,"column":9}},"type":"if","locations":[{"start":{"line":1334,"column":8},"end":{"line":1342,"column":9}},{"start":{"line":1336,"column":15},"end":{"line":1342,"column":9}}],"line":1334},"201":{"loc":{"start":{"line":1336,"column":15},"end":{"line":1342,"column":9}},"type":"if","locations":[{"start":{"line":1336,"column":15},"end":{"line":1342,"column":9}},{"start":{"line":1338,"column":15},"end":{"line":1342,"column":9}}],"line":1336},"202":{"loc":{"start":{"line":1338,"column":15},"end":{"line":1342,"column":9}},"type":"if","locations":[{"start":{"line":1338,"column":15},"end":{"line":1342,"column":9}},{"start":{"line":1340,"column":15},"end":{"line":1342,"column":9}}],"line":1338},"203":{"loc":{"start":{"line":1343,"column":8},"end":{"line":1397,"column":9}},"type":"if","locations":[{"start":{"line":1343,"column":8},"end":{"line":1397,"column":9}},{"start":{"line":1395,"column":15},"end":{"line":1397,"column":9}}],"line":1343},"204":{"loc":{"start":{"line":1343,"column":12},"end":{"line":1343,"column":35}},"type":"binary-expr","locations":[{"start":{"line":1343,"column":12},"end":{"line":1343,"column":24}},{"start":{"line":1343,"column":28},"end":{"line":1343,"column":35}}],"line":1343},"205":{"loc":{"start":{"line":1344,"column":10},"end":{"line":1394,"column":11}},"type":"if","locations":[{"start":{"line":1344,"column":10},"end":{"line":1394,"column":11}},{"start":{"line":1346,"column":17},"end":{"line":1394,"column":11}}],"line":1344},"206":{"loc":{"start":{"line":1346,"column":17},"end":{"line":1394,"column":11}},"type":"if","locations":[{"start":{"line":1346,"column":17},"end":{"line":1394,"column":11}},{"start":{"line":1348,"column":17},"end":{"line":1394,"column":11}}],"line":1346},"207":{"loc":{"start":{"line":1349,"column":12},"end":{"line":1393,"column":13}},"type":"switch","locations":[{"start":{"line":1350,"column":14},"end":{"line":1352,"column":22}},{"start":{"line":1353,"column":14},"end":{"line":1355,"column":22}},{"start":{"line":1356,"column":14},"end":{"line":1358,"column":22}},{"start":{"line":1359,"column":14},"end":{"line":1361,"column":22}},{"start":{"line":1362,"column":14},"end":{"line":1364,"column":22}},{"start":{"line":1365,"column":14},"end":{"line":1371,"column":22}},{"start":{"line":1372,"column":14},"end":{"line":1374,"column":22}},{"start":{"line":1375,"column":14},"end":{"line":1377,"column":22}},{"start":{"line":1378,"column":14},"end":{"line":1380,"column":22}},{"start":{"line":1381,"column":14},"end":{"line":1383,"column":22}},{"start":{"line":1384,"column":14},"end":{"line":1386,"column":22}},{"start":{"line":1387,"column":14},"end":{"line":1389,"column":22}},{"start":{"line":1390,"column":14},"end":{"line":1392,"column":22}}],"line":1349},"208":{"loc":{"start":{"line":1366,"column":16},"end":{"line":1370,"column":17}},"type":"if","locations":[{"start":{"line":1366,"column":16},"end":{"line":1370,"column":17}},{"start":{"line":1368,"column":23},"end":{"line":1370,"column":17}}],"line":1366},"209":{"loc":{"start":{"line":1404,"column":4},"end":{"line":1406,"column":5}},"type":"if","locations":[{"start":{"line":1404,"column":4},"end":{"line":1406,"column":5}},{"start":{},"end":{}}],"line":1404},"210":{"loc":{"start":{"line":1404,"column":8},"end":{"line":1404,"column":77}},"type":"binary-expr","locations":[{"start":{"line":1404,"column":8},"end":{"line":1404,"column":39}},{"start":{"line":1404,"column":43},"end":{"line":1404,"column":77}}],"line":1404},"211":{"loc":{"start":{"line":1407,"column":4},"end":{"line":1409,"column":5}},"type":"if","locations":[{"start":{"line":1407,"column":4},"end":{"line":1409,"column":5}},{"start":{},"end":{}}],"line":1407},"212":{"loc":{"start":{"line":1410,"column":4},"end":{"line":1412,"column":5}},"type":"if","locations":[{"start":{"line":1410,"column":4},"end":{"line":1412,"column":5}},{"start":{},"end":{}}],"line":1410},"213":{"loc":{"start":{"line":1416,"column":4},"end":{"line":1425,"column":5}},"type":"if","locations":[{"start":{"line":1416,"column":4},"end":{"line":1425,"column":5}},{"start":{},"end":{}}],"line":1416},"214":{"loc":{"start":{"line":1435,"column":6},"end":{"line":1437,"column":7}},"type":"if","locations":[{"start":{"line":1435,"column":6},"end":{"line":1437,"column":7}},{"start":{},"end":{}}],"line":1435},"215":{"loc":{"start":{"line":1449,"column":49},"end":{"line":1449,"column":57}},"type":"default-arg","locations":[{"start":{"line":1449,"column":55},"end":{"line":1449,"column":57}}],"line":1449},"216":{"loc":{"start":{"line":1449,"column":59},"end":{"line":1449,"column":70}},"type":"default-arg","locations":[{"start":{"line":1449,"column":68},"end":{"line":1449,"column":70}}],"line":1449},"217":{"loc":{"start":{"line":1450,"column":4},"end":{"line":1453,"column":5}},"type":"if","locations":[{"start":{"line":1450,"column":4},"end":{"line":1453,"column":5}},{"start":{},"end":{}}],"line":1450},"218":{"loc":{"start":{"line":1450,"column":8},"end":{"line":1450,"column":61}},"type":"binary-expr","locations":[{"start":{"line":1450,"column":8},"end":{"line":1450,"column":34}},{"start":{"line":1450,"column":38},"end":{"line":1450,"column":61}}],"line":1450},"219":{"loc":{"start":{"line":1468,"column":4},"end":{"line":1470,"column":5}},"type":"if","locations":[{"start":{"line":1468,"column":4},"end":{"line":1470,"column":5}},{"start":{},"end":{}}],"line":1468},"220":{"loc":{"start":{"line":1471,"column":4},"end":{"line":1473,"column":5}},"type":"if","locations":[{"start":{"line":1471,"column":4},"end":{"line":1473,"column":5}},{"start":{},"end":{}}],"line":1471},"221":{"loc":{"start":{"line":1474,"column":4},"end":{"line":1494,"column":5}},"type":"if","locations":[{"start":{"line":1474,"column":4},"end":{"line":1494,"column":5}},{"start":{},"end":{}}],"line":1474},"222":{"loc":{"start":{"line":1476,"column":6},"end":{"line":1478,"column":7}},"type":"if","locations":[{"start":{"line":1476,"column":6},"end":{"line":1478,"column":7}},{"start":{},"end":{}}],"line":1476},"223":{"loc":{"start":{"line":1479,"column":6},"end":{"line":1481,"column":7}},"type":"if","locations":[{"start":{"line":1479,"column":6},"end":{"line":1481,"column":7}},{"start":{},"end":{}}],"line":1479},"224":{"loc":{"start":{"line":1479,"column":10},"end":{"line":1479,"column":85}},"type":"binary-expr","locations":[{"start":{"line":1479,"column":10},"end":{"line":1479,"column":45}},{"start":{"line":1479,"column":49},"end":{"line":1479,"column":85}}],"line":1479},"225":{"loc":{"start":{"line":1482,"column":6},"end":{"line":1484,"column":7}},"type":"if","locations":[{"start":{"line":1482,"column":6},"end":{"line":1484,"column":7}},{"start":{},"end":{}}],"line":1482},"226":{"loc":{"start":{"line":1486,"column":6},"end":{"line":1488,"column":7}},"type":"if","locations":[{"start":{"line":1486,"column":6},"end":{"line":1488,"column":7}},{"start":{},"end":{}}],"line":1486},"227":{"loc":{"start":{"line":1490,"column":6},"end":{"line":1492,"column":7}},"type":"if","locations":[{"start":{"line":1490,"column":6},"end":{"line":1492,"column":7}},{"start":{},"end":{}}],"line":1490},"228":{"loc":{"start":{"line":1490,"column":10},"end":{"line":1490,"column":103}},"type":"binary-expr","locations":[{"start":{"line":1490,"column":10},"end":{"line":1490,"column":60}},{"start":{"line":1490,"column":64},"end":{"line":1490,"column":103}}],"line":1490},"229":{"loc":{"start":{"line":1495,"column":4},"end":{"line":1497,"column":5}},"type":"if","locations":[{"start":{"line":1495,"column":4},"end":{"line":1497,"column":5}},{"start":{},"end":{}}],"line":1495},"230":{"loc":{"start":{"line":1503,"column":9},"end":{"line":1503,"column":67}},"type":"binary-expr","locations":[{"start":{"line":1503,"column":9},"end":{"line":1503,"column":37}},{"start":{"line":1503,"column":41},"end":{"line":1503,"column":67}}],"line":1503}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":43,"22":43,"23":43,"24":43,"25":172,"26":172,"27":172,"28":172,"29":172,"30":312,"31":312,"32":43,"33":10,"34":10,"35":10,"36":55,"37":55,"38":55,"39":55,"40":55,"41":69,"42":69,"43":0,"44":69,"45":0,"46":69,"47":10,"48":33,"49":10,"50":10,"51":10,"52":43,"53":43,"54":43,"55":43,"56":43,"57":43,"58":43,"59":43,"60":43,"61":43,"62":43,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":78,"70":0,"71":78,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":417,"85":0,"86":251,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":10,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":43,"770":43,"771":43,"772":43,"773":43,"774":43,"775":43,"776":43,"777":43,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":312,"805":1,"806":311,"807":1,"808":310,"809":5,"810":5,"811":3,"812":2,"813":0,"814":2,"815":0,"816":2,"817":2,"818":0,"819":2,"820":2,"821":0,"822":2,"823":305,"824":305,"825":0,"826":2,"827":2},"f":{"0":1,"1":1,"2":43,"3":43,"4":10,"5":33,"6":10,"7":43,"8":0,"9":0,"10":0,"11":78,"12":0,"13":78,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":417,"25":0,"26":251,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":10,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":43,"150":0,"151":312,"152":2},"b":{"0":[1,1],"1":[1,1],"2":[0],"3":[172,0],"4":[0],"5":[55,0],"6":[0,69],"7":[0,69],"8":[10,0],"9":[0,43],"10":[251,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0],"56":[0],"57":[0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0],"73":[0],"74":[0,0],"75":[0,0],"76":[0],"77":[0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0,0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0,0],"105":[0,0],"106":[0,0],"107":[0,0,0,0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0],"143":[0,0],"144":[0,0,0,0,0],"145":[0,0],"146":[0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0,0,0,0,0,0,0,0,0,0,0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0,0,0,0,0,0,0,0,0,0,0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[43,0],"214":[0,0],"215":[0],"216":[0],"217":[0,0],"218":[0,0],"219":[1,311],"220":[1,310],"221":[5,305],"222":[3,2],"223":[0,2],"224":[2,2],"225":[0,2],"226":[0,2],"227":[0,2],"228":[2,2],"229":[305,0],"230":[2,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/array-value-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\nimport type { callbackMapFnType, IArrayValueObject } from './base-value-object';\n\nimport { isRealNum } from '@univerjs/core';\nimport { BooleanValue } from '../../basics/common';\nimport { ERROR_TYPE_SET, ErrorType } from '../../basics/error-type';\nimport { CELL_INVERTED_INDEX_CACHE } from '../../basics/inverted-index-cache';\nimport { regexTestArrayValue } from '../../basics/regex';\nimport { compareToken } from '../../basics/token';\nimport { ArrayBinarySearchType, ArrayOrderSearchType, getCompare } from '../utils/compare';\nimport { stringIsNumberPattern } from '../utils/numfmt-kit';\nimport { BaseValueObject, ErrorValueObject } from './base-value-object';\nimport { BooleanValueObject, createBooleanValueObjectByRawValue, createNumberValueObjectByRawValue, createStringValueObjectByRawValue, NullValueObject, NumberValueObject, StringValueObject } from './primitive-object';\n\nenum BatchOperatorType {\n    MINUS,\n    PLUS,\n    MULTIPLY,\n    DIVIDED,\n    MOD,\n    COMPARE,\n    CONCATENATE_FRONT,\n    CONCATENATE_BACK,\n    POW,\n    ROUND,\n    FLOOR,\n    CEIL,\n    ATAN2,\n}\n\nenum ArrayCalculateType {\n    PRODUCT,\n    ROW,\n    COLUMN,\n    SINGLE,\n}\n\nexport function fromObjectToString(array: IArrayValueObject) {\n    return '';\n}\n\nexport function transformToValueObject(array: Array<Array<number | string | boolean | null>> = []) {\n    const arrayValueList: BaseValueObject[][] = [];\n\n    for (let r = 0; r < array.length; r++) {\n        const row = array[r];\n\n        if (arrayValueList[r] == null) {\n            arrayValueList[r] = [];\n        }\n\n        for (let c = 0; c < row.length; c++) {\n            const cell = row[c];\n\n            arrayValueList[r][c] = ValueObjectFactory.create(cell);\n        }\n    }\n\n    return arrayValueList;\n}\n\nexport function transformToValue(array: Nullable<BaseValueObject>[][] = []) {\n    const arrayValueList: Array<Array<string | number | boolean | null>> = [];\n\n    for (let r = 0; r < array.length; r++) {\n        const row = array[r];\n\n        if (arrayValueList[r] == null) {\n            arrayValueList[r] = [];\n        }\n\n        for (let c = 0; c < row.length; c++) {\n            const cell = row[c];\n\n            if (cell == null) {\n                arrayValueList[r][c] = null;\n            } else if (cell.isError()) {\n                arrayValueList[r][c] = (cell as ErrorValueObject).getErrorType();\n            } else {\n                arrayValueList[r][c] = (cell as BaseValueObject).getValue();\n            }\n        }\n    }\n\n    return arrayValueList;\n}\n\nexport class ArrayValueObject extends BaseValueObject {\n    /**\n     * Create an array value object based on the string or IArrayValueObject data.\n     * @param rawValue\n     * @returns\n     */\n    static create(rawValue: string | IArrayValueObject) {\n        return new ArrayValueObject(rawValue);\n    }\n\n    /**\n     * Create an array value object based on the array data.\n     * @param array\n     * @returns\n     */\n    static createByArray(array: Array<Array<number | string | boolean | null>>) {\n        const calculateValueList = transformToValueObject(array);\n        const arrayValueObjectData: IArrayValueObject = {\n            calculateValueList,\n            rowCount: array.length,\n            columnCount: array[0].length || 0,\n            unitId: '',\n            sheetId: '',\n            row: -1,\n            column: -1,\n        };\n\n        return new ArrayValueObject(arrayValueObjectData);\n    }\n\n    private _values: Nullable<BaseValueObject>[][] = [];\n\n    private _rowCount: number = -1;\n\n    private _columnCount: number = -1;\n\n    private _unitId: string = '';\n\n    private _sheetId: string = '';\n\n    private _currentRow: number = -1;\n\n    private _currentColumn: number = -1;\n\n    private _sliceCache = new Map<string, ArrayValueObject>();\n\n    private _flattenCache: Nullable<ArrayValueObject>;\n\n    /**\n     * The default value of the array, null values in comparison results support setting to false\n     */\n    private _defaultValue: Nullable<BaseValueObject> = null;\n\n    private _flattenPosition: Nullable<{\n        stringArray: BaseValueObject[];\n        stringPosition: number[];\n        numberArray: BaseValueObject[];\n        numberPosition: number[];\n    }>;\n\n    constructor(rawValue: string | IArrayValueObject) {\n        super(typeof rawValue === 'string' ? rawValue as string : fromObjectToString(rawValue as IArrayValueObject));\n\n        this._values = this._formatValue(rawValue);\n    }\n\n    override dispose(): void {\n        // this._values.forEach((cells) => {\n        //     cells.forEach((cell) => {\n        //         cell?.dispose();\n        //     });\n        // });\n\n        this._values = [];\n\n        this._defaultValue = null;\n\n        this._flattenPosition = null;\n\n        this._clearCache();\n    }\n\n    clone() {\n        return this.map((o) => {\n            return o;\n        }) as ArrayValueObject;\n    }\n\n    getRowCount() {\n        return this._rowCount;\n    }\n\n    setRowCount(rowCount: number) {\n        this._rowCount = rowCount;\n    }\n\n    getColumnCount() {\n        return this._columnCount;\n    }\n\n    setColumnCount(columnCount: number) {\n        this._columnCount = columnCount;\n    }\n\n    setCurrent(row: number, column: number) {\n        this._currentRow = row;\n        this._currentColumn = column;\n    }\n\n    setUnitId(unitId: string) {\n        this._unitId = unitId;\n    }\n\n    getUnitId() {\n        return this._unitId;\n    }\n\n    setSheetId(sheetId: string) {\n        this._sheetId = sheetId;\n    }\n\n    getSheetId() {\n        return this._sheetId;\n    }\n\n    getCurrentRow() {\n        return this._currentRow;\n    }\n\n    getCurrentColumn() {\n        return this._currentColumn;\n    }\n\n    override getArrayValue() {\n        return this._values;\n    }\n\n    override setArrayValue(value: BaseValueObject[][]) {\n        this._clearCache();\n        this._values = value;\n    }\n\n    override isArray() {\n        return true;\n    }\n\n    setDefaultValue(value: Nullable<BaseValueObject>) {\n        this._defaultValue = value;\n    }\n\n    get(row: number, column: number) {\n        // const rowValues = this._values[row];\n        // if (rowValues == null) {\n        //     return null;\n        // }\n\n        // const v = rowValues[column];\n        // if (v == null) {\n        //     return null;\n        // }\n        return this._values[row]?.[column] || this._defaultValue;\n    }\n\n    getRealValue(row: number, column: number) {\n        const rowValues = this._values[row];\n        if (rowValues == null) {\n            return null;\n        }\n\n        const v = rowValues[column];\n        if (v == null) {\n            return null;\n        }\n        return v;\n    }\n\n    getValueOrDefault(row: number, column: number) {\n        return this.get(row, column) || this._defaultValue;\n    }\n\n    set(row: number, column: number, value: Nullable<BaseValueObject>) {\n        if (row >= this._rowCount || column >= this._columnCount) {\n            throw new Error('Exceeding array bounds.');\n        }\n\n        this._clearCache();\n\n        this._values[row][column] = value;\n    }\n\n    getRangePosition() {\n        const startRow = 0;\n        const rowCount = this.getRowCount();\n        const startColumn = 0;\n        const columnCount = this.getColumnCount();\n\n        return {\n            startRow,\n            endRow: rowCount - 1,\n            startColumn,\n            endColumn: columnCount - 1,\n        };\n    }\n\n    iterator(\n        callback: (valueObject: Nullable<BaseValueObject>, rowIndex: number, columnIndex: number) => Nullable<boolean>\n    ) {\n        const { startRow, endRow, startColumn, endColumn } = this.getRangePosition();\n\n        const valueList = this.getArrayValue();\n\n        for (let r = startRow; r <= endRow; r++) {\n            for (let c = startColumn; c <= endColumn; c++) {\n                if (callback(valueList[r]?.[c] || this._defaultValue, r, c) === false) {\n                    return;\n                }\n            }\n        }\n    }\n\n    iteratorReverse(\n        callback: (valueObject: Nullable<BaseValueObject>, rowIndex: number, columnIndex: number) => Nullable<boolean>\n    ) {\n        const { startRow, endRow, startColumn, endColumn } = this.getRangePosition();\n\n        const valueList = this.getArrayValue();\n\n        for (let r = endRow; r >= startRow; r--) {\n            for (let c = endColumn; c >= startColumn; c--) {\n                if (callback(valueList[r]?.[c] || this._defaultValue, r, c) === false) {\n                    return;\n                }\n            }\n        }\n    }\n\n    getLastTruePosition() {\n        let rangeSingle: Nullable<{ row: number; column: number }>;\n\n        this.iteratorReverse((value, rowIndex, columnIndex) => {\n            if (value?.isBoolean() && (value as BaseValueObject).getValue() === true) {\n                rangeSingle = {\n                    row: rowIndex,\n                    column: columnIndex,\n                };\n\n                return false;\n            }\n        });\n\n        return rangeSingle;\n    }\n\n    getFirstTruePosition() {\n        let rangeSingle: Nullable<{ row: number; column: number }>;\n\n        this.iterator((value, rowIndex, columnIndex) => {\n            if (value?.isBoolean() && (value as BaseValueObject).getValue() === true) {\n                rangeSingle = {\n                    row: rowIndex,\n                    column: columnIndex,\n                };\n\n                return false;\n            }\n        });\n\n        return rangeSingle;\n    }\n\n    getFirstCell() {\n        const { startRow, startColumn } = this.getRangePosition();\n        return this.get(startRow, startColumn) || this._defaultValue || NullValueObject.create();\n    }\n\n    getLastCell() {\n        const { endRow, endColumn } = this.getRangePosition();\n        return this.get(endRow, endColumn) || this._defaultValue || NullValueObject.create();\n    }\n\n    /**\n     * Referring to matrix calculations,\n     * extract the matching values from a true/false matrix based on parameters and store them in a two-dimensional array.\n     * implement x[x<10]\n     * https://numpy.org/doc/stable/user/basics.indexing.html\n     * @param takeArray\n     */\n    pick(takeArray: ArrayValueObject) {\n        const newValue = this.pickRaw(takeArray);\n\n        return this._createNewArray(newValue, 1, newValue[0].length);\n    }\n\n    pickRaw(takeArray: ArrayValueObject) {\n        const takeArrayRowCount = takeArray.getRowCount();\n        const takeArrayColumnCount = takeArray.getColumnCount();\n\n        if (takeArrayRowCount !== this._rowCount || takeArrayColumnCount !== this._columnCount) {\n            return [[NullValueObject.create()]];\n        }\n\n        const newValue: Nullable<BaseValueObject>[][] = [];\n\n        newValue[0] = [];\n\n        for (let r = 0; r < takeArrayRowCount; r++) {\n            for (let c = 0; c < takeArrayColumnCount; c++) {\n                const takeCell = takeArray.get(r, c);\n\n                if (takeCell == null || takeCell.isError()) {\n                    continue;\n                }\n\n                if ((takeCell as BaseValueObject).getValue() === true) {\n                    const value = this.get(r, c);\n                    newValue[0].push(value);\n                }\n            }\n        }\n\n        return newValue;\n    }\n\n    /**\n     * Flatten a 2D array.\n     * https://numpy.org/doc/stable/reference/generated/numpy.chararray.flatten.html#numpy.chararray.flatten\n     */\n    flatten() {\n        if (this._flattenCache != null) {\n            return this._flattenCache;\n        }\n\n        const newValue: Nullable<BaseValueObject>[][] = [];\n        newValue[0] = [];\n        for (let r = 0; r < this._rowCount; r++) {\n            for (let c = 0; c < this._columnCount; c++) {\n                const value = this.get(r, c);\n\n                newValue[0].push(value);\n            }\n        }\n\n        const arrayV = this._createNewArray(newValue, 1, newValue[0].length);\n\n        arrayV.setDefaultValue(this._defaultValue);\n\n        this._flattenCache = arrayV;\n\n        return arrayV;\n    }\n\n    /**\n     * Flatten a 2D array.\n     * In Excel, errors and blank cells are ignored, which results in a binary search that cannot strictly adhere to the number of cells.\n     */\n    flattenPosition() {\n        if (this._flattenPosition != null) {\n            return this._flattenPosition;\n        }\n\n        const stringValue: BaseValueObject[] = [];\n        const numberValue: BaseValueObject[] = [];\n        const stringPosition: number[] = [];\n        const numberPosition: number[] = [];\n        let index = 0;\n        for (let r = 0; r < this._rowCount; r++) {\n            for (let c = 0; c < this._columnCount; c++) {\n                const value = this.get(r, c);\n\n                if (value == null || value.isError() || value.isNull()) {\n                    index++;\n                    continue;\n                }\n\n                if (value.isString()) {\n                    stringValue.push(value);\n                    stringPosition.push(index++);\n                } else {\n                    numberValue.push(value);\n                    numberPosition.push(index++);\n                }\n            }\n        }\n\n        // const stringArray = this._createNewArray(stringValue, 1, stringValue[0].length);\n        // const numberArray = this._createNewArray(numberValue, 1, numberValue[0].length);\n\n        const result = {\n            stringArray: stringValue,\n            numberArray: numberValue,\n            stringPosition,\n            numberPosition,\n        };\n\n        this._flattenPosition = result;\n\n        return result;\n    }\n\n    /**\n     * I'm looking to perform slicing operations on 2D arrays, similar to the functionality provided by NumPy.\n     * https://numpy.org/doc/stable/user/basics.indexing.html\n     * @rowParam start:stop:step\n     * @columnParam start:stop:step\n     * @param takeArray\n     */\n    slice(rowParam: Nullable<Array<Nullable<number>>>, columnParam: Nullable<Array<Nullable<number>>>) {\n        let rowStart = 0;\n        let rowStop = this._rowCount;\n        let rowStep = 1;\n\n        let columnStart = 0;\n        let columnStop = this._columnCount;\n        let columnStep = 1;\n\n        if (rowParam != null) {\n            rowStart = rowParam[0] || 0;\n            rowStop = rowParam[1] || this._rowCount;\n            rowStep = rowParam[2] || 1;\n        }\n\n        if (columnParam != null) {\n            columnStart = columnParam[0] || 0;\n            columnStop = columnParam[1] || this._columnCount;\n            columnStep = columnParam[2] || 1;\n        }\n\n        if (rowStart >= this._rowCount || columnStart >= this._columnCount) {\n            return;\n        }\n\n        const cacheKey = `${rowStart}_${rowStop}_${rowStep}_${columnStart}_${columnStop}_${columnStep}`;\n\n        const cache = this._sliceCache.get(cacheKey);\n\n        if (cache != null) {\n            return cache;\n        }\n\n        const result: BaseValueObject[][] = [];\n\n        const array = this._values;\n\n        let result_row_index = 0;\n        let result_column_index = 0;\n        for (let r = rowStart; r < rowStop; r += rowStep) {\n            result_column_index = 0;\n            if (result[result_row_index] == null) {\n                result[result_row_index] = [];\n            }\n            for (let c = columnStart; c < columnStop; c += columnStep) {\n                if (!array[r]) {\n                    return;\n                };\n\n                let cell = array[r][c] || this._defaultValue;\n\n                if (cell == null) {\n                    cell = NullValueObject.create();\n                }\n\n                result[result_row_index][result_column_index] = cell;\n                result_column_index++;\n            }\n            result_row_index++;\n        }\n\n        if (result.length === 0 || result[0].length === 0) {\n            return;\n        }\n\n        /**\n         * When iterating, arrayValue will create an inverted index cache for cell reference data.\n         * If the array is created by ref, it will hit the cache,\n         * but arrays derived from another array will lose the caching ability.\n         * Here, based on the slice range, it is determined whether to set row and column to -1;\n         * -1 means that caching is not enabled.\n         */\n        const startRow = rowStep > 1 ? -1 : rowStart + this._currentRow;\n\n        const startColumn = columnStep > 1 ? -1 : columnStart + this._currentColumn;\n\n        const newResultArray = this._createNewArray(result, result.length, result[0].length, startRow, startColumn);\n\n        // Synchronize defaultValue\n        newResultArray.setDefaultValue(this._defaultValue);\n\n        this._sliceCache.set(cacheKey, newResultArray);\n\n        return newResultArray;\n    }\n\n    sortByRow(index: number) {\n        // new Intl.Collator('zh', { numeric: true }).compare;\n        const result: Nullable<BaseValueObject>[][] = this._transposeArray(this._values);\n\n        result.sort(this._sort(index));\n\n        this._clearCache();\n\n        this._values = this._transposeArray(result);\n    }\n\n    sortByColumn(index: number) {\n        this._clearCache();\n        this._values.sort(this._sort(index));\n    }\n\n    transpose() {\n        const transposeArray = this._transposeArray(this._values);\n\n        const rowCount = this._rowCount;\n        const columnCount = this._columnCount;\n\n        const newArray = this._createNewArray(transposeArray, columnCount, rowCount);\n\n        newArray.setDefaultValue(this._defaultValue);\n        return newArray;\n    }\n\n    /**\n     * Due to the inability to effectively utilize the cache,\n     * the sequential matching approach is only used for special matches in XLOOKUP and XMATCH.\n     * For example, when match_mode is set to 1 and -1 for an exact match. If not found, it returns the next smaller item.\n     */\n\n    orderSearch(\n        valueObject: BaseValueObject,\n        searchType: ArrayOrderSearchType = ArrayOrderSearchType.MIN,\n        isDesc = false,\n        isFuzzyMatching = false\n    ) {\n        let result: Nullable<BaseValueObject>;\n        let maxOrMin: Nullable<BaseValueObject>;\n        let resultPosition: Nullable<{ row: number; column: number }>;\n\n        let maxOrMinPosition: Nullable<{ row: number; column: number }>;\n\n        const _handleMatch = (itemValue: Nullable<BaseValueObject>, row: number, column: number) => {\n            if (itemValue == null) {\n                return true;\n            }\n\n            let matchObject: Nullable<BaseValueObject>;\n            if (isFuzzyMatching === true) {\n                matchObject = itemValue.compare(valueObject as StringValueObject, compareToken.EQUALS);\n            } else {\n                matchObject = itemValue.isEqual(valueObject);\n            }\n\n            if (matchObject?.getValue() === true) {\n                result = itemValue;\n                resultPosition = { row, column };\n                return false;\n            }\n\n            if (searchType === ArrayOrderSearchType.MAX) {\n                if (itemValue.isGreaterThan(valueObject).getValue() === true) {\n                    if (\n                        maxOrMin == null ||\n                        itemValue\n                            .minus(valueObject)\n                            .abs()\n                            .isLessThanOrEqual(maxOrMin.minus(valueObject).abs())\n                            .getValue() === true\n                    ) {\n                        maxOrMin = itemValue;\n                        maxOrMinPosition = { row, column };\n                    }\n                }\n            } else if (searchType === ArrayOrderSearchType.MIN) {\n                if (itemValue.isLessThan(valueObject).getValue() === true) {\n                    if (\n                        maxOrMin == null ||\n                        itemValue\n                            .minus(valueObject)\n                            .abs()\n                            .isLessThanOrEqual(maxOrMin.minus(valueObject).abs())\n                            .getValue() === true\n                    ) {\n                        maxOrMin = itemValue;\n                        maxOrMinPosition = { row, column };\n                    }\n                }\n            }\n        };\n\n        if (isDesc) {\n            this.iteratorReverse((itemValue, r, c) => {\n                return _handleMatch(itemValue, r, c);\n            });\n        } else {\n            this.iterator((itemValue, r, c) => {\n                return _handleMatch(itemValue, r, c);\n            });\n        }\n\n        if (result != null) {\n            return resultPosition;\n        }\n\n        if (maxOrMin != null) {\n            return maxOrMinPosition;\n        }\n    }\n\n    binarySearch(valueObject: BaseValueObject, searchType: ArrayBinarySearchType = ArrayBinarySearchType.MIN, matchType: ArrayOrderSearchType = ArrayOrderSearchType.MIN) {\n        if (valueObject.isError()) {\n            return;\n        }\n\n        const { stringArray, stringPosition, numberArray, numberPosition } = this.flattenPosition();\n\n        if (valueObject.isString()) {\n            return this._binarySearch(valueObject, stringArray, stringPosition, searchType, matchType);\n        }\n\n        const result = this._binarySearch(valueObject, numberArray, numberPosition, searchType, matchType);\n        // if (result == null) {\n        //     result = this._binarySearch(valueObject, stringArray, stringPosition, searchType);\n        // }\n        return result;\n\n        // const stringMatrix = stringArray.getArrayValue();\n        // const valueStringArray = stringMatrix[0];\n\n        // const numberMatrix = numberArray.getArrayValue();\n        // const valueNumberArray = numberMatrix[0];\n    }\n\n    /**\n     * searchType defaults to ascending order\n     *\n     * matchType defaults to the maximum value less than the search value, which is used for the default matching mode of VLOOKUP/LOOKUP/HLOOKUP.\n     * @param valueObject\n     * @param searchArray\n     * @param positionArray\n     * @param searchType\n     * @param matchType\n     * @returns\n     */\n    private _binarySearch(\n        valueObject: BaseValueObject,\n        searchArray: BaseValueObject[],\n        positionArray: number[],\n        searchType: ArrayBinarySearchType = ArrayBinarySearchType.MIN,\n        matchType: ArrayOrderSearchType = ArrayOrderSearchType.MIN\n    ) {\n        const compareFunc = getCompare();\n\n        // Convert to number if possible, otherwise use string\n        const value = Number(valueObject.getValue());\n        const isValueNumber = !Number.isNaN(value);\n\n        let start = 0;\n        let end = searchArray.length - 1;\n        let exactMatchIndex = -1;\n        let nearestSmallerIndex = -1;\n        let nearestLargerIndex = -1;\n\n        while (start <= end) {\n            const middle = Math.floor((start + end) / 2);\n            const compareTo = searchArray[middle];\n\n            let compareResult: number;\n            if (compareTo.isNull()) {\n                compareResult = searchType === ArrayBinarySearchType.MIN ? 1 : -1;\n            } else {\n                const compareToValue = compareTo.getValue();\n                if (isValueNumber) {\n                    const compareToNumber = Number(compareToValue);\n                    compareResult = Number.isNaN(compareToNumber) ? 1 : Math.sign(compareToNumber - value);\n                } else {\n                    compareResult = compareFunc(compareToValue.toString().toLocaleLowerCase(), valueObject.getValue().toString().toLocaleLowerCase());\n                }\n            }\n\n            // Reverse comparison result if searchType is MAX (descending order)\n            if (searchType === ArrayBinarySearchType.MAX) {\n                compareResult = -compareResult;\n            }\n\n            if (compareResult === 0) {\n                // Exact match found\n                exactMatchIndex = middle;\n                break;\n            }\n\n            if (compareResult < 0) {\n                // compareTo < value\n                nearestSmallerIndex = middle;\n                start = middle + 1;\n            } else {\n                // compareTo > value\n                nearestLargerIndex = middle;\n                end = middle - 1;\n            }\n        }\n\n        // Determine the result based on matchType\n        if (matchType === ArrayOrderSearchType.NORMAL) {\n            return exactMatchIndex !== -1 ? positionArray[exactMatchIndex] : undefined;\n        }\n\n        if (matchType === ArrayOrderSearchType.MIN) {\n            if (exactMatchIndex !== -1) return positionArray[exactMatchIndex];\n            return searchType === ArrayBinarySearchType.MIN ?\n                positionArray[nearestSmallerIndex]\n                : positionArray[nearestLargerIndex];\n        }\n\n        if (matchType === ArrayOrderSearchType.MAX) {\n            if (exactMatchIndex !== -1) return positionArray[exactMatchIndex];\n            return searchType === ArrayBinarySearchType.MIN ?\n                positionArray[nearestLargerIndex]\n                : positionArray[nearestSmallerIndex];\n        }\n\n        // If no suitable match found based on matchType\n        return undefined;\n    }\n\n    override sum() {\n        let accumulatorAll: BaseValueObject = NumberValueObject.create(0);\n        this.iterator((valueObject) => {\n            // 'test', ' ',  blank cell, TRUE and FALSE are ignored\n            if (valueObject == null || valueObject.isString() || valueObject.isBoolean() || valueObject.isNull()) {\n                return true; // continue\n            }\n\n            if (valueObject.isError()) {\n                accumulatorAll = valueObject;\n                return false; // break\n            }\n            accumulatorAll = (accumulatorAll as NumberValueObject).plus(\n                valueObject as BaseValueObject\n            ) as BaseValueObject;\n        });\n\n        return accumulatorAll;\n    }\n\n    override max() {\n        let accumulatorAll: BaseValueObject = NumberValueObject.create(Number.NEGATIVE_INFINITY);\n        this.iterator((valueObject) => {\n            if (valueObject == null) {\n                return true; // continue\n            }\n\n            if (valueObject.isError()) {\n                accumulatorAll = valueObject;\n                return false; // break\n            }\n\n            // ignore boolean value in array, but not ignore in normal value object\n            if (valueObject.isString() || valueObject.isNull() || valueObject.isBoolean()) {\n                return true; // continue\n            }\n\n            const result = accumulatorAll.isLessThan(valueObject) as BooleanValueObject;\n\n            if (result.getValue()) {\n                accumulatorAll = valueObject as NumberValueObject;\n            }\n        });\n\n        return accumulatorAll;\n    }\n\n    override min() {\n        let accumulatorAll: BaseValueObject = NumberValueObject.create(Number.POSITIVE_INFINITY);\n\n        this.iterator((valueObject) => {\n            if (valueObject == null) {\n                return true; // continue\n            }\n\n            if (valueObject.isError()) {\n                accumulatorAll = valueObject;\n                return false; // break\n            }\n\n            // ignore boolean value in array, but not ignore in normal value object\n            if (valueObject.isString() || valueObject.isNull() || valueObject.isBoolean()) {\n                return true; // continue\n            }\n\n            const result = accumulatorAll.isGreaterThan(valueObject) as BooleanValueObject;\n\n            if (result.getValue()) {\n                accumulatorAll = valueObject as NumberValueObject;\n            }\n        });\n\n        return accumulatorAll;\n    }\n\n    override count() {\n        let accumulatorAll: BaseValueObject = NumberValueObject.create(0);\n        this.iterator((valueObject) => {\n            // 'test', ' ',  blank cell, TRUE and FALSE are ignored\n            if (valueObject == null || valueObject.isError() || valueObject.isString() || valueObject.isNull() || valueObject.isBoolean()) {\n                return true; // continue\n            }\n            accumulatorAll = accumulatorAll.plusBy(1) as BaseValueObject;\n        });\n\n        return accumulatorAll;\n    }\n\n    override countA() {\n        let accumulatorAll: BaseValueObject = NumberValueObject.create(0);\n        this.iterator((valueObject) => {\n            if (valueObject == null || valueObject.isNull()) {\n                return true; // continue\n            }\n\n            accumulatorAll = accumulatorAll.plusBy(1);\n        });\n\n        return accumulatorAll;\n    }\n\n    override countBlank() {\n        let accumulatorAll: BaseValueObject = NumberValueObject.create(0);\n        this.iterator((valueObject) => {\n            if (valueObject == null || valueObject.isNull() || (valueObject.getValue() === '')) {\n                accumulatorAll = accumulatorAll.plusBy(1) as BaseValueObject;\n            }\n        });\n\n        return accumulatorAll;\n    }\n\n    override getNegative(): BaseValueObject {\n        const arrayValueObject = ArrayValueObject.create('{0}');\n        return arrayValueObject.minus(this);\n    }\n\n    override getReciprocal(): BaseValueObject {\n        const arrayValueObject = ArrayValueObject.create('{1}');\n\n        return arrayValueObject.divided(this);\n\n        // return NumberValueObject.create(1).divided(this);\n    }\n\n    override plus(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.PLUS);\n    }\n\n    override minus(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.MINUS);\n    }\n\n    override multiply(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.MULTIPLY);\n    }\n\n    override divided(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.DIVIDED);\n    }\n\n    override mod(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.MOD);\n    }\n\n    override modInverse(valueObject: BaseValueObject): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return valueObject.mod(currentValue);\n        });\n    }\n\n    override compare(valueObject: BaseValueObject, operator: compareToken, isCaseSensitive?: boolean): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.COMPARE, operator, isCaseSensitive);\n    }\n\n    override concatenateFront(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.CONCATENATE_FRONT);\n    }\n\n    override concatenateBack(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.CONCATENATE_BACK);\n    }\n\n    override map(callbackFn: callbackMapFnType): BaseValueObject {\n        const wrappedCallbackFn = (currentValue: Nullable<BaseValueObject>, r: number, c: number) => {\n            if (currentValue == null) {\n                return NullValueObject.create();\n            }\n            if (currentValue.isError()) {\n                return currentValue as ErrorValueObject;\n            } else {\n                return callbackFn(currentValue, r, c);\n            }\n        };\n\n        return this.mapValue(wrappedCallbackFn);\n    }\n\n    override mapValue(callbackFn: callbackMapFnType): BaseValueObject {\n        const rowCount = this._rowCount;\n        const columnCount = this._columnCount;\n\n        const result: BaseValueObject[][] = [];\n\n        for (let r = 0; r < rowCount; r++) {\n            const rowList: BaseValueObject[] = [];\n            for (let c = 0; c < columnCount; c++) {\n                const row = this._values?.[r];\n\n                if (row == null) {\n                    rowList[c] = ErrorValueObject.create(ErrorType.VALUE);\n                } else {\n                    const currentValue = row[c] || this._defaultValue;\n\n                    if (currentValue) {\n                        rowList[c] = callbackFn(currentValue, r, c);\n                    } else {\n                        rowList[c] = NullValueObject.create();\n                    }\n                }\n            }\n            result.push(rowList);\n        }\n\n        return this._createNewArray(result, rowCount, columnCount);\n    }\n\n    override pow(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.POW);\n    }\n\n    /**\n     *\n     * @param valueObject In the case of an inverse, it is certainly not an array.\n     * @returns\n     */\n    override powInverse(valueObject: BaseValueObject): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return valueObject.pow(currentValue);\n        });\n    }\n\n    override sqrt(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.sqrt();\n        });\n    }\n\n    override cbrt(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.cbrt();\n        });\n    }\n\n    override cos(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.cos();\n        });\n    }\n\n    override cosh(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.cosh();\n        });\n    }\n\n    override acos(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.acos();\n        });\n    }\n\n    override acosh(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.acosh();\n        });\n    }\n\n    override sin(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.sin();\n        });\n    }\n\n    override sinh(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.sinh();\n        });\n    }\n\n    override asin(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.asin();\n        });\n    }\n\n    override asinh(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.asinh();\n        });\n    }\n\n    override tan(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.tan();\n        });\n    }\n\n    override tanh(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.tanh();\n        });\n    }\n\n    override atan(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.atan();\n        });\n    }\n\n    override atanh(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.atanh();\n        });\n    }\n\n    override atan2(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.ATAN2);\n    }\n\n    override atan2Inverse(valueObject: BaseValueObject): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return valueObject.atan2(currentValue);\n        });\n    }\n\n    override mean(ddof: number = 0): BaseValueObject {\n        const sum = this.sum();\n\n        // Like sum, ignore strings and booleans\n        const count = this.count();\n\n        return sum.divided(ddof === 0 ? count : count.minusBy(1));\n    }\n\n    override median(): BaseValueObject {\n        const numberArray = this.flattenPosition().numberArray;\n\n        const allValue = this._createNewArray([numberArray], 1, numberArray.length);\n\n        const count = allValue.getColumnCount();\n\n        if (count <= 1) {\n            return allValue.get(0, 0) || NullValueObject.create();\n        }\n\n        allValue.sortByRow(0);\n\n        if (count % 2 === 0) {\n            const medianRight = allValue.get(0, count / 2) || NullValueObject.create();\n            const medianLeft = allValue.get(0, count / 2 - 1) || NullValueObject.create();\n\n            return medianRight.plus(medianLeft).divided(NumberValueObject.create(2));\n        }\n\n        return allValue.get(0, (count - 1) / 2) || NullValueObject.create();\n    }\n\n    /**\n     * ┌──────────────┬────────────────────────────────┬───────────────────┐\n     * │ Function     │ Ignore logical values and text │ Type              │\n     * ├──────────────┼────────────────────────────────┼───────────────────┤\n     * │ VAR.S (VAR)  │ TRUE                           │ sample            │\n     * │ VAR.P (VARP) │ TRUE                           │ entire population │\n     * │ VARA         │ FALSE                          │ sample            │\n     * │ VARPA        │ FALSE                          │ entire population │\n     * └──────────────┴────────────────────────────────┴───────────────────┘\n     *\n     * for VARPA and VARA, strings and FALSE are counted as 0, TRUE is counted as 1\n     * for VAR.S/VAR, or VAR.P/VARP, strings,TRUE and FALSE are ignored\n     * Since sum ignores strings and booleans, they are ignored here too, and VAR.S and VAR.P are used more\n     *\n     * VAR.S assumes that its arguments are a sample of the population, like numpy.var(data, ddof=1)\n     * VAR.P assumes that its arguments are the entire population, like numpy.var(data, ddof=0)\n     * numpy.var uses ddof=0 (Delta Degrees of Freedom) by default, so we use ddof=0 here\n     *\n     */\n    override var(ddof: number = 0): BaseValueObject {\n        const mean = this.mean();\n\n        // let isError = null;\n        const squaredDifferences: BaseValueObject[][] = [[]];\n        this.iterator((valueObject: Nullable<BaseValueObject>) => {\n            if (valueObject == null || valueObject.isError() || valueObject.isString() || valueObject.isBoolean() || valueObject.isNull()) {\n                return;\n            }\n\n            const baseValueObject = valueObject.minus(mean).pow(NumberValueObject.create(2));\n\n            if (baseValueObject.isError()) {\n                return;\n            }\n\n            squaredDifferences[0].push(baseValueObject);\n        });\n\n        const { _unitId, _sheetId, _currentRow, _currentColumn } = this;\n\n        const squaredDifferencesArrayObject = ArrayValueObject.create({\n            calculateValueList: squaredDifferences,\n            rowCount: 1,\n            columnCount: squaredDifferences[0].length,\n            unitId: _unitId,\n            sheetId: _sheetId,\n            row: _currentRow,\n            column: _currentColumn,\n        });\n\n        return squaredDifferencesArrayObject.mean(ddof);\n    }\n\n    /**\n     * STDEV.P (STDEVP): ddof=0, ignore strings and booleans\n     * STDEV.S (STDEV): ddof=1, ignore strings and booleans\n     *\n     * STDEVPA: ddof=0,\n     * STDEVA: ddof=1,\n     * @returns\n     */\n    override std(ddof: number = 0): BaseValueObject {\n        const variance = this.var(ddof);\n\n        if (variance.isError()) {\n            return variance;\n        }\n\n        return variance.sqrt();\n    }\n\n    override log(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.log();\n        });\n    }\n\n    override log10(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.log10();\n        });\n    }\n\n    override exp(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.exp();\n        });\n    }\n\n    override abs(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.abs();\n        });\n    }\n\n    override round(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.ROUND);\n    }\n\n    override roundInverse(valueObject: BaseValueObject): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return valueObject.round(currentValue);\n        });\n    }\n\n    override floor(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.FLOOR);\n    }\n\n    override floorInverse(valueObject: BaseValueObject): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return valueObject.floor(currentValue);\n        });\n    }\n\n    override ceil(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.CEIL);\n    }\n\n    override ceilInverse(valueObject: BaseValueObject): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return valueObject.ceil(currentValue);\n        });\n    }\n\n    toValue() {\n        return transformToValue(this._values);\n    }\n\n    private _clearCache() {\n        this._flattenCache = null;\n        this._sliceCache.clear();\n    }\n\n    private _sort(index: number) {\n        const compare = getCompare();\n        return (a: Nullable<BaseValueObject>[], b: Nullable<BaseValueObject>[]) => {\n            const columnA = a[index];\n            const columnB = b[index];\n\n            if (columnA == null) {\n                return 1;\n            }\n\n            if (columnB == null) {\n                return -1;\n            }\n\n            if (columnA.isError() && columnA.isError()) {\n                return 0;\n            }\n            if (columnA.isError()) {\n                return 1;\n            }\n            if (columnB.isError()) {\n                return -1;\n            }\n            return compare(\n                (columnA as BaseValueObject).getValue() as string,\n                (columnB as BaseValueObject).getValue() as string\n            );\n        };\n    }\n\n    private _transposeArray(array: Nullable<BaseValueObject>[][]) {\n        // Create a new 2D array as the transposed matrix\n        const rows = array.length;\n        const cols = array[0].length;\n        const transposedArray: Nullable<BaseValueObject>[][] = [];\n\n        // Traverse the columns of the original two-dimensional array\n        for (let col = 0; col < cols; col++) {\n            // Create new row\n            transposedArray[col] = [] as BaseValueObject[];\n\n            // Traverse the rows of the original two-dimensional array\n            for (let row = 0; row < rows; row++) {\n                // Assign elements to new rows\n                transposedArray[col][row] = array[row][col];\n            }\n        }\n\n        return transposedArray;\n    }\n\n    private _batchOperator(\n        valueObject: BaseValueObject,\n        batchOperatorType: BatchOperatorType,\n        operator?: compareToken,\n        isCaseSensitive?: boolean\n    ): BaseValueObject {\n        const valueList: BaseValueObject[] = [];\n\n        let rowCount = this._rowCount;\n        let columnCount = this._columnCount;\n\n        if (valueObject.isArray()) {\n            const valueRowCount = (valueObject as ArrayValueObject).getRowCount();\n            const valueColumnCount = (valueObject as ArrayValueObject).getColumnCount();\n\n            rowCount = Math.max(valueRowCount, rowCount);\n            columnCount = Math.max(valueColumnCount, columnCount);\n            /**\n             * For computational scenarios where the array contains a single value,\n             * adopting calculations between the array and the value can effectively utilize an inverted index.\n             */\n            if (valueRowCount === 1 && valueColumnCount === 1) {\n                const v = (valueObject as ArrayValueObject).getFirstCell() as BaseValueObject;\n                for (let c = 0; c < columnCount; c++) {\n                    valueList.push(v);\n                }\n            } else if (valueRowCount === 1 && this._columnCount > 1) {\n                const list = (valueObject as ArrayValueObject).getArrayValue();\n                for (let c = 0; c < columnCount; c++) {\n                    valueList.push(list[0][c] as BaseValueObject);\n                }\n            } else {\n                return this._batchOperatorArray(valueObject, batchOperatorType, operator, isCaseSensitive);\n            }\n        } else {\n            for (let c = 0; c < columnCount; c++) {\n                valueList.push(valueObject);\n            }\n        }\n\n        const result: BaseValueObject[][] = [];\n\n        for (let c = 0; c < columnCount; c++) {\n            const value = valueList[c];\n            this._batchOperatorValue(value, c, result, batchOperatorType, operator, isCaseSensitive);\n        }\n\n        const newArray = this._createNewArray(result, rowCount, columnCount);\n\n        // Mark empty values in the array as false\n        newArray.setDefaultValue(BooleanValueObject.create(false));\n        return newArray;\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    private _batchOperatorValue(\n        valueObject: BaseValueObject,\n        column: number,\n        result: BaseValueObject[][],\n        batchOperatorType: BatchOperatorType,\n        operator?: compareToken,\n        isCaseSensitive?: boolean\n    ) {\n        const rowCount = this._rowCount;\n\n        const unitId = this.getUnitId();\n        const sheetId = this.getSheetId();\n        const startRow = this.getCurrentRow();\n        const startColumn = this.getCurrentColumn();\n        /**\n         * If comparison operations are conducted for a single numerical value,\n         * then retrieve the judgment from the inverted index. This enhances performance.\n         */\n        if (batchOperatorType === BatchOperatorType.COMPARE) {\n            const { rowsInCache, rowsNotInCache } = CELL_INVERTED_INDEX_CACHE.canUseCache(\n                unitId,\n                sheetId,\n                column + startColumn,\n                startRow,\n                startRow + rowCount - 1\n            );\n\n            if (rowsInCache.length > 0) {\n                if (operator === compareToken.EQUALS) {\n                    // TODO@DR-Univer: When comparing equal with two parameters, one of them is error, and the logic here is wrong\n                    const rowPositions = CELL_INVERTED_INDEX_CACHE.getCellPositions(\n                        unitId,\n                        sheetId,\n                        column + startColumn,\n                        valueObject.getValue(),\n                        rowsInCache\n                    );\n\n                    if (rowPositions != null) {\n                        rowPositions.forEach((row) => {\n                            if (row < startRow || row > startRow + rowCount - 1) {\n                                return;\n                            }\n\n                            const r = row - startRow;\n                            if (result[r] == null) {\n                                result[r] = [];\n                            }\n                            result[r][column] = BooleanValueObject.create(true);\n                        });\n                    }\n                } else {\n                    const rowValuePositions = CELL_INVERTED_INDEX_CACHE.getCellValuePositions(\n                        unitId,\n                        sheetId,\n                        column + startColumn\n                    );\n\n                    if (rowValuePositions != null) {\n                        rowValuePositions.forEach((rowPositions, rowValue) => {\n                            let currentValue: Nullable<BaseValueObject> = NullValueObject.create(); // handle blank cell\n                            if (ERROR_TYPE_SET.has(rowValue as ErrorType)) {\n                                currentValue = ErrorValueObject.create(rowValue as ErrorType);\n                            } else if (typeof rowValue === 'string') {\n                                currentValue = StringValueObject.create(rowValue);\n                            } else if (typeof rowValue === 'number') {\n                                currentValue = NumberValueObject.create(rowValue);\n                            } else if (typeof rowValue === 'boolean') {\n                                currentValue = BooleanValueObject.create(rowValue);\n                            }\n\n                            let matchResult;\n                            if (currentValue.isError()) {\n                                matchResult = currentValue;\n                            } else if (valueObject.isError()) {\n                                matchResult = valueObject;\n                            } else {\n                                matchResult = currentValue.compare(valueObject, operator as compareToken, isCaseSensitive);\n                            }\n\n                            if (matchResult.isError() || (matchResult as BooleanValueObject).getValue() === true) {\n                                rowPositions.forEach((index) => {\n                                    if (index >= startRow && index <= startRow + rowCount - 1) {\n                                        if (result[index - startRow] == null) {\n                                            result[index - startRow] = [];\n                                        }\n                                        result[index - startRow][column] = matchResult;\n                                    }\n                                });\n                            }\n                        });\n                    }\n                }\n\n                // handle the not in cache rows\n                if (rowsNotInCache.length > 0) {\n                    for (const interval of rowsNotInCache) {\n                        const [start, end] = interval;\n\n                        for (let r = start; r <= end; r++) {\n                            this.__batchOperatorRowValue(\n                                valueObject,\n                                column,\n                                result,\n                                batchOperatorType,\n                                r - startRow,\n                                unitId,\n                                sheetId,\n                                startRow,\n                                startColumn,\n                                operator,\n                                isCaseSensitive\n                            );\n                        }\n\n                        CELL_INVERTED_INDEX_CACHE.setContinueBuildingCache(\n                            unitId,\n                            sheetId,\n                            column + startColumn,\n                            start,\n                            end\n                        );\n                    }\n                }\n\n                return;\n            }\n        }\n\n        for (let r = 0; r < rowCount; r++) {\n            this.__batchOperatorRowValue(\n                valueObject,\n                column,\n                result,\n                batchOperatorType,\n                r,\n                unitId,\n                sheetId,\n                startRow,\n                startColumn,\n                operator,\n                isCaseSensitive\n            );\n        }\n\n        CELL_INVERTED_INDEX_CACHE.setContinueBuildingCache(\n            unitId,\n            sheetId,\n            column + startColumn,\n            startRow,\n            startRow + rowCount - 1\n        );\n    }\n\n    // eslint-disable-next-line\n    private __batchOperatorRowValue(\n        valueObject: BaseValueObject,\n        column: number,\n        result: BaseValueObject[][],\n        batchOperatorType: BatchOperatorType,\n        r: number,\n        unitId: string,\n        sheetId: string,\n        startRow: number,\n        startColumn: number,\n        operator?: compareToken,\n        isCaseSensitive?: boolean\n    ) {\n        const currentValue = this.getValueOrDefault(r, column);\n\n        if (result[r] == null) {\n            result[r] = [];\n        }\n\n        if (currentValue && valueObject) {\n            if (currentValue.isError()) {\n                result[r][column] = currentValue as ErrorValueObject;\n            } else if (valueObject.isError()) {\n                // 1 + #NAME? gets #NAME?\n                result[r][column] = valueObject;\n            } else {\n                switch (batchOperatorType) {\n                    case BatchOperatorType.PLUS:\n                        result[r][column] = currentValue.plus(valueObject);\n                        break;\n                    case BatchOperatorType.MINUS:\n                        result[r][column] = currentValue.minus(valueObject);\n                        break;\n                    case BatchOperatorType.MULTIPLY:\n                        result[r][column] = currentValue.multiply(valueObject);\n                        break;\n                    case BatchOperatorType.DIVIDED:\n                        result[r][column] = currentValue.divided(valueObject);\n                        break;\n                    case BatchOperatorType.MOD:\n                        result[r][column] = currentValue.mod(valueObject);\n                        break;\n                    case BatchOperatorType.COMPARE:\n                        if (!operator) {\n                            result[r][column] = ErrorValueObject.create(ErrorType.VALUE);\n                        } else {\n                            result[r][column] = currentValue.compare(valueObject, operator as compareToken, isCaseSensitive);\n                        }\n                        break;\n                    case BatchOperatorType.CONCATENATE_FRONT:\n                        result[r][column] = currentValue.concatenateFront(valueObject);\n                        break;\n                    case BatchOperatorType.CONCATENATE_BACK:\n                        result[r][column] = currentValue.concatenateBack(valueObject);\n                        break;\n                    case BatchOperatorType.POW:\n                        result[r][column] = currentValue.pow(valueObject);\n                        break;\n                    case BatchOperatorType.ROUND:\n                        result[r][column] = currentValue.round(valueObject);\n                        break;\n                    case BatchOperatorType.FLOOR:\n                        result[r][column] = currentValue.floor(valueObject);\n                        break;\n                    case BatchOperatorType.ATAN2:\n                        result[r][column] = currentValue.atan2(valueObject);\n                        break;\n                    case BatchOperatorType.CEIL:\n                        result[r][column] = currentValue.ceil(valueObject);\n                        break;\n                }\n            }\n        } else {\n            result[r][column] = ErrorValueObject.create(ErrorType.NA);\n        }\n\n        /**\n         * Inverted indexing enhances matching performance.\n         */\n        if (currentValue == null) {\n            return;\n        }\n\n        if (currentValue.isError()) {\n            CELL_INVERTED_INDEX_CACHE.set(\n                unitId,\n                sheetId,\n                column + startColumn,\n                (currentValue as ErrorValueObject).getErrorType(),\n                r + startRow\n            );\n        } else {\n            CELL_INVERTED_INDEX_CACHE.set(\n                unitId,\n                sheetId,\n                column + startColumn,\n                currentValue.getValue(),\n                r + startRow\n            );\n        }\n    }\n\n    // eslint-disable-next-line max-lines-per-function, complexity\n    private _batchOperatorArray(\n        valueObject: BaseValueObject,\n        batchOperatorType: BatchOperatorType,\n        operator?: compareToken,\n        isCaseSensitive?: boolean\n    ) {\n        let rowCount = (valueObject as ArrayValueObject).getRowCount();\n        let columnCount = (valueObject as ArrayValueObject).getColumnCount();\n\n        if (rowCount < this._rowCount) {\n            rowCount = this._rowCount;\n        }\n\n        if (columnCount < this._columnCount) {\n            columnCount = this._columnCount;\n        }\n\n        const result: BaseValueObject[][] = [];\n\n        const currentCalculateType = this._checkArrayCalculateType(this as ArrayValueObject);\n\n        const opCalculateType = this._checkArrayCalculateType(valueObject as ArrayValueObject);\n\n        for (let r = 0; r < rowCount; r++) {\n            const rowList: BaseValueObject[] = [];\n            for (let c = 0; c < columnCount; c++) {\n                let currentValue: Nullable<BaseValueObject>;\n                if (currentCalculateType === ArrayCalculateType.SINGLE) {\n                    currentValue = this.getValueOrDefault(0, 0);\n                } else if (currentCalculateType === ArrayCalculateType.ROW) {\n                    currentValue = this.getValueOrDefault(0, c);\n                } else if (currentCalculateType === ArrayCalculateType.COLUMN) {\n                    currentValue = this.getValueOrDefault(r, 0);\n                } else {\n                    currentValue = this.getValueOrDefault(r, c);\n                }\n\n                let opValue: Nullable<BaseValueObject>;\n                if (opCalculateType === ArrayCalculateType.SINGLE) {\n                    opValue = (valueObject as ArrayValueObject).getValueOrDefault(0, 0);\n                } else if (opCalculateType === ArrayCalculateType.ROW) {\n                    opValue = (valueObject as ArrayValueObject).getValueOrDefault(0, c);\n                } else if (opCalculateType === ArrayCalculateType.COLUMN) {\n                    opValue = (valueObject as ArrayValueObject).getValueOrDefault(r, 0);\n                } else {\n                    opValue = (valueObject as ArrayValueObject).getValueOrDefault(r, c);\n                }\n\n                if (currentValue && opValue) {\n                    if (currentValue.isError()) {\n                        rowList[c] = currentValue as ErrorValueObject;\n                    } else if (opValue.isError()) {\n                        rowList[c] = opValue as ErrorValueObject;\n                    } else {\n                        switch (batchOperatorType) {\n                            case BatchOperatorType.PLUS:\n                                rowList[c] = currentValue.plus(opValue);\n                                break;\n                            case BatchOperatorType.MINUS:\n                                rowList[c] = currentValue.minus(opValue);\n                                break;\n                            case BatchOperatorType.MULTIPLY:\n                                rowList[c] = currentValue.multiply(opValue);\n                                break;\n                            case BatchOperatorType.DIVIDED:\n                                rowList[c] = currentValue.divided(opValue);\n                                break;\n                            case BatchOperatorType.MOD:\n                                rowList[c] = currentValue.mod(opValue);\n                                break;\n                            case BatchOperatorType.COMPARE:\n                                if (!operator) {\n                                    rowList[c] = ErrorValueObject.create(ErrorType.VALUE);\n                                } else {\n                                    rowList[c] = currentValue.compare(opValue, operator as compareToken, isCaseSensitive);\n                                }\n                                break;\n                            case BatchOperatorType.CONCATENATE_FRONT:\n                                rowList[c] = currentValue.concatenateFront(opValue);\n                                break;\n                            case BatchOperatorType.CONCATENATE_BACK:\n                                rowList[c] = currentValue.concatenateBack(opValue);\n                                break;\n                            case BatchOperatorType.POW:\n                                rowList[c] = currentValue.pow(opValue);\n                                break;\n                            case BatchOperatorType.ROUND:\n                                rowList[c] = currentValue.round(opValue);\n                                break;\n                            case BatchOperatorType.ATAN2:\n                                rowList[c] = currentValue.atan2(opValue);\n                                break;\n                            case BatchOperatorType.FLOOR:\n                                rowList[c] = currentValue.floor(opValue);\n                                break;\n                            case BatchOperatorType.CEIL:\n                                rowList[c] = currentValue.ceil(opValue);\n                                break;\n                        }\n                    }\n                }\n                // else if (currentValue) {\n                //     rowList[c] = currentValue;\n                // } else if (opValue) {\n                //     rowList[c] = opValue;\n                // }\n                else {\n                    rowList[c] = ErrorValueObject.create(ErrorType.NA);\n                }\n            }\n            result.push(rowList);\n        }\n\n        return this._createNewArray(result, rowCount, columnCount);\n    }\n\n    private _checkArrayCalculateType(valueObject: ArrayValueObject) {\n        if (valueObject.getRowCount() === 1 && valueObject.getColumnCount() === 1) {\n            return ArrayCalculateType.SINGLE;\n        }\n\n        if (valueObject.getRowCount() === 1) {\n            return ArrayCalculateType.ROW;\n        }\n        if (valueObject.getColumnCount() === 1) {\n            return ArrayCalculateType.COLUMN;\n        }\n\n        return ArrayCalculateType.PRODUCT;\n    }\n\n    private _formatValue(rawValue: string | IArrayValueObject) {\n        if (typeof rawValue !== 'string') {\n            rawValue = rawValue as IArrayValueObject;\n\n            this._rowCount = rawValue.rowCount;\n\n            this._columnCount = rawValue.columnCount;\n\n            this._unitId = rawValue.unitId;\n\n            this._sheetId = rawValue.sheetId;\n\n            this._currentRow = rawValue.row;\n\n            this._currentColumn = rawValue.column;\n\n            return rawValue.calculateValueList;\n        }\n        rawValue = rawValue.slice(1, -1) as string;\n        const rowArray = rawValue.split(';');\n        const rowArrayCount = rowArray.length;\n        const result: BaseValueObject[][] = [];\n        let maxColumnCount = 0;\n        for (let r = 0; r < rowArrayCount; r++) {\n            const columnRaw = rowArray[r];\n            const columnArray = columnRaw.split(',');\n            const columnArrayCount = columnArray.length;\n\n            if (maxColumnCount < columnArrayCount) {\n                maxColumnCount = columnArrayCount;\n            }\n\n            const row: BaseValueObject[] = [];\n            for (let c = 0; c < columnArrayCount; c++) {\n                const cellRaw = columnArray[c].trim();\n                row.push(ValueObjectFactory.create(cellRaw));\n            }\n            result.push(row);\n        }\n\n        this._rowCount = rowArrayCount;\n\n        this._columnCount = maxColumnCount;\n\n        return result;\n    }\n\n    private _createNewArray(\n        result: Nullable<BaseValueObject>[][],\n        rowCount: number,\n        columnCount: number,\n        row: number = -1,\n        column: number = -1\n    ) {\n        if (this._currentColumn === -1 || this._currentRow === -1) {\n            row = -1;\n            column = -1;\n        }\n\n        const arrayValueObjectData: IArrayValueObject = {\n            calculateValueList: result,\n            rowCount,\n            columnCount,\n            unitId: this.getUnitId(),\n            sheetId: this.getSheetId(),\n            row,\n            column,\n        };\n\n        return ArrayValueObject.create(arrayValueObjectData);\n    }\n}\n\nexport class ValueObjectFactory {\n    static create(rawValue: string | number | boolean | null) {\n        if (rawValue == null) {\n            return NullValueObject.create();\n        }\n        if (typeof rawValue === 'boolean') {\n            return BooleanValueObject.create(rawValue);\n        }\n        if (typeof rawValue === 'string') {\n            const rawValueUpper = rawValue.toLocaleUpperCase().trim();\n            if (ERROR_TYPE_SET.has(rawValueUpper as ErrorType)) {\n                return ErrorValueObject.create(rawValueUpper as ErrorType);\n            }\n            if (rawValueUpper === BooleanValue.TRUE || rawValueUpper === BooleanValue.FALSE) {\n                return createBooleanValueObjectByRawValue(rawValue);\n            }\n            if (isRealNum(rawValue)) {\n                return NumberValueObject.create(Number(rawValue));\n            }\n\n            const { isNumberPattern, value, pattern } = stringIsNumberPattern(rawValue);\n            if (isNumberPattern) {\n                return NumberValueObject.create(value as number, pattern as string);\n            }\n\n            const rawValueSingleLine = rawValue.replace(/\\n/g, '').replace(/\\r/g, '');\n            if (!isStringWrappedByDoubleQuotes(rawValueSingleLine) && regexTestArrayValue(rawValueSingleLine)) {\n                return ArrayValueObject.create(rawValueSingleLine);\n            }\n\n            return createStringValueObjectByRawValue(rawValue);\n        }\n        if (typeof rawValue === 'number') {\n            return createNumberValueObjectByRawValue(rawValue);\n        }\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n}\n\nfunction isStringWrappedByDoubleQuotes(input: string) {\n    const trimmedInput = input.trim();\n    return trimmedInput.startsWith('\"') && trimmedInput.endsWith('\"');\n}\n"],"mappings":"AAmBA,SAAS,iBAAiB;AAC1B,SAAS,oBAAoB;AAC7B,SAAS,gBAAgB,iBAAiB;AAC1C,SAAS,iCAAiC;AAC1C,SAAS,2BAA2B;AACpC,SAAS,oBAAoB;AAC7B,SAAS,uBAAuB,sBAAsB,kBAAkB;AACxE,SAAS,6BAA6B;AACtC,SAAS,iBAAiB,wBAAwB;AAClD,SAAS,oBAAoB,oCAAoC,mCAAmC,mCAAmC,iBAAiB,mBAAmB,yBAAyB;AAEpM,IAAK,oBAAL,kBAAKA,uBAAL;AACI,EAAAA,sCAAA;AACA,EAAAA,sCAAA;AACA,EAAAA,sCAAA;AACA,EAAAA,sCAAA;AACA,EAAAA,sCAAA;AACA,EAAAA,sCAAA;AACA,EAAAA,sCAAA;AACA,EAAAA,sCAAA;AACA,EAAAA,sCAAA;AACA,EAAAA,sCAAA;AACA,EAAAA,sCAAA;AACA,EAAAA,sCAAA;AACA,EAAAA,sCAAA;AAbC,SAAAA;AAAA,GAAA;AAgBL,IAAK,qBAAL,kBAAKC,wBAAL;AACI,EAAAA,wCAAA;AACA,EAAAA,wCAAA;AACA,EAAAA,wCAAA;AACA,EAAAA,wCAAA;AAJC,SAAAA;AAAA,GAAA;AAOE,gBAAS,mBAAmB,OAA0B;AACzD,SAAO;AACX;AAEO,gBAAS,uBAAuB,QAAwD,CAAC,GAAG;AAC/F,QAAM,iBAAsC,CAAC;AAE7C,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,UAAM,MAAM,MAAM,CAAC;AAEnB,QAAI,eAAe,CAAC,KAAK,MAAM;AAC3B,qBAAe,CAAC,IAAI,CAAC;AAAA,IACzB;AAEA,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,YAAM,OAAO,IAAI,CAAC;AAElB,qBAAe,CAAC,EAAE,CAAC,IAAI,mBAAmB,OAAO,IAAI;AAAA,IACzD;AAAA,EACJ;AAEA,SAAO;AACX;AAEO,gBAAS,iBAAiB,QAAuC,CAAC,GAAG;AACxE,QAAM,iBAAiE,CAAC;AAExE,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,UAAM,MAAM,MAAM,CAAC;AAEnB,QAAI,eAAe,CAAC,KAAK,MAAM;AAC3B,qBAAe,CAAC,IAAI,CAAC;AAAA,IACzB;AAEA,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,YAAM,OAAO,IAAI,CAAC;AAElB,UAAI,QAAQ,MAAM;AACd,uBAAe,CAAC,EAAE,CAAC,IAAI;AAAA,MAC3B,WAAW,KAAK,QAAQ,GAAG;AACvB,uBAAe,CAAC,EAAE,CAAC,IAAK,KAA0B,aAAa;AAAA,MACnE,OAAO;AACH,uBAAe,CAAC,EAAE,CAAC,IAAK,KAAyB,SAAS;AAAA,MAC9D;AAAA,IACJ;AAAA,EACJ;AAEA,SAAO;AACX;AAEO,aAAM,yBAAyB,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMlD,OAAO,OAAO,UAAsC;AAChD,WAAO,IAAI,iBAAiB,QAAQ;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,cAAc,OAAuD;AACxE,UAAM,qBAAqB,uBAAuB,KAAK;AACvD,UAAM,uBAA0C;AAAA,MAC5C;AAAA,MACA,UAAU,MAAM;AAAA,MAChB,aAAa,MAAM,CAAC,EAAE,UAAU;AAAA,MAChC,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,KAAK;AAAA,MACL,QAAQ;AAAA,IACZ;AAEA,WAAO,IAAI,iBAAiB,oBAAoB;AAAA,EACpD;AAAA,EAEQ,UAAyC,CAAC;AAAA,EAE1C,YAAoB;AAAA,EAEpB,eAAuB;AAAA,EAEvB,UAAkB;AAAA,EAElB,WAAmB;AAAA,EAEnB,cAAsB;AAAA,EAEtB,iBAAyB;AAAA,EAEzB,cAAc,oBAAI,IAA8B;AAAA,EAEhD;AAAA;AAAA;AAAA;AAAA,EAKA,gBAA2C;AAAA,EAE3C;AAAA,EAOR,YAAY,UAAsC;AAC9C,UAAM,OAAO,aAAa,WAAW,WAAqB,mBAAmB,QAA6B,CAAC;AAE3G,SAAK,UAAU,KAAK,aAAa,QAAQ;AAAA,EAC7C;AAAA,EAES,UAAgB;AAOrB,SAAK,UAAU,CAAC;AAEhB,SAAK,gBAAgB;AAErB,SAAK,mBAAmB;AAExB,SAAK,YAAY;AAAA,EACrB;AAAA,EAEA,QAAQ;AACJ,WAAO,KAAK,IAAI,CAAC,MAAM;AACnB,aAAO;AAAA,IACX,CAAC;AAAA,EACL;AAAA,EAEA,cAAc;AACV,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,YAAY,UAAkB;AAC1B,SAAK,YAAY;AAAA,EACrB;AAAA,EAEA,iBAAiB;AACb,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,eAAe,aAAqB;AAChC,SAAK,eAAe;AAAA,EACxB;AAAA,EAEA,WAAW,KAAa,QAAgB;AACpC,SAAK,cAAc;AACnB,SAAK,iBAAiB;AAAA,EAC1B;AAAA,EAEA,UAAU,QAAgB;AACtB,SAAK,UAAU;AAAA,EACnB;AAAA,EAEA,YAAY;AACR,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,WAAW,SAAiB;AACxB,SAAK,WAAW;AAAA,EACpB;AAAA,EAEA,aAAa;AACT,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,gBAAgB;AACZ,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,mBAAmB;AACf,WAAO,KAAK;AAAA,EAChB;AAAA,EAES,gBAAgB;AACrB,WAAO,KAAK;AAAA,EAChB;AAAA,EAES,cAAc,OAA4B;AAC/C,SAAK,YAAY;AACjB,SAAK,UAAU;AAAA,EACnB;AAAA,EAES,UAAU;AACf,WAAO;AAAA,EACX;AAAA,EAEA,gBAAgB,OAAkC;AAC9C,SAAK,gBAAgB;AAAA,EACzB;AAAA,EAEA,IAAI,KAAa,QAAgB;AAU7B,WAAO,KAAK,QAAQ,GAAG,IAAI,MAAM,KAAK,KAAK;AAAA,EAC/C;AAAA,EAEA,aAAa,KAAa,QAAgB;AACtC,UAAM,YAAY,KAAK,QAAQ,GAAG;AAClC,QAAI,aAAa,MAAM;AACnB,aAAO;AAAA,IACX;AAEA,UAAM,IAAI,UAAU,MAAM;AAC1B,QAAI,KAAK,MAAM;AACX,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAAA,EAEA,kBAAkB,KAAa,QAAgB;AAC3C,WAAO,KAAK,IAAI,KAAK,MAAM,KAAK,KAAK;AAAA,EACzC;AAAA,EAEA,IAAI,KAAa,QAAgB,OAAkC;AAC/D,QAAI,OAAO,KAAK,aAAa,UAAU,KAAK,cAAc;AACtD,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC7C;AAEA,SAAK,YAAY;AAEjB,SAAK,QAAQ,GAAG,EAAE,MAAM,IAAI;AAAA,EAChC;AAAA,EAEA,mBAAmB;AACf,UAAM,WAAW;AACjB,UAAM,WAAW,KAAK,YAAY;AAClC,UAAM,cAAc;AACpB,UAAM,cAAc,KAAK,eAAe;AAExC,WAAO;AAAA,MACH;AAAA,MACA,QAAQ,WAAW;AAAA,MACnB;AAAA,MACA,WAAW,cAAc;AAAA,IAC7B;AAAA,EACJ;AAAA,EAEA,SACI,UACF;AACE,UAAM,EAAE,UAAU,QAAQ,aAAa,UAAU,IAAI,KAAK,iBAAiB;AAE3E,UAAM,YAAY,KAAK,cAAc;AAErC,aAAS,IAAI,UAAU,KAAK,QAAQ,KAAK;AACrC,eAAS,IAAI,aAAa,KAAK,WAAW,KAAK;AAC3C,YAAI,SAAS,UAAU,CAAC,IAAI,CAAC,KAAK,KAAK,eAAe,GAAG,CAAC,MAAM,OAAO;AACnE;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,gBACI,UACF;AACE,UAAM,EAAE,UAAU,QAAQ,aAAa,UAAU,IAAI,KAAK,iBAAiB;AAE3E,UAAM,YAAY,KAAK,cAAc;AAErC,aAAS,IAAI,QAAQ,KAAK,UAAU,KAAK;AACrC,eAAS,IAAI,WAAW,KAAK,aAAa,KAAK;AAC3C,YAAI,SAAS,UAAU,CAAC,IAAI,CAAC,KAAK,KAAK,eAAe,GAAG,CAAC,MAAM,OAAO;AACnE;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,sBAAsB;AAClB,QAAI;AAEJ,SAAK,gBAAgB,CAAC,OAAO,UAAU,gBAAgB;AACnD,UAAI,OAAO,UAAU,KAAM,MAA0B,SAAS,MAAM,MAAM;AACtE,sBAAc;AAAA,UACV,KAAK;AAAA,UACL,QAAQ;AAAA,QACZ;AAEA,eAAO;AAAA,MACX;AAAA,IACJ,CAAC;AAED,WAAO;AAAA,EACX;AAAA,EAEA,uBAAuB;AACnB,QAAI;AAEJ,SAAK,SAAS,CAAC,OAAO,UAAU,gBAAgB;AAC5C,UAAI,OAAO,UAAU,KAAM,MAA0B,SAAS,MAAM,MAAM;AACtE,sBAAc;AAAA,UACV,KAAK;AAAA,UACL,QAAQ;AAAA,QACZ;AAEA,eAAO;AAAA,MACX;AAAA,IACJ,CAAC;AAED,WAAO;AAAA,EACX;AAAA,EAEA,eAAe;AACX,UAAM,EAAE,UAAU,YAAY,IAAI,KAAK,iBAAiB;AACxD,WAAO,KAAK,IAAI,UAAU,WAAW,KAAK,KAAK,iBAAiB,gBAAgB,OAAO;AAAA,EAC3F;AAAA,EAEA,cAAc;AACV,UAAM,EAAE,QAAQ,UAAU,IAAI,KAAK,iBAAiB;AACpD,WAAO,KAAK,IAAI,QAAQ,SAAS,KAAK,KAAK,iBAAiB,gBAAgB,OAAO;AAAA,EACvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,KAAK,WAA6B;AAC9B,UAAM,WAAW,KAAK,QAAQ,SAAS;AAEvC,WAAO,KAAK,gBAAgB,UAAU,GAAG,SAAS,CAAC,EAAE,MAAM;AAAA,EAC/D;AAAA,EAEA,QAAQ,WAA6B;AACjC,UAAM,oBAAoB,UAAU,YAAY;AAChD,UAAM,uBAAuB,UAAU,eAAe;AAEtD,QAAI,sBAAsB,KAAK,aAAa,yBAAyB,KAAK,cAAc;AACpF,aAAO,CAAC,CAAC,gBAAgB,OAAO,CAAC,CAAC;AAAA,IACtC;AAEA,UAAM,WAA0C,CAAC;AAEjD,aAAS,CAAC,IAAI,CAAC;AAEf,aAAS,IAAI,GAAG,IAAI,mBAAmB,KAAK;AACxC,eAAS,IAAI,GAAG,IAAI,sBAAsB,KAAK;AAC3C,cAAM,WAAW,UAAU,IAAI,GAAG,CAAC;AAEnC,YAAI,YAAY,QAAQ,SAAS,QAAQ,GAAG;AACxC;AAAA,QACJ;AAEA,YAAK,SAA6B,SAAS,MAAM,MAAM;AACnD,gBAAM,QAAQ,KAAK,IAAI,GAAG,CAAC;AAC3B,mBAAS,CAAC,EAAE,KAAK,KAAK;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAU;AACN,QAAI,KAAK,iBAAiB,MAAM;AAC5B,aAAO,KAAK;AAAA,IAChB;AAEA,UAAM,WAA0C,CAAC;AACjD,aAAS,CAAC,IAAI,CAAC;AACf,aAAS,IAAI,GAAG,IAAI,KAAK,WAAW,KAAK;AACrC,eAAS,IAAI,GAAG,IAAI,KAAK,cAAc,KAAK;AACxC,cAAM,QAAQ,KAAK,IAAI,GAAG,CAAC;AAE3B,iBAAS,CAAC,EAAE,KAAK,KAAK;AAAA,MAC1B;AAAA,IACJ;AAEA,UAAM,SAAS,KAAK,gBAAgB,UAAU,GAAG,SAAS,CAAC,EAAE,MAAM;AAEnE,WAAO,gBAAgB,KAAK,aAAa;AAEzC,SAAK,gBAAgB;AAErB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,kBAAkB;AACd,QAAI,KAAK,oBAAoB,MAAM;AAC/B,aAAO,KAAK;AAAA,IAChB;AAEA,UAAM,cAAiC,CAAC;AACxC,UAAM,cAAiC,CAAC;AACxC,UAAM,iBAA2B,CAAC;AAClC,UAAM,iBAA2B,CAAC;AAClC,QAAI,QAAQ;AACZ,aAAS,IAAI,GAAG,IAAI,KAAK,WAAW,KAAK;AACrC,eAAS,IAAI,GAAG,IAAI,KAAK,cAAc,KAAK;AACxC,cAAM,QAAQ,KAAK,IAAI,GAAG,CAAC;AAE3B,YAAI,SAAS,QAAQ,MAAM,QAAQ,KAAK,MAAM,OAAO,GAAG;AACpD;AACA;AAAA,QACJ;AAEA,YAAI,MAAM,SAAS,GAAG;AAClB,sBAAY,KAAK,KAAK;AACtB,yBAAe,KAAK,OAAO;AAAA,QAC/B,OAAO;AACH,sBAAY,KAAK,KAAK;AACtB,yBAAe,KAAK,OAAO;AAAA,QAC/B;AAAA,MACJ;AAAA,IACJ;AAKA,UAAM,SAAS;AAAA,MACX,aAAa;AAAA,MACb,aAAa;AAAA,MACb;AAAA,MACA;AAAA,IACJ;AAEA,SAAK,mBAAmB;AAExB,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,UAA6C,aAAgD;AAC/F,QAAI,WAAW;AACf,QAAI,UAAU,KAAK;AACnB,QAAI,UAAU;AAEd,QAAI,cAAc;AAClB,QAAI,aAAa,KAAK;AACtB,QAAI,aAAa;AAEjB,QAAI,YAAY,MAAM;AAClB,iBAAW,SAAS,CAAC,KAAK;AAC1B,gBAAU,SAAS,CAAC,KAAK,KAAK;AAC9B,gBAAU,SAAS,CAAC,KAAK;AAAA,IAC7B;AAEA,QAAI,eAAe,MAAM;AACrB,oBAAc,YAAY,CAAC,KAAK;AAChC,mBAAa,YAAY,CAAC,KAAK,KAAK;AACpC,mBAAa,YAAY,CAAC,KAAK;AAAA,IACnC;AAEA,QAAI,YAAY,KAAK,aAAa,eAAe,KAAK,cAAc;AAChE;AAAA,IACJ;AAEA,UAAM,WAAW,GAAG,QAAQ,IAAI,OAAO,IAAI,OAAO,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU;AAE7F,UAAM,QAAQ,KAAK,YAAY,IAAI,QAAQ;AAE3C,QAAI,SAAS,MAAM;AACf,aAAO;AAAA,IACX;AAEA,UAAM,SAA8B,CAAC;AAErC,UAAM,QAAQ,KAAK;AAEnB,QAAI,mBAAmB;AACvB,QAAI,sBAAsB;AAC1B,aAAS,IAAI,UAAU,IAAI,SAAS,KAAK,SAAS;AAC9C,4BAAsB;AACtB,UAAI,OAAO,gBAAgB,KAAK,MAAM;AAClC,eAAO,gBAAgB,IAAI,CAAC;AAAA,MAChC;AACA,eAAS,IAAI,aAAa,IAAI,YAAY,KAAK,YAAY;AACvD,YAAI,CAAC,MAAM,CAAC,GAAG;AACX;AAAA,QACJ;AAAC;AAED,YAAI,OAAO,MAAM,CAAC,EAAE,CAAC,KAAK,KAAK;AAE/B,YAAI,QAAQ,MAAM;AACd,iBAAO,gBAAgB,OAAO;AAAA,QAClC;AAEA,eAAO,gBAAgB,EAAE,mBAAmB,IAAI;AAChD;AAAA,MACJ;AACA;AAAA,IACJ;AAEA,QAAI,OAAO,WAAW,KAAK,OAAO,CAAC,EAAE,WAAW,GAAG;AAC/C;AAAA,IACJ;AASA,UAAM,WAAW,UAAU,IAAI,KAAK,WAAW,KAAK;AAEpD,UAAM,cAAc,aAAa,IAAI,KAAK,cAAc,KAAK;AAE7D,UAAM,iBAAiB,KAAK,gBAAgB,QAAQ,OAAO,QAAQ,OAAO,CAAC,EAAE,QAAQ,UAAU,WAAW;AAG1G,mBAAe,gBAAgB,KAAK,aAAa;AAEjD,SAAK,YAAY,IAAI,UAAU,cAAc;AAE7C,WAAO;AAAA,EACX;AAAA,EAEA,UAAU,OAAe;AAErB,UAAM,SAAwC,KAAK,gBAAgB,KAAK,OAAO;AAE/E,WAAO,KAAK,KAAK,MAAM,KAAK,CAAC;AAE7B,SAAK,YAAY;AAEjB,SAAK,UAAU,KAAK,gBAAgB,MAAM;AAAA,EAC9C;AAAA,EAEA,aAAa,OAAe;AACxB,SAAK,YAAY;AACjB,SAAK,QAAQ,KAAK,KAAK,MAAM,KAAK,CAAC;AAAA,EACvC;AAAA,EAEA,YAAY;AACR,UAAM,iBAAiB,KAAK,gBAAgB,KAAK,OAAO;AAExD,UAAM,WAAW,KAAK;AACtB,UAAM,cAAc,KAAK;AAEzB,UAAM,WAAW,KAAK,gBAAgB,gBAAgB,aAAa,QAAQ;AAE3E,aAAS,gBAAgB,KAAK,aAAa;AAC3C,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,YACI,aACA,aAAmC,qBAAqB,KACxD,SAAS,OACT,kBAAkB,OACpB;AACE,QAAI;AACJ,QAAI;AACJ,QAAI;AAEJ,QAAI;AAEJ,UAAM,eAAe,CAAC,WAAsC,KAAa,WAAmB;AACxF,UAAI,aAAa,MAAM;AACnB,eAAO;AAAA,MACX;AAEA,UAAI;AACJ,UAAI,oBAAoB,MAAM;AAC1B,sBAAc,UAAU,QAAQ,aAAkC,aAAa,MAAM;AAAA,MACzF,OAAO;AACH,sBAAc,UAAU,QAAQ,WAAW;AAAA,MAC/C;AAEA,UAAI,aAAa,SAAS,MAAM,MAAM;AAClC,iBAAS;AACT,yBAAiB,EAAE,KAAK,OAAO;AAC/B,eAAO;AAAA,MACX;AAEA,UAAI,eAAe,qBAAqB,KAAK;AACzC,YAAI,UAAU,cAAc,WAAW,EAAE,SAAS,MAAM,MAAM;AAC1D,cACI,YAAY,QACZ,UACK,MAAM,WAAW,EACjB,IAAI,EACJ,kBAAkB,SAAS,MAAM,WAAW,EAAE,IAAI,CAAC,EACnD,SAAS,MAAM,MACtB;AACE,uBAAW;AACX,+BAAmB,EAAE,KAAK,OAAO;AAAA,UACrC;AAAA,QACJ;AAAA,MACJ,WAAW,eAAe,qBAAqB,KAAK;AAChD,YAAI,UAAU,WAAW,WAAW,EAAE,SAAS,MAAM,MAAM;AACvD,cACI,YAAY,QACZ,UACK,MAAM,WAAW,EACjB,IAAI,EACJ,kBAAkB,SAAS,MAAM,WAAW,EAAE,IAAI,CAAC,EACnD,SAAS,MAAM,MACtB;AACE,uBAAW;AACX,+BAAmB,EAAE,KAAK,OAAO;AAAA,UACrC;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,QAAI,QAAQ;AACR,WAAK,gBAAgB,CAAC,WAAW,GAAG,MAAM;AACtC,eAAO,aAAa,WAAW,GAAG,CAAC;AAAA,MACvC,CAAC;AAAA,IACL,OAAO;AACH,WAAK,SAAS,CAAC,WAAW,GAAG,MAAM;AAC/B,eAAO,aAAa,WAAW,GAAG,CAAC;AAAA,MACvC,CAAC;AAAA,IACL;AAEA,QAAI,UAAU,MAAM;AAChB,aAAO;AAAA,IACX;AAEA,QAAI,YAAY,MAAM;AAClB,aAAO;AAAA,IACX;AAAA,EACJ;AAAA,EAEA,aAAa,aAA8B,aAAoC,sBAAsB,KAAK,YAAkC,qBAAqB,KAAK;AAClK,QAAI,YAAY,QAAQ,GAAG;AACvB;AAAA,IACJ;AAEA,UAAM,EAAE,aAAa,gBAAgB,aAAa,eAAe,IAAI,KAAK,gBAAgB;AAE1F,QAAI,YAAY,SAAS,GAAG;AACxB,aAAO,KAAK,cAAc,aAAa,aAAa,gBAAgB,YAAY,SAAS;AAAA,IAC7F;AAEA,UAAM,SAAS,KAAK,cAAc,aAAa,aAAa,gBAAgB,YAAY,SAAS;AAIjG,WAAO;AAAA,EAOX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaQ,cACJ,aACA,aACA,eACA,aAAoC,sBAAsB,KAC1D,YAAkC,qBAAqB,KACzD;AACE,UAAM,cAAc,WAAW;AAG/B,UAAM,QAAQ,OAAO,YAAY,SAAS,CAAC;AAC3C,UAAM,gBAAgB,CAAC,OAAO,MAAM,KAAK;AAEzC,QAAI,QAAQ;AACZ,QAAI,MAAM,YAAY,SAAS;AAC/B,QAAI,kBAAkB;AACtB,QAAI,sBAAsB;AAC1B,QAAI,qBAAqB;AAEzB,WAAO,SAAS,KAAK;AACjB,YAAM,SAAS,KAAK,OAAO,QAAQ,OAAO,CAAC;AAC3C,YAAM,YAAY,YAAY,MAAM;AAEpC,UAAI;AACJ,UAAI,UAAU,OAAO,GAAG;AACpB,wBAAgB,eAAe,sBAAsB,MAAM,IAAI;AAAA,MACnE,OAAO;AACH,cAAM,iBAAiB,UAAU,SAAS;AAC1C,YAAI,eAAe;AACf,gBAAM,kBAAkB,OAAO,cAAc;AAC7C,0BAAgB,OAAO,MAAM,eAAe,IAAI,IAAI,KAAK,KAAK,kBAAkB,KAAK;AAAA,QACzF,OAAO;AACH,0BAAgB,YAAY,eAAe,SAAS,EAAE,kBAAkB,GAAG,YAAY,SAAS,EAAE,SAAS,EAAE,kBAAkB,CAAC;AAAA,QACpI;AAAA,MACJ;AAGA,UAAI,eAAe,sBAAsB,KAAK;AAC1C,wBAAgB,CAAC;AAAA,MACrB;AAEA,UAAI,kBAAkB,GAAG;AAErB,0BAAkB;AAClB;AAAA,MACJ;AAEA,UAAI,gBAAgB,GAAG;AAEnB,8BAAsB;AACtB,gBAAQ,SAAS;AAAA,MACrB,OAAO;AAEH,6BAAqB;AACrB,cAAM,SAAS;AAAA,MACnB;AAAA,IACJ;AAGA,QAAI,cAAc,qBAAqB,QAAQ;AAC3C,aAAO,oBAAoB,KAAK,cAAc,eAAe,IAAI;AAAA,IACrE;AAEA,QAAI,cAAc,qBAAqB,KAAK;AACxC,UAAI,oBAAoB,GAAI,QAAO,cAAc,eAAe;AAChE,aAAO,eAAe,sBAAsB,MACxC,cAAc,mBAAmB,IAC/B,cAAc,kBAAkB;AAAA,IAC1C;AAEA,QAAI,cAAc,qBAAqB,KAAK;AACxC,UAAI,oBAAoB,GAAI,QAAO,cAAc,eAAe;AAChE,aAAO,eAAe,sBAAsB,MACxC,cAAc,kBAAkB,IAC9B,cAAc,mBAAmB;AAAA,IAC3C;AAGA,WAAO;AAAA,EACX;AAAA,EAES,MAAM;AACX,QAAI,iBAAkC,kBAAkB,OAAO,CAAC;AAChE,SAAK,SAAS,CAAC,gBAAgB;AAE3B,UAAI,eAAe,QAAQ,YAAY,SAAS,KAAK,YAAY,UAAU,KAAK,YAAY,OAAO,GAAG;AAClG,eAAO;AAAA,MACX;AAEA,UAAI,YAAY,QAAQ,GAAG;AACvB,yBAAiB;AACjB,eAAO;AAAA,MACX;AACA,uBAAkB,eAAqC;AAAA,QACnD;AAAA,MACJ;AAAA,IACJ,CAAC;AAED,WAAO;AAAA,EACX;AAAA,EAES,MAAM;AACX,QAAI,iBAAkC,kBAAkB,OAAO,OAAO,iBAAiB;AACvF,SAAK,SAAS,CAAC,gBAAgB;AAC3B,UAAI,eAAe,MAAM;AACrB,eAAO;AAAA,MACX;AAEA,UAAI,YAAY,QAAQ,GAAG;AACvB,yBAAiB;AACjB,eAAO;AAAA,MACX;AAGA,UAAI,YAAY,SAAS,KAAK,YAAY,OAAO,KAAK,YAAY,UAAU,GAAG;AAC3E,eAAO;AAAA,MACX;AAEA,YAAM,SAAS,eAAe,WAAW,WAAW;AAEpD,UAAI,OAAO,SAAS,GAAG;AACnB,yBAAiB;AAAA,MACrB;AAAA,IACJ,CAAC;AAED,WAAO;AAAA,EACX;AAAA,EAES,MAAM;AACX,QAAI,iBAAkC,kBAAkB,OAAO,OAAO,iBAAiB;AAEvF,SAAK,SAAS,CAAC,gBAAgB;AAC3B,UAAI,eAAe,MAAM;AACrB,eAAO;AAAA,MACX;AAEA,UAAI,YAAY,QAAQ,GAAG;AACvB,yBAAiB;AACjB,eAAO;AAAA,MACX;AAGA,UAAI,YAAY,SAAS,KAAK,YAAY,OAAO,KAAK,YAAY,UAAU,GAAG;AAC3E,eAAO;AAAA,MACX;AAEA,YAAM,SAAS,eAAe,cAAc,WAAW;AAEvD,UAAI,OAAO,SAAS,GAAG;AACnB,yBAAiB;AAAA,MACrB;AAAA,IACJ,CAAC;AAED,WAAO;AAAA,EACX;AAAA,EAES,QAAQ;AACb,QAAI,iBAAkC,kBAAkB,OAAO,CAAC;AAChE,SAAK,SAAS,CAAC,gBAAgB;AAE3B,UAAI,eAAe,QAAQ,YAAY,QAAQ,KAAK,YAAY,SAAS,KAAK,YAAY,OAAO,KAAK,YAAY,UAAU,GAAG;AAC3H,eAAO;AAAA,MACX;AACA,uBAAiB,eAAe,OAAO,CAAC;AAAA,IAC5C,CAAC;AAED,WAAO;AAAA,EACX;AAAA,EAES,SAAS;AACd,QAAI,iBAAkC,kBAAkB,OAAO,CAAC;AAChE,SAAK,SAAS,CAAC,gBAAgB;AAC3B,UAAI,eAAe,QAAQ,YAAY,OAAO,GAAG;AAC7C,eAAO;AAAA,MACX;AAEA,uBAAiB,eAAe,OAAO,CAAC;AAAA,IAC5C,CAAC;AAED,WAAO;AAAA,EACX;AAAA,EAES,aAAa;AAClB,QAAI,iBAAkC,kBAAkB,OAAO,CAAC;AAChE,SAAK,SAAS,CAAC,gBAAgB;AAC3B,UAAI,eAAe,QAAQ,YAAY,OAAO,KAAM,YAAY,SAAS,MAAM,IAAK;AAChF,yBAAiB,eAAe,OAAO,CAAC;AAAA,MAC5C;AAAA,IACJ,CAAC;AAED,WAAO;AAAA,EACX;AAAA,EAES,cAA+B;AACpC,UAAM,mBAAmB,iBAAiB,OAAO,KAAK;AACtD,WAAO,iBAAiB,MAAM,IAAI;AAAA,EACtC;AAAA,EAES,gBAAiC;AACtC,UAAM,mBAAmB,iBAAiB,OAAO,KAAK;AAEtD,WAAO,iBAAiB,QAAQ,IAAI;AAAA,EAGxC;AAAA,EAES,KAAK,aAA+C;AACzD,WAAO,KAAK,eAAe,aAAa,YAAsB;AAAA,EAClE;AAAA,EAES,MAAM,aAA+C;AAC1D,WAAO,KAAK,eAAe,aAAa,aAAuB;AAAA,EACnE;AAAA,EAES,SAAS,aAA+C;AAC7D,WAAO,KAAK,eAAe,aAAa,gBAA0B;AAAA,EACtE;AAAA,EAES,QAAQ,aAA+C;AAC5D,WAAO,KAAK,eAAe,aAAa,eAAyB;AAAA,EACrE;AAAA,EAES,IAAI,aAA+C;AACxD,WAAO,KAAK,eAAe,aAAa,WAAqB;AAAA,EACjE;AAAA,EAES,WAAW,aAA+C;AAC/D,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,YAAY,IAAI,YAAY;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EAES,QAAQ,aAA8B,UAAwB,iBAA4C;AAC/G,WAAO,KAAK,eAAe,aAAa,iBAA2B,UAAU,eAAe;AAAA,EAChG;AAAA,EAES,iBAAiB,aAA+C;AACrE,WAAO,KAAK,eAAe,aAAa,yBAAmC;AAAA,EAC/E;AAAA,EAES,gBAAgB,aAA+C;AACpE,WAAO,KAAK,eAAe,aAAa,wBAAkC;AAAA,EAC9E;AAAA,EAES,IAAI,YAAgD;AACzD,UAAM,oBAAoB,CAAC,cAAyC,GAAW,MAAc;AACzF,UAAI,gBAAgB,MAAM;AACtB,eAAO,gBAAgB,OAAO;AAAA,MAClC;AACA,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX,OAAO;AACH,eAAO,WAAW,cAAc,GAAG,CAAC;AAAA,MACxC;AAAA,IACJ;AAEA,WAAO,KAAK,SAAS,iBAAiB;AAAA,EAC1C;AAAA,EAES,SAAS,YAAgD;AAC9D,UAAM,WAAW,KAAK;AACtB,UAAM,cAAc,KAAK;AAEzB,UAAM,SAA8B,CAAC;AAErC,aAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,YAAM,UAA6B,CAAC;AACpC,eAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AAClC,cAAM,MAAM,KAAK,UAAU,CAAC;AAE5B,YAAI,OAAO,MAAM;AACb,kBAAQ,CAAC,IAAI,iBAAiB,OAAO,UAAU,KAAK;AAAA,QACxD,OAAO;AACH,gBAAM,eAAe,IAAI,CAAC,KAAK,KAAK;AAEpC,cAAI,cAAc;AACd,oBAAQ,CAAC,IAAI,WAAW,cAAc,GAAG,CAAC;AAAA,UAC9C,OAAO;AACH,oBAAQ,CAAC,IAAI,gBAAgB,OAAO;AAAA,UACxC;AAAA,QACJ;AAAA,MACJ;AACA,aAAO,KAAK,OAAO;AAAA,IACvB;AAEA,WAAO,KAAK,gBAAgB,QAAQ,UAAU,WAAW;AAAA,EAC7D;AAAA,EAES,IAAI,aAA+C;AACxD,WAAO,KAAK,eAAe,aAAa,WAAqB;AAAA,EACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOS,WAAW,aAA+C;AAC/D,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,YAAY,IAAI,YAAY;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EAES,OAAwB;AAC7B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,KAAK;AAAA,IAC7B,CAAC;AAAA,EACL;AAAA,EAES,OAAwB;AAC7B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,KAAK;AAAA,IAC7B,CAAC;AAAA,EACL;AAAA,EAES,MAAuB;AAC5B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,IAAI;AAAA,IAC5B,CAAC;AAAA,EACL;AAAA,EAES,OAAwB;AAC7B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,KAAK;AAAA,IAC7B,CAAC;AAAA,EACL;AAAA,EAES,OAAwB;AAC7B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,KAAK;AAAA,IAC7B,CAAC;AAAA,EACL;AAAA,EAES,QAAyB;AAC9B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,MAAM;AAAA,IAC9B,CAAC;AAAA,EACL;AAAA,EAES,MAAuB;AAC5B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,IAAI;AAAA,IAC5B,CAAC;AAAA,EACL;AAAA,EAES,OAAwB;AAC7B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,KAAK;AAAA,IAC7B,CAAC;AAAA,EACL;AAAA,EAES,OAAwB;AAC7B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,KAAK;AAAA,IAC7B,CAAC;AAAA,EACL;AAAA,EAES,QAAyB;AAC9B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,MAAM;AAAA,IAC9B,CAAC;AAAA,EACL;AAAA,EAES,MAAuB;AAC5B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,IAAI;AAAA,IAC5B,CAAC;AAAA,EACL;AAAA,EAES,OAAwB;AAC7B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,KAAK;AAAA,IAC7B,CAAC;AAAA,EACL;AAAA,EAES,OAAwB;AAC7B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,KAAK;AAAA,IAC7B,CAAC;AAAA,EACL;AAAA,EAES,QAAyB;AAC9B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,MAAM;AAAA,IAC9B,CAAC;AAAA,EACL;AAAA,EAES,MAAM,aAA+C;AAC1D,WAAO,KAAK,eAAe,aAAa,cAAuB;AAAA,EACnE;AAAA,EAES,aAAa,aAA+C;AACjE,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,YAAY,MAAM,YAAY;AAAA,IACzC,CAAC;AAAA,EACL;AAAA,EAES,KAAK,OAAe,GAAoB;AAC7C,UAAM,MAAM,KAAK,IAAI;AAGrB,UAAM,QAAQ,KAAK,MAAM;AAEzB,WAAO,IAAI,QAAQ,SAAS,IAAI,QAAQ,MAAM,QAAQ,CAAC,CAAC;AAAA,EAC5D;AAAA,EAES,SAA0B;AAC/B,UAAM,cAAc,KAAK,gBAAgB,EAAE;AAE3C,UAAM,WAAW,KAAK,gBAAgB,CAAC,WAAW,GAAG,GAAG,YAAY,MAAM;AAE1E,UAAM,QAAQ,SAAS,eAAe;AAEtC,QAAI,SAAS,GAAG;AACZ,aAAO,SAAS,IAAI,GAAG,CAAC,KAAK,gBAAgB,OAAO;AAAA,IACxD;AAEA,aAAS,UAAU,CAAC;AAEpB,QAAI,QAAQ,MAAM,GAAG;AACjB,YAAM,cAAc,SAAS,IAAI,GAAG,QAAQ,CAAC,KAAK,gBAAgB,OAAO;AACzE,YAAM,aAAa,SAAS,IAAI,GAAG,QAAQ,IAAI,CAAC,KAAK,gBAAgB,OAAO;AAE5E,aAAO,YAAY,KAAK,UAAU,EAAE,QAAQ,kBAAkB,OAAO,CAAC,CAAC;AAAA,IAC3E;AAEA,WAAO,SAAS,IAAI,IAAI,QAAQ,KAAK,CAAC,KAAK,gBAAgB,OAAO;AAAA,EACtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBS,IAAI,OAAe,GAAoB;AAC5C,UAAM,OAAO,KAAK,KAAK;AAGvB,UAAM,qBAA0C,CAAC,CAAC,CAAC;AACnD,SAAK,SAAS,CAAC,gBAA2C;AACtD,UAAI,eAAe,QAAQ,YAAY,QAAQ,KAAK,YAAY,SAAS,KAAK,YAAY,UAAU,KAAK,YAAY,OAAO,GAAG;AAC3H;AAAA,MACJ;AAEA,YAAM,kBAAkB,YAAY,MAAM,IAAI,EAAE,IAAI,kBAAkB,OAAO,CAAC,CAAC;AAE/E,UAAI,gBAAgB,QAAQ,GAAG;AAC3B;AAAA,MACJ;AAEA,yBAAmB,CAAC,EAAE,KAAK,eAAe;AAAA,IAC9C,CAAC;AAED,UAAM,EAAE,SAAS,UAAU,aAAa,eAAe,IAAI;AAE3D,UAAM,gCAAgC,iBAAiB,OAAO;AAAA,MAC1D,oBAAoB;AAAA,MACpB,UAAU;AAAA,MACV,aAAa,mBAAmB,CAAC,EAAE;AAAA,MACnC,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,KAAK;AAAA,MACL,QAAQ;AAAA,IACZ,CAAC;AAED,WAAO,8BAA8B,KAAK,IAAI;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUS,IAAI,OAAe,GAAoB;AAC5C,UAAM,WAAW,KAAK,IAAI,IAAI;AAE9B,QAAI,SAAS,QAAQ,GAAG;AACpB,aAAO;AAAA,IACX;AAEA,WAAO,SAAS,KAAK;AAAA,EACzB;AAAA,EAES,MAAuB;AAC5B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,IAAI;AAAA,IAC5B,CAAC;AAAA,EACL;AAAA,EAES,QAAyB;AAC9B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,MAAM;AAAA,IAC9B,CAAC;AAAA,EACL;AAAA,EAES,MAAuB;AAC5B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,IAAI;AAAA,IAC5B,CAAC;AAAA,EACL;AAAA,EAES,MAAuB;AAC5B,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,aAAa,IAAI;AAAA,IAC5B,CAAC;AAAA,EACL;AAAA,EAES,MAAM,aAA+C;AAC1D,WAAO,KAAK,eAAe,aAAa,aAAuB;AAAA,EACnE;AAAA,EAES,aAAa,aAA+C;AACjE,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,YAAY,MAAM,YAAY;AAAA,IACzC,CAAC;AAAA,EACL;AAAA,EAES,MAAM,aAA+C;AAC1D,WAAO,KAAK,eAAe,aAAa,cAAuB;AAAA,EACnE;AAAA,EAES,aAAa,aAA+C;AACjE,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,YAAY,MAAM,YAAY;AAAA,IACzC,CAAC;AAAA,EACL;AAAA,EAES,KAAK,aAA+C;AACzD,WAAO,KAAK,eAAe,aAAa,aAAsB;AAAA,EAClE;AAAA,EAES,YAAY,aAA+C;AAChE,WAAO,KAAK,IAAI,CAAC,iBAAiB;AAC9B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO;AAAA,MACX;AACA,aAAO,YAAY,KAAK,YAAY;AAAA,IACxC,CAAC;AAAA,EACL;AAAA,EAEA,UAAU;AACN,WAAO,iBAAiB,KAAK,OAAO;AAAA,EACxC;AAAA,EAEQ,cAAc;AAClB,SAAK,gBAAgB;AACrB,SAAK,YAAY,MAAM;AAAA,EAC3B;AAAA,EAEQ,MAAM,OAAe;AACzB,UAAM,UAAU,WAAW;AAC3B,WAAO,CAAC,GAAgC,MAAmC;AACvE,YAAM,UAAU,EAAE,KAAK;AACvB,YAAM,UAAU,EAAE,KAAK;AAEvB,UAAI,WAAW,MAAM;AACjB,eAAO;AAAA,MACX;AAEA,UAAI,WAAW,MAAM;AACjB,eAAO;AAAA,MACX;AAEA,UAAI,QAAQ,QAAQ,KAAK,QAAQ,QAAQ,GAAG;AACxC,eAAO;AAAA,MACX;AACA,UAAI,QAAQ,QAAQ,GAAG;AACnB,eAAO;AAAA,MACX;AACA,UAAI,QAAQ,QAAQ,GAAG;AACnB,eAAO;AAAA,MACX;AACA,aAAO;AAAA,QACF,QAA4B,SAAS;AAAA,QACrC,QAA4B,SAAS;AAAA,MAC1C;AAAA,IACJ;AAAA,EACJ;AAAA,EAEQ,gBAAgB,OAAsC;AAE1D,UAAM,OAAO,MAAM;AACnB,UAAM,OAAO,MAAM,CAAC,EAAE;AACtB,UAAM,kBAAiD,CAAC;AAGxD,aAAS,MAAM,GAAG,MAAM,MAAM,OAAO;AAEjC,sBAAgB,GAAG,IAAI,CAAC;AAGxB,eAAS,MAAM,GAAG,MAAM,MAAM,OAAO;AAEjC,wBAAgB,GAAG,EAAE,GAAG,IAAI,MAAM,GAAG,EAAE,GAAG;AAAA,MAC9C;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAAA,EAEQ,eACJ,aACA,mBACA,UACA,iBACe;AACf,UAAM,YAA+B,CAAC;AAEtC,QAAI,WAAW,KAAK;AACpB,QAAI,cAAc,KAAK;AAEvB,QAAI,YAAY,QAAQ,GAAG;AACvB,YAAM,gBAAiB,YAAiC,YAAY;AACpE,YAAM,mBAAoB,YAAiC,eAAe;AAE1E,iBAAW,KAAK,IAAI,eAAe,QAAQ;AAC3C,oBAAc,KAAK,IAAI,kBAAkB,WAAW;AAKpD,UAAI,kBAAkB,KAAK,qBAAqB,GAAG;AAC/C,cAAM,IAAK,YAAiC,aAAa;AACzD,iBAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AAClC,oBAAU,KAAK,CAAC;AAAA,QACpB;AAAA,MACJ,WAAW,kBAAkB,KAAK,KAAK,eAAe,GAAG;AACrD,cAAM,OAAQ,YAAiC,cAAc;AAC7D,iBAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AAClC,oBAAU,KAAK,KAAK,CAAC,EAAE,CAAC,CAAoB;AAAA,QAChD;AAAA,MACJ,OAAO;AACH,eAAO,KAAK,oBAAoB,aAAa,mBAAmB,UAAU,eAAe;AAAA,MAC7F;AAAA,IACJ,OAAO;AACH,eAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AAClC,kBAAU,KAAK,WAAW;AAAA,MAC9B;AAAA,IACJ;AAEA,UAAM,SAA8B,CAAC;AAErC,aAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AAClC,YAAM,QAAQ,UAAU,CAAC;AACzB,WAAK,oBAAoB,OAAO,GAAG,QAAQ,mBAAmB,UAAU,eAAe;AAAA,IAC3F;AAEA,UAAM,WAAW,KAAK,gBAAgB,QAAQ,UAAU,WAAW;AAGnE,aAAS,gBAAgB,mBAAmB,OAAO,KAAK,CAAC;AACzD,WAAO;AAAA,EACX;AAAA;AAAA,EAGQ,oBACJ,aACA,QACA,QACA,mBACA,UACA,iBACF;AACE,UAAM,WAAW,KAAK;AAEtB,UAAM,SAAS,KAAK,UAAU;AAC9B,UAAM,UAAU,KAAK,WAAW;AAChC,UAAM,WAAW,KAAK,cAAc;AACpC,UAAM,cAAc,KAAK,iBAAiB;AAK1C,QAAI,sBAAsB,iBAA2B;AACjD,YAAM,EAAE,aAAa,eAAe,IAAI,0BAA0B;AAAA,QAC9D;AAAA,QACA;AAAA,QACA,SAAS;AAAA,QACT;AAAA,QACA,WAAW,WAAW;AAAA,MAC1B;AAEA,UAAI,YAAY,SAAS,GAAG;AACxB,YAAI,aAAa,aAAa,QAAQ;AAElC,gBAAM,eAAe,0BAA0B;AAAA,YAC3C;AAAA,YACA;AAAA,YACA,SAAS;AAAA,YACT,YAAY,SAAS;AAAA,YACrB;AAAA,UACJ;AAEA,cAAI,gBAAgB,MAAM;AACtB,yBAAa,QAAQ,CAAC,QAAQ;AAC1B,kBAAI,MAAM,YAAY,MAAM,WAAW,WAAW,GAAG;AACjD;AAAA,cACJ;AAEA,oBAAM,IAAI,MAAM;AAChB,kBAAI,OAAO,CAAC,KAAK,MAAM;AACnB,uBAAO,CAAC,IAAI,CAAC;AAAA,cACjB;AACA,qBAAO,CAAC,EAAE,MAAM,IAAI,mBAAmB,OAAO,IAAI;AAAA,YACtD,CAAC;AAAA,UACL;AAAA,QACJ,OAAO;AACH,gBAAM,oBAAoB,0BAA0B;AAAA,YAChD;AAAA,YACA;AAAA,YACA,SAAS;AAAA,UACb;AAEA,cAAI,qBAAqB,MAAM;AAC3B,8BAAkB,QAAQ,CAAC,cAAc,aAAa;AAClD,kBAAI,eAA0C,gBAAgB,OAAO;AACrE,kBAAI,eAAe,IAAI,QAAqB,GAAG;AAC3C,+BAAe,iBAAiB,OAAO,QAAqB;AAAA,cAChE,WAAW,OAAO,aAAa,UAAU;AACrC,+BAAe,kBAAkB,OAAO,QAAQ;AAAA,cACpD,WAAW,OAAO,aAAa,UAAU;AACrC,+BAAe,kBAAkB,OAAO,QAAQ;AAAA,cACpD,WAAW,OAAO,aAAa,WAAW;AACtC,+BAAe,mBAAmB,OAAO,QAAQ;AAAA,cACrD;AAEA,kBAAI;AACJ,kBAAI,aAAa,QAAQ,GAAG;AACxB,8BAAc;AAAA,cAClB,WAAW,YAAY,QAAQ,GAAG;AAC9B,8BAAc;AAAA,cAClB,OAAO;AACH,8BAAc,aAAa,QAAQ,aAAa,UAA0B,eAAe;AAAA,cAC7F;AAEA,kBAAI,YAAY,QAAQ,KAAM,YAAmC,SAAS,MAAM,MAAM;AAClF,6BAAa,QAAQ,CAAC,UAAU;AAC5B,sBAAI,SAAS,YAAY,SAAS,WAAW,WAAW,GAAG;AACvD,wBAAI,OAAO,QAAQ,QAAQ,KAAK,MAAM;AAClC,6BAAO,QAAQ,QAAQ,IAAI,CAAC;AAAA,oBAChC;AACA,2BAAO,QAAQ,QAAQ,EAAE,MAAM,IAAI;AAAA,kBACvC;AAAA,gBACJ,CAAC;AAAA,cACL;AAAA,YACJ,CAAC;AAAA,UACL;AAAA,QACJ;AAGA,YAAI,eAAe,SAAS,GAAG;AAC3B,qBAAW,YAAY,gBAAgB;AACnC,kBAAM,CAAC,OAAO,GAAG,IAAI;AAErB,qBAAS,IAAI,OAAO,KAAK,KAAK,KAAK;AAC/B,mBAAK;AAAA,gBACD;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,IAAI;AAAA,gBACJ;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cACJ;AAAA,YACJ;AAEA,sCAA0B;AAAA,cACtB;AAAA,cACA;AAAA,cACA,SAAS;AAAA,cACT;AAAA,cACA;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAEA;AAAA,MACJ;AAAA,IACJ;AAEA,aAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,WAAK;AAAA,QACD;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AAEA,8BAA0B;AAAA,MACtB;AAAA,MACA;AAAA,MACA,SAAS;AAAA,MACT;AAAA,MACA,WAAW,WAAW;AAAA,IAC1B;AAAA,EACJ;AAAA;AAAA,EAGQ,wBACJ,aACA,QACA,QACA,mBACA,GACA,QACA,SACA,UACA,aACA,UACA,iBACF;AACE,UAAM,eAAe,KAAK,kBAAkB,GAAG,MAAM;AAErD,QAAI,OAAO,CAAC,KAAK,MAAM;AACnB,aAAO,CAAC,IAAI,CAAC;AAAA,IACjB;AAEA,QAAI,gBAAgB,aAAa;AAC7B,UAAI,aAAa,QAAQ,GAAG;AACxB,eAAO,CAAC,EAAE,MAAM,IAAI;AAAA,MACxB,WAAW,YAAY,QAAQ,GAAG;AAE9B,eAAO,CAAC,EAAE,MAAM,IAAI;AAAA,MACxB,OAAO;AACH,gBAAQ,mBAAmB;AAAA,UACvB,KAAK;AACD,mBAAO,CAAC,EAAE,MAAM,IAAI,aAAa,KAAK,WAAW;AACjD;AAAA,UACJ,KAAK;AACD,mBAAO,CAAC,EAAE,MAAM,IAAI,aAAa,MAAM,WAAW;AAClD;AAAA,UACJ,KAAK;AACD,mBAAO,CAAC,EAAE,MAAM,IAAI,aAAa,SAAS,WAAW;AACrD;AAAA,UACJ,KAAK;AACD,mBAAO,CAAC,EAAE,MAAM,IAAI,aAAa,QAAQ,WAAW;AACpD;AAAA,UACJ,KAAK;AACD,mBAAO,CAAC,EAAE,MAAM,IAAI,aAAa,IAAI,WAAW;AAChD;AAAA,UACJ,KAAK;AACD,gBAAI,CAAC,UAAU;AACX,qBAAO,CAAC,EAAE,MAAM,IAAI,iBAAiB,OAAO,UAAU,KAAK;AAAA,YAC/D,OAAO;AACH,qBAAO,CAAC,EAAE,MAAM,IAAI,aAAa,QAAQ,aAAa,UAA0B,eAAe;AAAA,YACnG;AACA;AAAA,UACJ,KAAK;AACD,mBAAO,CAAC,EAAE,MAAM,IAAI,aAAa,iBAAiB,WAAW;AAC7D;AAAA,UACJ,KAAK;AACD,mBAAO,CAAC,EAAE,MAAM,IAAI,aAAa,gBAAgB,WAAW;AAC5D;AAAA,UACJ,KAAK;AACD,mBAAO,CAAC,EAAE,MAAM,IAAI,aAAa,IAAI,WAAW;AAChD;AAAA,UACJ,KAAK;AACD,mBAAO,CAAC,EAAE,MAAM,IAAI,aAAa,MAAM,WAAW;AAClD;AAAA,UACJ,KAAK;AACD,mBAAO,CAAC,EAAE,MAAM,IAAI,aAAa,MAAM,WAAW;AAClD;AAAA,UACJ,KAAK;AACD,mBAAO,CAAC,EAAE,MAAM,IAAI,aAAa,MAAM,WAAW;AAClD;AAAA,UACJ,KAAK;AACD,mBAAO,CAAC,EAAE,MAAM,IAAI,aAAa,KAAK,WAAW;AACjD;AAAA,QACR;AAAA,MACJ;AAAA,IACJ,OAAO;AACH,aAAO,CAAC,EAAE,MAAM,IAAI,iBAAiB,OAAO,UAAU,EAAE;AAAA,IAC5D;AAKA,QAAI,gBAAgB,MAAM;AACtB;AAAA,IACJ;AAEA,QAAI,aAAa,QAAQ,GAAG;AACxB,gCAA0B;AAAA,QACtB;AAAA,QACA;AAAA,QACA,SAAS;AAAA,QACR,aAAkC,aAAa;AAAA,QAChD,IAAI;AAAA,MACR;AAAA,IACJ,OAAO;AACH,gCAA0B;AAAA,QACtB;AAAA,QACA;AAAA,QACA,SAAS;AAAA,QACT,aAAa,SAAS;AAAA,QACtB,IAAI;AAAA,MACR;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA,EAGQ,oBACJ,aACA,mBACA,UACA,iBACF;AACE,QAAI,WAAY,YAAiC,YAAY;AAC7D,QAAI,cAAe,YAAiC,eAAe;AAEnE,QAAI,WAAW,KAAK,WAAW;AAC3B,iBAAW,KAAK;AAAA,IACpB;AAEA,QAAI,cAAc,KAAK,cAAc;AACjC,oBAAc,KAAK;AAAA,IACvB;AAEA,UAAM,SAA8B,CAAC;AAErC,UAAM,uBAAuB,KAAK,yBAAyB,IAAwB;AAEnF,UAAM,kBAAkB,KAAK,yBAAyB,WAA+B;AAErF,aAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,YAAM,UAA6B,CAAC;AACpC,eAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AAClC,YAAI;AACJ,YAAI,yBAAyB,gBAA2B;AACpD,yBAAe,KAAK,kBAAkB,GAAG,CAAC;AAAA,QAC9C,WAAW,yBAAyB,aAAwB;AACxD,yBAAe,KAAK,kBAAkB,GAAG,CAAC;AAAA,QAC9C,WAAW,yBAAyB,gBAA2B;AAC3D,yBAAe,KAAK,kBAAkB,GAAG,CAAC;AAAA,QAC9C,OAAO;AACH,yBAAe,KAAK,kBAAkB,GAAG,CAAC;AAAA,QAC9C;AAEA,YAAI;AACJ,YAAI,oBAAoB,gBAA2B;AAC/C,oBAAW,YAAiC,kBAAkB,GAAG,CAAC;AAAA,QACtE,WAAW,oBAAoB,aAAwB;AACnD,oBAAW,YAAiC,kBAAkB,GAAG,CAAC;AAAA,QACtE,WAAW,oBAAoB,gBAA2B;AACtD,oBAAW,YAAiC,kBAAkB,GAAG,CAAC;AAAA,QACtE,OAAO;AACH,oBAAW,YAAiC,kBAAkB,GAAG,CAAC;AAAA,QACtE;AAEA,YAAI,gBAAgB,SAAS;AACzB,cAAI,aAAa,QAAQ,GAAG;AACxB,oBAAQ,CAAC,IAAI;AAAA,UACjB,WAAW,QAAQ,QAAQ,GAAG;AAC1B,oBAAQ,CAAC,IAAI;AAAA,UACjB,OAAO;AACH,oBAAQ,mBAAmB;AAAA,cACvB,KAAK;AACD,wBAAQ,CAAC,IAAI,aAAa,KAAK,OAAO;AACtC;AAAA,cACJ,KAAK;AACD,wBAAQ,CAAC,IAAI,aAAa,MAAM,OAAO;AACvC;AAAA,cACJ,KAAK;AACD,wBAAQ,CAAC,IAAI,aAAa,SAAS,OAAO;AAC1C;AAAA,cACJ,KAAK;AACD,wBAAQ,CAAC,IAAI,aAAa,QAAQ,OAAO;AACzC;AAAA,cACJ,KAAK;AACD,wBAAQ,CAAC,IAAI,aAAa,IAAI,OAAO;AACrC;AAAA,cACJ,KAAK;AACD,oBAAI,CAAC,UAAU;AACX,0BAAQ,CAAC,IAAI,iBAAiB,OAAO,UAAU,KAAK;AAAA,gBACxD,OAAO;AACH,0BAAQ,CAAC,IAAI,aAAa,QAAQ,SAAS,UAA0B,eAAe;AAAA,gBACxF;AACA;AAAA,cACJ,KAAK;AACD,wBAAQ,CAAC,IAAI,aAAa,iBAAiB,OAAO;AAClD;AAAA,cACJ,KAAK;AACD,wBAAQ,CAAC,IAAI,aAAa,gBAAgB,OAAO;AACjD;AAAA,cACJ,KAAK;AACD,wBAAQ,CAAC,IAAI,aAAa,IAAI,OAAO;AACrC;AAAA,cACJ,KAAK;AACD,wBAAQ,CAAC,IAAI,aAAa,MAAM,OAAO;AACvC;AAAA,cACJ,KAAK;AACD,wBAAQ,CAAC,IAAI,aAAa,MAAM,OAAO;AACvC;AAAA,cACJ,KAAK;AACD,wBAAQ,CAAC,IAAI,aAAa,MAAM,OAAO;AACvC;AAAA,cACJ,KAAK;AACD,wBAAQ,CAAC,IAAI,aAAa,KAAK,OAAO;AACtC;AAAA,YACR;AAAA,UACJ;AAAA,QACJ,OAMK;AACD,kBAAQ,CAAC,IAAI,iBAAiB,OAAO,UAAU,EAAE;AAAA,QACrD;AAAA,MACJ;AACA,aAAO,KAAK,OAAO;AAAA,IACvB;AAEA,WAAO,KAAK,gBAAgB,QAAQ,UAAU,WAAW;AAAA,EAC7D;AAAA,EAEQ,yBAAyB,aAA+B;AAC5D,QAAI,YAAY,YAAY,MAAM,KAAK,YAAY,eAAe,MAAM,GAAG;AACvE,aAAO;AAAA,IACX;AAEA,QAAI,YAAY,YAAY,MAAM,GAAG;AACjC,aAAO;AAAA,IACX;AACA,QAAI,YAAY,eAAe,MAAM,GAAG;AACpC,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAAA,EAEQ,aAAa,UAAsC;AACvD,QAAI,OAAO,aAAa,UAAU;AAC9B,iBAAW;AAEX,WAAK,YAAY,SAAS;AAE1B,WAAK,eAAe,SAAS;AAE7B,WAAK,UAAU,SAAS;AAExB,WAAK,WAAW,SAAS;AAEzB,WAAK,cAAc,SAAS;AAE5B,WAAK,iBAAiB,SAAS;AAE/B,aAAO,SAAS;AAAA,IACpB;AACA,eAAW,SAAS,MAAM,GAAG,EAAE;AAC/B,UAAM,WAAW,SAAS,MAAM,GAAG;AACnC,UAAM,gBAAgB,SAAS;AAC/B,UAAM,SAA8B,CAAC;AACrC,QAAI,iBAAiB;AACrB,aAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACpC,YAAM,YAAY,SAAS,CAAC;AAC5B,YAAM,cAAc,UAAU,MAAM,GAAG;AACvC,YAAM,mBAAmB,YAAY;AAErC,UAAI,iBAAiB,kBAAkB;AACnC,yBAAiB;AAAA,MACrB;AAEA,YAAM,MAAyB,CAAC;AAChC,eAAS,IAAI,GAAG,IAAI,kBAAkB,KAAK;AACvC,cAAM,UAAU,YAAY,CAAC,EAAE,KAAK;AACpC,YAAI,KAAK,mBAAmB,OAAO,OAAO,CAAC;AAAA,MAC/C;AACA,aAAO,KAAK,GAAG;AAAA,IACnB;AAEA,SAAK,YAAY;AAEjB,SAAK,eAAe;AAEpB,WAAO;AAAA,EACX;AAAA,EAEQ,gBACJ,QACA,UACA,aACA,MAAc,IACd,SAAiB,IACnB;AACE,QAAI,KAAK,mBAAmB,MAAM,KAAK,gBAAgB,IAAI;AACvD,YAAM;AACN,eAAS;AAAA,IACb;AAEA,UAAM,uBAA0C;AAAA,MAC5C,oBAAoB;AAAA,MACpB;AAAA,MACA;AAAA,MACA,QAAQ,KAAK,UAAU;AAAA,MACvB,SAAS,KAAK,WAAW;AAAA,MACzB;AAAA,MACA;AAAA,IACJ;AAEA,WAAO,iBAAiB,OAAO,oBAAoB;AAAA,EACvD;AACJ;AAEO,aAAM,mBAAmB;AAAA,EAC5B,OAAO,OAAO,UAA4C;AACtD,QAAI,YAAY,MAAM;AAClB,aAAO,gBAAgB,OAAO;AAAA,IAClC;AACA,QAAI,OAAO,aAAa,WAAW;AAC/B,aAAO,mBAAmB,OAAO,QAAQ;AAAA,IAC7C;AACA,QAAI,OAAO,aAAa,UAAU;AAC9B,YAAM,gBAAgB,SAAS,kBAAkB,EAAE,KAAK;AACxD,UAAI,eAAe,IAAI,aAA0B,GAAG;AAChD,eAAO,iBAAiB,OAAO,aAA0B;AAAA,MAC7D;AACA,UAAI,kBAAkB,aAAa,QAAQ,kBAAkB,aAAa,OAAO;AAC7E,eAAO,mCAAmC,QAAQ;AAAA,MACtD;AACA,UAAI,UAAU,QAAQ,GAAG;AACrB,eAAO,kBAAkB,OAAO,OAAO,QAAQ,CAAC;AAAA,MACpD;AAEA,YAAM,EAAE,iBAAiB,OAAO,QAAQ,IAAI,sBAAsB,QAAQ;AAC1E,UAAI,iBAAiB;AACjB,eAAO,kBAAkB,OAAO,OAAiB,OAAiB;AAAA,MACtE;AAEA,YAAM,qBAAqB,SAAS,QAAQ,OAAO,EAAE,EAAE,QAAQ,OAAO,EAAE;AACxE,UAAI,CAAC,8BAA8B,kBAAkB,KAAK,oBAAoB,kBAAkB,GAAG;AAC/F,eAAO,iBAAiB,OAAO,kBAAkB;AAAA,MACrD;AAEA,aAAO,kCAAkC,QAAQ;AAAA,IACrD;AACA,QAAI,OAAO,aAAa,UAAU;AAC9B,aAAO,kCAAkC,QAAQ;AAAA,IACrD;AACA,WAAO,iBAAiB,OAAO,UAAU,KAAK;AAAA,EAClD;AACJ;AAEA,SAAS,8BAA8B,OAAe;AAClD,QAAM,eAAe,MAAM,KAAK;AAChC,SAAO,aAAa,WAAW,GAAG,KAAK,aAAa,SAAS,GAAG;AACpE;","names":["BatchOperatorType","ArrayCalculateType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6e998931133cb99ef40d2b577a403b5524b84d5c"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/match-token.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/match-token.ts","statementMap":{"0":{"start":{"line":2,"column":36},"end":{"line":8,"column":1}},"1":{"start":{"line":10,"column":2},"end":{"line":10,"column":44}},"2":{"start":{"line":13,"column":2},"end":{"line":17,"column":3}},"3":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"4":{"start":{"line":15,"column":6},"end":{"line":15,"column":18}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":15}},"6":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":56}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":19}},"9":{"start":{"line":27,"column":2},"end":{"line":27,"column":204}},"10":{"start":{"line":29,"column":58},"end":{"line":47,"column":2}},"11":{"start":{"line":49,"column":2},"end":{"line":49,"column":47}},"12":{"start":{"line":51,"column":69},"end":{"line":71,"column":2}},"13":{"start":{"line":73,"column":2},"end":{"line":73,"column":58}}},"fnMap":{"0":{"name":"isFormulaLexerToken","decl":{"start":{"line":9,"column":16},"end":{"line":9,"column":35}},"loc":{"start":{"line":9,"column":41},"end":{"line":11,"column":1}},"line":9},"1":{"name":"includeFormulaLexerToken","decl":{"start":{"line":12,"column":16},"end":{"line":12,"column":40}},"loc":{"start":{"line":12,"column":46},"end":{"line":19,"column":1}},"line":12},"2":{"name":"normalizeSheetName","decl":{"start":{"line":20,"column":16},"end":{"line":20,"column":34}},"loc":{"start":{"line":20,"column":46},"end":{"line":25,"column":1}},"line":20},"3":{"name":"matchRefDrawToken","decl":{"start":{"line":26,"column":16},"end":{"line":26,"column":33}},"loc":{"start":{"line":26,"column":40},"end":{"line":28,"column":1}},"line":26},"4":{"name":"isTokenCannotBeAtEnd","decl":{"start":{"line":48,"column":16},"end":{"line":48,"column":36}},"loc":{"start":{"line":48,"column":44},"end":{"line":50,"column":1}},"line":48},"5":{"name":"isTokenCannotPrecedeSuffixToken","decl":{"start":{"line":72,"column":16},"end":{"line":72,"column":47}},"loc":{"start":{"line":72,"column":55},"end":{"line":74,"column":1}},"line":72}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},{"start":{},"end":{}}],"line":14},"1":{"loc":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},{"start":{},"end":{}}],"line":21},"2":{"loc":{"start":{"line":21,"column":6},"end":{"line":21,"column":69}},"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":26}},{"start":{"line":21,"column":30},"end":{"line":21,"column":69}}],"line":21},"3":{"loc":{"start":{"line":27,"column":9},"end":{"line":27,"column":203}},"type":"binary-expr","locations":[{"start":{"line":27,"column":9},"end":{"line":27,"column":34}},{"start":{"line":27,"column":38},"end":{"line":27,"column":70}},{"start":{"line":27,"column":74},"end":{"line":27,"column":107}},{"start":{"line":27,"column":111},"end":{"line":27,"column":147}},{"start":{"line":27,"column":151},"end":{"line":27,"column":187}},{"start":{"line":27,"column":191},"end":{"line":27,"column":203}}],"line":27}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":1,"13":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0,0,0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/match-token.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { compareToken, matchToken, operatorToken, prefixToken, suffixToken } from './token';\n\nexport const FORMULA_LEXER_TOKENS = [\n    ...Object.values(compareToken),\n    ...Object.values(operatorToken),\n    ...Object.values(matchToken),\n    ...Object.values(suffixToken),\n    ...Object.values(prefixToken),\n];\n\nexport function isFormulaLexerToken(str: string) {\n    return FORMULA_LEXER_TOKENS.includes(str as compareToken);\n}\n\nexport function includeFormulaLexerToken(str: string) {\n    for (const token of FORMULA_LEXER_TOKENS) {\n        if (str.indexOf(token) > -1) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function normalizeSheetName(sheetName: string) {\n    if (sheetName[0] === \"'\" && sheetName[sheetName.length - 1] === \"'\") {\n        return sheetName.substring(1, sheetName.length - 1);\n    }\n    return sheetName;\n}\n\n/**\n * Determine whether the character is a token keyword for the formula engine.\n * @param char\n */\nexport function matchRefDrawToken(char: string) {\n    return (\n        (isFormulaLexerToken(char) &&\n                char !== matchToken.CLOSE_BRACES &&\n                char !== matchToken.CLOSE_BRACKET &&\n                char !== matchToken.SINGLE_QUOTATION &&\n                char !== matchToken.DOUBLE_QUOTATION) ||\n            char === ' '\n    );\n}\n\nexport const TOKEN_CANNOT_BE_AT_END_SET = new Set<string>([\n    operatorToken.PLUS,\n    operatorToken.MINUS,\n    operatorToken.MULTIPLY,\n    operatorToken.DIVIDED,\n    operatorToken.CONCATENATE,\n    operatorToken.POWER,\n    operatorToken.EQUALS,\n    operatorToken.NOT_EQUAL,\n    operatorToken.GREATER_THAN,\n    operatorToken.GREATER_THAN_OR_EQUAL,\n    operatorToken.LESS_THAN,\n    operatorToken.LESS_THAN_OR_EQUAL,\n    matchToken.OPEN_BRACKET,\n    matchToken.COMMA,\n    matchToken.COLON,\n    matchToken.OPEN_BRACES,\n    matchToken.OPEN_SQUARE_BRACKET,\n]);\n\nexport function isTokenCannotBeAtEnd(token: string): boolean {\n    return TOKEN_CANNOT_BE_AT_END_SET.has(token);\n}\n\nexport const TOKEN_CANNOT_PRECEDE_SUFFIX_TOKEN_SET = new Set<string>([\n    operatorToken.PLUS,\n    operatorToken.MINUS,\n    operatorToken.MULTIPLY,\n    operatorToken.DIVIDED,\n    operatorToken.CONCATENATE,\n    operatorToken.POWER,\n    operatorToken.EQUALS,\n    operatorToken.NOT_EQUAL,\n    operatorToken.GREATER_THAN,\n    operatorToken.GREATER_THAN_OR_EQUAL,\n    operatorToken.LESS_THAN,\n    operatorToken.LESS_THAN_OR_EQUAL,\n\n    matchToken.OPEN_BRACKET,\n    matchToken.COMMA,\n    matchToken.COLON,\n    matchToken.OPEN_BRACES,\n    matchToken.OPEN_SQUARE_BRACKET,\n\n    suffixToken.PERCENTAGE,\n    suffixToken.POUND,\n]);\n\nexport function isTokenCannotPrecedeSuffixToken(token: string): boolean {\n    return TOKEN_CANNOT_PRECEDE_SUFFIX_TOKEN_SET.has(token);\n}\n"],"mappings":"AAgBA,SAAS,cAAc,YAAY,eAAe,aAAa,mBAAmB;AAE3E,aAAM,uBAAuB;AAAA,EAChC,GAAG,OAAO,OAAO,YAAY;AAAA,EAC7B,GAAG,OAAO,OAAO,aAAa;AAAA,EAC9B,GAAG,OAAO,OAAO,UAAU;AAAA,EAC3B,GAAG,OAAO,OAAO,WAAW;AAAA,EAC5B,GAAG,OAAO,OAAO,WAAW;AAChC;AAEO,gBAAS,oBAAoB,KAAa;AAC7C,SAAO,qBAAqB,SAAS,GAAmB;AAC5D;AAEO,gBAAS,yBAAyB,KAAa;AAClD,aAAW,SAAS,sBAAsB;AACtC,QAAI,IAAI,QAAQ,KAAK,IAAI,IAAI;AACzB,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,SAAO;AACX;AAEO,gBAAS,mBAAmB,WAAmB;AAClD,MAAI,UAAU,CAAC,MAAM,OAAO,UAAU,UAAU,SAAS,CAAC,MAAM,KAAK;AACjE,WAAO,UAAU,UAAU,GAAG,UAAU,SAAS,CAAC;AAAA,EACtD;AACA,SAAO;AACX;AAMO,gBAAS,kBAAkB,MAAc;AAC5C,SACK,oBAAoB,IAAI,KACjB,SAAS,WAAW,gBACpB,SAAS,WAAW,iBACpB,SAAS,WAAW,oBACpB,SAAS,WAAW,oBACxB,SAAS;AAErB;AAEO,aAAM,6BAA6B,oBAAI,IAAY;AAAA,EACtD,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AACf,CAAC;AAEM,gBAAS,qBAAqB,OAAwB;AACzD,SAAO,2BAA2B,IAAI,KAAK;AAC/C;AAEO,aAAM,wCAAwC,oBAAI,IAAY;AAAA,EACjE,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EAEd,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EAEX,YAAY;AAAA,EACZ,YAAY;AAChB,CAAC;AAEM,gBAAS,gCAAgC,OAAwB;AACpE,SAAO,sCAAsC,IAAI,KAAK;AAC1D;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b0888d8b8dfa87fc0ce630099aecf39526199c2c"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/reference.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/reference.ts","statementMap":{"0":{"start":{"line":5,"column":19},"end":{"line":5,"column":28}},"1":{"start":{"line":6,"column":22},"end":{"line":6,"column":34}},"2":{"start":{"line":8,"column":25},"end":{"line":8,"column":51}},"3":{"start":{"line":9,"column":21},"end":{"line":9,"column":49}},"4":{"start":{"line":10,"column":22},"end":{"line":10,"column":50}},"5":{"start":{"line":11,"column":2},"end":{"line":14,"column":3}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":29}},"7":{"start":{"line":13,"column":4},"end":{"line":13,"column":25}},"8":{"start":{"line":15,"column":2},"end":{"line":17,"column":3}},"9":{"start":{"line":16,"column":4},"end":{"line":16,"column":31}},"10":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"11":{"start":{"line":19,"column":4},"end":{"line":19,"column":34}},"12":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":31}},"14":{"start":{"line":24,"column":2},"end":{"line":24,"column":30}},"15":{"start":{"line":27,"column":21},"end":{"line":27,"column":41}},"16":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"17":{"start":{"line":29,"column":4},"end":{"line":29,"column":50}},"18":{"start":{"line":31,"column":19},"end":{"line":31,"column":39}},"19":{"start":{"line":32,"column":2},"end":{"line":37,"column":3}},"20":{"start":{"line":33,"column":4},"end":{"line":36,"column":6}},"21":{"start":{"line":38,"column":2},"end":{"line":38,"column":83}},"22":{"start":{"line":41,"column":26},"end":{"line":41,"column":28}},"23":{"start":{"line":42,"column":29},"end":{"line":42,"column":31}},"24":{"start":{"line":43,"column":2},"end":{"line":50,"column":3}},"25":{"start":{"line":44,"column":4},"end":{"line":44,"column":28}},"26":{"start":{"line":45,"column":9},"end":{"line":50,"column":3}},"27":{"start":{"line":46,"column":4},"end":{"line":46,"column":31}},"28":{"start":{"line":47,"column":9},"end":{"line":50,"column":3}},"29":{"start":{"line":48,"column":4},"end":{"line":48,"column":28}},"30":{"start":{"line":49,"column":4},"end":{"line":49,"column":31}},"31":{"start":{"line":51,"column":2},"end":{"line":54,"column":4}},"32":{"start":{"line":65,"column":6},"end":{"line":65,"column":11}},"33":{"start":{"line":66,"column":16},"end":{"line":66,"column":55}},"34":{"start":{"line":67,"column":14},"end":{"line":67,"column":51}},"35":{"start":{"line":68,"column":2},"end":{"line":72,"column":3}},"36":{"start":{"line":69,"column":22},"end":{"line":69,"column":65}},"37":{"start":{"line":70,"column":20},"end":{"line":70,"column":59}},"38":{"start":{"line":71,"column":4},"end":{"line":71,"column":37}},"39":{"start":{"line":73,"column":2},"end":{"line":77,"column":3}},"40":{"start":{"line":74,"column":22},"end":{"line":74,"column":84}},"41":{"start":{"line":75,"column":20},"end":{"line":75,"column":78}},"42":{"start":{"line":76,"column":4},"end":{"line":76,"column":37}},"43":{"start":{"line":78,"column":19},"end":{"line":78,"column":122}},"44":{"start":{"line":79,"column":17},"end":{"line":79,"column":112}},"45":{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},"46":{"start":{"line":81,"column":4},"end":{"line":81,"column":20}},"47":{"start":{"line":83,"column":2},"end":{"line":83,"column":33}},"48":{"start":{"line":86,"column":2},"end":{"line":86,"column":69}},"49":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"50":{"start":{"line":90,"column":4},"end":{"line":90,"column":94}},"51":{"start":{"line":92,"column":2},"end":{"line":92,"column":58}},"52":{"start":{"line":95,"column":39},"end":{"line":95,"column":52}},"53":{"start":{"line":96,"column":2},"end":{"line":98,"column":3}},"54":{"start":{"line":97,"column":4},"end":{"line":97,"column":67}},"55":{"start":{"line":99,"column":2},"end":{"line":101,"column":3}},"56":{"start":{"line":100,"column":4},"end":{"line":100,"column":53}},"57":{"start":{"line":102,"column":2},"end":{"line":102,"column":31}},"58":{"start":{"line":105,"column":14},"end":{"line":105,"column":66}},"59":{"start":{"line":106,"column":17},"end":{"line":106,"column":67}},"60":{"start":{"line":107,"column":26},"end":{"line":107,"column":69}},"61":{"start":{"line":108,"column":2},"end":{"line":112,"column":4}},"62":{"start":{"line":115,"column":22},"end":{"line":115,"column":66}},"63":{"start":{"line":116,"column":15},"end":{"line":116,"column":17}},"64":{"start":{"line":117,"column":2},"end":{"line":121,"column":3}},"65":{"start":{"line":118,"column":4},"end":{"line":118,"column":35}},"66":{"start":{"line":119,"column":4},"end":{"line":119,"column":66}},"67":{"start":{"line":120,"column":4},"end":{"line":120,"column":68}},"68":{"start":{"line":122,"column":25},"end":{"line":122,"column":47}},"69":{"start":{"line":123,"column":18},"end":{"line":123,"column":20}},"70":{"start":{"line":124,"column":16},"end":{"line":124,"column":18}},"71":{"start":{"line":125,"column":2},"end":{"line":134,"column":3}},"72":{"start":{"line":126,"column":4},"end":{"line":126,"column":55}},"73":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"74":{"start":{"line":128,"column":6},"end":{"line":128,"column":63}},"75":{"start":{"line":130,"column":4},"end":{"line":130,"column":44}},"76":{"start":{"line":131,"column":4},"end":{"line":131,"column":54}},"77":{"start":{"line":133,"column":4},"end":{"line":133,"column":24}},"78":{"start":{"line":135,"column":2},"end":{"line":139,"column":4}},"79":{"start":{"line":142,"column":41},"end":{"line":142,"column":71}},"80":{"start":{"line":143,"column":21},"end":{"line":143,"column":41}},"81":{"start":{"line":144,"column":2},"end":{"line":162,"column":3}},"82":{"start":{"line":145,"column":17},"end":{"line":145,"column":47}},"83":{"start":{"line":146,"column":16},"end":{"line":146,"column":24}},"84":{"start":{"line":147,"column":19},"end":{"line":147,"column":30}},"85":{"start":{"line":148,"column":28},"end":{"line":148,"column":48}},"86":{"start":{"line":149,"column":18},"end":{"line":156,"column":5}},"87":{"start":{"line":157,"column":4},"end":{"line":161,"column":6}},"88":{"start":{"line":163,"column":25},"end":{"line":163,"column":57}},"89":{"start":{"line":164,"column":23},"end":{"line":164,"column":56}},"90":{"start":{"line":165,"column":20},"end":{"line":165,"column":57}},"91":{"start":{"line":166,"column":18},"end":{"line":166,"column":53}},"92":{"start":{"line":167,"column":19},"end":{"line":167,"column":76}},"93":{"start":{"line":168,"column":22},"end":{"line":168,"column":91}},"94":{"start":{"line":169,"column":17},"end":{"line":169,"column":74}},"95":{"start":{"line":170,"column":20},"end":{"line":170,"column":89}},"96":{"start":{"line":171,"column":18},"end":{"line":171,"column":35}},"97":{"start":{"line":172,"column":2},"end":{"line":176,"column":3}},"98":{"start":{"line":173,"column":4},"end":{"line":173,"column":34}},"99":{"start":{"line":174,"column":9},"end":{"line":176,"column":3}},"100":{"start":{"line":175,"column":4},"end":{"line":175,"column":31}},"101":{"start":{"line":177,"column":2},"end":{"line":189,"column":4}},"102":{"start":{"line":191,"column":30},"end":{"line":191,"column":39}},"103":{"start":{"line":193,"column":28},"end":{"line":193,"column":61}},"104":{"start":{"line":194,"column":2},"end":{"line":196,"column":3}},"105":{"start":{"line":195,"column":4},"end":{"line":195,"column":17}},"106":{"start":{"line":197,"column":2},"end":{"line":199,"column":3}},"107":{"start":{"line":198,"column":4},"end":{"line":198,"column":17}},"108":{"start":{"line":200,"column":20},"end":{"line":200,"column":64}},"109":{"start":{"line":201,"column":2},"end":{"line":203,"column":3}},"110":{"start":{"line":202,"column":4},"end":{"line":202,"column":17}},"111":{"start":{"line":204,"column":2},"end":{"line":204,"column":14}},"112":{"start":{"line":207,"column":21},"end":{"line":207,"column":23}},"113":{"start":{"line":208,"column":20},"end":{"line":208,"column":25}},"114":{"start":{"line":209,"column":2},"end":{"line":219,"column":3}},"115":{"start":{"line":209,"column":15},"end":{"line":209,"column":16}},"116":{"start":{"line":209,"column":24},"end":{"line":209,"column":36}},"117":{"start":{"line":210,"column":17},"end":{"line":210,"column":25}},"118":{"start":{"line":211,"column":4},"end":{"line":218,"column":5}},"119":{"start":{"line":212,"column":6},"end":{"line":212,"column":28}},"120":{"start":{"line":213,"column":11},"end":{"line":218,"column":5}},"121":{"start":{"line":214,"column":6},"end":{"line":214,"column":15}},"122":{"start":{"line":216,"column":6},"end":{"line":216,"column":28}},"123":{"start":{"line":217,"column":6},"end":{"line":217,"column":25}},"124":{"start":{"line":220,"column":2},"end":{"line":220,"column":29}},"125":{"start":{"line":223,"column":21},"end":{"line":223,"column":48}},"126":{"start":{"line":224,"column":2},"end":{"line":226,"column":3}},"127":{"start":{"line":225,"column":4},"end":{"line":225,"column":14}},"128":{"start":{"line":227,"column":17},"end":{"line":227,"column":46}},"129":{"start":{"line":228,"column":2},"end":{"line":230,"column":3}},"130":{"start":{"line":229,"column":4},"end":{"line":229,"column":14}},"131":{"start":{"line":231,"column":17},"end":{"line":239,"column":4}},"132":{"start":{"line":232,"column":22},"end":{"line":232,"column":52}},"133":{"start":{"line":233,"column":4},"end":{"line":238,"column":6}},"134":{"start":{"line":240,"column":2},"end":{"line":240,"column":16}},"135":{"start":{"line":243,"column":21},"end":{"line":243,"column":48}},"136":{"start":{"line":244,"column":2},"end":{"line":246,"column":5}},"137":{"start":{"line":245,"column":4},"end":{"line":245,"column":67}},"138":{"start":{"line":249,"column":2},"end":{"line":251,"column":3}},"139":{"start":{"line":250,"column":4},"end":{"line":250,"column":17}},"140":{"start":{"line":252,"column":2},"end":{"line":254,"column":3}},"141":{"start":{"line":253,"column":4},"end":{"line":253,"column":16}},"142":{"start":{"line":255,"column":2},"end":{"line":257,"column":3}},"143":{"start":{"line":256,"column":4},"end":{"line":256,"column":16}},"144":{"start":{"line":258,"column":2},"end":{"line":260,"column":3}},"145":{"start":{"line":259,"column":4},"end":{"line":259,"column":16}},"146":{"start":{"line":261,"column":2},"end":{"line":263,"column":3}},"147":{"start":{"line":262,"column":4},"end":{"line":262,"column":16}},"148":{"start":{"line":264,"column":2},"end":{"line":264,"column":15}},"149":{"start":{"line":267,"column":2},"end":{"line":267,"column":65}},"150":{"start":{"line":270,"column":2},"end":{"line":270,"column":34}},"151":{"start":{"line":273,"column":2},"end":{"line":273,"column":34}},"152":{"start":{"line":276,"column":16},"end":{"line":276,"column":45}},"153":{"start":{"line":277,"column":2},"end":{"line":277,"column":64}},"154":{"start":{"line":280,"column":2},"end":{"line":280,"column":77}},"155":{"start":{"line":283,"column":2},"end":{"line":283,"column":63}}},"fnMap":{"0":{"name":"getAbsoluteRefTypeWithSingleString","decl":{"start":{"line":7,"column":16},"end":{"line":7,"column":50}},"loc":{"start":{"line":7,"column":68},"end":{"line":25,"column":1}},"line":7},"1":{"name":"getAbsoluteRefTypeWitString","decl":{"start":{"line":26,"column":16},"end":{"line":26,"column":43}},"loc":{"start":{"line":26,"column":55},"end":{"line":39,"column":1}},"line":26},"2":{"name":"_getAbsoluteToken","decl":{"start":{"line":40,"column":9},"end":{"line":40,"column":26}},"loc":{"start":{"line":40,"column":67},"end":{"line":55,"column":1}},"line":40},"3":{"name":"serializeRange","decl":{"start":{"line":56,"column":16},"end":{"line":56,"column":30}},"loc":{"start":{"line":56,"column":38},"end":{"line":84,"column":1}},"line":56},"4":{"name":"serializeRangeWithSheet","decl":{"start":{"line":85,"column":16},"end":{"line":85,"column":39}},"loc":{"start":{"line":85,"column":58},"end":{"line":87,"column":1}},"line":85},"5":{"name":"serializeRangeWithSpreadsheet","decl":{"start":{"line":88,"column":16},"end":{"line":88,"column":45}},"loc":{"start":{"line":88,"column":70},"end":{"line":93,"column":1}},"line":88},"6":{"name":"serializeRangeToRefString","decl":{"start":{"line":94,"column":16},"end":{"line":94,"column":41}},"loc":{"start":{"line":94,"column":57},"end":{"line":103,"column":1}},"line":94},"7":{"name":"singleReferenceToGrid","decl":{"start":{"line":104,"column":16},"end":{"line":104,"column":37}},"loc":{"start":{"line":104,"column":47},"end":{"line":113,"column":1}},"line":104},"8":{"name":"handleRefStringInfo","decl":{"start":{"line":114,"column":16},"end":{"line":114,"column":35}},"loc":{"start":{"line":114,"column":47},"end":{"line":140,"column":1}},"line":114},"9":{"name":"deserializeRangeWithSheet","decl":{"start":{"line":141,"column":16},"end":{"line":141,"column":41}},"loc":{"start":{"line":141,"column":53},"end":{"line":190,"column":1}},"line":141},"10":{"name":"isReferenceStringWithEffectiveColumn","decl":{"start":{"line":192,"column":16},"end":{"line":192,"column":52}},"loc":{"start":{"line":192,"column":64},"end":{"line":205,"column":1}},"line":192},"11":{"name":"replaceRefPrefixString","decl":{"start":{"line":206,"column":16},"end":{"line":206,"column":38}},"loc":{"start":{"line":206,"column":46},"end":{"line":221,"column":1}},"line":206},"12":{"name":"getRangeWithRefsString","decl":{"start":{"line":222,"column":16},"end":{"line":222,"column":38}},"loc":{"start":{"line":222,"column":68},"end":{"line":241,"column":1}},"line":222},"13":{"name":"(anonymous_13)","decl":{"start":{"line":231,"column":32},"end":{"line":231,"column":33}},"loc":{"start":{"line":231,"column":41},"end":{"line":239,"column":3}},"line":231},"14":{"name":"isReferenceStrings","decl":{"start":{"line":242,"column":16},"end":{"line":242,"column":34}},"loc":{"start":{"line":242,"column":46},"end":{"line":247,"column":1}},"line":242},"15":{"name":"(anonymous_15)","decl":{"start":{"line":244,"column":26},"end":{"line":244,"column":27}},"loc":{"start":{"line":244,"column":42},"end":{"line":246,"column":3}},"line":244},"16":{"name":"needsQuoting","decl":{"start":{"line":248,"column":16},"end":{"line":248,"column":28}},"loc":{"start":{"line":248,"column":35},"end":{"line":265,"column":1}},"line":248},"17":{"name":"addQuotesBothSides","decl":{"start":{"line":266,"column":16},"end":{"line":266,"column":34}},"loc":{"start":{"line":266,"column":41},"end":{"line":268,"column":1}},"line":266},"18":{"name":"quoteSheetName","decl":{"start":{"line":269,"column":9},"end":{"line":269,"column":23}},"loc":{"start":{"line":269,"column":30},"end":{"line":271,"column":1}},"line":269},"19":{"name":"unquoteSheetName","decl":{"start":{"line":272,"column":9},"end":{"line":272,"column":25}},"loc":{"start":{"line":272,"column":32},"end":{"line":274,"column":1}},"line":272},"20":{"name":"isA1Notation","decl":{"start":{"line":275,"column":9},"end":{"line":275,"column":21}},"loc":{"start":{"line":275,"column":28},"end":{"line":278,"column":1}},"line":275},"21":{"name":"isR1C1Notation","decl":{"start":{"line":279,"column":9},"end":{"line":279,"column":23}},"loc":{"start":{"line":279,"column":30},"end":{"line":281,"column":1}},"line":279},"22":{"name":"startsWithNonAlphabetic","decl":{"start":{"line":282,"column":9},"end":{"line":282,"column":32}},"loc":{"start":{"line":282,"column":39},"end":{"line":284,"column":1}},"line":282}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":2},"end":{"line":14,"column":3}},"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":14,"column":3}},{"start":{},"end":{}}],"line":11},"1":{"loc":{"start":{"line":11,"column":6},"end":{"line":11,"column":76}},"type":"binary-expr","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":38}},{"start":{"line":11,"column":42},"end":{"line":11,"column":58}},{"start":{"line":11,"column":62},"end":{"line":11,"column":76}}],"line":11},"2":{"loc":{"start":{"line":15,"column":2},"end":{"line":17,"column":3}},"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":17,"column":3}},{"start":{},"end":{}}],"line":15},"3":{"loc":{"start":{"line":15,"column":6},"end":{"line":15,"column":39}},"type":"binary-expr","locations":[{"start":{"line":15,"column":6},"end":{"line":15,"column":22}},{"start":{"line":15,"column":26},"end":{"line":15,"column":39}}],"line":15},"4":{"loc":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},{"start":{},"end":{}}],"line":18},"5":{"loc":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},{"start":{},"end":{}}],"line":21},"6":{"loc":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},{"start":{},"end":{}}],"line":28},"7":{"loc":{"start":{"line":32,"column":2},"end":{"line":37,"column":3}},"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":37,"column":3}},{"start":{},"end":{}}],"line":32},"8":{"loc":{"start":{"line":40,"column":27},"end":{"line":40,"column":65}},"type":"default-arg","locations":[{"start":{"line":40,"column":45},"end":{"line":40,"column":65}}],"line":40},"9":{"loc":{"start":{"line":43,"column":2},"end":{"line":50,"column":3}},"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":50,"column":3}},{"start":{"line":45,"column":9},"end":{"line":50,"column":3}}],"line":43},"10":{"loc":{"start":{"line":45,"column":9},"end":{"line":50,"column":3}},"type":"if","locations":[{"start":{"line":45,"column":9},"end":{"line":50,"column":3}},{"start":{"line":47,"column":9},"end":{"line":50,"column":3}}],"line":45},"11":{"loc":{"start":{"line":47,"column":9},"end":{"line":50,"column":3}},"type":"if","locations":[{"start":{"line":47,"column":9},"end":{"line":50,"column":3}},{"start":{},"end":{}}],"line":47},"12":{"loc":{"start":{"line":64,"column":4},"end":{"line":64,"column":33}},"type":"default-arg","locations":[{"start":{"line":64,"column":16},"end":{"line":64,"column":33}}],"line":64},"13":{"loc":{"start":{"line":68,"column":2},"end":{"line":72,"column":3}},"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":72,"column":3}},{"start":{},"end":{}}],"line":68},"14":{"loc":{"start":{"line":68,"column":6},"end":{"line":68,"column":66}},"type":"binary-expr","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":34}},{"start":{"line":68,"column":38},"end":{"line":68,"column":66}}],"line":68},"15":{"loc":{"start":{"line":73,"column":2},"end":{"line":77,"column":3}},"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":77,"column":3}},{"start":{},"end":{}}],"line":73},"16":{"loc":{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},{"start":{},"end":{}}],"line":80},"17":{"loc":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},{"start":{},"end":{}}],"line":89},"18":{"loc":{"start":{"line":89,"column":6},"end":{"line":89,"column":51}},"type":"binary-expr","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":24}},{"start":{"line":89,"column":28},"end":{"line":89,"column":51}}],"line":89},"19":{"loc":{"start":{"line":96,"column":2},"end":{"line":98,"column":3}},"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":98,"column":3}},{"start":{},"end":{}}],"line":96},"20":{"loc":{"start":{"line":96,"column":6},"end":{"line":96,"column":86}},"type":"binary-expr","locations":[{"start":{"line":96,"column":6},"end":{"line":96,"column":20}},{"start":{"line":96,"column":24},"end":{"line":96,"column":41}},{"start":{"line":96,"column":45},"end":{"line":96,"column":62}},{"start":{"line":96,"column":66},"end":{"line":96,"column":86}}],"line":96},"21":{"loc":{"start":{"line":99,"column":2},"end":{"line":101,"column":3}},"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":101,"column":3}},{"start":{},"end":{}}],"line":99},"22":{"loc":{"start":{"line":99,"column":6},"end":{"line":99,"column":47}},"type":"binary-expr","locations":[{"start":{"line":99,"column":6},"end":{"line":99,"column":23}},{"start":{"line":99,"column":27},"end":{"line":99,"column":47}}],"line":99},"23":{"loc":{"start":{"line":117,"column":2},"end":{"line":121,"column":3}},"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":121,"column":3}},{"start":{},"end":{}}],"line":117},"24":{"loc":{"start":{"line":125,"column":2},"end":{"line":134,"column":3}},"type":"if","locations":[{"start":{"line":125,"column":2},"end":{"line":134,"column":3}},{"start":{"line":132,"column":9},"end":{"line":134,"column":3}}],"line":125},"25":{"loc":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},{"start":{},"end":{}}],"line":127},"26":{"loc":{"start":{"line":127,"column":8},"end":{"line":127,"column":71}},"type":"binary-expr","locations":[{"start":{"line":127,"column":8},"end":{"line":127,"column":28}},{"start":{"line":127,"column":32},"end":{"line":127,"column":71}}],"line":127},"27":{"loc":{"start":{"line":144,"column":2},"end":{"line":162,"column":3}},"type":"if","locations":[{"start":{"line":144,"column":2},"end":{"line":162,"column":3}},{"start":{},"end":{}}],"line":144},"28":{"loc":{"start":{"line":167,"column":19},"end":{"line":167,"column":76}},"type":"cond-expr","locations":[{"start":{"line":167,"column":49},"end":{"line":167,"column":60}},{"start":{"line":167,"column":63},"end":{"line":167,"column":76}}],"line":167},"29":{"loc":{"start":{"line":168,"column":22},"end":{"line":168,"column":91}},"type":"cond-expr","locations":[{"start":{"line":168,"column":58},"end":{"line":168,"column":72}},{"start":{"line":168,"column":75},"end":{"line":168,"column":91}}],"line":168},"30":{"loc":{"start":{"line":169,"column":17},"end":{"line":169,"column":74}},"type":"cond-expr","locations":[{"start":{"line":169,"column":47},"end":{"line":169,"column":60}},{"start":{"line":169,"column":63},"end":{"line":169,"column":74}}],"line":169},"31":{"loc":{"start":{"line":170,"column":20},"end":{"line":170,"column":89}},"type":"cond-expr","locations":[{"start":{"line":170,"column":56},"end":{"line":170,"column":72}},{"start":{"line":170,"column":75},"end":{"line":170,"column":89}}],"line":170},"32":{"loc":{"start":{"line":172,"column":2},"end":{"line":176,"column":3}},"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":176,"column":3}},{"start":{"line":174,"column":9},"end":{"line":176,"column":3}}],"line":172},"33":{"loc":{"start":{"line":172,"column":6},"end":{"line":172,"column":52}},"type":"binary-expr","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":28}},{"start":{"line":172,"column":32},"end":{"line":172,"column":52}}],"line":172},"34":{"loc":{"start":{"line":174,"column":9},"end":{"line":176,"column":3}},"type":"if","locations":[{"start":{"line":174,"column":9},"end":{"line":176,"column":3}},{"start":{},"end":{}}],"line":174},"35":{"loc":{"start":{"line":174,"column":13},"end":{"line":174,"column":65}},"type":"binary-expr","locations":[{"start":{"line":174,"column":13},"end":{"line":174,"column":38}},{"start":{"line":174,"column":42},"end":{"line":174,"column":65}}],"line":174},"36":{"loc":{"start":{"line":194,"column":2},"end":{"line":196,"column":3}},"type":"if","locations":[{"start":{"line":194,"column":2},"end":{"line":196,"column":3}},{"start":{},"end":{}}],"line":194},"37":{"loc":{"start":{"line":197,"column":2},"end":{"line":199,"column":3}},"type":"if","locations":[{"start":{"line":197,"column":2},"end":{"line":199,"column":3}},{"start":{},"end":{}}],"line":197},"38":{"loc":{"start":{"line":201,"column":2},"end":{"line":203,"column":3}},"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":203,"column":3}},{"start":{},"end":{}}],"line":201},"39":{"loc":{"start":{"line":211,"column":4},"end":{"line":218,"column":5}},"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":218,"column":5}},{"start":{"line":213,"column":11},"end":{"line":218,"column":5}}],"line":211},"40":{"loc":{"start":{"line":211,"column":8},"end":{"line":211,"column":44}},"type":"binary-expr","locations":[{"start":{"line":211,"column":8},"end":{"line":211,"column":28}},{"start":{"line":211,"column":32},"end":{"line":211,"column":44}}],"line":211},"41":{"loc":{"start":{"line":213,"column":11},"end":{"line":218,"column":5}},"type":"if","locations":[{"start":{"line":213,"column":11},"end":{"line":218,"column":5}},{"start":{"line":215,"column":11},"end":{"line":218,"column":5}}],"line":213},"42":{"loc":{"start":{"line":213,"column":15},"end":{"line":213,"column":115}},"type":"binary-expr","locations":[{"start":{"line":213,"column":15},"end":{"line":213,"column":27}},{"start":{"line":213,"column":32},"end":{"line":213,"column":55}},{"start":{"line":213,"column":59},"end":{"line":213,"column":85}},{"start":{"line":213,"column":89},"end":{"line":213,"column":114}}],"line":213},"43":{"loc":{"start":{"line":223,"column":21},"end":{"line":223,"column":48}},"type":"binary-expr","locations":[{"start":{"line":223,"column":21},"end":{"line":223,"column":42}},{"start":{"line":223,"column":46},"end":{"line":223,"column":48}}],"line":223},"44":{"loc":{"start":{"line":224,"column":2},"end":{"line":226,"column":3}},"type":"if","locations":[{"start":{"line":224,"column":2},"end":{"line":226,"column":3}},{"start":{},"end":{}}],"line":224},"45":{"loc":{"start":{"line":224,"column":6},"end":{"line":224,"column":49}},"type":"binary-expr","locations":[{"start":{"line":224,"column":6},"end":{"line":224,"column":22}},{"start":{"line":224,"column":26},"end":{"line":224,"column":49}}],"line":224},"46":{"loc":{"start":{"line":228,"column":2},"end":{"line":230,"column":3}},"type":"if","locations":[{"start":{"line":228,"column":2},"end":{"line":230,"column":3}},{"start":{},"end":{}}],"line":228},"47":{"loc":{"start":{"line":243,"column":21},"end":{"line":243,"column":48}},"type":"binary-expr","locations":[{"start":{"line":243,"column":21},"end":{"line":243,"column":42}},{"start":{"line":243,"column":46},"end":{"line":243,"column":48}}],"line":243},"48":{"loc":{"start":{"line":249,"column":2},"end":{"line":251,"column":3}},"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":251,"column":3}},{"start":{},"end":{}}],"line":249},"49":{"loc":{"start":{"line":252,"column":2},"end":{"line":254,"column":3}},"type":"if","locations":[{"start":{"line":252,"column":2},"end":{"line":254,"column":3}},{"start":{},"end":{}}],"line":252},"50":{"loc":{"start":{"line":255,"column":2},"end":{"line":257,"column":3}},"type":"if","locations":[{"start":{"line":255,"column":2},"end":{"line":257,"column":3}},{"start":{},"end":{}}],"line":255},"51":{"loc":{"start":{"line":255,"column":6},"end":{"line":255,"column":48}},"type":"binary-expr","locations":[{"start":{"line":255,"column":6},"end":{"line":255,"column":24}},{"start":{"line":255,"column":28},"end":{"line":255,"column":48}}],"line":255},"52":{"loc":{"start":{"line":258,"column":2},"end":{"line":260,"column":3}},"type":"if","locations":[{"start":{"line":258,"column":2},"end":{"line":260,"column":3}},{"start":{},"end":{}}],"line":258},"53":{"loc":{"start":{"line":261,"column":2},"end":{"line":263,"column":3}},"type":"if","locations":[{"start":{"line":261,"column":2},"end":{"line":263,"column":3}},{"start":{},"end":{}}],"line":261},"54":{"loc":{"start":{"line":267,"column":9},"end":{"line":267,"column":64}},"type":"cond-expr","locations":[{"start":{"line":267,"column":30},"end":{"line":267,"column":57}},{"start":{"line":267,"column":60},"end":{"line":267,"column":64}}],"line":267},"55":{"loc":{"start":{"line":277,"column":9},"end":{"line":277,"column":63}},"type":"binary-expr","locations":[{"start":{"line":277,"column":9},"end":{"line":277,"column":45}},{"start":{"line":277,"column":49},"end":{"line":277,"column":63}}],"line":277}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"0":[0,0],"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0,0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/reference.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, IUnitRangeName, IUnitRangeWithName } from '@univerjs/core';\nimport { AbsoluteRefType, RANGE_TYPE, Tools } from '@univerjs/core';\n\nimport { includeFormulaLexerToken } from '../../basics/match-token';\nimport { isReferenceString, UNIT_NAME_REGEX_PRECOMPILING } from '../../basics/regex';\nimport { prefixToken, SPACE_TOKEN } from '../../basics/token';\n\nconst $ROW_REGEX = /[^0-9]/g;\nconst $COLUMN_REGEX = /[^A-Za-z]/g;\n\nexport interface IAbsoluteRefTypeForRange {\n    startAbsoluteRefType: AbsoluteRefType;\n    endAbsoluteRefType?: AbsoluteRefType;\n}\n\n/**\n *\n * @param singleRefString for example A1 or B10,  not A1:B10\n */\nexport function getAbsoluteRefTypeWithSingleString(singleRefString: string) {\n    let isColumnAbsolute = singleRefString[0] === '$';\n    const remainChar = singleRefString.substring(1);\n\n    let isRowAbsolute = remainChar.indexOf('$') > -1;\n\n    if (Tools.isStringNumber(remainChar) && isColumnAbsolute && !isRowAbsolute) {\n        isColumnAbsolute = false;\n        isRowAbsolute = true;\n    }\n\n    if (isColumnAbsolute && isRowAbsolute) {\n        return AbsoluteRefType.ALL;\n    }\n    if (isColumnAbsolute) {\n        return AbsoluteRefType.COLUMN;\n    }\n    if (isRowAbsolute) {\n        return AbsoluteRefType.ROW;\n    }\n\n    return AbsoluteRefType.NONE;\n}\n\n/**\n *\n * @param refString for example A1:B10\n */\nexport function getAbsoluteRefTypeWitString(refString: string): IAbsoluteRefTypeForRange {\n    const sheetArray = refString.split('!');\n\n    if (sheetArray.length > 1) {\n        refString = sheetArray[sheetArray.length - 1];\n    }\n\n    const refArray = refString.split(':');\n\n    if (refArray.length > 1) {\n        return {\n            startAbsoluteRefType: getAbsoluteRefTypeWithSingleString(refArray[0]),\n            endAbsoluteRefType: getAbsoluteRefTypeWithSingleString(refArray[1]),\n        };\n    }\n\n    return { startAbsoluteRefType: getAbsoluteRefTypeWithSingleString(refArray[0]) };\n}\n\nfunction _getAbsoluteToken(absoluteRefType = AbsoluteRefType.NONE) {\n    let rowAbsoluteString = '';\n\n    let columnAbsoluteString = '';\n\n    if (absoluteRefType === AbsoluteRefType.ROW) {\n        rowAbsoluteString = '$';\n    } else if (absoluteRefType === AbsoluteRefType.COLUMN) {\n        columnAbsoluteString = '$';\n    } else if (absoluteRefType === AbsoluteRefType.ALL) {\n        rowAbsoluteString = '$';\n        columnAbsoluteString = '$';\n    }\n\n    return {\n        rowAbsoluteString,\n        columnAbsoluteString,\n    };\n}\n\n/**\n * Serialize an `IRange` into a string.\n * @param range The `IRange` to be serialized\n */\nexport function serializeRange(range: IRange): string {\n    const {\n        startColumn,\n        startRow,\n        endColumn,\n        endRow,\n        startAbsoluteRefType,\n        endAbsoluteRefType,\n        rangeType = RANGE_TYPE.NORMAL,\n    } = range;\n\n    const start = _getAbsoluteToken(startAbsoluteRefType);\n\n    const end = _getAbsoluteToken(endAbsoluteRefType);\n\n    if (rangeType === RANGE_TYPE.ROW || rangeType === RANGE_TYPE.ALL) {\n        const startStr = `${start.rowAbsoluteString}${startRow + 1}`;\n\n        const endStr = `${end.rowAbsoluteString}${endRow + 1}`;\n\n        return `${startStr}:${endStr}`;\n    }\n    if (rangeType === RANGE_TYPE.COLUMN) {\n        const startStr = `${start.columnAbsoluteString}${Tools.chatAtABC(startColumn)}`;\n\n        const endStr = `${end.columnAbsoluteString}${Tools.chatAtABC(endColumn)}`;\n\n        return `${startStr}:${endStr}`;\n    }\n\n    const startStr = `${start.columnAbsoluteString}${Tools.chatAtABC(startColumn)}${start.rowAbsoluteString}${\n        startRow + 1\n    }`;\n\n    const endStr = `${end.columnAbsoluteString}${Tools.chatAtABC(endColumn)}${end.rowAbsoluteString}${endRow + 1}`;\n\n    if (startStr === endStr) {\n        return startStr;\n    }\n\n    return `${startStr}:${endStr}`;\n}\n\n/**\n * Serialize an `IRange` and a sheetID into a string.\n * @param sheetName\n * @param range\n */\nexport function serializeRangeWithSheet(sheetName: string, range: IRange): string {\n    return `${addQuotesBothSides(sheetName)}!${serializeRange(range)}`;\n}\n\n/**\n * Serialize an `IRange` and a sheetID into a string.\n * @param unit unitId or unitName\n * @param sheetName\n * @param range\n */\nexport function serializeRangeWithSpreadsheet(unit: string, sheetName: string, range: IRange): string {\n    if (needsQuoting(unit) || needsQuoting(sheetName)) {\n        return `'[${quoteSheetName(unit)}]${quoteSheetName(sheetName)}'!${serializeRange(range)}`;\n    }\n\n    return `[${unit}]${sheetName}!${serializeRange(range)}`;\n}\n\nexport function serializeRangeToRefString(gridRangeName: IUnitRangeName) {\n    const { unitId, sheetName, range } = gridRangeName;\n\n    if (unitId != null && unitId.length > 0 && sheetName != null && sheetName.length > 0) {\n        return serializeRangeWithSpreadsheet(unitId, sheetName, range);\n    }\n\n    if (sheetName != null && sheetName.length > 0) {\n        return serializeRangeWithSheet(sheetName, range);\n    }\n\n    return serializeRange(range);\n}\n\nexport function singleReferenceToGrid(refBody: string) {\n    const row = Number.parseInt(refBody.replace($ROW_REGEX, '')) - 1;\n    const column = Tools.ABCatNum(refBody.replace($COLUMN_REGEX, ''));\n\n    const absoluteRefType = getAbsoluteRefTypeWithSingleString(refBody);\n\n    return {\n        row,\n        column,\n        absoluteRefType,\n    };\n}\n\nexport function handleRefStringInfo(refString: string) {\n    const unitIdMatch = UNIT_NAME_REGEX_PRECOMPILING.exec(refString);\n    let unitId = '';\n\n    if (unitIdMatch != null) {\n        unitId = unitIdMatch[0].trim();\n        unitId = unquoteSheetName(unitId.slice(1, unitId.length - 1));\n        refString = refString.replace(UNIT_NAME_REGEX_PRECOMPILING, '');\n    }\n\n    const sheetNameIndex = refString.indexOf('!');\n    let sheetName: string = '';\n    let refBody: string = '';\n    if (sheetNameIndex > -1) {\n        sheetName = refString.substring(0, sheetNameIndex);\n        if (sheetName[0] === \"'\" && sheetName[sheetName.length - 1] === \"'\") {\n            sheetName = sheetName.substring(1, sheetName.length - 1);\n        }\n\n        sheetName = unquoteSheetName(sheetName);\n        refBody = refString.substring(sheetNameIndex + 1);\n    } else {\n        refBody = refString;\n    }\n\n    return {\n        refBody,\n        sheetName,\n        unitId,\n    };\n}\n\nexport function deserializeRangeWithSheet(refString: string): IUnitRangeName {\n    const { refBody, sheetName, unitId } = handleRefStringInfo(refString);\n\n    const colonIndex = refBody.indexOf(':');\n\n    if (colonIndex === -1) {\n        const grid = singleReferenceToGrid(refBody);\n        const row = grid.row;\n        const column = grid.column;\n        const absoluteRefType = grid.absoluteRefType;\n        const range: IRange = {\n            startRow: row,\n            startColumn: column,\n            endRow: row,\n            endColumn: column,\n            startAbsoluteRefType: absoluteRefType,\n            endAbsoluteRefType: absoluteRefType,\n        };\n\n        return {\n            unitId,\n            sheetName,\n            range,\n        };\n    }\n\n    const refStartString = refBody.substring(0, colonIndex);\n    const refEndString = refBody.substring(colonIndex + 1);\n\n    const startGrid = singleReferenceToGrid(refStartString);\n\n    const endGrid = singleReferenceToGrid(refEndString);\n\n    // range A1:B10 === B10:A1\n    const startRow = startGrid.row > endGrid.row ? endGrid.row : startGrid.row;\n    const startColumn = startGrid.column > endGrid.column ? endGrid.column : startGrid.column;\n    const endRow = startGrid.row > endGrid.row ? startGrid.row : endGrid.row;\n    const endColumn = startGrid.column > endGrid.column ? startGrid.column : endGrid.column;\n\n    let rangeType = RANGE_TYPE.NORMAL;\n    if (Number.isNaN(startRow) && Number.isNaN(endRow)) {\n        rangeType = RANGE_TYPE.COLUMN;\n    } else if (Number.isNaN(startColumn) && Number.isNaN(endColumn)) {\n        rangeType = RANGE_TYPE.ROW;\n    }\n\n    return {\n        unitId,\n        sheetName,\n        range: {\n            startRow,\n            startColumn,\n            endRow,\n            endColumn,\n\n            startAbsoluteRefType: startGrid.absoluteRefType,\n\n            endAbsoluteRefType: endGrid.absoluteRefType,\n\n            rangeType,\n        },\n    };\n}\n\n/**\n * LOG10 is a formula, google sheet support it on Log10:L\n * EXCEL support it on Log10:Log10\n */\nconst EXCEPTION_REF_STRINGS = ['LOG10'];\n\nexport function isReferenceStringWithEffectiveColumn(refString: string) {\n    const noPrefixRefString = replaceRefPrefixString(refString);\n\n    if (!isReferenceString(noPrefixRefString)) {\n        return false;\n    }\n\n    if (EXCEPTION_REF_STRINGS.includes(noPrefixRefString.toUpperCase().trim())) {\n        return false;\n    }\n\n    const { range } = deserializeRangeWithSheet(noPrefixRefString);\n\n    /**\n     * As of the latest information I have, which is up to the end of 2023,\n     * the maximum limit for columns in Excel is 16,384.\n     * This standard applies to Excel 2007 and later versions,\n     * where each worksheet can support columns ranging from A to XFD.\n     * Therefore, the symbol for the maximum column is XFD.\n     */\n    if (range.endColumn >= 16384) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceRefPrefixString(token: string) {\n    const tokenArray = [];\n    let isNotPreFix = false;\n    for (let i = 0, len = token.length; i < len; i++) {\n        const char = token[i];\n        if (char === SPACE_TOKEN && !isNotPreFix) {\n            tokenArray.push(char);\n        } else if (!isNotPreFix && (char === prefixToken.AT || char === prefixToken.MINUS || char === prefixToken.PLUS)) {\n            continue;\n        } else {\n            tokenArray.push(char);\n            isNotPreFix = true;\n        }\n    }\n    return tokenArray.join('');\n}\n\n/**\n * implement getSheetIdByName\n * function getSheetIdByName(name: string) {\n        return univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)?.getSheetBySheetName(name)?.getSheetId() || '';\n    }\n */\nexport function getRangeWithRefsString(refString: string, getSheetIdByName: (name: string) => string): IUnitRangeWithName[] {\n    const valueArray = refString?.split(',') || [];\n\n    if (refString === '' || valueArray.length === 0) {\n        return [];\n    }\n\n    const result = isReferenceStrings(refString);\n\n    if (!result) {\n        return [];\n    }\n\n    const ranges = valueArray.map((ref) => {\n        const unitRange = deserializeRangeWithSheet(ref);\n        return {\n            unitId: unitRange.unitId,\n            sheetId: getSheetIdByName(unitRange.sheetName),\n            range: unitRange.range,\n            sheetName: unitRange.sheetName,\n        };\n    });\n\n    return ranges;\n}\n\nexport function isReferenceStrings(refString: string) {\n    const valueArray = refString?.split(',') || [];\n    return valueArray.every((refString) => {\n        return isReferenceStringWithEffectiveColumn(refString.trim());\n    });\n}\n\n/**\n * Determine whether the sheet name needs to be wrapped in quotes\n * Excel will quote the worksheet name if any of the following is true:\n *  - It contains any space or punctuation characters, such as  ()$,;-{}\"'（）【】“”‘’%… and many more\n *  - It is a valid cell reference in A1 notation, e.g. B1048576 is quoted\n *  - It is a valid cell reference in R1C1 notation, e.g. RC, RC2, R5C, R-4C, RC-8, R, C\n *  - It starts with a non-letter, e.g. 99, 1.5, 12a, 💩a\n *  - Excel will not quote worksheet names if they only contain non-punctuation, non-letter characters in non-initial positions. For example, a💩 remains unquoted.*\n *  In addition, if a worksheet name contains single quotes, these will be doubled up within the name itself. For example, the sheet name a'b'c becomes 'a''b''c'.\n *\n *  reference https://stackoverflow.com/questions/41677779/when-does-excel-surround-sheet-names-with-single-quotes-in-workbook-xml-or-othe\n *\n * @param name Sheet name\n * @returns Result\n */\nexport function needsQuoting(name: string) {\n    if (name.length === 0) {\n        return false;\n    }\n\n    if (includeFormulaLexerToken(name)) {\n        return true;\n    }\n\n    // Check if the name is a valid cell reference in A1 or R1C1 notation\n    if (isA1Notation(name) || isR1C1Notation(name)) {\n        return true;\n    }\n\n    // Check if the name starts with a non-letter\n    if (startsWithNonAlphabetic(name)) {\n        return true;\n    }\n\n    // Check for spaces, punctuation and special characters\n\n    if (/[\\s!$%^&*()+\\-=\\[\\]{};':\"\\\\|,.<>\\/?（）]/.test(name)) {\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Add quotes to the sheet name\n */\nexport function addQuotesBothSides(name: string) {\n    return needsQuoting(name) ? `'${quoteSheetName(name)}'` : name;\n}\n\n/**\n * Add a single quote before the single quote\n * @param name\n * @returns Quoted name\n */\nfunction quoteSheetName(name: string) {\n    return name.replace(/'/g, \"''\");\n}\n\n/**\n * Replace double single quotes with single quotes\n * @param name\n * @returns Unquoted name\n */\nfunction unquoteSheetName(name: string) {\n    return name.replace(/''/g, \"'\");\n}\n\nfunction isA1Notation(name: string) {\n    const match = name.match(/[1-9][0-9]{0,6}/);\n    // Excel has a limit on the number of rows and columns: targetRow > 1048576 || targetColumn > 16384, Univer has no limit\n    return /^[A-Z]+[1-9][0-9]{0,6}$/.test(name) && match !== null;\n}\n\nfunction isR1C1Notation(name: string) {\n    return /^(R(-?[0-9]+)?C(-?[0-9]+)?|C(-?[0-9]+)?|R(-?[0-9]+)?)$/.test(name);\n}\n\nfunction startsWithNonAlphabetic(name: string) {\n    // Check if the first character is not a letter (including non-English characters)\n    return !/^\\p{Letter}/u.test(name.charAt(0));\n}\n"],"mappings":"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","names":["startStr","endStr","refString"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2530ac062811e9380eb31e8fe41302ea8e2bc104"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/defined-names.service.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/defined-names.service.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":15,"column":33},"end":{"line":142,"column":1}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":12}},"16":{"start":{"line":18,"column":4},"end":{"line":18,"column":57}},"17":{"start":{"line":21,"column":20},"end":{"line":21,"column":22}},"18":{"start":{"line":22,"column":18},"end":{"line":22,"column":20}},"19":{"start":{"line":24,"column":13},"end":{"line":24,"column":26}},"20":{"start":{"line":25,"column":12},"end":{"line":25,"column":40}},"21":{"start":{"line":26,"column":18},"end":{"line":35,"column":3}},"22":{"start":{"line":36,"column":19},"end":{"line":36,"column":32}},"23":{"start":{"line":37,"column":18},"end":{"line":37,"column":52}},"24":{"start":{"line":38,"column":17},"end":{"line":38,"column":30}},"25":{"start":{"line":39,"column":16},"end":{"line":39,"column":48}},"26":{"start":{"line":41,"column":4},"end":{"line":41,"column":20}},"27":{"start":{"line":42,"column":4},"end":{"line":42,"column":30}},"28":{"start":{"line":43,"column":4},"end":{"line":43,"column":28}},"29":{"start":{"line":44,"column":4},"end":{"line":44,"column":29}},"30":{"start":{"line":45,"column":4},"end":{"line":45,"column":35}},"31":{"start":{"line":46,"column":4},"end":{"line":46,"column":33}},"32":{"start":{"line":49,"column":26},"end":{"line":49,"column":50}},"33":{"start":{"line":50,"column":4},"end":{"line":50,"column":87}},"34":{"start":{"line":53,"column":17},"end":{"line":53,"column":46}},"35":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"36":{"start":{"line":55,"column":6},"end":{"line":55,"column":13}},"37":{"start":{"line":57,"column":4},"end":{"line":57,"column":48}},"38":{"start":{"line":60,"column":4},"end":{"line":60,"column":31}},"39":{"start":{"line":61,"column":4},"end":{"line":61,"column":36}},"40":{"start":{"line":64,"column":4},"end":{"line":64,"column":30}},"41":{"start":{"line":67,"column":4},"end":{"line":67,"column":52}},"42":{"start":{"line":70,"column":4},"end":{"line":70,"column":42}},"43":{"start":{"line":71,"column":4},"end":{"line":71,"column":30}},"44":{"start":{"line":72,"column":4},"end":{"line":72,"column":19}},"45":{"start":{"line":75,"column":20},"end":{"line":75,"column":48}},"46":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"47":{"start":{"line":77,"column":6},"end":{"line":77,"column":40}},"48":{"start":{"line":79,"column":4},"end":{"line":79,"column":51}},"49":{"start":{"line":80,"column":4},"end":{"line":80,"column":30}},"50":{"start":{"line":81,"column":4},"end":{"line":81,"column":19}},"51":{"start":{"line":84,"column":4},"end":{"line":84,"column":46}},"52":{"start":{"line":85,"column":4},"end":{"line":85,"column":30}},"53":{"start":{"line":86,"column":4},"end":{"line":86,"column":19}},"54":{"start":{"line":89,"column":4},"end":{"line":89,"column":40}},"55":{"start":{"line":90,"column":4},"end":{"line":90,"column":30}},"56":{"start":{"line":91,"column":4},"end":{"line":91,"column":19}},"57":{"start":{"line":94,"column":4},"end":{"line":94,"column":40}},"58":{"start":{"line":97,"column":22},"end":{"line":97,"column":48}},"59":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"60":{"start":{"line":99,"column":6},"end":{"line":99,"column":37}},"61":{"start":{"line":101,"column":20},"end":{"line":101,"column":48}},"62":{"start":{"line":102,"column":4},"end":{"line":104,"column":5}},"63":{"start":{"line":103,"column":6},"end":{"line":103,"column":18}},"64":{"start":{"line":105,"column":17},"end":{"line":105,"column":21}},"65":{"start":{"line":106,"column":4},"end":{"line":111,"column":5}},"66":{"start":{"line":107,"column":6},"end":{"line":110,"column":7}},"67":{"start":{"line":108,"column":8},"end":{"line":108,"column":22}},"68":{"start":{"line":109,"column":8},"end":{"line":109,"column":14}},"69":{"start":{"line":112,"column":4},"end":{"line":115,"column":5}},"70":{"start":{"line":113,"column":6},"end":{"line":113,"column":68}},"71":{"start":{"line":114,"column":6},"end":{"line":114,"column":48}},"72":{"start":{"line":116,"column":4},"end":{"line":116,"column":18}},"73":{"start":{"line":119,"column":4},"end":{"line":119,"column":46}},"74":{"start":{"line":122,"column":4},"end":{"line":124,"column":5}},"75":{"start":{"line":123,"column":6},"end":{"line":123,"column":19}},"76":{"start":{"line":125,"column":17},"end":{"line":125,"column":84}},"77":{"start":{"line":126,"column":4},"end":{"line":126,"column":22}},"78":{"start":{"line":129,"column":4},"end":{"line":129,"column":29}},"79":{"start":{"line":132,"column":20},"end":{"line":132,"column":48}},"80":{"start":{"line":133,"column":4},"end":{"line":136,"column":5}},"81":{"start":{"line":134,"column":6},"end":{"line":134,"column":40}},"82":{"start":{"line":135,"column":6},"end":{"line":135,"column":13}},"83":{"start":{"line":137,"column":4},"end":{"line":137,"column":36}},"84":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"85":{"start":{"line":139,"column":6},"end":{"line":139,"column":51}},"86":{"start":{"line":143,"column":0},"end":{"line":145,"column":24}},"87":{"start":{"line":146,"column":36},"end":{"line":146,"column":92}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":2},"end":{"line":16,"column":3}},"loc":{"start":{"line":16,"column":38},"end":{"line":19,"column":3}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":2},"end":{"line":40,"column":3}},"loc":{"start":{"line":40,"column":12},"end":{"line":47,"column":3}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":48,"column":2},"end":{"line":48,"column":3}},"loc":{"start":{"line":48,"column":33},"end":{"line":51,"column":3}},"line":48},"6":{"name":"(anonymous_6)","decl":{"start":{"line":52,"column":2},"end":{"line":52,"column":3}},"loc":{"start":{"line":52,"column":25},"end":{"line":58,"column":3}},"line":52},"7":{"name":"(anonymous_7)","decl":{"start":{"line":59,"column":2},"end":{"line":59,"column":3}},"loc":{"start":{"line":59,"column":25},"end":{"line":62,"column":3}},"line":59},"8":{"name":"(anonymous_8)","decl":{"start":{"line":63,"column":2},"end":{"line":63,"column":3}},"loc":{"start":{"line":63,"column":20},"end":{"line":65,"column":3}},"line":63},"9":{"name":"(anonymous_9)","decl":{"start":{"line":66,"column":2},"end":{"line":66,"column":3}},"loc":{"start":{"line":66,"column":29},"end":{"line":68,"column":3}},"line":66},"10":{"name":"(anonymous_10)","decl":{"start":{"line":69,"column":2},"end":{"line":69,"column":3}},"loc":{"start":{"line":69,"column":39},"end":{"line":73,"column":3}},"line":69},"11":{"name":"(anonymous_11)","decl":{"start":{"line":74,"column":2},"end":{"line":74,"column":3}},"loc":{"start":{"line":74,"column":37},"end":{"line":82,"column":3}},"line":74},"12":{"name":"(anonymous_12)","decl":{"start":{"line":83,"column":2},"end":{"line":83,"column":3}},"loc":{"start":{"line":83,"column":32},"end":{"line":87,"column":3}},"line":83},"13":{"name":"(anonymous_13)","decl":{"start":{"line":88,"column":2},"end":{"line":88,"column":3}},"loc":{"start":{"line":88,"column":32},"end":{"line":92,"column":3}},"line":88},"14":{"name":"(anonymous_14)","decl":{"start":{"line":93,"column":2},"end":{"line":93,"column":3}},"loc":{"start":{"line":93,"column":28},"end":{"line":95,"column":3}},"line":93},"15":{"name":"(anonymous_15)","decl":{"start":{"line":96,"column":2},"end":{"line":96,"column":3}},"loc":{"start":{"line":96,"column":31},"end":{"line":117,"column":3}},"line":96},"16":{"name":"(anonymous_16)","decl":{"start":{"line":118,"column":2},"end":{"line":118,"column":3}},"loc":{"start":{"line":118,"column":27},"end":{"line":120,"column":3}},"line":118},"17":{"name":"(anonymous_17)","decl":{"start":{"line":121,"column":2},"end":{"line":121,"column":3}},"loc":{"start":{"line":121,"column":25},"end":{"line":127,"column":3}},"line":121},"18":{"name":"(anonymous_18)","decl":{"start":{"line":128,"column":2},"end":{"line":128,"column":3}},"loc":{"start":{"line":128,"column":12},"end":{"line":130,"column":3}},"line":128},"19":{"name":"(anonymous_19)","decl":{"start":{"line":131,"column":2},"end":{"line":131,"column":3}},"loc":{"start":{"line":131,"column":23},"end":{"line":141,"column":3}},"line":131}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},{"start":{},"end":{}}],"line":54},"8":{"loc":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},{"start":{},"end":{}}],"line":76},"9":{"loc":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},{"start":{},"end":{}}],"line":98},"10":{"loc":{"start":{"line":99,"column":13},"end":{"line":99,"column":36}},"type":"binary-expr","locations":[{"start":{"line":99,"column":13},"end":{"line":99,"column":28}},{"start":{"line":99,"column":32},"end":{"line":99,"column":36}}],"line":99},"11":{"loc":{"start":{"line":102,"column":4},"end":{"line":104,"column":5}},"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":104,"column":5}},{"start":{},"end":{}}],"line":102},"12":{"loc":{"start":{"line":107,"column":6},"end":{"line":110,"column":7}},"type":"if","locations":[{"start":{"line":107,"column":6},"end":{"line":110,"column":7}},{"start":{},"end":{}}],"line":107},"13":{"loc":{"start":{"line":112,"column":4},"end":{"line":115,"column":5}},"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":115,"column":5}},{"start":{},"end":{}}],"line":112},"14":{"loc":{"start":{"line":113,"column":35},"end":{"line":113,"column":67}},"type":"binary-expr","locations":[{"start":{"line":113,"column":35},"end":{"line":113,"column":61}},{"start":{"line":113,"column":65},"end":{"line":113,"column":67}}],"line":113},"15":{"loc":{"start":{"line":122,"column":4},"end":{"line":124,"column":5}},"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":124,"column":5}},{"start":{},"end":{}}],"line":122},"16":{"loc":{"start":{"line":125,"column":17},"end":{"line":125,"column":84}},"type":"binary-expr","locations":[{"start":{"line":125,"column":17},"end":{"line":125,"column":79}},{"start":{"line":125,"column":83},"end":{"line":125,"column":84}}],"line":125},"17":{"loc":{"start":{"line":133,"column":4},"end":{"line":136,"column":5}},"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":136,"column":5}},{"start":{},"end":{}}],"line":133}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":1},"f":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"0":[0,1],"1":[0,1],"2":[1,0],"3":[1,1],"4":[0,1],"5":[0,1],"6":[1,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/defined-names.service.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IUnitRange, Nullable, Workbook, Worksheet } from '@univerjs/core';\nimport type { Observable } from 'rxjs';\nimport { createIdentifier, Disposable, IUniverInstanceService } from '@univerjs/core';\nimport { Subject } from 'rxjs';\nimport { handleRefStringInfo, serializeRange } from '../engine/utils/reference';\n\nexport interface IDefinedNamesServiceParam {\n    id: string;\n    name: string;\n    formulaOrRefString: string;\n    comment?: string;\n    localSheetId?: string;\n    hidden?: boolean;\n\n}\n\nexport interface IDefinedNamesServiceFocusParam extends IDefinedNamesServiceParam {\n    unitId: string;\n}\n\nexport interface IDefinedNameMap {\n    [unitId: string]: IDefinedNameMapItem;\n}\n\nexport interface IDefinedNameMapItem {\n    [id: string]: IDefinedNamesServiceParam;\n}\n\nexport interface IDefinedNamesService {\n    registerDefinedName(unitId: string, param: IDefinedNamesServiceParam): void;\n\n    registerDefinedNames(unitId: string, params: IDefinedNameMapItem): void;\n\n    getDefinedNameMap(unitId: string): Nullable<IDefinedNameMapItem>;\n\n    getValueByName(unitId: string, name: string): Nullable<IDefinedNamesServiceParam>;\n\n    getValueById(unitId: string, id: string): Nullable<IDefinedNamesServiceParam>;\n\n    removeDefinedName(unitId: string, name: string): void;\n\n    removeUnitDefinedName(unitId: string): void;\n\n    hasDefinedName(unitId: string): boolean;\n\n    setCurrentRange(range: IUnitRange): void;\n\n    getCurrentRange(): IUnitRange;\n\n    getCurrentRangeForString(): string;\n\n    currentRange$: Observable<IUnitRange>;\n\n    update$: Observable<unknown>;\n\n    focusRange$: Observable<IDefinedNamesServiceFocusParam>;\n\n    focusRange(unitId: string, id: string): void;\n\n    getWorksheetByRef(unitId: string, ref: string): Nullable<Worksheet>;\n\n}\nexport class DefinedNamesService extends Disposable implements IDefinedNamesService {\n    // 18.2.6 definedNames (Defined Names)\n    private _definedNameMap: IDefinedNameMap = {};\n    private _nameCacheMap: { [unitId: string]: { [name: string]: IDefinedNamesServiceParam } } = {}; // Cache for name-to-definition mapping\n\n    private readonly _update$ = new Subject();\n    readonly update$ = this._update$.asObservable();\n\n    private _currentRange: IUnitRange = {\n        unitId: '',\n        sheetId: '',\n        range: {\n            startRow: 0,\n            endRow: 0,\n            startColumn: 0,\n            endColumn: 0,\n        },\n    };\n\n    private readonly _currentRange$ = new Subject<IUnitRange>();\n    readonly currentRange$ = this._currentRange$.asObservable();\n\n    private readonly _focusRange$ = new Subject<IDefinedNamesServiceFocusParam>();\n    readonly focusRange$ = this._focusRange$.asObservable();\n\n    constructor(@IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService) {\n        super();\n    }\n\n    override dispose(): void {\n        super.dispose();\n        this._definedNameMap = {};\n        this._nameCacheMap = {};\n        this._update$.complete();\n        this._currentRange$.complete();\n        this._focusRange$.complete();\n    }\n\n    getWorksheetByRef(unitId: string, ref: string) {\n        const { sheetName } = handleRefStringInfo(ref);\n        return this._univerInstanceService.getUnit<Workbook>(unitId)?.getSheetBySheetName(sheetName);\n    }\n\n    focusRange(unitId: string, id: string) {\n        const item = this.getValueById(unitId, id);\n        if (item === undefined) {\n            return;\n        }\n\n        this._focusRange$.next({ ...item, unitId });\n    }\n\n    setCurrentRange(range: IUnitRange) {\n        this._currentRange = range;\n        this._currentRange$.next(range);\n    }\n\n    getCurrentRange() {\n        return this._currentRange;\n    }\n\n    getCurrentRangeForString() {\n        return serializeRange(this._currentRange.range);\n    }\n\n    registerDefinedNames(unitId: string, params: IDefinedNameMapItem) {\n        this._definedNameMap[unitId] = params;\n        this._updateCache(unitId);\n        this._update();\n    }\n\n    registerDefinedName(unitId: string, param: IDefinedNamesServiceParam) {\n        const unitMap = this._definedNameMap[unitId];\n\n        if (unitMap === undefined) {\n            this._definedNameMap[unitId] = {};\n        }\n        this._definedNameMap[unitId][param.id] = param;\n\n        this._updateCache(unitId);\n        this._update();\n    }\n\n    removeDefinedName(unitId: string, id: string) {\n        delete this._definedNameMap[unitId]?.[id];\n        this._updateCache(unitId);\n        this._update();\n    }\n\n    removeUnitDefinedName(unitId: string) {\n        delete this._definedNameMap[unitId];\n        this._updateCache(unitId);\n        this._update();\n    }\n\n    getDefinedNameMap(unitId: string) {\n        return this._definedNameMap[unitId];\n    }\n\n    getValueByName(unitId: string, name: string) {\n        // Check cache first\n        const cachedMap = this._nameCacheMap[unitId];\n        if (cachedMap) {\n            return cachedMap[name] || null;\n        }\n\n        // If not in cache, traverse the nameMap\n        const nameMap = this._definedNameMap[unitId];\n        if (nameMap === undefined) {\n            return null;\n        }\n\n        let result = null;\n        for (const item of Object.values(nameMap)) {\n            if (item.name === name) {\n                result = item;\n                break;\n            }\n        }\n\n        // Cache the result if found\n        if (result) {\n            this._nameCacheMap[unitId] = this._nameCacheMap[unitId] || {};\n            this._nameCacheMap[unitId][name] = result;\n        }\n\n        return result;\n    }\n\n    getValueById(unitId: string, id: string) {\n        return this._definedNameMap[unitId]?.[id];\n    }\n\n    hasDefinedName(unitId: string) {\n        if (this._definedNameMap[unitId] === undefined) {\n            return false;\n        }\n        const size = Array.from(Object.values(this._definedNameMap[unitId])).length || 0;\n        return size !== 0;\n    }\n\n    private _update() {\n        this._update$.next(null);\n    }\n\n    private _updateCache(unitId: string) {\n        const nameMap = this._definedNameMap[unitId];\n        if (nameMap === undefined) {\n            delete this._nameCacheMap[unitId];\n            return;\n        }\n\n        this._nameCacheMap[unitId] = {};\n\n        // Cache all name mappings for this unitId\n        for (const item of Object.values(nameMap)) {\n            this._nameCacheMap[unitId][item.name] = item;\n        }\n    }\n}\n\nexport const IDefinedNamesService = createIdentifier<DefinedNamesService>('univer.formula.defined-names.service');\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3ce9af445243eee5fe1eda6d80643e19f019f8bc"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/sequence.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/sequence.ts","statementMap":{"0":{"start":{"line":1,"column":46},"end":{"line":10,"column":26}},"1":{"start":{"line":2,"column":2},"end":{"line":2,"column":64}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":64}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":64}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":68}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":70}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":62}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":76}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":27}},"9":{"start":{"line":12,"column":23},"end":{"line":12,"column":25}},"10":{"start":{"line":13,"column":2},"end":{"line":19,"column":3}},"11":{"start":{"line":14,"column":4},"end":{"line":18,"column":5}},"12":{"start":{"line":15,"column":6},"end":{"line":15,"column":29}},"13":{"start":{"line":17,"column":6},"end":{"line":17,"column":35}},"14":{"start":{"line":20,"column":2},"end":{"line":20,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":47},"end":{"line":1,"column":48}},"loc":{"start":{"line":1,"column":70},"end":{"line":10,"column":1}},"line":1},"1":{"name":"generateStringWithSequence","decl":{"start":{"line":11,"column":16},"end":{"line":11,"column":42}},"loc":{"start":{"line":11,"column":61},"end":{"line":21,"column":1}},"line":11}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":3},"end":{"line":10,"column":25}},"type":"binary-expr","locations":[{"start":{"line":10,"column":3},"end":{"line":10,"column":19}},{"start":{"line":10,"column":23},"end":{"line":10,"column":25}}],"line":10},"1":{"loc":{"start":{"line":14,"column":4},"end":{"line":18,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":18,"column":5}},{"start":{"line":16,"column":11},"end":{"line":18,"column":5}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"f":{"0":1,"1":0},"b":{"0":[1,1],"1":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/sequence.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { LexerNode } from '../analysis/lexer-node';\n\nexport enum sequenceNodeType {\n    NORMAL,\n    NUMBER,\n    STRING,\n    FUNCTION,\n    REFERENCE,\n    ARRAY,\n    DEFINED_NAME,\n}\n\nexport interface ISequenceNode {\n    nodeType: sequenceNodeType;\n    token: string;\n    startIndex: number;\n    endIndex: number;\n}\n\nexport interface ISequenceArray {\n    segment: string;\n    currentString: string;\n    cur: number;\n    currentLexerNode: LexerNode;\n}\n\n/**\n * Deserialize Sequence to text.\n * @param newSequenceNodes\n * @returns\n */\nexport function generateStringWithSequence(newSequenceNodes: Array<string | ISequenceNode>) {\n    let sequenceString = '';\n    for (const node of newSequenceNodes) {\n        if (typeof node === 'string') {\n            sequenceString += node;\n        } else {\n            sequenceString += node.token;\n        }\n    }\n    return sequenceString;\n}\n"],"mappings":"AAkBO,WAAK,mBAAL,kBAAKA,sBAAL;AACH,EAAAA,oCAAA;AACA,EAAAA,oCAAA;AACA,EAAAA,oCAAA;AACA,EAAAA,oCAAA;AACA,EAAAA,oCAAA;AACA,EAAAA,oCAAA;AACA,EAAAA,oCAAA;AAPQ,SAAAA;AAAA,GAAA;AA6BL,gBAAS,2BAA2B,kBAAiD;AACxF,MAAI,iBAAiB;AACrB,aAAW,QAAQ,kBAAkB;AACjC,QAAI,OAAO,SAAS,UAAU;AAC1B,wBAAkB;AAAA,IACtB,OAAO;AACH,wBAAkB,KAAK;AAAA,IAC3B;AAAA,EACJ;AACA,SAAO;AACX;","names":["sequenceNodeType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2475ab13341c33fd91f2c502c3db8a015d702160"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/runtime.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/runtime.ts","statementMap":{"0":{"start":{"line":3,"column":31},"end":{"line":3,"column":33}},"1":{"start":{"line":4,"column":2},"end":{"line":16,"column":5}},"2":{"start":{"line":5,"column":22},"end":{"line":5,"column":38}},"3":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"4":{"start":{"line":7,"column":6},"end":{"line":7,"column":18}},"5":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"6":{"start":{"line":10,"column":6},"end":{"line":10,"column":40}},"7":{"start":{"line":12,"column":4},"end":{"line":15,"column":7}},"8":{"start":{"line":13,"column":23},"end":{"line":13,"column":41}},"9":{"start":{"line":14,"column":6},"end":{"line":14,"column":73}},"10":{"start":{"line":17,"column":2},"end":{"line":17,"column":30}},"11":{"start":{"line":20,"column":28},"end":{"line":20,"column":30}},"12":{"start":{"line":21,"column":2},"end":{"line":40,"column":3}},"13":{"start":{"line":22,"column":22},"end":{"line":22,"column":38}},"14":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"15":{"start":{"line":24,"column":6},"end":{"line":24,"column":15}},"16":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"17":{"start":{"line":27,"column":6},"end":{"line":27,"column":37}},"18":{"start":{"line":29,"column":4},"end":{"line":39,"column":5}},"19":{"start":{"line":30,"column":23},"end":{"line":30,"column":41}},"20":{"start":{"line":31,"column":28},"end":{"line":31,"column":30}},"21":{"start":{"line":32,"column":6},"end":{"line":37,"column":9}},"22":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"23":{"start":{"line":34,"column":10},"end":{"line":34,"column":34}},"24":{"start":{"line":36,"column":8},"end":{"line":36,"column":43}},"25":{"start":{"line":38,"column":6},"end":{"line":38,"column":57}},"26":{"start":{"line":41,"column":2},"end":{"line":41,"column":27}}},"fnMap":{"0":{"name":"convertUnitDataToRuntime","decl":{"start":{"line":2,"column":16},"end":{"line":2,"column":40}},"loc":{"start":{"line":2,"column":51},"end":{"line":18,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":32},"end":{"line":4,"column":33}},"loc":{"start":{"line":4,"column":44},"end":{"line":16,"column":3}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":35},"end":{"line":12,"column":36}},"loc":{"start":{"line":12,"column":48},"end":{"line":15,"column":5}},"line":12},"3":{"name":"convertRuntimeToUnitData","decl":{"start":{"line":19,"column":16},"end":{"line":19,"column":40}},"loc":{"start":{"line":19,"column":51},"end":{"line":42,"column":1}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":32,"column":24},"end":{"line":32,"column":25}},"loc":{"start":{"line":32,"column":48},"end":{"line":37,"column":7}},"line":32}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},{"start":{},"end":{}}],"line":6},"1":{"loc":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},{"start":{},"end":{}}],"line":9},"2":{"loc":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},{"start":{},"end":{}}],"line":23},"3":{"loc":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},{"start":{},"end":{}}],"line":26},"4":{"loc":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},{"start":{},"end":{}}],"line":33}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/runtime.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, IObjectMatrixPrimitiveType, Nullable } from '@univerjs/core';\nimport type { IArrayFormulaUnitCellType, IRuntimeUnitDataPrimitiveType, IRuntimeUnitDataType } from './common';\n\nimport { ObjectMatrix } from '@univerjs/core';\n\nexport function convertUnitDataToRuntime(unitData: IArrayFormulaUnitCellType) {\n    const arrayFormulaCellData: IRuntimeUnitDataType = {};\n    Object.keys(unitData).forEach((unitId) => {\n        const sheetData = unitData[unitId];\n\n        if (sheetData == null) {\n            return true;\n        }\n\n        if (arrayFormulaCellData[unitId] == null) {\n            arrayFormulaCellData[unitId] = {};\n        }\n\n        Object.keys(sheetData).forEach((sheetId) => {\n            const cellData = sheetData[sheetId];\n\n            arrayFormulaCellData[unitId]![sheetId] = new ObjectMatrix(cellData);\n        });\n    });\n\n    return arrayFormulaCellData;\n}\n\nexport function convertRuntimeToUnitData(unitData: IRuntimeUnitDataType) {\n    const unitPrimitiveData: IRuntimeUnitDataPrimitiveType = {};\n\n    for (const unitId in unitData) {\n        const sheetData = unitData[unitId];\n        if (sheetData == null) {\n            continue;\n        }\n\n        if (unitPrimitiveData[unitId] == null) {\n            unitPrimitiveData[unitId] = {};\n        }\n\n        for (const sheetId in sheetData) {\n            const cellData = sheetData[sheetId];\n            const primitiveData: IObjectMatrixPrimitiveType<Nullable<ICellData>> = {};\n\n            cellData.forValue((row, column, value) => {\n                if (primitiveData[row] === undefined) {\n                    primitiveData[row] = {};\n                }\n\n                primitiveData[row][column] = value;\n            });\n\n            unitPrimitiveData[unitId][sheetId] = primitiveData;\n        }\n    }\n\n    return unitPrimitiveData;\n}\n"],"mappings":"AAmBA,SAAS,oBAAoB;AAEtB,gBAAS,yBAAyB,UAAqC;AAC1E,QAAM,uBAA6C,CAAC;AACpD,SAAO,KAAK,QAAQ,EAAE,QAAQ,CAAC,WAAW;AACtC,UAAM,YAAY,SAAS,MAAM;AAEjC,QAAI,aAAa,MAAM;AACnB,aAAO;AAAA,IACX;AAEA,QAAI,qBAAqB,MAAM,KAAK,MAAM;AACtC,2BAAqB,MAAM,IAAI,CAAC;AAAA,IACpC;AAEA,WAAO,KAAK,SAAS,EAAE,QAAQ,CAAC,YAAY;AACxC,YAAM,WAAW,UAAU,OAAO;AAElC,2BAAqB,MAAM,EAAG,OAAO,IAAI,IAAI,aAAa,QAAQ;AAAA,IACtE,CAAC;AAAA,EACL,CAAC;AAED,SAAO;AACX;AAEO,gBAAS,yBAAyB,UAAgC;AACrE,QAAM,oBAAmD,CAAC;AAE1D,aAAW,UAAU,UAAU;AAC3B,UAAM,YAAY,SAAS,MAAM;AACjC,QAAI,aAAa,MAAM;AACnB;AAAA,IACJ;AAEA,QAAI,kBAAkB,MAAM,KAAK,MAAM;AACnC,wBAAkB,MAAM,IAAI,CAAC;AAAA,IACjC;AAEA,eAAW,WAAW,WAAW;AAC7B,YAAM,WAAW,UAAU,OAAO;AAClC,YAAM,gBAAiE,CAAC;AAExE,eAAS,SAAS,CAAC,KAAK,QAAQ,UAAU;AACtC,YAAI,cAAc,GAAG,MAAM,QAAW;AAClC,wBAAc,GAAG,IAAI,CAAC;AAAA,QAC1B;AAEA,sBAAc,GAAG,EAAE,MAAM,IAAI;AAAA,MACjC,CAAC;AAED,wBAAkB,MAAM,EAAE,OAAO,IAAI;AAAA,IACzC;AAAA,EACJ;AAEA,SAAO;AACX;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fe331447e17e83f4c71065482635320bf42bd906"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/token-type.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/token-type.ts","statementMap":{"0":{"start":{"line":1,"column":44},"end":{"line":1,"column":49}},"1":{"start":{"line":2,"column":39},"end":{"line":2,"column":44}},"2":{"start":{"line":3,"column":51},"end":{"line":3,"column":56}},"3":{"start":{"line":4,"column":59},"end":{"line":4,"column":65}},"4":{"start":{"line":5,"column":56},"end":{"line":5,"column":62}},"5":{"start":{"line":6,"column":47},"end":{"line":6,"column":52}},"6":{"start":{"line":7,"column":50},"end":{"line":7,"column":58}},"7":{"start":{"line":8,"column":48},"end":{"line":8,"column":54}},"8":{"start":{"line":9,"column":66},"end":{"line":9,"column":114}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/token-type.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_TOKEN_TYPE_PARAMETER = 'P_1';\n\nexport const DEFAULT_TOKEN_TYPE_ROOT = 'R_1';\n\nexport const DEFAULT_TOKEN_TYPE_LAMBDA_PARAMETER = 'L_1';\n\nexport const DEFAULT_TOKEN_TYPE_LAMBDA_RUNTIME_PARAMETER = 'LR_1';\n\nexport const DEFAULT_TOKEN_TYPE_LAMBDA_OMIT_PARAMETER = 'LO_1';\n\nexport const DEFAULT_TOKEN_LET_FUNCTION_NAME = 'LET';\n\nexport const DEFAULT_TOKEN_LAMBDA_FUNCTION_NAME = 'LAMBDA';\n\nexport const DEFAULT_TOKEN_CUBE_FUNCTION_NAME = 'CUBE';\n\nexport const FORCED_RECALCULATION_FUNCTION_NAME = new Set<string>(['RAND', 'RANDBETWEEN', 'NOW', 'TODAY']);\n"],"mappings":"AAgBO,aAAM,+BAA+B;AAErC,aAAM,0BAA0B;AAEhC,aAAM,sCAAsC;AAE5C,aAAM,8CAA8C;AAEpD,aAAM,2CAA2C;AAEjD,aAAM,kCAAkC;AAExC,aAAM,qCAAqC;AAE3C,aAAM,mCAAmC;AAEzC,aAAM,qCAAqC,oBAAI,IAAY,CAAC,QAAQ,eAAe,OAAO,OAAO,CAAC;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fa55834523dd5319df1c1c0cbb2dfb67962fb62c"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/reference-cache.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/reference-cache.ts","statementMap":{"0":{"start":{"line":3,"column":30},"end":{"line":3,"column":52}},"1":{"start":{"line":5,"column":19},"end":{"line":5,"column":55}},"2":{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},"3":{"start":{"line":7,"column":4},"end":{"line":7,"column":20}},"4":{"start":{"line":9,"column":17},"end":{"line":9,"column":53}},"5":{"start":{"line":10,"column":2},"end":{"line":10,"column":47}},"6":{"start":{"line":11,"column":2},"end":{"line":11,"column":46}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":32}}},"fnMap":{"0":{"name":"deserializeRangeWithSheetWithCache","decl":{"start":{"line":4,"column":16},"end":{"line":4,"column":50}},"loc":{"start":{"line":4,"column":62},"end":{"line":13,"column":1}},"line":4},"1":{"name":"clearReferenceToRangeCache","decl":{"start":{"line":14,"column":16},"end":{"line":14,"column":42}},"loc":{"start":{"line":14,"column":45},"end":{"line":16,"column":1}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},{"start":{},"end":{}}],"line":6}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"f":{"0":0,"1":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/reference-cache.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IUnitRangeName } from '@univerjs/core';\nimport { FormulaAstLRU } from '../../basics/cache-lru';\nimport { deserializeRangeWithSheet } from './reference';\n\nconst referenceToRangeCache = new FormulaAstLRU<IUnitRangeName>(100000);\nexport function deserializeRangeWithSheetWithCache(refString: string): IUnitRangeName {\n    const refCache = referenceToRangeCache.get(refString);\n    if (refCache) {\n        return refCache;\n    }\n\n    const result = deserializeRangeWithSheet(refString);\n\n    referenceToRangeCache.set(refString, result);\n\n    return deserializeRangeWithSheet(refString); ;\n}\n\nexport function clearReferenceToRangeCache() {\n    referenceToRangeCache.clear();\n}\n"],"mappings":"AAiBA,SAAS,qBAAqB;AAC9B,SAAS,iCAAiC;AAE1C,MAAM,wBAAwB,IAAI,cAA8B,GAAM;AAC/D,gBAAS,mCAAmC,WAAmC;AAClF,QAAM,WAAW,sBAAsB,IAAI,SAAS;AACpD,MAAI,UAAU;AACV,WAAO;AAAA,EACX;AAEA,QAAM,SAAS,0BAA0B,SAAS;AAElD,wBAAsB,IAAI,WAAW,MAAM;AAE3C,SAAO,0BAA0B,SAAS;AAAG;AACjD;AAEO,gBAAS,6BAA6B;AACzC,wBAAsB,MAAM;AAChC;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"073d228c379098520908b47fa0b7293bf8856d4f"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/analysis/lexer-node.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/analysis/lexer-node.ts","statementMap":{"0":{"start":{"line":4,"column":11},"end":{"line":4,"column":34}},"1":{"start":{"line":5,"column":14},"end":{"line":5,"column":16}},"2":{"start":{"line":8,"column":21},"end":{"line":8,"column":23}},"3":{"start":{"line":9,"column":16},"end":{"line":9,"column":18}},"4":{"start":{"line":10,"column":14},"end":{"line":10,"column":16}},"5":{"start":{"line":11,"column":18},"end":{"line":11,"column":20}},"6":{"start":{"line":13,"column":4},"end":{"line":17,"column":7}},"7":{"start":{"line":14,"column":6},"end":{"line":16,"column":7}},"8":{"start":{"line":15,"column":8},"end":{"line":15,"column":23}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":48}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":46}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":24}},"12":{"start":{"line":21,"column":4},"end":{"line":21,"column":24}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":28}},"14":{"start":{"line":25,"column":4},"end":{"line":25,"column":30}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":28}},"16":{"start":{"line":31,"column":4},"end":{"line":31,"column":26}},"17":{"start":{"line":34,"column":4},"end":{"line":34,"column":30}},"18":{"start":{"line":37,"column":4},"end":{"line":37,"column":46}},"19":{"start":{"line":40,"column":4},"end":{"line":40,"column":58}},"20":{"start":{"line":43,"column":4},"end":{"line":43,"column":33}},"21":{"start":{"line":46,"column":4},"end":{"line":46,"column":44}},"22":{"start":{"line":49,"column":4},"end":{"line":49,"column":24}},"23":{"start":{"line":52,"column":4},"end":{"line":52,"column":29}},"24":{"start":{"line":55,"column":4},"end":{"line":55,"column":26}},"25":{"start":{"line":58,"column":4},"end":{"line":58,"column":30}},"26":{"start":{"line":61,"column":4},"end":{"line":61,"column":34}},"27":{"start":{"line":64,"column":4},"end":{"line":64,"column":37}},"28":{"start":{"line":67,"column":4},"end":{"line":67,"column":23}},"29":{"start":{"line":70,"column":4},"end":{"line":70,"column":24}},"30":{"start":{"line":73,"column":4},"end":{"line":73,"column":26}},"31":{"start":{"line":74,"column":4},"end":{"line":74,"column":24}},"32":{"start":{"line":77,"column":4},"end":{"line":77,"column":38}},"33":{"start":{"line":80,"column":4},"end":{"line":80,"column":41}},"34":{"start":{"line":83,"column":14},"end":{"line":83,"column":47}},"35":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"36":{"start":{"line":85,"column":6},"end":{"line":85,"column":13}},"37":{"start":{"line":87,"column":4},"end":{"line":87,"column":50}},"38":{"start":{"line":88,"column":4},"end":{"line":88,"column":33}},"39":{"start":{"line":91,"column":23},"end":{"line":91,"column":39}},"40":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"41":{"start":{"line":93,"column":6},"end":{"line":93,"column":35}},"42":{"start":{"line":95,"column":4},"end":{"line":95,"column":39}},"43":{"start":{"line":96,"column":25},"end":{"line":96,"column":57}},"44":{"start":{"line":97,"column":4},"end":{"line":97,"column":28}},"45":{"start":{"line":100,"column":14},"end":{"line":100,"column":47}},"46":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"47":{"start":{"line":102,"column":6},"end":{"line":102,"column":13}},"48":{"start":{"line":104,"column":4},"end":{"line":104,"column":36}},"49":{"start":{"line":107,"column":18},"end":{"line":107,"column":33}},"50":{"start":{"line":108,"column":21},"end":{"line":108,"column":39}},"51":{"start":{"line":109,"column":34},"end":{"line":109,"column":36}},"52":{"start":{"line":110,"column":26},"end":{"line":110,"column":41}},"53":{"start":{"line":111,"column":4},"end":{"line":118,"column":5}},"54":{"start":{"line":111,"column":17},"end":{"line":111,"column":18}},"55":{"start":{"line":112,"column":19},"end":{"line":112,"column":30}},"56":{"start":{"line":113,"column":6},"end":{"line":117,"column":7}},"57":{"start":{"line":114,"column":8},"end":{"line":114,"column":53}},"58":{"start":{"line":116,"column":8},"end":{"line":116,"column":41}},"59":{"start":{"line":119,"column":4},"end":{"line":124,"column":6}},"60":{"start":{"line":127,"column":25},"end":{"line":127,"column":43}},"61":{"start":{"line":128,"column":26},"end":{"line":128,"column":45}},"62":{"start":{"line":129,"column":4},"end":{"line":134,"column":5}},"63":{"start":{"line":129,"column":17},"end":{"line":129,"column":18}},"64":{"start":{"line":130,"column":20},"end":{"line":130,"column":35}},"65":{"start":{"line":131,"column":6},"end":{"line":133,"column":7}},"66":{"start":{"line":132,"column":8},"end":{"line":132,"column":17}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":2},"end":{"line":12,"column":3}},"loc":{"start":{"line":12,"column":12},"end":{"line":23,"column":3}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":27},"end":{"line":13,"column":28}},"loc":{"start":{"line":13,"column":37},"end":{"line":17,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":2},"end":{"line":24,"column":3}},"loc":{"start":{"line":24,"column":20},"end":{"line":26,"column":3}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":2},"end":{"line":27,"column":3}},"loc":{"start":{"line":27,"column":18},"end":{"line":29,"column":3}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":2},"end":{"line":30,"column":3}},"loc":{"start":{"line":30,"column":16},"end":{"line":32,"column":3}},"line":30},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":2},"end":{"line":33,"column":3}},"loc":{"start":{"line":33,"column":24},"end":{"line":35,"column":3}},"line":33},"6":{"name":"(anonymous_6)","decl":{"start":{"line":36,"column":2},"end":{"line":36,"column":3}},"loc":{"start":{"line":36,"column":36},"end":{"line":38,"column":3}},"line":36},"7":{"name":"(anonymous_7)","decl":{"start":{"line":39,"column":2},"end":{"line":39,"column":3}},"loc":{"start":{"line":39,"column":40},"end":{"line":41,"column":3}},"line":39},"8":{"name":"(anonymous_8)","decl":{"start":{"line":42,"column":2},"end":{"line":42,"column":3}},"loc":{"start":{"line":42,"column":23},"end":{"line":44,"column":3}},"line":42},"9":{"name":"(anonymous_9)","decl":{"start":{"line":45,"column":2},"end":{"line":45,"column":3}},"loc":{"start":{"line":45,"column":38},"end":{"line":47,"column":3}},"line":45},"10":{"name":"(anonymous_10)","decl":{"start":{"line":48,"column":2},"end":{"line":48,"column":3}},"loc":{"start":{"line":48,"column":14},"end":{"line":50,"column":3}},"line":48},"11":{"name":"(anonymous_11)","decl":{"start":{"line":51,"column":2},"end":{"line":51,"column":3}},"loc":{"start":{"line":51,"column":23},"end":{"line":53,"column":3}},"line":51},"12":{"name":"(anonymous_12)","decl":{"start":{"line":54,"column":2},"end":{"line":54,"column":3}},"loc":{"start":{"line":54,"column":16},"end":{"line":56,"column":3}},"line":54},"13":{"name":"(anonymous_13)","decl":{"start":{"line":57,"column":2},"end":{"line":57,"column":3}},"loc":{"start":{"line":57,"column":24},"end":{"line":59,"column":3}},"line":57},"14":{"name":"(anonymous_14)","decl":{"start":{"line":60,"column":2},"end":{"line":60,"column":3}},"loc":{"start":{"line":60,"column":24},"end":{"line":62,"column":3}},"line":60},"15":{"name":"(anonymous_15)","decl":{"start":{"line":63,"column":2},"end":{"line":63,"column":3}},"loc":{"start":{"line":63,"column":29},"end":{"line":65,"column":3}},"line":63},"16":{"name":"(anonymous_16)","decl":{"start":{"line":66,"column":2},"end":{"line":66,"column":3}},"loc":{"start":{"line":66,"column":13},"end":{"line":68,"column":3}},"line":66},"17":{"name":"(anonymous_17)","decl":{"start":{"line":69,"column":2},"end":{"line":69,"column":3}},"loc":{"start":{"line":69,"column":18},"end":{"line":71,"column":3}},"line":69},"18":{"name":"(anonymous_18)","decl":{"start":{"line":72,"column":2},"end":{"line":72,"column":3}},"loc":{"start":{"line":72,"column":19},"end":{"line":75,"column":3}},"line":72},"19":{"name":"(anonymous_19)","decl":{"start":{"line":76,"column":2},"end":{"line":76,"column":3}},"loc":{"start":{"line":76,"column":32},"end":{"line":78,"column":3}},"line":76},"20":{"name":"(anonymous_20)","decl":{"start":{"line":79,"column":2},"end":{"line":79,"column":3}},"loc":{"start":{"line":79,"column":20},"end":{"line":81,"column":3}},"line":79},"21":{"name":"(anonymous_21)","decl":{"start":{"line":82,"column":2},"end":{"line":82,"column":3}},"loc":{"start":{"line":82,"column":40},"end":{"line":89,"column":3}},"line":82},"22":{"name":"(anonymous_22)","decl":{"start":{"line":90,"column":2},"end":{"line":90,"column":3}},"loc":{"start":{"line":90,"column":37},"end":{"line":98,"column":3}},"line":90},"23":{"name":"(anonymous_23)","decl":{"start":{"line":99,"column":2},"end":{"line":99,"column":3}},"loc":{"start":{"line":99,"column":25},"end":{"line":105,"column":3}},"line":99},"24":{"name":"(anonymous_24)","decl":{"start":{"line":106,"column":2},"end":{"line":106,"column":3}},"loc":{"start":{"line":106,"column":14},"end":{"line":125,"column":3}},"line":106},"25":{"name":"(anonymous_25)","decl":{"start":{"line":126,"column":2},"end":{"line":126,"column":3}},"loc":{"start":{"line":126,"column":31},"end":{"line":135,"column":3}},"line":126}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":6},"end":{"line":16,"column":7}},"type":"if","locations":[{"start":{"line":14,"column":6},"end":{"line":16,"column":7}},{"start":{},"end":{}}],"line":14},"1":{"loc":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},{"start":{},"end":{}}],"line":84},"2":{"loc":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},{"start":{},"end":{}}],"line":92},"3":{"loc":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},{"start":{},"end":{}}],"line":101},"4":{"loc":{"start":{"line":113,"column":6},"end":{"line":117,"column":7}},"type":"if","locations":[{"start":{"line":113,"column":6},"end":{"line":117,"column":7}},{"start":{"line":115,"column":13},"end":{"line":117,"column":7}}],"line":113},"5":{"loc":{"start":{"line":131,"column":6},"end":{"line":133,"column":7}},"type":"if","locations":[{"start":{"line":131,"column":6},"end":{"line":133,"column":7}},{"start":{},"end":{}}],"line":131}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/analysis/lexer-node.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\n\nimport type { LambdaPrivacyVarType } from '../ast-node/base-ast-node';\nimport { DEFAULT_TOKEN_TYPE_ROOT } from '../../basics/token-type';\n\ninterface LexerNodeJson {\n    token: string;\n    children: Array<LexerNodeJson | string>;\n}\n\nexport class LexerNode {\n    private _parent: Nullable<LexerNode>;\n\n    private _token: string = DEFAULT_TOKEN_TYPE_ROOT;\n\n    private _children: Array<LexerNode | string> = [];\n\n    private _lambdaId: Nullable<string>;\n\n    private _functionDefinitionPrivacyVar: Nullable<LambdaPrivacyVarType>;\n\n    private _lambdaParameter: string = '';\n\n    private _startIndex: number = -1;\n\n    private _endIndex: number = -1;\n\n    private _definedNames: Array<string> = [];\n\n    dispose() {\n        this._children.forEach((node) => {\n            if (!(typeof node === 'string')) {\n                node.dispose();\n            }\n        });\n        this._functionDefinitionPrivacyVar?.clear();\n\n        this._functionDefinitionPrivacyVar = null;\n\n        this._children = [];\n\n        this._parent = null;\n\n        this._definedNames = [];\n    }\n\n    getDefinedNames() {\n        return this._definedNames;\n    }\n\n    getStartIndex() {\n        return this._startIndex;\n    }\n\n    getLambdaId() {\n        return this._lambdaId;\n    }\n\n    setLambdaId(lambdaId: string) {\n        this._lambdaId = lambdaId;\n    }\n\n    getFunctionDefinitionPrivacyVar() {\n        return this._functionDefinitionPrivacyVar;\n    }\n\n    setLambdaPrivacyVar(lambdaPrivacyVar: LambdaPrivacyVarType) {\n        this._functionDefinitionPrivacyVar = lambdaPrivacyVar;\n    }\n\n    getLambdaParameter() {\n        return this._lambdaParameter;\n    }\n\n    setLambdaParameter(lambdaParameter: string) {\n        this._lambdaParameter = lambdaParameter;\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(lexerNode: LexerNode) {\n        this._parent = lexerNode;\n    }\n\n    getChildren() {\n        return this._children;\n    }\n\n    setChildren(children: Array<LexerNode | string>) {\n        this._children = children;\n    }\n\n    addChildren(children: LexerNode | string) {\n        this._children.push(children);\n    }\n\n    addChildrenFirst(children: LexerNode | string) {\n        this._children.unshift(children);\n    }\n\n    getToken() {\n        return this._token;\n    }\n\n    setToken(token: string) {\n        this._token = token;\n    }\n\n    setIndex(st: number, ed: number) {\n        this._startIndex = st;\n        this._endIndex = ed;\n    }\n\n    setDefinedNames(definedNames: Array<string>) {\n        this._definedNames = definedNames;\n    }\n\n    hasDefinedNames() {\n        return this._definedNames.length > 0;\n    }\n\n    replaceChild(lexerNode: LexerNode, newLexerNode: LexerNode) {\n        const i = this._getIndexInParent(lexerNode);\n\n        if (i == null) {\n            return;\n        }\n\n        this.getChildren().splice(i, 1, newLexerNode);\n\n        newLexerNode.setParent(this);\n    }\n\n    changeToParent(newParentLexerNode: LexerNode) {\n        const parentNode = this.getParent();\n        if (parentNode) {\n            parentNode.removeChild(this);\n        }\n        this.setParent(newParentLexerNode);\n        const childrenNode = newParentLexerNode.getChildren();\n        childrenNode.push(this);\n    }\n\n    removeChild(lexerNode: LexerNode) {\n        const i = this._getIndexInParent(lexerNode);\n\n        if (i == null) {\n            return;\n        }\n\n        this.getChildren().splice(i, 1);\n    }\n\n    serialize() {\n        const token = this.getToken();\n        const children = this.getChildren();\n\n        const childrenSerialization: Array<LexerNodeJson | string> = [];\n        const childrenCount = children.length;\n        for (let i = 0; i < childrenCount; i++) {\n            const item = children[i];\n            if (item instanceof LexerNode) {\n                childrenSerialization.push(item.serialize());\n            } else {\n                childrenSerialization.push(item);\n            }\n        }\n        return {\n            token,\n            st: this._startIndex,\n            ed: this._endIndex,\n            children: childrenSerialization,\n        };\n    }\n\n    private _getIndexInParent(lexerNode: LexerNode) {\n        const childrenNode = this.getChildren();\n        const childrenCount = childrenNode.length;\n        for (let i = 0; i < childrenCount; i++) {\n            const child = childrenNode[i];\n            if (child === lexerNode) {\n                return i;\n            }\n        }\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"13def48a378fec79f958939e281c387805382cfa"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/analysis/lexer-tree-builder.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/analysis/lexer-tree-builder.ts","statementMap":{"0":{"start":{"line":26,"column":34},"end":{"line":31,"column":21}},"1":{"start":{"line":27,"column":2},"end":{"line":27,"column":54}},"2":{"start":{"line":28,"column":2},"end":{"line":28,"column":58}},"3":{"start":{"line":29,"column":2},"end":{"line":29,"column":54}},"4":{"start":{"line":30,"column":2},"end":{"line":30,"column":22}},"5":{"start":{"line":32,"column":32},"end":{"line":32,"column":35}},"6":{"start":{"line":33,"column":37},"end":{"line":33,"column":79}},"7":{"start":{"line":34,"column":40},"end":{"line":34,"column":82}},"8":{"start":{"line":36,"column":22},"end":{"line":36,"column":37}},"9":{"start":{"line":37,"column":13},"end":{"line":37,"column":14}},"10":{"start":{"line":38,"column":13},"end":{"line":38,"column":15}},"11":{"start":{"line":39,"column":18},"end":{"line":39,"column":20}},"12":{"start":{"line":41,"column":24},"end":{"line":41,"column":25}},"13":{"start":{"line":42,"column":17},"end":{"line":42,"column":18}},"14":{"start":{"line":44,"column":26},"end":{"line":44,"column":27}},"15":{"start":{"line":46,"column":26},"end":{"line":46,"column":27}},"16":{"start":{"line":48,"column":17},"end":{"line":48,"column":22}},"17":{"start":{"line":50,"column":16},"end":{"line":50,"column":21}},"18":{"start":{"line":52,"column":23},"end":{"line":52,"column":24}},"19":{"start":{"line":53,"column":23},"end":{"line":53,"column":28}},"20":{"start":{"line":56,"column":4},"end":{"line":56,"column":22}},"21":{"start":{"line":57,"column":4},"end":{"line":57,"column":37}},"22":{"start":{"line":58,"column":4},"end":{"line":58,"column":34}},"23":{"start":{"line":59,"column":4},"end":{"line":59,"column":37}},"24":{"start":{"line":62,"column":4},"end":{"line":62,"column":25}},"25":{"start":{"line":65,"column":4},"end":{"line":65,"column":38}},"26":{"start":{"line":68,"column":4},"end":{"line":68,"column":37}},"27":{"start":{"line":71,"column":4},"end":{"line":71,"column":44}},"28":{"start":{"line":74,"column":4},"end":{"line":74,"column":38}},"29":{"start":{"line":77,"column":4},"end":{"line":77,"column":39}},"30":{"start":{"line":80,"column":4},"end":{"line":80,"column":44}},"31":{"start":{"line":83,"column":4},"end":{"line":83,"column":35}},"32":{"start":{"line":86,"column":4},"end":{"line":86,"column":43}},"33":{"start":{"line":89,"column":4},"end":{"line":89,"column":42}},"34":{"start":{"line":92,"column":4},"end":{"line":92,"column":34}},"35":{"start":{"line":95,"column":20},"end":{"line":95,"column":71}},"36":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"37":{"start":{"line":97,"column":6},"end":{"line":97,"column":13}},"38":{"start":{"line":99,"column":22},"end":{"line":99,"column":32}},"39":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"40":{"start":{"line":101,"column":6},"end":{"line":101,"column":13}},"41":{"start":{"line":103,"column":17},"end":{"line":103,"column":38}},"42":{"start":{"line":104,"column":19},"end":{"line":104,"column":28}},"43":{"start":{"line":105,"column":4},"end":{"line":116,"column":5}},"44":{"start":{"line":106,"column":20},"end":{"line":106,"column":37}},"45":{"start":{"line":107,"column":6},"end":{"line":113,"column":7}},"46":{"start":{"line":108,"column":27},"end":{"line":108,"column":65}},"47":{"start":{"line":109,"column":8},"end":{"line":112,"column":10}},"48":{"start":{"line":114,"column":6},"end":{"line":114,"column":24}},"49":{"start":{"line":115,"column":6},"end":{"line":115,"column":34}},"50":{"start":{"line":123,"column":27},"end":{"line":123,"column":28}},"51":{"start":{"line":124,"column":20},"end":{"line":124,"column":44}},"52":{"start":{"line":125,"column":21},"end":{"line":125,"column":45}},"53":{"start":{"line":126,"column":4},"end":{"line":131,"column":5}},"54":{"start":{"line":127,"column":6},"end":{"line":129,"column":7}},"55":{"start":{"line":128,"column":8},"end":{"line":128,"column":27}},"56":{"start":{"line":130,"column":6},"end":{"line":130,"column":46}},"57":{"start":{"line":132,"column":20},"end":{"line":132,"column":87}},"58":{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},"59":{"start":{"line":134,"column":6},"end":{"line":134,"column":15}},"60":{"start":{"line":136,"column":22},"end":{"line":136,"column":32}},"61":{"start":{"line":137,"column":4},"end":{"line":139,"column":5}},"62":{"start":{"line":138,"column":6},"end":{"line":138,"column":15}},"63":{"start":{"line":140,"column":17},"end":{"line":140,"column":38}},"64":{"start":{"line":141,"column":23},"end":{"line":141,"column":24}},"65":{"start":{"line":142,"column":4},"end":{"line":144,"column":5}},"66":{"start":{"line":143,"column":6},"end":{"line":143,"column":21}},"67":{"start":{"line":145,"column":4},"end":{"line":155,"column":5}},"68":{"start":{"line":146,"column":20},"end":{"line":146,"column":37}},"69":{"start":{"line":147,"column":6},"end":{"line":153,"column":7}},"70":{"start":{"line":148,"column":8},"end":{"line":152,"column":9}},"71":{"start":{"line":149,"column":10},"end":{"line":149,"column":28}},"72":{"start":{"line":151,"column":10},"end":{"line":151,"column":29}},"73":{"start":{"line":154,"column":6},"end":{"line":154,"column":34}},"74":{"start":{"line":156,"column":4},"end":{"line":156,"column":24}},"75":{"start":{"line":159,"column":31},"end":{"line":159,"column":74}},"76":{"start":{"line":160,"column":4},"end":{"line":162,"column":5}},"77":{"start":{"line":161,"column":6},"end":{"line":161,"column":37}},"78":{"start":{"line":163,"column":26},"end":{"line":163,"column":63}},"79":{"start":{"line":164,"column":4},"end":{"line":166,"column":5}},"80":{"start":{"line":165,"column":6},"end":{"line":165,"column":13}},"81":{"start":{"line":167,"column":29},"end":{"line":167,"column":64}},"82":{"start":{"line":168,"column":4},"end":{"line":168,"column":71}},"83":{"start":{"line":169,"column":4},"end":{"line":169,"column":28}},"84":{"start":{"line":172,"column":18},"end":{"line":172,"column":58}},"85":{"start":{"line":173,"column":4},"end":{"line":175,"column":5}},"86":{"start":{"line":174,"column":6},"end":{"line":174,"column":27}},"87":{"start":{"line":176,"column":23},"end":{"line":176,"column":25}},"88":{"start":{"line":177,"column":4},"end":{"line":179,"column":5}},"89":{"start":{"line":178,"column":6},"end":{"line":178,"column":42}},"90":{"start":{"line":180,"column":4},"end":{"line":217,"column":5}},"91":{"start":{"line":180,"column":17},"end":{"line":180,"column":18}},"92":{"start":{"line":180,"column":26},"end":{"line":180,"column":38}},"93":{"start":{"line":181,"column":19},"end":{"line":181,"column":27}},"94":{"start":{"line":182,"column":6},"end":{"line":184,"column":7}},"95":{"start":{"line":183,"column":8},"end":{"line":183,"column":17}},"96":{"start":{"line":185,"column":6},"end":{"line":216,"column":7}},"97":{"start":{"line":186,"column":36},"end":{"line":186,"column":40}},"98":{"start":{"line":187,"column":29},"end":{"line":187,"column":70}},"99":{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},"100":{"start":{"line":189,"column":10},"end":{"line":189,"column":19}},"101":{"start":{"line":191,"column":45},"end":{"line":191,"column":57}},"102":{"start":{"line":192,"column":25},"end":{"line":196,"column":9}},"103":{"start":{"line":197,"column":25},"end":{"line":201,"column":10}},"104":{"start":{"line":202,"column":27},"end":{"line":202,"column":57}},"105":{"start":{"line":203,"column":8},"end":{"line":207,"column":10}},"106":{"start":{"line":208,"column":8},"end":{"line":215,"column":9}},"107":{"start":{"line":208,"column":21},"end":{"line":208,"column":26}},"108":{"start":{"line":209,"column":27},"end":{"line":209,"column":35}},"109":{"start":{"line":210,"column":10},"end":{"line":212,"column":11}},"110":{"start":{"line":211,"column":12},"end":{"line":211,"column":21}},"111":{"start":{"line":213,"column":10},"end":{"line":213,"column":44}},"112":{"start":{"line":214,"column":10},"end":{"line":214,"column":42}},"113":{"start":{"line":218,"column":4},"end":{"line":218,"column":65}},"114":{"start":{"line":221,"column":26},"end":{"line":221,"column":66}},"115":{"start":{"line":222,"column":4},"end":{"line":224,"column":5}},"116":{"start":{"line":223,"column":6},"end":{"line":223,"column":27}},"117":{"start":{"line":225,"column":29},"end":{"line":225,"column":31}},"118":{"start":{"line":226,"column":4},"end":{"line":256,"column":5}},"119":{"start":{"line":226,"column":17},"end":{"line":226,"column":18}},"120":{"start":{"line":226,"column":26},"end":{"line":226,"column":46}},"121":{"start":{"line":227,"column":19},"end":{"line":227,"column":35}},"122":{"start":{"line":228,"column":6},"end":{"line":231,"column":7}},"123":{"start":{"line":229,"column":8},"end":{"line":229,"column":36}},"124":{"start":{"line":230,"column":8},"end":{"line":230,"column":17}},"125":{"start":{"line":232,"column":24},"end":{"line":232,"column":28}},"126":{"start":{"line":233,"column":27},"end":{"line":233,"column":68}},"127":{"start":{"line":234,"column":52},"end":{"line":234,"column":64}},"128":{"start":{"line":235,"column":21},"end":{"line":235,"column":39}},"129":{"start":{"line":236,"column":6},"end":{"line":241,"column":7}},"130":{"start":{"line":237,"column":8},"end":{"line":237,"column":36}},"131":{"start":{"line":238,"column":8},"end":{"line":238,"column":17}},"132":{"start":{"line":240,"column":8},"end":{"line":240,"column":87}},"133":{"start":{"line":242,"column":21},"end":{"line":242,"column":23}},"134":{"start":{"line":243,"column":6},"end":{"line":251,"column":7}},"135":{"start":{"line":244,"column":8},"end":{"line":248,"column":11}},"136":{"start":{"line":250,"column":8},"end":{"line":250,"column":33}},"137":{"start":{"line":252,"column":6},"end":{"line":255,"column":9}},"138":{"start":{"line":257,"column":4},"end":{"line":257,"column":62}},"139":{"start":{"line":264,"column":4},"end":{"line":266,"column":5}},"140":{"start":{"line":265,"column":6},"end":{"line":265,"column":18}},"141":{"start":{"line":267,"column":17},"end":{"line":267,"column":56}},"142":{"start":{"line":268,"column":4},"end":{"line":270,"column":5}},"143":{"start":{"line":269,"column":6},"end":{"line":269,"column":18}},"144":{"start":{"line":271,"column":4},"end":{"line":273,"column":5}},"145":{"start":{"line":272,"column":6},"end":{"line":272,"column":18}},"146":{"start":{"line":274,"column":4},"end":{"line":274,"column":17}},"147":{"start":{"line":278,"column":26},"end":{"line":278,"column":28}},"148":{"start":{"line":279,"column":22},"end":{"line":279,"column":27}},"149":{"start":{"line":280,"column":4},"end":{"line":318,"column":5}},"150":{"start":{"line":280,"column":17},"end":{"line":280,"column":18}},"151":{"start":{"line":280,"column":26},"end":{"line":280,"column":46}},"152":{"start":{"line":281,"column":19},"end":{"line":281,"column":35}},"153":{"start":{"line":282,"column":22},"end":{"line":282,"column":42}},"154":{"start":{"line":283,"column":41},"end":{"line":283,"column":45}},"155":{"start":{"line":284,"column":6},"end":{"line":286,"column":7}},"156":{"start":{"line":285,"column":8},"end":{"line":285,"column":27}},"157":{"start":{"line":287,"column":6},"end":{"line":290,"column":7}},"158":{"start":{"line":288,"column":8},"end":{"line":288,"column":42}},"159":{"start":{"line":289,"column":8},"end":{"line":289,"column":17}},"160":{"start":{"line":291,"column":23},"end":{"line":291,"column":45}},"161":{"start":{"line":292,"column":25},"end":{"line":292,"column":46}},"162":{"start":{"line":293,"column":21},"end":{"line":293,"column":26}},"163":{"start":{"line":294,"column":29},"end":{"line":294,"column":34}},"164":{"start":{"line":295,"column":6},"end":{"line":298,"column":7}},"165":{"start":{"line":296,"column":8},"end":{"line":296,"column":36}},"166":{"start":{"line":297,"column":8},"end":{"line":297,"column":22}},"167":{"start":{"line":299,"column":6},"end":{"line":302,"column":7}},"168":{"start":{"line":300,"column":8},"end":{"line":300,"column":42}},"169":{"start":{"line":301,"column":8},"end":{"line":301,"column":17}},"170":{"start":{"line":303,"column":29},"end":{"line":303,"column":46}},"171":{"start":{"line":304,"column":39},"end":{"line":304,"column":77}},"172":{"start":{"line":305,"column":6},"end":{"line":314,"column":7}},"173":{"start":{"line":306,"column":8},"end":{"line":306,"column":28}},"174":{"start":{"line":307,"column":8},"end":{"line":307,"column":128}},"175":{"start":{"line":308,"column":13},"end":{"line":314,"column":7}},"176":{"start":{"line":309,"column":8},"end":{"line":309,"column":131}},"177":{"start":{"line":310,"column":13},"end":{"line":314,"column":7}},"178":{"start":{"line":311,"column":8},"end":{"line":311,"column":128}},"179":{"start":{"line":312,"column":13},"end":{"line":314,"column":7}},"180":{"start":{"line":313,"column":8},"end":{"line":313,"column":130}},"181":{"start":{"line":315,"column":6},"end":{"line":317,"column":7}},"182":{"start":{"line":316,"column":8},"end":{"line":316,"column":42}},"183":{"start":{"line":319,"column":4},"end":{"line":319,"column":59}},"184":{"start":{"line":322,"column":4},"end":{"line":331,"column":6}},"185":{"start":{"line":334,"column":4},"end":{"line":334,"column":57}},"186":{"start":{"line":337,"column":4},"end":{"line":337,"column":105}},"187":{"start":{"line":344,"column":29},"end":{"line":344,"column":31}},"188":{"start":{"line":345,"column":31},"end":{"line":345,"column":51}},"189":{"start":{"line":346,"column":12},"end":{"line":346,"column":13}},"190":{"start":{"line":347,"column":4},"end":{"line":374,"column":5}},"191":{"start":{"line":348,"column":19},"end":{"line":348,"column":35}},"192":{"start":{"line":349,"column":6},"end":{"line":372,"column":7}},"193":{"start":{"line":350,"column":24},"end":{"line":350,"column":44}},"194":{"start":{"line":351,"column":8},"end":{"line":360,"column":9}},"195":{"start":{"line":352,"column":28},"end":{"line":352,"column":64}},"196":{"start":{"line":353,"column":10},"end":{"line":359,"column":11}},"197":{"start":{"line":354,"column":12},"end":{"line":354,"column":54}},"198":{"start":{"line":355,"column":12},"end":{"line":355,"column":34}},"199":{"start":{"line":356,"column":12},"end":{"line":356,"column":44}},"200":{"start":{"line":357,"column":12},"end":{"line":357,"column":16}},"201":{"start":{"line":358,"column":12},"end":{"line":358,"column":21}},"202":{"start":{"line":361,"column":8},"end":{"line":361,"column":36}},"203":{"start":{"line":363,"column":28},"end":{"line":363,"column":48}},"204":{"start":{"line":364,"column":28},"end":{"line":364,"column":48}},"205":{"start":{"line":365,"column":8},"end":{"line":370,"column":9}},"206":{"start":{"line":366,"column":10},"end":{"line":366,"column":53}},"207":{"start":{"line":367,"column":10},"end":{"line":367,"column":56}},"208":{"start":{"line":368,"column":10},"end":{"line":368,"column":47}},"209":{"start":{"line":369,"column":10},"end":{"line":369,"column":17}},"210":{"start":{"line":371,"column":8},"end":{"line":371,"column":36}},"211":{"start":{"line":373,"column":6},"end":{"line":373,"column":10}},"212":{"start":{"line":375,"column":4},"end":{"line":375,"column":58}},"213":{"start":{"line":381,"column":31},"end":{"line":381,"column":33}},"214":{"start":{"line":382,"column":4},"end":{"line":413,"column":5}},"215":{"start":{"line":383,"column":6},"end":{"line":411,"column":7}},"216":{"start":{"line":384,"column":22},"end":{"line":384,"column":32}},"217":{"start":{"line":385,"column":22},"end":{"line":385,"column":59}},"218":{"start":{"line":386,"column":8},"end":{"line":410,"column":9}},"219":{"start":{"line":387,"column":31},"end":{"line":387,"column":39}},"220":{"start":{"line":388,"column":32},"end":{"line":388,"column":40}},"221":{"start":{"line":389,"column":10},"end":{"line":409,"column":11}},"222":{"start":{"line":390,"column":35},"end":{"line":390,"column":54}},"223":{"start":{"line":391,"column":34},"end":{"line":391,"column":49}},"224":{"start":{"line":392,"column":32},"end":{"line":392,"column":68}},"225":{"start":{"line":393,"column":33},"end":{"line":399,"column":13}},"226":{"start":{"line":400,"column":28},"end":{"line":405,"column":13}},"227":{"start":{"line":406,"column":12},"end":{"line":406,"column":50}},"228":{"start":{"line":407,"column":12},"end":{"line":407,"column":45}},"229":{"start":{"line":408,"column":12},"end":{"line":408,"column":21}},"230":{"start":{"line":412,"column":6},"end":{"line":412,"column":36}},"231":{"start":{"line":414,"column":4},"end":{"line":414,"column":30}},"232":{"start":{"line":417,"column":25},"end":{"line":417,"column":61}},"233":{"start":{"line":418,"column":4},"end":{"line":418,"column":82}},"234":{"start":{"line":421,"column":4},"end":{"line":421,"column":42}},"235":{"start":{"line":424,"column":4},"end":{"line":430,"column":5}},"236":{"start":{"line":425,"column":24},"end":{"line":425,"column":64}},"237":{"start":{"line":426,"column":43},"end":{"line":426,"column":82}},"238":{"start":{"line":427,"column":6},"end":{"line":429,"column":7}},"239":{"start":{"line":428,"column":8},"end":{"line":428,"column":25}},"240":{"start":{"line":431,"column":4},"end":{"line":431,"column":34}},"241":{"start":{"line":432,"column":4},"end":{"line":432,"column":61}},"242":{"start":{"line":433,"column":26},"end":{"line":433,"column":28}},"243":{"start":{"line":434,"column":16},"end":{"line":434,"column":61}},"244":{"start":{"line":435,"column":4},"end":{"line":437,"column":5}},"245":{"start":{"line":436,"column":6},"end":{"line":436,"column":19}},"246":{"start":{"line":438,"column":32},"end":{"line":438,"column":37}},"247":{"start":{"line":439,"column":32},"end":{"line":439,"column":34}},"248":{"start":{"line":440,"column":30},"end":{"line":440,"column":32}},"249":{"start":{"line":441,"column":4},"end":{"line":446,"column":5}},"250":{"start":{"line":442,"column":63},"end":{"line":442,"column":95}},"251":{"start":{"line":443,"column":6},"end":{"line":443,"column":45}},"252":{"start":{"line":444,"column":6},"end":{"line":444,"column":45}},"253":{"start":{"line":445,"column":6},"end":{"line":445,"column":41}},"254":{"start":{"line":447,"column":4},"end":{"line":454,"column":5}},"255":{"start":{"line":448,"column":6},"end":{"line":448,"column":36}},"256":{"start":{"line":449,"column":6},"end":{"line":449,"column":63}},"257":{"start":{"line":450,"column":6},"end":{"line":450,"column":59}},"258":{"start":{"line":451,"column":6},"end":{"line":453,"column":7}},"259":{"start":{"line":452,"column":8},"end":{"line":452,"column":21}},"260":{"start":{"line":455,"column":17},"end":{"line":455,"column":57}},"261":{"start":{"line":456,"column":4},"end":{"line":458,"column":5}},"262":{"start":{"line":457,"column":6},"end":{"line":457,"column":36}},"263":{"start":{"line":459,"column":4},"end":{"line":465,"column":5}},"264":{"start":{"line":460,"column":22},"end":{"line":460,"column":75}},"265":{"start":{"line":461,"column":6},"end":{"line":463,"column":7}},"266":{"start":{"line":462,"column":8},"end":{"line":462,"column":31}},"267":{"start":{"line":464,"column":6},"end":{"line":464,"column":71}},"268":{"start":{"line":466,"column":4},"end":{"line":468,"column":5}},"269":{"start":{"line":467,"column":6},"end":{"line":467,"column":66}},"270":{"start":{"line":469,"column":4},"end":{"line":469,"column":34}},"271":{"start":{"line":473,"column":21},"end":{"line":473,"column":44}},"272":{"start":{"line":474,"column":4},"end":{"line":476,"column":5}},"273":{"start":{"line":475,"column":6},"end":{"line":475,"column":19}},"274":{"start":{"line":477,"column":26},"end":{"line":477,"column":41}},"275":{"start":{"line":478,"column":22},"end":{"line":478,"column":24}},"276":{"start":{"line":479,"column":24},"end":{"line":479,"column":26}},"277":{"start":{"line":480,"column":23},"end":{"line":480,"column":27}},"278":{"start":{"line":481,"column":4},"end":{"line":526,"column":5}},"279":{"start":{"line":481,"column":17},"end":{"line":481,"column":18}},"280":{"start":{"line":482,"column":19},"end":{"line":482,"column":30}},"281":{"start":{"line":483,"column":6},"end":{"line":525,"column":7}},"282":{"start":{"line":484,"column":21},"end":{"line":484,"column":32}},"283":{"start":{"line":485,"column":8},"end":{"line":487,"column":9}},"284":{"start":{"line":486,"column":10},"end":{"line":486,"column":19}},"285":{"start":{"line":488,"column":8},"end":{"line":521,"column":9}},"286":{"start":{"line":489,"column":10},"end":{"line":491,"column":11}},"287":{"start":{"line":490,"column":12},"end":{"line":490,"column":21}},"288":{"start":{"line":492,"column":10},"end":{"line":494,"column":11}},"289":{"start":{"line":493,"column":12},"end":{"line":493,"column":25}},"290":{"start":{"line":495,"column":10},"end":{"line":510,"column":11}},"291":{"start":{"line":496,"column":31},"end":{"line":496,"column":74}},"292":{"start":{"line":497,"column":12},"end":{"line":499,"column":13}},"293":{"start":{"line":498,"column":14},"end":{"line":498,"column":20}},"294":{"start":{"line":500,"column":39},"end":{"line":500,"column":78}},"295":{"start":{"line":501,"column":33},"end":{"line":501,"column":66}},"296":{"start":{"line":502,"column":12},"end":{"line":504,"column":13}},"297":{"start":{"line":503,"column":14},"end":{"line":503,"column":20}},"298":{"start":{"line":505,"column":12},"end":{"line":509,"column":13}},"299":{"start":{"line":506,"column":14},"end":{"line":506,"column":48}},"300":{"start":{"line":508,"column":14},"end":{"line":508,"column":20}},"301":{"start":{"line":511,"column":10},"end":{"line":511,"column":33}},"302":{"start":{"line":512,"column":15},"end":{"line":521,"column":9}},"303":{"start":{"line":513,"column":10},"end":{"line":513,"column":33}},"304":{"start":{"line":514,"column":15},"end":{"line":521,"column":9}},"305":{"start":{"line":515,"column":10},"end":{"line":515,"column":89}},"306":{"start":{"line":517,"column":10},"end":{"line":519,"column":11}},"307":{"start":{"line":518,"column":12},"end":{"line":518,"column":25}},"308":{"start":{"line":520,"column":10},"end":{"line":520,"column":31}},"309":{"start":{"line":523,"column":8},"end":{"line":523,"column":59}},"310":{"start":{"line":524,"column":8},"end":{"line":524,"column":29}},"311":{"start":{"line":527,"column":4},"end":{"line":529,"column":5}},"312":{"start":{"line":528,"column":6},"end":{"line":528,"column":19}},"313":{"start":{"line":530,"column":4},"end":{"line":530,"column":82}},"314":{"start":{"line":533,"column":28},"end":{"line":533,"column":44}},"315":{"start":{"line":534,"column":26},"end":{"line":534,"column":56}},"316":{"start":{"line":535,"column":4},"end":{"line":541,"column":5}},"317":{"start":{"line":536,"column":21},"end":{"line":536,"column":38}},"318":{"start":{"line":537,"column":6},"end":{"line":539,"column":7}},"319":{"start":{"line":538,"column":8},"end":{"line":538,"column":21}},"320":{"start":{"line":540,"column":6},"end":{"line":540,"column":29}},"321":{"start":{"line":542,"column":4},"end":{"line":542,"column":37}},"322":{"start":{"line":543,"column":4},"end":{"line":543,"column":16}},"323":{"start":{"line":546,"column":4},"end":{"line":548,"column":5}},"324":{"start":{"line":547,"column":6},"end":{"line":547,"column":19}},"325":{"start":{"line":549,"column":4},"end":{"line":551,"column":5}},"326":{"start":{"line":550,"column":6},"end":{"line":550,"column":19}},"327":{"start":{"line":552,"column":4},"end":{"line":562,"column":5}},"328":{"start":{"line":553,"column":25},"end":{"line":553,"column":68}},"329":{"start":{"line":554,"column":6},"end":{"line":556,"column":7}},"330":{"start":{"line":555,"column":8},"end":{"line":555,"column":14}},"331":{"start":{"line":557,"column":6},"end":{"line":560,"column":7}},"332":{"start":{"line":558,"column":8},"end":{"line":558,"column":26}},"333":{"start":{"line":559,"column":8},"end":{"line":559,"column":14}},"334":{"start":{"line":561,"column":6},"end":{"line":561,"column":40}},"335":{"start":{"line":565,"column":4},"end":{"line":565,"column":74}},"336":{"start":{"line":568,"column":4},"end":{"line":568,"column":44}},"337":{"start":{"line":571,"column":4},"end":{"line":573,"column":5}},"338":{"start":{"line":572,"column":6},"end":{"line":572,"column":19}},"339":{"start":{"line":574,"column":4},"end":{"line":576,"column":5}},"340":{"start":{"line":575,"column":6},"end":{"line":575,"column":19}},"341":{"start":{"line":577,"column":4},"end":{"line":577,"column":40}},"342":{"start":{"line":580,"column":4},"end":{"line":582,"column":5}},"343":{"start":{"line":581,"column":6},"end":{"line":581,"column":18}},"344":{"start":{"line":583,"column":4},"end":{"line":588,"column":5}},"345":{"start":{"line":584,"column":22},"end":{"line":584,"column":36}},"346":{"start":{"line":585,"column":6},"end":{"line":587,"column":7}},"347":{"start":{"line":586,"column":8},"end":{"line":586,"column":20}},"348":{"start":{"line":589,"column":4},"end":{"line":589,"column":17}},"349":{"start":{"line":592,"column":4},"end":{"line":592,"column":45}},"350":{"start":{"line":595,"column":4},"end":{"line":595,"column":23}},"351":{"start":{"line":598,"column":4},"end":{"line":598,"column":34}},"352":{"start":{"line":601,"column":4},"end":{"line":601,"column":29}},"353":{"start":{"line":604,"column":4},"end":{"line":604,"column":34}},"354":{"start":{"line":607,"column":4},"end":{"line":607,"column":34}},"355":{"start":{"line":610,"column":25},"end":{"line":610,"column":43}},"356":{"start":{"line":611,"column":4},"end":{"line":611,"column":49}},"357":{"start":{"line":614,"column":25},"end":{"line":614,"column":43}},"358":{"start":{"line":615,"column":4},"end":{"line":615,"column":49}},"359":{"start":{"line":618,"column":4},"end":{"line":618,"column":27}},"360":{"start":{"line":621,"column":4},"end":{"line":621,"column":27}},"361":{"start":{"line":624,"column":4},"end":{"line":624,"column":36}},"362":{"start":{"line":627,"column":4},"end":{"line":627,"column":36}},"363":{"start":{"line":630,"column":4},"end":{"line":630,"column":36}},"364":{"start":{"line":633,"column":4},"end":{"line":633,"column":36}},"365":{"start":{"line":636,"column":4},"end":{"line":636,"column":29}},"366":{"start":{"line":639,"column":4},"end":{"line":639,"column":30}},"367":{"start":{"line":642,"column":4},"end":{"line":642,"column":28}},"368":{"start":{"line":643,"column":4},"end":{"line":643,"column":28}},"369":{"start":{"line":646,"column":4},"end":{"line":646,"column":22}},"370":{"start":{"line":647,"column":4},"end":{"line":647,"column":29}},"371":{"start":{"line":650,"column":4},"end":{"line":650,"column":35}},"372":{"start":{"line":653,"column":4},"end":{"line":653,"column":35}},"373":{"start":{"line":656,"column":4},"end":{"line":656,"column":36}},"374":{"start":{"line":659,"column":4},"end":{"line":659,"column":33}},"375":{"start":{"line":662,"column":4},"end":{"line":662,"column":39}},"376":{"start":{"line":665,"column":21},"end":{"line":665,"column":57}},"377":{"start":{"line":666,"column":4},"end":{"line":671,"column":5}},"378":{"start":{"line":667,"column":23},"end":{"line":667,"column":52}},"379":{"start":{"line":668,"column":6},"end":{"line":670,"column":7}},"380":{"start":{"line":669,"column":8},"end":{"line":669,"column":24}},"381":{"start":{"line":672,"column":4},"end":{"line":672,"column":17}},"382":{"start":{"line":675,"column":21},"end":{"line":675,"column":57}},"383":{"start":{"line":676,"column":4},"end":{"line":679,"column":5}},"384":{"start":{"line":677,"column":23},"end":{"line":677,"column":52}},"385":{"start":{"line":678,"column":6},"end":{"line":678,"column":22}},"386":{"start":{"line":680,"column":4},"end":{"line":680,"column":17}},"387":{"start":{"line":683,"column":19},"end":{"line":683,"column":53}},"388":{"start":{"line":684,"column":4},"end":{"line":687,"column":5}},"389":{"start":{"line":685,"column":6},"end":{"line":685,"column":38}},"390":{"start":{"line":686,"column":6},"end":{"line":686,"column":18}},"391":{"start":{"line":688,"column":4},"end":{"line":688,"column":17}},"392":{"start":{"line":691,"column":19},"end":{"line":691,"column":54}},"393":{"start":{"line":692,"column":16},"end":{"line":692,"column":21}},"394":{"start":{"line":693,"column":4},"end":{"line":709,"column":5}},"395":{"start":{"line":694,"column":6},"end":{"line":700,"column":7}},"396":{"start":{"line":695,"column":21},"end":{"line":695,"column":81}},"397":{"start":{"line":696,"column":8},"end":{"line":698,"column":9}},"398":{"start":{"line":697,"column":10},"end":{"line":697,"column":40}},"399":{"start":{"line":699,"column":8},"end":{"line":699,"column":21}},"400":{"start":{"line":702,"column":6},"end":{"line":708,"column":7}},"401":{"start":{"line":703,"column":21},"end":{"line":703,"column":68}},"402":{"start":{"line":704,"column":8},"end":{"line":706,"column":9}},"403":{"start":{"line":705,"column":10},"end":{"line":705,"column":40}},"404":{"start":{"line":707,"column":8},"end":{"line":707,"column":21}},"405":{"start":{"line":710,"column":4},"end":{"line":720,"column":5}},"406":{"start":{"line":710,"column":17},"end":{"line":710,"column":18}},"407":{"start":{"line":711,"column":19},"end":{"line":711,"column":54}},"408":{"start":{"line":712,"column":6},"end":{"line":714,"column":7}},"409":{"start":{"line":713,"column":8},"end":{"line":713,"column":38}},"410":{"start":{"line":715,"column":6},"end":{"line":719,"column":7}},"411":{"start":{"line":716,"column":8},"end":{"line":716,"column":21}},"412":{"start":{"line":718,"column":8},"end":{"line":718,"column":22}},"413":{"start":{"line":721,"column":4},"end":{"line":721,"column":17}},"414":{"start":{"line":724,"column":4},"end":{"line":724,"column":39}},"415":{"start":{"line":727,"column":4},"end":{"line":727,"column":27}},"416":{"start":{"line":730,"column":16},"end":{"line":730,"column":24}},"417":{"start":{"line":731,"column":4},"end":{"line":744,"column":5}},"418":{"start":{"line":732,"column":23},"end":{"line":732,"column":59}},"419":{"start":{"line":733,"column":6},"end":{"line":738,"column":7}},"420":{"start":{"line":734,"column":33},"end":{"line":734,"column":48}},"421":{"start":{"line":735,"column":8},"end":{"line":735,"column":41}},"422":{"start":{"line":736,"column":8},"end":{"line":736,"column":59}},"423":{"start":{"line":737,"column":8},"end":{"line":737,"column":33}},"424":{"start":{"line":739,"column":6},"end":{"line":743,"column":7}},"425":{"start":{"line":740,"column":8},"end":{"line":740,"column":32}},"426":{"start":{"line":742,"column":8},"end":{"line":742,"column":29}},"427":{"start":{"line":745,"column":4},"end":{"line":748,"column":5}},"428":{"start":{"line":746,"column":6},"end":{"line":746,"column":42}},"429":{"start":{"line":747,"column":6},"end":{"line":747,"column":25}},"430":{"start":{"line":751,"column":4},"end":{"line":751,"column":54}},"431":{"start":{"line":752,"column":4},"end":{"line":752,"column":51}},"432":{"start":{"line":753,"column":4},"end":{"line":753,"column":42}},"433":{"start":{"line":756,"column":25},"end":{"line":756,"column":40}},"434":{"start":{"line":757,"column":4},"end":{"line":757,"column":33}},"435":{"start":{"line":758,"column":4},"end":{"line":758,"column":63}},"436":{"start":{"line":759,"column":4},"end":{"line":759,"column":55}},"437":{"start":{"line":762,"column":21},"end":{"line":762,"column":30}},"438":{"start":{"line":763,"column":4},"end":{"line":765,"column":5}},"439":{"start":{"line":764,"column":6},"end":{"line":764,"column":42}},"440":{"start":{"line":766,"column":4},"end":{"line":766,"column":22}},"441":{"start":{"line":769,"column":21},"end":{"line":769,"column":57}},"442":{"start":{"line":770,"column":4},"end":{"line":770,"column":24}},"443":{"start":{"line":779,"column":22},"end":{"line":779,"column":81}},"444":{"start":{"line":780,"column":25},"end":{"line":780,"column":67}},"445":{"start":{"line":781,"column":4},"end":{"line":783,"column":5}},"446":{"start":{"line":782,"column":6},"end":{"line":782,"column":18}},"447":{"start":{"line":784,"column":4},"end":{"line":786,"column":5}},"448":{"start":{"line":785,"column":6},"end":{"line":785,"column":18}},"449":{"start":{"line":787,"column":4},"end":{"line":792,"column":5}},"450":{"start":{"line":788,"column":27},"end":{"line":788,"column":90}},"451":{"start":{"line":789,"column":6},"end":{"line":791,"column":7}},"452":{"start":{"line":790,"column":8},"end":{"line":790,"column":20}},"453":{"start":{"line":793,"column":4},"end":{"line":793,"column":17}},"454":{"start":{"line":796,"column":16},"end":{"line":796,"column":24}},"455":{"start":{"line":797,"column":4},"end":{"line":803,"column":5}},"456":{"start":{"line":798,"column":20},"end":{"line":798,"column":31}},"457":{"start":{"line":799,"column":6},"end":{"line":801,"column":7}},"458":{"start":{"line":800,"column":8},"end":{"line":800,"column":21}},"459":{"start":{"line":802,"column":6},"end":{"line":802,"column":14}},"460":{"start":{"line":806,"column":16},"end":{"line":806,"column":24}},"461":{"start":{"line":807,"column":29},"end":{"line":807,"column":30}},"462":{"start":{"line":808,"column":4},"end":{"line":817,"column":5}},"463":{"start":{"line":809,"column":20},"end":{"line":809,"column":31}},"464":{"start":{"line":810,"column":6},"end":{"line":815,"column":7}},"465":{"start":{"line":811,"column":8},"end":{"line":811,"column":29}},"466":{"start":{"line":812,"column":8},"end":{"line":814,"column":9}},"467":{"start":{"line":813,"column":10},"end":{"line":813,"column":23}},"468":{"start":{"line":816,"column":6},"end":{"line":816,"column":14}},"469":{"start":{"line":818,"column":4},"end":{"line":818,"column":16}},"470":{"start":{"line":821,"column":16},"end":{"line":821,"column":24}},"471":{"start":{"line":822,"column":4},"end":{"line":828,"column":5}},"472":{"start":{"line":823,"column":20},"end":{"line":823,"column":31}},"473":{"start":{"line":824,"column":6},"end":{"line":826,"column":7}},"474":{"start":{"line":825,"column":8},"end":{"line":825,"column":21}},"475":{"start":{"line":827,"column":6},"end":{"line":827,"column":14}},"476":{"start":{"line":831,"column":4},"end":{"line":836,"column":5}},"477":{"start":{"line":835,"column":6},"end":{"line":835,"column":18}},"478":{"start":{"line":837,"column":4},"end":{"line":837,"column":17}},"479":{"start":{"line":840,"column":4},"end":{"line":842,"column":5}},"480":{"start":{"line":841,"column":6},"end":{"line":841,"column":18}},"481":{"start":{"line":843,"column":4},"end":{"line":843,"column":17}},"482":{"start":{"line":846,"column":4},"end":{"line":848,"column":5}},"483":{"start":{"line":847,"column":6},"end":{"line":847,"column":18}},"484":{"start":{"line":849,"column":4},"end":{"line":849,"column":17}},"485":{"start":{"line":852,"column":26},"end":{"line":852,"column":28}},"486":{"start":{"line":853,"column":4},"end":{"line":853,"column":50}},"487":{"start":{"line":854,"column":4},"end":{"line":854,"column":25}},"488":{"start":{"line":857,"column":4},"end":{"line":857,"column":45}},"489":{"start":{"line":858,"column":4},"end":{"line":858,"column":22}},"490":{"start":{"line":859,"column":4},"end":{"line":859,"column":23}},"491":{"start":{"line":860,"column":4},"end":{"line":860,"column":28}},"492":{"start":{"line":861,"column":4},"end":{"line":861,"column":26}},"493":{"start":{"line":862,"column":4},"end":{"line":862,"column":35}},"494":{"start":{"line":863,"column":4},"end":{"line":863,"column":35}},"495":{"start":{"line":864,"column":4},"end":{"line":864,"column":30}},"496":{"start":{"line":865,"column":4},"end":{"line":865,"column":29}},"497":{"start":{"line":866,"column":4},"end":{"line":866,"column":32}},"498":{"start":{"line":869,"column":4},"end":{"line":871,"column":5}},"499":{"start":{"line":870,"column":6},"end":{"line":870,"column":18}},"500":{"start":{"line":872,"column":4},"end":{"line":874,"column":5}},"501":{"start":{"line":873,"column":6},"end":{"line":873,"column":18}},"502":{"start":{"line":875,"column":4},"end":{"line":877,"column":5}},"503":{"start":{"line":876,"column":6},"end":{"line":876,"column":18}},"504":{"start":{"line":878,"column":4},"end":{"line":880,"column":5}},"505":{"start":{"line":879,"column":6},"end":{"line":879,"column":18}},"506":{"start":{"line":881,"column":4},"end":{"line":883,"column":5}},"507":{"start":{"line":882,"column":6},"end":{"line":882,"column":18}},"508":{"start":{"line":884,"column":4},"end":{"line":884,"column":17}},"509":{"start":{"line":887,"column":14},"end":{"line":887,"column":20}},"510":{"start":{"line":888,"column":4},"end":{"line":890,"column":5}},"511":{"start":{"line":889,"column":6},"end":{"line":889,"column":18}},"512":{"start":{"line":891,"column":22},"end":{"line":891,"column":47}},"513":{"start":{"line":892,"column":4},"end":{"line":894,"column":5}},"514":{"start":{"line":893,"column":6},"end":{"line":893,"column":46}},"515":{"start":{"line":895,"column":4},"end":{"line":897,"column":5}},"516":{"start":{"line":896,"column":6},"end":{"line":896,"column":18}},"517":{"start":{"line":898,"column":4},"end":{"line":898,"column":17}},"518":{"start":{"line":901,"column":22},"end":{"line":901,"column":68}},"519":{"start":{"line":902,"column":4},"end":{"line":904,"column":5}},"520":{"start":{"line":903,"column":6},"end":{"line":903,"column":19}},"521":{"start":{"line":905,"column":4},"end":{"line":905,"column":16}},"522":{"start":{"line":908,"column":4},"end":{"line":914,"column":5}},"523":{"start":{"line":908,"column":17},"end":{"line":908,"column":18}},"524":{"start":{"line":909,"column":29},"end":{"line":909,"column":54}},"525":{"start":{"line":910,"column":24},"end":{"line":910,"column":104}},"526":{"start":{"line":911,"column":6},"end":{"line":913,"column":7}},"527":{"start":{"line":912,"column":8},"end":{"line":912,"column":25}},"528":{"start":{"line":918,"column":24},"end":{"line":918,"column":101}},"529":{"start":{"line":919,"column":4},"end":{"line":921,"column":5}},"530":{"start":{"line":920,"column":6},"end":{"line":920,"column":49}},"531":{"start":{"line":922,"column":31},"end":{"line":922,"column":54}},"532":{"start":{"line":923,"column":36},"end":{"line":923,"column":61}},"533":{"start":{"line":924,"column":14},"end":{"line":924,"column":15}},"534":{"start":{"line":925,"column":4},"end":{"line":925,"column":22}},"535":{"start":{"line":926,"column":4},"end":{"line":928,"column":5}},"536":{"start":{"line":927,"column":6},"end":{"line":927,"column":34}},"537":{"start":{"line":929,"column":4},"end":{"line":1239,"column":5}},"538":{"start":{"line":930,"column":28},"end":{"line":930,"column":51}},"539":{"start":{"line":931,"column":6},"end":{"line":933,"column":7}},"540":{"start":{"line":932,"column":8},"end":{"line":932,"column":55}},"541":{"start":{"line":934,"column":6},"end":{"line":1236,"column":7}},"542":{"start":{"line":935,"column":26},"end":{"line":935,"column":72}},"543":{"start":{"line":936,"column":8},"end":{"line":938,"column":9}},"544":{"start":{"line":937,"column":10},"end":{"line":937,"column":33}},"545":{"start":{"line":939,"column":8},"end":{"line":939,"column":44}},"546":{"start":{"line":940,"column":8},"end":{"line":945,"column":9}},"547":{"start":{"line":940,"column":21},"end":{"line":940,"column":22}},"548":{"start":{"line":941,"column":25},"end":{"line":941,"column":48}},"549":{"start":{"line":942,"column":10},"end":{"line":942,"column":36}},"550":{"start":{"line":943,"column":10},"end":{"line":943,"column":61}},"551":{"start":{"line":944,"column":10},"end":{"line":944,"column":16}},"552":{"start":{"line":946,"column":8},"end":{"line":946,"column":29}},"553":{"start":{"line":947,"column":8},"end":{"line":947,"column":17}},"554":{"start":{"line":948,"column":13},"end":{"line":1236,"column":7}},"555":{"start":{"line":949,"column":8},"end":{"line":974,"column":9}},"556":{"start":{"line":950,"column":10},"end":{"line":953,"column":11}},"557":{"start":{"line":951,"column":12},"end":{"line":951,"column":65}},"558":{"start":{"line":952,"column":12},"end":{"line":952,"column":33}},"559":{"start":{"line":954,"column":10},"end":{"line":954,"column":46}},"560":{"start":{"line":955,"column":10},"end":{"line":955,"column":30}},"561":{"start":{"line":956,"column":36},"end":{"line":956,"column":63}},"562":{"start":{"line":957,"column":10},"end":{"line":969,"column":11}},"563":{"start":{"line":958,"column":12},"end":{"line":960,"column":13}},"564":{"start":{"line":959,"column":14},"end":{"line":959,"column":37}},"565":{"start":{"line":961,"column":12},"end":{"line":961,"column":70}},"566":{"start":{"line":962,"column":12},"end":{"line":962,"column":18}},"567":{"start":{"line":963,"column":12},"end":{"line":963,"column":74}},"568":{"start":{"line":964,"column":12},"end":{"line":964,"column":18}},"569":{"start":{"line":965,"column":12},"end":{"line":965,"column":33}},"570":{"start":{"line":966,"column":12},"end":{"line":966,"column":21}},"571":{"start":{"line":967,"column":17},"end":{"line":969,"column":11}},"572":{"start":{"line":968,"column":12},"end":{"line":968,"column":80}},"573":{"start":{"line":971,"column":10},"end":{"line":971,"column":50}},"574":{"start":{"line":972,"column":10},"end":{"line":972,"column":44}},"575":{"start":{"line":973,"column":10},"end":{"line":973,"column":31}},"576":{"start":{"line":975,"column":13},"end":{"line":1236,"column":7}},"577":{"start":{"line":976,"column":8},"end":{"line":978,"column":9}},"578":{"start":{"line":977,"column":10},"end":{"line":977,"column":38}},"579":{"start":{"line":979,"column":8},"end":{"line":979,"column":48}},"580":{"start":{"line":980,"column":8},"end":{"line":980,"column":29}},"581":{"start":{"line":981,"column":31},"end":{"line":981,"column":56}},"582":{"start":{"line":982,"column":8},"end":{"line":999,"column":9}},"583":{"start":{"line":983,"column":10},"end":{"line":983,"column":50}},"584":{"start":{"line":984,"column":15},"end":{"line":999,"column":9}},"585":{"start":{"line":985,"column":36},"end":{"line":985,"column":63}},"586":{"start":{"line":986,"column":10},"end":{"line":996,"column":11}},"587":{"start":{"line":987,"column":12},"end":{"line":989,"column":13}},"588":{"start":{"line":988,"column":14},"end":{"line":988,"column":37}},"589":{"start":{"line":990,"column":12},"end":{"line":990,"column":93}},"590":{"start":{"line":991,"column":12},"end":{"line":991,"column":31}},"591":{"start":{"line":993,"column":12},"end":{"line":995,"column":13}},"592":{"start":{"line":994,"column":14},"end":{"line":994,"column":37}},"593":{"start":{"line":998,"column":10},"end":{"line":998,"column":33}},"594":{"start":{"line":1000,"column":8},"end":{"line":1000,"column":29}},"595":{"start":{"line":1001,"column":13},"end":{"line":1236,"column":7}},"596":{"start":{"line":1002,"column":8},"end":{"line":1002,"column":41}},"597":{"start":{"line":1003,"column":8},"end":{"line":1003,"column":27}},"598":{"start":{"line":1004,"column":8},"end":{"line":1006,"column":9}},"599":{"start":{"line":1005,"column":10},"end":{"line":1005,"column":33}},"600":{"start":{"line":1007,"column":13},"end":{"line":1236,"column":7}},"601":{"start":{"line":1008,"column":8},"end":{"line":1008,"column":41}},"602":{"start":{"line":1009,"column":8},"end":{"line":1009,"column":48}},"603":{"start":{"line":1010,"column":8},"end":{"line":1010,"column":29}},"604":{"start":{"line":1011,"column":8},"end":{"line":1011,"column":28}},"605":{"start":{"line":1012,"column":13},"end":{"line":1236,"column":7}},"606":{"start":{"line":1013,"column":8},"end":{"line":1015,"column":9}},"607":{"start":{"line":1014,"column":10},"end":{"line":1014,"column":35}},"608":{"start":{"line":1016,"column":8},"end":{"line":1016,"column":41}},"609":{"start":{"line":1017,"column":8},"end":{"line":1017,"column":34}},"610":{"start":{"line":1018,"column":13},"end":{"line":1236,"column":7}},"611":{"start":{"line":1019,"column":8},"end":{"line":1019,"column":35}},"612":{"start":{"line":1020,"column":8},"end":{"line":1029,"column":9}},"613":{"start":{"line":1021,"column":10},"end":{"line":1021,"column":43}},"614":{"start":{"line":1022,"column":10},"end":{"line":1025,"column":11}},"615":{"start":{"line":1023,"column":12},"end":{"line":1023,"column":52}},"616":{"start":{"line":1024,"column":12},"end":{"line":1024,"column":33}},"617":{"start":{"line":1026,"column":10},"end":{"line":1026,"column":36}},"618":{"start":{"line":1028,"column":10},"end":{"line":1028,"column":43}},"619":{"start":{"line":1030,"column":13},"end":{"line":1236,"column":7}},"620":{"start":{"line":1031,"column":8},"end":{"line":1040,"column":9}},"621":{"start":{"line":1032,"column":10},"end":{"line":1032,"column":38}},"622":{"start":{"line":1034,"column":36},"end":{"line":1034,"column":63}},"623":{"start":{"line":1035,"column":10},"end":{"line":1039,"column":11}},"624":{"start":{"line":1036,"column":12},"end":{"line":1036,"column":18}},"625":{"start":{"line":1038,"column":12},"end":{"line":1038,"column":41}},"626":{"start":{"line":1041,"column":8},"end":{"line":1041,"column":41}},"627":{"start":{"line":1042,"column":13},"end":{"line":1236,"column":7}},"628":{"start":{"line":1043,"column":8},"end":{"line":1061,"column":9}},"629":{"start":{"line":1044,"column":10},"end":{"line":1044,"column":38}},"630":{"start":{"line":1045,"column":10},"end":{"line":1047,"column":11}},"631":{"start":{"line":1046,"column":12},"end":{"line":1046,"column":33}},"632":{"start":{"line":1049,"column":36},"end":{"line":1049,"column":63}},"633":{"start":{"line":1050,"column":10},"end":{"line":1060,"column":11}},"634":{"start":{"line":1051,"column":12},"end":{"line":1051,"column":45}},"635":{"start":{"line":1052,"column":12},"end":{"line":1052,"column":70}},"636":{"start":{"line":1053,"column":12},"end":{"line":1053,"column":18}},"637":{"start":{"line":1054,"column":12},"end":{"line":1054,"column":49}},"638":{"start":{"line":1055,"column":12},"end":{"line":1055,"column":74}},"639":{"start":{"line":1056,"column":12},"end":{"line":1056,"column":18}},"640":{"start":{"line":1057,"column":12},"end":{"line":1057,"column":21}},"641":{"start":{"line":1059,"column":12},"end":{"line":1059,"column":41}},"642":{"start":{"line":1062,"column":8},"end":{"line":1062,"column":41}},"643":{"start":{"line":1063,"column":13},"end":{"line":1236,"column":7}},"644":{"start":{"line":1064,"column":8},"end":{"line":1066,"column":9}},"645":{"start":{"line":1065,"column":10},"end":{"line":1065,"column":38}},"646":{"start":{"line":1067,"column":31},"end":{"line":1067,"column":56}},"647":{"start":{"line":1068,"column":8},"end":{"line":1098,"column":9}},"648":{"start":{"line":1069,"column":10},"end":{"line":1069,"column":50}},"649":{"start":{"line":1070,"column":10},"end":{"line":1070,"column":31}},"650":{"start":{"line":1071,"column":10},"end":{"line":1073,"column":11}},"651":{"start":{"line":1072,"column":12},"end":{"line":1072,"column":35}},"652":{"start":{"line":1074,"column":10},"end":{"line":1074,"column":78}},"653":{"start":{"line":1076,"column":27},"end":{"line":1076,"column":42}},"654":{"start":{"line":1077,"column":10},"end":{"line":1077,"column":62}},"655":{"start":{"line":1078,"column":32},"end":{"line":1078,"column":47}},"656":{"start":{"line":1079,"column":10},"end":{"line":1079,"column":63}},"657":{"start":{"line":1080,"column":10},"end":{"line":1080,"column":49}},"658":{"start":{"line":1081,"column":28},"end":{"line":1081,"column":62}},"659":{"start":{"line":1082,"column":10},"end":{"line":1092,"column":11}},"660":{"start":{"line":1083,"column":36},"end":{"line":1083,"column":57}},"661":{"start":{"line":1084,"column":12},"end":{"line":1086,"column":13}},"662":{"start":{"line":1085,"column":14},"end":{"line":1085,"column":37}},"663":{"start":{"line":1087,"column":12},"end":{"line":1087,"column":52}},"664":{"start":{"line":1088,"column":12},"end":{"line":1088,"column":44}},"665":{"start":{"line":1089,"column":12},"end":{"line":1089,"column":53}},"666":{"start":{"line":1091,"column":12},"end":{"line":1091,"column":35}},"667":{"start":{"line":1093,"column":10},"end":{"line":1093,"column":55}},"668":{"start":{"line":1094,"column":10},"end":{"line":1094,"column":50}},"669":{"start":{"line":1095,"column":10},"end":{"line":1095,"column":31}},"670":{"start":{"line":1096,"column":10},"end":{"line":1096,"column":44}},"671":{"start":{"line":1097,"column":10},"end":{"line":1097,"column":78}},"672":{"start":{"line":1099,"column":13},"end":{"line":1236,"column":7}},"673":{"start":{"line":1100,"column":32},"end":{"line":1100,"column":47}},"674":{"start":{"line":1101,"column":8},"end":{"line":1101,"column":48}},"675":{"start":{"line":1102,"column":34},"end":{"line":1102,"column":49}},"676":{"start":{"line":1103,"column":8},"end":{"line":1103,"column":65}},"677":{"start":{"line":1104,"column":8},"end":{"line":1104,"column":53}},"678":{"start":{"line":1105,"column":35},"end":{"line":1105,"column":50}},"679":{"start":{"line":1106,"column":8},"end":{"line":1106,"column":66}},"680":{"start":{"line":1107,"column":8},"end":{"line":1107,"column":54}},"681":{"start":{"line":1108,"column":8},"end":{"line":1108,"column":82}},"682":{"start":{"line":1109,"column":32},"end":{"line":1109,"column":47}},"683":{"start":{"line":1110,"column":22},"end":{"line":1110,"column":23}},"684":{"start":{"line":1111,"column":8},"end":{"line":1162,"column":9}},"685":{"start":{"line":1114,"column":28},"end":{"line":1114,"column":29}},"686":{"start":{"line":1115,"column":30},"end":{"line":1115,"column":50}},"687":{"start":{"line":1116,"column":29},"end":{"line":1116,"column":43}},"688":{"start":{"line":1117,"column":32},"end":{"line":1117,"column":46}},"689":{"start":{"line":1118,"column":10},"end":{"line":1122,"column":11}},"690":{"start":{"line":1119,"column":12},"end":{"line":1119,"column":49}},"691":{"start":{"line":1120,"column":12},"end":{"line":1120,"column":59}},"692":{"start":{"line":1121,"column":12},"end":{"line":1121,"column":26}},"693":{"start":{"line":1123,"column":10},"end":{"line":1131,"column":11}},"694":{"start":{"line":1124,"column":12},"end":{"line":1124,"column":46}},"695":{"start":{"line":1125,"column":12},"end":{"line":1125,"column":53}},"696":{"start":{"line":1126,"column":12},"end":{"line":1129,"column":13}},"697":{"start":{"line":1127,"column":14},"end":{"line":1127,"column":62}},"698":{"start":{"line":1128,"column":14},"end":{"line":1128,"column":60}},"699":{"start":{"line":1130,"column":12},"end":{"line":1130,"column":26}},"700":{"start":{"line":1132,"column":10},"end":{"line":1134,"column":11}},"701":{"start":{"line":1133,"column":12},"end":{"line":1133,"column":59}},"702":{"start":{"line":1135,"column":10},"end":{"line":1135,"column":32}},"703":{"start":{"line":1136,"column":10},"end":{"line":1151,"column":11}},"704":{"start":{"line":1137,"column":12},"end":{"line":1137,"column":57}},"705":{"start":{"line":1138,"column":12},"end":{"line":1138,"column":55}},"706":{"start":{"line":1139,"column":12},"end":{"line":1146,"column":13}},"707":{"start":{"line":1140,"column":27},"end":{"line":1140,"column":54}},"708":{"start":{"line":1141,"column":14},"end":{"line":1143,"column":15}},"709":{"start":{"line":1142,"column":16},"end":{"line":1142,"column":41}},"710":{"start":{"line":1145,"column":14},"end":{"line":1145,"column":50}},"711":{"start":{"line":1147,"column":17},"end":{"line":1151,"column":11}},"712":{"start":{"line":1148,"column":12},"end":{"line":1148,"column":51}},"713":{"start":{"line":1149,"column":12},"end":{"line":1149,"column":60}},"714":{"start":{"line":1150,"column":12},"end":{"line":1150,"column":58}},"715":{"start":{"line":1152,"column":35},"end":{"line":1152,"column":50}},"716":{"start":{"line":1153,"column":10},"end":{"line":1153,"column":51}},"717":{"start":{"line":1154,"column":10},"end":{"line":1154,"column":56}},"718":{"start":{"line":1155,"column":10},"end":{"line":1155,"column":65}},"719":{"start":{"line":1156,"column":10},"end":{"line":1156,"column":31}},"720":{"start":{"line":1158,"column":32},"end":{"line":1158,"column":68}},"721":{"start":{"line":1159,"column":10},"end":{"line":1161,"column":11}},"722":{"start":{"line":1160,"column":12},"end":{"line":1160,"column":60}},"723":{"start":{"line":1163,"column":8},"end":{"line":1163,"column":53}},"724":{"start":{"line":1164,"column":8},"end":{"line":1164,"column":52}},"725":{"start":{"line":1165,"column":8},"end":{"line":1165,"column":33}},"726":{"start":{"line":1166,"column":13},"end":{"line":1236,"column":7}},"727":{"start":{"line":1167,"column":8},"end":{"line":1167,"column":48}},"728":{"start":{"line":1168,"column":29},"end":{"line":1168,"column":44}},"729":{"start":{"line":1169,"column":8},"end":{"line":1169,"column":45}},"730":{"start":{"line":1170,"column":30},"end":{"line":1170,"column":57}},"731":{"start":{"line":1171,"column":8},"end":{"line":1176,"column":9}},"732":{"start":{"line":1172,"column":10},"end":{"line":1172,"column":53}},"733":{"start":{"line":1173,"column":15},"end":{"line":1176,"column":9}},"734":{"start":{"line":1174,"column":10},"end":{"line":1174,"column":57}},"735":{"start":{"line":1175,"column":10},"end":{"line":1175,"column":34}},"736":{"start":{"line":1177,"column":8},"end":{"line":1177,"column":47}},"737":{"start":{"line":1178,"column":8},"end":{"line":1178,"column":55}},"738":{"start":{"line":1179,"column":8},"end":{"line":1179,"column":29}},"739":{"start":{"line":1180,"column":13},"end":{"line":1236,"column":7}},"740":{"start":{"line":1181,"column":26},"end":{"line":1181,"column":46}},"741":{"start":{"line":1182,"column":8},"end":{"line":1216,"column":9}},"742":{"start":{"line":1183,"column":29},"end":{"line":1183,"column":87}},"743":{"start":{"line":1184,"column":29},"end":{"line":1184,"column":83}},"744":{"start":{"line":1185,"column":10},"end":{"line":1205,"column":11}},"745":{"start":{"line":1186,"column":12},"end":{"line":1186,"column":42}},"746":{"start":{"line":1187,"column":12},"end":{"line":1187,"column":58}},"747":{"start":{"line":1188,"column":12},"end":{"line":1188,"column":70}},"748":{"start":{"line":1189,"column":12},"end":{"line":1189,"column":33}},"749":{"start":{"line":1190,"column":12},"end":{"line":1190,"column":18}},"750":{"start":{"line":1191,"column":12},"end":{"line":1191,"column":21}},"751":{"start":{"line":1192,"column":17},"end":{"line":1205,"column":11}},"752":{"start":{"line":1193,"column":12},"end":{"line":1204,"column":13}},"753":{"start":{"line":1194,"column":14},"end":{"line":1194,"column":53}},"754":{"start":{"line":1195,"column":14},"end":{"line":1195,"column":72}},"755":{"start":{"line":1196,"column":14},"end":{"line":1196,"column":81}},"756":{"start":{"line":1197,"column":14},"end":{"line":1197,"column":23}},"757":{"start":{"line":1198,"column":14},"end":{"line":1198,"column":23}},"758":{"start":{"line":1200,"column":14},"end":{"line":1200,"column":53}},"759":{"start":{"line":1201,"column":14},"end":{"line":1201,"column":72}},"760":{"start":{"line":1202,"column":14},"end":{"line":1202,"column":20}},"761":{"start":{"line":1203,"column":14},"end":{"line":1203,"column":23}},"762":{"start":{"line":1206,"column":15},"end":{"line":1216,"column":9}},"763":{"start":{"line":1207,"column":10},"end":{"line":1207,"column":43}},"764":{"start":{"line":1208,"column":10},"end":{"line":1208,"column":68}},"765":{"start":{"line":1209,"column":10},"end":{"line":1209,"column":16}},"766":{"start":{"line":1210,"column":10},"end":{"line":1210,"column":19}},"767":{"start":{"line":1211,"column":15},"end":{"line":1216,"column":9}},"768":{"start":{"line":1212,"column":10},"end":{"line":1212,"column":38}},"769":{"start":{"line":1214,"column":10},"end":{"line":1214,"column":50}},"770":{"start":{"line":1215,"column":10},"end":{"line":1215,"column":27}},"771":{"start":{"line":1217,"column":8},"end":{"line":1232,"column":9}},"772":{"start":{"line":1218,"column":36},"end":{"line":1218,"column":63}},"773":{"start":{"line":1219,"column":10},"end":{"line":1229,"column":11}},"774":{"start":{"line":1220,"column":12},"end":{"line":1220,"column":86}},"775":{"start":{"line":1221,"column":12},"end":{"line":1221,"column":33}},"776":{"start":{"line":1222,"column":12},"end":{"line":1222,"column":70}},"777":{"start":{"line":1223,"column":12},"end":{"line":1223,"column":18}},"778":{"start":{"line":1224,"column":12},"end":{"line":1224,"column":74}},"779":{"start":{"line":1225,"column":12},"end":{"line":1225,"column":18}},"780":{"start":{"line":1226,"column":12},"end":{"line":1226,"column":21}},"781":{"start":{"line":1228,"column":12},"end":{"line":1228,"column":66}},"782":{"start":{"line":1231,"column":10},"end":{"line":1231,"column":64}},"783":{"start":{"line":1233,"column":8},"end":{"line":1233,"column":29}},"784":{"start":{"line":1235,"column":8},"end":{"line":1235,"column":41}},"785":{"start":{"line":1237,"column":6},"end":{"line":1237,"column":64}},"786":{"start":{"line":1238,"column":6},"end":{"line":1238,"column":12}},"787":{"start":{"line":1240,"column":4},"end":{"line":1240,"column":44}},"788":{"start":{"line":1241,"column":4},"end":{"line":1243,"column":5}},"789":{"start":{"line":1242,"column":6},"end":{"line":1242,"column":29}},"790":{"start":{"line":1246,"column":23},"end":{"line":1246,"column":50}},"791":{"start":{"line":1247,"column":4},"end":{"line":1249,"column":5}},"792":{"start":{"line":1248,"column":6},"end":{"line":1248,"column":19}},"793":{"start":{"line":1250,"column":4},"end":{"line":1252,"column":5}},"794":{"start":{"line":1251,"column":6},"end":{"line":1251,"column":19}},"795":{"start":{"line":1253,"column":24},"end":{"line":1253,"column":51}},"796":{"start":{"line":1254,"column":4},"end":{"line":1256,"column":5}},"797":{"start":{"line":1255,"column":6},"end":{"line":1255,"column":19}},"798":{"start":{"line":1257,"column":23},"end":{"line":1257,"column":50}},"799":{"start":{"line":1258,"column":4},"end":{"line":1258,"column":58}},"800":{"start":{"line":1261,"column":4},"end":{"line":1266,"column":7}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":26,"column":35},"end":{"line":26,"column":36}},"loc":{"start":{"line":26,"column":53},"end":{"line":31,"column":1}},"line":26},"1":{"name":"(anonymous_1)","decl":{"start":{"line":55,"column":2},"end":{"line":55,"column":3}},"loc":{"start":{"line":55,"column":12},"end":{"line":60,"column":3}},"line":55},"2":{"name":"(anonymous_2)","decl":{"start":{"line":61,"column":2},"end":{"line":61,"column":3}},"loc":{"start":{"line":61,"column":15},"end":{"line":63,"column":3}},"line":61},"3":{"name":"(anonymous_3)","decl":{"start":{"line":64,"column":2},"end":{"line":64,"column":3}},"loc":{"start":{"line":64,"column":17},"end":{"line":66,"column":3}},"line":64},"4":{"name":"(anonymous_4)","decl":{"start":{"line":67,"column":2},"end":{"line":67,"column":3}},"loc":{"start":{"line":67,"column":16},"end":{"line":69,"column":3}},"line":67},"5":{"name":"(anonymous_5)","decl":{"start":{"line":70,"column":2},"end":{"line":70,"column":3}},"loc":{"start":{"line":70,"column":27},"end":{"line":72,"column":3}},"line":70},"6":{"name":"(anonymous_6)","decl":{"start":{"line":73,"column":2},"end":{"line":73,"column":3}},"loc":{"start":{"line":73,"column":17},"end":{"line":75,"column":3}},"line":73},"7":{"name":"(anonymous_7)","decl":{"start":{"line":76,"column":2},"end":{"line":76,"column":3}},"loc":{"start":{"line":76,"column":18},"end":{"line":78,"column":3}},"line":76},"8":{"name":"(anonymous_8)","decl":{"start":{"line":79,"column":2},"end":{"line":79,"column":3}},"loc":{"start":{"line":79,"column":27},"end":{"line":81,"column":3}},"line":79},"9":{"name":"(anonymous_9)","decl":{"start":{"line":82,"column":2},"end":{"line":82,"column":3}},"loc":{"start":{"line":82,"column":18},"end":{"line":84,"column":3}},"line":82},"10":{"name":"(anonymous_10)","decl":{"start":{"line":85,"column":2},"end":{"line":85,"column":3}},"loc":{"start":{"line":85,"column":19},"end":{"line":87,"column":3}},"line":85},"11":{"name":"(anonymous_11)","decl":{"start":{"line":88,"column":2},"end":{"line":88,"column":3}},"loc":{"start":{"line":88,"column":25},"end":{"line":90,"column":3}},"line":88},"12":{"name":"(anonymous_12)","decl":{"start":{"line":91,"column":2},"end":{"line":91,"column":3}},"loc":{"start":{"line":91,"column":24},"end":{"line":93,"column":3}},"line":91},"13":{"name":"(anonymous_13)","decl":{"start":{"line":94,"column":2},"end":{"line":94,"column":3}},"loc":{"start":{"line":94,"column":51},"end":{"line":117,"column":3}},"line":94},"14":{"name":"(anonymous_14)","decl":{"start":{"line":122,"column":2},"end":{"line":122,"column":3}},"loc":{"start":{"line":122,"column":35},"end":{"line":157,"column":3}},"line":122},"15":{"name":"(anonymous_15)","decl":{"start":{"line":158,"column":2},"end":{"line":158,"column":3}},"loc":{"start":{"line":158,"column":38},"end":{"line":170,"column":3}},"line":158},"16":{"name":"(anonymous_16)","decl":{"start":{"line":171,"column":2},"end":{"line":171,"column":3}},"loc":{"start":{"line":171,"column":106},"end":{"line":219,"column":3}},"line":171},"17":{"name":"(anonymous_17)","decl":{"start":{"line":220,"column":2},"end":{"line":220,"column":3}},"loc":{"start":{"line":220,"column":86},"end":{"line":258,"column":3}},"line":220},"18":{"name":"(anonymous_18)","decl":{"start":{"line":263,"column":2},"end":{"line":263,"column":3}},"loc":{"start":{"line":263,"column":23},"end":{"line":275,"column":3}},"line":263},"19":{"name":"(anonymous_19)","decl":{"start":{"line":277,"column":2},"end":{"line":277,"column":3}},"loc":{"start":{"line":277,"column":33},"end":{"line":320,"column":3}},"line":277},"20":{"name":"(anonymous_20)","decl":{"start":{"line":321,"column":2},"end":{"line":321,"column":3}},"loc":{"start":{"line":321,"column":97},"end":{"line":332,"column":3}},"line":321},"21":{"name":"(anonymous_21)","decl":{"start":{"line":333,"column":2},"end":{"line":333,"column":3}},"loc":{"start":{"line":333,"column":46},"end":{"line":335,"column":3}},"line":333},"22":{"name":"(anonymous_22)","decl":{"start":{"line":336,"column":2},"end":{"line":336,"column":3}},"loc":{"start":{"line":336,"column":26},"end":{"line":338,"column":3}},"line":336},"23":{"name":"(anonymous_23)","decl":{"start":{"line":343,"column":2},"end":{"line":343,"column":3}},"loc":{"start":{"line":343,"column":45},"end":{"line":376,"column":3}},"line":343},"24":{"name":"(anonymous_24)","decl":{"start":{"line":380,"column":2},"end":{"line":380,"column":3}},"loc":{"start":{"line":380,"column":41},"end":{"line":415,"column":3}},"line":380},"25":{"name":"(anonymous_25)","decl":{"start":{"line":416,"column":2},"end":{"line":416,"column":3}},"loc":{"start":{"line":416,"column":57},"end":{"line":419,"column":3}},"line":416},"26":{"name":"(anonymous_26)","decl":{"start":{"line":420,"column":2},"end":{"line":420,"column":3}},"loc":{"start":{"line":420,"column":31},"end":{"line":422,"column":3}},"line":420},"27":{"name":"(anonymous_27)","decl":{"start":{"line":423,"column":2},"end":{"line":423,"column":3}},"loc":{"start":{"line":423,"column":96},"end":{"line":470,"column":3}},"line":423},"28":{"name":"(anonymous_28)","decl":{"start":{"line":472,"column":2},"end":{"line":472,"column":3}},"loc":{"start":{"line":472,"column":38},"end":{"line":531,"column":3}},"line":472},"29":{"name":"(anonymous_29)","decl":{"start":{"line":532,"column":2},"end":{"line":532,"column":3}},"loc":{"start":{"line":532,"column":68},"end":{"line":544,"column":3}},"line":532},"30":{"name":"(anonymous_30)","decl":{"start":{"line":545,"column":2},"end":{"line":545,"column":3}},"loc":{"start":{"line":545,"column":76},"end":{"line":563,"column":3}},"line":545},"31":{"name":"(anonymous_31)","decl":{"start":{"line":564,"column":2},"end":{"line":564,"column":3}},"loc":{"start":{"line":564,"column":27},"end":{"line":566,"column":3}},"line":564},"32":{"name":"(anonymous_32)","decl":{"start":{"line":567,"column":2},"end":{"line":567,"column":3}},"loc":{"start":{"line":567,"column":26},"end":{"line":569,"column":3}},"line":567},"33":{"name":"(anonymous_33)","decl":{"start":{"line":570,"column":2},"end":{"line":570,"column":3}},"loc":{"start":{"line":570,"column":23},"end":{"line":578,"column":3}},"line":570},"34":{"name":"(anonymous_34)","decl":{"start":{"line":579,"column":2},"end":{"line":579,"column":3}},"loc":{"start":{"line":579,"column":33},"end":{"line":590,"column":3}},"line":579},"35":{"name":"(anonymous_35)","decl":{"start":{"line":591,"column":2},"end":{"line":591,"column":3}},"loc":{"start":{"line":591,"column":27},"end":{"line":593,"column":3}},"line":591},"36":{"name":"(anonymous_36)","decl":{"start":{"line":594,"column":2},"end":{"line":594,"column":3}},"loc":{"start":{"line":594,"column":18},"end":{"line":596,"column":3}},"line":594},"37":{"name":"(anonymous_37)","decl":{"start":{"line":597,"column":2},"end":{"line":597,"column":3}},"loc":{"start":{"line":597,"column":38},"end":{"line":599,"column":3}},"line":597},"38":{"name":"(anonymous_38)","decl":{"start":{"line":600,"column":2},"end":{"line":600,"column":3}},"loc":{"start":{"line":600,"column":18},"end":{"line":602,"column":3}},"line":600},"39":{"name":"(anonymous_39)","decl":{"start":{"line":603,"column":2},"end":{"line":603,"column":3}},"loc":{"start":{"line":603,"column":23},"end":{"line":605,"column":3}},"line":603},"40":{"name":"(anonymous_40)","decl":{"start":{"line":606,"column":2},"end":{"line":606,"column":3}},"loc":{"start":{"line":606,"column":24},"end":{"line":608,"column":3}},"line":606},"41":{"name":"(anonymous_41)","decl":{"start":{"line":609,"column":2},"end":{"line":609,"column":3}},"loc":{"start":{"line":609,"column":23},"end":{"line":612,"column":3}},"line":609},"42":{"name":"(anonymous_42)","decl":{"start":{"line":613,"column":2},"end":{"line":613,"column":3}},"loc":{"start":{"line":613,"column":30},"end":{"line":616,"column":3}},"line":613},"43":{"name":"(anonymous_43)","decl":{"start":{"line":617,"column":2},"end":{"line":617,"column":3}},"loc":{"start":{"line":617,"column":16},"end":{"line":619,"column":3}},"line":617},"44":{"name":"(anonymous_44)","decl":{"start":{"line":620,"column":2},"end":{"line":620,"column":3}},"loc":{"start":{"line":620,"column":17},"end":{"line":622,"column":3}},"line":620},"45":{"name":"(anonymous_45)","decl":{"start":{"line":623,"column":2},"end":{"line":623,"column":3}},"loc":{"start":{"line":623,"column":25},"end":{"line":625,"column":3}},"line":623},"46":{"name":"(anonymous_46)","decl":{"start":{"line":626,"column":2},"end":{"line":626,"column":3}},"loc":{"start":{"line":626,"column":26},"end":{"line":628,"column":3}},"line":626},"47":{"name":"(anonymous_47)","decl":{"start":{"line":629,"column":2},"end":{"line":629,"column":3}},"loc":{"start":{"line":629,"column":25},"end":{"line":631,"column":3}},"line":629},"48":{"name":"(anonymous_48)","decl":{"start":{"line":632,"column":2},"end":{"line":632,"column":3}},"loc":{"start":{"line":632,"column":26},"end":{"line":634,"column":3}},"line":632},"49":{"name":"(anonymous_49)","decl":{"start":{"line":635,"column":2},"end":{"line":635,"column":3}},"loc":{"start":{"line":635,"column":16},"end":{"line":637,"column":3}},"line":635},"50":{"name":"(anonymous_50)","decl":{"start":{"line":638,"column":2},"end":{"line":638,"column":3}},"loc":{"start":{"line":638,"column":17},"end":{"line":640,"column":3}},"line":638},"51":{"name":"(anonymous_51)","decl":{"start":{"line":641,"column":2},"end":{"line":641,"column":3}},"loc":{"start":{"line":641,"column":22},"end":{"line":644,"column":3}},"line":641},"52":{"name":"(anonymous_52)","decl":{"start":{"line":645,"column":2},"end":{"line":645,"column":3}},"loc":{"start":{"line":645,"column":16},"end":{"line":648,"column":3}},"line":645},"53":{"name":"(anonymous_53)","decl":{"start":{"line":649,"column":2},"end":{"line":649,"column":3}},"loc":{"start":{"line":649,"column":20},"end":{"line":651,"column":3}},"line":649},"54":{"name":"(anonymous_54)","decl":{"start":{"line":652,"column":2},"end":{"line":652,"column":3}},"loc":{"start":{"line":652,"column":22},"end":{"line":654,"column":3}},"line":652},"55":{"name":"(anonymous_55)","decl":{"start":{"line":655,"column":2},"end":{"line":655,"column":3}},"loc":{"start":{"line":655,"column":23},"end":{"line":657,"column":3}},"line":655},"56":{"name":"(anonymous_56)","decl":{"start":{"line":658,"column":2},"end":{"line":658,"column":3}},"loc":{"start":{"line":658,"column":25},"end":{"line":660,"column":3}},"line":658},"57":{"name":"(anonymous_57)","decl":{"start":{"line":661,"column":2},"end":{"line":661,"column":3}},"loc":{"start":{"line":661,"column":20},"end":{"line":663,"column":3}},"line":661},"58":{"name":"(anonymous_58)","decl":{"start":{"line":664,"column":2},"end":{"line":664,"column":3}},"loc":{"start":{"line":664,"column":34},"end":{"line":673,"column":3}},"line":664},"59":{"name":"(anonymous_59)","decl":{"start":{"line":674,"column":2},"end":{"line":674,"column":3}},"loc":{"start":{"line":674,"column":25},"end":{"line":681,"column":3}},"line":674},"60":{"name":"(anonymous_60)","decl":{"start":{"line":682,"column":2},"end":{"line":682,"column":3}},"loc":{"start":{"line":682,"column":31},"end":{"line":689,"column":3}},"line":682},"61":{"name":"(anonymous_61)","decl":{"start":{"line":690,"column":2},"end":{"line":690,"column":3}},"loc":{"start":{"line":690,"column":33},"end":{"line":722,"column":3}},"line":690},"62":{"name":"(anonymous_62)","decl":{"start":{"line":723,"column":2},"end":{"line":723,"column":3}},"loc":{"start":{"line":723,"column":18},"end":{"line":725,"column":3}},"line":723},"63":{"name":"(anonymous_63)","decl":{"start":{"line":726,"column":2},"end":{"line":726,"column":3}},"loc":{"start":{"line":726,"column":22},"end":{"line":728,"column":3}},"line":726},"64":{"name":"(anonymous_64)","decl":{"start":{"line":729,"column":2},"end":{"line":729,"column":3}},"loc":{"start":{"line":729,"column":51},"end":{"line":749,"column":3}},"line":729},"65":{"name":"(anonymous_65)","decl":{"start":{"line":750,"column":2},"end":{"line":750,"column":3}},"loc":{"start":{"line":750,"column":56},"end":{"line":754,"column":3}},"line":750},"66":{"name":"(anonymous_66)","decl":{"start":{"line":755,"column":2},"end":{"line":755,"column":3}},"loc":{"start":{"line":755,"column":65},"end":{"line":760,"column":3}},"line":755},"67":{"name":"(anonymous_67)","decl":{"start":{"line":761,"column":2},"end":{"line":761,"column":3}},"loc":{"start":{"line":761,"column":25},"end":{"line":767,"column":3}},"line":761},"68":{"name":"(anonymous_68)","decl":{"start":{"line":768,"column":2},"end":{"line":768,"column":3}},"loc":{"start":{"line":768,"column":21},"end":{"line":771,"column":3}},"line":768},"69":{"name":"(anonymous_69)","decl":{"start":{"line":778,"column":2},"end":{"line":778,"column":3}},"loc":{"start":{"line":778,"column":60},"end":{"line":794,"column":3}},"line":778},"70":{"name":"(anonymous_70)","decl":{"start":{"line":795,"column":2},"end":{"line":795,"column":3}},"loc":{"start":{"line":795,"column":37},"end":{"line":804,"column":3}},"line":795},"71":{"name":"(anonymous_71)","decl":{"start":{"line":805,"column":2},"end":{"line":805,"column":3}},"loc":{"start":{"line":805,"column":47},"end":{"line":819,"column":3}},"line":805},"72":{"name":"(anonymous_72)","decl":{"start":{"line":820,"column":2},"end":{"line":820,"column":3}},"loc":{"start":{"line":820,"column":33},"end":{"line":829,"column":3}},"line":820},"73":{"name":"(anonymous_73)","decl":{"start":{"line":830,"column":2},"end":{"line":830,"column":3}},"loc":{"start":{"line":830,"column":52},"end":{"line":838,"column":3}},"line":830},"74":{"name":"(anonymous_74)","decl":{"start":{"line":839,"column":2},"end":{"line":839,"column":3}},"loc":{"start":{"line":839,"column":37},"end":{"line":844,"column":3}},"line":839},"75":{"name":"(anonymous_75)","decl":{"start":{"line":845,"column":2},"end":{"line":845,"column":3}},"loc":{"start":{"line":845,"column":31},"end":{"line":850,"column":3}},"line":845},"76":{"name":"(anonymous_76)","decl":{"start":{"line":851,"column":2},"end":{"line":851,"column":3}},"loc":{"start":{"line":851,"column":35},"end":{"line":855,"column":3}},"line":851},"77":{"name":"(anonymous_77)","decl":{"start":{"line":856,"column":2},"end":{"line":856,"column":3}},"loc":{"start":{"line":856,"column":15},"end":{"line":867,"column":3}},"line":856},"78":{"name":"(anonymous_78)","decl":{"start":{"line":868,"column":2},"end":{"line":868,"column":3}},"loc":{"start":{"line":868,"column":21},"end":{"line":885,"column":3}},"line":868},"79":{"name":"(anonymous_79)","decl":{"start":{"line":886,"column":2},"end":{"line":886,"column":3}},"loc":{"start":{"line":886,"column":69},"end":{"line":899,"column":3}},"line":886},"80":{"name":"(anonymous_80)","decl":{"start":{"line":900,"column":2},"end":{"line":900,"column":3}},"loc":{"start":{"line":900,"column":47},"end":{"line":906,"column":3}},"line":900},"81":{"name":"(anonymous_81)","decl":{"start":{"line":907,"column":2},"end":{"line":907,"column":3}},"loc":{"start":{"line":907,"column":47},"end":{"line":915,"column":3}},"line":907},"82":{"name":"(anonymous_82)","decl":{"start":{"line":917,"column":2},"end":{"line":917,"column":3}},"loc":{"start":{"line":917,"column":69},"end":{"line":1244,"column":3}},"line":917},"83":{"name":"(anonymous_83)","decl":{"start":{"line":1245,"column":2},"end":{"line":1245,"column":3}},"loc":{"start":{"line":1245,"column":64},"end":{"line":1259,"column":3}},"line":1245},"84":{"name":"(anonymous_84)","decl":{"start":{"line":1260,"column":2},"end":{"line":1260,"column":3}},"loc":{"start":{"line":1260,"column":55},"end":{"line":1267,"column":3}},"line":1260}},"branchMap":{"0":{"loc":{"start":{"line":31,"column":3},"end":{"line":31,"column":20}},"type":"binary-expr","locations":[{"start":{"line":31,"column":3},"end":{"line":31,"column":14}},{"start":{"line":31,"column":18},"end":{"line":31,"column":20}}],"line":31},"1":{"loc":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},{"start":{},"end":{}}],"line":96},"2":{"loc":{"start":{"line":96,"column":8},"end":{"line":96,"column":54}},"type":"binary-expr","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":23}},{"start":{"line":96,"column":27},"end":{"line":96,"column":54}}],"line":96},"3":{"loc":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},{"start":{},"end":{}}],"line":100},"4":{"loc":{"start":{"line":107,"column":6},"end":{"line":113,"column":7}},"type":"if","locations":[{"start":{"line":107,"column":6},"end":{"line":113,"column":7}},{"start":{},"end":{}}],"line":107},"5":{"loc":{"start":{"line":107,"column":10},"end":{"line":107,"column":112}},"type":"binary-expr","locations":[{"start":{"line":107,"column":10},"end":{"line":107,"column":48}},{"start":{"line":107,"column":52},"end":{"line":107,"column":79}},{"start":{"line":107,"column":83},"end":{"line":107,"column":112}}],"line":107},"6":{"loc":{"start":{"line":126,"column":11},"end":{"line":126,"column":92}},"type":"binary-expr","locations":[{"start":{"line":126,"column":12},"end":{"line":126,"column":51}},{"start":{"line":126,"column":55},"end":{"line":126,"column":73}},{"start":{"line":126,"column":78},"end":{"line":126,"column":92}}],"line":126},"7":{"loc":{"start":{"line":127,"column":6},"end":{"line":129,"column":7}},"type":"if","locations":[{"start":{"line":127,"column":6},"end":{"line":129,"column":7}},{"start":{},"end":{}}],"line":127},"8":{"loc":{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},{"start":{},"end":{}}],"line":133},"9":{"loc":{"start":{"line":133,"column":8},"end":{"line":133,"column":54}},"type":"binary-expr","locations":[{"start":{"line":133,"column":8},"end":{"line":133,"column":23}},{"start":{"line":133,"column":27},"end":{"line":133,"column":54}}],"line":133},"10":{"loc":{"start":{"line":137,"column":4},"end":{"line":139,"column":5}},"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":139,"column":5}},{"start":{},"end":{}}],"line":137},"11":{"loc":{"start":{"line":142,"column":4},"end":{"line":144,"column":5}},"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":144,"column":5}},{"start":{},"end":{}}],"line":142},"12":{"loc":{"start":{"line":147,"column":6},"end":{"line":153,"column":7}},"type":"if","locations":[{"start":{"line":147,"column":6},"end":{"line":153,"column":7}},{"start":{},"end":{}}],"line":147},"13":{"loc":{"start":{"line":147,"column":10},"end":{"line":147,"column":173}},"type":"binary-expr","locations":[{"start":{"line":147,"column":10},"end":{"line":147,"column":48}},{"start":{"line":147,"column":52},"end":{"line":147,"column":78}},{"start":{"line":147,"column":82},"end":{"line":147,"column":111}},{"start":{"line":147,"column":115},"end":{"line":147,"column":173}}],"line":147},"14":{"loc":{"start":{"line":148,"column":8},"end":{"line":152,"column":9}},"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":152,"column":9}},{"start":{"line":150,"column":15},"end":{"line":152,"column":9}}],"line":148},"15":{"loc":{"start":{"line":160,"column":4},"end":{"line":162,"column":5}},"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":162,"column":5}},{"start":{},"end":{}}],"line":160},"16":{"loc":{"start":{"line":164,"column":4},"end":{"line":166,"column":5}},"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":166,"column":5}},{"start":{},"end":{}}],"line":164},"17":{"loc":{"start":{"line":171,"column":83},"end":{"line":171,"column":104}},"type":"default-arg","locations":[{"start":{"line":171,"column":102},"end":{"line":171,"column":104}}],"line":171},"18":{"loc":{"start":{"line":173,"column":4},"end":{"line":175,"column":5}},"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":175,"column":5}},{"start":{},"end":{}}],"line":173},"19":{"loc":{"start":{"line":177,"column":4},"end":{"line":179,"column":5}},"type":"if","locations":[{"start":{"line":177,"column":4},"end":{"line":179,"column":5}},{"start":{},"end":{}}],"line":177},"20":{"loc":{"start":{"line":182,"column":6},"end":{"line":184,"column":7}},"type":"if","locations":[{"start":{"line":182,"column":6},"end":{"line":184,"column":7}},{"start":{},"end":{}}],"line":182},"21":{"loc":{"start":{"line":185,"column":6},"end":{"line":216,"column":7}},"type":"if","locations":[{"start":{"line":185,"column":6},"end":{"line":216,"column":7}},{"start":{},"end":{}}],"line":185},"22":{"loc":{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},"type":"if","locations":[{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},{"start":{},"end":{}}],"line":188},"23":{"loc":{"start":{"line":200,"column":21},"end":{"line":200,"column":50}},"type":"binary-expr","locations":[{"start":{"line":200,"column":21},"end":{"line":200,"column":30}},{"start":{"line":200,"column":34},"end":{"line":200,"column":50}}],"line":200},"24":{"loc":{"start":{"line":210,"column":10},"end":{"line":212,"column":11}},"type":"if","locations":[{"start":{"line":210,"column":10},"end":{"line":212,"column":11}},{"start":{},"end":{}}],"line":210},"25":{"loc":{"start":{"line":220,"column":62},"end":{"line":220,"column":84}},"type":"default-arg","locations":[{"start":{"line":220,"column":79},"end":{"line":220,"column":84}}],"line":220},"26":{"loc":{"start":{"line":222,"column":4},"end":{"line":224,"column":5}},"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":224,"column":5}},{"start":{},"end":{}}],"line":222},"27":{"loc":{"start":{"line":228,"column":6},"end":{"line":231,"column":7}},"type":"if","locations":[{"start":{"line":228,"column":6},"end":{"line":231,"column":7}},{"start":{},"end":{}}],"line":228},"28":{"loc":{"start":{"line":228,"column":10},"end":{"line":228,"column":82}},"type":"binary-expr","locations":[{"start":{"line":228,"column":10},"end":{"line":228,"column":34}},{"start":{"line":228,"column":38},"end":{"line":228,"column":82}}],"line":228},"29":{"loc":{"start":{"line":236,"column":6},"end":{"line":241,"column":7}},"type":"if","locations":[{"start":{"line":236,"column":6},"end":{"line":241,"column":7}},{"start":{"line":239,"column":13},"end":{"line":241,"column":7}}],"line":236},"30":{"loc":{"start":{"line":236,"column":10},"end":{"line":236,"column":137}},"type":"binary-expr","locations":[{"start":{"line":236,"column":10},"end":{"line":236,"column":25}},{"start":{"line":236,"column":29},"end":{"line":236,"column":82}},{"start":{"line":236,"column":86},"end":{"line":236,"column":137}}],"line":236},"31":{"loc":{"start":{"line":243,"column":6},"end":{"line":251,"column":7}},"type":"if","locations":[{"start":{"line":243,"column":6},"end":{"line":251,"column":7}},{"start":{"line":249,"column":13},"end":{"line":251,"column":7}}],"line":243},"32":{"loc":{"start":{"line":264,"column":4},"end":{"line":266,"column":5}},"type":"if","locations":[{"start":{"line":264,"column":4},"end":{"line":266,"column":5}},{"start":{},"end":{}}],"line":264},"33":{"loc":{"start":{"line":268,"column":4},"end":{"line":270,"column":5}},"type":"if","locations":[{"start":{"line":268,"column":4},"end":{"line":270,"column":5}},{"start":{},"end":{}}],"line":268},"34":{"loc":{"start":{"line":271,"column":4},"end":{"line":273,"column":5}},"type":"if","locations":[{"start":{"line":271,"column":4},"end":{"line":273,"column":5}},{"start":{},"end":{}}],"line":271},"35":{"loc":{"start":{"line":271,"column":8},"end":{"line":271,"column":187}},"type":"binary-expr","locations":[{"start":{"line":271,"column":8},"end":{"line":271,"column":36}},{"start":{"line":271,"column":40},"end":{"line":271,"column":66}},{"start":{"line":271,"column":70},"end":{"line":271,"column":93}},{"start":{"line":271,"column":97},"end":{"line":271,"column":122}},{"start":{"line":271,"column":126},"end":{"line":271,"column":151}},{"start":{"line":271,"column":155},"end":{"line":271,"column":187}}],"line":271},"36":{"loc":{"start":{"line":284,"column":6},"end":{"line":286,"column":7}},"type":"if","locations":[{"start":{"line":284,"column":6},"end":{"line":286,"column":7}},{"start":{},"end":{}}],"line":284},"37":{"loc":{"start":{"line":287,"column":6},"end":{"line":290,"column":7}},"type":"if","locations":[{"start":{"line":287,"column":6},"end":{"line":290,"column":7}},{"start":{},"end":{}}],"line":287},"38":{"loc":{"start":{"line":287,"column":10},"end":{"line":287,"column":54}},"type":"binary-expr","locations":[{"start":{"line":287,"column":11},"end":{"line":287,"column":25}},{"start":{"line":287,"column":29},"end":{"line":287,"column":36}},{"start":{"line":287,"column":41},"end":{"line":287,"column":54}}],"line":287},"39":{"loc":{"start":{"line":291,"column":23},"end":{"line":291,"column":45}},"type":"binary-expr","locations":[{"start":{"line":291,"column":23},"end":{"line":291,"column":39}},{"start":{"line":291,"column":43},"end":{"line":291,"column":45}}],"line":291},"40":{"loc":{"start":{"line":295,"column":6},"end":{"line":298,"column":7}},"type":"if","locations":[{"start":{"line":295,"column":6},"end":{"line":298,"column":7}},{"start":{},"end":{}}],"line":295},"41":{"loc":{"start":{"line":295,"column":10},"end":{"line":295,"column":65}},"type":"binary-expr","locations":[{"start":{"line":295,"column":10},"end":{"line":295,"column":23}},{"start":{"line":295,"column":27},"end":{"line":295,"column":65}}],"line":295},"42":{"loc":{"start":{"line":299,"column":6},"end":{"line":302,"column":7}},"type":"if","locations":[{"start":{"line":299,"column":6},"end":{"line":302,"column":7}},{"start":{},"end":{}}],"line":299},"43":{"loc":{"start":{"line":299,"column":10},"end":{"line":299,"column":70}},"type":"binary-expr","locations":[{"start":{"line":299,"column":10},"end":{"line":299,"column":27}},{"start":{"line":299,"column":31},"end":{"line":299,"column":70}}],"line":299},"44":{"loc":{"start":{"line":305,"column":6},"end":{"line":314,"column":7}},"type":"if","locations":[{"start":{"line":305,"column":6},"end":{"line":314,"column":7}},{"start":{"line":308,"column":13},"end":{"line":314,"column":7}}],"line":305},"45":{"loc":{"start":{"line":305,"column":10},"end":{"line":305,"column":155}},"type":"binary-expr","locations":[{"start":{"line":305,"column":10},"end":{"line":305,"column":30}},{"start":{"line":305,"column":34},"end":{"line":305,"column":107}},{"start":{"line":305,"column":111},"end":{"line":305,"column":155}}],"line":305},"46":{"loc":{"start":{"line":308,"column":13},"end":{"line":314,"column":7}},"type":"if","locations":[{"start":{"line":308,"column":13},"end":{"line":314,"column":7}},{"start":{"line":310,"column":13},"end":{"line":314,"column":7}}],"line":308},"47":{"loc":{"start":{"line":308,"column":17},"end":{"line":308,"column":128}},"type":"binary-expr","locations":[{"start":{"line":308,"column":17},"end":{"line":308,"column":62}},{"start":{"line":308,"column":66},"end":{"line":308,"column":128}}],"line":308},"48":{"loc":{"start":{"line":310,"column":13},"end":{"line":314,"column":7}},"type":"if","locations":[{"start":{"line":310,"column":13},"end":{"line":314,"column":7}},{"start":{"line":312,"column":13},"end":{"line":314,"column":7}}],"line":310},"49":{"loc":{"start":{"line":312,"column":13},"end":{"line":314,"column":7}},"type":"if","locations":[{"start":{"line":312,"column":13},"end":{"line":314,"column":7}},{"start":{},"end":{}}],"line":312},"50":{"loc":{"start":{"line":315,"column":6},"end":{"line":317,"column":7}},"type":"if","locations":[{"start":{"line":315,"column":6},"end":{"line":317,"column":7}},{"start":{},"end":{}}],"line":315},"51":{"loc":{"start":{"line":315,"column":10},"end":{"line":315,"column":66}},"type":"binary-expr","locations":[{"start":{"line":315,"column":10},"end":{"line":315,"column":23}},{"start":{"line":315,"column":27},"end":{"line":315,"column":66}}],"line":315},"52":{"loc":{"start":{"line":337,"column":11},"end":{"line":337,"column":104}},"type":"binary-expr","locations":[{"start":{"line":337,"column":11},"end":{"line":337,"column":46}},{"start":{"line":337,"column":50},"end":{"line":337,"column":75}},{"start":{"line":337,"column":79},"end":{"line":337,"column":104}}],"line":337},"53":{"loc":{"start":{"line":349,"column":6},"end":{"line":372,"column":7}},"type":"if","locations":[{"start":{"line":349,"column":6},"end":{"line":372,"column":7}},{"start":{"line":362,"column":13},"end":{"line":372,"column":7}}],"line":349},"54":{"loc":{"start":{"line":351,"column":8},"end":{"line":360,"column":9}},"type":"if","locations":[{"start":{"line":351,"column":8},"end":{"line":360,"column":9}},{"start":{},"end":{}}],"line":351},"55":{"loc":{"start":{"line":351,"column":12},"end":{"line":351,"column":151}},"type":"binary-expr","locations":[{"start":{"line":351,"column":12},"end":{"line":351,"column":51}},{"start":{"line":351,"column":55},"end":{"line":351,"column":70}},{"start":{"line":351,"column":74},"end":{"line":351,"column":101}},{"start":{"line":351,"column":105},"end":{"line":351,"column":151}}],"line":351},"56":{"loc":{"start":{"line":353,"column":10},"end":{"line":359,"column":11}},"type":"if","locations":[{"start":{"line":353,"column":10},"end":{"line":359,"column":11}},{"start":{},"end":{}}],"line":353},"57":{"loc":{"start":{"line":365,"column":8},"end":{"line":370,"column":9}},"type":"if","locations":[{"start":{"line":365,"column":8},"end":{"line":370,"column":9}},{"start":{},"end":{}}],"line":365},"58":{"loc":{"start":{"line":365,"column":12},"end":{"line":365,"column":225}},"type":"binary-expr","locations":[{"start":{"line":365,"column":12},"end":{"line":365,"column":44}},{"start":{"line":365,"column":48},"end":{"line":365,"column":72}},{"start":{"line":365,"column":76},"end":{"line":365,"column":95}},{"start":{"line":365,"column":99},"end":{"line":365,"column":130}},{"start":{"line":365,"column":134},"end":{"line":365,"column":225}}],"line":365},"59":{"loc":{"start":{"line":383,"column":6},"end":{"line":411,"column":7}},"type":"if","locations":[{"start":{"line":383,"column":6},"end":{"line":411,"column":7}},{"start":{},"end":{}}],"line":383},"60":{"loc":{"start":{"line":386,"column":8},"end":{"line":410,"column":9}},"type":"if","locations":[{"start":{"line":386,"column":8},"end":{"line":410,"column":9}},{"start":{},"end":{}}],"line":386},"61":{"loc":{"start":{"line":389,"column":10},"end":{"line":409,"column":11}},"type":"if","locations":[{"start":{"line":389,"column":10},"end":{"line":409,"column":11}},{"start":{},"end":{}}],"line":389},"62":{"loc":{"start":{"line":423,"column":29},"end":{"line":423,"column":51}},"type":"default-arg","locations":[{"start":{"line":423,"column":47},"end":{"line":423,"column":51}}],"line":423},"63":{"loc":{"start":{"line":424,"column":4},"end":{"line":430,"column":5}},"type":"if","locations":[{"start":{"line":424,"column":4},"end":{"line":430,"column":5}},{"start":{},"end":{}}],"line":424},"64":{"loc":{"start":{"line":427,"column":6},"end":{"line":429,"column":7}},"type":"if","locations":[{"start":{"line":427,"column":6},"end":{"line":429,"column":7}},{"start":{},"end":{}}],"line":427},"65":{"loc":{"start":{"line":427,"column":10},"end":{"line":427,"column":52}},"type":"binary-expr","locations":[{"start":{"line":427,"column":10},"end":{"line":427,"column":19}},{"start":{"line":427,"column":23},"end":{"line":427,"column":52}}],"line":427},"66":{"loc":{"start":{"line":435,"column":4},"end":{"line":437,"column":5}},"type":"if","locations":[{"start":{"line":435,"column":4},"end":{"line":437,"column":5}},{"start":{},"end":{}}],"line":435},"67":{"loc":{"start":{"line":435,"column":8},"end":{"line":435,"column":63}},"type":"binary-expr","locations":[{"start":{"line":435,"column":8},"end":{"line":435,"column":33}},{"start":{"line":435,"column":37},"end":{"line":435,"column":63}}],"line":435},"68":{"loc":{"start":{"line":441,"column":4},"end":{"line":446,"column":5}},"type":"if","locations":[{"start":{"line":441,"column":4},"end":{"line":446,"column":5}},{"start":{},"end":{}}],"line":441},"69":{"loc":{"start":{"line":447,"column":4},"end":{"line":454,"column":5}},"type":"if","locations":[{"start":{"line":447,"column":4},"end":{"line":454,"column":5}},{"start":{},"end":{}}],"line":447},"70":{"loc":{"start":{"line":451,"column":6},"end":{"line":453,"column":7}},"type":"if","locations":[{"start":{"line":451,"column":6},"end":{"line":453,"column":7}},{"start":{},"end":{}}],"line":451},"71":{"loc":{"start":{"line":456,"column":4},"end":{"line":458,"column":5}},"type":"if","locations":[{"start":{"line":456,"column":4},"end":{"line":458,"column":5}},{"start":{},"end":{}}],"line":456},"72":{"loc":{"start":{"line":459,"column":4},"end":{"line":465,"column":5}},"type":"if","locations":[{"start":{"line":459,"column":4},"end":{"line":465,"column":5}},{"start":{},"end":{}}],"line":459},"73":{"loc":{"start":{"line":461,"column":6},"end":{"line":463,"column":7}},"type":"if","locations":[{"start":{"line":461,"column":6},"end":{"line":463,"column":7}},{"start":{},"end":{}}],"line":461},"74":{"loc":{"start":{"line":466,"column":4},"end":{"line":468,"column":5}},"type":"if","locations":[{"start":{"line":466,"column":4},"end":{"line":468,"column":5}},{"start":{},"end":{}}],"line":466},"75":{"loc":{"start":{"line":474,"column":4},"end":{"line":476,"column":5}},"type":"if","locations":[{"start":{"line":474,"column":4},"end":{"line":476,"column":5}},{"start":{},"end":{}}],"line":474},"76":{"loc":{"start":{"line":483,"column":6},"end":{"line":525,"column":7}},"type":"if","locations":[{"start":{"line":483,"column":6},"end":{"line":525,"column":7}},{"start":{"line":522,"column":13},"end":{"line":525,"column":7}}],"line":483},"77":{"loc":{"start":{"line":485,"column":8},"end":{"line":487,"column":9}},"type":"if","locations":[{"start":{"line":485,"column":8},"end":{"line":487,"column":9}},{"start":{},"end":{}}],"line":485},"78":{"loc":{"start":{"line":488,"column":8},"end":{"line":521,"column":9}},"type":"if","locations":[{"start":{"line":488,"column":8},"end":{"line":521,"column":9}},{"start":{"line":512,"column":15},"end":{"line":521,"column":9}}],"line":488},"79":{"loc":{"start":{"line":489,"column":10},"end":{"line":491,"column":11}},"type":"if","locations":[{"start":{"line":489,"column":10},"end":{"line":491,"column":11}},{"start":{},"end":{}}],"line":489},"80":{"loc":{"start":{"line":489,"column":14},"end":{"line":489,"column":88}},"type":"binary-expr","locations":[{"start":{"line":489,"column":14},"end":{"line":489,"column":41}},{"start":{"line":489,"column":45},"end":{"line":489,"column":88}}],"line":489},"81":{"loc":{"start":{"line":492,"column":10},"end":{"line":494,"column":11}},"type":"if","locations":[{"start":{"line":492,"column":10},"end":{"line":494,"column":11}},{"start":{},"end":{}}],"line":492},"82":{"loc":{"start":{"line":492,"column":14},"end":{"line":492,"column":120}},"type":"binary-expr","locations":[{"start":{"line":492,"column":14},"end":{"line":492,"column":41}},{"start":{"line":492,"column":45},"end":{"line":492,"column":73}},{"start":{"line":492,"column":77},"end":{"line":492,"column":120}}],"line":492},"83":{"loc":{"start":{"line":497,"column":12},"end":{"line":499,"column":13}},"type":"if","locations":[{"start":{"line":497,"column":12},"end":{"line":499,"column":13}},{"start":{},"end":{}}],"line":497},"84":{"loc":{"start":{"line":497,"column":16},"end":{"line":497,"column":69}},"type":"binary-expr","locations":[{"start":{"line":497,"column":16},"end":{"line":497,"column":27}},{"start":{"line":497,"column":31},"end":{"line":497,"column":69}}],"line":497},"85":{"loc":{"start":{"line":502,"column":12},"end":{"line":504,"column":13}},"type":"if","locations":[{"start":{"line":502,"column":12},"end":{"line":504,"column":13}},{"start":{},"end":{}}],"line":502},"86":{"loc":{"start":{"line":502,"column":16},"end":{"line":502,"column":52}},"type":"binary-expr","locations":[{"start":{"line":502,"column":16},"end":{"line":502,"column":35}},{"start":{"line":502,"column":39},"end":{"line":502,"column":52}}],"line":502},"87":{"loc":{"start":{"line":505,"column":12},"end":{"line":509,"column":13}},"type":"if","locations":[{"start":{"line":505,"column":12},"end":{"line":509,"column":13}},{"start":{"line":507,"column":19},"end":{"line":509,"column":13}}],"line":505},"88":{"loc":{"start":{"line":512,"column":15},"end":{"line":521,"column":9}},"type":"if","locations":[{"start":{"line":512,"column":15},"end":{"line":521,"column":9}},{"start":{"line":514,"column":15},"end":{"line":521,"column":9}}],"line":512},"89":{"loc":{"start":{"line":514,"column":15},"end":{"line":521,"column":9}},"type":"if","locations":[{"start":{"line":514,"column":15},"end":{"line":521,"column":9}},{"start":{"line":516,"column":15},"end":{"line":521,"column":9}}],"line":514},"90":{"loc":{"start":{"line":517,"column":10},"end":{"line":519,"column":11}},"type":"if","locations":[{"start":{"line":517,"column":10},"end":{"line":519,"column":11}},{"start":{},"end":{}}],"line":517},"91":{"loc":{"start":{"line":527,"column":4},"end":{"line":529,"column":5}},"type":"if","locations":[{"start":{"line":527,"column":4},"end":{"line":529,"column":5}},{"start":{},"end":{}}],"line":527},"92":{"loc":{"start":{"line":537,"column":6},"end":{"line":539,"column":7}},"type":"if","locations":[{"start":{"line":537,"column":6},"end":{"line":539,"column":7}},{"start":{},"end":{}}],"line":537},"93":{"loc":{"start":{"line":537,"column":10},"end":{"line":537,"column":126}},"type":"binary-expr","locations":[{"start":{"line":537,"column":10},"end":{"line":537,"column":47}},{"start":{"line":537,"column":52},"end":{"line":537,"column":86}},{"start":{"line":537,"column":90},"end":{"line":537,"column":125}}],"line":537},"94":{"loc":{"start":{"line":546,"column":4},"end":{"line":548,"column":5}},"type":"if","locations":[{"start":{"line":546,"column":4},"end":{"line":548,"column":5}},{"start":{},"end":{}}],"line":546},"95":{"loc":{"start":{"line":549,"column":4},"end":{"line":551,"column":5}},"type":"if","locations":[{"start":{"line":549,"column":4},"end":{"line":551,"column":5}},{"start":{},"end":{}}],"line":549},"96":{"loc":{"start":{"line":554,"column":6},"end":{"line":556,"column":7}},"type":"if","locations":[{"start":{"line":554,"column":6},"end":{"line":556,"column":7}},{"start":{},"end":{}}],"line":554},"97":{"loc":{"start":{"line":557,"column":6},"end":{"line":560,"column":7}},"type":"if","locations":[{"start":{"line":557,"column":6},"end":{"line":560,"column":7}},{"start":{},"end":{}}],"line":557},"98":{"loc":{"start":{"line":565,"column":11},"end":{"line":565,"column":73}},"type":"binary-expr","locations":[{"start":{"line":565,"column":11},"end":{"line":565,"column":44}},{"start":{"line":565,"column":48},"end":{"line":565,"column":73}}],"line":565},"99":{"loc":{"start":{"line":571,"column":4},"end":{"line":573,"column":5}},"type":"if","locations":[{"start":{"line":571,"column":4},"end":{"line":573,"column":5}},{"start":{},"end":{}}],"line":571},"100":{"loc":{"start":{"line":574,"column":4},"end":{"line":576,"column":5}},"type":"if","locations":[{"start":{"line":574,"column":4},"end":{"line":576,"column":5}},{"start":{},"end":{}}],"line":574},"101":{"loc":{"start":{"line":580,"column":4},"end":{"line":582,"column":5}},"type":"if","locations":[{"start":{"line":580,"column":4},"end":{"line":582,"column":5}},{"start":{},"end":{}}],"line":580},"102":{"loc":{"start":{"line":583,"column":4},"end":{"line":588,"column":5}},"type":"if","locations":[{"start":{"line":583,"column":4},"end":{"line":588,"column":5}},{"start":{},"end":{}}],"line":583},"103":{"loc":{"start":{"line":585,"column":6},"end":{"line":587,"column":7}},"type":"if","locations":[{"start":{"line":585,"column":6},"end":{"line":587,"column":7}},{"start":{},"end":{}}],"line":585},"104":{"loc":{"start":{"line":585,"column":10},"end":{"line":585,"column":80}},"type":"binary-expr","locations":[{"start":{"line":585,"column":10},"end":{"line":585,"column":41}},{"start":{"line":585,"column":45},"end":{"line":585,"column":80}}],"line":585},"105":{"loc":{"start":{"line":597,"column":15},"end":{"line":597,"column":23}},"type":"default-arg","locations":[{"start":{"line":597,"column":22},"end":{"line":597,"column":23}}],"line":597},"106":{"loc":{"start":{"line":666,"column":4},"end":{"line":671,"column":5}},"type":"if","locations":[{"start":{"line":666,"column":4},"end":{"line":671,"column":5}},{"start":{},"end":{}}],"line":666},"107":{"loc":{"start":{"line":666,"column":8},"end":{"line":666,"column":39}},"type":"binary-expr","locations":[{"start":{"line":666,"column":8},"end":{"line":666,"column":16}},{"start":{"line":666,"column":20},"end":{"line":666,"column":39}}],"line":666},"108":{"loc":{"start":{"line":668,"column":6},"end":{"line":670,"column":7}},"type":"if","locations":[{"start":{"line":668,"column":6},"end":{"line":670,"column":7}},{"start":{},"end":{}}],"line":668},"109":{"loc":{"start":{"line":676,"column":4},"end":{"line":679,"column":5}},"type":"if","locations":[{"start":{"line":676,"column":4},"end":{"line":679,"column":5}},{"start":{},"end":{}}],"line":676},"110":{"loc":{"start":{"line":676,"column":8},"end":{"line":676,"column":39}},"type":"binary-expr","locations":[{"start":{"line":676,"column":8},"end":{"line":676,"column":16}},{"start":{"line":676,"column":20},"end":{"line":676,"column":39}}],"line":676},"111":{"loc":{"start":{"line":684,"column":4},"end":{"line":687,"column":5}},"type":"if","locations":[{"start":{"line":684,"column":4},"end":{"line":687,"column":5}},{"start":{},"end":{}}],"line":684},"112":{"loc":{"start":{"line":693,"column":4},"end":{"line":709,"column":5}},"type":"if","locations":[{"start":{"line":693,"column":4},"end":{"line":709,"column":5}},{"start":{"line":701,"column":11},"end":{"line":709,"column":5}}],"line":693},"113":{"loc":{"start":{"line":693,"column":8},"end":{"line":693,"column":75}},"type":"binary-expr","locations":[{"start":{"line":693,"column":8},"end":{"line":693,"column":14}},{"start":{"line":693,"column":18},"end":{"line":693,"column":75}}],"line":693},"114":{"loc":{"start":{"line":694,"column":6},"end":{"line":700,"column":7}},"type":"if","locations":[{"start":{"line":694,"column":6},"end":{"line":700,"column":7}},{"start":{},"end":{}}],"line":694},"115":{"loc":{"start":{"line":696,"column":8},"end":{"line":698,"column":9}},"type":"if","locations":[{"start":{"line":696,"column":8},"end":{"line":698,"column":9}},{"start":{},"end":{}}],"line":696},"116":{"loc":{"start":{"line":702,"column":6},"end":{"line":708,"column":7}},"type":"if","locations":[{"start":{"line":702,"column":6},"end":{"line":708,"column":7}},{"start":{},"end":{}}],"line":702},"117":{"loc":{"start":{"line":704,"column":8},"end":{"line":706,"column":9}},"type":"if","locations":[{"start":{"line":704,"column":8},"end":{"line":706,"column":9}},{"start":{},"end":{}}],"line":704},"118":{"loc":{"start":{"line":712,"column":6},"end":{"line":714,"column":7}},"type":"if","locations":[{"start":{"line":712,"column":6},"end":{"line":714,"column":7}},{"start":{},"end":{}}],"line":712},"119":{"loc":{"start":{"line":715,"column":6},"end":{"line":719,"column":7}},"type":"if","locations":[{"start":{"line":715,"column":6},"end":{"line":719,"column":7}},{"start":{"line":717,"column":13},"end":{"line":719,"column":7}}],"line":715},"120":{"loc":{"start":{"line":729,"column":32},"end":{"line":729,"column":49}},"type":"default-arg","locations":[{"start":{"line":729,"column":44},"end":{"line":729,"column":49}}],"line":729},"121":{"loc":{"start":{"line":731,"column":4},"end":{"line":744,"column":5}},"type":"if","locations":[{"start":{"line":731,"column":4},"end":{"line":744,"column":5}},{"start":{},"end":{}}],"line":731},"122":{"loc":{"start":{"line":733,"column":6},"end":{"line":738,"column":7}},"type":"if","locations":[{"start":{"line":733,"column":6},"end":{"line":738,"column":7}},{"start":{},"end":{}}],"line":733},"123":{"loc":{"start":{"line":733,"column":10},"end":{"line":733,"column":61}},"type":"binary-expr","locations":[{"start":{"line":733,"column":10},"end":{"line":733,"column":39}},{"start":{"line":733,"column":43},"end":{"line":733,"column":61}}],"line":733},"124":{"loc":{"start":{"line":739,"column":6},"end":{"line":743,"column":7}},"type":"if","locations":[{"start":{"line":739,"column":6},"end":{"line":743,"column":7}},{"start":{"line":741,"column":13},"end":{"line":743,"column":7}}],"line":739},"125":{"loc":{"start":{"line":745,"column":4},"end":{"line":748,"column":5}},"type":"if","locations":[{"start":{"line":745,"column":4},"end":{"line":748,"column":5}},{"start":{},"end":{}}],"line":745},"126":{"loc":{"start":{"line":750,"column":37},"end":{"line":750,"column":54}},"type":"default-arg","locations":[{"start":{"line":750,"column":49},"end":{"line":750,"column":54}}],"line":750},"127":{"loc":{"start":{"line":755,"column":46},"end":{"line":755,"column":63}},"type":"default-arg","locations":[{"start":{"line":755,"column":58},"end":{"line":755,"column":63}}],"line":755},"128":{"loc":{"start":{"line":779,"column":22},"end":{"line":779,"column":81}},"type":"binary-expr","locations":[{"start":{"line":779,"column":22},"end":{"line":779,"column":75}},{"start":{"line":779,"column":79},"end":{"line":779,"column":81}}],"line":779},"129":{"loc":{"start":{"line":781,"column":4},"end":{"line":783,"column":5}},"type":"if","locations":[{"start":{"line":781,"column":4},"end":{"line":783,"column":5}},{"start":{},"end":{}}],"line":781},"130":{"loc":{"start":{"line":781,"column":8},"end":{"line":781,"column":57}},"type":"binary-expr","locations":[{"start":{"line":781,"column":8},"end":{"line":781,"column":21}},{"start":{"line":781,"column":25},"end":{"line":781,"column":57}}],"line":781},"131":{"loc":{"start":{"line":784,"column":4},"end":{"line":786,"column":5}},"type":"if","locations":[{"start":{"line":784,"column":4},"end":{"line":786,"column":5}},{"start":{},"end":{}}],"line":784},"132":{"loc":{"start":{"line":784,"column":8},"end":{"line":784,"column":55}},"type":"binary-expr","locations":[{"start":{"line":784,"column":8},"end":{"line":784,"column":20}},{"start":{"line":784,"column":24},"end":{"line":784,"column":55}}],"line":784},"133":{"loc":{"start":{"line":787,"column":4},"end":{"line":792,"column":5}},"type":"if","locations":[{"start":{"line":787,"column":4},"end":{"line":792,"column":5}},{"start":{},"end":{}}],"line":787},"134":{"loc":{"start":{"line":789,"column":6},"end":{"line":791,"column":7}},"type":"if","locations":[{"start":{"line":789,"column":6},"end":{"line":791,"column":7}},{"start":{},"end":{}}],"line":789},"135":{"loc":{"start":{"line":789,"column":10},"end":{"line":789,"column":79}},"type":"binary-expr","locations":[{"start":{"line":789,"column":10},"end":{"line":789,"column":30}},{"start":{"line":789,"column":34},"end":{"line":789,"column":79}}],"line":789},"136":{"loc":{"start":{"line":799,"column":6},"end":{"line":801,"column":7}},"type":"if","locations":[{"start":{"line":799,"column":6},"end":{"line":801,"column":7}},{"start":{},"end":{}}],"line":799},"137":{"loc":{"start":{"line":810,"column":6},"end":{"line":815,"column":7}},"type":"if","locations":[{"start":{"line":810,"column":6},"end":{"line":815,"column":7}},{"start":{},"end":{}}],"line":810},"138":{"loc":{"start":{"line":812,"column":8},"end":{"line":814,"column":9}},"type":"if","locations":[{"start":{"line":812,"column":8},"end":{"line":814,"column":9}},{"start":{},"end":{}}],"line":812},"139":{"loc":{"start":{"line":824,"column":6},"end":{"line":826,"column":7}},"type":"if","locations":[{"start":{"line":824,"column":6},"end":{"line":826,"column":7}},{"start":{},"end":{}}],"line":824},"140":{"loc":{"start":{"line":831,"column":4},"end":{"line":836,"column":5}},"type":"if","locations":[{"start":{"line":831,"column":4},"end":{"line":836,"column":5}},{"start":{},"end":{}}],"line":831},"141":{"loc":{"start":{"line":833,"column":6},"end":{"line":833,"column":139}},"type":"binary-expr","locations":[{"start":{"line":833,"column":6},"end":{"line":833,"column":44}},{"start":{"line":833,"column":48},"end":{"line":833,"column":79}},{"start":{"line":833,"column":83},"end":{"line":833,"column":118}},{"start":{"line":833,"column":122},"end":{"line":833,"column":139}}],"line":833},"142":{"loc":{"start":{"line":840,"column":4},"end":{"line":842,"column":5}},"type":"if","locations":[{"start":{"line":840,"column":4},"end":{"line":842,"column":5}},{"start":{},"end":{}}],"line":840},"143":{"loc":{"start":{"line":840,"column":8},"end":{"line":840,"column":99}},"type":"binary-expr","locations":[{"start":{"line":840,"column":8},"end":{"line":840,"column":41}},{"start":{"line":840,"column":45},"end":{"line":840,"column":99}}],"line":840},"144":{"loc":{"start":{"line":846,"column":4},"end":{"line":848,"column":5}},"type":"if","locations":[{"start":{"line":846,"column":4},"end":{"line":848,"column":5}},{"start":{},"end":{}}],"line":846},"145":{"loc":{"start":{"line":869,"column":4},"end":{"line":871,"column":5}},"type":"if","locations":[{"start":{"line":869,"column":4},"end":{"line":871,"column":5}},{"start":{},"end":{}}],"line":869},"146":{"loc":{"start":{"line":872,"column":4},"end":{"line":874,"column":5}},"type":"if","locations":[{"start":{"line":872,"column":4},"end":{"line":874,"column":5}},{"start":{},"end":{}}],"line":872},"147":{"loc":{"start":{"line":875,"column":4},"end":{"line":877,"column":5}},"type":"if","locations":[{"start":{"line":875,"column":4},"end":{"line":877,"column":5}},{"start":{},"end":{}}],"line":875},"148":{"loc":{"start":{"line":878,"column":4},"end":{"line":880,"column":5}},"type":"if","locations":[{"start":{"line":878,"column":4},"end":{"line":880,"column":5}},{"start":{},"end":{}}],"line":878},"149":{"loc":{"start":{"line":881,"column":4},"end":{"line":883,"column":5}},"type":"if","locations":[{"start":{"line":881,"column":4},"end":{"line":883,"column":5}},{"start":{},"end":{}}],"line":881},"150":{"loc":{"start":{"line":888,"column":4},"end":{"line":890,"column":5}},"type":"if","locations":[{"start":{"line":888,"column":4},"end":{"line":890,"column":5}},{"start":{},"end":{}}],"line":888},"151":{"loc":{"start":{"line":895,"column":4},"end":{"line":897,"column":5}},"type":"if","locations":[{"start":{"line":895,"column":4},"end":{"line":897,"column":5}},{"start":{},"end":{}}],"line":895},"152":{"loc":{"start":{"line":902,"column":4},"end":{"line":904,"column":5}},"type":"if","locations":[{"start":{"line":902,"column":4},"end":{"line":904,"column":5}},{"start":{},"end":{}}],"line":902},"153":{"loc":{"start":{"line":911,"column":6},"end":{"line":913,"column":7}},"type":"if","locations":[{"start":{"line":911,"column":6},"end":{"line":913,"column":7}},{"start":{},"end":{}}],"line":911},"154":{"loc":{"start":{"line":919,"column":4},"end":{"line":921,"column":5}},"type":"if","locations":[{"start":{"line":919,"column":4},"end":{"line":921,"column":5}},{"start":{},"end":{}}],"line":919},"155":{"loc":{"start":{"line":926,"column":4},"end":{"line":928,"column":5}},"type":"if","locations":[{"start":{"line":926,"column":4},"end":{"line":928,"column":5}},{"start":{},"end":{}}],"line":926},"156":{"loc":{"start":{"line":931,"column":6},"end":{"line":933,"column":7}},"type":"if","locations":[{"start":{"line":931,"column":6},"end":{"line":933,"column":7}},{"start":{},"end":{}}],"line":931},"157":{"loc":{"start":{"line":934,"column":6},"end":{"line":1236,"column":7}},"type":"if","locations":[{"start":{"line":934,"column":6},"end":{"line":1236,"column":7}},{"start":{"line":948,"column":13},"end":{"line":1236,"column":7}}],"line":934},"158":{"loc":{"start":{"line":934,"column":10},"end":{"line":934,"column":219}},"type":"binary-expr","locations":[{"start":{"line":934,"column":10},"end":{"line":934,"column":45}},{"start":{"line":934,"column":49},"end":{"line":934,"column":78}},{"start":{"line":934,"column":82},"end":{"line":934,"column":111}},{"start":{"line":934,"column":115},"end":{"line":934,"column":135}},{"start":{"line":934,"column":139},"end":{"line":934,"column":166}},{"start":{"line":934,"column":170},"end":{"line":934,"column":219}}],"line":934},"159":{"loc":{"start":{"line":936,"column":8},"end":{"line":938,"column":9}},"type":"if","locations":[{"start":{"line":936,"column":8},"end":{"line":938,"column":9}},{"start":{},"end":{}}],"line":936},"160":{"loc":{"start":{"line":948,"column":13},"end":{"line":1236,"column":7}},"type":"if","locations":[{"start":{"line":948,"column":13},"end":{"line":1236,"column":7}},{"start":{"line":975,"column":13},"end":{"line":1236,"column":7}}],"line":948},"161":{"loc":{"start":{"line":948,"column":17},"end":{"line":948,"column":124}},"type":"binary-expr","locations":[{"start":{"line":948,"column":17},"end":{"line":948,"column":58}},{"start":{"line":948,"column":62},"end":{"line":948,"column":91}},{"start":{"line":948,"column":95},"end":{"line":948,"column":124}}],"line":948},"162":{"loc":{"start":{"line":949,"column":8},"end":{"line":974,"column":9}},"type":"if","locations":[{"start":{"line":949,"column":8},"end":{"line":974,"column":9}},{"start":{"line":970,"column":15},"end":{"line":974,"column":9}}],"line":949},"163":{"loc":{"start":{"line":949,"column":12},"end":{"line":949,"column":59}},"type":"binary-expr","locations":[{"start":{"line":949,"column":12},"end":{"line":949,"column":36}},{"start":{"line":949,"column":40},"end":{"line":949,"column":59}}],"line":949},"164":{"loc":{"start":{"line":950,"column":10},"end":{"line":953,"column":11}},"type":"if","locations":[{"start":{"line":950,"column":10},"end":{"line":953,"column":11}},{"start":{},"end":{}}],"line":950},"165":{"loc":{"start":{"line":957,"column":10},"end":{"line":969,"column":11}},"type":"if","locations":[{"start":{"line":957,"column":10},"end":{"line":969,"column":11}},{"start":{"line":967,"column":17},"end":{"line":969,"column":11}}],"line":957},"166":{"loc":{"start":{"line":957,"column":14},"end":{"line":957,"column":81}},"type":"binary-expr","locations":[{"start":{"line":957,"column":14},"end":{"line":957,"column":31}},{"start":{"line":957,"column":35},"end":{"line":957,"column":81}}],"line":957},"167":{"loc":{"start":{"line":958,"column":12},"end":{"line":960,"column":13}},"type":"if","locations":[{"start":{"line":958,"column":12},"end":{"line":960,"column":13}},{"start":{},"end":{}}],"line":958},"168":{"loc":{"start":{"line":958,"column":16},"end":{"line":958,"column":89}},"type":"binary-expr","locations":[{"start":{"line":958,"column":16},"end":{"line":958,"column":50}},{"start":{"line":958,"column":54},"end":{"line":958,"column":89}}],"line":958},"169":{"loc":{"start":{"line":967,"column":17},"end":{"line":969,"column":11}},"type":"if","locations":[{"start":{"line":967,"column":17},"end":{"line":969,"column":11}},{"start":{},"end":{}}],"line":967},"170":{"loc":{"start":{"line":975,"column":13},"end":{"line":1236,"column":7}},"type":"if","locations":[{"start":{"line":975,"column":13},"end":{"line":1236,"column":7}},{"start":{"line":1001,"column":13},"end":{"line":1236,"column":7}}],"line":975},"171":{"loc":{"start":{"line":975,"column":17},"end":{"line":975,"column":125}},"type":"binary-expr","locations":[{"start":{"line":975,"column":17},"end":{"line":975,"column":59}},{"start":{"line":975,"column":63},"end":{"line":975,"column":92}},{"start":{"line":975,"column":96},"end":{"line":975,"column":125}}],"line":975},"172":{"loc":{"start":{"line":976,"column":8},"end":{"line":978,"column":9}},"type":"if","locations":[{"start":{"line":976,"column":8},"end":{"line":978,"column":9}},{"start":{},"end":{}}],"line":976},"173":{"loc":{"start":{"line":982,"column":8},"end":{"line":999,"column":9}},"type":"if","locations":[{"start":{"line":982,"column":8},"end":{"line":999,"column":9}},{"start":{"line":984,"column":15},"end":{"line":999,"column":9}}],"line":982},"174":{"loc":{"start":{"line":984,"column":15},"end":{"line":999,"column":9}},"type":"if","locations":[{"start":{"line":984,"column":15},"end":{"line":999,"column":9}},{"start":{"line":997,"column":15},"end":{"line":999,"column":9}}],"line":984},"175":{"loc":{"start":{"line":986,"column":10},"end":{"line":996,"column":11}},"type":"if","locations":[{"start":{"line":986,"column":10},"end":{"line":996,"column":11}},{"start":{"line":992,"column":17},"end":{"line":996,"column":11}}],"line":986},"176":{"loc":{"start":{"line":986,"column":14},"end":{"line":986,"column":80}},"type":"binary-expr","locations":[{"start":{"line":986,"column":14},"end":{"line":986,"column":31}},{"start":{"line":986,"column":35},"end":{"line":986,"column":80}}],"line":986},"177":{"loc":{"start":{"line":987,"column":12},"end":{"line":989,"column":13}},"type":"if","locations":[{"start":{"line":987,"column":12},"end":{"line":989,"column":13}},{"start":{},"end":{}}],"line":987},"178":{"loc":{"start":{"line":987,"column":16},"end":{"line":987,"column":89}},"type":"binary-expr","locations":[{"start":{"line":987,"column":16},"end":{"line":987,"column":50}},{"start":{"line":987,"column":54},"end":{"line":987,"column":89}}],"line":987},"179":{"loc":{"start":{"line":993,"column":12},"end":{"line":995,"column":13}},"type":"if","locations":[{"start":{"line":993,"column":12},"end":{"line":995,"column":13}},{"start":{},"end":{}}],"line":993},"180":{"loc":{"start":{"line":993,"column":16},"end":{"line":993,"column":91}},"type":"binary-expr","locations":[{"start":{"line":993,"column":16},"end":{"line":993,"column":52}},{"start":{"line":993,"column":56},"end":{"line":993,"column":91}}],"line":993},"181":{"loc":{"start":{"line":1001,"column":13},"end":{"line":1236,"column":7}},"type":"if","locations":[{"start":{"line":1001,"column":13},"end":{"line":1236,"column":7}},{"start":{"line":1007,"column":13},"end":{"line":1236,"column":7}}],"line":1001},"182":{"loc":{"start":{"line":1001,"column":17},"end":{"line":1001,"column":123}},"type":"binary-expr","locations":[{"start":{"line":1001,"column":17},"end":{"line":1001,"column":57}},{"start":{"line":1001,"column":61},"end":{"line":1001,"column":90}},{"start":{"line":1001,"column":94},"end":{"line":1001,"column":123}}],"line":1001},"183":{"loc":{"start":{"line":1004,"column":8},"end":{"line":1006,"column":9}},"type":"if","locations":[{"start":{"line":1004,"column":8},"end":{"line":1006,"column":9}},{"start":{},"end":{}}],"line":1004},"184":{"loc":{"start":{"line":1007,"column":13},"end":{"line":1236,"column":7}},"type":"if","locations":[{"start":{"line":1007,"column":13},"end":{"line":1236,"column":7}},{"start":{"line":1012,"column":13},"end":{"line":1236,"column":7}}],"line":1007},"185":{"loc":{"start":{"line":1007,"column":17},"end":{"line":1007,"column":124}},"type":"binary-expr","locations":[{"start":{"line":1007,"column":17},"end":{"line":1007,"column":58}},{"start":{"line":1007,"column":62},"end":{"line":1007,"column":91}},{"start":{"line":1007,"column":95},"end":{"line":1007,"column":124}}],"line":1007},"186":{"loc":{"start":{"line":1012,"column":13},"end":{"line":1236,"column":7}},"type":"if","locations":[{"start":{"line":1012,"column":13},"end":{"line":1236,"column":7}},{"start":{"line":1018,"column":13},"end":{"line":1236,"column":7}}],"line":1012},"187":{"loc":{"start":{"line":1012,"column":17},"end":{"line":1012,"column":131}},"type":"binary-expr","locations":[{"start":{"line":1012,"column":17},"end":{"line":1012,"column":65}},{"start":{"line":1012,"column":69},"end":{"line":1012,"column":98}},{"start":{"line":1012,"column":102},"end":{"line":1012,"column":131}}],"line":1012},"188":{"loc":{"start":{"line":1013,"column":8},"end":{"line":1015,"column":9}},"type":"if","locations":[{"start":{"line":1013,"column":8},"end":{"line":1015,"column":9}},{"start":{},"end":{}}],"line":1013},"189":{"loc":{"start":{"line":1018,"column":13},"end":{"line":1236,"column":7}},"type":"if","locations":[{"start":{"line":1018,"column":13},"end":{"line":1236,"column":7}},{"start":{"line":1030,"column":13},"end":{"line":1236,"column":7}}],"line":1018},"190":{"loc":{"start":{"line":1018,"column":17},"end":{"line":1018,"column":132}},"type":"binary-expr","locations":[{"start":{"line":1018,"column":17},"end":{"line":1018,"column":66}},{"start":{"line":1018,"column":70},"end":{"line":1018,"column":99}},{"start":{"line":1018,"column":103},"end":{"line":1018,"column":132}}],"line":1018},"191":{"loc":{"start":{"line":1020,"column":8},"end":{"line":1029,"column":9}},"type":"if","locations":[{"start":{"line":1020,"column":8},"end":{"line":1029,"column":9}},{"start":{"line":1027,"column":15},"end":{"line":1029,"column":9}}],"line":1020},"192":{"loc":{"start":{"line":1022,"column":10},"end":{"line":1025,"column":11}},"type":"if","locations":[{"start":{"line":1022,"column":10},"end":{"line":1025,"column":11}},{"start":{},"end":{}}],"line":1022},"193":{"loc":{"start":{"line":1030,"column":13},"end":{"line":1236,"column":7}},"type":"if","locations":[{"start":{"line":1030,"column":13},"end":{"line":1236,"column":7}},{"start":{"line":1042,"column":13},"end":{"line":1236,"column":7}}],"line":1030},"194":{"loc":{"start":{"line":1030,"column":17},"end":{"line":1030,"column":126}},"type":"binary-expr","locations":[{"start":{"line":1030,"column":17},"end":{"line":1030,"column":62}},{"start":{"line":1030,"column":66},"end":{"line":1030,"column":95}},{"start":{"line":1030,"column":99},"end":{"line":1030,"column":126}}],"line":1030},"195":{"loc":{"start":{"line":1031,"column":8},"end":{"line":1040,"column":9}},"type":"if","locations":[{"start":{"line":1031,"column":8},"end":{"line":1040,"column":9}},{"start":{"line":1033,"column":15},"end":{"line":1040,"column":9}}],"line":1031},"196":{"loc":{"start":{"line":1035,"column":10},"end":{"line":1039,"column":11}},"type":"if","locations":[{"start":{"line":1035,"column":10},"end":{"line":1039,"column":11}},{"start":{"line":1037,"column":17},"end":{"line":1039,"column":11}}],"line":1035},"197":{"loc":{"start":{"line":1035,"column":14},"end":{"line":1035,"column":84}},"type":"binary-expr","locations":[{"start":{"line":1035,"column":14},"end":{"line":1035,"column":31}},{"start":{"line":1035,"column":35},"end":{"line":1035,"column":84}}],"line":1035},"198":{"loc":{"start":{"line":1042,"column":13},"end":{"line":1236,"column":7}},"type":"if","locations":[{"start":{"line":1042,"column":13},"end":{"line":1236,"column":7}},{"start":{"line":1063,"column":13},"end":{"line":1236,"column":7}}],"line":1042},"199":{"loc":{"start":{"line":1042,"column":17},"end":{"line":1042,"column":95}},"type":"binary-expr","locations":[{"start":{"line":1042,"column":17},"end":{"line":1042,"column":62}},{"start":{"line":1042,"column":66},"end":{"line":1042,"column":95}}],"line":1042},"200":{"loc":{"start":{"line":1043,"column":8},"end":{"line":1061,"column":9}},"type":"if","locations":[{"start":{"line":1043,"column":8},"end":{"line":1061,"column":9}},{"start":{"line":1048,"column":15},"end":{"line":1061,"column":9}}],"line":1043},"201":{"loc":{"start":{"line":1045,"column":10},"end":{"line":1047,"column":11}},"type":"if","locations":[{"start":{"line":1045,"column":10},"end":{"line":1047,"column":11}},{"start":{},"end":{}}],"line":1045},"202":{"loc":{"start":{"line":1050,"column":10},"end":{"line":1060,"column":11}},"type":"if","locations":[{"start":{"line":1050,"column":10},"end":{"line":1060,"column":11}},{"start":{"line":1058,"column":17},"end":{"line":1060,"column":11}}],"line":1050},"203":{"loc":{"start":{"line":1050,"column":14},"end":{"line":1050,"column":84}},"type":"binary-expr","locations":[{"start":{"line":1050,"column":14},"end":{"line":1050,"column":31}},{"start":{"line":1050,"column":35},"end":{"line":1050,"column":84}}],"line":1050},"204":{"loc":{"start":{"line":1063,"column":13},"end":{"line":1236,"column":7}},"type":"if","locations":[{"start":{"line":1063,"column":13},"end":{"line":1236,"column":7}},{"start":{"line":1099,"column":13},"end":{"line":1236,"column":7}}],"line":1063},"205":{"loc":{"start":{"line":1063,"column":17},"end":{"line":1063,"column":172}},"type":"binary-expr","locations":[{"start":{"line":1063,"column":17},"end":{"line":1063,"column":51}},{"start":{"line":1063,"column":55},"end":{"line":1063,"column":84}},{"start":{"line":1063,"column":88},"end":{"line":1063,"column":117}},{"start":{"line":1063,"column":121},"end":{"line":1063,"column":141}},{"start":{"line":1063,"column":145},"end":{"line":1063,"column":172}}],"line":1063},"206":{"loc":{"start":{"line":1064,"column":8},"end":{"line":1066,"column":9}},"type":"if","locations":[{"start":{"line":1064,"column":8},"end":{"line":1066,"column":9}},{"start":{},"end":{}}],"line":1064},"207":{"loc":{"start":{"line":1068,"column":8},"end":{"line":1098,"column":9}},"type":"if","locations":[{"start":{"line":1068,"column":8},"end":{"line":1098,"column":9}},{"start":{"line":1075,"column":15},"end":{"line":1098,"column":9}}],"line":1068},"208":{"loc":{"start":{"line":1068,"column":12},"end":{"line":1068,"column":73}},"type":"binary-expr","locations":[{"start":{"line":1068,"column":12},"end":{"line":1068,"column":32}},{"start":{"line":1068,"column":51},"end":{"line":1068,"column":73}}],"line":1068},"209":{"loc":{"start":{"line":1071,"column":10},"end":{"line":1073,"column":11}},"type":"if","locations":[{"start":{"line":1071,"column":10},"end":{"line":1073,"column":11}},{"start":{},"end":{}}],"line":1071},"210":{"loc":{"start":{"line":1071,"column":14},"end":{"line":1071,"column":113}},"type":"binary-expr","locations":[{"start":{"line":1071,"column":14},"end":{"line":1071,"column":48}},{"start":{"line":1071,"column":52},"end":{"line":1071,"column":87}},{"start":{"line":1071,"column":91},"end":{"line":1071,"column":113}}],"line":1071},"211":{"loc":{"start":{"line":1082,"column":10},"end":{"line":1092,"column":11}},"type":"if","locations":[{"start":{"line":1082,"column":10},"end":{"line":1092,"column":11}},{"start":{"line":1090,"column":17},"end":{"line":1092,"column":11}}],"line":1082},"212":{"loc":{"start":{"line":1082,"column":14},"end":{"line":1082,"column":68}},"type":"binary-expr","locations":[{"start":{"line":1082,"column":14},"end":{"line":1082,"column":23}},{"start":{"line":1082,"column":27},"end":{"line":1082,"column":68}}],"line":1082},"213":{"loc":{"start":{"line":1084,"column":12},"end":{"line":1086,"column":13}},"type":"if","locations":[{"start":{"line":1084,"column":12},"end":{"line":1086,"column":13}},{"start":{},"end":{}}],"line":1084},"214":{"loc":{"start":{"line":1099,"column":13},"end":{"line":1236,"column":7}},"type":"if","locations":[{"start":{"line":1099,"column":13},"end":{"line":1236,"column":7}},{"start":{"line":1166,"column":13},"end":{"line":1236,"column":7}}],"line":1099},"215":{"loc":{"start":{"line":1099,"column":17},"end":{"line":1099,"column":172}},"type":"binary-expr","locations":[{"start":{"line":1099,"column":17},"end":{"line":1099,"column":51}},{"start":{"line":1099,"column":55},"end":{"line":1099,"column":84}},{"start":{"line":1099,"column":88},"end":{"line":1099,"column":117}},{"start":{"line":1099,"column":121},"end":{"line":1099,"column":141}},{"start":{"line":1099,"column":145},"end":{"line":1099,"column":172}}],"line":1099},"216":{"loc":{"start":{"line":1111,"column":8},"end":{"line":1162,"column":9}},"type":"if","locations":[{"start":{"line":1111,"column":8},"end":{"line":1162,"column":9}},{"start":{"line":1157,"column":15},"end":{"line":1162,"column":9}}],"line":1111},"217":{"loc":{"start":{"line":1118,"column":10},"end":{"line":1122,"column":11}},"type":"if","locations":[{"start":{"line":1118,"column":10},"end":{"line":1122,"column":11}},{"start":{},"end":{}}],"line":1118},"218":{"loc":{"start":{"line":1123,"column":10},"end":{"line":1131,"column":11}},"type":"if","locations":[{"start":{"line":1123,"column":10},"end":{"line":1131,"column":11}},{"start":{},"end":{}}],"line":1123},"219":{"loc":{"start":{"line":1123,"column":14},"end":{"line":1123,"column":79}},"type":"binary-expr","locations":[{"start":{"line":1123,"column":14},"end":{"line":1123,"column":43}},{"start":{"line":1123,"column":47},"end":{"line":1123,"column":79}}],"line":1123},"220":{"loc":{"start":{"line":1126,"column":12},"end":{"line":1129,"column":13}},"type":"if","locations":[{"start":{"line":1126,"column":12},"end":{"line":1129,"column":13}},{"start":{},"end":{}}],"line":1126},"221":{"loc":{"start":{"line":1132,"column":10},"end":{"line":1134,"column":11}},"type":"if","locations":[{"start":{"line":1132,"column":10},"end":{"line":1134,"column":11}},{"start":{},"end":{}}],"line":1132},"222":{"loc":{"start":{"line":1136,"column":10},"end":{"line":1151,"column":11}},"type":"if","locations":[{"start":{"line":1136,"column":10},"end":{"line":1151,"column":11}},{"start":{"line":1147,"column":17},"end":{"line":1151,"column":11}}],"line":1136},"223":{"loc":{"start":{"line":1139,"column":12},"end":{"line":1146,"column":13}},"type":"if","locations":[{"start":{"line":1139,"column":12},"end":{"line":1146,"column":13}},{"start":{"line":1144,"column":19},"end":{"line":1146,"column":13}}],"line":1139},"224":{"loc":{"start":{"line":1141,"column":14},"end":{"line":1143,"column":15}},"type":"if","locations":[{"start":{"line":1141,"column":14},"end":{"line":1143,"column":15}},{"start":{},"end":{}}],"line":1141},"225":{"loc":{"start":{"line":1147,"column":17},"end":{"line":1151,"column":11}},"type":"if","locations":[{"start":{"line":1147,"column":17},"end":{"line":1151,"column":11}},{"start":{},"end":{}}],"line":1147},"226":{"loc":{"start":{"line":1159,"column":10},"end":{"line":1161,"column":11}},"type":"if","locations":[{"start":{"line":1159,"column":10},"end":{"line":1161,"column":11}},{"start":{},"end":{}}],"line":1159},"227":{"loc":{"start":{"line":1166,"column":13},"end":{"line":1236,"column":7}},"type":"if","locations":[{"start":{"line":1166,"column":13},"end":{"line":1236,"column":7}},{"start":{"line":1180,"column":13},"end":{"line":1236,"column":7}}],"line":1166},"228":{"loc":{"start":{"line":1166,"column":17},"end":{"line":1166,"column":245}},"type":"binary-expr","locations":[{"start":{"line":1166,"column":17},"end":{"line":1166,"column":52}},{"start":{"line":1166,"column":56},"end":{"line":1166,"column":124}},{"start":{"line":1166,"column":128},"end":{"line":1166,"column":157}},{"start":{"line":1166,"column":161},"end":{"line":1166,"column":190}},{"start":{"line":1166,"column":194},"end":{"line":1166,"column":221}},{"start":{"line":1166,"column":225},"end":{"line":1166,"column":245}}],"line":1166},"229":{"loc":{"start":{"line":1171,"column":8},"end":{"line":1176,"column":9}},"type":"if","locations":[{"start":{"line":1171,"column":8},"end":{"line":1176,"column":9}},{"start":{"line":1173,"column":15},"end":{"line":1176,"column":9}}],"line":1171},"230":{"loc":{"start":{"line":1173,"column":15},"end":{"line":1176,"column":9}},"type":"if","locations":[{"start":{"line":1173,"column":15},"end":{"line":1176,"column":9}},{"start":{},"end":{}}],"line":1173},"231":{"loc":{"start":{"line":1180,"column":13},"end":{"line":1236,"column":7}},"type":"if","locations":[{"start":{"line":1180,"column":13},"end":{"line":1236,"column":7}},{"start":{"line":1234,"column":13},"end":{"line":1236,"column":7}}],"line":1180},"232":{"loc":{"start":{"line":1180,"column":17},"end":{"line":1180,"column":175}},"type":"binary-expr","locations":[{"start":{"line":1180,"column":17},"end":{"line":1180,"column":54}},{"start":{"line":1180,"column":58},"end":{"line":1180,"column":87}},{"start":{"line":1180,"column":91},"end":{"line":1180,"column":120}},{"start":{"line":1180,"column":124},"end":{"line":1180,"column":151}},{"start":{"line":1180,"column":155},"end":{"line":1180,"column":175}}],"line":1180},"233":{"loc":{"start":{"line":1182,"column":8},"end":{"line":1216,"column":9}},"type":"if","locations":[{"start":{"line":1182,"column":8},"end":{"line":1216,"column":9}},{"start":{"line":1206,"column":15},"end":{"line":1216,"column":9}}],"line":1182},"234":{"loc":{"start":{"line":1182,"column":12},"end":{"line":1182,"column":71}},"type":"binary-expr","locations":[{"start":{"line":1182,"column":12},"end":{"line":1182,"column":49}},{"start":{"line":1182,"column":53},"end":{"line":1182,"column":71}}],"line":1182},"235":{"loc":{"start":{"line":1183,"column":29},"end":{"line":1183,"column":87}},"type":"binary-expr","locations":[{"start":{"line":1183,"column":29},"end":{"line":1183,"column":81}},{"start":{"line":1183,"column":85},"end":{"line":1183,"column":87}}],"line":1183},"236":{"loc":{"start":{"line":1184,"column":29},"end":{"line":1184,"column":83}},"type":"binary-expr","locations":[{"start":{"line":1184,"column":29},"end":{"line":1184,"column":77}},{"start":{"line":1184,"column":81},"end":{"line":1184,"column":83}}],"line":1184},"237":{"loc":{"start":{"line":1185,"column":10},"end":{"line":1205,"column":11}},"type":"if","locations":[{"start":{"line":1185,"column":10},"end":{"line":1205,"column":11}},{"start":{"line":1192,"column":17},"end":{"line":1205,"column":11}}],"line":1185},"238":{"loc":{"start":{"line":1185,"column":14},"end":{"line":1185,"column":105}},"type":"binary-expr","locations":[{"start":{"line":1185,"column":14},"end":{"line":1185,"column":68}},{"start":{"line":1185,"column":72},"end":{"line":1185,"column":105}}],"line":1185},"239":{"loc":{"start":{"line":1192,"column":17},"end":{"line":1205,"column":11}},"type":"if","locations":[{"start":{"line":1192,"column":17},"end":{"line":1205,"column":11}},{"start":{},"end":{}}],"line":1192},"240":{"loc":{"start":{"line":1193,"column":12},"end":{"line":1204,"column":13}},"type":"if","locations":[{"start":{"line":1193,"column":12},"end":{"line":1204,"column":13}},{"start":{"line":1199,"column":19},"end":{"line":1204,"column":13}}],"line":1193},"241":{"loc":{"start":{"line":1206,"column":15},"end":{"line":1216,"column":9}},"type":"if","locations":[{"start":{"line":1206,"column":15},"end":{"line":1216,"column":9}},{"start":{"line":1211,"column":15},"end":{"line":1216,"column":9}}],"line":1206},"242":{"loc":{"start":{"line":1206,"column":19},"end":{"line":1206,"column":113}},"type":"binary-expr","locations":[{"start":{"line":1206,"column":19},"end":{"line":1206,"column":43}},{"start":{"line":1206,"column":47},"end":{"line":1206,"column":113}}],"line":1206},"243":{"loc":{"start":{"line":1211,"column":15},"end":{"line":1216,"column":9}},"type":"if","locations":[{"start":{"line":1211,"column":15},"end":{"line":1216,"column":9}},{"start":{"line":1213,"column":15},"end":{"line":1216,"column":9}}],"line":1211},"244":{"loc":{"start":{"line":1211,"column":19},"end":{"line":1211,"column":65}},"type":"binary-expr","locations":[{"start":{"line":1211,"column":19},"end":{"line":1211,"column":43}},{"start":{"line":1211,"column":47},"end":{"line":1211,"column":65}}],"line":1211},"245":{"loc":{"start":{"line":1217,"column":8},"end":{"line":1232,"column":9}},"type":"if","locations":[{"start":{"line":1217,"column":8},"end":{"line":1232,"column":9}},{"start":{"line":1230,"column":15},"end":{"line":1232,"column":9}}],"line":1217},"246":{"loc":{"start":{"line":1217,"column":12},"end":{"line":1217,"column":101}},"type":"binary-expr","locations":[{"start":{"line":1217,"column":12},"end":{"line":1217,"column":53}},{"start":{"line":1217,"column":57},"end":{"line":1217,"column":101}}],"line":1217},"247":{"loc":{"start":{"line":1219,"column":10},"end":{"line":1229,"column":11}},"type":"if","locations":[{"start":{"line":1219,"column":10},"end":{"line":1229,"column":11}},{"start":{"line":1227,"column":17},"end":{"line":1229,"column":11}}],"line":1219},"248":{"loc":{"start":{"line":1219,"column":14},"end":{"line":1219,"column":92}},"type":"binary-expr","locations":[{"start":{"line":1219,"column":14},"end":{"line":1219,"column":31}},{"start":{"line":1219,"column":35},"end":{"line":1219,"column":92}}],"line":1219},"249":{"loc":{"start":{"line":1241,"column":4},"end":{"line":1243,"column":5}},"type":"if","locations":[{"start":{"line":1241,"column":4},"end":{"line":1243,"column":5}},{"start":{},"end":{}}],"line":1241},"250":{"loc":{"start":{"line":1247,"column":4},"end":{"line":1249,"column":5}},"type":"if","locations":[{"start":{"line":1247,"column":4},"end":{"line":1249,"column":5}},{"start":{},"end":{}}],"line":1247},"251":{"loc":{"start":{"line":1247,"column":8},"end":{"line":1247,"column":54}},"type":"binary-expr","locations":[{"start":{"line":1247,"column":8},"end":{"line":1247,"column":18}},{"start":{"line":1247,"column":22},"end":{"line":1247,"column":54}}],"line":1247},"252":{"loc":{"start":{"line":1250,"column":4},"end":{"line":1252,"column":5}},"type":"if","locations":[{"start":{"line":1250,"column":4},"end":{"line":1252,"column":5}},{"start":{},"end":{}}],"line":1250},"253":{"loc":{"start":{"line":1250,"column":10},"end":{"line":1250,"column":87}},"type":"binary-expr","locations":[{"start":{"line":1250,"column":10},"end":{"line":1250,"column":47}},{"start":{"line":1250,"column":51},"end":{"line":1250,"column":87}}],"line":1250},"254":{"loc":{"start":{"line":1254,"column":4},"end":{"line":1256,"column":5}},"type":"if","locations":[{"start":{"line":1254,"column":4},"end":{"line":1256,"column":5}},{"start":{},"end":{}}],"line":1254},"255":{"loc":{"start":{"line":1254,"column":8},"end":{"line":1254,"column":56}},"type":"binary-expr","locations":[{"start":{"line":1254,"column":8},"end":{"line":1254,"column":19}},{"start":{"line":1254,"column":23},"end":{"line":1254,"column":56}}],"line":1254},"256":{"loc":{"start":{"line":1258,"column":11},"end":{"line":1258,"column":57}},"type":"binary-expr","locations":[{"start":{"line":1258,"column":11},"end":{"line":1258,"column":21}},{"start":{"line":1258,"column":25},"end":{"line":1258,"column":57}}],"line":1258}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0},"b":{"0":[1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0,0,0,0],"36":[0,0],"37":[0,0],"38":[0,0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0,0],"53":[0,0],"54":[0,0],"55":[0,0,0,0],"56":[0,0],"57":[0,0],"58":[0,0,0,0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0],"127":[0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0,0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0,0,0,0,0],"159":[0,0],"160":[0,0],"161":[0,0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0,0],"183":[0,0],"184":[0,0],"185":[0,0,0],"186":[0,0],"187":[0,0,0],"188":[0,0],"189":[0,0],"190":[0,0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0,0,0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0,0,0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0,0,0,0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0,0,0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/analysis/lexer-tree-builder.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, Nullable } from '@univerjs/core';\nimport type { ISequenceArray, ISequenceNode } from '../utils/sequence';\n\nimport { AbsoluteRefType, Disposable, isValidRange, moveRangeByOffset, Tools } from '@univerjs/core';\nimport { FormulaAstLRU } from '../../basics/cache-lru';\nimport { ERROR_TYPE_COUNT_ARRAY, ERROR_TYPE_SET, ErrorType } from '../../basics/error-type';\nimport { isFormulaLexerToken, isTokenCannotBeAtEnd, isTokenCannotPrecedeSuffixToken } from '../../basics/match-token';\n\nimport { regexTestSingeRange } from '../../basics/regex';\nimport {\n    matchToken,\n    OPERATOR_TOKEN_PRIORITY,\n    OPERATOR_TOKEN_SET,\n    operatorToken,\n    prefixToken,\n    SUFFIX_TOKEN_SET,\n    suffixToken,\n} from '../../basics/token';\nimport {\n    DEFAULT_TOKEN_CUBE_FUNCTION_NAME,\n    DEFAULT_TOKEN_LAMBDA_FUNCTION_NAME,\n    DEFAULT_TOKEN_TYPE_LAMBDA_PARAMETER,\n    DEFAULT_TOKEN_TYPE_PARAMETER,\n    DEFAULT_TOKEN_TYPE_ROOT,\n} from '../../basics/token-type';\nimport { isReferenceStringWithEffectiveColumn, replaceRefPrefixString, serializeRangeToRefString } from '../utils/reference';\nimport { deserializeRangeWithSheetWithCache } from '../utils/reference-cache';\nimport { generateStringWithSequence, sequenceNodeType } from '../utils/sequence';\nimport { LexerNode } from './lexer-node';\n\nenum bracketType {\n    NORMAL,\n    FUNCTION,\n    LAMBDA,\n}\n\nconst FORMULA_CACHE_LRU_COUNT = 2000;\n\nexport const FormulaLexerNodeCache = new FormulaAstLRU<LexerNode>(FORMULA_CACHE_LRU_COUNT);\n\nexport const FormulaSequenceNodeCache = new FormulaAstLRU<Array<string | ISequenceNode>>(FORMULA_CACHE_LRU_COUNT);\n\nexport class LexerTreeBuilder extends Disposable {\n    private _currentLexerNode: LexerNode = new LexerNode();\n\n    private _upLevel = 0;\n\n    private _segment = '';\n\n    private _bracketState: bracketType[] = []; // ()\n\n    private _squareBracketState: number = 0;\n\n    private _bracesState = 0; // {}\n\n    private _singleQuotationState = 0; // ''\n\n    private _doubleQuotationState = 0; // \"\"\n\n    private _lambdaState = false; // Lambda\n\n    private _colonState = false; // :\n\n    private _formulaErrorCount = 0;\n\n    private _tableBracketState = false; // Table3[[#All],[Column1]:[Column2]]\n\n    override dispose(): void {\n        this._resetTemp();\n\n        this._currentLexerNode.dispose();\n\n        FormulaLexerNodeCache.clear();\n\n        FormulaSequenceNodeCache.clear();\n    }\n\n    getUpLevel() {\n        return this._upLevel;\n    }\n\n    isColonClose() {\n        return this._colonState === false;\n    }\n\n    isColonOpen() {\n        return this._colonState === true;\n    }\n\n    isDoubleQuotationClose() {\n        return this._doubleQuotationState === 0;\n    }\n\n    isLambdaOpen() {\n        return this._lambdaState === true;\n    }\n\n    isLambdaClose() {\n        return this._lambdaState === false;\n    }\n\n    isSingleQuotationClose() {\n        return this._singleQuotationState === 0;\n    }\n\n    isBracesClose() {\n        return this._bracesState === 0;\n    }\n\n    isBracketClose() {\n        return this._bracketState.length === 0;\n    }\n\n    isSquareBracketClose() {\n        return this._squareBracketState === 0;\n    }\n\n    getCurrentLexerNode() {\n        return this._currentLexerNode;\n    }\n\n    getFunctionAndParameter(formulaString: string, strIndex: number) {\n        const current = this._getCurrentParamIndex(formulaString, strIndex);\n\n        if (current == null || current === ErrorType.VALUE) {\n            return;\n        }\n\n        const lexerNode = current[0];\n\n        if (typeof lexerNode === 'string') {\n            return;\n        }\n\n        let parent = lexerNode.getParent();\n\n        let children = lexerNode;\n\n        while (parent) {\n            const token = parent.getToken();\n            if (\n                token !== DEFAULT_TOKEN_TYPE_PARAMETER &&\n                !isFormulaLexerToken(token) &&\n                parent.getStartIndex() !== -1\n            ) {\n                const paramIndex = parent.getChildren().indexOf(children);\n\n                return {\n                    functionName: token,\n                    paramIndex,\n                };\n            }\n\n            children = parent;\n            parent = parent.getParent();\n        }\n    }\n\n    /**\n     * Estimate the number of right brackets that need to be automatically added to the end of the formula.\n     * @param formulaString\n     */\n    checkIfAddBracket(formulaString: string) {\n        let lastBracketCount = 0;\n        let lastIndex = formulaString.length - 1;\n        let lastString = formulaString[lastIndex];\n        /**\n         * Determine how many close brackets are at the end, and estimate how many functions need to automatically add close brackets.\n         */\n        while ((lastString === matchToken.CLOSE_BRACKET || lastString === ' ') && lastIndex >= 0) {\n            if (lastString === matchToken.CLOSE_BRACKET) {\n                lastBracketCount++;\n            }\n            lastString = formulaString[--lastIndex];\n        }\n\n        const current = this._getCurrentParamIndex(formulaString, formulaString.length - 2);\n\n        if (current == null || current === ErrorType.VALUE) {\n            return 0;\n        }\n\n        const lexerNode = current[0];\n\n        if (typeof lexerNode === 'string') {\n            return 0;\n        }\n\n        let parent = lexerNode.getParent();\n        let bracketCount = 0;\n\n        if (current[1] === matchToken.OPEN_BRACKET) {\n            bracketCount++;\n        }\n\n        /**\n         * Perform an upward search on the syntax tree to see how many layers the function is nested.\n         * For each layer passed, subtract the estimated number of right brackets,\n         * ultimately obtaining the number of right brackets that need to be completed.\n         */\n        while (parent) {\n            const token = parent.getToken();\n            if (\n                token !== DEFAULT_TOKEN_TYPE_PARAMETER &&\n                token !== matchToken.COLON &&\n                parent.getStartIndex() !== -1 &&\n                token.toUpperCase() !== DEFAULT_TOKEN_LAMBDA_FUNCTION_NAME\n            ) {\n                if (lastBracketCount === 0) {\n                    bracketCount += 1;\n                } else {\n                    lastBracketCount--;\n                }\n            }\n\n            parent = parent.getParent();\n        }\n\n        return bracketCount;\n    }\n\n    sequenceNodesBuilder(formulaString: string) {\n        const sequenceNodesCache = FormulaSequenceNodeCache.get(formulaString);\n        if (sequenceNodesCache) {\n            return [...sequenceNodesCache];\n        }\n\n        const sequenceArray = this._getSequenceArray(formulaString);\n        if (sequenceArray.length === 0) {\n            return;\n        }\n\n        const newSequenceNodes = this.getSequenceNode(sequenceArray);\n\n        // let sequenceString = '';\n        // for (const node of newSequenceNodes) {\n        //     if (typeof node === 'string') {\n        //         sequenceString += node;\n        //     } else {\n        //         sequenceString += node.token;\n        //     }\n        // }\n        // console.log('sequenceString', sequenceString);\n\n        FormulaSequenceNodeCache.set(formulaString, [...newSequenceNodes]);\n\n        return newSequenceNodes;\n    }\n\n    convertRefersToAbsolute(formulaString: string, startAbsoluteRefType: AbsoluteRefType, endAbsoluteRefType: AbsoluteRefType, currentSheetName: string = '') {\n        const nodes = this.sequenceNodesBuilder(formulaString);\n        if (nodes == null) {\n            return formulaString;\n        }\n\n        let prefixToken = '';\n        if (formulaString.substring(0, 1) === operatorToken.EQUALS) {\n            prefixToken = operatorToken.EQUALS;\n        }\n\n        for (let i = 0, len = nodes.length; i < len; i++) {\n            const node = nodes[i];\n            if (typeof node === 'string') {\n                continue;\n            }\n\n            if (node.nodeType === sequenceNodeType.REFERENCE) {\n                const { token, endIndex } = node;\n                const sequenceGrid = deserializeRangeWithSheetWithCache(token);\n                if (sequenceGrid == null) {\n                    continue;\n                }\n\n                const { range, sheetName, unitId } = sequenceGrid;\n\n                const newRange = {\n                    ...range,\n                    startAbsoluteRefType,\n                    endAbsoluteRefType,\n                };\n\n                const newToken = serializeRangeToRefString({\n                    range: newRange,\n                    unitId,\n                    sheetName: sheetName || currentSheetName,\n                });\n\n                const minusCount = newToken.length - token.length;\n\n                nodes[i] = {\n                    ...node,\n                    token: newToken,\n                    endIndex: endIndex + minusCount,\n                };\n\n                /**\n                 * Adjust the start and end indexes of the subsequent nodes.\n                 */\n                for (let j = i + 1; j < len; j++) {\n                    const nextNode = nodes[j];\n                    if (typeof nextNode === 'string') {\n                        continue;\n                    }\n\n                    nextNode.startIndex += minusCount;\n                    nextNode.endIndex += minusCount;\n                }\n            }\n        }\n\n        return `${prefixToken}${generateStringWithSequence(nodes)}`;\n    }\n\n    moveFormulaRefOffset(formulaString: string, refOffsetX: number, refOffsetY: number, ignoreAbsolute = false) {\n        const sequenceNodes = this.sequenceNodesBuilder(formulaString);\n\n        if (sequenceNodes == null) {\n            return formulaString;\n        }\n\n        const newSequenceNodes: Array<string | ISequenceNode> = [];\n\n        for (let i = 0, len = sequenceNodes.length; i < len; i++) {\n            const node = sequenceNodes[i];\n            if (typeof node === 'string' || node.nodeType !== sequenceNodeType.REFERENCE) {\n                newSequenceNodes.push(node);\n                continue;\n            }\n\n            const { token } = node;\n\n            const sequenceGrid = deserializeRangeWithSheetWithCache(token);\n\n            const { sheetName, unitId: sequenceUnitId } = sequenceGrid;\n\n            let newRange: IRange = sequenceGrid.range;\n\n            if (!ignoreAbsolute && newRange.startAbsoluteRefType === AbsoluteRefType.ALL && newRange.endAbsoluteRefType === AbsoluteRefType.ALL) {\n                newSequenceNodes.push(node);\n                continue;\n            } else {\n                newRange = moveRangeByOffset(newRange, refOffsetX, refOffsetY, ignoreAbsolute);\n            }\n\n            let newToken = '';\n            if (isValidRange(newRange)) {\n                newToken = serializeRangeToRefString({\n                    range: newRange,\n                    unitId: sequenceUnitId,\n                    sheetName,\n                });\n            } else {\n                newToken = ErrorType.REF;\n            }\n\n            newSequenceNodes.push({\n                ...node,\n                token: newToken,\n            });\n        }\n\n        return `=${generateStringWithSequence(newSequenceNodes)}`;\n    }\n\n    /**\n     * univer-pro/issues/1684\n     * =sum({}{})\n     */\n    private _formulaSpellCheck(): boolean {\n        if (this._currentLexerNode.getChildren().length === 0) {\n            return true;\n        }\n        const node = this._currentLexerNode.getChildren()[0];\n\n        if (node instanceof LexerNode) {\n            return true;\n        }\n\n        if (\n            OPERATOR_TOKEN_SET.has(node)\n            || SUFFIX_TOKEN_SET.has(node)\n            || node === prefixToken.AT\n            || node === matchToken.COMMA\n            || node === matchToken.COLON\n            || node === matchToken.OPEN_BRACKET\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    // eslint-disable-next-line complexity\n    getSequenceNode(sequenceArray: ISequenceArray[]): (string | ISequenceNode)[] {\n        const sequenceNodes: Array<ISequenceNode | string> = [];\n\n        let maybeString = false;\n\n        for (let i = 0, len = sequenceArray.length; i < len; i++) {\n            const item = sequenceArray[i];\n\n            const preItem = sequenceArray[i - 1];\n\n            const { segment, currentString } = item;\n\n            if (currentString === matchToken.DOUBLE_QUOTATION) {\n                maybeString = true;\n            }\n\n            if ((segment !== '' || i === 0) && i !== len - 1) {\n                sequenceNodes.push(currentString);\n                continue;\n            }\n\n            let preSegment = preItem?.segment || '';\n\n            const startIndex = i - preSegment.length;\n\n            let endIndex = i - 1;\n\n            const deleteEndIndex = i - 1;\n\n            if (i === len - 1 && this._isLastMergeString(currentString)) {\n                preSegment += currentString;\n\n                endIndex += 1;\n            }\n\n            if (preSegment === '' || OPERATOR_TOKEN_PRIORITY.has(preSegment)) {\n                sequenceNodes.push(currentString);\n                continue;\n            }\n\n            const preSegmentTrim = preSegment.trim();\n\n            const preSegmentNotPrefixToken = replaceRefPrefixString(preSegmentTrim);\n\n            if (maybeString === true && preSegmentTrim[preSegmentTrim.length - 1] === matchToken.DOUBLE_QUOTATION && preSegmentTrim[0] !== matchToken.OPEN_BRACES) {\n                maybeString = false;\n                this._processPushSequenceNode(sequenceNodes, sequenceNodeType.STRING, preSegment, startIndex, endIndex, deleteEndIndex);\n            } else if (regexTestSingeRange(preSegmentNotPrefixToken) && isReferenceStringWithEffectiveColumn(preSegmentNotPrefixToken)) {\n                this._processPushSequenceNode(sequenceNodes, sequenceNodeType.REFERENCE, preSegment, startIndex, endIndex, deleteEndIndex);\n            } else if (Tools.isStringNumber(preSegmentTrim)) {\n                this._processPushSequenceNode(sequenceNodes, sequenceNodeType.NUMBER, preSegment, startIndex, endIndex, deleteEndIndex);\n            } else if (preSegmentTrim.length > 0) {\n                this._processPushSequenceNode(sequenceNodes, sequenceNodeType.FUNCTION, preSegment, startIndex, endIndex, deleteEndIndex);\n            }\n\n            if (i !== len - 1 || !this._isLastMergeString(currentString)) {\n                sequenceNodes.push(currentString);\n            }\n        }\n\n        return this._mergeSequenceNodeReference(sequenceNodes);\n    }\n\n    private _processPushSequenceNode(sequenceNodes: (string | ISequenceNode)[], nodeType: sequenceNodeType, token: string, startIndex: number, endIndex: number, deleteEndIndex: number) {\n        this._pushSequenceNode(\n            sequenceNodes,\n            {\n                nodeType,\n                token,\n                startIndex,\n                endIndex,\n            },\n            deleteEndIndex\n        );\n    }\n\n    private _getCurrentParamIndex(formulaString: string, index: number) {\n        return this._nodeMaker(formulaString, undefined, index);\n    }\n\n    private _isLastMergeString(str: string) {\n        return str === matchToken.DOUBLE_QUOTATION || Tools.isStringNumber(str) || !isFormulaLexerToken(str);\n    }\n\n    /**\n     * Merge array and handle ref operations\n     *\n     */\n    private _mergeSequenceNodeReference(sequenceNodes: Array<string | ISequenceNode>): (string | ISequenceNode)[] {\n        const newSequenceNodes: Array<string | ISequenceNode> = [];\n\n        const sequenceNodesCount = sequenceNodes.length;\n\n        let i = 0;\n        while (i < sequenceNodesCount) {\n            const node = sequenceNodes[i];\n\n            if (typeof node === 'string') {\n                const preNode = sequenceNodes[i - 1];\n                if (\n                    node.trim() === matchToken.CLOSE_BRACES &&\n                    preNode != null &&\n                    typeof preNode !== 'string' &&\n                    preNode.nodeType === sequenceNodeType.FUNCTION\n                ) {\n                    /**\n                     * Solving the merging issue of ['{1,2,3;4,5,6;7,8,10', '}']\n                     */\n                    const firstChar = preNode.token.trim().substring(0, 1);\n\n                    if (firstChar === matchToken.OPEN_BRACES) {\n                        preNode.nodeType = sequenceNodeType.ARRAY;\n                        preNode.token += node;\n                        preNode.endIndex += node.length;\n                        i++;\n                        continue;\n                    }\n                }\n                newSequenceNodes.push(node);\n            } else {\n                const nextOneNode = sequenceNodes[i + 1];\n\n                const nextTwoNode = sequenceNodes[i + 2];\n\n                if (\n                    nextOneNode === matchToken.COLON &&\n                    typeof node !== 'string' &&\n                    nextTwoNode != null &&\n                    typeof nextTwoNode !== 'string' &&\n                    isReferenceStringWithEffectiveColumn((node.token + nextOneNode + nextTwoNode.token).trim())\n                ) {\n                    node.nodeType = sequenceNodeType.REFERENCE;\n                    node.token += nextOneNode + nextTwoNode.token;\n                    node.endIndex = nextTwoNode.endIndex;\n                    i += 2;\n                }\n\n                newSequenceNodes.push(node);\n            }\n\n            i++;\n        }\n\n        return this._minusSplitSequenceNode(newSequenceNodes);\n    }\n\n    /**\n     * =-A1  Separate the negative sign from the ref string.\n     */\n    private _minusSplitSequenceNode(sequenceNodes: Array<string | ISequenceNode>): (string | ISequenceNode)[] {\n        // After the while loop, process nodes to split '-@A1:B10' or '@-A1:B10' into operators and 'A1:B10'\n        const finalSequenceNodes: Array<string | ISequenceNode> = [];\n        for (const node of sequenceNodes) {\n            if (typeof node !== 'string') {\n                const token = node.token;\n                // Use a regular expression to match leading whitespace and operators '-', '@'\n                const match = token.match(/^(\\s*([-@+]\\s*)+)(.*)$/); // Captures leading whitespace and operators, then the rest\n                if (match) {\n                    const operatorPart = match[1]; // Includes leading whitespace and operators\n                    const referencePart = match[3]; // The rest of the token after operators\n\n                    if (isReferenceStringWithEffectiveColumn(referencePart.trim())) {\n                        // The referencePart is a valid reference\n                        // Calculate the length of the operator part\n                        const operatorLength = operatorPart.length;\n                        const operatorStart = node.startIndex;\n                        const operatorEnd = node.startIndex + operatorLength - 1;\n\n                        // Create an operator node for operatorPart\n                        const operatorNode: ISequenceNode = {\n                            nodeType: sequenceNodeType.NORMAL, // Use appropriate nodeType for operators\n                            token: operatorPart,\n                            startIndex: operatorStart,\n                            endIndex: operatorEnd,\n                        };\n\n                        // Create a reference node for referencePart\n                        const refNode: ISequenceNode = {\n                            nodeType: sequenceNodeType.REFERENCE,\n                            token: referencePart,\n                            startIndex: operatorEnd + 1,\n                            endIndex: node.endIndex,\n                        };\n\n                        finalSequenceNodes.push(operatorNode);\n                        finalSequenceNodes.push(refNode);\n                        continue;\n                    }\n                }\n            }\n            finalSequenceNodes.push(node);\n        }\n\n        return finalSequenceNodes;\n    }\n\n    private _pushSequenceNode(\n        sequenceNodes: Array<ISequenceNode | string>,\n        node: ISequenceNode,\n        deleteEndIndex: number\n    ) {\n        const segmentCount = deleteEndIndex - node.startIndex + 1;\n        sequenceNodes.splice(sequenceNodes.length - segmentCount, segmentCount, node);\n    }\n\n    nodeMakerTest(formulaString: string) {\n        return this._nodeMaker(formulaString);\n    }\n\n    treeBuilder(\n        formulaString: string,\n        transformSuffix = true,\n        injectDefinedName?: (sequenceArray: ISequenceArray[]) => {\n            sequenceString: string;\n            hasDefinedName: boolean;\n            definedNames: string[];\n        },\n        simpleCheckDefinedName?: (formulaString: string) => boolean\n    ) {\n        if (transformSuffix === true) {\n            const lexerNode = FormulaLexerNodeCache.get(formulaString);\n            const simpleCheckDefinedNameResult = simpleCheckDefinedName?.(formulaString);\n            if (lexerNode && !simpleCheckDefinedNameResult) {\n                return lexerNode;\n            }\n        }\n\n        this._resetCurrentLexerNode();\n        this._currentLexerNode.setToken(DEFAULT_TOKEN_TYPE_ROOT);\n        const sequenceArray: ISequenceArray[] = [];\n\n        let state = this._nodeMaker(formulaString, sequenceArray);\n\n        if (state === ErrorType.VALUE || sequenceArray.length === 0) {\n            return state;\n        }\n\n        let currentHasDefinedName = false;\n\n        let currentSequenceString = '';\n\n        let currentDefinedNames: string[] = [];\n\n        if (injectDefinedName) {\n            const { hasDefinedName, sequenceString, definedNames } = injectDefinedName(sequenceArray);\n            currentHasDefinedName = hasDefinedName;\n            currentSequenceString = sequenceString;\n            currentDefinedNames = definedNames;\n        }\n\n        /**\n         * If there is a custom name in the formula string,\n         * replace the custom name with the corresponding character content and rebuild the formula.\n         */\n        if (currentHasDefinedName) {\n            this._resetCurrentLexerNode();\n            this._currentLexerNode.setToken(DEFAULT_TOKEN_TYPE_ROOT);\n            state = this._nodeMaker(`=${currentSequenceString}`);\n            if (state === ErrorType.VALUE) {\n                return state;\n            }\n        }\n\n        const node = this._getTopNode(this._currentLexerNode);\n        if (node) {\n            this._currentLexerNode = node;\n        }\n\n        if (transformSuffix) {\n            const isValid = this._suffixExpressionHandler(this._currentLexerNode);\n            if (!isValid) {\n                return ErrorType.VALUE;\n            }\n            FormulaLexerNodeCache.set(formulaString, this._currentLexerNode);\n        }\n\n        if (currentHasDefinedName) {\n            this._currentLexerNode.setDefinedNames(currentDefinedNames);\n        }\n\n        return this._currentLexerNode;\n    }\n\n    // eslint-disable-next-line complexity\n    private _suffixExpressionHandler(lexerNode: LexerNode): boolean {\n        const children = lexerNode.getChildren();\n        if (!children) {\n            return false;\n        }\n        const childrenCount = children.length;\n\n        const baseStack: Array<string | LexerNode> = []; // S2\n        const symbolStack: string[] = []; // S1\n\n        let isChildValid = true;\n\n        for (let i = 0; i < childrenCount; i++) {\n            const node = children[i];\n            if (!(node instanceof LexerNode)) {\n                const char = node.trim();\n                if (char === '') {\n                    continue;\n                }\n\n                if (OPERATOR_TOKEN_SET.has(char)) {\n                    // fix =-(+2)+2\n                    if (char === operatorToken.PLUS && this._deletePlusForPreNode(children[i - 1])) {\n                        continue;\n                    }\n                    // =-(2)+*9, return error\n                    if (char !== operatorToken.PLUS && char !== operatorToken.MINUS && this._deletePlusForPreNode(children[i - 1])) {\n                        return false;\n                    }\n                    while (symbolStack.length > 0) {\n                        const lastSymbol = symbolStack[symbolStack.length - 1]?.trim();\n                        if (!lastSymbol || lastSymbol === matchToken.OPEN_BRACKET) {\n                            break;\n                        }\n\n                        const lastSymbolPriority = OPERATOR_TOKEN_PRIORITY.get(lastSymbol);\n                        const charPriority = OPERATOR_TOKEN_PRIORITY.get(char);\n\n                        if (!lastSymbolPriority || !charPriority) {\n                            break;\n                        }\n\n                        if (charPriority >= lastSymbolPriority) {\n                            baseStack.push(symbolStack.pop()!);\n                        } else {\n                            break;\n                        }\n                    }\n                    symbolStack.push(node as string);\n                } else if (char === matchToken.OPEN_BRACKET) {\n                    symbolStack.push(node as string);\n                } else if (char === matchToken.CLOSE_BRACKET) {\n                    // =()+9, return error\n                    this._processSuffixExpressionCloseBracket(baseStack, symbolStack, children, i);\n                } else {\n                     // =(1+3)9, return error\n                    if (this._checkCloseBracket(children[i - 1])) {\n                        return false;\n                    }\n                    baseStack.push(node as string);\n                }\n            } else {\n                isChildValid = this._suffixExpressionHandler(node as LexerNode);\n                baseStack.push(node);\n            }\n        }\n\n        if (!isChildValid) {\n            return false;\n        }\n\n        return this._processSuffixExpressionRemain(baseStack, symbolStack, lexerNode);\n    }\n\n    private _processSuffixExpressionRemain(baseStack: (string | LexerNode)[], symbolStack: string[], lexerNode: LexerNode): boolean {\n        const baseStackLength = baseStack.length;\n        const lastBaseStack = baseStack[baseStackLength - 1];\n        while (symbolStack.length > 0) {\n            const symbol = symbolStack.pop()!;\n            if (!(lastBaseStack instanceof LexerNode) && (symbol === matchToken.OPEN_BRACKET || symbol === matchToken.CLOSE_BRACKET)) {\n                return false;\n            }\n            baseStack.push(symbol);\n        }\n        lexerNode.setChildren(baseStack);\n        return true;\n    }\n\n    private _processSuffixExpressionCloseBracket(baseStack: (string | LexerNode)[], symbolStack: string[], children: (string | LexerNode)[], i: number) {\n        if (this._checkOpenBracket(children[i - 1])) {\n            return false;\n        }\n\n        // =1+(1*)\n        if (this._checkOperator(children[i - 1])) {\n            return false;\n        }\n\n        while (symbolStack.length > 0) {\n            const lastSymbol = symbolStack[symbolStack.length - 1]?.trim();\n            if (!lastSymbol) {\n                break;\n            }\n\n            if (lastSymbol === matchToken.OPEN_BRACKET) {\n                symbolStack.pop();\n                break;\n            }\n\n            baseStack.push(symbolStack.pop()!);\n        }\n    }\n\n    private _checkCloseBracket(node: Nullable<string | LexerNode>) {\n        return node === matchToken.CLOSE_BRACKET || node instanceof LexerNode;\n    }\n\n    private _checkOpenBracket(node: Nullable<string | LexerNode>) {\n        return node === matchToken.OPEN_BRACKET;\n    }\n\n    private _checkOperator(node: Nullable<string | LexerNode>) {\n        if (node == null) {\n            return false;\n        }\n\n        if (node instanceof LexerNode) {\n            return false;\n        }\n\n        return OPERATOR_TOKEN_SET.has(node);\n    }\n\n    private _deletePlusForPreNode(preNode: Nullable<string | LexerNode>) {\n        if (preNode == null) {\n            return true;\n        }\n\n        if (!(preNode instanceof LexerNode)) {\n            const preChar = preNode.trim();\n            if (OPERATOR_TOKEN_SET.has(preChar) || preChar === matchToken.OPEN_BRACKET) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _resetCurrentLexerNode() {\n        this._currentLexerNode = new LexerNode();\n    }\n\n    private _resetSegment() {\n        this._segment = '';\n    }\n\n    private _openBracket(type: bracketType = bracketType.NORMAL) {\n        this._bracketState.push(type);\n    }\n\n    private _closeBracket() {\n        this._bracketState.pop();\n    }\n\n    private _openSquareBracket() {\n        this._squareBracketState += 1;\n    }\n\n    private _closeSquareBracket() {\n        this._squareBracketState -= 1;\n    }\n\n    private _getCurrentBracket() {\n        const bracketState = this._bracketState;\n        return bracketState[bracketState.length - 1];\n    }\n\n    private _changeCurrentBracket(type: bracketType) {\n        const bracketState = this._bracketState;\n        bracketState[bracketState.length - 1] = type;\n    }\n\n    private _openBraces() {\n        this._bracesState += 1;\n    }\n\n    private _closeBraces() {\n        this._bracesState -= 1;\n    }\n\n    private _openSingleQuotation() {\n        this._singleQuotationState += 1;\n    }\n\n    private _closeSingleQuotation() {\n        this._singleQuotationState -= 1;\n    }\n\n    private _openDoubleQuotation() {\n        this._doubleQuotationState += 1;\n    }\n\n    private _closeDoubleQuotation() {\n        this._doubleQuotationState -= 1;\n    }\n\n    private _openLambda() {\n        this._lambdaState = true;\n    }\n\n    private _closeLambda() {\n        this._lambdaState = false;\n    }\n\n    private _openColon(upLevel: number) {\n        this._upLevel = upLevel;\n        this._colonState = true;\n    }\n\n    private _closeColon() {\n        this._upLevel = 0;\n        this._colonState = false;\n    }\n\n    private _isTableBracket() {\n        return this._tableBracketState;\n    }\n\n    private _openTableBracket() {\n        this._tableBracketState = true;\n    }\n\n    private _closeTableBracket() {\n        this._tableBracketState = false;\n    }\n\n    private _formalErrorOccurred() {\n        this._formulaErrorCount += 1;\n    }\n\n    private _hasFormalError() {\n        return this._formulaErrorCount > 0;\n    }\n\n    private _getLastChildCurrentLexerNode() {\n        const children = this._currentLexerNode.getChildren();\n        if (children && children.length > 0) {\n            const lastNode = children[children.length - 1];\n            if (lastNode instanceof LexerNode) {\n                return lastNode;\n            }\n        }\n        return false;\n    }\n\n    private _getLastChildCurrent() {\n        const children = this._currentLexerNode.getChildren();\n        if (children && children.length > 0) {\n            const lastNode = children[children.length - 1];\n            return lastNode;\n        }\n        return false;\n    }\n\n    private _setParentCurrentLexerNode() {\n        const parent = this._currentLexerNode.getParent();\n        if (parent) {\n            this._currentLexerNode = parent;\n            return true;\n        }\n\n        return false;\n    }\n\n    private _setAncestorCurrentLexerNode() {\n        const parent = this._currentLexerNode?.getParent();\n        let state = false;\n        if (parent && parent.getToken() === DEFAULT_TOKEN_TYPE_LAMBDA_PARAMETER) {\n            // lambda will skip to more one level\n            if (parent?.getParent()?.getParent()) {\n                const node = this._currentLexerNode.getParent()?.getParent()?.getParent();\n                if (node) {\n                    this._currentLexerNode = node;\n                }\n                state = true;\n            }\n        } else {\n            if (parent?.getParent()) {\n                const node = this._currentLexerNode.getParent()?.getParent();\n                if (node) {\n                    this._currentLexerNode = node;\n                }\n                state = true;\n            }\n        }\n\n        for (let i = 0; i < this._upLevel; i++) {\n            const node = this._currentLexerNode?.getParent();\n            if (node) {\n                this._currentLexerNode = node;\n            }\n            if (this._currentLexerNode) {\n                state = true;\n            } else {\n                state = false;\n            }\n        }\n\n        return state;\n    }\n\n    private _segmentCount() {\n        return this._segment.trim().length;\n    }\n\n    private _pushSegment(value: string) {\n        this._segment += value;\n    }\n\n    private _pushNodeToChildren(valueRaw: LexerNode | string, isUnshift = false) {\n        let value = valueRaw;\n        if (value !== '') {\n            const children = this._currentLexerNode.getChildren();\n            if (!(value instanceof LexerNode) && this.isColonOpen()) {\n                const subLexerNode_ref = new LexerNode();\n                subLexerNode_ref.setToken(value);\n                subLexerNode_ref.setParent(this._currentLexerNode);\n\n                value = subLexerNode_ref;\n            }\n            if (isUnshift) {\n                children.unshift(value);\n            } else {\n                children.push(value);\n            }\n        }\n\n        if (this.isColonOpen()) {\n            this._setAncestorCurrentLexerNode();\n            this._closeColon(); /*  */\n        }\n    }\n\n    private _setCurrentLexerNode(subLexerNode: LexerNode, isUnshift = false) {\n        this._pushNodeToChildren(subLexerNode, isUnshift);\n        subLexerNode.setParent(this._currentLexerNode);\n        this._currentLexerNode = subLexerNode;\n    }\n\n    private _newAndPushCurrentLexerNode(token: string, current: number, isUnshift = false) {\n        const subLexerNode = new LexerNode();\n        subLexerNode.setToken(token);\n        subLexerNode.setIndex(current - token.length, current - 1);\n        this._setCurrentLexerNode(subLexerNode, isUnshift);\n    }\n\n    private _getTopNode(lexerNode: LexerNode) {\n        let parentNode: Nullable<LexerNode> = lexerNode;\n        while (parentNode?.getParent()) {\n            parentNode = parentNode.getParent();\n        }\n        return parentNode;\n    }\n\n    private _removeLastChild() {\n        const children = this._currentLexerNode.getChildren();\n        children.splice(-1);\n    }\n\n    /**\n     * fix univer-pro/issues/2447\n     * =1/3+\n     * =+\n     * =sum(A1+)\n     */\n    private _formulaErrorLastTokenCheck(formulaStringArray: string[], indexRaw: number) {\n        const lastToken = this._findPreviousToken(formulaStringArray, indexRaw) || '';\n        const isFirstCheck = formulaStringArray.length - 1 === indexRaw;\n        if (!isFirstCheck && this._isOperatorToken(lastToken)) {\n            return true;\n        }\n\n        if (isFirstCheck && isTokenCannotBeAtEnd(lastToken)) {\n            return true;\n        }\n\n        if (SUFFIX_TOKEN_SET.has(lastToken)) {\n            const lastTwoToken = this._findSecondLastNonSpaceToken(formulaStringArray, indexRaw);\n\n            if (lastTwoToken == null || isTokenCannotPrecedeSuffixToken(lastTwoToken)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _findPreviousToken(data: string[], indexRaw: number) {\n        let index = indexRaw;\n        while (index >= 0) {\n            const token = data[index];\n            if (token !== ' ') {\n                return token;\n            }\n            index--;\n        }\n    }\n\n    private _findSecondLastNonSpaceToken(data: string[], indexRaw: number): string | null {\n        let index = indexRaw;\n        let nonSpaceTokenCount = 0;\n        while (index >= 0) {\n            const token = data[index];\n            if (token !== ' ') {\n                nonSpaceTokenCount++;\n                if (nonSpaceTokenCount === 2) {\n                    return token;\n                }\n            }\n            index--;\n        }\n        return null;\n    }\n\n    private _findNextToken(data: string[], indexRaw: number) {\n        let index = indexRaw;\n        while (index >= 0) {\n            const token = data[index];\n            if (token !== ' ') {\n                return token;\n            }\n            index++;\n        }\n    }\n\n    private _unexpectedEndingTokenExcludeOperator(prevString: string) {\n        if (\n            // OPERATOR_TOKEN_SET.has(prevString) ||\n            prevString === matchToken.OPEN_BRACKET ||\n            prevString === matchToken.COMMA ||\n            prevString === operatorToken.EQUALS ||\n            prevString === ''\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    private _unexpectedEndingToken(prevString: string) {\n        if (\n            this._isOperatorToken(prevString) ||\n            this._unexpectedEndingTokenExcludeOperator(prevString)\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    private _isOperatorToken(prevString: string) {\n        if (\n            OPERATOR_TOKEN_SET.has(prevString)\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    private _getSequenceArray(formulaString: string): ISequenceArray[] {\n        const sequenceArray: ISequenceArray[] = [];\n\n        this._nodeMaker(formulaString, sequenceArray);\n\n        return sequenceArray;\n    }\n\n    private _resetTemp(): void {\n        this._currentLexerNode = new LexerNode();\n\n        this._upLevel = 0;\n\n        this._segment = '';\n\n        this._bracketState = []; // ()\n\n        this._bracesState = 0; // {}\n\n        this._singleQuotationState = 0; // ''\n\n        this._doubleQuotationState = 0; // \"\"\n\n        this._lambdaState = false; // Lambda\n\n        this._colonState = false; // :\n\n        this._formulaErrorCount = 0;\n    }\n\n    private _checkErrorState(): boolean {\n        if (this._bracketState.length > 0) {\n            return true;\n        }\n\n        if (this._bracesState > 0) {\n            return true;\n        }\n\n        if (this._singleQuotationState > 0) {\n            return true;\n        }\n\n        if (this._doubleQuotationState > 0) {\n            return true;\n        }\n\n        if (this._hasFormalError()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    private _checkSimilarErrorToken(currentString: string, curRow: number, formulaStringArray: string[]): boolean {\n        let cur = curRow;\n        if (currentString !== suffixToken.POUND) {\n            return true;\n        }\n\n        let currentText = formulaStringArray[++cur];\n\n        while (currentText === ' ') {\n            currentText = formulaStringArray[++cur];\n        }\n\n        if (isFormulaLexerToken(currentText)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    private _checkIfErrorObject(cur: number, formulaStringArray: string[]): boolean {\n        const errorType = this._findErrorObject(cur, formulaStringArray);\n        if (!errorType) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private _findErrorObject(curRaw: number, formulaStringArray: string[]): Nullable<string> {\n        for (let i = 0; i < ERROR_TYPE_COUNT_ARRAY.length; i++) {\n            const errorTypeCount = ERROR_TYPE_COUNT_ARRAY[i];\n\n            const errorType = formulaStringArray.slice(curRaw, curRaw + errorTypeCount).join('').toUpperCase();\n\n            if (ERROR_TYPE_SET.has(errorType as ErrorType)) {\n                return errorType;\n            }\n        }\n    }\n\n    // eslint-disable-next-line max-lines-per-function, complexity\n    private _nodeMaker(formulaStringRaw: string, sequenceArray?: ISequenceArray[], matchCurrentNodeIndex?: number) {\n        // Editor will add '\\r\\n' at the end of the formula string\n        let formulaString = formulaStringRaw.replace(/\\r\\n$/, '').replace(/\\r/g, ' ').replace(/\\n/g, ' ');\n\n        if (formulaString.substring(0, 1) === operatorToken.EQUALS) {\n            formulaString = formulaString.substring(1);\n        }\n\n        // let isZeroAdded = false;\n        // if (formulaString.substring(0, 1) === operatorToken.MINUS) {\n        //     formulaString = `0${formulaString}`;\n        //     isZeroAdded = true;\n        // }\n\n        const formulaStringArray = formulaString.split('');\n        const formulaStringArrayCount = formulaStringArray.length;\n\n        let cur = 0;\n        this._resetTemp();\n\n        if (this._formulaErrorLastTokenCheck(formulaStringArray, formulaStringArrayCount - 1)) {\n            this._formalErrorOccurred();\n        }\n\n        while (cur < formulaStringArrayCount) {\n            const currentString = formulaStringArray[cur];\n\n            if (matchCurrentNodeIndex === cur) {\n                return [this._currentLexerNode, currentString];\n            }\n\n            if (currentString === suffixToken.POUND &&\n                this.isSingleQuotationClose() &&\n                this.isDoubleQuotationClose() &&\n                this.isBracesClose() &&\n                this.isSquareBracketClose() &&\n                this._checkIfErrorObject(cur, formulaStringArray)\n            ) {\n                const errorType = this._findErrorObject(cur, formulaStringArray);\n                if (errorType == null) {\n                    return ErrorType.VALUE;\n                }\n                this._pushNodeToChildren(errorType);\n                for (let i = 0; i < errorType.length; i++) {\n                    const curStr = formulaStringArray[cur];\n                    this._pushSegment(curStr);\n                    this._addSequenceArray(sequenceArray, curStr, cur);\n                    cur++;\n                }\n                this._resetSegment();\n                // this._addSequenceArray(sequenceArray, currentString, cur, isZeroAdded);\n                // cur += errorType.length;\n                continue;\n            } else if (\n                currentString === matchToken.OPEN_BRACKET &&\n                this.isSingleQuotationClose() &&\n                this.isDoubleQuotationClose()\n            ) {\n                if (this._segmentCount() > 0 || this.isLambdaOpen()) {\n                    if (this.isLambdaClose()) {\n                        this._newAndPushCurrentLexerNode(this._segment, cur);\n                        this._resetSegment();\n                    }\n\n                    this._openBracket(bracketType.FUNCTION);\n                    this._closeLambda();\n\n                    const nextCurrentString = formulaStringArray[cur + 1];\n                    if (nextCurrentString && nextCurrentString === matchToken.CLOSE_BRACKET) {\n                        // when function has not parameter, return to parentNode , e.g. row()\n                        if (!this._setParentCurrentLexerNode() && cur !== formulaStringArrayCount - 1) {\n                            return ErrorType.VALUE;\n                        }\n                        /**\n                         * https://github.com/dream-num/univer/issues/1769\n                         * Formula example: =IF(TODAY()>1,\"TRUE\", \"FALSE\")\n                         * Copy or auto-fill at complex formula get error formula offset\n                         */\n\n                        this._addSequenceArray(sequenceArray, currentString, cur);\n                        cur++;\n                        this._addSequenceArray(sequenceArray, nextCurrentString, cur);\n                        cur++;\n                        this._closeBracket();\n                        continue;\n                    } else if (nextCurrentString) {\n                        this._newAndPushCurrentLexerNode(DEFAULT_TOKEN_TYPE_PARAMETER, cur);\n                    }\n                } else {\n                    this._pushNodeToChildren(currentString);\n                    this._openBracket(bracketType.NORMAL);\n                    this._resetSegment();\n                }\n            } else if (\n                currentString === matchToken.CLOSE_BRACKET &&\n                this.isSingleQuotationClose() &&\n                this.isDoubleQuotationClose()\n            ) {\n                if (this._formulaErrorLastTokenCheck(formulaStringArray, cur - 1)) {\n                    this._formalErrorOccurred();\n                }\n\n                this._pushNodeToChildren(this._segment);\n                this._resetSegment();\n                const currentBracket = this._getCurrentBracket();\n                if (currentBracket === bracketType.NORMAL) {\n                    this._pushNodeToChildren(currentString);\n                } else if (currentBracket === bracketType.FUNCTION) {\n                    // function close\n                    const nextCurrentString = formulaStringArray[cur + 1];\n                    if (nextCurrentString && nextCurrentString === matchToken.OPEN_BRACKET) {\n                        // lambda handler, e.g. =lambda(x,y, x*y*x)(1,2)\n                        if (!this._setParentCurrentLexerNode() && cur !== formulaStringArrayCount - 1) {\n                            return ErrorType.VALUE;\n                        }\n\n                        this._newAndPushCurrentLexerNode(DEFAULT_TOKEN_TYPE_LAMBDA_PARAMETER, cur, true);\n                        this._openLambda();\n                    } else {\n                        if (!this._setAncestorCurrentLexerNode() && cur !== formulaStringArrayCount - 1) {\n                            return ErrorType.VALUE;\n                        }\n                    }\n                } else {\n                    return ErrorType.VALUE;\n                }\n                this._closeBracket();\n            } else if (\n                currentString === matchToken.OPEN_BRACES &&\n                this.isSingleQuotationClose() &&\n                this.isDoubleQuotationClose()\n            ) {\n                this._pushSegment(currentString);\n                this._openBraces();\n\n                if (!this._formulaSpellCheck()) {\n                    return ErrorType.VALUE;\n                }\n            } else if (\n                currentString === matchToken.CLOSE_BRACES &&\n                this.isSingleQuotationClose() &&\n                this.isDoubleQuotationClose()\n            ) {\n                this._pushSegment(currentString);\n                this._pushNodeToChildren(this._segment);\n                this._resetSegment();\n                this._closeBraces();\n            } else if (\n                currentString === matchToken.OPEN_SQUARE_BRACKET &&\n                this.isSingleQuotationClose() &&\n                this.isDoubleQuotationClose()\n            ) {\n                if (this._segment.length > 0) {\n                    this._openTableBracket();\n                }\n                this._pushSegment(currentString);\n                this._openSquareBracket();\n            } else if (\n                currentString === matchToken.CLOSE_SQUARE_BRACKET &&\n                this.isSingleQuotationClose() &&\n                this.isDoubleQuotationClose()\n            ) {\n                this._closeSquareBracket();\n                if (this.isSquareBracketClose()) {\n                    this._pushSegment(currentString);\n                    if (this._isTableBracket()) {\n                        this._pushNodeToChildren(this._segment);\n                        this._resetSegment();\n                    }\n                    this._closeTableBracket();\n                } else {\n                    this._pushSegment(currentString);\n                }\n            } else if (\n                currentString === matchToken.DOUBLE_QUOTATION &&\n                this.isSingleQuotationClose() &&\n                this.isSquareBracketClose()\n            ) {\n                if (this.isDoubleQuotationClose()) {\n                    this._openDoubleQuotation();\n                } else {\n                    const nextCurrentString = formulaStringArray[cur + 1];\n                    if (nextCurrentString && nextCurrentString === matchToken.DOUBLE_QUOTATION) {\n                        cur++;\n                    } else {\n                        this._closeDoubleQuotation();\n                    }\n                }\n                // this._pushNodeToChildren(currentString);\n                this._pushSegment(currentString);\n            } else if (currentString === matchToken.SINGLE_QUOTATION && this.isDoubleQuotationClose()) {\n                if (this.isSingleQuotationClose()) {\n                    this._openSingleQuotation();\n\n                    // If the current segment is blank, reset the segment.\n                    // Process the space before the double single quotes of sheet name.\n                    // e.g. = 'dv-test'!C27\n                    if (this._segmentCount() === 0) {\n                        this._resetSegment();\n                    }\n                } else {\n                    const nextCurrentString = formulaStringArray[cur + 1];\n                    if (nextCurrentString && nextCurrentString === matchToken.SINGLE_QUOTATION) {\n                        // handle 'Sheet'1'!A1\n\n                        // Add the first single quotation\n                        this._pushSegment(currentString);\n                        this._addSequenceArray(sequenceArray, currentString, cur);\n                        cur++;\n\n                        // Add the second single quotation\n                        this._pushSegment(nextCurrentString);\n                        this._addSequenceArray(sequenceArray, nextCurrentString, cur);\n                        cur++;\n                        continue;\n                    } else {\n                        this._closeSingleQuotation();\n                    }\n                }\n                // this._pushNodeToChildren(currentString);\n                this._pushSegment(currentString);\n            } else if (\n                currentString === matchToken.COMMA &&\n                this.isSingleQuotationClose() &&\n                this.isDoubleQuotationClose() &&\n                this.isBracesClose() &&\n                this.isSquareBracketClose()\n            ) {\n                if (this._formulaErrorLastTokenCheck(formulaStringArray, cur - 1)) {\n                    this._formalErrorOccurred();\n                }\n\n                const currentBracket = this._getCurrentBracket();\n                /**\n                 * Handle the occurrence of commas, where in the formula,\n                 * the comma represents the parameters of the function\n                 * [currentBracket == null] is for the situation where [=A1:B1, B5:A10] occurs\n                 */\n                if (currentBracket === bracketType.FUNCTION || currentBracket == null) {\n                    this._pushNodeToChildren(this._segment);\n                    this._resetSegment();\n                    if (\n                        !this._setParentCurrentLexerNode() &&\n                        cur !== formulaStringArrayCount - 1 &&\n                        currentBracket != null\n                    ) {\n                        return ErrorType.VALUE;\n                    }\n\n                    this._newAndPushCurrentLexerNode(DEFAULT_TOKEN_TYPE_PARAMETER, cur);\n                } else {\n                    /**\n                     * support cubeValueObject for =INDEX((A6:B6,C6:D7),1,1,2)\n                     */\n                    const cubeNode = new LexerNode();\n                    cubeNode.setToken(DEFAULT_TOKEN_CUBE_FUNCTION_NAME);\n                    const cubeParamNode = new LexerNode();\n                    cubeParamNode.setToken(DEFAULT_TOKEN_TYPE_PARAMETER);\n                    cubeParamNode.changeToParent(cubeNode);\n\n                    const colonNode = this._currentLexerNode.getParent();\n\n                    if (colonNode && colonNode.getToken() === matchToken.COLON) {\n                        const colonNodeParent = colonNode.getParent();\n                        if (!colonNodeParent) {\n                            return ErrorType.VALUE;\n                        }\n\n                        colonNode.changeToParent(cubeParamNode);\n                        colonNodeParent.setChildren([]);\n                        cubeNode.changeToParent(colonNodeParent);\n                    } else {\n                        return ErrorType.VALUE;\n                    }\n\n                    this._changeCurrentBracket(bracketType.FUNCTION);\n                    this._pushNodeToChildren(this._segment);\n                    this._resetSegment();\n                    this._currentLexerNode = cubeNode;\n                    this._newAndPushCurrentLexerNode(DEFAULT_TOKEN_TYPE_PARAMETER, cur);\n                }\n            } else if (\n                currentString === matchToken.COLON &&\n                this.isSingleQuotationClose() &&\n                this.isDoubleQuotationClose() &&\n                this.isBracesClose() &&\n                this.isSquareBracketClose()\n            ) {\n                const subLexerNode_op = new LexerNode();\n                subLexerNode_op.setToken(currentString);\n\n                const subLexerNode_left = new LexerNode();\n                subLexerNode_left.setToken(DEFAULT_TOKEN_TYPE_PARAMETER);\n                subLexerNode_left.setParent(subLexerNode_op);\n\n                const subLexerNode_right = new LexerNode();\n                subLexerNode_right.setToken(DEFAULT_TOKEN_TYPE_PARAMETER);\n                subLexerNode_right.setParent(subLexerNode_op);\n\n                subLexerNode_op.getChildren().push(subLexerNode_left, subLexerNode_right);\n\n                let subLexerNode_main = subLexerNode_op;\n                let upLevel = 0;\n                if (this._segmentCount() > 0) {\n                    // e.g. A1:B5\n                    // -@A4:B5\n                    let subLexerNode_minus: Nullable<LexerNode>;\n                    let subLexerNode_at: Nullable<LexerNode>;\n                    let sliceLength = 0;\n                    const segmentTrim = this._segment.trim();\n                    const lastString = segmentTrim[0];\n                    const twoLastString = segmentTrim[1];\n\n                    // new RegExp(prefixToken.MINUS, 'g').test(this._segment)\n                    if (lastString === prefixToken.MINUS) {\n                        subLexerNode_minus = new LexerNode();\n                        subLexerNode_minus.setToken(prefixToken.MINUS);\n                        sliceLength++;\n                    }\n\n                    // new RegExp(prefixToken.AT, 'g').test(this._segment)\n                    if (lastString === prefixToken.AT || twoLastString === prefixToken.AT) {\n                        subLexerNode_at = new LexerNode();\n                        subLexerNode_at.setToken(prefixToken.AT);\n\n                        if (subLexerNode_minus) {\n                            subLexerNode_minus.addChildren(subLexerNode_at);\n                            subLexerNode_at.setParent(subLexerNode_minus);\n                        }\n\n                        sliceLength++;\n                    }\n\n                    if (sliceLength > 0) {\n                        this._segment = segmentTrim.slice(sliceLength);\n                    }\n\n                    upLevel = sliceLength;\n\n                    if (subLexerNode_at) {\n                        subLexerNode_at.addChildren(subLexerNode_op);\n                        subLexerNode_op.setParent(subLexerNode_at);\n                        if (subLexerNode_at.getParent()) {\n                            const node = subLexerNode_at.getParent();\n                            if (node) {\n                                subLexerNode_main = node;\n                            }\n                        } else {\n                            subLexerNode_main = subLexerNode_at;\n                        }\n                    } else if (subLexerNode_minus) {\n                        subLexerNode_main = subLexerNode_minus;\n                        subLexerNode_minus.addChildren(subLexerNode_op);\n                        subLexerNode_op.setParent(subLexerNode_minus);\n                    }\n\n                    const subLexerNode_ref = new LexerNode();\n                    subLexerNode_ref.setToken(this._segment);\n                    subLexerNode_ref.setParent(subLexerNode_left);\n\n                    subLexerNode_left.getChildren().push(subLexerNode_ref);\n                    this._resetSegment();\n                } else {\n                    // e.g. indirect(\"A5\"):B10\n                    const lastChildNode = this._getLastChildCurrentLexerNode();\n                    if (lastChildNode) {\n                        lastChildNode.changeToParent(subLexerNode_left);\n                    }\n                }\n\n                this._setCurrentLexerNode(subLexerNode_main);\n                this._currentLexerNode = subLexerNode_right;\n                this._openColon(upLevel);\n            } else if (\n                SUFFIX_TOKEN_SET.has(currentString) &&\n                this._checkSimilarErrorToken(currentString, cur, formulaStringArray) &&\n                this.isSingleQuotationClose() &&\n                this.isDoubleQuotationClose() &&\n                this.isSquareBracketClose() &&\n                this.isBracesClose()\n            ) {\n                this._pushNodeToChildren(this._segment);\n\n                // this._pushNodeToChildren(currentString);\n\n                const subLexerNode = new LexerNode();\n                subLexerNode.setToken(currentString);\n\n                const lastChildNode = this._getLastChildCurrent();\n                if (lastChildNode instanceof LexerNode) {\n                    lastChildNode.changeToParent(subLexerNode);\n                } else if (lastChildNode !== false) {\n                    subLexerNode.getChildren().push(lastChildNode);\n                    this._removeLastChild();\n                }\n\n                this._pushNodeToChildren(subLexerNode);\n                subLexerNode.setParent(this._currentLexerNode);\n\n                this._resetSegment();\n            } else if (\n                OPERATOR_TOKEN_SET.has(currentString) &&\n                this.isSingleQuotationClose() &&\n                this.isDoubleQuotationClose() &&\n                this.isSquareBracketClose() &&\n                this.isBracesClose()\n            ) {\n                let trimSegment = this._segment.trim();\n\n                if (currentString === operatorToken.MINUS && (trimSegment === '')) {\n                    // negative number\n                    const prevString = this._findPreviousToken(formulaStringArray, cur - 1) || '';\n                    const nextString = this._findNextToken(formulaStringArray, cur + 1) || '';\n                    if (this._unexpectedEndingTokenExcludeOperator(prevString) && this._isOperatorToken(nextString)) {\n                        this._pushNodeToChildren('0');\n                        this._pushNodeToChildren(operatorToken.MINUS);\n                        this._addSequenceArray(sequenceArray, currentString, cur);\n                        this._resetSegment();\n                        cur++;\n                        continue;\n                    } else if (this._unexpectedEndingToken(prevString)) {\n                        if (nextString === operatorToken.PLUS) {\n                            this._pushSegment(operatorToken.MINUS);\n                            // this._pushSegment(operatorToken.PLUS);\n                            this._addSequenceArray(sequenceArray, currentString, cur);\n                            this._addSequenceArray(sequenceArray, operatorToken.PLUS, cur + 1);\n                            cur += 2;\n                            continue;\n                        } else {\n                            this._pushSegment(operatorToken.MINUS);\n                            this._addSequenceArray(sequenceArray, currentString, cur);\n                            cur++;\n                            continue;\n                        }\n                    }\n                } else if (this._segment.length > 0 && this._isScientificNotation(formulaStringArray, cur, currentString)) {\n                    this._pushSegment(currentString);\n\n                    this._addSequenceArray(sequenceArray, currentString, cur);\n\n                    cur++;\n                    continue;\n                } else if (this._segment.length > 0 && trimSegment === '') {\n                    trimSegment = this._segment;\n                } else {\n                    this._pushNodeToChildren(this._segment);\n                    trimSegment = '';\n                }\n\n                if (currentString === operatorToken.LESS_THAN || currentString === operatorToken.GREATER_THAN) {\n                    const nextCurrentString = formulaStringArray[cur + 1];\n                    if (nextCurrentString && OPERATOR_TOKEN_SET.has(currentString + nextCurrentString)) {\n                        this._pushNodeToChildren(trimSegment + currentString + nextCurrentString);\n\n                        this._resetSegment();\n                        this._addSequenceArray(sequenceArray, currentString, cur);\n                        cur++;\n                        this._addSequenceArray(sequenceArray, nextCurrentString, cur);\n                        cur++;\n                        continue;\n                    } else {\n                        this._pushNodeToChildren(trimSegment + currentString);\n                    }\n                } else {\n                    this._pushNodeToChildren(trimSegment + currentString);\n                }\n                this._resetSegment();\n            } else {\n                this._pushSegment(currentString);\n            }\n\n            this._addSequenceArray(sequenceArray, currentString, cur);\n            cur++;\n        }\n\n        this._pushNodeToChildren(this._segment);\n\n        if (this._checkErrorState()) {\n            return ErrorType.VALUE;\n        }\n    }\n\n    private _isScientificNotation(formulaStringArray: string[], cur: number, currentString: string) {\n        const preTwoChar = formulaStringArray[cur - 2];\n        if (preTwoChar && Number.isNaN(Number(preTwoChar))) {\n            return false;\n        }\n\n        if (!(currentString === operatorToken.MINUS || currentString === operatorToken.PLUS)) {\n            return false;\n        }\n\n        const nextOneChar = formulaStringArray[cur + 1];\n        if (nextOneChar && Number.isNaN(Number(nextOneChar))) {\n            return false;\n        }\n\n        const preOneChar = formulaStringArray[cur - 1];\n        return preOneChar && preOneChar.toUpperCase() === 'E';\n    }\n\n    private _addSequenceArray(sequenceArray: ISequenceArray[] | undefined, currentString: string, cur: number) {\n        sequenceArray?.push({\n            segment: this._segment,\n            currentString,\n            cur,\n            currentLexerNode: this._currentLexerNode,\n        });\n    }\n}\n"],"mappings":"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","names":["bracketType","prefixToken"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ed6a3cab51c5504c5a1c6e04b307c82040bdac0e"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/models/utils/formula-data-util.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/models/utils/formula-data-util.ts","statementMap":{"0":{"start":{"line":3,"column":24},"end":{"line":3,"column":37}},"1":{"start":{"line":4,"column":20},"end":{"line":4,"column":34}},"2":{"start":{"line":5,"column":29},"end":{"line":5,"column":59}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":47}},"4":{"start":{"line":7,"column":29},"end":{"line":7,"column":66}},"5":{"start":{"line":8,"column":12},"end":{"line":8,"column":39}},"6":{"start":{"line":9,"column":13},"end":{"line":9,"column":41}},"7":{"start":{"line":11,"column":4},"end":{"line":18,"column":5}},"8":{"start":{"line":12,"column":29},"end":{"line":12,"column":50}},"9":{"start":{"line":13,"column":6},"end":{"line":17,"column":7}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":51}},"11":{"start":{"line":16,"column":8},"end":{"line":16,"column":38}},"12":{"start":{"line":20,"column":2},"end":{"line":55,"column":3}},"13":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"14":{"start":{"line":22,"column":6},"end":{"line":22,"column":25}},"15":{"start":{"line":24,"column":4},"end":{"line":27,"column":7}},"16":{"start":{"line":28,"column":4},"end":{"line":28,"column":57}},"17":{"start":{"line":29,"column":4},"end":{"line":32,"column":7}},"18":{"start":{"line":33,"column":9},"end":{"line":55,"column":3}},"19":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"20":{"start":{"line":35,"column":6},"end":{"line":35,"column":25}},"21":{"start":{"line":37,"column":4},"end":{"line":39,"column":7}},"22":{"start":{"line":40,"column":4},"end":{"line":42,"column":7}},"23":{"start":{"line":43,"column":9},"end":{"line":55,"column":3}},"24":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"25":{"start":{"line":45,"column":6},"end":{"line":45,"column":25}},"26":{"start":{"line":47,"column":4},"end":{"line":50,"column":7}},"27":{"start":{"line":51,"column":9},"end":{"line":55,"column":3}},"28":{"start":{"line":52,"column":4},"end":{"line":52,"column":23}},"29":{"start":{"line":53,"column":4},"end":{"line":53,"column":49}},"30":{"start":{"line":54,"column":4},"end":{"line":54,"column":51}},"31":{"start":{"line":58,"column":33},"end":{"line":58,"column":72}},"32":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"33":{"start":{"line":60,"column":4},"end":{"line":60,"column":16}},"34":{"start":{"line":62,"column":23},"end":{"line":62,"column":25}},"35":{"start":{"line":63,"column":2},"end":{"line":70,"column":5}},"36":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"37":{"start":{"line":65,"column":6},"end":{"line":65,"column":13}},"38":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"39":{"start":{"line":68,"column":6},"end":{"line":68,"column":31}},"40":{"start":{"line":71,"column":55},"end":{"line":71,"column":77}},"41":{"start":{"line":72,"column":2},"end":{"line":87,"column":3}},"42":{"start":{"line":72,"column":17},"end":{"line":72,"column":25}},"43":{"start":{"line":73,"column":4},"end":{"line":86,"column":5}},"44":{"start":{"line":73,"column":19},"end":{"line":73,"column":30}},"45":{"start":{"line":74,"column":26},"end":{"line":74,"column":31}},"46":{"start":{"line":75,"column":26},"end":{"line":75,"column":47}},"47":{"start":{"line":76,"column":6},"end":{"line":82,"column":9}},"48":{"start":{"line":77,"column":8},"end":{"line":80,"column":9}},"49":{"start":{"line":78,"column":10},"end":{"line":78,"column":31}},"50":{"start":{"line":79,"column":10},"end":{"line":79,"column":22}},"51":{"start":{"line":81,"column":8},"end":{"line":81,"column":21}},"52":{"start":{"line":83,"column":6},"end":{"line":85,"column":7}},"53":{"start":{"line":84,"column":8},"end":{"line":84,"column":61}}},"fnMap":{"0":{"name":"updateFormulaDataByCellValue","decl":{"start":{"line":2,"column":16},"end":{"line":2,"column":44}},"loc":{"start":{"line":2,"column":142},"end":{"line":56,"column":1}},"line":2},"1":{"name":"clearFormulaData","decl":{"start":{"line":10,"column":11},"end":{"line":10,"column":27}},"loc":{"start":{"line":10,"column":30},"end":{"line":19,"column":3}},"line":10},"2":{"name":"clearArrayFormulaCellDataByCell","decl":{"start":{"line":57,"column":16},"end":{"line":57,"column":47}},"loc":{"start":{"line":57,"column":107},"end":{"line":88,"column":1}},"line":57},"3":{"name":"(anonymous_3)","decl":{"start":{"line":63,"column":35},"end":{"line":63,"column":36}},"loc":{"start":{"line":63,"column":66},"end":{"line":70,"column":3}},"line":63},"4":{"name":"(anonymous_4)","decl":{"start":{"line":76,"column":24},"end":{"line":76,"column":25}},"loc":{"start":{"line":76,"column":35},"end":{"line":82,"column":7}},"line":76}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":24},"end":{"line":3,"column":37}},"type":"binary-expr","locations":[{"start":{"line":3,"column":24},"end":{"line":3,"column":31}},{"start":{"line":3,"column":35},"end":{"line":3,"column":37}}],"line":3},"1":{"loc":{"start":{"line":4,"column":20},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":20},"end":{"line":4,"column":28}},{"start":{"line":4,"column":32},"end":{"line":4,"column":34}}],"line":4},"2":{"loc":{"start":{"line":8,"column":12},"end":{"line":8,"column":39}},"type":"binary-expr","locations":[{"start":{"line":8,"column":12},"end":{"line":8,"column":33}},{"start":{"line":8,"column":37},"end":{"line":8,"column":39}}],"line":8},"3":{"loc":{"start":{"line":9,"column":13},"end":{"line":9,"column":41}},"type":"binary-expr","locations":[{"start":{"line":9,"column":13},"end":{"line":9,"column":35}},{"start":{"line":9,"column":39},"end":{"line":9,"column":41}}],"line":9},"4":{"loc":{"start":{"line":11,"column":4},"end":{"line":18,"column":5}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":18,"column":5}},{"start":{},"end":{}}],"line":11},"5":{"loc":{"start":{"line":11,"column":8},"end":{"line":11,"column":45}},"type":"binary-expr","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":26}},{"start":{"line":11,"column":30},"end":{"line":11,"column":45}}],"line":11},"6":{"loc":{"start":{"line":13,"column":6},"end":{"line":17,"column":7}},"type":"if","locations":[{"start":{"line":13,"column":6},"end":{"line":17,"column":7}},{"start":{"line":15,"column":13},"end":{"line":17,"column":7}}],"line":13},"7":{"loc":{"start":{"line":20,"column":2},"end":{"line":55,"column":3}},"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":55,"column":3}},{"start":{"line":33,"column":9},"end":{"line":55,"column":3}}],"line":20},"8":{"loc":{"start":{"line":20,"column":6},"end":{"line":20,"column":42}},"type":"binary-expr","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":24}},{"start":{"line":20,"column":28},"end":{"line":20,"column":42}}],"line":20},"9":{"loc":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},{"start":{},"end":{}}],"line":21},"10":{"loc":{"start":{"line":33,"column":9},"end":{"line":55,"column":3}},"type":"if","locations":[{"start":{"line":33,"column":9},"end":{"line":55,"column":3}},{"start":{"line":43,"column":9},"end":{"line":55,"column":3}}],"line":33},"11":{"loc":{"start":{"line":33,"column":13},"end":{"line":33,"column":50}},"type":"binary-expr","locations":[{"start":{"line":33,"column":13},"end":{"line":33,"column":31}},{"start":{"line":33,"column":35},"end":{"line":33,"column":50}}],"line":33},"12":{"loc":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},{"start":{},"end":{}}],"line":34},"13":{"loc":{"start":{"line":43,"column":9},"end":{"line":55,"column":3}},"type":"if","locations":[{"start":{"line":43,"column":9},"end":{"line":55,"column":3}},{"start":{"line":51,"column":9},"end":{"line":55,"column":3}}],"line":43},"14":{"loc":{"start":{"line":43,"column":13},"end":{"line":43,"column":50}},"type":"binary-expr","locations":[{"start":{"line":43,"column":13},"end":{"line":43,"column":32}},{"start":{"line":43,"column":36},"end":{"line":43,"column":50}}],"line":43},"15":{"loc":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},{"start":{},"end":{}}],"line":44},"16":{"loc":{"start":{"line":51,"column":9},"end":{"line":55,"column":3}},"type":"if","locations":[{"start":{"line":51,"column":9},"end":{"line":55,"column":3}},{"start":{},"end":{}}],"line":51},"17":{"loc":{"start":{"line":51,"column":13},"end":{"line":51,"column":92}},"type":"binary-expr","locations":[{"start":{"line":51,"column":13},"end":{"line":51,"column":32}},{"start":{"line":51,"column":36},"end":{"line":51,"column":51}},{"start":{"line":51,"column":55},"end":{"line":51,"column":92}}],"line":51},"18":{"loc":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},{"start":{},"end":{}}],"line":59},"19":{"loc":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},{"start":{},"end":{}}],"line":64},"20":{"loc":{"start":{"line":64,"column":8},"end":{"line":64,"column":40}},"type":"binary-expr","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":22}},{"start":{"line":64,"column":26},"end":{"line":64,"column":40}}],"line":64},"21":{"loc":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},{"start":{},"end":{}}],"line":67},"22":{"loc":{"start":{"line":77,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":80,"column":9}},{"start":{},"end":{}}],"line":77},"23":{"loc":{"start":{"line":83,"column":6},"end":{"line":85,"column":7}},"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":85,"column":7}},{"start":{},"end":{}}],"line":83}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/models/utils/formula-data-util.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, IRange, Nullable, ObjectMatrix } from '@univerjs/core';\nimport type { IFormulaDataItem, IFormulaIdMap } from '../../basics/common';\nimport { cellToRange, isFormulaId, isFormulaString, Rectangle } from '@univerjs/core';\n\n// eslint-disable-next-line complexity\nexport function updateFormulaDataByCellValue(sheetFormulaDataMatrix: ObjectMatrix<Nullable<IFormulaDataItem>>, newSheetFormulaDataMatrix: ObjectMatrix<IFormulaDataItem | null>, formulaIdMap: { [formulaId: string]: IFormulaIdMap }, deleteFormulaIdMap: Map<string, string | IFormulaIdMap>, r: number, c: number, cell: Nullable<ICellData>) {\n    const formulaString = cell?.f || '';\n    const formulaId = cell?.si || '';\n\n    const checkFormulaString = isFormulaString(formulaString);\n    const checkFormulaId = isFormulaId(formulaId);\n\n    const currentFormulaInfo = sheetFormulaDataMatrix.getValue(r, c);\n    const f = currentFormulaInfo?.f || '';\n    const si = currentFormulaInfo?.si || '';\n\n    // Any data update may destroy the original correspondence between f and si, and the relationship between f and si needs to be re-bound.\n    function clearFormulaData() {\n        // The id that needs to be offset\n        // When the cell containing the formulas f and si is deleted, f and si lose their association, and f needs to be moved to the next cell containing the same si.\n        if (isFormulaString(f) && isFormulaId(si)) {\n            const updatedFormula = formulaIdMap?.[si]?.f;\n\n            // The formula may have been updated. For example, when you delete a column referenced by a formula, it will become #REF and cannot take the original value.\n            if (updatedFormula) {\n                deleteFormulaIdMap.set(si, updatedFormula);\n            } else {\n                deleteFormulaIdMap.set(si, f);\n            }\n        }\n    }\n\n    if (checkFormulaString && checkFormulaId) {\n        if (si !== formulaId) {\n            clearFormulaData();\n        }\n\n        sheetFormulaDataMatrix.setValue(r, c, {\n            f: formulaString,\n            si: formulaId,\n        });\n\n        formulaIdMap[formulaId] = { f: formulaString, r, c };\n\n        newSheetFormulaDataMatrix.setValue(r, c, {\n            f: formulaString,\n            si: formulaId,\n        });\n    } else if (checkFormulaString && !checkFormulaId) {\n        if (f !== formulaString) {\n            clearFormulaData();\n        }\n\n        sheetFormulaDataMatrix.setValue(r, c, {\n            f: formulaString,\n        });\n        newSheetFormulaDataMatrix.setValue(r, c, {\n            f: formulaString,\n        });\n    } else if (!checkFormulaString && checkFormulaId) {\n        if (si !== formulaId) {\n            clearFormulaData();\n        }\n        sheetFormulaDataMatrix.setValue(r, c, {\n            f: '',\n            si: formulaId,\n        });\n    } else if (!checkFormulaString && !checkFormulaId && sheetFormulaDataMatrix.getValue(r, c)) {\n        clearFormulaData();\n\n        sheetFormulaDataMatrix.realDeleteValue(r, c);\n        newSheetFormulaDataMatrix.setValue(r, c, null);\n    }\n}\n\nexport function clearArrayFormulaCellDataByCell(arrayFormulaRangeMatrix: ObjectMatrix<IRange>, arrayFormulaCellDataMatrix: ObjectMatrix<Nullable<ICellData>>, r: number, c: number) {\n    const arrayFormulaRangeValue = arrayFormulaRangeMatrix?.getValue(r, c);\n    if (arrayFormulaRangeValue == null) {\n        return true;\n    }\n\n    const intersection: IRange[] = [];\n    arrayFormulaRangeMatrix.forValue((rangeRow, rangeCol, range) => {\n        // skip the current range\n        if (rangeRow === r && rangeCol === c) {\n            return;\n        }\n\n        if (Rectangle.intersects(range, arrayFormulaRangeValue)) {\n            intersection.push(range);\n        }\n    });\n\n    const { startRow, startColumn, endRow, endColumn } = arrayFormulaRangeValue;\n\n    for (let row = startRow; row <= endRow; row++) {\n        for (let col = startColumn; col <= endColumn; col++) {\n            let isOverlapping = false;\n            const currentCell = cellToRange(row, col);\n\n            // Check if the cell is part of any other range in arrayFormulaRangeMatrix\n            intersection.some((range) => {\n                if (Rectangle.contains(range, currentCell)) {\n                    isOverlapping = true;\n                    return true;\n                }\n                return false;\n            });\n\n            // If the cell is not part of any other range, delete its value\n            if (!isOverlapping) {\n                arrayFormulaCellDataMatrix.realDeleteValue(row, col);\n            }\n        }\n    }\n}\n"],"mappings":"AAkBA,SAAS,aAAa,aAAa,iBAAiB,iBAAiB;AAG9D,gBAAS,6BAA6B,wBAAkE,2BAAkE,cAAsD,oBAAyD,GAAW,GAAW,MAA2B;AAC7U,QAAM,gBAAgB,MAAM,KAAK;AACjC,QAAM,YAAY,MAAM,MAAM;AAE9B,QAAM,qBAAqB,gBAAgB,aAAa;AACxD,QAAM,iBAAiB,YAAY,SAAS;AAE5C,QAAM,qBAAqB,uBAAuB,SAAS,GAAG,CAAC;AAC/D,QAAM,IAAI,oBAAoB,KAAK;AACnC,QAAM,KAAK,oBAAoB,MAAM;AAGrC,WAAS,mBAAmB;AAGxB,QAAI,gBAAgB,CAAC,KAAK,YAAY,EAAE,GAAG;AACvC,YAAM,iBAAiB,eAAe,EAAE,GAAG;AAG3C,UAAI,gBAAgB;AAChB,2BAAmB,IAAI,IAAI,cAAc;AAAA,MAC7C,OAAO;AACH,2BAAmB,IAAI,IAAI,CAAC;AAAA,MAChC;AAAA,IACJ;AAAA,EACJ;AAEA,MAAI,sBAAsB,gBAAgB;AACtC,QAAI,OAAO,WAAW;AAClB,uBAAiB;AAAA,IACrB;AAEA,2BAAuB,SAAS,GAAG,GAAG;AAAA,MAClC,GAAG;AAAA,MACH,IAAI;AAAA,IACR,CAAC;AAED,iBAAa,SAAS,IAAI,EAAE,GAAG,eAAe,GAAG,EAAE;AAEnD,8BAA0B,SAAS,GAAG,GAAG;AAAA,MACrC,GAAG;AAAA,MACH,IAAI;AAAA,IACR,CAAC;AAAA,EACL,WAAW,sBAAsB,CAAC,gBAAgB;AAC9C,QAAI,MAAM,eAAe;AACrB,uBAAiB;AAAA,IACrB;AAEA,2BAAuB,SAAS,GAAG,GAAG;AAAA,MAClC,GAAG;AAAA,IACP,CAAC;AACD,8BAA0B,SAAS,GAAG,GAAG;AAAA,MACrC,GAAG;AAAA,IACP,CAAC;AAAA,EACL,WAAW,CAAC,sBAAsB,gBAAgB;AAC9C,QAAI,OAAO,WAAW;AAClB,uBAAiB;AAAA,IACrB;AACA,2BAAuB,SAAS,GAAG,GAAG;AAAA,MAClC,GAAG;AAAA,MACH,IAAI;AAAA,IACR,CAAC;AAAA,EACL,WAAW,CAAC,sBAAsB,CAAC,kBAAkB,uBAAuB,SAAS,GAAG,CAAC,GAAG;AACxF,qBAAiB;AAEjB,2BAAuB,gBAAgB,GAAG,CAAC;AAC3C,8BAA0B,SAAS,GAAG,GAAG,IAAI;AAAA,EACjD;AACJ;AAEO,gBAAS,gCAAgC,yBAA+C,4BAA+D,GAAW,GAAW;AAChL,QAAM,yBAAyB,yBAAyB,SAAS,GAAG,CAAC;AACrE,MAAI,0BAA0B,MAAM;AAChC,WAAO;AAAA,EACX;AAEA,QAAM,eAAyB,CAAC;AAChC,0BAAwB,SAAS,CAAC,UAAU,UAAU,UAAU;AAE5D,QAAI,aAAa,KAAK,aAAa,GAAG;AAClC;AAAA,IACJ;AAEA,QAAI,UAAU,WAAW,OAAO,sBAAsB,GAAG;AACrD,mBAAa,KAAK,KAAK;AAAA,IAC3B;AAAA,EACJ,CAAC;AAED,QAAM,EAAE,UAAU,aAAa,QAAQ,UAAU,IAAI;AAErD,WAAS,MAAM,UAAU,OAAO,QAAQ,OAAO;AAC3C,aAAS,MAAM,aAAa,OAAO,WAAW,OAAO;AACjD,UAAI,gBAAgB;AACpB,YAAM,cAAc,YAAY,KAAK,GAAG;AAGxC,mBAAa,KAAK,CAAC,UAAU;AACzB,YAAI,UAAU,SAAS,OAAO,WAAW,GAAG;AACxC,0BAAgB;AAChB,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX,CAAC;AAGD,UAAI,CAAC,eAAe;AAChB,mCAA2B,gBAAgB,KAAK,GAAG;AAAA,MACvD;AAAA,IACJ;AAAA,EACJ;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"96f7dd7a739a4100a5f38efedb754246484e9e34"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/models/formula-data.model.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/models/formula-data.model.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":15,"column":30},"end":{"line":430,"column":1}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":12}},"16":{"start":{"line":18,"column":4},"end":{"line":18,"column":57}},"17":{"start":{"line":19,"column":4},"end":{"line":19,"column":47}},"18":{"start":{"line":21,"column":23},"end":{"line":21,"column":25}},"19":{"start":{"line":22,"column":26},"end":{"line":22,"column":28}},"20":{"start":{"line":24,"column":4},"end":{"line":24,"column":20}},"21":{"start":{"line":25,"column":4},"end":{"line":25,"column":33}},"22":{"start":{"line":26,"column":4},"end":{"line":26,"column":36}},"23":{"start":{"line":29,"column":4},"end":{"line":64,"column":7}},"24":{"start":{"line":30,"column":29},"end":{"line":30,"column":62}},"25":{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},"26":{"start":{"line":32,"column":8},"end":{"line":32,"column":20}},"27":{"start":{"line":34,"column":6},"end":{"line":63,"column":9}},"28":{"start":{"line":35,"column":36},"end":{"line":35,"column":59}},"29":{"start":{"line":36,"column":29},"end":{"line":36,"column":73}},"30":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"31":{"start":{"line":38,"column":10},"end":{"line":38,"column":22}},"32":{"start":{"line":40,"column":28},"end":{"line":40,"column":58}},"33":{"start":{"line":41,"column":41},"end":{"line":41,"column":59}},"34":{"start":{"line":42,"column":8},"end":{"line":46,"column":9}},"35":{"start":{"line":43,"column":10},"end":{"line":45,"column":12}},"36":{"start":{"line":47,"column":8},"end":{"line":59,"column":11}},"37":{"start":{"line":48,"column":24},"end":{"line":48,"column":57}},"38":{"start":{"line":49,"column":10},"end":{"line":51,"column":11}},"39":{"start":{"line":50,"column":12},"end":{"line":50,"column":24}},"40":{"start":{"line":52,"column":63},"end":{"line":52,"column":68}},"41":{"start":{"line":53,"column":10},"end":{"line":57,"column":11}},"42":{"start":{"line":53,"column":23},"end":{"line":53,"column":31}},"43":{"start":{"line":54,"column":12},"end":{"line":56,"column":13}},"44":{"start":{"line":54,"column":25},"end":{"line":54,"column":36}},"45":{"start":{"line":55,"column":14},"end":{"line":55,"column":62}},"46":{"start":{"line":58,"column":10},"end":{"line":58,"column":51}},"47":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"48":{"start":{"line":61,"column":10},"end":{"line":61,"column":93}},"49":{"start":{"line":67,"column":4},"end":{"line":101,"column":7}},"50":{"start":{"line":68,"column":24},"end":{"line":68,"column":40}},"51":{"start":{"line":69,"column":6},"end":{"line":71,"column":7}},"52":{"start":{"line":70,"column":8},"end":{"line":70,"column":20}},"53":{"start":{"line":72,"column":6},"end":{"line":74,"column":7}},"54":{"start":{"line":73,"column":8},"end":{"line":73,"column":45}},"55":{"start":{"line":75,"column":6},"end":{"line":77,"column":7}},"56":{"start":{"line":76,"column":8},"end":{"line":76,"column":48}},"57":{"start":{"line":78,"column":6},"end":{"line":100,"column":9}},"58":{"start":{"line":79,"column":31},"end":{"line":79,"column":49}},"59":{"start":{"line":80,"column":40},"end":{"line":80,"column":100}},"60":{"start":{"line":81,"column":43},"end":{"line":81,"column":106}},"61":{"start":{"line":82,"column":8},"end":{"line":93,"column":11}},"62":{"start":{"line":83,"column":36},"end":{"line":83,"column":82}},"63":{"start":{"line":84,"column":10},"end":{"line":86,"column":11}},"64":{"start":{"line":85,"column":12},"end":{"line":85,"column":24}},"65":{"start":{"line":87,"column":63},"end":{"line":87,"column":80}},"66":{"start":{"line":88,"column":10},"end":{"line":92,"column":11}},"67":{"start":{"line":88,"column":23},"end":{"line":88,"column":31}},"68":{"start":{"line":89,"column":12},"end":{"line":91,"column":13}},"69":{"start":{"line":89,"column":25},"end":{"line":89,"column":36}},"70":{"start":{"line":90,"column":14},"end":{"line":90,"column":62}},"71":{"start":{"line":94,"column":8},"end":{"line":96,"column":11}},"72":{"start":{"line":95,"column":10},"end":{"line":95,"column":69}},"73":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"74":{"start":{"line":98,"column":10},"end":{"line":98,"column":93}},"75":{"start":{"line":104,"column":24},"end":{"line":104,"column":26}},"76":{"start":{"line":105,"column":22},"end":{"line":105,"column":101}},"77":{"start":{"line":106,"column":4},"end":{"line":108,"column":5}},"78":{"start":{"line":107,"column":6},"end":{"line":107,"column":25}},"79":{"start":{"line":109,"column":4},"end":{"line":118,"column":7}},"80":{"start":{"line":110,"column":21},"end":{"line":110,"column":41}},"81":{"start":{"line":111,"column":6},"end":{"line":111,"column":31}},"82":{"start":{"line":112,"column":25},"end":{"line":112,"column":45}},"83":{"start":{"line":113,"column":6},"end":{"line":117,"column":9}},"84":{"start":{"line":114,"column":27},"end":{"line":114,"column":52}},"85":{"start":{"line":115,"column":24},"end":{"line":115,"column":46}},"86":{"start":{"line":116,"column":8},"end":{"line":116,"column":71}},"87":{"start":{"line":119,"column":4},"end":{"line":119,"column":23}},"88":{"start":{"line":122,"column":24},"end":{"line":122,"column":26}},"89":{"start":{"line":123,"column":21},"end":{"line":123,"column":64}},"90":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"91":{"start":{"line":125,"column":6},"end":{"line":125,"column":16}},"92":{"start":{"line":127,"column":4},"end":{"line":127,"column":29}},"93":{"start":{"line":128,"column":22},"end":{"line":128,"column":57}},"94":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"95":{"start":{"line":130,"column":6},"end":{"line":130,"column":16}},"96":{"start":{"line":132,"column":23},"end":{"line":132,"column":48}},"97":{"start":{"line":133,"column":4},"end":{"line":133,"column":67}},"98":{"start":{"line":134,"column":4},"end":{"line":134,"column":40}},"99":{"start":{"line":137,"column":4},"end":{"line":137,"column":35}},"100":{"start":{"line":140,"column":4},"end":{"line":140,"column":36}},"101":{"start":{"line":143,"column":4},"end":{"line":143,"column":38}},"102":{"start":{"line":146,"column":4},"end":{"line":146,"column":39}},"103":{"start":{"line":149,"column":4},"end":{"line":167,"column":7}},"104":{"start":{"line":150,"column":24},"end":{"line":150,"column":43}},"105":{"start":{"line":151,"column":6},"end":{"line":153,"column":7}},"106":{"start":{"line":152,"column":8},"end":{"line":152,"column":20}},"107":{"start":{"line":154,"column":6},"end":{"line":156,"column":7}},"108":{"start":{"line":155,"column":8},"end":{"line":155,"column":45}},"109":{"start":{"line":157,"column":6},"end":{"line":166,"column":9}},"110":{"start":{"line":158,"column":29},"end":{"line":158,"column":65}},"111":{"start":{"line":159,"column":28},"end":{"line":159,"column":88}},"112":{"start":{"line":160,"column":8},"end":{"line":162,"column":11}},"113":{"start":{"line":161,"column":10},"end":{"line":161,"column":40}},"114":{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},"115":{"start":{"line":164,"column":10},"end":{"line":164,"column":75}},"116":{"start":{"line":170,"column":27},"end":{"line":170,"column":69}},"117":{"start":{"line":171,"column":4},"end":{"line":173,"column":5}},"118":{"start":{"line":172,"column":6},"end":{"line":172,"column":13}},"119":{"start":{"line":174,"column":28},"end":{"line":174,"column":60}},"120":{"start":{"line":175,"column":4},"end":{"line":180,"column":5}},"121":{"start":{"line":176,"column":6},"end":{"line":176,"column":51}},"122":{"start":{"line":177,"column":6},"end":{"line":179,"column":7}},"123":{"start":{"line":178,"column":8},"end":{"line":178,"column":77}},"124":{"start":{"line":183,"column":25},"end":{"line":183,"column":104}},"125":{"start":{"line":184,"column":24},"end":{"line":184,"column":26}},"126":{"start":{"line":185,"column":27},"end":{"line":185,"column":29}},"127":{"start":{"line":186,"column":29},"end":{"line":186,"column":31}},"128":{"start":{"line":187,"column":4},"end":{"line":209,"column":5}},"129":{"start":{"line":188,"column":21},"end":{"line":188,"column":41}},"130":{"start":{"line":189,"column":21},"end":{"line":189,"column":41}},"131":{"start":{"line":190,"column":24},"end":{"line":190,"column":26}},"132":{"start":{"line":191,"column":27},"end":{"line":191,"column":29}},"133":{"start":{"line":192,"column":6},"end":{"line":205,"column":7}},"134":{"start":{"line":193,"column":24},"end":{"line":193,"column":42}},"135":{"start":{"line":194,"column":28},"end":{"line":194,"column":45}},"136":{"start":{"line":195,"column":8},"end":{"line":203,"column":10}},"137":{"start":{"line":204,"column":8},"end":{"line":204,"column":59}},"138":{"start":{"line":206,"column":6},"end":{"line":206,"column":38}},"139":{"start":{"line":207,"column":6},"end":{"line":207,"column":52}},"140":{"start":{"line":208,"column":6},"end":{"line":208,"column":46}},"141":{"start":{"line":210,"column":4},"end":{"line":214,"column":6}},"142":{"start":{"line":222,"column":25},"end":{"line":222,"column":104}},"143":{"start":{"line":223,"column":20},"end":{"line":223,"column":22}},"144":{"start":{"line":224,"column":4},"end":{"line":243,"column":5}},"145":{"start":{"line":225,"column":21},"end":{"line":225,"column":41}},"146":{"start":{"line":226,"column":21},"end":{"line":226,"column":41}},"147":{"start":{"line":227,"column":6},"end":{"line":227,"column":27}},"148":{"start":{"line":228,"column":6},"end":{"line":242,"column":7}},"149":{"start":{"line":229,"column":24},"end":{"line":229,"column":42}},"150":{"start":{"line":230,"column":8},"end":{"line":230,"column":38}},"151":{"start":{"line":231,"column":25},"end":{"line":231,"column":26}},"152":{"start":{"line":232,"column":23},"end":{"line":232,"column":46}},"153":{"start":{"line":233,"column":29},"end":{"line":233,"column":31}},"154":{"start":{"line":234,"column":8},"end":{"line":240,"column":9}},"155":{"start":{"line":234,"column":21},"end":{"line":234,"column":29}},"156":{"start":{"line":235,"column":10},"end":{"line":239,"column":11}},"157":{"start":{"line":236,"column":12},"end":{"line":238,"column":14}},"158":{"start":{"line":241,"column":8},"end":{"line":241,"column":48}},"159":{"start":{"line":244,"column":4},"end":{"line":244,"column":19}},"160":{"start":{"line":247,"column":23},"end":{"line":247,"column":50}},"161":{"start":{"line":248,"column":25},"end":{"line":248,"column":68}},"162":{"start":{"line":249,"column":47},"end":{"line":249,"column":56}},"163":{"start":{"line":250,"column":24},"end":{"line":250,"column":45}},"164":{"start":{"line":251,"column":4},"end":{"line":253,"column":5}},"165":{"start":{"line":252,"column":6},"end":{"line":252,"column":31}},"166":{"start":{"line":254,"column":32},"end":{"line":254,"column":51}},"167":{"start":{"line":255,"column":4},"end":{"line":257,"column":5}},"168":{"start":{"line":256,"column":6},"end":{"line":256,"column":40}},"169":{"start":{"line":258,"column":35},"end":{"line":258,"column":87}},"170":{"start":{"line":259,"column":38},"end":{"line":259,"column":56}},"171":{"start":{"line":260,"column":4},"end":{"line":262,"column":7}},"172":{"start":{"line":261,"column":6},"end":{"line":261,"column":132}},"173":{"start":{"line":263,"column":4},"end":{"line":289,"column":7}},"174":{"start":{"line":264,"column":28},"end":{"line":264,"column":41}},"175":{"start":{"line":265,"column":24},"end":{"line":265,"column":38}},"176":{"start":{"line":266,"column":6},"end":{"line":288,"column":7}},"177":{"start":{"line":267,"column":28},"end":{"line":267,"column":53}},"178":{"start":{"line":268,"column":30},"end":{"line":268,"column":63}},"179":{"start":{"line":269,"column":8},"end":{"line":287,"column":9}},"180":{"start":{"line":270,"column":20},"end":{"line":270,"column":33}},"181":{"start":{"line":271,"column":20},"end":{"line":271,"column":37}},"182":{"start":{"line":272,"column":20},"end":{"line":272,"column":37}},"183":{"start":{"line":273,"column":10},"end":{"line":273,"column":76}},"184":{"start":{"line":274,"column":10},"end":{"line":274,"column":79}},"185":{"start":{"line":275,"column":15},"end":{"line":287,"column":9}},"186":{"start":{"line":276,"column":20},"end":{"line":276,"column":32}},"187":{"start":{"line":277,"column":20},"end":{"line":277,"column":32}},"188":{"start":{"line":278,"column":32},"end":{"line":278,"column":96}},"189":{"start":{"line":279,"column":10},"end":{"line":279,"column":72}},"190":{"start":{"line":280,"column":10},"end":{"line":280,"column":85}},"191":{"start":{"line":281,"column":10},"end":{"line":281,"column":88}},"192":{"start":{"line":282,"column":15},"end":{"line":287,"column":9}},"193":{"start":{"line":283,"column":20},"end":{"line":283,"column":39}},"194":{"start":{"line":284,"column":20},"end":{"line":284,"column":39}},"195":{"start":{"line":285,"column":10},"end":{"line":285,"column":93}},"196":{"start":{"line":286,"column":10},"end":{"line":286,"column":96}},"197":{"start":{"line":290,"column":4},"end":{"line":290,"column":49}},"198":{"start":{"line":293,"column":30},"end":{"line":293,"column":72}},"199":{"start":{"line":294,"column":4},"end":{"line":294,"column":35}},"200":{"start":{"line":294,"column":28},"end":{"line":294,"column":35}},"201":{"start":{"line":295,"column":36},"end":{"line":295,"column":71}},"202":{"start":{"line":296,"column":23},"end":{"line":296,"column":50}},"203":{"start":{"line":297,"column":4},"end":{"line":299,"column":7}},"204":{"start":{"line":298,"column":6},"end":{"line":298,"column":52}},"205":{"start":{"line":302,"column":30},"end":{"line":302,"column":72}},"206":{"start":{"line":303,"column":4},"end":{"line":303,"column":35}},"207":{"start":{"line":303,"column":28},"end":{"line":303,"column":35}},"208":{"start":{"line":304,"column":36},"end":{"line":304,"column":71}},"209":{"start":{"line":305,"column":33},"end":{"line":305,"column":78}},"210":{"start":{"line":306,"column":4},"end":{"line":306,"column":38}},"211":{"start":{"line":306,"column":31},"end":{"line":306,"column":38}},"212":{"start":{"line":307,"column":39},"end":{"line":307,"column":77}},"213":{"start":{"line":308,"column":23},"end":{"line":308,"column":50}},"214":{"start":{"line":309,"column":4},"end":{"line":311,"column":7}},"215":{"start":{"line":310,"column":6},"end":{"line":310,"column":97}},"216":{"start":{"line":314,"column":21},"end":{"line":314,"column":64}},"217":{"start":{"line":315,"column":4},"end":{"line":317,"column":5}},"218":{"start":{"line":316,"column":6},"end":{"line":316,"column":18}},"219":{"start":{"line":318,"column":22},"end":{"line":318,"column":57}},"220":{"start":{"line":319,"column":4},"end":{"line":321,"column":5}},"221":{"start":{"line":320,"column":6},"end":{"line":320,"column":18}},"222":{"start":{"line":322,"column":23},"end":{"line":322,"column":48}},"223":{"start":{"line":323,"column":17},"end":{"line":323,"column":49}},"224":{"start":{"line":324,"column":4},"end":{"line":326,"column":5}},"225":{"start":{"line":325,"column":6},"end":{"line":325,"column":18}},"226":{"start":{"line":327,"column":22},"end":{"line":327,"column":26}},"227":{"start":{"line":328,"column":4},"end":{"line":330,"column":5}},"228":{"start":{"line":329,"column":6},"end":{"line":329,"column":15}},"229":{"start":{"line":331,"column":4},"end":{"line":348,"column":5}},"230":{"start":{"line":332,"column":26},"end":{"line":332,"column":30}},"231":{"start":{"line":333,"column":6},"end":{"line":346,"column":9}},"232":{"start":{"line":334,"column":8},"end":{"line":336,"column":9}},"233":{"start":{"line":335,"column":10},"end":{"line":335,"column":22}},"234":{"start":{"line":337,"column":41},"end":{"line":337,"column":46}},"235":{"start":{"line":338,"column":8},"end":{"line":345,"column":9}},"236":{"start":{"line":339,"column":10},"end":{"line":343,"column":12}},"237":{"start":{"line":344,"column":10},"end":{"line":344,"column":23}},"238":{"start":{"line":347,"column":6},"end":{"line":347,"column":27}},"239":{"start":{"line":349,"column":4},"end":{"line":349,"column":16}},"240":{"start":{"line":356,"column":24},"end":{"line":356,"column":45}},"241":{"start":{"line":357,"column":24},"end":{"line":357,"column":26}},"242":{"start":{"line":358,"column":4},"end":{"line":405,"column":5}},"243":{"start":{"line":359,"column":23},"end":{"line":359,"column":42}},"244":{"start":{"line":360,"column":6},"end":{"line":360,"column":30}},"245":{"start":{"line":360,"column":21},"end":{"line":360,"column":30}},"246":{"start":{"line":361,"column":31},"end":{"line":361,"column":74}},"247":{"start":{"line":362,"column":6},"end":{"line":362,"column":38}},"248":{"start":{"line":362,"column":29},"end":{"line":362,"column":38}},"249":{"start":{"line":363,"column":6},"end":{"line":404,"column":7}},"250":{"start":{"line":364,"column":22},"end":{"line":364,"column":39}},"251":{"start":{"line":365,"column":8},"end":{"line":365,"column":29}},"252":{"start":{"line":365,"column":20},"end":{"line":365,"column":29}},"253":{"start":{"line":366,"column":30},"end":{"line":366,"column":73}},"254":{"start":{"line":367,"column":8},"end":{"line":367,"column":37}},"255":{"start":{"line":367,"column":28},"end":{"line":367,"column":37}},"256":{"start":{"line":368,"column":29},"end":{"line":368,"column":31}},"257":{"start":{"line":369,"column":8},"end":{"line":385,"column":9}},"258":{"start":{"line":370,"column":22},"end":{"line":370,"column":36}},"259":{"start":{"line":371,"column":10},"end":{"line":384,"column":11}},"260":{"start":{"line":372,"column":27},"end":{"line":372,"column":44}},"261":{"start":{"line":373,"column":32},"end":{"line":373,"column":69}},"262":{"start":{"line":374,"column":30},"end":{"line":374,"column":93}},"263":{"start":{"line":375,"column":28},"end":{"line":375,"column":53}},"264":{"start":{"line":376,"column":12},"end":{"line":376,"column":50}},"265":{"start":{"line":376,"column":41},"end":{"line":376,"column":50}},"266":{"start":{"line":377,"column":12},"end":{"line":377,"column":65}},"267":{"start":{"line":377,"column":39},"end":{"line":377,"column":65}},"268":{"start":{"line":378,"column":30},"end":{"line":378,"column":63}},"269":{"start":{"line":379,"column":12},"end":{"line":383,"column":13}},"270":{"start":{"line":380,"column":14},"end":{"line":380,"column":37}},"271":{"start":{"line":382,"column":14},"end":{"line":382,"column":72}},"272":{"start":{"line":386,"column":8},"end":{"line":403,"column":9}},"273":{"start":{"line":387,"column":38},"end":{"line":387,"column":58}},"274":{"start":{"line":388,"column":10},"end":{"line":402,"column":11}},"275":{"start":{"line":388,"column":23},"end":{"line":388,"column":24}},"276":{"start":{"line":389,"column":26},"end":{"line":389,"column":48}},"277":{"start":{"line":390,"column":12},"end":{"line":401,"column":15}},"278":{"start":{"line":406,"column":4},"end":{"line":406,"column":23}},"279":{"start":{"line":409,"column":25},"end":{"line":409,"column":27}},"280":{"start":{"line":410,"column":21},"end":{"line":410,"column":64}},"281":{"start":{"line":411,"column":4},"end":{"line":413,"column":5}},"282":{"start":{"line":412,"column":6},"end":{"line":412,"column":26}},"283":{"start":{"line":414,"column":22},"end":{"line":414,"column":57}},"284":{"start":{"line":415,"column":4},"end":{"line":417,"column":5}},"285":{"start":{"line":416,"column":6},"end":{"line":416,"column":26}},"286":{"start":{"line":418,"column":23},"end":{"line":418,"column":48}},"287":{"start":{"line":419,"column":4},"end":{"line":427,"column":7}},"288":{"start":{"line":420,"column":6},"end":{"line":422,"column":7}},"289":{"start":{"line":421,"column":8},"end":{"line":421,"column":20}},"290":{"start":{"line":423,"column":24},"end":{"line":423,"column":28}},"291":{"start":{"line":424,"column":6},"end":{"line":426,"column":7}},"292":{"start":{"line":425,"column":8},"end":{"line":425,"column":39}},"293":{"start":{"line":428,"column":4},"end":{"line":428,"column":24}},"294":{"start":{"line":431,"column":0},"end":{"line":434,"column":21}},"295":{"start":{"line":436,"column":2},"end":{"line":438,"column":3}},"296":{"start":{"line":437,"column":4},"end":{"line":437,"column":29}},"297":{"start":{"line":439,"column":2},"end":{"line":441,"column":3}},"298":{"start":{"line":440,"column":4},"end":{"line":440,"column":38}},"299":{"start":{"line":442,"column":39},"end":{"line":442,"column":48}},"300":{"start":{"line":443,"column":33},"end":{"line":443,"column":79}},"301":{"start":{"line":444,"column":2},"end":{"line":465,"column":5}},"302":{"start":{"line":445,"column":26},"end":{"line":445,"column":39}},"303":{"start":{"line":446,"column":22},"end":{"line":446,"column":36}},"304":{"start":{"line":447,"column":31},"end":{"line":447,"column":61}},"305":{"start":{"line":448,"column":27},"end":{"line":448,"column":49}},"306":{"start":{"line":449,"column":4},"end":{"line":464,"column":5}},"307":{"start":{"line":450,"column":6},"end":{"line":453,"column":9}},"308":{"start":{"line":454,"column":6},"end":{"line":454,"column":62}},"309":{"start":{"line":455,"column":11},"end":{"line":464,"column":5}},"310":{"start":{"line":456,"column":6},"end":{"line":458,"column":9}},"311":{"start":{"line":459,"column":11},"end":{"line":464,"column":5}},"312":{"start":{"line":460,"column":6},"end":{"line":463,"column":9}},"313":{"start":{"line":466,"column":2},"end":{"line":480,"column":5}},"314":{"start":{"line":467,"column":26},"end":{"line":467,"column":39}},"315":{"start":{"line":468,"column":22},"end":{"line":468,"column":36}},"316":{"start":{"line":469,"column":4},"end":{"line":479,"column":5}},"317":{"start":{"line":470,"column":26},"end":{"line":470,"column":53}},"318":{"start":{"line":471,"column":6},"end":{"line":478,"column":7}},"319":{"start":{"line":472,"column":18},"end":{"line":472,"column":31}},"320":{"start":{"line":473,"column":18},"end":{"line":473,"column":35}},"321":{"start":{"line":474,"column":18},"end":{"line":474,"column":35}},"322":{"start":{"line":475,"column":8},"end":{"line":475,"column":74}},"323":{"start":{"line":477,"column":8},"end":{"line":477,"column":53}},"324":{"start":{"line":481,"column":30},"end":{"line":481,"column":64}},"325":{"start":{"line":482,"column":2},"end":{"line":486,"column":4}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":2},"end":{"line":16,"column":3}},"loc":{"start":{"line":16,"column":57},"end":{"line":20,"column":3}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":2},"end":{"line":23,"column":3}},"loc":{"start":{"line":23,"column":12},"end":{"line":27,"column":3}},"line":23},"5":{"name":"(anonymous_5)","decl":{"start":{"line":28,"column":2},"end":{"line":28,"column":3}},"loc":{"start":{"line":28,"column":63},"end":{"line":65,"column":3}},"line":28},"6":{"name":"(anonymous_6)","decl":{"start":{"line":29,"column":51},"end":{"line":29,"column":52}},"loc":{"start":{"line":29,"column":63},"end":{"line":64,"column":5}},"line":29},"7":{"name":"(anonymous_7)","decl":{"start":{"line":34,"column":42},"end":{"line":34,"column":43}},"loc":{"start":{"line":34,"column":55},"end":{"line":63,"column":7}},"line":34},"8":{"name":"(anonymous_8)","decl":{"start":{"line":47,"column":37},"end":{"line":47,"column":38}},"loc":{"start":{"line":47,"column":54},"end":{"line":59,"column":9}},"line":47},"9":{"name":"(anonymous_9)","decl":{"start":{"line":66,"column":2},"end":{"line":66,"column":3}},"loc":{"start":{"line":66,"column":38},"end":{"line":102,"column":3}},"line":66},"10":{"name":"(anonymous_10)","decl":{"start":{"line":67,"column":34},"end":{"line":67,"column":35}},"loc":{"start":{"line":67,"column":46},"end":{"line":101,"column":5}},"line":67},"11":{"name":"(anonymous_11)","decl":{"start":{"line":78,"column":37},"end":{"line":78,"column":38}},"loc":{"start":{"line":78,"column":50},"end":{"line":100,"column":7}},"line":78},"12":{"name":"(anonymous_12)","decl":{"start":{"line":82,"column":32},"end":{"line":82,"column":33}},"loc":{"start":{"line":82,"column":49},"end":{"line":93,"column":9}},"line":82},"13":{"name":"(anonymous_13)","decl":{"start":{"line":94,"column":32},"end":{"line":94,"column":33}},"loc":{"start":{"line":94,"column":59},"end":{"line":96,"column":9}},"line":94},"14":{"name":"(anonymous_14)","decl":{"start":{"line":103,"column":2},"end":{"line":103,"column":3}},"loc":{"start":{"line":103,"column":19},"end":{"line":120,"column":3}},"line":103},"15":{"name":"(anonymous_15)","decl":{"start":{"line":109,"column":22},"end":{"line":109,"column":23}},"loc":{"start":{"line":109,"column":36},"end":{"line":118,"column":5}},"line":109},"16":{"name":"(anonymous_16)","decl":{"start":{"line":113,"column":25},"end":{"line":113,"column":26}},"loc":{"start":{"line":113,"column":40},"end":{"line":117,"column":7}},"line":113},"17":{"name":"(anonymous_17)","decl":{"start":{"line":121,"column":2},"end":{"line":121,"column":3}},"loc":{"start":{"line":121,"column":39},"end":{"line":135,"column":3}},"line":121},"18":{"name":"(anonymous_18)","decl":{"start":{"line":136,"column":2},"end":{"line":136,"column":3}},"loc":{"start":{"line":136,"column":25},"end":{"line":138,"column":3}},"line":136},"19":{"name":"(anonymous_19)","decl":{"start":{"line":139,"column":2},"end":{"line":139,"column":3}},"loc":{"start":{"line":139,"column":30},"end":{"line":141,"column":3}},"line":139},"20":{"name":"(anonymous_20)","decl":{"start":{"line":142,"column":2},"end":{"line":142,"column":3}},"loc":{"start":{"line":142,"column":28},"end":{"line":144,"column":3}},"line":142},"21":{"name":"(anonymous_21)","decl":{"start":{"line":145,"column":2},"end":{"line":145,"column":3}},"loc":{"start":{"line":145,"column":33},"end":{"line":147,"column":3}},"line":145},"22":{"name":"(anonymous_22)","decl":{"start":{"line":148,"column":2},"end":{"line":148,"column":3}},"loc":{"start":{"line":148,"column":38},"end":{"line":168,"column":3}},"line":148},"23":{"name":"(anonymous_23)","decl":{"start":{"line":149,"column":37},"end":{"line":149,"column":38}},"loc":{"start":{"line":149,"column":49},"end":{"line":167,"column":5}},"line":149},"24":{"name":"(anonymous_24)","decl":{"start":{"line":157,"column":37},"end":{"line":157,"column":38}},"loc":{"start":{"line":157,"column":50},"end":{"line":166,"column":7}},"line":157},"25":{"name":"(anonymous_25)","decl":{"start":{"line":160,"column":30},"end":{"line":160,"column":31}},"loc":{"start":{"line":160,"column":43},"end":{"line":162,"column":9}},"line":160},"26":{"name":"(anonymous_26)","decl":{"start":{"line":169,"column":2},"end":{"line":169,"column":3}},"loc":{"start":{"line":169,"column":56},"end":{"line":181,"column":3}},"line":169},"27":{"name":"(anonymous_27)","decl":{"start":{"line":182,"column":2},"end":{"line":182,"column":3}},"loc":{"start":{"line":182,"column":21},"end":{"line":215,"column":3}},"line":182},"28":{"name":"(anonymous_28)","decl":{"start":{"line":221,"column":2},"end":{"line":221,"column":3}},"loc":{"start":{"line":221,"column":26},"end":{"line":245,"column":3}},"line":221},"29":{"name":"(anonymous_29)","decl":{"start":{"line":246,"column":2},"end":{"line":246,"column":3}},"loc":{"start":{"line":246,"column":48},"end":{"line":291,"column":3}},"line":246},"30":{"name":"(anonymous_30)","decl":{"start":{"line":260,"column":24},"end":{"line":260,"column":25}},"loc":{"start":{"line":260,"column":40},"end":{"line":262,"column":5}},"line":260},"31":{"name":"(anonymous_31)","decl":{"start":{"line":263,"column":36},"end":{"line":263,"column":37}},"loc":{"start":{"line":263,"column":52},"end":{"line":289,"column":5}},"line":263},"32":{"name":"(anonymous_32)","decl":{"start":{"line":292,"column":2},"end":{"line":292,"column":3}},"loc":{"start":{"line":292,"column":54},"end":{"line":300,"column":3}},"line":292},"33":{"name":"(anonymous_33)","decl":{"start":{"line":297,"column":24},"end":{"line":297,"column":25}},"loc":{"start":{"line":297,"column":40},"end":{"line":299,"column":5}},"line":297},"34":{"name":"(anonymous_34)","decl":{"start":{"line":301,"column":2},"end":{"line":301,"column":3}},"loc":{"start":{"line":301,"column":57},"end":{"line":312,"column":3}},"line":301},"35":{"name":"(anonymous_35)","decl":{"start":{"line":309,"column":24},"end":{"line":309,"column":25}},"loc":{"start":{"line":309,"column":40},"end":{"line":311,"column":5}},"line":309},"36":{"name":"(anonymous_36)","decl":{"start":{"line":313,"column":2},"end":{"line":313,"column":3}},"loc":{"start":{"line":313,"column":55},"end":{"line":350,"column":3}},"line":313},"37":{"name":"(anonymous_37)","decl":{"start":{"line":333,"column":26},"end":{"line":333,"column":27}},"loc":{"start":{"line":333,"column":43},"end":{"line":346,"column":7}},"line":333},"38":{"name":"(anonymous_38)","decl":{"start":{"line":355,"column":2},"end":{"line":355,"column":3}},"loc":{"start":{"line":355,"column":26},"end":{"line":407,"column":3}},"line":355},"39":{"name":"(anonymous_39)","decl":{"start":{"line":408,"column":2},"end":{"line":408,"column":3}},"loc":{"start":{"line":408,"column":41},"end":{"line":429,"column":3}},"line":408},"40":{"name":"(anonymous_40)","decl":{"start":{"line":419,"column":24},"end":{"line":419,"column":25}},"loc":{"start":{"line":419,"column":40},"end":{"line":427,"column":5}},"line":419},"41":{"name":"initSheetFormulaData","decl":{"start":{"line":435,"column":16},"end":{"line":435,"column":36}},"loc":{"start":{"line":435,"column":79},"end":{"line":487,"column":1}},"line":435},"42":{"name":"(anonymous_42)","decl":{"start":{"line":444,"column":22},"end":{"line":444,"column":23}},"loc":{"start":{"line":444,"column":38},"end":{"line":465,"column":3}},"line":444},"43":{"name":"(anonymous_43)","decl":{"start":{"line":466,"column":34},"end":{"line":466,"column":35}},"loc":{"start":{"line":466,"column":50},"end":{"line":480,"column":3}},"line":466}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},{"start":{},"end":{}}],"line":31},"8":{"loc":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},{"start":{},"end":{}}],"line":37},"9":{"loc":{"start":{"line":42,"column":8},"end":{"line":46,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":46,"column":9}},{"start":{},"end":{}}],"line":42},"10":{"loc":{"start":{"line":49,"column":10},"end":{"line":51,"column":11}},"type":"if","locations":[{"start":{"line":49,"column":10},"end":{"line":51,"column":11}},{"start":{},"end":{}}],"line":49},"11":{"loc":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},{"start":{},"end":{}}],"line":60},"12":{"loc":{"start":{"line":69,"column":6},"end":{"line":71,"column":7}},"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":71,"column":7}},{"start":{},"end":{}}],"line":69},"13":{"loc":{"start":{"line":72,"column":6},"end":{"line":74,"column":7}},"type":"if","locations":[{"start":{"line":72,"column":6},"end":{"line":74,"column":7}},{"start":{},"end":{}}],"line":72},"14":{"loc":{"start":{"line":75,"column":6},"end":{"line":77,"column":7}},"type":"if","locations":[{"start":{"line":75,"column":6},"end":{"line":77,"column":7}},{"start":{},"end":{}}],"line":75},"15":{"loc":{"start":{"line":84,"column":10},"end":{"line":86,"column":11}},"type":"if","locations":[{"start":{"line":84,"column":10},"end":{"line":86,"column":11}},{"start":{},"end":{}}],"line":84},"16":{"loc":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},{"start":{},"end":{}}],"line":97},"17":{"loc":{"start":{"line":106,"column":4},"end":{"line":108,"column":5}},"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":108,"column":5}},{"start":{},"end":{}}],"line":106},"18":{"loc":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},{"start":{},"end":{}}],"line":124},"19":{"loc":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},{"start":{},"end":{}}],"line":129},"20":{"loc":{"start":{"line":151,"column":6},"end":{"line":153,"column":7}},"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":153,"column":7}},{"start":{},"end":{}}],"line":151},"21":{"loc":{"start":{"line":154,"column":6},"end":{"line":156,"column":7}},"type":"if","locations":[{"start":{"line":154,"column":6},"end":{"line":156,"column":7}},{"start":{},"end":{}}],"line":154},"22":{"loc":{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},"type":"if","locations":[{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},{"start":{},"end":{}}],"line":163},"23":{"loc":{"start":{"line":171,"column":4},"end":{"line":173,"column":5}},"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":173,"column":5}},{"start":{},"end":{}}],"line":171},"24":{"loc":{"start":{"line":175,"column":4},"end":{"line":180,"column":5}},"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":180,"column":5}},{"start":{},"end":{}}],"line":175},"25":{"loc":{"start":{"line":177,"column":6},"end":{"line":179,"column":7}},"type":"if","locations":[{"start":{"line":177,"column":6},"end":{"line":179,"column":7}},{"start":{},"end":{}}],"line":177},"26":{"loc":{"start":{"line":235,"column":10},"end":{"line":239,"column":11}},"type":"if","locations":[{"start":{"line":235,"column":10},"end":{"line":239,"column":11}},{"start":{},"end":{}}],"line":235},"27":{"loc":{"start":{"line":251,"column":4},"end":{"line":253,"column":5}},"type":"if","locations":[{"start":{"line":251,"column":4},"end":{"line":253,"column":5}},{"start":{},"end":{}}],"line":251},"28":{"loc":{"start":{"line":255,"column":4},"end":{"line":257,"column":5}},"type":"if","locations":[{"start":{"line":255,"column":4},"end":{"line":257,"column":5}},{"start":{},"end":{}}],"line":255},"29":{"loc":{"start":{"line":258,"column":52},"end":{"line":258,"column":86}},"type":"binary-expr","locations":[{"start":{"line":258,"column":52},"end":{"line":258,"column":80}},{"start":{"line":258,"column":84},"end":{"line":258,"column":86}}],"line":258},"30":{"loc":{"start":{"line":264,"column":28},"end":{"line":264,"column":41}},"type":"binary-expr","locations":[{"start":{"line":264,"column":28},"end":{"line":264,"column":35}},{"start":{"line":264,"column":39},"end":{"line":264,"column":41}}],"line":264},"31":{"loc":{"start":{"line":265,"column":24},"end":{"line":265,"column":38}},"type":"binary-expr","locations":[{"start":{"line":265,"column":24},"end":{"line":265,"column":32}},{"start":{"line":265,"column":36},"end":{"line":265,"column":38}}],"line":265},"32":{"loc":{"start":{"line":266,"column":6},"end":{"line":288,"column":7}},"type":"if","locations":[{"start":{"line":266,"column":6},"end":{"line":288,"column":7}},{"start":{},"end":{}}],"line":266},"33":{"loc":{"start":{"line":269,"column":8},"end":{"line":287,"column":9}},"type":"if","locations":[{"start":{"line":269,"column":8},"end":{"line":287,"column":9}},{"start":{"line":275,"column":15},"end":{"line":287,"column":9}}],"line":269},"34":{"loc":{"start":{"line":269,"column":12},"end":{"line":269,"column":58}},"type":"binary-expr","locations":[{"start":{"line":269,"column":12},"end":{"line":269,"column":23}},{"start":{"line":269,"column":27},"end":{"line":269,"column":58}}],"line":269},"35":{"loc":{"start":{"line":275,"column":15},"end":{"line":287,"column":9}},"type":"if","locations":[{"start":{"line":275,"column":15},"end":{"line":287,"column":9}},{"start":{"line":282,"column":15},"end":{"line":287,"column":9}}],"line":275},"36":{"loc":{"start":{"line":276,"column":20},"end":{"line":276,"column":32}},"type":"binary-expr","locations":[{"start":{"line":276,"column":20},"end":{"line":276,"column":27}},{"start":{"line":276,"column":31},"end":{"line":276,"column":32}}],"line":276},"37":{"loc":{"start":{"line":277,"column":20},"end":{"line":277,"column":32}},"type":"binary-expr","locations":[{"start":{"line":277,"column":20},"end":{"line":277,"column":27}},{"start":{"line":277,"column":31},"end":{"line":277,"column":32}}],"line":277},"38":{"loc":{"start":{"line":282,"column":15},"end":{"line":287,"column":9}},"type":"if","locations":[{"start":{"line":282,"column":15},"end":{"line":287,"column":9}},{"start":{},"end":{}}],"line":282},"39":{"loc":{"start":{"line":294,"column":4},"end":{"line":294,"column":35}},"type":"if","locations":[{"start":{"line":294,"column":4},"end":{"line":294,"column":35}},{"start":{},"end":{}}],"line":294},"40":{"loc":{"start":{"line":303,"column":4},"end":{"line":303,"column":35}},"type":"if","locations":[{"start":{"line":303,"column":4},"end":{"line":303,"column":35}},{"start":{},"end":{}}],"line":303},"41":{"loc":{"start":{"line":306,"column":4},"end":{"line":306,"column":38}},"type":"if","locations":[{"start":{"line":306,"column":4},"end":{"line":306,"column":38}},{"start":{},"end":{}}],"line":306},"42":{"loc":{"start":{"line":315,"column":4},"end":{"line":317,"column":5}},"type":"if","locations":[{"start":{"line":315,"column":4},"end":{"line":317,"column":5}},{"start":{},"end":{}}],"line":315},"43":{"loc":{"start":{"line":319,"column":4},"end":{"line":321,"column":5}},"type":"if","locations":[{"start":{"line":319,"column":4},"end":{"line":321,"column":5}},{"start":{},"end":{}}],"line":319},"44":{"loc":{"start":{"line":324,"column":4},"end":{"line":326,"column":5}},"type":"if","locations":[{"start":{"line":324,"column":4},"end":{"line":326,"column":5}},{"start":{},"end":{}}],"line":324},"45":{"loc":{"start":{"line":328,"column":4},"end":{"line":330,"column":5}},"type":"if","locations":[{"start":{"line":328,"column":4},"end":{"line":330,"column":5}},{"start":{},"end":{}}],"line":328},"46":{"loc":{"start":{"line":331,"column":4},"end":{"line":348,"column":5}},"type":"if","locations":[{"start":{"line":331,"column":4},"end":{"line":348,"column":5}},{"start":{},"end":{}}],"line":331},"47":{"loc":{"start":{"line":334,"column":8},"end":{"line":336,"column":9}},"type":"if","locations":[{"start":{"line":334,"column":8},"end":{"line":336,"column":9}},{"start":{},"end":{}}],"line":334},"48":{"loc":{"start":{"line":338,"column":8},"end":{"line":345,"column":9}},"type":"if","locations":[{"start":{"line":338,"column":8},"end":{"line":345,"column":9}},{"start":{},"end":{}}],"line":338},"49":{"loc":{"start":{"line":338,"column":12},"end":{"line":338,"column":51}},"type":"binary-expr","locations":[{"start":{"line":338,"column":12},"end":{"line":338,"column":31}},{"start":{"line":338,"column":35},"end":{"line":338,"column":51}}],"line":338},"50":{"loc":{"start":{"line":360,"column":6},"end":{"line":360,"column":30}},"type":"if","locations":[{"start":{"line":360,"column":6},"end":{"line":360,"column":30}},{"start":{},"end":{}}],"line":360},"51":{"loc":{"start":{"line":362,"column":6},"end":{"line":362,"column":38}},"type":"if","locations":[{"start":{"line":362,"column":6},"end":{"line":362,"column":38}},{"start":{},"end":{}}],"line":362},"52":{"loc":{"start":{"line":365,"column":8},"end":{"line":365,"column":29}},"type":"if","locations":[{"start":{"line":365,"column":8},"end":{"line":365,"column":29}},{"start":{},"end":{}}],"line":365},"53":{"loc":{"start":{"line":367,"column":8},"end":{"line":367,"column":37}},"type":"if","locations":[{"start":{"line":367,"column":8},"end":{"line":367,"column":37}},{"start":{},"end":{}}],"line":367},"54":{"loc":{"start":{"line":374,"column":30},"end":{"line":374,"column":93}},"type":"binary-expr","locations":[{"start":{"line":374,"column":30},"end":{"line":374,"column":61}},{"start":{"line":374,"column":65},"end":{"line":374,"column":93}}],"line":374},"55":{"loc":{"start":{"line":376,"column":12},"end":{"line":376,"column":50}},"type":"if","locations":[{"start":{"line":376,"column":12},"end":{"line":376,"column":50}},{"start":{},"end":{}}],"line":376},"56":{"loc":{"start":{"line":376,"column":18},"end":{"line":376,"column":38}},"type":"binary-expr","locations":[{"start":{"line":376,"column":18},"end":{"line":376,"column":27}},{"start":{"line":376,"column":31},"end":{"line":376,"column":38}}],"line":376},"57":{"loc":{"start":{"line":377,"column":12},"end":{"line":377,"column":65}},"type":"if","locations":[{"start":{"line":377,"column":12},"end":{"line":377,"column":65}},{"start":{},"end":{}}],"line":377},"58":{"loc":{"start":{"line":379,"column":12},"end":{"line":383,"column":13}},"type":"if","locations":[{"start":{"line":379,"column":12},"end":{"line":383,"column":13}},{"start":{"line":381,"column":19},"end":{"line":383,"column":13}}],"line":379},"59":{"loc":{"start":{"line":379,"column":16},"end":{"line":379,"column":57}},"type":"binary-expr","locations":[{"start":{"line":379,"column":16},"end":{"line":379,"column":25}},{"start":{"line":379,"column":29},"end":{"line":379,"column":57}}],"line":379},"60":{"loc":{"start":{"line":411,"column":4},"end":{"line":413,"column":5}},"type":"if","locations":[{"start":{"line":411,"column":4},"end":{"line":413,"column":5}},{"start":{},"end":{}}],"line":411},"61":{"loc":{"start":{"line":415,"column":4},"end":{"line":417,"column":5}},"type":"if","locations":[{"start":{"line":415,"column":4},"end":{"line":417,"column":5}},{"start":{},"end":{}}],"line":415},"62":{"loc":{"start":{"line":420,"column":6},"end":{"line":422,"column":7}},"type":"if","locations":[{"start":{"line":420,"column":6},"end":{"line":422,"column":7}},{"start":{},"end":{}}],"line":420},"63":{"loc":{"start":{"line":424,"column":6},"end":{"line":426,"column":7}},"type":"if","locations":[{"start":{"line":424,"column":6},"end":{"line":426,"column":7}},{"start":{},"end":{}}],"line":424},"64":{"loc":{"start":{"line":424,"column":10},"end":{"line":424,"column":47}},"type":"binary-expr","locations":[{"start":{"line":424,"column":10},"end":{"line":424,"column":28}},{"start":{"line":424,"column":32},"end":{"line":424,"column":47}}],"line":424},"65":{"loc":{"start":{"line":436,"column":2},"end":{"line":438,"column":3}},"type":"if","locations":[{"start":{"line":436,"column":2},"end":{"line":438,"column":3}},{"start":{},"end":{}}],"line":436},"66":{"loc":{"start":{"line":439,"column":2},"end":{"line":441,"column":3}},"type":"if","locations":[{"start":{"line":439,"column":2},"end":{"line":441,"column":3}},{"start":{},"end":{}}],"line":439},"67":{"loc":{"start":{"line":445,"column":26},"end":{"line":445,"column":39}},"type":"binary-expr","locations":[{"start":{"line":445,"column":26},"end":{"line":445,"column":33}},{"start":{"line":445,"column":37},"end":{"line":445,"column":39}}],"line":445},"68":{"loc":{"start":{"line":446,"column":22},"end":{"line":446,"column":36}},"type":"binary-expr","locations":[{"start":{"line":446,"column":22},"end":{"line":446,"column":30}},{"start":{"line":446,"column":34},"end":{"line":446,"column":36}}],"line":446},"69":{"loc":{"start":{"line":449,"column":4},"end":{"line":464,"column":5}},"type":"if","locations":[{"start":{"line":449,"column":4},"end":{"line":464,"column":5}},{"start":{"line":455,"column":11},"end":{"line":464,"column":5}}],"line":449},"70":{"loc":{"start":{"line":449,"column":8},"end":{"line":449,"column":44}},"type":"binary-expr","locations":[{"start":{"line":449,"column":8},"end":{"line":449,"column":26}},{"start":{"line":449,"column":30},"end":{"line":449,"column":44}}],"line":449},"71":{"loc":{"start":{"line":455,"column":11},"end":{"line":464,"column":5}},"type":"if","locations":[{"start":{"line":455,"column":11},"end":{"line":464,"column":5}},{"start":{"line":459,"column":11},"end":{"line":464,"column":5}}],"line":455},"72":{"loc":{"start":{"line":455,"column":15},"end":{"line":455,"column":52}},"type":"binary-expr","locations":[{"start":{"line":455,"column":15},"end":{"line":455,"column":33}},{"start":{"line":455,"column":37},"end":{"line":455,"column":52}}],"line":455},"73":{"loc":{"start":{"line":459,"column":11},"end":{"line":464,"column":5}},"type":"if","locations":[{"start":{"line":459,"column":11},"end":{"line":464,"column":5}},{"start":{},"end":{}}],"line":459},"74":{"loc":{"start":{"line":459,"column":15},"end":{"line":459,"column":52}},"type":"binary-expr","locations":[{"start":{"line":459,"column":15},"end":{"line":459,"column":34}},{"start":{"line":459,"column":38},"end":{"line":459,"column":52}}],"line":459},"75":{"loc":{"start":{"line":467,"column":26},"end":{"line":467,"column":39}},"type":"binary-expr","locations":[{"start":{"line":467,"column":26},"end":{"line":467,"column":33}},{"start":{"line":467,"column":37},"end":{"line":467,"column":39}}],"line":467},"76":{"loc":{"start":{"line":468,"column":22},"end":{"line":468,"column":36}},"type":"binary-expr","locations":[{"start":{"line":468,"column":22},"end":{"line":468,"column":30}},{"start":{"line":468,"column":34},"end":{"line":468,"column":36}}],"line":468},"77":{"loc":{"start":{"line":469,"column":4},"end":{"line":479,"column":5}},"type":"if","locations":[{"start":{"line":469,"column":4},"end":{"line":479,"column":5}},{"start":{},"end":{}}],"line":469},"78":{"loc":{"start":{"line":469,"column":8},"end":{"line":469,"column":65}},"type":"binary-expr","locations":[{"start":{"line":469,"column":8},"end":{"line":469,"column":30}},{"start":{"line":469,"column":34},"end":{"line":469,"column":65}}],"line":469},"79":{"loc":{"start":{"line":471,"column":6},"end":{"line":478,"column":7}},"type":"if","locations":[{"start":{"line":471,"column":6},"end":{"line":478,"column":7}},{"start":{"line":476,"column":13},"end":{"line":478,"column":7}}],"line":471}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":1,"9":0,"10":1,"11":1,"12":2,"13":2,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":1,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0},"f":{"0":1,"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},"b":{"0":[0,1],"1":[0,1],"2":[2,0],"3":[2,2],"4":[0,2],"5":[0,1],"6":[1,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/models/formula-data.model.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, IObjectArrayPrimitiveType, IObjectMatrixPrimitiveType, IRange, IRowData, IUnitRange, Nullable, Workbook } from '@univerjs/core';\nimport type {\n    IArrayFormulaRangeType,\n    IArrayFormulaUnitCellType,\n    IFormulaData,\n    IFormulaDataItem,\n    IFormulaIdMap,\n    IRuntimeUnitDataType,\n    ISheetData,\n    IUnitData,\n    IUnitRowData,\n    IUnitSheetNameMap,\n    IUnitStylesData,\n} from '../basics/common';\n\nimport { BooleanNumber, Disposable, Inject, isFormulaId, isFormulaString, IUniverInstanceService, ObjectMatrix, RANGE_TYPE, UniverInstanceType } from '@univerjs/core';\nimport { LexerTreeBuilder } from '../engine/analysis/lexer-tree-builder';\nimport { clearArrayFormulaCellDataByCell, updateFormulaDataByCellValue } from './utils/formula-data-util';\n\nexport interface IRangeChange {\n    oldCell: IRange;\n    newCell: IRange | null;\n}\n\nexport class FormulaDataModel extends Disposable {\n    private _arrayFormulaRange: IArrayFormulaRangeType = {};\n\n    private _arrayFormulaCellData: IArrayFormulaUnitCellType = {};\n\n    constructor(\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @Inject(LexerTreeBuilder) private readonly _lexerTreeBuilder: LexerTreeBuilder\n    ) {\n        super();\n    }\n\n    override dispose() {\n        super.dispose();\n        this._arrayFormulaRange = {};\n        this._arrayFormulaCellData = {};\n    }\n\n    clearPreviousArrayFormulaCellData(clearArrayFormulaCellData: IRuntimeUnitDataType) {\n        Object.keys(clearArrayFormulaCellData).forEach((unitId) => {\n            const clearSheetData = clearArrayFormulaCellData[unitId];\n\n            if (clearSheetData == null) {\n                return true;\n            }\n\n            Object.keys(clearSheetData).forEach((sheetId) => {\n                const clearCellMatrixData = clearSheetData[sheetId];\n                const formulaRange = this._arrayFormulaRange?.[unitId]?.[sheetId];\n                if (formulaRange == null) {\n                    return true;\n                }\n\n                const rangeMatrix = new ObjectMatrix<IRange>(formulaRange); // Original array formula range.\n                let arrayFormulaCellMatrixData = new ObjectMatrix<Nullable<ICellData>>(); // Original array formula cell data.\n\n                if (this._arrayFormulaCellData[unitId]?.[sheetId] != null) {\n                    arrayFormulaCellMatrixData = new ObjectMatrix<Nullable<ICellData>>(\n                        this._arrayFormulaCellData[unitId]?.[sheetId]\n                    );\n                }\n\n                clearCellMatrixData.forValue((row, column) => {\n                    const range = rangeMatrix.getValue(row, column);\n                    if (range == null) {\n                        return true;\n                    }\n\n                    const { startRow, startColumn, endRow, endColumn } = range;\n                    for (let r = startRow; r <= endRow; r++) {\n                        for (let c = startColumn; c <= endColumn; c++) {\n                            arrayFormulaCellMatrixData.setValue(r, c, null);\n                        }\n                    }\n\n                    // clear the array formula range\n                    rangeMatrix.realDeleteValue(row, column);\n                });\n\n                if (this._arrayFormulaCellData[unitId]) {\n                    this._arrayFormulaCellData[unitId]![sheetId] = arrayFormulaCellMatrixData.getData();\n                }\n            });\n        });\n    }\n\n    mergeArrayFormulaCellData(unitData: IRuntimeUnitDataType) {\n        Object.keys(unitData).forEach((unitId) => {\n            const sheetData = unitData[unitId];\n\n            if (sheetData == null) {\n                return true;\n            }\n\n            if (this._arrayFormulaRange[unitId] == null) {\n                this._arrayFormulaRange[unitId] = {};\n            }\n\n            if (this._arrayFormulaCellData[unitId] == null) {\n                this._arrayFormulaCellData[unitId] = {};\n            }\n\n            Object.keys(sheetData).forEach((sheetId) => {\n                const cellMatrixData = sheetData[sheetId]; // The runtime data for array formula value calculated by the formula engine.\n\n                const arrayFormulaRangeMatrix = new ObjectMatrix<IRange>(this._arrayFormulaRange[unitId]?.[sheetId]); // Original array formula range.\n                const arrayFormulaCellMatrixData = new ObjectMatrix<Nullable<ICellData>>(this._arrayFormulaCellData[unitId]?.[sheetId]); // Original array formula cell data.\n\n                /**\n                 * If the calculated value of the array formula is updated, clear the values within the original data formula range.\n                 */\n                cellMatrixData.forValue((row, column) => {\n                    const arrayFormulaRange = arrayFormulaRangeMatrix?.getValue(row, column);\n                    if (arrayFormulaRange == null) {\n                        return true;\n                    }\n                    const { startRow, startColumn, endRow, endColumn } = arrayFormulaRange;\n                    for (let r = startRow; r <= endRow; r++) {\n                        for (let c = startColumn; c <= endColumn; c++) {\n                            arrayFormulaCellMatrixData.setValue(r, c, null);\n                        }\n                    }\n                });\n\n                cellMatrixData.forValue((row, column, cellData) => {\n                    arrayFormulaCellMatrixData.setValue(row, column, cellData);\n                });\n\n                if (this._arrayFormulaCellData[unitId]) {\n                    this._arrayFormulaCellData[unitId]![sheetId] = arrayFormulaCellMatrixData.getData();\n                }\n            });\n        });\n    }\n\n    getFormulaData(): IFormulaData {\n        const formulaData: IFormulaData = {};\n        const allSheets = this._univerInstanceService.getAllUnitsForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n        if (allSheets.length === 0) {\n            return formulaData;\n        }\n\n        allSheets.forEach((workbook) => {\n            const unitId = workbook.getUnitId();\n            formulaData[unitId] = {};\n\n            const worksheets = workbook.getSheets();\n            worksheets.forEach((worksheet) => {\n                const cellMatrix = worksheet.getCellMatrix();\n                const sheetId = worksheet.getSheetId();\n\n                initSheetFormulaData(formulaData, unitId, sheetId, cellMatrix);\n            });\n        });\n\n        return formulaData;\n    }\n\n    getSheetFormulaData(unitId: string, sheetId: string) {\n        const formulaData: IFormulaData = {};\n        const workbook = this._univerInstanceService.getUnit<Workbook>(unitId);\n        if (workbook == null) {\n            return {};\n        }\n\n        formulaData[unitId] = {};\n\n        const worksheet = workbook.getSheetBySheetId(sheetId);\n        if (worksheet == null) {\n            return {};\n        }\n\n        const cellMatrix = worksheet.getCellMatrix();\n\n        initSheetFormulaData(formulaData, unitId, sheetId, cellMatrix);\n\n        return formulaData[unitId][sheetId];\n    }\n\n    getArrayFormulaRange(): IArrayFormulaRangeType {\n        return this._arrayFormulaRange;\n    }\n\n    setArrayFormulaRange(value: IArrayFormulaRangeType) {\n        this._arrayFormulaRange = value;\n    }\n\n    getArrayFormulaCellData() {\n        return this._arrayFormulaCellData;\n    }\n\n    setArrayFormulaCellData(value: IArrayFormulaUnitCellType) {\n        this._arrayFormulaCellData = value;\n    }\n\n    mergeArrayFormulaRange(formulaData: IArrayFormulaRangeType) {\n        Object.keys(formulaData).forEach((unitId) => {\n            const sheetData = formulaData[unitId];\n\n            if (sheetData == null) {\n                return true;\n            }\n\n            if (!this._arrayFormulaRange[unitId]) {\n                this._arrayFormulaRange[unitId] = {};\n            }\n\n            Object.keys(sheetData).forEach((sheetId) => {\n                const arrayFormula = new ObjectMatrix(sheetData[sheetId]);\n                const rangeMatrix = new ObjectMatrix(this._arrayFormulaRange[unitId]?.[sheetId]);\n\n                arrayFormula.forValue((r, c, v) => {\n                    rangeMatrix.setValue(r, c, v);\n                });\n\n                if (this._arrayFormulaRange[unitId]) {\n                    this._arrayFormulaRange[unitId]![sheetId] = rangeMatrix.getData();\n                }\n            });\n        });\n    }\n\n    deleteArrayFormulaRange(unitId: string, sheetId: string, row: number, column: number) {\n        const cellMatrixData = this._arrayFormulaRange[unitId]?.[sheetId];\n        if (cellMatrixData == null) {\n            return;\n        }\n        const rangeMatrixData = new ObjectMatrix(cellMatrixData);\n        if (rangeMatrixData.getValue(row, column)) {\n            rangeMatrixData.realDeleteValue(row, column);\n\n            if (this._arrayFormulaRange[unitId]) {\n                this._arrayFormulaRange[unitId]![sheetId] = rangeMatrixData.getData();\n            }\n        }\n    }\n\n    getCalculateData() {\n        const unitAllSheet = this._univerInstanceService.getAllUnitsForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n\n        const allUnitData: IUnitData = {};\n\n        const unitStylesData: IUnitStylesData = {};\n\n        const unitSheetNameMap: IUnitSheetNameMap = {};\n\n        for (const workbook of unitAllSheet) {\n            const unitId = workbook.getUnitId();\n\n            const sheets = workbook.getSheets();\n\n            const sheetData: ISheetData = {};\n\n            const sheetNameMap: { [sheetName: string]: string } = {};\n\n            for (const sheet of sheets) {\n                const sheetId = sheet.getSheetId();\n\n                const sheetConfig = sheet.getConfig();\n                sheetData[sheetId] = {\n                    cellData: new ObjectMatrix(sheetConfig.cellData),\n                    rowCount: sheetConfig.rowCount,\n                    columnCount: sheetConfig.columnCount,\n                    rowData: sheetConfig.rowData,\n                    columnData: sheetConfig.columnData,\n                    defaultRowHeight: sheetConfig.defaultRowHeight,\n                    defaultColumnWidth: sheetConfig.defaultColumnWidth,\n                };\n                sheetNameMap[sheet.getName()] = sheet.getSheetId();\n            }\n\n            allUnitData[unitId] = sheetData;\n\n            unitStylesData[unitId] = workbook.getStyles();\n\n            unitSheetNameMap[unitId] = sheetNameMap;\n        }\n\n        return {\n            allUnitData,\n            unitStylesData,\n            unitSheetNameMap,\n        };\n    }\n\n    /**\n     * Get the hidden rows that are filtered or manually hidden.\n     *\n     * For formulas that are sensitive to hidden rows.\n     */\n    getHiddenRowsFiltered() {\n        const unitAllSheet = this._univerInstanceService.getAllUnitsForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n        const rowData: IUnitRowData = {};\n\n        for (const workbook of unitAllSheet) {\n            const unitId = workbook.getUnitId();\n            const sheets = workbook.getSheets();\n            rowData[unitId] = {};\n\n            for (const sheet of sheets) {\n                const sheetId = sheet.getSheetId();\n                rowData[unitId][sheetId] = {};\n\n                const startRow = 0;\n                const endRow = sheet.getRowCount() - 1;\n                const sheetRowData: IObjectArrayPrimitiveType<Partial<IRowData>> = {};\n\n                for (let i = startRow; i <= endRow; i++) {\n                    if (!sheet.getRowVisible(i)) {\n                        sheetRowData[i] = {\n                            hd: BooleanNumber.TRUE,\n                        };\n                    }\n                }\n\n                rowData[unitId][sheetId] = sheetRowData;\n            }\n        }\n\n        return rowData;\n    }\n\n    updateFormulaData(unitId: string, sheetId: string, cellValue: IObjectMatrixPrimitiveType<Nullable<ICellData>>) {\n        const cellMatrix = new ObjectMatrix(cellValue);\n\n        const formulaIdMap = this._getSheetFormulaIdMap(unitId, sheetId); // Connect the formula and ID\n\n        const deleteFormulaIdMap = new Map<string, string | IFormulaIdMap>();\n\n        const formulaData = this.getFormulaData();\n\n        if (formulaData[unitId] == null) {\n            formulaData[unitId] = {};\n        }\n\n        const workbookFormulaData = formulaData[unitId]!;\n\n        if (workbookFormulaData[sheetId] == null) {\n            workbookFormulaData[sheetId] = {};\n        }\n\n        const sheetFormulaDataMatrix = new ObjectMatrix<Nullable<IFormulaDataItem>>(workbookFormulaData[sheetId] || {});\n        const newSheetFormulaDataMatrix = new ObjectMatrix<IFormulaDataItem | null>();\n\n        cellMatrix.forValue((r, c, cell) => {\n            updateFormulaDataByCellValue(sheetFormulaDataMatrix, newSheetFormulaDataMatrix, formulaIdMap, deleteFormulaIdMap, r, c, cell);\n        });\n\n        // Convert the formula ID to formula string\n        sheetFormulaDataMatrix.forValue((r, c, cell) => {\n            const formulaString = cell?.f || '';\n            const formulaId = cell?.si || '';\n\n            if (isFormulaId(formulaId)) {\n                const formulaInfo = formulaIdMap?.[formulaId];\n                const deleteFormula = deleteFormulaIdMap.get(formulaId);\n\n                if (formulaInfo && !isFormulaString(formulaString)) {\n                    const f = formulaInfo.f;\n                    const x = c - formulaInfo.c;\n                    const y = r - formulaInfo.r;\n\n                    sheetFormulaDataMatrix.setValue(r, c, { f, si: formulaId, x, y });\n                    newSheetFormulaDataMatrix.setValue(r, c, { f, si: formulaId, x, y });\n                } else if (typeof deleteFormula === 'string') {\n                    const x = cell?.x || 0;\n                    const y = cell?.y || 0;\n                    const offsetFormula = this._lexerTreeBuilder.moveFormulaRefOffset(deleteFormula, x, y);\n\n                    deleteFormulaIdMap.set(formulaId, { r, c, f: offsetFormula });\n\n                    sheetFormulaDataMatrix.setValue(r, c, { f: offsetFormula, si: formulaId });\n                    newSheetFormulaDataMatrix.setValue(r, c, { f: offsetFormula, si: formulaId });\n                } else if (typeof deleteFormula === 'object') {\n                    const x = c - deleteFormula.c;\n                    const y = r - deleteFormula.r;\n\n                    sheetFormulaDataMatrix.setValue(r, c, { f: deleteFormula.f, si: formulaId, x, y });\n                    newSheetFormulaDataMatrix.setValue(r, c, { f: deleteFormula.f, si: formulaId, x, y });\n                }\n            }\n        });\n\n        return newSheetFormulaDataMatrix.getMatrix();\n    }\n\n    updateArrayFormulaRange(\n        unitId: string,\n        sheetId: string,\n        cellValue: IObjectMatrixPrimitiveType<Nullable<ICellData>>\n    ) {\n        // remove the array formula range when cell value is null\n\n        const arrayFormulaRange = this._arrayFormulaRange[unitId]?.[sheetId];\n\n        if (!arrayFormulaRange) return;\n\n        const arrayFormulaRangeMatrix = new ObjectMatrix(arrayFormulaRange);\n        const cellMatrix = new ObjectMatrix(cellValue);\n\n        cellMatrix.forValue((r, c, cell) => {\n            arrayFormulaRangeMatrix.realDeleteValue(r, c);\n        });\n    }\n\n    updateArrayFormulaCellData(\n        unitId: string,\n        sheetId: string,\n        cellValue: IObjectMatrixPrimitiveType<Nullable<ICellData>>\n    ) {\n        // remove the array formula range when cell value is null\n\n        const arrayFormulaRange = this._arrayFormulaRange[unitId]?.[sheetId];\n\n        if (!arrayFormulaRange) return;\n\n        const arrayFormulaRangeMatrix = new ObjectMatrix(arrayFormulaRange);\n\n        const arrayFormulaCellData = this._arrayFormulaCellData[unitId]?.[sheetId];\n\n        if (!arrayFormulaCellData) return;\n\n        const arrayFormulaCellDataMatrix = new ObjectMatrix(arrayFormulaCellData);\n\n        const cellMatrix = new ObjectMatrix(cellValue);\n\n        cellMatrix.forValue((r, c, cell) => {\n            clearArrayFormulaCellDataByCell(arrayFormulaRangeMatrix, arrayFormulaCellDataMatrix, r, c);\n        });\n    }\n\n    getFormulaStringByCell(row: number, column: number, sheetId: string, unitId: string) {\n        const workbook = this._univerInstanceService.getUnit<Workbook>(unitId);\n        if (workbook == null) {\n            return null;\n        }\n\n        const worksheet = workbook.getSheetBySheetId(sheetId);\n        if (worksheet == null) {\n            return null;\n        }\n\n        const cellMatrix = worksheet.getCellMatrix();\n\n        const cell = cellMatrix.getValue(row, column);\n\n        if (cell == null) {\n            return null;\n        }\n\n        const { f, si } = cell;\n\n        if (isFormulaString(f)) {\n            return f;\n        }\n\n        if (isFormulaId(si)) {\n            let formulaString: Nullable<string> = null;\n\n            // Get the result in one traversal, pay attention to performance\n            cellMatrix.forValue((r, c, cell) => {\n                if (cell == null) {\n                    return true;\n                }\n\n                const { f, si: currentId } = cell;\n\n                if (isFormulaString(f) && si === currentId) {\n                    formulaString = this._lexerTreeBuilder.moveFormulaRefOffset(\n                        f as string,\n                        column - c,\n                        row - r\n                    );\n\n                    return false;\n                }\n            });\n\n            return formulaString;\n        }\n\n        return null;\n    }\n\n    /**\n     * Function to get all formula ranges\n     * @returns\n     */\n    getFormulaDirtyRanges(): IUnitRange[] {\n        const formulaData = this.getFormulaData();\n\n        const dirtyRanges: IUnitRange[] = [];\n\n        for (const unitId in formulaData) {\n            const workbook = formulaData[unitId];\n\n            if (!workbook) continue;\n\n            const workbookInstance = this._univerInstanceService.getUnit<Workbook>(unitId);\n\n            if (!workbookInstance) continue;\n\n            for (const sheetId in workbook) {\n                const sheet = workbook[sheetId];\n\n                if (!sheet) continue;\n\n                const sheetInstance = workbookInstance.getSheetBySheetId(sheetId);\n\n                if (!sheetInstance) continue;\n\n                // Object to store continuous cell ranges by column\n                const columnRanges: { [column: number]: { startRow: number; endRow: number }[] } = {};\n\n                for (const rowStr of Object.keys(sheet)) {\n                    const row = Number(rowStr);\n\n                    for (const columnStr in sheet[row]) {\n                        const column = Number(columnStr);\n\n                        const currentCell = sheetInstance.getCellRaw(row, column);\n\n                        // Calculation is only required when there is only a formula and no value\n                        const isFormula = isFormulaString(currentCell?.f) || isFormulaId(currentCell?.si);\n                        const noValue = currentCell?.v === undefined;\n\n                        if (!(isFormula && noValue)) continue;\n\n                        if (!columnRanges[column]) columnRanges[column] = [];\n\n                        const lastRange = columnRanges[column].slice(-1)[0];\n\n                        // If the current row is continuous with the last range, extend endRow\n                        if (lastRange && lastRange.endRow === row - 1) {\n                            lastRange.endRow = row;\n                        } else {\n                            // Otherwise, start a new range\n                            columnRanges[column].push({ startRow: row, endRow: row });\n                        }\n                    }\n                }\n\n                // Convert collected column ranges to IUnitRange format\n                for (const column in columnRanges) {\n                    const currentColumnRanges = columnRanges[column];\n                    for (let i = 0; i < currentColumnRanges.length; i++) {\n                        const range = currentColumnRanges[i];\n                        dirtyRanges.push({\n                            unitId,\n                            sheetId,\n                            range: {\n                                rangeType: RANGE_TYPE.NORMAL,\n                                startRow: range.startRow,\n                                endRow: range.endRow, // Use endRow as the inclusive end row\n                                startColumn: Number(column),\n                                endColumn: Number(column),\n                            },\n                        });\n                    }\n                }\n            }\n        }\n\n        return dirtyRanges;\n    }\n\n    private _getSheetFormulaIdMap(unitId: string, sheetId: string) {\n        const formulaIdMap: Nullable<{ [formulaId: string]: IFormulaIdMap }> = {}; // Connect the formula and ID\n\n        const workbook = this._univerInstanceService.getUnit<Workbook>(unitId);\n        if (workbook == null) {\n            return formulaIdMap;\n        }\n\n        const worksheet = workbook.getSheetBySheetId(sheetId);\n        if (worksheet == null) {\n            return formulaIdMap;\n        }\n\n        const cellMatrix = worksheet.getCellMatrix();\n        cellMatrix.forValue((r, c, cell) => {\n            if (cell == null) {\n                return true;\n            }\n\n            const { f, si } = cell;\n\n            if (isFormulaString(f) && isFormulaId(si)) {\n                formulaIdMap[si as string] = { f: f as string, r, c };\n            }\n        });\n\n        return formulaIdMap;\n    }\n}\n\nexport function initSheetFormulaData(\n    formulaData: IFormulaData,\n    unitId: string,\n    sheetId: string,\n    cellMatrix: ObjectMatrix<Nullable<ICellData>>\n): IFormulaData {\n    if (!formulaData[unitId]) {\n        formulaData[unitId] = {};\n    }\n\n    if (!formulaData[unitId][sheetId]) {\n        formulaData[unitId][sheetId] = {};\n    }\n\n    const formulaIdMap = new Map<string, { f: string; r: number; c: number }>(); // Connect the formula and ID\n    const sheetFormulaDataMatrix = new ObjectMatrix<Nullable<IFormulaDataItem>>(formulaData[unitId][sheetId]);\n\n    cellMatrix.forValue((r, c, cell) => {\n        const formulaString = cell?.f || '';\n        const formulaId = cell?.si || '';\n\n        const checkFormulaString = isFormulaString(formulaString);\n        const checkFormulaId = isFormulaId(formulaId);\n\n        if (checkFormulaString && checkFormulaId) {\n            sheetFormulaDataMatrix.setValue(r, c, {\n                f: formulaString,\n                si: formulaId,\n            });\n            formulaIdMap.set(formulaId, { f: formulaString, r, c });\n        } else if (checkFormulaString && !checkFormulaId) {\n            sheetFormulaDataMatrix.setValue(r, c, {\n                f: formulaString,\n            });\n        } else if (!checkFormulaString && checkFormulaId) {\n            sheetFormulaDataMatrix.setValue(r, c, {\n                f: '',\n                si: formulaId,\n            });\n        }\n    });\n\n    sheetFormulaDataMatrix.forValue((r, c, cell) => {\n        const formulaString = cell?.f || '';\n        const formulaId = cell?.si || '';\n\n        if (isFormulaId(formulaId) && !isFormulaString(formulaString)) {\n            const formulaInfo = formulaIdMap.get(formulaId);\n            if (formulaInfo) {\n                const f = formulaInfo.f;\n                const x = c - formulaInfo.c;\n                const y = r - formulaInfo.r;\n\n                sheetFormulaDataMatrix.setValue(r, c, { f, si: formulaId, x, y });\n            } else {\n                // If the formula ID is not found in the formula ID map, delete the formula ID.\n                // Prevent IDs without corresponding formulas from appearing\n                sheetFormulaDataMatrix.realDeleteValue(r, c);\n            }\n        }\n    });\n\n    const newSheetFormulaData = sheetFormulaDataMatrix.getMatrix(); // Don't use clone, otherwise it will cause performance problems\n\n    return {\n        [unitId]: {\n            [sheetId]: newSheetFormulaData,\n        },\n    };\n}\n"],"mappings":"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","names":["cell","f"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"65252a5c323038e0f1bf66d379ed8f5faf1cecee"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/current-data.service.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/current-data.service.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":15,"column":41},"end":{"line":300,"column":1}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":12}},"16":{"start":{"line":18,"column":4},"end":{"line":18,"column":57}},"17":{"start":{"line":19,"column":4},"end":{"line":19,"column":41}},"18":{"start":{"line":20,"column":4},"end":{"line":20,"column":47}},"19":{"start":{"line":22,"column":14},"end":{"line":22,"column":16}},"20":{"start":{"line":23,"column":20},"end":{"line":23,"column":22}},"21":{"start":{"line":24,"column":26},"end":{"line":24,"column":28}},"22":{"start":{"line":25,"column":23},"end":{"line":25,"column":25}},"23":{"start":{"line":26,"column":17},"end":{"line":26,"column":19}},"24":{"start":{"line":27,"column":18},"end":{"line":27,"column":20}},"25":{"start":{"line":28,"column":20},"end":{"line":28,"column":25}},"26":{"start":{"line":29,"column":30},"end":{"line":29,"column":32}},"27":{"start":{"line":30,"column":17},"end":{"line":30,"column":19}},"28":{"start":{"line":31,"column":18},"end":{"line":31,"column":20}},"29":{"start":{"line":32,"column":25},"end":{"line":32,"column":27}},"30":{"start":{"line":33,"column":25},"end":{"line":33,"column":27}},"31":{"start":{"line":34,"column":30},"end":{"line":34,"column":32}},"32":{"start":{"line":36,"column":22},"end":{"line":36,"column":24}},"33":{"start":{"line":37,"column":19},"end":{"line":37,"column":21}},"34":{"start":{"line":38,"column":22},"end":{"line":38,"column":24}},"35":{"start":{"line":40,"column":4},"end":{"line":40,"column":20}},"36":{"start":{"line":41,"column":4},"end":{"line":41,"column":24}},"37":{"start":{"line":42,"column":4},"end":{"line":42,"column":30}},"38":{"start":{"line":43,"column":4},"end":{"line":43,"column":36}},"39":{"start":{"line":44,"column":4},"end":{"line":44,"column":33}},"40":{"start":{"line":45,"column":4},"end":{"line":45,"column":27}},"41":{"start":{"line":46,"column":4},"end":{"line":46,"column":28}},"42":{"start":{"line":47,"column":4},"end":{"line":47,"column":40}},"43":{"start":{"line":48,"column":4},"end":{"line":48,"column":27}},"44":{"start":{"line":49,"column":4},"end":{"line":49,"column":28}},"45":{"start":{"line":50,"column":4},"end":{"line":50,"column":35}},"46":{"start":{"line":51,"column":4},"end":{"line":51,"column":35}},"47":{"start":{"line":52,"column":4},"end":{"line":52,"column":40}},"48":{"start":{"line":53,"column":4},"end":{"line":53,"column":28}},"49":{"start":{"line":54,"column":4},"end":{"line":54,"column":32}},"50":{"start":{"line":57,"column":4},"end":{"line":57,"column":31}},"51":{"start":{"line":60,"column":4},"end":{"line":60,"column":34}},"52":{"start":{"line":63,"column":4},"end":{"line":63,"column":33}},"53":{"start":{"line":66,"column":4},"end":{"line":66,"column":39}},"54":{"start":{"line":69,"column":4},"end":{"line":69,"column":30}},"55":{"start":{"line":72,"column":4},"end":{"line":72,"column":26}},"56":{"start":{"line":75,"column":4},"end":{"line":75,"column":32}},"57":{"start":{"line":78,"column":4},"end":{"line":78,"column":29}},"58":{"start":{"line":81,"column":4},"end":{"line":81,"column":38}},"59":{"start":{"line":84,"column":4},"end":{"line":84,"column":35}},"60":{"start":{"line":87,"column":4},"end":{"line":87,"column":30}},"61":{"start":{"line":90,"column":4},"end":{"line":90,"column":32}},"62":{"start":{"line":93,"column":4},"end":{"line":93,"column":29}},"63":{"start":{"line":96,"column":4},"end":{"line":96,"column":30}},"64":{"start":{"line":99,"column":4},"end":{"line":99,"column":37}},"65":{"start":{"line":102,"column":4},"end":{"line":102,"column":37}},"66":{"start":{"line":105,"column":4},"end":{"line":105,"column":42}},"67":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"68":{"start":{"line":109,"column":6},"end":{"line":109,"column":16}},"69":{"start":{"line":111,"column":4},"end":{"line":111,"column":57}},"70":{"start":{"line":114,"column":4},"end":{"line":114,"column":42}},"71":{"start":{"line":117,"column":4},"end":{"line":117,"column":50}},"72":{"start":{"line":120,"column":21},"end":{"line":120,"column":103}},"73":{"start":{"line":121,"column":31},"end":{"line":121,"column":53}},"74":{"start":{"line":122,"column":4},"end":{"line":125,"column":6}},"75":{"start":{"line":128,"column":21},"end":{"line":128,"column":64}},"76":{"start":{"line":129,"column":22},"end":{"line":129,"column":58}},"77":{"start":{"line":130,"column":21},"end":{"line":130,"column":45}},"78":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"79":{"start":{"line":132,"column":6},"end":{"line":132,"column":45}},"80":{"start":{"line":134,"column":38},"end":{"line":134,"column":46}},"81":{"start":{"line":135,"column":4},"end":{"line":135,"column":37}},"82":{"start":{"line":138,"column":4},"end":{"line":147,"column":5}},"83":{"start":{"line":139,"column":6},"end":{"line":139,"column":42}},"84":{"start":{"line":140,"column":6},"end":{"line":140,"column":51}},"85":{"start":{"line":141,"column":6},"end":{"line":141,"column":51}},"86":{"start":{"line":143,"column":64},"end":{"line":143,"column":85}},"87":{"start":{"line":144,"column":6},"end":{"line":144,"column":35}},"88":{"start":{"line":145,"column":6},"end":{"line":145,"column":44}},"89":{"start":{"line":146,"column":6},"end":{"line":146,"column":44}},"90":{"start":{"line":148,"column":4},"end":{"line":150,"column":5}},"91":{"start":{"line":149,"column":6},"end":{"line":149,"column":45}},"92":{"start":{"line":151,"column":4},"end":{"line":151,"column":43}},"93":{"start":{"line":152,"column":4},"end":{"line":152,"column":87}},"94":{"start":{"line":153,"column":4},"end":{"line":153,"column":55}},"95":{"start":{"line":154,"column":4},"end":{"line":154,"column":49}},"96":{"start":{"line":155,"column":4},"end":{"line":155,"column":75}},"97":{"start":{"line":156,"column":4},"end":{"line":156,"column":43}},"98":{"start":{"line":157,"column":4},"end":{"line":157,"column":45}},"99":{"start":{"line":158,"column":4},"end":{"line":158,"column":59}},"100":{"start":{"line":159,"column":4},"end":{"line":159,"column":59}},"101":{"start":{"line":160,"column":4},"end":{"line":160,"column":69}},"102":{"start":{"line":161,"column":4},"end":{"line":161,"column":45}},"103":{"start":{"line":162,"column":4},"end":{"line":162,"column":63}},"104":{"start":{"line":165,"column":4},"end":{"line":173,"column":6}},"105":{"start":{"line":176,"column":4},"end":{"line":176,"column":36}},"106":{"start":{"line":177,"column":4},"end":{"line":177,"column":38}},"107":{"start":{"line":178,"column":4},"end":{"line":178,"column":28}},"108":{"start":{"line":181,"column":4},"end":{"line":181,"column":30}},"109":{"start":{"line":184,"column":4},"end":{"line":184,"column":36}},"110":{"start":{"line":187,"column":4},"end":{"line":187,"column":38}},"111":{"start":{"line":244,"column":4},"end":{"line":253,"column":7}},"112":{"start":{"line":245,"column":6},"end":{"line":252,"column":7}},"113":{"start":{"line":246,"column":8},"end":{"line":251,"column":11}},"114":{"start":{"line":247,"column":10},"end":{"line":249,"column":11}},"115":{"start":{"line":248,"column":12},"end":{"line":248,"column":42}},"116":{"start":{"line":250,"column":10},"end":{"line":250,"column":76}},"117":{"start":{"line":254,"column":4},"end":{"line":254,"column":32}},"118":{"start":{"line":255,"column":4},"end":{"line":262,"column":7}},"119":{"start":{"line":256,"column":6},"end":{"line":261,"column":9}},"120":{"start":{"line":257,"column":8},"end":{"line":259,"column":9}},"121":{"start":{"line":258,"column":10},"end":{"line":258,"column":46}},"122":{"start":{"line":260,"column":8},"end":{"line":260,"column":88}},"123":{"start":{"line":265,"column":21},"end":{"line":265,"column":103}},"124":{"start":{"line":266,"column":22},"end":{"line":266,"column":48}},"125":{"start":{"line":267,"column":4},"end":{"line":267,"column":48}},"126":{"start":{"line":268,"column":4},"end":{"line":268,"column":53}},"127":{"start":{"line":269,"column":4},"end":{"line":269,"column":53}},"128":{"start":{"line":276,"column":4},"end":{"line":298,"column":5}},"129":{"start":{"line":277,"column":6},"end":{"line":279,"column":7}},"130":{"start":{"line":278,"column":8},"end":{"line":278,"column":17}},"131":{"start":{"line":280,"column":6},"end":{"line":297,"column":7}},"132":{"start":{"line":281,"column":8},"end":{"line":283,"column":9}},"133":{"start":{"line":282,"column":10},"end":{"line":282,"column":19}},"134":{"start":{"line":284,"column":8},"end":{"line":286,"column":9}},"135":{"start":{"line":285,"column":10},"end":{"line":285,"column":38}},"136":{"start":{"line":287,"column":8},"end":{"line":295,"column":9}},"137":{"start":{"line":288,"column":10},"end":{"line":294,"column":12}},"138":{"start":{"line":296,"column":8},"end":{"line":296,"column":75}},"139":{"start":{"line":301,"column":0},"end":{"line":305,"column":32}},"140":{"start":{"line":306,"column":44},"end":{"line":308,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":2},"end":{"line":16,"column":3}},"loc":{"start":{"line":16,"column":73},"end":{"line":21,"column":3}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":39,"column":2},"end":{"line":39,"column":3}},"loc":{"start":{"line":39,"column":12},"end":{"line":55,"column":3}},"line":39},"5":{"name":"(anonymous_5)","decl":{"start":{"line":56,"column":2},"end":{"line":56,"column":3}},"loc":{"start":{"line":56,"column":21},"end":{"line":58,"column":3}},"line":56},"6":{"name":"(anonymous_6)","decl":{"start":{"line":59,"column":2},"end":{"line":59,"column":3}},"loc":{"start":{"line":59,"column":24},"end":{"line":61,"column":3}},"line":59},"7":{"name":"(anonymous_7)","decl":{"start":{"line":62,"column":2},"end":{"line":62,"column":3}},"loc":{"start":{"line":62,"column":27},"end":{"line":64,"column":3}},"line":62},"8":{"name":"(anonymous_8)","decl":{"start":{"line":65,"column":2},"end":{"line":65,"column":3}},"loc":{"start":{"line":65,"column":33},"end":{"line":67,"column":3}},"line":65},"9":{"name":"(anonymous_9)","decl":{"start":{"line":68,"column":2},"end":{"line":68,"column":3}},"loc":{"start":{"line":68,"column":21},"end":{"line":70,"column":3}},"line":68},"10":{"name":"(anonymous_10)","decl":{"start":{"line":71,"column":2},"end":{"line":71,"column":3}},"loc":{"start":{"line":71,"column":16},"end":{"line":73,"column":3}},"line":71},"11":{"name":"(anonymous_11)","decl":{"start":{"line":74,"column":2},"end":{"line":74,"column":3}},"loc":{"start":{"line":74,"column":22},"end":{"line":76,"column":3}},"line":74},"12":{"name":"(anonymous_12)","decl":{"start":{"line":77,"column":2},"end":{"line":77,"column":3}},"loc":{"start":{"line":77,"column":19},"end":{"line":79,"column":3}},"line":77},"13":{"name":"(anonymous_13)","decl":{"start":{"line":80,"column":2},"end":{"line":80,"column":3}},"loc":{"start":{"line":80,"column":28},"end":{"line":82,"column":3}},"line":80},"14":{"name":"(anonymous_14)","decl":{"start":{"line":83,"column":2},"end":{"line":83,"column":3}},"loc":{"start":{"line":83,"column":25},"end":{"line":85,"column":3}},"line":83},"15":{"name":"(anonymous_15)","decl":{"start":{"line":86,"column":2},"end":{"line":86,"column":3}},"loc":{"start":{"line":86,"column":20},"end":{"line":88,"column":3}},"line":86},"16":{"name":"(anonymous_16)","decl":{"start":{"line":89,"column":2},"end":{"line":89,"column":3}},"loc":{"start":{"line":89,"column":21},"end":{"line":91,"column":3}},"line":89},"17":{"name":"(anonymous_17)","decl":{"start":{"line":92,"column":2},"end":{"line":92,"column":3}},"loc":{"start":{"line":92,"column":19},"end":{"line":94,"column":3}},"line":92},"18":{"name":"(anonymous_18)","decl":{"start":{"line":95,"column":2},"end":{"line":95,"column":3}},"loc":{"start":{"line":95,"column":20},"end":{"line":97,"column":3}},"line":95},"19":{"name":"(anonymous_19)","decl":{"start":{"line":98,"column":2},"end":{"line":98,"column":3}},"loc":{"start":{"line":98,"column":27},"end":{"line":100,"column":3}},"line":98},"20":{"name":"(anonymous_20)","decl":{"start":{"line":101,"column":2},"end":{"line":101,"column":3}},"loc":{"start":{"line":101,"column":27},"end":{"line":103,"column":3}},"line":101},"21":{"name":"(anonymous_21)","decl":{"start":{"line":104,"column":2},"end":{"line":104,"column":3}},"loc":{"start":{"line":104,"column":32},"end":{"line":106,"column":3}},"line":104},"22":{"name":"(anonymous_22)","decl":{"start":{"line":107,"column":2},"end":{"line":107,"column":3}},"loc":{"start":{"line":107,"column":32},"end":{"line":112,"column":3}},"line":107},"23":{"name":"(anonymous_23)","decl":{"start":{"line":113,"column":2},"end":{"line":113,"column":3}},"loc":{"start":{"line":113,"column":32},"end":{"line":115,"column":3}},"line":113},"24":{"name":"(anonymous_24)","decl":{"start":{"line":116,"column":2},"end":{"line":116,"column":3}},"loc":{"start":{"line":116,"column":14},"end":{"line":118,"column":3}},"line":116},"25":{"name":"(anonymous_25)","decl":{"start":{"line":119,"column":2},"end":{"line":119,"column":3}},"loc":{"start":{"line":119,"column":18},"end":{"line":126,"column":3}},"line":119},"26":{"name":"(anonymous_26)","decl":{"start":{"line":127,"column":2},"end":{"line":127,"column":3}},"loc":{"start":{"line":127,"column":42},"end":{"line":136,"column":3}},"line":127},"27":{"name":"(anonymous_27)","decl":{"start":{"line":137,"column":2},"end":{"line":137,"column":3}},"loc":{"start":{"line":137,"column":15},"end":{"line":163,"column":3}},"line":137},"28":{"name":"(anonymous_28)","decl":{"start":{"line":164,"column":2},"end":{"line":164,"column":3}},"loc":{"start":{"line":164,"column":17},"end":{"line":174,"column":3}},"line":164},"29":{"name":"(anonymous_29)","decl":{"start":{"line":175,"column":2},"end":{"line":175,"column":3}},"loc":{"start":{"line":175,"column":60},"end":{"line":179,"column":3}},"line":175},"30":{"name":"(anonymous_30)","decl":{"start":{"line":180,"column":2},"end":{"line":180,"column":3}},"loc":{"start":{"line":180,"column":29},"end":{"line":182,"column":3}},"line":180},"31":{"name":"(anonymous_31)","decl":{"start":{"line":183,"column":2},"end":{"line":183,"column":3}},"loc":{"start":{"line":183,"column":35},"end":{"line":185,"column":3}},"line":183},"32":{"name":"(anonymous_32)","decl":{"start":{"line":186,"column":2},"end":{"line":186,"column":3}},"loc":{"start":{"line":186,"column":37},"end":{"line":188,"column":3}},"line":186},"33":{"name":"(anonymous_33)","decl":{"start":{"line":243,"column":2},"end":{"line":243,"column":3}},"loc":{"start":{"line":243,"column":48},"end":{"line":263,"column":3}},"line":243},"34":{"name":"(anonymous_34)","decl":{"start":{"line":244,"column":38},"end":{"line":244,"column":39}},"loc":{"start":{"line":244,"column":50},"end":{"line":253,"column":5}},"line":244},"35":{"name":"(anonymous_35)","decl":{"start":{"line":246,"column":50},"end":{"line":246,"column":51}},"loc":{"start":{"line":246,"column":63},"end":{"line":251,"column":9}},"line":246},"36":{"name":"(anonymous_36)","decl":{"start":{"line":255,"column":42},"end":{"line":255,"column":43}},"loc":{"start":{"line":255,"column":54},"end":{"line":262,"column":5}},"line":255},"37":{"name":"(anonymous_37)","decl":{"start":{"line":256,"column":52},"end":{"line":256,"column":53}},"loc":{"start":{"line":256,"column":67},"end":{"line":261,"column":7}},"line":256},"38":{"name":"(anonymous_38)","decl":{"start":{"line":264,"column":2},"end":{"line":264,"column":3}},"loc":{"start":{"line":264,"column":19},"end":{"line":270,"column":3}},"line":264},"39":{"name":"(anonymous_39)","decl":{"start":{"line":275,"column":2},"end":{"line":275,"column":3}},"loc":{"start":{"line":275,"column":29},"end":{"line":299,"column":3}},"line":275}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},{"start":{},"end":{}}],"line":108},"8":{"loc":{"start":{"line":111,"column":11},"end":{"line":111,"column":56}},"type":"binary-expr","locations":[{"start":{"line":111,"column":11},"end":{"line":111,"column":50}},{"start":{"line":111,"column":54},"end":{"line":111,"column":56}}],"line":111},"9":{"loc":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},{"start":{},"end":{}}],"line":131},"10":{"loc":{"start":{"line":138,"column":4},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":147,"column":5}},{"start":{"line":142,"column":11},"end":{"line":147,"column":5}}],"line":138},"11":{"loc":{"start":{"line":138,"column":8},"end":{"line":138,"column":78}},"type":"binary-expr","locations":[{"start":{"line":138,"column":8},"end":{"line":138,"column":26}},{"start":{"line":138,"column":30},"end":{"line":138,"column":53}},{"start":{"line":138,"column":57},"end":{"line":138,"column":78}}],"line":138},"12":{"loc":{"start":{"line":148,"column":4},"end":{"line":150,"column":5}},"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":150,"column":5}},{"start":{},"end":{}}],"line":148},"13":{"loc":{"start":{"line":155,"column":37},"end":{"line":155,"column":74}},"type":"binary-expr","locations":[{"start":{"line":155,"column":37},"end":{"line":155,"column":68}},{"start":{"line":155,"column":72},"end":{"line":155,"column":74}}],"line":155},"14":{"loc":{"start":{"line":245,"column":6},"end":{"line":252,"column":7}},"type":"if","locations":[{"start":{"line":245,"column":6},"end":{"line":252,"column":7}},{"start":{},"end":{}}],"line":245},"15":{"loc":{"start":{"line":247,"column":10},"end":{"line":249,"column":11}},"type":"if","locations":[{"start":{"line":247,"column":10},"end":{"line":249,"column":11}},{"start":{},"end":{}}],"line":247},"16":{"loc":{"start":{"line":257,"column":8},"end":{"line":259,"column":9}},"type":"if","locations":[{"start":{"line":257,"column":8},"end":{"line":259,"column":9}},{"start":{},"end":{}}],"line":257},"17":{"loc":{"start":{"line":277,"column":6},"end":{"line":279,"column":7}},"type":"if","locations":[{"start":{"line":277,"column":6},"end":{"line":279,"column":7}},{"start":{},"end":{}}],"line":277},"18":{"loc":{"start":{"line":281,"column":8},"end":{"line":283,"column":9}},"type":"if","locations":[{"start":{"line":281,"column":8},"end":{"line":283,"column":9}},{"start":{},"end":{}}],"line":281},"19":{"loc":{"start":{"line":284,"column":8},"end":{"line":286,"column":9}},"type":"if","locations":[{"start":{"line":284,"column":8},"end":{"line":286,"column":9}},{"start":{},"end":{}}],"line":284},"20":{"loc":{"start":{"line":287,"column":8},"end":{"line":295,"column":9}},"type":"if","locations":[{"start":{"line":287,"column":8},"end":{"line":295,"column":9}},{"start":{},"end":{}}],"line":287}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":3,"7":3,"8":1,"9":0,"10":1,"11":1,"12":3,"13":3,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":1,"140":1},"f":{"0":1,"1":3,"2":3,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"b":{"0":[0,1],"1":[0,1],"2":[3,0],"3":[3,3],"4":[0,3],"5":[0,1],"6":[1,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/current-data.service.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IUnitRange, LocaleType, Nullable, Workbook } from '@univerjs/core';\nimport type {\n    IArrayFormulaRangeType,\n    IDirtyUnitFeatureMap,\n    IDirtyUnitOtherFormulaMap,\n    IDirtyUnitSheetDefinedNameMap,\n    IDirtyUnitSheetNameMap,\n    IFormulaData,\n    IFormulaDatasetConfig,\n    IRuntimeUnitDataType,\n    IUnitData,\n    IUnitExcludedCell,\n    IUnitRowData,\n    IUnitSheetIdToNameMap,\n    IUnitSheetNameMap,\n    IUnitStylesData,\n} from '../basics/common';\n\nimport { createIdentifier, Disposable, Inject, IUniverInstanceService, LocaleService, ObjectMatrix, UniverInstanceType } from '@univerjs/core';\nimport { convertUnitDataToRuntime } from '../basics/runtime';\nimport { FormulaDataModel } from '../models/formula-data.model';\n\nexport interface IFormulaDirtyData {\n    forceCalculation: boolean;\n    dirtyRanges: IUnitRange[];\n    dirtyNameMap: IDirtyUnitSheetNameMap;\n    dirtyDefinedNameMap: IDirtyUnitSheetDefinedNameMap;\n    dirtyUnitFeatureMap: IDirtyUnitFeatureMap;\n    dirtyUnitOtherFormulaMap: IDirtyUnitOtherFormulaMap;\n    clearDependencyTreeCache: IDirtyUnitSheetNameMap; // unitId -> sheetId\n    maxIteration?: number;\n    rowData?: IUnitRowData; // Include rows hidden by filters\n}\n\nexport interface IFormulaCurrentConfigService {\n    load(config: IFormulaDatasetConfig): void;\n\n    getUnitData(): IUnitData;\n\n    /**\n     * Get the unit styles data.\n     */\n    getUnitStylesData(): IUnitStylesData;\n\n    getFormulaData(): IFormulaData;\n\n    getSheetNameMap(): IUnitSheetNameMap;\n\n    isForceCalculate(): boolean;\n\n    getDirtyRanges(): IUnitRange[];\n\n    getDirtyNameMap(): IDirtyUnitSheetNameMap;\n\n    getDirtyDefinedNameMap(): IDirtyUnitSheetDefinedNameMap;\n\n    getDirtyUnitFeatureMap(): IDirtyUnitFeatureMap;\n\n    registerUnitData(unitData: IUnitData): void;\n\n    registerFormulaData(formulaData: IFormulaData): void;\n\n    registerSheetNameMap(sheetNameMap: IUnitSheetNameMap): void;\n\n    getExcludedRange(): Nullable<IUnitExcludedCell>;\n\n    loadDirtyRangesAndExcludedCell(dirtyRanges: IUnitRange[], excludedCell?: IUnitExcludedCell): void;\n\n    getArrayFormulaCellData(): IRuntimeUnitDataType;\n\n    getArrayFormulaRange(): IArrayFormulaRangeType;\n\n    getSheetName(unitId: string, sheetId: string): string;\n\n    getDirtyUnitOtherFormulaMap(): IDirtyUnitOtherFormulaMap;\n\n    getExecuteUnitId(): Nullable<string>;\n    getExecuteSubUnitId(): Nullable<string>;\n\n    setExecuteUnitId(unitId: string): void;\n    setExecuteSubUnitId(subUnitId: string): void;\n\n    getDirtyData(): IFormulaDirtyData;\n\n    getClearDependencyTreeCache(): IDirtyUnitSheetNameMap;\n\n    getLocale(): LocaleType;\n\n    getSheetsInfo(): {\n        sheetOrder: string[];\n        sheetNameMap: { [sheetId: string]: string };\n    };\n\n    getSheetRowColumnCount(unitId: string, sheetId: string): { rowCount: number; columnCount: number };\n}\n\nexport class FormulaCurrentConfigService extends Disposable implements IFormulaCurrentConfigService {\n    private _unitData: IUnitData = {};\n\n    private _unitStylesData: IUnitStylesData = {};\n\n    private _arrayFormulaCellData: IRuntimeUnitDataType = {};\n\n    private _arrayFormulaRange: IArrayFormulaRangeType = {};\n\n    private _formulaData: IFormulaData = {};\n\n    private _sheetNameMap: IUnitSheetNameMap = {};\n\n    private _forceCalculate: boolean = false;\n\n    private _clearDependencyTreeCache: IDirtyUnitSheetNameMap = {};\n\n    private _dirtyRanges: IUnitRange[] = [];\n\n    private _dirtyNameMap: IDirtyUnitSheetNameMap = {};\n\n    private _dirtyDefinedNameMap: IDirtyUnitSheetDefinedNameMap = {};\n\n    private _dirtyUnitFeatureMap: IDirtyUnitFeatureMap = {};\n\n    private _dirtyUnitOtherFormulaMap: IDirtyUnitOtherFormulaMap = {};\n\n    private _excludedCell: Nullable<IUnitExcludedCell>;\n\n    private _sheetIdToNameMap: IUnitSheetIdToNameMap = {};\n\n    private _executeUnitId: Nullable<string> = '';\n    private _executeSubUnitId: Nullable<string> = '';\n\n    constructor(\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @Inject(LocaleService) private readonly _localeService: LocaleService,\n        @Inject(FormulaDataModel) private readonly _formulaDataModel: FormulaDataModel\n    ) {\n        super();\n    }\n\n    override dispose(): void {\n        super.dispose();\n        this._unitData = {};\n        this._unitStylesData = {};\n        this._arrayFormulaCellData = {};\n        this._arrayFormulaRange = {};\n        this._formulaData = {};\n        this._sheetNameMap = {};\n        this._clearDependencyTreeCache = {};\n        this._dirtyRanges = [];\n        this._dirtyNameMap = {};\n        this._dirtyDefinedNameMap = {};\n        this._dirtyUnitFeatureMap = {};\n        this._dirtyUnitOtherFormulaMap = {};\n        this._excludedCell = {};\n        this._sheetIdToNameMap = {};\n    }\n\n    getExecuteUnitId() {\n        return this._executeUnitId;\n    }\n\n    getExecuteSubUnitId() {\n        return this._executeSubUnitId;\n    }\n\n    setExecuteUnitId(unitId: string) {\n        this._executeUnitId = unitId;\n    }\n\n    setExecuteSubUnitId(subUnitId: string) {\n        this._executeSubUnitId = subUnitId;\n    }\n\n    getExcludedRange() {\n        return this._excludedCell;\n    }\n\n    getUnitData() {\n        return this._unitData;\n    }\n\n    getUnitStylesData(): IUnitStylesData {\n        return this._unitStylesData;\n    }\n\n    getFormulaData() {\n        return this._formulaData;\n    }\n\n    getArrayFormulaCellData() {\n        return this._arrayFormulaCellData;\n    }\n\n    getArrayFormulaRange() {\n        return this._arrayFormulaRange;\n    }\n\n    getSheetNameMap() {\n        return this._sheetNameMap;\n    }\n\n    isForceCalculate() {\n        return this._forceCalculate;\n    }\n\n    getDirtyRanges() {\n        return this._dirtyRanges;\n    }\n\n    getDirtyNameMap() {\n        return this._dirtyNameMap;\n    }\n\n    getDirtyDefinedNameMap() {\n        return this._dirtyDefinedNameMap;\n    }\n\n    getDirtyUnitFeatureMap() {\n        return this._dirtyUnitFeatureMap;\n    }\n\n    getDirtyUnitOtherFormulaMap() {\n        return this._dirtyUnitOtherFormulaMap;\n    }\n\n    getSheetName(unitId: string, sheetId: string) {\n        if (this._sheetIdToNameMap[unitId] == null) {\n            return '';\n        }\n\n        return this._sheetIdToNameMap[unitId]![sheetId] || '';\n    }\n\n    getClearDependencyTreeCache() {\n        return this._clearDependencyTreeCache;\n    }\n\n    getLocale() {\n        return this._localeService.getCurrentLocale();\n    }\n\n    getSheetsInfo() {\n        const workbook = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!;\n        const { id, sheetOrder } = workbook.getSnapshot();\n\n        return {\n            sheetOrder,\n            sheetNameMap: this._sheetIdToNameMap[id] as { [sheetId: string]: string },\n        };\n    }\n\n    getSheetRowColumnCount(unitId: string, sheetId: string) {\n        const workbook = this._univerInstanceService.getUnit<Workbook>(unitId);\n        const worksheet = workbook?.getSheetBySheetId(sheetId);\n        const snapshot = worksheet?.getSnapshot();\n\n        if (!snapshot) {\n            return { rowCount: 0, columnCount: 0 };\n        }\n\n        const { rowCount, columnCount } = snapshot;\n\n        return { rowCount, columnCount };\n    }\n\n    load(config: IFormulaDatasetConfig) {\n        if (config.allUnitData && config.unitSheetNameMap && config.unitStylesData) {\n            this._unitData = config.allUnitData;\n            this._unitStylesData = config.unitStylesData;\n            this._sheetNameMap = config.unitSheetNameMap;\n        } else {\n            const { allUnitData, unitSheetNameMap, unitStylesData } = this._loadSheetData();\n\n            this._unitData = allUnitData;\n\n            this._unitStylesData = unitStylesData;\n\n            this._sheetNameMap = unitSheetNameMap;\n        }\n\n        // apply row data, including rows hidden by filters\n        if (config.rowData) {\n            this._applyUnitRowData(config.rowData);\n        }\n\n        this._formulaData = config.formulaData;\n\n        this._arrayFormulaCellData = convertUnitDataToRuntime(config.arrayFormulaCellData);\n\n        this._arrayFormulaRange = config.arrayFormulaRange;\n\n        this._forceCalculate = config.forceCalculate;\n\n        this._clearDependencyTreeCache = config.clearDependencyTreeCache || {};\n\n        this._dirtyRanges = config.dirtyRanges;\n\n        this._dirtyNameMap = config.dirtyNameMap;\n\n        this._dirtyDefinedNameMap = config.dirtyDefinedNameMap;\n\n        this._dirtyUnitFeatureMap = config.dirtyUnitFeatureMap;\n\n        this._dirtyUnitOtherFormulaMap = config.dirtyUnitOtherFormulaMap;\n\n        this._excludedCell = config.excludedCell;\n\n        this._mergeNameMap(this._sheetNameMap, this._dirtyNameMap);\n    }\n\n    getDirtyData(): IFormulaDirtyData {\n        return {\n            forceCalculation: this._forceCalculate,\n            dirtyRanges: this._dirtyRanges,\n            dirtyNameMap: this._dirtyNameMap,\n            dirtyDefinedNameMap: this._dirtyDefinedNameMap,\n            dirtyUnitFeatureMap: this._dirtyUnitFeatureMap,\n            dirtyUnitOtherFormulaMap: this._dirtyUnitOtherFormulaMap,\n            clearDependencyTreeCache: this._clearDependencyTreeCache,\n        };\n    }\n\n    loadDirtyRangesAndExcludedCell(dirtyRanges: IUnitRange[], excludedCell?: IUnitExcludedCell) {\n        this._dirtyRanges = dirtyRanges;\n\n        this._excludedCell = excludedCell;\n\n        /**\n         * Mark dirty for expansion of array formulas, need to clear the worksheet's dirty flag.\n         */\n        this._dirtyNameMap = {};\n    }\n\n    registerUnitData(unitData: IUnitData) {\n        this._unitData = unitData;\n    }\n\n    registerFormulaData(formulaData: IFormulaData) {\n        this._formulaData = formulaData;\n    }\n\n    registerSheetNameMap(sheetNameMap: IUnitSheetNameMap) {\n        this._sheetNameMap = sheetNameMap;\n    }\n\n    // private _loadOtherFormulaData() {\n    //     const unitAllDoc = this._univerInstanceService.getAllUniverDocsInstance();\n\n    //     const unitAllSlide = this._univerInstanceService.getAllUniverSlidesInstance();\n\n    //     const otherFormulaData: IOtherFormulaData = {};\n\n    //     for (const documentDataModel of unitAllDoc) {\n    //         const unitId = documentDataModel.getUnitId();\n\n    //         if (otherFormulaData[unitId] == null) {\n    //             otherFormulaData[unitId] = {};\n    //         }\n\n    //         if (otherFormulaData[unitId][DEFAULT_DOCUMENT_SUB_COMPONENT_ID] == null) {\n    //             otherFormulaData[unitId][DEFAULT_DOCUMENT_SUB_COMPONENT_ID] = {};\n    //         }\n\n    //         const subComponent = otherFormulaData[unitId][DEFAULT_DOCUMENT_SUB_COMPONENT_ID];\n\n    //         const customRanges = documentDataModel.getBody()?.customRanges;\n\n    //         if (customRanges == null) {\n    //             continue;\n    //         }\n\n    //         for (const customRange of customRanges) {\n    //             subComponent[customRange.rangeId] = {\n    //                 f: customRange.endIndex.toString(),\n    //             };\n    //         }\n    //     }\n\n    //     for (const slide of unitAllSlide) {\n    //         const unitId = slide.getUnitId();\n\n    //         if (otherFormulaData[unitId] == null) {\n    //             otherFormulaData[unitId] = {};\n    //         }\n\n    //         if (otherFormulaData[unitId][DEFAULT_DOCUMENT_SUB_COMPONENT_ID] == null) {\n    //             otherFormulaData[unitId][DEFAULT_DOCUMENT_SUB_COMPONENT_ID] = {};\n    //         }\n\n    //         const pages = slide.getPages();\n\n    //         if (pages == null) {\n    //             continue;\n    //         }\n\n    //         const pageIds = Object.keys(pages);\n\n    //         for (const pageId of pageIds) {\n    //             const page = pages[pageId];\n\n    //             const subComponent = otherFormulaData[unitId][pageId];\n\n    //             const pageElements = page.pageElements;\n\n    //             if (pageElements == null) {\n    //                 continue;\n    //             }\n\n    //             const pageElementIds = Object.keys(pageElements);\n\n    //             for (const pageElementId of pageElementIds) {\n    //                 const pageElement = pageElements[pageElementId];\n    //                 subComponent[pageElementId] = {\n    //                     f: pageElement.title,\n    //                 };\n    //             }\n    //         }\n    //     }\n\n    //     return otherFormulaData;\n    // }\n\n    private _mergeNameMap(unitSheetNameMap: IUnitSheetNameMap, dirtyNameMap: IDirtyUnitSheetNameMap) {\n        Object.keys(dirtyNameMap).forEach((unitId) => {\n            if (dirtyNameMap[unitId]) {\n                Object.keys(dirtyNameMap[unitId]!).forEach((sheetId) => {\n                    if (unitSheetNameMap[unitId] == null) {\n                        unitSheetNameMap[unitId] = {};\n                    }\n                    unitSheetNameMap[unitId]![dirtyNameMap[unitId]![sheetId]] = sheetId;\n                });\n            }\n        });\n\n        this._sheetIdToNameMap = {};\n\n        Object.keys(unitSheetNameMap).forEach((unitId) => {\n            Object.keys(unitSheetNameMap[unitId]!).forEach((sheetName) => {\n                if (this._sheetIdToNameMap[unitId] == null) {\n                    this._sheetIdToNameMap[unitId] = {};\n                }\n                this._sheetIdToNameMap[unitId]![unitSheetNameMap[unitId]![sheetName]] = sheetName;\n            });\n        });\n    }\n\n    private _loadSheetData() {\n        const workbook = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!;\n        const worksheet = workbook?.getActiveSheet();\n\n        this._executeUnitId = workbook?.getUnitId();\n        this._executeSubUnitId = worksheet?.getSheetId();\n\n        return this._formulaDataModel.getCalculateData();\n    }\n\n    /**\n     * There is no filter information in the worker, it must be passed in from the main thread after it is ready\n     * @param rowData\n     */\n    private _applyUnitRowData(rowData: IUnitRowData) {\n        for (const unitId in rowData) {\n            if (rowData[unitId] == null) {\n                continue;\n            }\n\n            for (const sheetId in rowData[unitId]) {\n                if (rowData[unitId][sheetId] == null) {\n                    continue;\n                }\n\n                if (this._unitData[unitId] == null) {\n                    this._unitData[unitId] = {};\n                }\n\n                if (this._unitData[unitId][sheetId] == null) {\n                    this._unitData[unitId][sheetId] = {\n                        cellData: new ObjectMatrix({}),\n                        rowCount: 0,\n                        columnCount: 0,\n                        rowData: {},\n                        columnData: {},\n                    };\n                }\n\n                this._unitData[unitId][sheetId].rowData = rowData[unitId][sheetId];\n            }\n        }\n    }\n}\n\nexport const IFormulaCurrentConfigService = createIdentifier<FormulaCurrentConfigService>(\n    'univer.formula.current-data.service'\n);\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"29806f34aa6e7ec82ee0290ac885854d1e25163c"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/analysis/lexer.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/analysis/lexer.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":19,"column":19},"end":{"line":104,"column":1}},"15":{"start":{"line":21,"column":4},"end":{"line":21,"column":12}},"16":{"start":{"line":22,"column":4},"end":{"line":22,"column":53}},"17":{"start":{"line":23,"column":4},"end":{"line":23,"column":47}},"18":{"start":{"line":24,"column":4},"end":{"line":24,"column":69}},"19":{"start":{"line":27,"column":4},"end":{"line":27,"column":155}},"20":{"start":{"line":30,"column":27},"end":{"line":30,"column":85}},"21":{"start":{"line":31,"column":26},"end":{"line":31,"column":78}},"22":{"start":{"line":32,"column":4},"end":{"line":40,"column":5}},"23":{"start":{"line":33,"column":20},"end":{"line":33,"column":62}},"24":{"start":{"line":34,"column":6},"end":{"line":39,"column":7}},"25":{"start":{"line":34,"column":19},"end":{"line":34,"column":20}},"26":{"start":{"line":34,"column":28},"end":{"line":34,"column":40}},"27":{"start":{"line":35,"column":21},"end":{"line":35,"column":29}},"28":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"29":{"start":{"line":37,"column":10},"end":{"line":37,"column":22}},"30":{"start":{"line":41,"column":4},"end":{"line":41,"column":17}},"31":{"start":{"line":44,"column":27},"end":{"line":44,"column":85}},"32":{"start":{"line":45,"column":26},"end":{"line":45,"column":78}},"33":{"start":{"line":46,"column":4},"end":{"line":54,"column":5}},"34":{"start":{"line":47,"column":20},"end":{"line":47,"column":62}},"35":{"start":{"line":48,"column":6},"end":{"line":53,"column":7}},"36":{"start":{"line":48,"column":19},"end":{"line":48,"column":20}},"37":{"start":{"line":48,"column":28},"end":{"line":48,"column":40}},"38":{"start":{"line":49,"column":21},"end":{"line":49,"column":29}},"39":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"40":{"start":{"line":51,"column":10},"end":{"line":51,"column":22}},"41":{"start":{"line":55,"column":4},"end":{"line":55,"column":17}},"42":{"start":{"line":58,"column":19},"end":{"line":58,"column":71}},"43":{"start":{"line":59,"column":4},"end":{"line":65,"column":5}},"44":{"start":{"line":60,"column":6},"end":{"line":64,"column":8}},"45":{"start":{"line":66,"column":26},"end":{"line":66,"column":79}},"46":{"start":{"line":67,"column":25},"end":{"line":67,"column":27}},"47":{"start":{"line":68,"column":25},"end":{"line":68,"column":30}},"48":{"start":{"line":69,"column":25},"end":{"line":69,"column":27}},"49":{"start":{"line":70,"column":4},"end":{"line":97,"column":5}},"50":{"start":{"line":70,"column":17},"end":{"line":70,"column":18}},"51":{"start":{"line":70,"column":26},"end":{"line":70,"column":46}},"52":{"start":{"line":71,"column":19},"end":{"line":71,"column":35}},"53":{"start":{"line":72,"column":6},"end":{"line":75,"column":7}},"54":{"start":{"line":73,"column":8},"end":{"line":73,"column":31}},"55":{"start":{"line":74,"column":8},"end":{"line":74,"column":17}},"56":{"start":{"line":76,"column":34},"end":{"line":76,"column":38}},"57":{"start":{"line":77,"column":6},"end":{"line":96,"column":7}},"58":{"start":{"line":78,"column":31},"end":{"line":78,"column":86}},"59":{"start":{"line":79,"column":8},"end":{"line":93,"column":9}},"60":{"start":{"line":80,"column":26},"end":{"line":80,"column":59}},"61":{"start":{"line":81,"column":10},"end":{"line":83,"column":11}},"62":{"start":{"line":82,"column":12},"end":{"line":82,"column":47}},"63":{"start":{"line":84,"column":10},"end":{"line":84,"column":38}},"64":{"start":{"line":85,"column":10},"end":{"line":85,"column":49}},"65":{"start":{"line":86,"column":10},"end":{"line":86,"column":32}},"66":{"start":{"line":87,"column":15},"end":{"line":93,"column":9}},"67":{"start":{"line":88,"column":10},"end":{"line":88,"column":43}},"68":{"start":{"line":89,"column":10},"end":{"line":89,"column":32}},"69":{"start":{"line":90,"column":10},"end":{"line":90,"column":35}},"70":{"start":{"line":92,"column":10},"end":{"line":92,"column":34}},"71":{"start":{"line":95,"column":8},"end":{"line":95,"column":32}},"72":{"start":{"line":98,"column":4},"end":{"line":102,"column":6}},"73":{"start":{"line":105,"column":0},"end":{"line":109,"column":10}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":2},"end":{"line":20,"column":3}},"loc":{"start":{"line":20,"column":85},"end":{"line":25,"column":3}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":2},"end":{"line":26,"column":3}},"loc":{"start":{"line":26,"column":53},"end":{"line":28,"column":3}},"line":26},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":2},"end":{"line":29,"column":3}},"loc":{"start":{"line":29,"column":41},"end":{"line":42,"column":3}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":43,"column":2},"end":{"line":43,"column":3}},"loc":{"start":{"line":43,"column":32},"end":{"line":56,"column":3}},"line":43},"7":{"name":"(anonymous_7)","decl":{"start":{"line":57,"column":2},"end":{"line":57,"column":3}},"loc":{"start":{"line":57,"column":36},"end":{"line":103,"column":3}},"line":57}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":26,"column":29},"end":{"line":26,"column":51}},"type":"default-arg","locations":[{"start":{"line":26,"column":47},"end":{"line":26,"column":51}}],"line":26},"8":{"loc":{"start":{"line":32,"column":4},"end":{"line":40,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":40,"column":5}},{"start":{},"end":{}}],"line":32},"9":{"loc":{"start":{"line":32,"column":8},"end":{"line":32,"column":70}},"type":"binary-expr","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":29}},{"start":{"line":32,"column":33},"end":{"line":32,"column":70}}],"line":32},"10":{"loc":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},{"start":{},"end":{}}],"line":36},"11":{"loc":{"start":{"line":46,"column":4},"end":{"line":54,"column":5}},"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":54,"column":5}},{"start":{},"end":{}}],"line":46},"12":{"loc":{"start":{"line":46,"column":8},"end":{"line":46,"column":70}},"type":"binary-expr","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":29}},{"start":{"line":46,"column":33},"end":{"line":46,"column":70}}],"line":46},"13":{"loc":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},{"start":{},"end":{}}],"line":50},"14":{"loc":{"start":{"line":59,"column":4},"end":{"line":65,"column":5}},"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":65,"column":5}},{"start":{},"end":{}}],"line":59},"15":{"loc":{"start":{"line":72,"column":6},"end":{"line":75,"column":7}},"type":"if","locations":[{"start":{"line":72,"column":6},"end":{"line":75,"column":7}},{"start":{},"end":{}}],"line":72},"16":{"loc":{"start":{"line":77,"column":6},"end":{"line":96,"column":7}},"type":"if","locations":[{"start":{"line":77,"column":6},"end":{"line":96,"column":7}},{"start":{"line":94,"column":13},"end":{"line":96,"column":7}}],"line":77},"17":{"loc":{"start":{"line":77,"column":10},"end":{"line":77,"column":91}},"type":"binary-expr","locations":[{"start":{"line":77,"column":10},"end":{"line":77,"column":49}},{"start":{"line":77,"column":53},"end":{"line":77,"column":91}}],"line":77},"18":{"loc":{"start":{"line":79,"column":8},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":93,"column":9}},{"start":{"line":87,"column":15},"end":{"line":93,"column":9}}],"line":79},"19":{"loc":{"start":{"line":81,"column":10},"end":{"line":83,"column":11}},"type":"if","locations":[{"start":{"line":81,"column":10},"end":{"line":83,"column":11}},{"start":{},"end":{}}],"line":81},"20":{"loc":{"start":{"line":87,"column":15},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":15},"end":{"line":93,"column":9}},{"start":{"line":91,"column":15},"end":{"line":93,"column":9}}],"line":87}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":3,"7":3,"8":1,"9":0,"10":1,"11":1,"12":3,"13":3,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1},"f":{"0":1,"1":3,"2":3,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[0,1],"1":[0,1],"2":[3,0],"3":[3,3],"4":[0,3],"5":[0,1],"6":[1,0],"7":[0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/analysis/lexer.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Disposable, Inject } from '@univerjs/core';\n\nimport { IDefinedNamesService } from '../../services/defined-names.service';\nimport type { ISequenceArray } from '../utils/sequence';\nimport { sequenceNodeType } from '../utils/sequence';\nimport { operatorToken } from '../../basics/token';\nimport { IFormulaCurrentConfigService } from '../../services/current-data.service';\nimport { ErrorType } from '../../basics/error-type';\nimport { LexerTreeBuilder } from './lexer-tree-builder';\n\nexport class Lexer extends Disposable {\n    constructor(\n        @IDefinedNamesService private readonly _definedNamesService: IDefinedNamesService,\n        @Inject(LexerTreeBuilder) private readonly _lexerTreeBuilder: LexerTreeBuilder,\n        @IFormulaCurrentConfigService private readonly _formulaCurrentConfigService: IFormulaCurrentConfigService\n    ) {\n        super();\n    }\n\n    treeBuilder(formulaString: string, transformSuffix = true) {\n        return this._lexerTreeBuilder.treeBuilder(formulaString, transformSuffix, this._injectDefinedName.bind(this), this._simpleCheckDefinedName.bind(this));\n    }\n\n    private _simpleCheckDefinedName(formulaString: string) {\n        const definedNameMap = this._formulaCurrentConfigService.getDirtyDefinedNameMap();\n        const executeUnitId = this._formulaCurrentConfigService.getExecuteUnitId();\n        if (executeUnitId != null && definedNameMap[executeUnitId] != null) {\n            const names = Object.keys(definedNameMap[executeUnitId]!);\n            for (let i = 0, len = names.length; i < len; i++) {\n                const name = names[i];\n                if (formulaString.indexOf(name) > -1) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    private _checkDefinedNameDirty(token: string) {\n        const definedNameMap = this._formulaCurrentConfigService.getDirtyDefinedNameMap();\n        const executeUnitId = this._formulaCurrentConfigService.getExecuteUnitId();\n        if (executeUnitId != null && definedNameMap[executeUnitId] != null) {\n            const names = Object.keys(definedNameMap[executeUnitId]!);\n            for (let i = 0, len = names.length; i < len; i++) {\n                const name = names[i];\n                if (name === token) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    private _injectDefinedName(sequenceArray: ISequenceArray[]) {\n        const unitId = this._formulaCurrentConfigService.getExecuteUnitId();\n\n        if (unitId == null) {\n            return {\n                sequenceString: '',\n                hasDefinedName: false,\n                definedNames: [],\n            };\n        }\n\n        const sequenceNodes = this._lexerTreeBuilder.getSequenceNode(sequenceArray);\n        let sequenceString = '';\n        let hasDefinedName = false;\n        const definedNames: string[] = [];\n\n        for (let i = 0, len = sequenceNodes.length; i < len; i++) {\n            const node = sequenceNodes[i];\n            if (typeof node === 'string') {\n                sequenceString += node;\n                continue;\n            }\n\n            const { nodeType, token } = node;\n\n            if (nodeType === sequenceNodeType.REFERENCE || nodeType === sequenceNodeType.FUNCTION) {\n                const definedContent = this._definedNamesService.getValueByName(unitId, token);\n                if (definedContent) {\n                    let refString = definedContent.formulaOrRefString;\n                    if (refString.substring(0, 1) === operatorToken.EQUALS) {\n                        refString = refString.substring(1);\n                    }\n                    sequenceString += refString;\n                    definedNames.push(definedContent.name);\n                    hasDefinedName = true;\n                } else if (this._checkDefinedNameDirty(token)) {\n                    sequenceString += ErrorType.NAME;\n                    hasDefinedName = true;\n                    definedNames.push(token);\n                } else {\n                    sequenceString += token;\n                }\n            } else {\n                sequenceString += token;\n            }\n        }\n\n        return {\n            sequenceString,\n            hasDefinedName,\n            definedNames,\n        };\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"13cdb140e6248e5746707f72613d862cd86dda0e"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/dirty.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/dirty.ts","statementMap":{"0":{"start":{"line":2,"column":2},"end":{"line":14,"column":3}},"1":{"start":{"line":2,"column":15},"end":{"line":2,"column":16}},"2":{"start":{"line":2,"column":24},"end":{"line":2,"column":42}},"3":{"start":{"line":3,"column":23},"end":{"line":3,"column":37}},"4":{"start":{"line":4,"column":4},"end":{"line":6,"column":5}},"5":{"start":{"line":5,"column":6},"end":{"line":5,"column":15}},"6":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"7":{"start":{"line":8,"column":6},"end":{"line":8,"column":15}},"8":{"start":{"line":10,"column":57},"end":{"line":10,"column":73}},"9":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"10":{"start":{"line":12,"column":6},"end":{"line":12,"column":18}},"11":{"start":{"line":15,"column":2},"end":{"line":15,"column":15}}},"fnMap":{"0":{"name":"isInDirtyRange","decl":{"start":{"line":1,"column":16},"end":{"line":1,"column":30}},"loc":{"start":{"line":1,"column":74},"end":{"line":16,"column":1}},"line":1}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":4},"end":{"line":6,"column":5}},"type":"if","locations":[{"start":{"line":4,"column":4},"end":{"line":6,"column":5}},{"start":{},"end":{}}],"line":4},"1":{"loc":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},{"start":{},"end":{}}],"line":7},"2":{"loc":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},{"start":{},"end":{}}],"line":11},"3":{"loc":{"start":{"line":11,"column":8},"end":{"line":11,"column":88}},"type":"binary-expr","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},{"start":{"line":11,"column":27},"end":{"line":11,"column":40}},{"start":{"line":11,"column":44},"end":{"line":11,"column":65}},{"start":{"line":11,"column":69},"end":{"line":11,"column":88}}],"line":11}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/dirty.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IUnitRange } from '@univerjs/core';\n\nexport function isInDirtyRange(\n    dirtyRanges: IUnitRange[],\n    unitId: string,\n    sheetId: string,\n    row: number,\n    column: number\n) {\n    for (let i = 0, len = dirtyRanges.length; i < len; i++) {\n        const dirtyRange = dirtyRanges[i];\n        if (unitId !== dirtyRange.unitId) {\n            continue;\n        }\n\n        if (sheetId !== dirtyRange.sheetId) {\n            continue;\n        }\n\n        const { startRow, startColumn, endRow, endColumn } = dirtyRange.range;\n\n        if (row >= startRow && row <= endRow && column >= startColumn && column <= endColumn) {\n            return true;\n        }\n    }\n\n    return false;\n}\n"],"mappings":"AAkBO,gBAAS,eACZ,aACA,QACA,SACA,KACA,QACF;AACE,WAAS,IAAI,GAAG,MAAM,YAAY,QAAQ,IAAI,KAAK,KAAK;AACpD,UAAM,aAAa,YAAY,CAAC;AAChC,QAAI,WAAW,WAAW,QAAQ;AAC9B;AAAA,IACJ;AAEA,QAAI,YAAY,WAAW,SAAS;AAChC;AAAA,IACJ;AAEA,UAAM,EAAE,UAAU,aAAa,QAAQ,UAAU,IAAI,WAAW;AAEhE,QAAI,OAAO,YAAY,OAAO,UAAU,UAAU,eAAe,UAAU,WAAW;AAClF,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,SAAO;AACX;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8a614dba15532b6dbaa077ea7b58cdd896ded39a"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/is-null-cell.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/is-null-cell.ts","statementMap":{"0":{"start":{"line":2,"column":2},"end":{"line":4,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":16}},"2":{"start":{"line":5,"column":26},"end":{"line":5,"column":30}},"3":{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"5":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":17}},"7":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":17}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":14}}},"fnMap":{"0":{"name":"isNullCellForFormula","decl":{"start":{"line":1,"column":16},"end":{"line":1,"column":36}},"loc":{"start":{"line":1,"column":43},"end":{"line":16,"column":1}},"line":1}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":2},"end":{"line":4,"column":3}},"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":4,"column":3}},{"start":{},"end":{}}],"line":2},"1":{"loc":{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},{"start":{},"end":{}}],"line":6},"2":{"loc":{"start":{"line":6,"column":8},"end":{"line":6,"column":60}},"type":"binary-expr","locations":[{"start":{"line":6,"column":8},"end":{"line":6,"column":17}},{"start":{"line":6,"column":21},"end":{"line":6,"column":42}},{"start":{"line":6,"column":46},"end":{"line":6,"column":60}}],"line":6},"3":{"loc":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},{"start":{},"end":{}}],"line":9},"4":{"loc":{"start":{"line":9,"column":6},"end":{"line":9,"column":62}},"type":"binary-expr","locations":[{"start":{"line":9,"column":6},"end":{"line":9,"column":15}},{"start":{"line":9,"column":19},"end":{"line":9,"column":31}},{"start":{"line":9,"column":35},"end":{"line":9,"column":45}},{"start":{"line":9,"column":49},"end":{"line":9,"column":62}}],"line":9},"5":{"loc":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},{"start":{},"end":{}}],"line":12}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0,0,0],"5":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/is-null-cell.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, Nullable } from '@univerjs/core';\n\n/**\n * Examine if a cell is empty (null) in the formula-related modules. This is not\n * interchangable with {@link isNullCell} from the core package, because for\n * formulas, \"custom\" field is meaningless.\n */\nexport function isNullCellForFormula(cell: Nullable<ICellData>) {\n    if (cell == null) {\n        return true;\n    }\n\n    const { v, f, si, p } = cell;\n\n    if (!(v == null || (typeof v === 'string' && v.length === 0))) {\n        return false;\n    }\n\n    if ((f != null && f.length > 0) || (si != null && si.length > 0)) {\n        return false;\n    }\n\n    if (p != null) {\n        return false;\n    }\n\n    return true;\n}\n"],"mappings":"AAuBO,gBAAS,qBAAqB,MAA2B;AAC5D,MAAI,QAAQ,MAAM;AACd,WAAO;AAAA,EACX;AAEA,QAAM,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI;AAExB,MAAI,EAAE,KAAK,QAAS,OAAO,MAAM,YAAY,EAAE,WAAW,IAAK;AAC3D,WAAO;AAAA,EACX;AAEA,MAAK,KAAK,QAAQ,EAAE,SAAS,KAAO,MAAM,QAAQ,GAAG,SAAS,GAAI;AAC9D,WAAO;AAAA,EACX;AAEA,MAAI,KAAK,MAAM;AACX,WAAO;AAAA,EACX;AAEA,SAAO;AACX;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b230c74fb8bae24725461ff4b911f9e2f22d30b3"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/get-runtime-feature-cell.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/get-runtime-feature-cell.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":2,"column":57}},"1":{"start":{"line":3,"column":2},"end":{"line":14,"column":3}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"5":{"start":{"line":7,"column":6},"end":{"line":7,"column":15}},"6":{"start":{"line":9,"column":18},"end":{"line":9,"column":48}},"7":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"8":{"start":{"line":11,"column":6},"end":{"line":11,"column":15}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":17}}},"fnMap":{"0":{"name":"getRuntimeFeatureCell","decl":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"loc":{"start":{"line":1,"column":92},"end":{"line":15,"column":1}},"line":1}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},{"start":{},"end":{}}],"line":6},"1":{"loc":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},{"start":{},"end":{}}],"line":10}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"f":{"0":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/get-runtime-feature-cell.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRuntimeUnitDataType } from '../../basics/common';\n\nexport function getRuntimeFeatureCell(row: number, column: number, sheetId: string, unitId: string, runtimeFeatureCellData: { [featureId: string]: IRuntimeUnitDataType }) {\n    const featureKeys = Object.keys(runtimeFeatureCellData);\n\n    for (const featureId of featureKeys) {\n        const data = runtimeFeatureCellData[featureId];\n        const CellData = data?.[unitId]?.[sheetId];\n        if (CellData == null) {\n            continue;\n        }\n\n        const value = CellData.getValue(row, column);\n\n        if (value == null) {\n            continue;\n        }\n\n        return value;\n    }\n}\n"],"mappings":"AAkBO,gBAAS,sBAAsB,KAAa,QAAgB,SAAiB,QAAgB,wBAAuE;AACvK,QAAM,cAAc,OAAO,KAAK,sBAAsB;AAEtD,aAAW,aAAa,aAAa;AACjC,UAAM,OAAO,uBAAuB,SAAS;AAC7C,UAAM,WAAW,OAAO,MAAM,IAAI,OAAO;AACzC,QAAI,YAAY,MAAM;AAClB;AAAA,IACJ;AAEA,UAAM,QAAQ,SAAS,SAAS,KAAK,MAAM;AAE3C,QAAI,SAAS,MAAM;AACf;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"064dc5a5c0a81606219b380fa9d019a1e8d28eb4"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/cell.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/cell.ts","statementMap":{"0":{"start":{"line":3,"column":2},"end":{"line":5,"column":3}},"1":{"start":{"line":4,"column":4},"end":{"line":4,"column":13}},"2":{"start":{"line":6,"column":2},"end":{"line":14,"column":3}},"3":{"start":{"line":7,"column":17},"end":{"line":7,"column":29}},"4":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"5":{"start":{"line":9,"column":6},"end":{"line":9,"column":15}},"6":{"start":{"line":11,"column":17},"end":{"line":11,"column":32}},"7":{"start":{"line":12,"column":26},"end":{"line":12,"column":69}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":25}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":22}}},"fnMap":{"0":{"name":"getCellValue","decl":{"start":{"line":2,"column":16},"end":{"line":2,"column":28}},"loc":{"start":{"line":2,"column":35},"end":{"line":16,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":2},"end":{"line":5,"column":3}},"type":"if","locations":[{"start":{"line":3,"column":2},"end":{"line":5,"column":3}},{"start":{},"end":{}}],"line":3},"1":{"loc":{"start":{"line":6,"column":2},"end":{"line":14,"column":3}},"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":14,"column":3}},{"start":{},"end":{}}],"line":6},"2":{"loc":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},{"start":{},"end":{}}],"line":8},"3":{"loc":{"start":{"line":15,"column":9},"end":{"line":15,"column":21}},"type":"binary-expr","locations":[{"start":{"line":15,"column":9},"end":{"line":15,"column":16}},{"start":{"line":15,"column":20},"end":{"line":15,"column":21}}],"line":15}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/cell.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BuildTextUtils } from '@univerjs/core';\nimport type { ICellData, Nullable } from '@univerjs/core';\n\nexport function getCellValue(cell: Nullable<ICellData>) {\n    if (cell === null) {\n        return 0;\n    }\n\n    if (cell?.p) {\n        const body = cell?.p.body;\n\n        if (body == null) {\n            return 0;\n        }\n\n        const data = body.dataStream;\n        const newDataStream = BuildTextUtils.transform.getPlainText(data);\n\n        return newDataStream;\n    }\n\n    return cell?.v || 0;\n}\n"],"mappings":"AAgBA,SAAS,sBAAsB;AAGxB,gBAAS,aAAa,MAA2B;AACpD,MAAI,SAAS,MAAM;AACf,WAAO;AAAA,EACX;AAEA,MAAI,MAAM,GAAG;AACT,UAAM,OAAO,MAAM,EAAE;AAErB,QAAI,QAAQ,MAAM;AACd,aAAO;AAAA,IACX;AAEA,UAAM,OAAO,KAAK;AAClB,UAAM,gBAAgB,eAAe,UAAU,aAAa,IAAI;AAEhE,WAAO;AAAA,EACX;AAEA,SAAO,MAAM,KAAK;AACtB;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4f4066bcccea7514560f60770ca911efbc22f1cf"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/base-reference-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/base-reference-object.ts","statementMap":{"0":{"start":{"line":18,"column":32},"end":{"line":18,"column":35}},"1":{"start":{"line":19,"column":42},"end":{"line":19,"column":84}},"2":{"start":{"line":22,"column":4},"end":{"line":22,"column":12}},"3":{"start":{"line":23,"column":4},"end":{"line":23,"column":25}},"4":{"start":{"line":25,"column":19},"end":{"line":25,"column":21}},"5":{"start":{"line":26,"column":21},"end":{"line":26,"column":23}},"6":{"start":{"line":27,"column":20},"end":{"line":27,"column":22}},"7":{"start":{"line":28,"column":15},"end":{"line":33,"column":3}},"8":{"start":{"line":34,"column":14},"end":{"line":34,"column":16}},"9":{"start":{"line":35,"column":20},"end":{"line":35,"column":22}},"10":{"start":{"line":36,"column":19},"end":{"line":36,"column":21}},"11":{"start":{"line":37,"column":18},"end":{"line":37,"column":20}},"12":{"start":{"line":38,"column":17},"end":{"line":38,"column":19}},"13":{"start":{"line":39,"column":26},"end":{"line":39,"column":28}},"14":{"start":{"line":40,"column":33},"end":{"line":40,"column":35}},"15":{"start":{"line":41,"column":28},"end":{"line":41,"column":30}},"16":{"start":{"line":42,"column":16},"end":{"line":42,"column":17}},"17":{"start":{"line":43,"column":16},"end":{"line":43,"column":17}},"18":{"start":{"line":45,"column":4},"end":{"line":45,"column":24}},"19":{"start":{"line":46,"column":4},"end":{"line":46,"column":30}},"20":{"start":{"line":47,"column":4},"end":{"line":47,"column":27}},"21":{"start":{"line":50,"column":4},"end":{"line":50,"column":23}},"22":{"start":{"line":53,"column":4},"end":{"line":53,"column":24}},"23":{"start":{"line":56,"column":57},"end":{"line":56,"column":80}},"24":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"25":{"start":{"line":58,"column":6},"end":{"line":58,"column":18}},"26":{"start":{"line":60,"column":4},"end":{"line":60,"column":17}},"27":{"start":{"line":63,"column":4},"end":{"line":63,"column":25}},"28":{"start":{"line":64,"column":4},"end":{"line":64,"column":25}},"29":{"start":{"line":67,"column":4},"end":{"line":70,"column":6}},"30":{"start":{"line":73,"column":55},"end":{"line":73,"column":125}},"31":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"32":{"start":{"line":75,"column":6},"end":{"line":75,"column":19}},"33":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"34":{"start":{"line":78,"column":6},"end":{"line":78,"column":22}},"35":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"36":{"start":{"line":81,"column":6},"end":{"line":81,"column":49}},"37":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"38":{"start":{"line":84,"column":6},"end":{"line":84,"column":55}},"39":{"start":{"line":86,"column":4},"end":{"line":92,"column":6}},"40":{"start":{"line":95,"column":4},"end":{"line":95,"column":16}},"41":{"start":{"line":98,"column":57},"end":{"line":98,"column":80}},"42":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"43":{"start":{"line":100,"column":6},"end":{"line":100,"column":87}},"44":{"start":{"line":102,"column":19},"end":{"line":102,"column":60}},"45":{"start":{"line":103,"column":20},"end":{"line":103,"column":63}},"46":{"start":{"line":104,"column":4},"end":{"line":128,"column":5}},"47":{"start":{"line":104,"column":17},"end":{"line":104,"column":25}},"48":{"start":{"line":105,"column":6},"end":{"line":127,"column":7}},"49":{"start":{"line":105,"column":19},"end":{"line":105,"column":30}},"50":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"51":{"start":{"line":107,"column":10},"end":{"line":107,"column":72}},"52":{"start":{"line":109,"column":21},"end":{"line":109,"column":43}},"53":{"start":{"line":110,"column":21},"end":{"line":110,"column":26}},"54":{"start":{"line":111,"column":8},"end":{"line":114,"column":9}},"55":{"start":{"line":112,"column":10},"end":{"line":112,"column":40}},"56":{"start":{"line":113,"column":10},"end":{"line":113,"column":19}},"57":{"start":{"line":115,"column":32},"end":{"line":115,"column":61}},"58":{"start":{"line":116,"column":8},"end":{"line":122,"column":9}},"59":{"start":{"line":117,"column":26},"end":{"line":117,"column":68}},"60":{"start":{"line":118,"column":10},"end":{"line":121,"column":11}},"61":{"start":{"line":119,"column":26},"end":{"line":119,"column":62}},"62":{"start":{"line":120,"column":12},"end":{"line":120,"column":73}},"63":{"start":{"line":123,"column":8},"end":{"line":123,"column":51}},"64":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"65":{"start":{"line":125,"column":10},"end":{"line":125,"column":17}},"66":{"start":{"line":131,"column":38},"end":{"line":131,"column":61}},"67":{"start":{"line":132,"column":17},"end":{"line":132,"column":56}},"68":{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},"69":{"start":{"line":134,"column":6},"end":{"line":134,"column":41}},"70":{"start":{"line":136,"column":26},"end":{"line":136,"column":55}},"71":{"start":{"line":137,"column":19},"end":{"line":137,"column":60}},"72":{"start":{"line":138,"column":20},"end":{"line":138,"column":63}},"73":{"start":{"line":139,"column":20},"end":{"line":139,"column":79}},"74":{"start":{"line":140,"column":4},"end":{"line":143,"column":5}},"75":{"start":{"line":141,"column":20},"end":{"line":141,"column":54}},"76":{"start":{"line":142,"column":6},"end":{"line":142,"column":65}},"77":{"start":{"line":144,"column":4},"end":{"line":144,"column":27}},"78":{"start":{"line":147,"column":4},"end":{"line":147,"column":27}},"79":{"start":{"line":150,"column":4},"end":{"line":150,"column":28}},"80":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"81":{"start":{"line":154,"column":6},"end":{"line":154,"column":32}},"82":{"start":{"line":156,"column":4},"end":{"line":156,"column":31}},"83":{"start":{"line":159,"column":4},"end":{"line":161,"column":5}},"84":{"start":{"line":160,"column":6},"end":{"line":160,"column":33}},"85":{"start":{"line":162,"column":4},"end":{"line":162,"column":32}},"86":{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},"87":{"start":{"line":166,"column":6},"end":{"line":166,"column":34}},"88":{"start":{"line":170,"column":4},"end":{"line":170,"column":30}},"89":{"start":{"line":173,"column":4},"end":{"line":173,"column":82}},"90":{"start":{"line":176,"column":4},"end":{"line":176,"column":34}},"91":{"start":{"line":179,"column":4},"end":{"line":179,"column":31}},"92":{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},"93":{"start":{"line":183,"column":6},"end":{"line":183,"column":40}},"94":{"start":{"line":187,"column":4},"end":{"line":187,"column":33}},"95":{"start":{"line":190,"column":4},"end":{"line":190,"column":35}},"96":{"start":{"line":193,"column":4},"end":{"line":193,"column":32}},"97":{"start":{"line":196,"column":4},"end":{"line":196,"column":33}},"98":{"start":{"line":199,"column":4},"end":{"line":199,"column":31}},"99":{"start":{"line":202,"column":4},"end":{"line":202,"column":26}},"100":{"start":{"line":205,"column":4},"end":{"line":205,"column":30}},"101":{"start":{"line":208,"column":4},"end":{"line":208,"column":32}},"102":{"start":{"line":211,"column":4},"end":{"line":211,"column":42}},"103":{"start":{"line":214,"column":4},"end":{"line":214,"column":29}},"104":{"start":{"line":217,"column":4},"end":{"line":217,"column":36}},"105":{"start":{"line":220,"column":4},"end":{"line":220,"column":38}},"106":{"start":{"line":223,"column":4},"end":{"line":223,"column":42}},"107":{"start":{"line":226,"column":4},"end":{"line":226,"column":45}},"108":{"start":{"line":229,"column":4},"end":{"line":229,"column":49}},"109":{"start":{"line":232,"column":4},"end":{"line":232,"column":40}},"110":{"start":{"line":235,"column":4},"end":{"line":235,"column":44}},"111":{"start":{"line":238,"column":4},"end":{"line":238,"column":59}},"112":{"start":{"line":241,"column":4},"end":{"line":241,"column":62}},"113":{"start":{"line":244,"column":4},"end":{"line":244,"column":65}},"114":{"start":{"line":247,"column":4},"end":{"line":247,"column":71}},"115":{"start":{"line":250,"column":4},"end":{"line":250,"column":59}},"116":{"start":{"line":253,"column":4},"end":{"line":253,"column":62}},"117":{"start":{"line":256,"column":4},"end":{"line":256,"column":17}},"118":{"start":{"line":259,"column":4},"end":{"line":259,"column":17}},"119":{"start":{"line":262,"column":4},"end":{"line":262,"column":17}},"120":{"start":{"line":265,"column":4},"end":{"line":265,"column":17}},"121":{"start":{"line":268,"column":4},"end":{"line":268,"column":17}},"122":{"start":{"line":271,"column":4},"end":{"line":271,"column":50}},"123":{"start":{"line":274,"column":4},"end":{"line":279,"column":6}},"124":{"start":{"line":282,"column":18},"end":{"line":282,"column":36}},"125":{"start":{"line":283,"column":4},"end":{"line":285,"column":5}},"126":{"start":{"line":284,"column":6},"end":{"line":284,"column":44}},"127":{"start":{"line":286,"column":4},"end":{"line":292,"column":5}},"128":{"start":{"line":287,"column":22},"end":{"line":287,"column":50}},"129":{"start":{"line":288,"column":6},"end":{"line":290,"column":7}},"130":{"start":{"line":289,"column":8},"end":{"line":289,"column":58}},"131":{"start":{"line":291,"column":6},"end":{"line":291,"column":63}},"132":{"start":{"line":293,"column":4},"end":{"line":295,"column":5}},"133":{"start":{"line":294,"column":6},"end":{"line":294,"column":56}},"134":{"start":{"line":296,"column":4},"end":{"line":298,"column":5}},"135":{"start":{"line":297,"column":6},"end":{"line":297,"column":55}},"136":{"start":{"line":299,"column":4},"end":{"line":299,"column":44}},"137":{"start":{"line":302,"column":19},"end":{"line":302,"column":57}},"138":{"start":{"line":303,"column":4},"end":{"line":303,"column":27}},"139":{"start":{"line":303,"column":17},"end":{"line":303,"column":27}},"140":{"start":{"line":304,"column":18},"end":{"line":304,"column":45}},"141":{"start":{"line":305,"column":4},"end":{"line":305,"column":35}},"142":{"start":{"line":308,"column":4},"end":{"line":308,"column":39}},"143":{"start":{"line":311,"column":4},"end":{"line":311,"column":50}},"144":{"start":{"line":314,"column":4},"end":{"line":314,"column":65}},"145":{"start":{"line":317,"column":4},"end":{"line":317,"column":50}},"146":{"start":{"line":320,"column":4},"end":{"line":320,"column":70}},"147":{"start":{"line":323,"column":4},"end":{"line":323,"column":79}},"148":{"start":{"line":326,"column":4},"end":{"line":326,"column":86}},"149":{"start":{"line":329,"column":28},"end":{"line":329,"column":60}},"150":{"start":{"line":330,"column":30},"end":{"line":330,"column":63}},"151":{"start":{"line":331,"column":39},"end":{"line":331,"column":82}},"152":{"start":{"line":332,"column":46},"end":{"line":332,"column":96}},"153":{"start":{"line":333,"column":4},"end":{"line":333,"column":264}},"154":{"start":{"line":336,"column":4},"end":{"line":336,"column":113}},"155":{"start":{"line":339,"column":14},"end":{"line":339,"column":20}},"156":{"start":{"line":340,"column":17},"end":{"line":340,"column":26}},"157":{"start":{"line":341,"column":4},"end":{"line":343,"column":5}},"158":{"start":{"line":342,"column":6},"end":{"line":342,"column":37}},"159":{"start":{"line":344,"column":4},"end":{"line":346,"column":5}},"160":{"start":{"line":345,"column":6},"end":{"line":345,"column":43}},"161":{"start":{"line":347,"column":17},"end":{"line":347,"column":46}},"162":{"start":{"line":348,"column":4},"end":{"line":350,"column":5}},"163":{"start":{"line":349,"column":6},"end":{"line":349,"column":54}},"164":{"start":{"line":351,"column":4},"end":{"line":351,"column":41}},"165":{"start":{"line":362,"column":26},"end":{"line":362,"column":54}},"166":{"start":{"line":363,"column":4},"end":{"line":365,"column":5}},"167":{"start":{"line":364,"column":6},"end":{"line":364,"column":16}},"168":{"start":{"line":366,"column":24},"end":{"line":366,"column":90}},"169":{"start":{"line":367,"column":4},"end":{"line":369,"column":5}},"170":{"start":{"line":368,"column":6},"end":{"line":368,"column":16}},"171":{"start":{"line":370,"column":18},"end":{"line":370,"column":59}},"172":{"start":{"line":371,"column":4},"end":{"line":371,"column":35}},"173":{"start":{"line":374,"column":57},"end":{"line":374,"column":80}},"174":{"start":{"line":375,"column":16},"end":{"line":375,"column":108}},"175":{"start":{"line":376,"column":18},"end":{"line":376,"column":53}},"176":{"start":{"line":377,"column":4},"end":{"line":379,"column":5}},"177":{"start":{"line":378,"column":6},"end":{"line":378,"column":19}},"178":{"start":{"line":380,"column":20},"end":{"line":380,"column":41}},"179":{"start":{"line":381,"column":23},"end":{"line":381,"column":50}},"180":{"start":{"line":382,"column":4},"end":{"line":384,"column":5}},"181":{"start":{"line":383,"column":6},"end":{"line":383,"column":46}},"182":{"start":{"line":385,"column":27},"end":{"line":385,"column":45}},"183":{"start":{"line":386,"column":4},"end":{"line":396,"column":7}},"184":{"start":{"line":387,"column":18},"end":{"line":387,"column":37}},"185":{"start":{"line":388,"column":21},"end":{"line":388,"column":46}},"186":{"start":{"line":389,"column":6},"end":{"line":391,"column":7}},"187":{"start":{"line":390,"column":8},"end":{"line":390,"column":52}},"188":{"start":{"line":392,"column":6},"end":{"line":394,"column":7}},"189":{"start":{"line":393,"column":8},"end":{"line":393,"column":47}},"190":{"start":{"line":395,"column":6},"end":{"line":395,"column":48}},"191":{"start":{"line":397,"column":33},"end":{"line":405,"column":5}},"192":{"start":{"line":406,"column":29},"end":{"line":406,"column":74}},"193":{"start":{"line":407,"column":4},"end":{"line":407,"column":70}},"194":{"start":{"line":408,"column":4},"end":{"line":408,"column":28}},"195":{"start":{"line":411,"column":4},"end":{"line":415,"column":6}},"196":{"start":{"line":418,"column":4},"end":{"line":420,"column":5}},"197":{"start":{"line":419,"column":6},"end":{"line":419,"column":18}},"198":{"start":{"line":421,"column":4},"end":{"line":421,"column":17}},"199":{"start":{"line":424,"column":33},"end":{"line":432,"column":5}},"200":{"start":{"line":433,"column":4},"end":{"line":433,"column":57}},"201":{"start":{"line":438,"column":4},"end":{"line":438,"column":12}},"202":{"start":{"line":439,"column":4},"end":{"line":439,"column":29}},"203":{"start":{"line":442,"column":4},"end":{"line":442,"column":16}},"204":{"start":{"line":445,"column":4},"end":{"line":445,"column":25}},"205":{"start":{"line":450,"column":4},"end":{"line":450,"column":12}},"206":{"start":{"line":451,"column":4},"end":{"line":451,"column":37}},"207":{"start":{"line":454,"column":4},"end":{"line":454,"column":16}},"208":{"start":{"line":457,"column":21},"end":{"line":457,"column":23}},"209":{"start":{"line":458,"column":4},"end":{"line":471,"column":5}},"210":{"start":{"line":458,"column":17},"end":{"line":458,"column":18}},"211":{"start":{"line":459,"column":27},"end":{"line":459,"column":47}},"212":{"start":{"line":460,"column":6},"end":{"line":462,"column":7}},"213":{"start":{"line":461,"column":8},"end":{"line":461,"column":25}},"214":{"start":{"line":463,"column":6},"end":{"line":470,"column":7}},"215":{"start":{"line":463,"column":19},"end":{"line":463,"column":20}},"216":{"start":{"line":464,"column":28},"end":{"line":464,"column":43}},"217":{"start":{"line":465,"column":8},"end":{"line":469,"column":9}},"218":{"start":{"line":466,"column":10},"end":{"line":466,"column":56}},"219":{"start":{"line":468,"column":10},"end":{"line":468,"column":39}},"220":{"start":{"line":472,"column":33},"end":{"line":480,"column":5}},"221":{"start":{"line":481,"column":4},"end":{"line":481,"column":57}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":21,"column":2},"end":{"line":21,"column":3}},"loc":{"start":{"line":21,"column":22},"end":{"line":24,"column":3}},"line":21},"1":{"name":"(anonymous_1)","decl":{"start":{"line":44,"column":2},"end":{"line":44,"column":3}},"loc":{"start":{"line":44,"column":12},"end":{"line":48,"column":3}},"line":44},"2":{"name":"(anonymous_2)","decl":{"start":{"line":49,"column":2},"end":{"line":49,"column":3}},"loc":{"start":{"line":49,"column":13},"end":{"line":51,"column":3}},"line":49},"3":{"name":"(anonymous_3)","decl":{"start":{"line":52,"column":2},"end":{"line":52,"column":3}},"loc":{"start":{"line":52,"column":18},"end":{"line":54,"column":3}},"line":52},"4":{"name":"(anonymous_4)","decl":{"start":{"line":55,"column":2},"end":{"line":55,"column":3}},"loc":{"start":{"line":55,"column":18},"end":{"line":61,"column":3}},"line":55},"5":{"name":"(anonymous_5)","decl":{"start":{"line":62,"column":2},"end":{"line":62,"column":3}},"loc":{"start":{"line":62,"column":29},"end":{"line":65,"column":3}},"line":62},"6":{"name":"(anonymous_6)","decl":{"start":{"line":66,"column":2},"end":{"line":66,"column":3}},"loc":{"start":{"line":66,"column":17},"end":{"line":71,"column":3}},"line":66},"7":{"name":"(anonymous_7)","decl":{"start":{"line":72,"column":2},"end":{"line":72,"column":3}},"loc":{"start":{"line":72,"column":21},"end":{"line":93,"column":3}},"line":72},"8":{"name":"(anonymous_8)","decl":{"start":{"line":94,"column":2},"end":{"line":94,"column":3}},"loc":{"start":{"line":94,"column":22},"end":{"line":96,"column":3}},"line":94},"9":{"name":"(anonymous_9)","decl":{"start":{"line":97,"column":2},"end":{"line":97,"column":3}},"loc":{"start":{"line":97,"column":21},"end":{"line":129,"column":3}},"line":97},"10":{"name":"(anonymous_10)","decl":{"start":{"line":130,"column":2},"end":{"line":130,"column":3}},"loc":{"start":{"line":130,"column":17},"end":{"line":145,"column":3}},"line":130},"11":{"name":"(anonymous_11)","decl":{"start":{"line":146,"column":2},"end":{"line":146,"column":3}},"loc":{"start":{"line":146,"column":17},"end":{"line":148,"column":3}},"line":146},"12":{"name":"(anonymous_12)","decl":{"start":{"line":149,"column":2},"end":{"line":149,"column":3}},"loc":{"start":{"line":149,"column":22},"end":{"line":151,"column":3}},"line":149},"13":{"name":"(anonymous_13)","decl":{"start":{"line":152,"column":2},"end":{"line":152,"column":3}},"loc":{"start":{"line":152,"column":14},"end":{"line":157,"column":3}},"line":152},"14":{"name":"(anonymous_14)","decl":{"start":{"line":158,"column":2},"end":{"line":158,"column":3}},"loc":{"start":{"line":158,"column":15},"end":{"line":163,"column":3}},"line":158},"15":{"name":"(anonymous_15)","decl":{"start":{"line":164,"column":2},"end":{"line":164,"column":3}},"loc":{"start":{"line":164,"column":32},"end":{"line":168,"column":3}},"line":164},"16":{"name":"(anonymous_16)","decl":{"start":{"line":169,"column":2},"end":{"line":169,"column":3}},"loc":{"start":{"line":169,"column":20},"end":{"line":171,"column":3}},"line":169},"17":{"name":"(anonymous_17)","decl":{"start":{"line":172,"column":2},"end":{"line":172,"column":3}},"loc":{"start":{"line":172,"column":33},"end":{"line":174,"column":3}},"line":172},"18":{"name":"(anonymous_18)","decl":{"start":{"line":175,"column":2},"end":{"line":175,"column":3}},"loc":{"start":{"line":175,"column":34},"end":{"line":177,"column":3}},"line":175},"19":{"name":"(anonymous_19)","decl":{"start":{"line":178,"column":2},"end":{"line":178,"column":3}},"loc":{"start":{"line":178,"column":21},"end":{"line":180,"column":3}},"line":178},"20":{"name":"(anonymous_20)","decl":{"start":{"line":181,"column":2},"end":{"line":181,"column":3}},"loc":{"start":{"line":181,"column":32},"end":{"line":185,"column":3}},"line":181},"21":{"name":"(anonymous_21)","decl":{"start":{"line":186,"column":2},"end":{"line":186,"column":3}},"loc":{"start":{"line":186,"column":23},"end":{"line":188,"column":3}},"line":186},"22":{"name":"(anonymous_22)","decl":{"start":{"line":189,"column":2},"end":{"line":189,"column":3}},"loc":{"start":{"line":189,"column":29},"end":{"line":191,"column":3}},"line":189},"23":{"name":"(anonymous_23)","decl":{"start":{"line":192,"column":2},"end":{"line":192,"column":3}},"loc":{"start":{"line":192,"column":22},"end":{"line":194,"column":3}},"line":192},"24":{"name":"(anonymous_24)","decl":{"start":{"line":195,"column":2},"end":{"line":195,"column":3}},"loc":{"start":{"line":195,"column":27},"end":{"line":197,"column":3}},"line":195},"25":{"name":"(anonymous_25)","decl":{"start":{"line":198,"column":2},"end":{"line":198,"column":3}},"loc":{"start":{"line":198,"column":21},"end":{"line":200,"column":3}},"line":198},"26":{"name":"(anonymous_26)","decl":{"start":{"line":201,"column":2},"end":{"line":201,"column":3}},"loc":{"start":{"line":201,"column":16},"end":{"line":203,"column":3}},"line":201},"27":{"name":"(anonymous_27)","decl":{"start":{"line":204,"column":2},"end":{"line":204,"column":3}},"loc":{"start":{"line":204,"column":24},"end":{"line":206,"column":3}},"line":204},"28":{"name":"(anonymous_28)","decl":{"start":{"line":207,"column":2},"end":{"line":207,"column":3}},"loc":{"start":{"line":207,"column":22},"end":{"line":209,"column":3}},"line":207},"29":{"name":"(anonymous_29)","decl":{"start":{"line":210,"column":2},"end":{"line":210,"column":3}},"loc":{"start":{"line":210,"column":36},"end":{"line":212,"column":3}},"line":210},"30":{"name":"(anonymous_30)","decl":{"start":{"line":213,"column":2},"end":{"line":213,"column":3}},"loc":{"start":{"line":213,"column":19},"end":{"line":215,"column":3}},"line":213},"31":{"name":"(anonymous_31)","decl":{"start":{"line":216,"column":2},"end":{"line":216,"column":3}},"loc":{"start":{"line":216,"column":30},"end":{"line":218,"column":3}},"line":216},"32":{"name":"(anonymous_32)","decl":{"start":{"line":219,"column":2},"end":{"line":219,"column":3}},"loc":{"start":{"line":219,"column":28},"end":{"line":221,"column":3}},"line":219},"33":{"name":"(anonymous_33)","decl":{"start":{"line":222,"column":2},"end":{"line":222,"column":3}},"loc":{"start":{"line":222,"column":36},"end":{"line":224,"column":3}},"line":222},"34":{"name":"(anonymous_34)","decl":{"start":{"line":225,"column":2},"end":{"line":225,"column":3}},"loc":{"start":{"line":225,"column":35},"end":{"line":227,"column":3}},"line":225},"35":{"name":"(anonymous_35)","decl":{"start":{"line":228,"column":2},"end":{"line":228,"column":3}},"loc":{"start":{"line":228,"column":43},"end":{"line":230,"column":3}},"line":228},"36":{"name":"(anonymous_36)","decl":{"start":{"line":231,"column":2},"end":{"line":231,"column":3}},"loc":{"start":{"line":231,"column":30},"end":{"line":233,"column":3}},"line":231},"37":{"name":"(anonymous_37)","decl":{"start":{"line":234,"column":2},"end":{"line":234,"column":3}},"loc":{"start":{"line":234,"column":38},"end":{"line":236,"column":3}},"line":234},"38":{"name":"(anonymous_38)","decl":{"start":{"line":237,"column":2},"end":{"line":237,"column":3}},"loc":{"start":{"line":237,"column":27},"end":{"line":239,"column":3}},"line":237},"39":{"name":"(anonymous_39)","decl":{"start":{"line":240,"column":2},"end":{"line":240,"column":3}},"loc":{"start":{"line":240,"column":30},"end":{"line":242,"column":3}},"line":240},"40":{"name":"(anonymous_40)","decl":{"start":{"line":243,"column":2},"end":{"line":243,"column":3}},"loc":{"start":{"line":243,"column":16},"end":{"line":245,"column":3}},"line":243},"41":{"name":"(anonymous_41)","decl":{"start":{"line":246,"column":2},"end":{"line":246,"column":3}},"loc":{"start":{"line":246,"column":19},"end":{"line":248,"column":3}},"line":246},"42":{"name":"(anonymous_42)","decl":{"start":{"line":249,"column":2},"end":{"line":249,"column":3}},"loc":{"start":{"line":249,"column":15},"end":{"line":251,"column":3}},"line":249},"43":{"name":"(anonymous_43)","decl":{"start":{"line":252,"column":2},"end":{"line":252,"column":3}},"loc":{"start":{"line":252,"column":18},"end":{"line":254,"column":3}},"line":252},"44":{"name":"(anonymous_44)","decl":{"start":{"line":255,"column":2},"end":{"line":255,"column":3}},"loc":{"start":{"line":255,"column":11},"end":{"line":257,"column":3}},"line":255},"45":{"name":"(anonymous_45)","decl":{"start":{"line":258,"column":2},"end":{"line":258,"column":3}},"loc":{"start":{"line":258,"column":13},"end":{"line":260,"column":3}},"line":258},"46":{"name":"(anonymous_46)","decl":{"start":{"line":261,"column":2},"end":{"line":261,"column":3}},"loc":{"start":{"line":261,"column":10},"end":{"line":263,"column":3}},"line":261},"47":{"name":"(anonymous_47)","decl":{"start":{"line":264,"column":2},"end":{"line":264,"column":3}},"loc":{"start":{"line":264,"column":12},"end":{"line":266,"column":3}},"line":264},"48":{"name":"(anonymous_48)","decl":{"start":{"line":267,"column":2},"end":{"line":267,"column":3}},"loc":{"start":{"line":267,"column":12},"end":{"line":269,"column":3}},"line":267},"49":{"name":"(anonymous_49)","decl":{"start":{"line":270,"column":2},"end":{"line":270,"column":3}},"loc":{"start":{"line":270,"column":27},"end":{"line":272,"column":3}},"line":270},"50":{"name":"(anonymous_50)","decl":{"start":{"line":273,"column":2},"end":{"line":273,"column":3}},"loc":{"start":{"line":273,"column":37},"end":{"line":280,"column":3}},"line":273},"51":{"name":"(anonymous_51)","decl":{"start":{"line":281,"column":2},"end":{"line":281,"column":3}},"loc":{"start":{"line":281,"column":27},"end":{"line":300,"column":3}},"line":281},"52":{"name":"(anonymous_52)","decl":{"start":{"line":301,"column":2},"end":{"line":301,"column":3}},"loc":{"start":{"line":301,"column":26},"end":{"line":306,"column":3}},"line":301},"53":{"name":"(anonymous_53)","decl":{"start":{"line":307,"column":2},"end":{"line":307,"column":3}},"loc":{"start":{"line":307,"column":20},"end":{"line":309,"column":3}},"line":307},"54":{"name":"(anonymous_54)","decl":{"start":{"line":310,"column":2},"end":{"line":310,"column":3}},"loc":{"start":{"line":310,"column":26},"end":{"line":312,"column":3}},"line":310},"55":{"name":"(anonymous_55)","decl":{"start":{"line":313,"column":2},"end":{"line":313,"column":3}},"loc":{"start":{"line":313,"column":30},"end":{"line":315,"column":3}},"line":313},"56":{"name":"(anonymous_56)","decl":{"start":{"line":316,"column":2},"end":{"line":316,"column":3}},"loc":{"start":{"line":316,"column":25},"end":{"line":318,"column":3}},"line":316},"57":{"name":"(anonymous_57)","decl":{"start":{"line":319,"column":2},"end":{"line":319,"column":3}},"loc":{"start":{"line":319,"column":31},"end":{"line":321,"column":3}},"line":319},"58":{"name":"(anonymous_58)","decl":{"start":{"line":322,"column":2},"end":{"line":322,"column":3}},"loc":{"start":{"line":322,"column":41},"end":{"line":324,"column":3}},"line":322},"59":{"name":"(anonymous_59)","decl":{"start":{"line":325,"column":2},"end":{"line":325,"column":3}},"loc":{"start":{"line":325,"column":48},"end":{"line":327,"column":3}},"line":325},"60":{"name":"(anonymous_60)","decl":{"start":{"line":328,"column":2},"end":{"line":328,"column":3}},"loc":{"start":{"line":328,"column":27},"end":{"line":334,"column":3}},"line":328},"61":{"name":"(anonymous_61)","decl":{"start":{"line":335,"column":2},"end":{"line":335,"column":3}},"loc":{"start":{"line":335,"column":42},"end":{"line":337,"column":3}},"line":335},"62":{"name":"(anonymous_62)","decl":{"start":{"line":338,"column":2},"end":{"line":338,"column":3}},"loc":{"start":{"line":338,"column":39},"end":{"line":352,"column":3}},"line":338},"63":{"name":"(anonymous_63)","decl":{"start":{"line":361,"column":2},"end":{"line":361,"column":3}},"loc":{"start":{"line":361,"column":47},"end":{"line":372,"column":3}},"line":361},"64":{"name":"(anonymous_64)","decl":{"start":{"line":373,"column":2},"end":{"line":373,"column":3}},"loc":{"start":{"line":373,"column":38},"end":{"line":409,"column":3}},"line":373},"65":{"name":"(anonymous_65)","decl":{"start":{"line":386,"column":18},"end":{"line":386,"column":19}},"loc":{"start":{"line":386,"column":58},"end":{"line":396,"column":5}},"line":386},"66":{"name":"(anonymous_66)","decl":{"start":{"line":410,"column":2},"end":{"line":410,"column":3}},"loc":{"start":{"line":410,"column":16},"end":{"line":416,"column":3}},"line":410},"67":{"name":"(anonymous_67)","decl":{"start":{"line":417,"column":2},"end":{"line":417,"column":3}},"loc":{"start":{"line":417,"column":26},"end":{"line":422,"column":3}},"line":417},"68":{"name":"(anonymous_68)","decl":{"start":{"line":423,"column":2},"end":{"line":423,"column":3}},"loc":{"start":{"line":423,"column":30},"end":{"line":434,"column":3}},"line":423},"69":{"name":"(anonymous_69)","decl":{"start":{"line":437,"column":2},"end":{"line":437,"column":3}},"loc":{"start":{"line":437,"column":24},"end":{"line":440,"column":3}},"line":437},"70":{"name":"(anonymous_70)","decl":{"start":{"line":441,"column":2},"end":{"line":441,"column":3}},"loc":{"start":{"line":441,"column":18},"end":{"line":443,"column":3}},"line":441},"71":{"name":"(anonymous_71)","decl":{"start":{"line":444,"column":2},"end":{"line":444,"column":3}},"loc":{"start":{"line":444,"column":19},"end":{"line":446,"column":3}},"line":444},"72":{"name":"(anonymous_72)","decl":{"start":{"line":449,"column":2},"end":{"line":449,"column":3}},"loc":{"start":{"line":449,"column":28},"end":{"line":452,"column":3}},"line":449},"73":{"name":"(anonymous_73)","decl":{"start":{"line":453,"column":2},"end":{"line":453,"column":3}},"loc":{"start":{"line":453,"column":23},"end":{"line":455,"column":3}},"line":453},"74":{"name":"(anonymous_74)","decl":{"start":{"line":456,"column":2},"end":{"line":456,"column":3}},"loc":{"start":{"line":456,"column":19},"end":{"line":482,"column":3}},"line":456}},"branchMap":{"0":{"loc":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},{"start":{},"end":{}}],"line":57},"1":{"loc":{"start":{"line":57,"column":8},"end":{"line":57,"column":131}},"type":"binary-expr","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":20}},{"start":{"line":57,"column":24},"end":{"line":57,"column":39}},{"start":{"line":57,"column":43},"end":{"line":57,"column":82}},{"start":{"line":57,"column":86},"end":{"line":57,"column":131}}],"line":57},"2":{"loc":{"start":{"line":62,"column":15},"end":{"line":62,"column":20}},"type":"default-arg","locations":[{"start":{"line":62,"column":19},"end":{"line":62,"column":20}}],"line":62},"3":{"loc":{"start":{"line":62,"column":22},"end":{"line":62,"column":27}},"type":"default-arg","locations":[{"start":{"line":62,"column":26},"end":{"line":62,"column":27}}],"line":62},"4":{"loc":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},{"start":{},"end":{}}],"line":74},"5":{"loc":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},{"start":{},"end":{}}],"line":77},"6":{"loc":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},{"start":{},"end":{}}],"line":80},"7":{"loc":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},{"start":{},"end":{}}],"line":83},"8":{"loc":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},{"start":{},"end":{}}],"line":99},"9":{"loc":{"start":{"line":102,"column":19},"end":{"line":102,"column":60}},"type":"binary-expr","locations":[{"start":{"line":102,"column":19},"end":{"line":102,"column":37}},{"start":{"line":102,"column":41},"end":{"line":102,"column":60}}],"line":102},"10":{"loc":{"start":{"line":103,"column":20},"end":{"line":103,"column":63}},"type":"binary-expr","locations":[{"start":{"line":103,"column":20},"end":{"line":103,"column":39}},{"start":{"line":103,"column":43},"end":{"line":103,"column":63}}],"line":103},"11":{"loc":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},{"start":{},"end":{}}],"line":106},"12":{"loc":{"start":{"line":106,"column":12},"end":{"line":106,"column":26}},"type":"binary-expr","locations":[{"start":{"line":106,"column":12},"end":{"line":106,"column":17}},{"start":{"line":106,"column":21},"end":{"line":106,"column":26}}],"line":106},"13":{"loc":{"start":{"line":111,"column":8},"end":{"line":114,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":114,"column":9}},{"start":{},"end":{}}],"line":111},"14":{"loc":{"start":{"line":116,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":122,"column":9}},{"start":{},"end":{}}],"line":116},"15":{"loc":{"start":{"line":116,"column":12},"end":{"line":116,"column":47}},"type":"binary-expr","locations":[{"start":{"line":116,"column":12},"end":{"line":116,"column":26}},{"start":{"line":116,"column":30},"end":{"line":116,"column":47}}],"line":116},"16":{"loc":{"start":{"line":118,"column":10},"end":{"line":121,"column":11}},"type":"if","locations":[{"start":{"line":118,"column":10},"end":{"line":121,"column":11}},{"start":{},"end":{}}],"line":118},"17":{"loc":{"start":{"line":118,"column":14},"end":{"line":118,"column":53}},"type":"binary-expr","locations":[{"start":{"line":118,"column":14},"end":{"line":118,"column":21}},{"start":{"line":118,"column":25},"end":{"line":118,"column":53}}],"line":118},"18":{"loc":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},{"start":{},"end":{}}],"line":124},"19":{"loc":{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},{"start":{},"end":{}}],"line":133},"20":{"loc":{"start":{"line":137,"column":19},"end":{"line":137,"column":60}},"type":"binary-expr","locations":[{"start":{"line":137,"column":19},"end":{"line":137,"column":37}},{"start":{"line":137,"column":41},"end":{"line":137,"column":60}}],"line":137},"21":{"loc":{"start":{"line":138,"column":20},"end":{"line":138,"column":63}},"type":"binary-expr","locations":[{"start":{"line":138,"column":20},"end":{"line":138,"column":39}},{"start":{"line":138,"column":43},"end":{"line":138,"column":63}}],"line":138},"22":{"loc":{"start":{"line":140,"column":4},"end":{"line":143,"column":5}},"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":143,"column":5}},{"start":{},"end":{}}],"line":140},"23":{"loc":{"start":{"line":140,"column":8},"end":{"line":140,"column":45}},"type":"binary-expr","locations":[{"start":{"line":140,"column":8},"end":{"line":140,"column":15}},{"start":{"line":140,"column":19},"end":{"line":140,"column":45}}],"line":140},"24":{"loc":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},{"start":{},"end":{}}],"line":153},"25":{"loc":{"start":{"line":153,"column":8},"end":{"line":153,"column":59}},"type":"binary-expr","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":26}},{"start":{"line":153,"column":30},"end":{"line":153,"column":59}}],"line":153},"26":{"loc":{"start":{"line":159,"column":4},"end":{"line":161,"column":5}},"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":161,"column":5}},{"start":{},"end":{}}],"line":159},"27":{"loc":{"start":{"line":159,"column":8},"end":{"line":159,"column":61}},"type":"binary-expr","locations":[{"start":{"line":159,"column":8},"end":{"line":159,"column":27}},{"start":{"line":159,"column":31},"end":{"line":159,"column":61}}],"line":159},"28":{"loc":{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},{"start":{},"end":{}}],"line":165},"29":{"loc":{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},{"start":{},"end":{}}],"line":182},"30":{"loc":{"start":{"line":238,"column":11},"end":{"line":238,"column":58}},"type":"binary-expr","locations":[{"start":{"line":238,"column":11},"end":{"line":238,"column":53}},{"start":{"line":238,"column":57},"end":{"line":238,"column":58}}],"line":238},"31":{"loc":{"start":{"line":241,"column":11},"end":{"line":241,"column":61}},"type":"binary-expr","locations":[{"start":{"line":241,"column":11},"end":{"line":241,"column":56}},{"start":{"line":241,"column":60},"end":{"line":241,"column":61}}],"line":241},"32":{"loc":{"start":{"line":250,"column":11},"end":{"line":250,"column":58}},"type":"binary-expr","locations":[{"start":{"line":250,"column":11},"end":{"line":250,"column":52}},{"start":{"line":250,"column":56},"end":{"line":250,"column":58}}],"line":250},"33":{"loc":{"start":{"line":253,"column":11},"end":{"line":253,"column":61}},"type":"binary-expr","locations":[{"start":{"line":253,"column":11},"end":{"line":253,"column":55}},{"start":{"line":253,"column":59},"end":{"line":253,"column":61}}],"line":253},"34":{"loc":{"start":{"line":283,"column":4},"end":{"line":285,"column":5}},"type":"if","locations":[{"start":{"line":283,"column":4},"end":{"line":285,"column":5}},{"start":{},"end":{}}],"line":283},"35":{"loc":{"start":{"line":286,"column":4},"end":{"line":292,"column":5}},"type":"if","locations":[{"start":{"line":286,"column":4},"end":{"line":292,"column":5}},{"start":{},"end":{}}],"line":286},"36":{"loc":{"start":{"line":288,"column":6},"end":{"line":290,"column":7}},"type":"if","locations":[{"start":{"line":288,"column":6},"end":{"line":290,"column":7}},{"start":{},"end":{}}],"line":288},"37":{"loc":{"start":{"line":293,"column":4},"end":{"line":295,"column":5}},"type":"if","locations":[{"start":{"line":293,"column":4},"end":{"line":295,"column":5}},{"start":{},"end":{}}],"line":293},"38":{"loc":{"start":{"line":293,"column":8},"end":{"line":293,"column":80}},"type":"binary-expr","locations":[{"start":{"line":293,"column":8},"end":{"line":293,"column":39}},{"start":{"line":293,"column":43},"end":{"line":293,"column":80}}],"line":293},"39":{"loc":{"start":{"line":296,"column":4},"end":{"line":298,"column":5}},"type":"if","locations":[{"start":{"line":296,"column":4},"end":{"line":298,"column":5}},{"start":{},"end":{}}],"line":296},"40":{"loc":{"start":{"line":303,"column":4},"end":{"line":303,"column":27}},"type":"if","locations":[{"start":{"line":303,"column":4},"end":{"line":303,"column":27}},{"start":{},"end":{}}],"line":303},"41":{"loc":{"start":{"line":305,"column":11},"end":{"line":305,"column":34}},"type":"binary-expr","locations":[{"start":{"line":305,"column":11},"end":{"line":305,"column":28}},{"start":{"line":305,"column":32},"end":{"line":305,"column":34}}],"line":305},"42":{"loc":{"start":{"line":333,"column":11},"end":{"line":333,"column":263}},"type":"binary-expr","locations":[{"start":{"line":333,"column":11},"end":{"line":333,"column":51}},{"start":{"line":333,"column":55},"end":{"line":333,"column":111}},{"start":{"line":333,"column":115},"end":{"line":333,"column":159}},{"start":{"line":333,"column":163},"end":{"line":333,"column":212}},{"start":{"line":333,"column":216},"end":{"line":333,"column":263}}],"line":333},"43":{"loc":{"start":{"line":341,"column":4},"end":{"line":343,"column":5}},"type":"if","locations":[{"start":{"line":341,"column":4},"end":{"line":343,"column":5}},{"start":{},"end":{}}],"line":341},"44":{"loc":{"start":{"line":344,"column":4},"end":{"line":346,"column":5}},"type":"if","locations":[{"start":{"line":344,"column":4},"end":{"line":346,"column":5}},{"start":{},"end":{}}],"line":344},"45":{"loc":{"start":{"line":348,"column":4},"end":{"line":350,"column":5}},"type":"if","locations":[{"start":{"line":348,"column":4},"end":{"line":350,"column":5}},{"start":{},"end":{}}],"line":348},"46":{"loc":{"start":{"line":363,"column":4},"end":{"line":365,"column":5}},"type":"if","locations":[{"start":{"line":363,"column":4},"end":{"line":365,"column":5}},{"start":{},"end":{}}],"line":363},"47":{"loc":{"start":{"line":367,"column":4},"end":{"line":369,"column":5}},"type":"if","locations":[{"start":{"line":367,"column":4},"end":{"line":369,"column":5}},{"start":{},"end":{}}],"line":367},"48":{"loc":{"start":{"line":371,"column":11},"end":{"line":371,"column":34}},"type":"binary-expr","locations":[{"start":{"line":371,"column":11},"end":{"line":371,"column":28}},{"start":{"line":371,"column":32},"end":{"line":371,"column":34}}],"line":371},"49":{"loc":{"start":{"line":373,"column":21},"end":{"line":373,"column":36}},"type":"default-arg","locations":[{"start":{"line":373,"column":32},"end":{"line":373,"column":36}}],"line":373},"50":{"loc":{"start":{"line":377,"column":4},"end":{"line":379,"column":5}},"type":"if","locations":[{"start":{"line":377,"column":4},"end":{"line":379,"column":5}},{"start":{},"end":{}}],"line":377},"51":{"loc":{"start":{"line":377,"column":8},"end":{"line":377,"column":25}},"type":"binary-expr","locations":[{"start":{"line":377,"column":8},"end":{"line":377,"column":13}},{"start":{"line":377,"column":17},"end":{"line":377,"column":25}}],"line":377},"52":{"loc":{"start":{"line":382,"column":4},"end":{"line":384,"column":5}},"type":"if","locations":[{"start":{"line":382,"column":4},"end":{"line":384,"column":5}},{"start":{},"end":{}}],"line":382},"53":{"loc":{"start":{"line":382,"column":8},"end":{"line":382,"column":37}},"type":"binary-expr","locations":[{"start":{"line":382,"column":8},"end":{"line":382,"column":19}},{"start":{"line":382,"column":23},"end":{"line":382,"column":37}}],"line":382},"54":{"loc":{"start":{"line":389,"column":6},"end":{"line":391,"column":7}},"type":"if","locations":[{"start":{"line":389,"column":6},"end":{"line":391,"column":7}},{"start":{},"end":{}}],"line":389},"55":{"loc":{"start":{"line":392,"column":6},"end":{"line":394,"column":7}},"type":"if","locations":[{"start":{"line":392,"column":6},"end":{"line":394,"column":7}},{"start":{},"end":{}}],"line":392},"56":{"loc":{"start":{"line":400,"column":19},"end":{"line":400,"column":49}},"type":"binary-expr","locations":[{"start":{"line":400,"column":19},"end":{"line":400,"column":44}},{"start":{"line":400,"column":48},"end":{"line":400,"column":49}}],"line":400},"57":{"loc":{"start":{"line":407,"column":4},"end":{"line":407,"column":69}},"type":"binary-expr","locations":[{"start":{"line":407,"column":4},"end":{"line":407,"column":12}},{"start":{"line":407,"column":16},"end":{"line":407,"column":69}}],"line":407},"58":{"loc":{"start":{"line":418,"column":4},"end":{"line":420,"column":5}},"type":"if","locations":[{"start":{"line":418,"column":4},"end":{"line":420,"column":5}},{"start":{},"end":{}}],"line":418},"59":{"loc":{"start":{"line":418,"column":8},"end":{"line":418,"column":109}},"type":"binary-expr","locations":[{"start":{"line":418,"column":9},"end":{"line":418,"column":36}},{"start":{"line":418,"column":40},"end":{"line":418,"column":72}},{"start":{"line":418,"column":77},"end":{"line":418,"column":109}}],"line":418},"60":{"loc":{"start":{"line":460,"column":6},"end":{"line":462,"column":7}},"type":"if","locations":[{"start":{"line":460,"column":6},"end":{"line":462,"column":7}},{"start":{},"end":{}}],"line":460},"61":{"loc":{"start":{"line":465,"column":8},"end":{"line":469,"column":9}},"type":"if","locations":[{"start":{"line":465,"column":8},"end":{"line":469,"column":9}},{"start":{"line":467,"column":15},"end":{"line":469,"column":9}}],"line":465},"62":{"loc":{"start":{"line":475,"column":19},"end":{"line":475,"column":43}},"type":"binary-expr","locations":[{"start":{"line":475,"column":19},"end":{"line":475,"column":38}},{"start":{"line":475,"column":42},"end":{"line":475,"column":43}}],"line":475}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0},"b":{"0":[0,0],"1":[0,0,0,0],"2":[0],"3":[0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0,0,0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0,0],"60":[0,0],"61":[0,0],"62":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/base-reference-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, IRange, Nullable } from '@univerjs/core';\nimport type { IRuntimeUnitDataType, IUnitData, IUnitSheetNameMap, IUnitStylesData } from '../../basics/common';\n\nimport type { BaseValueObject, IArrayValueObject } from '../value-object/base-value-object';\nimport { CellValueType, moveRangeByOffset } from '@univerjs/core';\nimport { isTextFormat } from '@univerjs/engine-numfmt';\nimport { FormulaAstLRU } from '../../basics/cache-lru';\nimport { ERROR_TYPE_SET, ErrorType } from '../../basics/error-type';\nimport { isNullCellForFormula } from '../../basics/is-null-cell';\nimport { ObjectClassType } from '../../basics/object-class-type';\nimport { getCellValue } from '../utils/cell';\nimport { getRuntimeFeatureCell } from '../utils/get-runtime-feature-cell';\nimport { ArrayValueObject, ValueObjectFactory } from '../value-object/array-value-object';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport {\n    createBooleanValueObjectByRawValue,\n    createNumberValueObjectByRawValue,\n    NullValueObject,\n    NumberValueObject,\n    StringValueObject,\n} from '../value-object/primitive-object';\n\nexport type NodeValueType = BaseValueObject | BaseReferenceObject | AsyncObject | AsyncArrayObject;\n\nexport type FunctionVariantType = BaseValueObject | BaseReferenceObject;\n\nconst FORMULA_CACHE_LRU_COUNT = 10000;\n\nexport const FORMULA_REF_TO_ARRAY_CACHE = new FormulaAstLRU<ArrayValueObject>(FORMULA_CACHE_LRU_COUNT);\nexport class BaseReferenceObject extends ObjectClassType {\n    private _forcedSheetId: Nullable<string> = '';\n\n    private _forcedSheetName: string = '';\n\n    private _defaultSheetId: string = '';\n\n    private _rangeData: IRange = {\n        startColumn: -1,\n        startRow: -1,\n        endRow: -1,\n        endColumn: -1,\n    };\n\n    private _unitData: IUnitData = {};\n\n    private _unitStylesData: IUnitStylesData = {};\n\n    private _defaultUnitId: string = '';\n\n    private _forcedUnitId: string = '';\n\n    private _runtimeData: IRuntimeUnitDataType = {};\n\n    private _arrayFormulaCellData: IRuntimeUnitDataType = {};\n\n    private _runtimeArrayFormulaCellData: IRuntimeUnitDataType = {};\n\n    private _runtimeFeatureCellData: { [featureId: string]: IRuntimeUnitDataType } = {};\n\n    private _refOffsetX = 0;\n\n    private _refOffsetY = 0;\n\n    constructor(private _token: string) {\n        super();\n    }\n\n    override dispose(): void {\n        this._unitData = {};\n\n        this._unitStylesData = {};\n\n        this._runtimeData = {};\n    }\n\n    getToken() {\n        return this._token;\n    }\n\n    setToken(token: string) {\n        this._token = token;\n    }\n\n    isExceedRange() {\n        const { startRow, endRow, startColumn, endColumn } = this.getRangePosition();\n\n        if (startRow < 0 || startColumn < 0 || endRow >= this.getActiveSheetRowCount() || endColumn >= this.getActiveSheetColumnCount()) {\n            return true;\n        }\n        return false;\n    }\n\n    setRefOffset(x: number = 0, y: number = 0) {\n        this._refOffsetX = x;\n        this._refOffsetY = y;\n    }\n\n    getRefOffset() {\n        return {\n            x: this._refOffsetX,\n            y: this._refOffsetY,\n        };\n    }\n\n    getRangePosition() {\n        let { startRow, startColumn, endRow, endColumn } = moveRangeByOffset(this._rangeData, this._refOffsetX, this._refOffsetY);\n\n        if (Number.isNaN(startRow)) {\n            startRow = 0;\n        }\n\n        if (Number.isNaN(startColumn)) {\n            startColumn = 0;\n        }\n\n        if (Number.isNaN(endRow)) {\n            endRow = this.getActiveSheetRowCount() - 1;\n        }\n\n        if (Number.isNaN(endColumn)) {\n            endColumn = this.getActiveSheetColumnCount() - 1;\n        }\n\n        return {\n            ...this._rangeData,\n            startRow,\n            endRow,\n            startColumn,\n            endColumn,\n        };\n    }\n\n    override isReferenceObject() {\n        return true;\n    }\n\n    iterator(\n        callback: (valueObject: Nullable<BaseValueObject>, rowIndex: number, columnIndex: number) => Nullable<boolean>\n    ) {\n        const { startRow, endRow, startColumn, endColumn } = this.getRangePosition();\n\n        if (this._checkIfWorksheetMiss()) {\n            return callback(ErrorValueObject.create(ErrorType.VALUE), startRow, startColumn);\n        }\n\n        const unitId = this._forcedUnitId || this._defaultUnitId;\n        const sheetId = this._forcedSheetId || this._defaultSheetId;\n\n        for (let r = startRow; r <= endRow; r++) {\n            for (let c = startColumn; c <= endColumn; c++) {\n                if (r < 0 || c < 0) {\n                    return callback(ErrorValueObject.create(ErrorType.REF), r, c);\n                }\n\n                const cell = this.getCellData(r, c)!;\n                let result: Nullable<boolean> = false;\n                if (isNullCellForFormula(cell)) {\n                    result = callback(null, r, c);\n                    continue;\n                }\n\n                let resultObjectValue = this.getCellValueObject(cell);\n\n                // Set numfmt pattern for first cell\n                // TODO@Dushusir it does not have to be a number, the string can also be set a number format\n                if (r === startRow && c === startColumn) {\n                    const pattern = this.getCellPattern(unitId, sheetId, r, c);\n                    if (pattern && resultObjectValue.isNumber()) {\n                        const value = Number(resultObjectValue.getValue());\n                        resultObjectValue = NumberValueObject.create(value, pattern);\n                    }\n                }\n\n                result = callback(resultObjectValue, r, c);\n\n                if (result === false) {\n                    return;\n                }\n            }\n        }\n    }\n\n    getFirstCell() {\n        const { startRow, startColumn } = this.getRangePosition();\n        const cell = this.getCellData(startRow, startColumn);\n\n        if (!cell) {\n            return NumberValueObject.create(0);\n        }\n\n        let cellValueObject = this.getCellValueObject(cell);\n\n        // Set numfmt pattern,\n        // TODO@Dushusir it does not have to be a number, the string can also be set a number format\n        const unitId = this._forcedUnitId || this._defaultUnitId;\n        const sheetId = this._forcedSheetId || this._defaultSheetId;\n        const pattern = this.getCellPattern(unitId, sheetId, startRow, startColumn);\n        if (pattern && cellValueObject.isNumber()) {\n            const value = Number(cellValueObject.getValue());\n            cellValueObject = NumberValueObject.create(value, pattern);\n        }\n\n        return cellValueObject;\n    }\n\n    getRangeData() {\n        return this._rangeData;\n    }\n\n    setRangeData(range: IRange) {\n        this._rangeData = range;\n    }\n\n    getUnitId() {\n        if (this._forcedUnitId && this._forcedUnitId.length > 0) {\n            return this._forcedUnitId;\n        }\n        return this._defaultUnitId;\n    }\n\n    getSheetId() {\n        if (this._forcedSheetId && this._forcedSheetId.length > 0) {\n            return this._forcedSheetId;\n        }\n        return this._defaultSheetId;\n    }\n\n    setForcedUnitIdDirect(unitId: string) {\n        if (unitId.length > 0) {\n            this._forcedUnitId = unitId;\n        }\n    }\n\n    getForcedUnitId() {\n        return this._forcedUnitId;\n    }\n\n    setForcedSheetId(sheetNameMap: IUnitSheetNameMap) {\n        this._forcedSheetId = sheetNameMap[this.getUnitId()]?.[this._forcedSheetName];\n    }\n\n    setForcedSheetIdDirect(sheetId: string) {\n        this._forcedSheetId = sheetId;\n    }\n\n    getForcedSheetId() {\n        return this._forcedSheetId;\n    }\n\n    setForcedSheetName(sheetName: string) {\n        if (sheetName.length > 0) {\n            this._forcedSheetName = sheetName;\n        }\n    }\n\n    getForcedSheetName() {\n        return this._forcedSheetName;\n    }\n\n    setDefaultSheetId(sheetId: string) {\n        this._defaultSheetId = sheetId;\n    }\n\n    getDefaultSheetId() {\n        return this._defaultSheetId;\n    }\n\n    setDefaultUnitId(unitId: string) {\n        this._defaultUnitId = unitId;\n    }\n\n    getDefaultUnitId() {\n        return this._defaultUnitId;\n    }\n\n    getUnitData() {\n        return this._unitData;\n    }\n\n    setUnitData(unitData: IUnitData) {\n        this._unitData = unitData;\n    }\n\n    getUnitStylesData() {\n        return this._unitStylesData;\n    }\n\n    setUnitStylesData(unitStylesData: IUnitStylesData) {\n        this._unitStylesData = unitStylesData;\n    }\n\n    getRuntimeData() {\n        return this._runtimeData;\n    }\n\n    setRuntimeData(runtimeData: IRuntimeUnitDataType) {\n        this._runtimeData = runtimeData;\n    }\n\n    getArrayFormulaCellData() {\n        return this._arrayFormulaCellData;\n    }\n\n    setArrayFormulaCellData(unitData: IRuntimeUnitDataType) {\n        this._arrayFormulaCellData = unitData;\n    }\n\n    getRuntimeArrayFormulaCellData() {\n        return this._runtimeArrayFormulaCellData;\n    }\n\n    setRuntimeArrayFormulaCellData(unitData: IRuntimeUnitDataType) {\n        this._runtimeArrayFormulaCellData = unitData;\n    }\n\n    getRuntimeFeatureCellData() {\n        return this._runtimeFeatureCellData;\n    }\n\n    setRuntimeFeatureCellData(unitData: { [featureId: string]: IRuntimeUnitDataType }) {\n        this._runtimeFeatureCellData = unitData;\n    }\n\n    getActiveSheetRowCount() {\n        return this.getCurrentActiveSheetData()?.rowCount || 0;\n    }\n\n    getActiveSheetColumnCount() {\n        return this.getCurrentActiveSheetData()?.columnCount || 0;\n    }\n\n    getRowCount() {\n        return this._rangeData.endRow - this._rangeData.startRow + 1;\n    }\n\n    getColumnCount() {\n        return this._rangeData.endColumn - this._rangeData.startColumn + 1;\n    }\n\n    getRowData() {\n        return this.getCurrentActiveSheetData()?.rowData || {};\n    }\n\n    getColumnData() {\n        return this.getCurrentActiveSheetData()?.columnData || {};\n    }\n\n    isCell() {\n        return false;\n    }\n\n    isColumn() {\n        return false;\n    }\n\n    isRow() {\n        return false;\n    }\n\n    isRange() {\n        return false;\n    }\n\n    isTable() {\n        return false;\n    }\n\n    unionBy(referenceObject: BaseReferenceObject): NodeValueType {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.REF);\n    }\n\n    unionRange(rangeData1: IRange, rangeData2: IRange): IRange {\n        /** abstract */\n        return {\n            startRow: -1,\n            startColumn: -1,\n            endRow: -1,\n            endColumn: -1,\n        };\n    }\n\n    getCellValueObject(cell: ICellData) {\n        const value = getCellValue(cell);\n        if (ERROR_TYPE_SET.has(value as ErrorType)) {\n            return ErrorValueObject.create(value as ErrorType);\n        }\n\n        if (cell.t === CellValueType.NUMBER) {\n            const pattern = this._getPatternByCell(cell);\n\n            if (isTextFormat(pattern)) {\n                return StringValueObject.create(value.toString());\n            }\n\n            return createNumberValueObjectByRawValue(value, pattern);\n        }\n        if (cell.t === CellValueType.STRING || cell.t === CellValueType.FORCE_STRING) {\n            // A1 is `\"test\"`, =A1 also needs to get `\"test\"`\n            return StringValueObject.create(value.toString());\n        }\n        if (cell.t === CellValueType.BOOLEAN) {\n            return createBooleanValueObjectByRawValue(value);\n        }\n\n        return ValueObjectFactory.create(value);\n    }\n\n    private _getPatternByCell(cell: ICellData) {\n        const styles = this._unitStylesData[this.getUnitId()];\n\n        if (!styles) return '';\n\n        const style = styles.getStyleByCell(cell);\n        return style?.n?.pattern || '';\n    }\n\n    getCellByRow(row: number) {\n        return this.getCellByPosition(row);\n    }\n\n    getCellByColumn(column: number) {\n        return this.getCellByPosition(undefined, column);\n    }\n\n    getCurrentActiveSheetData() {\n        return this._unitData[this.getUnitId()]?.[this.getSheetId()];\n    }\n\n    getCurrentStylesData() {\n        return this._unitStylesData[this.getUnitId()];\n    }\n\n    getCurrentRuntimeSheetData() {\n        return this._runtimeData?.[this.getUnitId()]?.[this.getSheetId()];\n    }\n\n    getCurrentActiveArrayFormulaCellData() {\n        return this._arrayFormulaCellData?.[this.getUnitId()]?.[this.getSheetId()];\n    }\n\n    getCurrentRuntimeActiveArrayFormulaCellData() {\n        return this._runtimeArrayFormulaCellData?.[this.getUnitId()]?.[this.getSheetId()];\n    }\n\n    getCellData(row: number, column: number) {\n        const activeSheetData = this.getCurrentActiveSheetData();\n\n        const activeRuntimeData = this.getCurrentRuntimeSheetData();\n\n        const activeArrayFormulaCellData = this.getCurrentActiveArrayFormulaCellData();\n\n        const activeRuntimeArrayFormulaCellData = this.getCurrentRuntimeActiveArrayFormulaCellData();\n\n        return (\n            activeRuntimeData?.getValue(row, column) ||\n            activeRuntimeArrayFormulaCellData?.getValue(row, column) ||\n            this.getRuntimeFeatureCellValue(row, column) ||\n            activeArrayFormulaCellData?.getValue(row, column) ||\n            activeSheetData?.cellData.getValue(row, column)\n        );\n    }\n\n    getRuntimeFeatureCellValue(row: number, column: number) {\n        return getRuntimeFeatureCell(row, column, this.getSheetId(), this.getUnitId(), this._runtimeFeatureCellData);\n    }\n\n    getCellByPosition(rowRaw?: number, columnRaw?: number) {\n        let row = rowRaw;\n        let column = columnRaw;\n        if (!row) {\n            row = this._rangeData.startRow;\n        }\n\n        if (!column) {\n            column = this._rangeData.startColumn;\n        }\n\n        const cell = this.getCellData(row, column);\n\n        if (!cell) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        return this.getCellValueObject(cell);\n    }\n\n    /**\n     * Get the pattern of the cell\n     * @param unitId\n     * @param sheetId\n     * @param row\n     * @param column\n     * @returns\n     */\n    getCellPattern(unitId: string, sheetId: string, row: number, column: number) {\n        const currentStyles = this._unitStylesData[unitId];\n\n        if (!currentStyles) {\n            return '';\n        }\n\n        const currentCell = this._unitData[unitId]?.[sheetId]?.cellData?.getValue(row, column);\n\n        if (!currentCell) {\n            return '';\n        }\n\n        const style = currentStyles.getStyleByCell(currentCell);\n\n        return style?.n?.pattern || '';\n    }\n\n    toArrayValueObject(useCache: boolean = true): ArrayValueObject {\n        const { startRow, endRow, startColumn, endColumn } = this.getRangePosition();\n\n        const key = `${this.getUnitId()}_${this.getSheetId()}_${startRow}_${endRow}_${startColumn}_${endColumn}`;\n\n        const array = FORMULA_REF_TO_ARRAY_CACHE.get(key);\n\n        if (array && useCache) {\n            return array;\n        }\n\n        const rowSize = endRow - startRow + 1;\n        const columnSize = endColumn - startColumn + 1;\n\n        if (rowSize < 0 || columnSize < 0) {\n            return this._getBlankArrayValueObject();\n        }\n\n        const arrayValueList: BaseValueObject[][] = new Array(rowSize);\n        this.iterator((valueObject: Nullable<BaseValueObject>, rowIndex: number, columnIndex: number) => {\n            const row = rowIndex - startRow;\n            const column = columnIndex - startColumn;\n            if (!arrayValueList[row]) {\n                arrayValueList[row] = new Array(columnSize);\n            }\n\n            if (valueObject == null) {\n                valueObject = NullValueObject.create();\n            }\n\n            arrayValueList[row][column] = valueObject;\n        });\n\n        const arrayValueObjectData: IArrayValueObject = {\n            calculateValueList: arrayValueList,\n            rowCount: arrayValueList.length,\n            columnCount: arrayValueList[0]?.length || 0,\n            unitId: this.getUnitId(),\n            sheetId: this.getSheetId(),\n            row: startRow,\n            column: startColumn,\n        };\n\n        const arrayValueObject = ArrayValueObject.create(arrayValueObjectData);\n\n        useCache && FORMULA_REF_TO_ARRAY_CACHE.set(key, arrayValueObject);\n\n        return arrayValueObject;\n    }\n\n    toUnitRange() {\n        return {\n            range: this.getRangePosition(),\n            sheetId: this.getSheetId(),\n            unitId: this.getUnitId(),\n        };\n    }\n\n    private _checkIfWorksheetMiss() {\n        if ((this._forcedSheetId == null || this._forcedSheetId.length === 0) && this._forcedSheetName.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    private _getBlankArrayValueObject() {\n        const arrayValueObjectData: IArrayValueObject = {\n            calculateValueList: [],\n            rowCount: 0,\n            columnCount: 0,\n            unitId: this.getUnitId(),\n            sheetId: this.getSheetId(),\n            row: 0,\n            column: 0,\n        };\n\n        return ArrayValueObject.create(arrayValueObjectData);\n    }\n}\n\nexport class AsyncObject extends ObjectClassType {\n    constructor(private _promise: Promise<BaseValueObject>) {\n        super();\n    }\n\n    override isAsyncObject() {\n        return true;\n    }\n\n    async getValue() {\n        return this._promise;\n    }\n}\n\nexport class AsyncArrayObject extends ObjectClassType {\n    constructor(private _promiseList: Array<Array<BaseValueObject | AsyncObject>>) {\n        super();\n    }\n\n    override isAsyncArrayObject() {\n        return true;\n    }\n\n    async getValue() {\n        const variants: BaseValueObject[][] = [];\n\n        for (let r = 0; r < this._promiseList.length; r++) {\n            const promiseCells = this._promiseList[r];\n            if (variants[r] == null) {\n                variants[r] = [];\n            }\n            for (let c = 0; c < promiseCells.length; c++) {\n                const promiseCell = promiseCells[c];\n                if ((promiseCell as AsyncObject).isAsyncObject()) {\n                    variants[r][c] = await (promiseCell as AsyncObject).getValue();\n                } else {\n                    variants[r][c] = promiseCell as BaseValueObject;\n                }\n            }\n        }\n\n        const arrayValueObjectData: IArrayValueObject = {\n            calculateValueList: variants,\n            rowCount: variants.length,\n            columnCount: variants[0]?.length || 0,\n            unitId: '',\n            sheetId: '',\n            row: 0,\n            column: 0,\n        };\n\n        return ArrayValueObject.create(arrayValueObjectData);\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"816066218076d6e3081f9054f35f0fe2e8c79643"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/range-reference-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/range-reference-object.ts","statementMap":{"0":{"start":{"line":4,"column":4},"end":{"line":4,"column":14}},"1":{"start":{"line":5,"column":4},"end":{"line":5,"column":29}},"2":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"3":{"start":{"line":7,"column":6},"end":{"line":7,"column":49}},"4":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"5":{"start":{"line":10,"column":6},"end":{"line":10,"column":47}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":16}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":2},"end":{"line":3,"column":3}},"loc":{"start":{"line":3,"column":50},"end":{"line":12,"column":3}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":2},"end":{"line":13,"column":3}},"loc":{"start":{"line":13,"column":12},"end":{"line":15,"column":3}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},{"start":{},"end":{}}],"line":6},"1":{"loc":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},{"start":{},"end":{}}],"line":9}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"f":{"0":0,"1":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/range-reference-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, Nullable } from '@univerjs/core';\n\nimport { BaseReferenceObject } from './base-reference-object';\n\nexport class RangeReferenceObject extends BaseReferenceObject {\n    constructor(range: IRange, forcedSheetId?: Nullable<string>, forcedUnitId?: string) {\n        super('');\n        this.setRangeData(range);\n        if (forcedSheetId) {\n            this.setForcedSheetIdDirect(forcedSheetId);\n        }\n\n        if (forcedUnitId) {\n            this.setForcedUnitIdDirect(forcedUnitId);\n        }\n    }\n\n    override isRange() {\n        return true;\n    }\n}\n"],"mappings":"AAkBA,SAAS,2BAA2B;AAE7B,aAAM,6BAA6B,oBAAoB;AAAA,EAC1D,YAAY,OAAe,eAAkC,cAAuB;AAChF,UAAM,EAAE;AACR,SAAK,aAAa,KAAK;AACvB,QAAI,eAAe;AACf,WAAK,uBAAuB,aAAa;AAAA,IAC7C;AAEA,QAAI,cAAc;AACd,WAAK,sBAAsB,YAAY;AAAA,IAC3C;AAAA,EACJ;AAAA,EAES,UAAU;AACf,WAAO;AAAA,EACX;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"73161b36ad001f2fd18531d7ebe29a721d091c92"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/cell-reference-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/cell-reference-object.ts","statementMap":{"0":{"start":{"line":8,"column":4},"end":{"line":8,"column":17}},"1":{"start":{"line":9,"column":17},"end":{"line":9,"column":58}},"2":{"start":{"line":10,"column":4},"end":{"line":10,"column":44}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":34}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":16}},"6":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"7":{"start":{"line":19,"column":6},"end":{"line":19,"column":52}},"8":{"start":{"line":21,"column":32},"end":{"line":21,"column":47}},"9":{"start":{"line":22,"column":25},"end":{"line":22,"column":97}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":43}},"11":{"start":{"line":26,"column":22},"end":{"line":26,"column":41}},"12":{"start":{"line":27,"column":25},"end":{"line":27,"column":47}},"13":{"start":{"line":28,"column":22},"end":{"line":28,"column":41}},"14":{"start":{"line":29,"column":25},"end":{"line":29,"column":47}},"15":{"start":{"line":30,"column":18},"end":{"line":35,"column":5}},"16":{"start":{"line":36,"column":4},"end":{"line":42,"column":5}},"17":{"start":{"line":37,"column":6},"end":{"line":37,"column":33}},"18":{"start":{"line":38,"column":6},"end":{"line":38,"column":31}},"19":{"start":{"line":40,"column":6},"end":{"line":40,"column":33}},"20":{"start":{"line":41,"column":6},"end":{"line":41,"column":31}},"21":{"start":{"line":43,"column":4},"end":{"line":49,"column":5}},"22":{"start":{"line":44,"column":6},"end":{"line":44,"column":39}},"23":{"start":{"line":45,"column":6},"end":{"line":45,"column":37}},"24":{"start":{"line":47,"column":6},"end":{"line":47,"column":39}},"25":{"start":{"line":48,"column":6},"end":{"line":48,"column":37}},"26":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"27":{"start":{"line":51,"column":6},"end":{"line":51,"column":67}},"28":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"29":{"start":{"line":54,"column":6},"end":{"line":54,"column":65}},"30":{"start":{"line":56,"column":4},"end":{"line":56,"column":17}},"31":{"start":{"line":59,"column":33},"end":{"line":63,"column":5}},"32":{"start":{"line":64,"column":4},"end":{"line":64,"column":57}},"33":{"start":{"line":65,"column":4},"end":{"line":65,"column":69}},"34":{"start":{"line":66,"column":4},"end":{"line":66,"column":67}},"35":{"start":{"line":67,"column":4},"end":{"line":67,"column":63}},"36":{"start":{"line":68,"column":4},"end":{"line":68,"column":69}},"37":{"start":{"line":69,"column":4},"end":{"line":69,"column":81}},"38":{"start":{"line":70,"column":4},"end":{"line":70,"column":95}},"39":{"start":{"line":71,"column":4},"end":{"line":71,"column":85}},"40":{"start":{"line":72,"column":21},"end":{"line":72,"column":40}},"41":{"start":{"line":73,"column":4},"end":{"line":73,"column":44}},"42":{"start":{"line":74,"column":25},"end":{"line":74,"column":48}},"43":{"start":{"line":75,"column":4},"end":{"line":75,"column":71}},"44":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"45":{"start":{"line":77,"column":6},"end":{"line":77,"column":64}},"46":{"start":{"line":79,"column":25},"end":{"line":79,"column":47}},"47":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"48":{"start":{"line":81,"column":6},"end":{"line":81,"column":63}},"49":{"start":{"line":83,"column":4},"end":{"line":83,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":2},"end":{"line":7,"column":3}},"loc":{"start":{"line":7,"column":21},"end":{"line":13,"column":3}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":2},"end":{"line":14,"column":3}},"loc":{"start":{"line":14,"column":11},"end":{"line":16,"column":3}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":2},"end":{"line":17,"column":3}},"loc":{"start":{"line":17,"column":27},"end":{"line":24,"column":3}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":2},"end":{"line":25,"column":3}},"loc":{"start":{"line":25,"column":37},"end":{"line":57,"column":3}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":58,"column":2},"end":{"line":58,"column":3}},"loc":{"start":{"line":58,"column":29},"end":{"line":84,"column":3}},"line":58}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},{"start":{},"end":{}}],"line":18},"1":{"loc":{"start":{"line":36,"column":4},"end":{"line":42,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":42,"column":5}},{"start":{"line":39,"column":11},"end":{"line":42,"column":5}}],"line":36},"2":{"loc":{"start":{"line":43,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":49,"column":5}},{"start":{"line":46,"column":11},"end":{"line":49,"column":5}}],"line":43},"3":{"loc":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},{"start":{},"end":{}}],"line":50},"4":{"loc":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},{"start":{},"end":{}}],"line":53},"5":{"loc":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},{"start":{},"end":{}}],"line":76},"6":{"loc":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},{"start":{},"end":{}}],"line":80}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/cell-reference-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange } from '@univerjs/core';\n\nimport { ErrorType } from '../../basics/error-type';\n\nimport { deserializeRangeWithSheetWithCache } from '../utils/reference-cache';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { BaseReferenceObject } from './base-reference-object';\nimport { RangeReferenceObject } from './range-reference-object';\n\nexport class CellReferenceObject extends BaseReferenceObject {\n    constructor(token: string) {\n        super(token);\n        const grid = deserializeRangeWithSheetWithCache(token);\n        this.setForcedUnitIdDirect(grid.unitId);\n        this.setForcedSheetName(grid.sheetName);\n        this.setRangeData(grid.range);\n    }\n\n    override isCell() {\n        return true;\n    }\n\n    override unionBy(referenceObject: BaseReferenceObject) {\n        if (!referenceObject.isCell()) {\n            return ErrorValueObject.create(ErrorType.REF);\n        }\n\n        const cellReferenceObject = referenceObject as CellReferenceObject;\n        // if (cellReferenceObject.getForcedSheetName() !== undefined) {\n        //     return ErrorValueObject.create(ErrorType.REF);\n        // }\n\n        const newRangeData = this.unionRange(this.getRangeData(), cellReferenceObject.getRangeData());\n\n        return this._createRange(newRangeData);\n    }\n\n    override unionRange(rangeData1: IRange, rangeData2: IRange) {\n        const startRow1 = rangeData1.startRow;\n        const startColumn1 = rangeData1.startColumn;\n\n        const startRow2 = rangeData2.startRow;\n        const startColumn2 = rangeData2.startColumn;\n        const range: IRange = {\n            startRow: -1,\n            startColumn: -1,\n            endRow: -1,\n            endColumn: -1,\n        };\n        if (startRow1 > startRow2) {\n            range.startRow = startRow2;\n            range.endRow = startRow1;\n        } else {\n            range.startRow = startRow1;\n            range.endRow = startRow2;\n        }\n\n        if (startColumn1 > startColumn2) {\n            range.startColumn = startColumn2;\n            range.endColumn = startColumn1;\n        } else {\n            range.startColumn = startColumn1;\n            range.endColumn = startColumn2;\n        }\n\n        if (rangeData1.startAbsoluteRefType) {\n            range.startAbsoluteRefType = rangeData1.startAbsoluteRefType;\n        }\n\n        if (rangeData2.startAbsoluteRefType) {\n            range.endAbsoluteRefType = rangeData2.startAbsoluteRefType;\n        }\n\n        return range;\n    }\n\n    private _createRange(newRangeData: IRange) {\n        const rangeReferenceObject = new RangeReferenceObject(\n            newRangeData,\n            this.getForcedSheetId(),\n            this.getForcedUnitId()\n        );\n\n        rangeReferenceObject.setUnitData(this.getUnitData());\n\n        rangeReferenceObject.setDefaultSheetId(this.getDefaultSheetId());\n\n        rangeReferenceObject.setDefaultUnitId(this.getDefaultUnitId());\n\n        rangeReferenceObject.setRuntimeData(this.getRuntimeData());\n\n        rangeReferenceObject.setUnitStylesData(this.getUnitStylesData());\n\n        rangeReferenceObject.setArrayFormulaCellData(this.getArrayFormulaCellData());\n\n        rangeReferenceObject.setRuntimeArrayFormulaCellData(this.getRuntimeArrayFormulaCellData());\n\n        rangeReferenceObject.setRuntimeFeatureCellData(this.getRuntimeFeatureCellData());\n\n        const { x, y } = this.getRefOffset();\n\n        rangeReferenceObject.setRefOffset(x, y);\n\n        const forceSheetId = this.getForcedSheetId();\n\n        rangeReferenceObject.setForcedSheetName(this.getForcedSheetName());\n\n        if (forceSheetId != null) {\n            rangeReferenceObject.setForcedSheetIdDirect(forceSheetId);\n        }\n\n        // const forcedSheetID = this.getForcedSheetId();\n        // if (forcedSheetID) {\n        //     rangeReferenceObject.setForcedSheetIdDirect(forcedSheetID);\n        // }\n\n        const forcedUnitId = this.getForcedUnitId();\n        if (forcedUnitId) {\n            rangeReferenceObject.setForcedUnitIdDirect(forcedUnitId);\n        }\n\n        return rangeReferenceObject;\n    }\n}\n"],"mappings":"AAkBA,SAAS,iBAAiB;AAE1B,SAAS,0CAA0C;AACnD,SAAS,wBAAwB;AACjC,SAAS,2BAA2B;AACpC,SAAS,4BAA4B;AAE9B,aAAM,4BAA4B,oBAAoB;AAAA,EACzD,YAAY,OAAe;AACvB,UAAM,KAAK;AACX,UAAM,OAAO,mCAAmC,KAAK;AACrD,SAAK,sBAAsB,KAAK,MAAM;AACtC,SAAK,mBAAmB,KAAK,SAAS;AACtC,SAAK,aAAa,KAAK,KAAK;AAAA,EAChC;AAAA,EAES,SAAS;AACd,WAAO;AAAA,EACX;AAAA,EAES,QAAQ,iBAAsC;AACnD,QAAI,CAAC,gBAAgB,OAAO,GAAG;AAC3B,aAAO,iBAAiB,OAAO,UAAU,GAAG;AAAA,IAChD;AAEA,UAAM,sBAAsB;AAK5B,UAAM,eAAe,KAAK,WAAW,KAAK,aAAa,GAAG,oBAAoB,aAAa,CAAC;AAE5F,WAAO,KAAK,aAAa,YAAY;AAAA,EACzC;AAAA,EAES,WAAW,YAAoB,YAAoB;AACxD,UAAM,YAAY,WAAW;AAC7B,UAAM,eAAe,WAAW;AAEhC,UAAM,YAAY,WAAW;AAC7B,UAAM,eAAe,WAAW;AAChC,UAAM,QAAgB;AAAA,MAClB,UAAU;AAAA,MACV,aAAa;AAAA,MACb,QAAQ;AAAA,MACR,WAAW;AAAA,IACf;AACA,QAAI,YAAY,WAAW;AACvB,YAAM,WAAW;AACjB,YAAM,SAAS;AAAA,IACnB,OAAO;AACH,YAAM,WAAW;AACjB,YAAM,SAAS;AAAA,IACnB;AAEA,QAAI,eAAe,cAAc;AAC7B,YAAM,cAAc;AACpB,YAAM,YAAY;AAAA,IACtB,OAAO;AACH,YAAM,cAAc;AACpB,YAAM,YAAY;AAAA,IACtB;AAEA,QAAI,WAAW,sBAAsB;AACjC,YAAM,uBAAuB,WAAW;AAAA,IAC5C;AAEA,QAAI,WAAW,sBAAsB;AACjC,YAAM,qBAAqB,WAAW;AAAA,IAC1C;AAEA,WAAO;AAAA,EACX;AAAA,EAEQ,aAAa,cAAsB;AACvC,UAAM,uBAAuB,IAAI;AAAA,MAC7B;AAAA,MACA,KAAK,iBAAiB;AAAA,MACtB,KAAK,gBAAgB;AAAA,IACzB;AAEA,yBAAqB,YAAY,KAAK,YAAY,CAAC;AAEnD,yBAAqB,kBAAkB,KAAK,kBAAkB,CAAC;AAE/D,yBAAqB,iBAAiB,KAAK,iBAAiB,CAAC;AAE7D,yBAAqB,eAAe,KAAK,eAAe,CAAC;AAEzD,yBAAqB,kBAAkB,KAAK,kBAAkB,CAAC;AAE/D,yBAAqB,wBAAwB,KAAK,wBAAwB,CAAC;AAE3E,yBAAqB,+BAA+B,KAAK,+BAA+B,CAAC;AAEzF,yBAAqB,0BAA0B,KAAK,0BAA0B,CAAC;AAE/E,UAAM,EAAE,GAAG,EAAE,IAAI,KAAK,aAAa;AAEnC,yBAAqB,aAAa,GAAG,CAAC;AAEtC,UAAM,eAAe,KAAK,iBAAiB;AAE3C,yBAAqB,mBAAmB,KAAK,mBAAmB,CAAC;AAEjE,QAAI,gBAAgB,MAAM;AACtB,2BAAqB,uBAAuB,YAAY;AAAA,IAC5D;AAOA,UAAM,eAAe,KAAK,gBAAgB;AAC1C,QAAI,cAAc;AACd,2BAAqB,sBAAsB,YAAY;AAAA,IAC3D;AAEA,WAAO;AAAA,EACX;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f0348ede93ec0228b6c3e8d0036c34dbdab46324"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/column-reference-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/column-reference-object.ts","statementMap":{"0":{"start":{"line":9,"column":4},"end":{"line":9,"column":17}},"1":{"start":{"line":10,"column":17},"end":{"line":10,"column":58}},"2":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":44}},"4":{"start":{"line":13,"column":18},"end":{"line":20,"column":5}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":29}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":16}},"7":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"8":{"start":{"line":28,"column":6},"end":{"line":28,"column":52}},"9":{"start":{"line":30,"column":34},"end":{"line":30,"column":49}},"10":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"11":{"start":{"line":32,"column":6},"end":{"line":32,"column":52}},"12":{"start":{"line":34,"column":29},"end":{"line":34,"column":48}},"13":{"start":{"line":35,"column":27},"end":{"line":35,"column":63}},"14":{"start":{"line":36,"column":22},"end":{"line":36,"column":48}},"15":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"16":{"start":{"line":38,"column":6},"end":{"line":38,"column":18}},"17":{"start":{"line":40,"column":19},"end":{"line":40,"column":47}},"18":{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},"19":{"start":{"line":42,"column":6},"end":{"line":42,"column":45}},"20":{"start":{"line":44,"column":6},"end":{"line":44,"column":47}},"21":{"start":{"line":45,"column":6},"end":{"line":45,"column":42}},"22":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"23":{"start":{"line":48,"column":6},"end":{"line":48,"column":80}},"24":{"start":{"line":50,"column":4},"end":{"line":50,"column":51}},"25":{"start":{"line":51,"column":4},"end":{"line":51,"column":94}},"26":{"start":{"line":52,"column":4},"end":{"line":52,"column":16}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":2},"end":{"line":8,"column":3}},"loc":{"start":{"line":8,"column":21},"end":{"line":22,"column":3}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":2},"end":{"line":23,"column":3}},"loc":{"start":{"line":23,"column":13},"end":{"line":25,"column":3}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":2},"end":{"line":26,"column":3}},"loc":{"start":{"line":26,"column":27},"end":{"line":53,"column":3}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},{"start":{},"end":{}}],"line":27},"1":{"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},{"start":{},"end":{}}],"line":31},"2":{"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":114}},"type":"binary-expr","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":61}},{"start":{"line":31,"column":65},"end":{"line":31,"column":114}}],"line":31},"3":{"loc":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},{"start":{},"end":{}}],"line":37},"4":{"loc":{"start":{"line":37,"column":8},"end":{"line":37,"column":92}},"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":49}},{"start":{"line":37,"column":53},"end":{"line":37,"column":92}}],"line":37},"5":{"loc":{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},{"start":{"line":43,"column":11},"end":{"line":46,"column":5}}],"line":41},"6":{"loc":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},{"start":{},"end":{}}],"line":47}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/column-reference-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { type IRange, RANGE_TYPE } from '@univerjs/core';\n\nimport { ErrorType } from '../../basics/error-type';\nimport { matchToken } from '../../basics/token';\n\nimport { deserializeRangeWithSheetWithCache } from '../utils/reference-cache';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { BaseReferenceObject } from './base-reference-object';\n\nexport class ColumnReferenceObject extends BaseReferenceObject {\n    constructor(token: string) {\n        super(token);\n        const grid = deserializeRangeWithSheetWithCache(token);\n        this.setForcedUnitIdDirect(grid.unitId);\n        this.setForcedSheetName(grid.sheetName);\n        const range: IRange = {\n            ...grid.range,\n            startColumn: grid.range.startColumn,\n            startRow: Number.NaN,\n            endColumn: grid.range.endColumn,\n            endRow: Number.NaN,\n            rangeType: RANGE_TYPE.COLUMN,\n        };\n        this.setRangeData(range);\n    }\n\n    override isColumn() {\n        return true;\n    }\n\n    override unionBy(referenceObject: BaseReferenceObject) {\n        if (!referenceObject.isColumn()) {\n            return ErrorValueObject.create(ErrorType.REF);\n        }\n\n        const columnReferenceObject = referenceObject as ColumnReferenceObject;\n        if (\n            columnReferenceObject.getForcedSheetName() !== undefined &&\n            columnReferenceObject.getForcedSheetName() !== ''\n        ) {\n            return ErrorValueObject.create(ErrorType.REF);\n        }\n\n        const currentRangeData = this.getRangeData();\n\n        // if (currentRangeData.endColumn !== -1) {\n        //     return ErrorValueObject.create(ErrorType.REF);\n        // }\n\n        const newColumnRange = columnReferenceObject.getRangeData();\n\n        const newColumn = newColumnRange.startColumn;\n\n        // if the column is already in the range, return the same object\n        if (newColumn >= currentRangeData.startColumn && newColumn <= currentRangeData.endColumn) {\n            return this;\n        }\n\n        const column = currentRangeData.startColumn;\n\n        if (newColumn > column) {\n            currentRangeData.endColumn = newColumn;\n        } else {\n            currentRangeData.startColumn = newColumn;\n            currentRangeData.endColumn = column;\n        }\n\n        if (newColumnRange.startAbsoluteRefType) {\n            currentRangeData.endAbsoluteRefType = newColumnRange.startAbsoluteRefType;\n        }\n\n        currentRangeData.rangeType = RANGE_TYPE.COLUMN;\n\n        this.setToken(`${this.getToken()}${matchToken.COLON}${columnReferenceObject.getToken()}`);\n\n        return this;\n    }\n}\n"],"mappings":"AAgBA,SAAsB,kBAAkB;AAExC,SAAS,iBAAiB;AAC1B,SAAS,kBAAkB;AAE3B,SAAS,0CAA0C;AACnD,SAAS,wBAAwB;AACjC,SAAS,2BAA2B;AAE7B,aAAM,8BAA8B,oBAAoB;AAAA,EAC3D,YAAY,OAAe;AACvB,UAAM,KAAK;AACX,UAAM,OAAO,mCAAmC,KAAK;AACrD,SAAK,sBAAsB,KAAK,MAAM;AACtC,SAAK,mBAAmB,KAAK,SAAS;AACtC,UAAM,QAAgB;AAAA,MAClB,GAAG,KAAK;AAAA,MACR,aAAa,KAAK,MAAM;AAAA,MACxB,UAAU,OAAO;AAAA,MACjB,WAAW,KAAK,MAAM;AAAA,MACtB,QAAQ,OAAO;AAAA,MACf,WAAW,WAAW;AAAA,IAC1B;AACA,SAAK,aAAa,KAAK;AAAA,EAC3B;AAAA,EAES,WAAW;AAChB,WAAO;AAAA,EACX;AAAA,EAES,QAAQ,iBAAsC;AACnD,QAAI,CAAC,gBAAgB,SAAS,GAAG;AAC7B,aAAO,iBAAiB,OAAO,UAAU,GAAG;AAAA,IAChD;AAEA,UAAM,wBAAwB;AAC9B,QACI,sBAAsB,mBAAmB,MAAM,UAC/C,sBAAsB,mBAAmB,MAAM,IACjD;AACE,aAAO,iBAAiB,OAAO,UAAU,GAAG;AAAA,IAChD;AAEA,UAAM,mBAAmB,KAAK,aAAa;AAM3C,UAAM,iBAAiB,sBAAsB,aAAa;AAE1D,UAAM,YAAY,eAAe;AAGjC,QAAI,aAAa,iBAAiB,eAAe,aAAa,iBAAiB,WAAW;AACtF,aAAO;AAAA,IACX;AAEA,UAAM,SAAS,iBAAiB;AAEhC,QAAI,YAAY,QAAQ;AACpB,uBAAiB,YAAY;AAAA,IACjC,OAAO;AACH,uBAAiB,cAAc;AAC/B,uBAAiB,YAAY;AAAA,IACjC;AAEA,QAAI,eAAe,sBAAsB;AACrC,uBAAiB,qBAAqB,eAAe;AAAA,IACzD;AAEA,qBAAiB,YAAY,WAAW;AAExC,SAAK,SAAS,GAAG,KAAK,SAAS,CAAC,GAAG,WAAW,KAAK,GAAG,sBAAsB,SAAS,CAAC,EAAE;AAExF,WAAO;AAAA,EACX;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"efcc0736359fb1501c70e5d7679eddeba09c91c9"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/row-reference-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/row-reference-object.ts","statementMap":{"0":{"start":{"line":9,"column":4},"end":{"line":9,"column":17}},"1":{"start":{"line":10,"column":17},"end":{"line":10,"column":58}},"2":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":44}},"4":{"start":{"line":13,"column":18},"end":{"line":20,"column":5}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":29}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":16}},"7":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"8":{"start":{"line":28,"column":6},"end":{"line":28,"column":52}},"9":{"start":{"line":30,"column":31},"end":{"line":30,"column":46}},"10":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"11":{"start":{"line":32,"column":6},"end":{"line":32,"column":52}},"12":{"start":{"line":34,"column":29},"end":{"line":34,"column":48}},"13":{"start":{"line":35,"column":24},"end":{"line":35,"column":57}},"14":{"start":{"line":36,"column":19},"end":{"line":36,"column":39}},"15":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"16":{"start":{"line":38,"column":6},"end":{"line":38,"column":18}},"17":{"start":{"line":40,"column":16},"end":{"line":40,"column":41}},"18":{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},"19":{"start":{"line":42,"column":6},"end":{"line":42,"column":39}},"20":{"start":{"line":44,"column":6},"end":{"line":44,"column":41}},"21":{"start":{"line":45,"column":6},"end":{"line":45,"column":36}},"22":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"23":{"start":{"line":48,"column":6},"end":{"line":48,"column":77}},"24":{"start":{"line":50,"column":4},"end":{"line":50,"column":48}},"25":{"start":{"line":51,"column":4},"end":{"line":51,"column":91}},"26":{"start":{"line":52,"column":4},"end":{"line":52,"column":16}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":2},"end":{"line":8,"column":3}},"loc":{"start":{"line":8,"column":21},"end":{"line":22,"column":3}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":2},"end":{"line":23,"column":3}},"loc":{"start":{"line":23,"column":10},"end":{"line":25,"column":3}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":2},"end":{"line":26,"column":3}},"loc":{"start":{"line":26,"column":27},"end":{"line":53,"column":3}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},{"start":{},"end":{}}],"line":27},"1":{"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},{"start":{},"end":{}}],"line":31},"2":{"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":108}},"type":"binary-expr","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":58}},{"start":{"line":31,"column":62},"end":{"line":31,"column":108}}],"line":31},"3":{"loc":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},{"start":{},"end":{}}],"line":37},"4":{"loc":{"start":{"line":37,"column":8},"end":{"line":37,"column":80}},"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":43}},{"start":{"line":37,"column":47},"end":{"line":37,"column":80}}],"line":37},"5":{"loc":{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},{"start":{"line":43,"column":11},"end":{"line":46,"column":5}}],"line":41},"6":{"loc":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},{"start":{},"end":{}}],"line":47}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/row-reference-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { type IRange, RANGE_TYPE } from '@univerjs/core';\n\nimport { ErrorType } from '../../basics/error-type';\nimport { matchToken } from '../../basics/token';\n\nimport { deserializeRangeWithSheetWithCache } from '../utils/reference-cache';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { BaseReferenceObject } from './base-reference-object';\n\nexport class RowReferenceObject extends BaseReferenceObject {\n    constructor(token: string) {\n        super(token);\n        const grid = deserializeRangeWithSheetWithCache(token);\n        this.setForcedUnitIdDirect(grid.unitId);\n        this.setForcedSheetName(grid.sheetName);\n        const range: IRange = {\n            ...grid.range,\n            startColumn: Number.NaN,\n            startRow: grid.range.startRow,\n            endColumn: Number.NaN,\n            endRow: grid.range.endRow,\n            rangeType: RANGE_TYPE.ROW,\n        };\n        this.setRangeData(range);\n    }\n\n    override isRow() {\n        return true;\n    }\n\n    override unionBy(referenceObject: BaseReferenceObject) {\n        if (!referenceObject.isRow()) {\n            return ErrorValueObject.create(ErrorType.REF);\n        }\n\n        const rowReferenceObject = referenceObject as RowReferenceObject;\n        if (rowReferenceObject.getForcedSheetName() !== undefined && rowReferenceObject.getForcedSheetName() !== '') {\n            return ErrorValueObject.create(ErrorType.REF);\n        }\n\n        const currentRangeData = this.getRangeData();\n\n        // if (currentRangeData.endRow !== -1) {\n        //     return ErrorValueObject.create(ErrorType.REF);\n        // }\n        const newRowRange = rowReferenceObject.getRangeData();\n\n        const newRow = newRowRange.startRow;\n\n        // if the row is already in the range, return the same object\n        if (newRow >= currentRangeData.startRow && newRow <= currentRangeData.endRow) {\n            return this;\n        }\n\n        const row = currentRangeData.startRow;\n\n        if (newRow > row) {\n            currentRangeData.endRow = newRow;\n        } else {\n            currentRangeData.startRow = newRow;\n            currentRangeData.endRow = row;\n        }\n\n        if (newRowRange.startAbsoluteRefType) {\n            currentRangeData.endAbsoluteRefType = newRowRange.startAbsoluteRefType;\n        }\n\n        currentRangeData.rangeType = RANGE_TYPE.ROW;\n\n        this.setToken(`${this.getToken()}${matchToken.COLON}${rowReferenceObject.getToken()}`);\n\n        return this;\n    }\n}\n"],"mappings":"AAgBA,SAAsB,kBAAkB;AAExC,SAAS,iBAAiB;AAC1B,SAAS,kBAAkB;AAE3B,SAAS,0CAA0C;AACnD,SAAS,wBAAwB;AACjC,SAAS,2BAA2B;AAE7B,aAAM,2BAA2B,oBAAoB;AAAA,EACxD,YAAY,OAAe;AACvB,UAAM,KAAK;AACX,UAAM,OAAO,mCAAmC,KAAK;AACrD,SAAK,sBAAsB,KAAK,MAAM;AACtC,SAAK,mBAAmB,KAAK,SAAS;AACtC,UAAM,QAAgB;AAAA,MAClB,GAAG,KAAK;AAAA,MACR,aAAa,OAAO;AAAA,MACpB,UAAU,KAAK,MAAM;AAAA,MACrB,WAAW,OAAO;AAAA,MAClB,QAAQ,KAAK,MAAM;AAAA,MACnB,WAAW,WAAW;AAAA,IAC1B;AACA,SAAK,aAAa,KAAK;AAAA,EAC3B;AAAA,EAES,QAAQ;AACb,WAAO;AAAA,EACX;AAAA,EAES,QAAQ,iBAAsC;AACnD,QAAI,CAAC,gBAAgB,MAAM,GAAG;AAC1B,aAAO,iBAAiB,OAAO,UAAU,GAAG;AAAA,IAChD;AAEA,UAAM,qBAAqB;AAC3B,QAAI,mBAAmB,mBAAmB,MAAM,UAAa,mBAAmB,mBAAmB,MAAM,IAAI;AACzG,aAAO,iBAAiB,OAAO,UAAU,GAAG;AAAA,IAChD;AAEA,UAAM,mBAAmB,KAAK,aAAa;AAK3C,UAAM,cAAc,mBAAmB,aAAa;AAEpD,UAAM,SAAS,YAAY;AAG3B,QAAI,UAAU,iBAAiB,YAAY,UAAU,iBAAiB,QAAQ;AAC1E,aAAO;AAAA,IACX;AAEA,UAAM,MAAM,iBAAiB;AAE7B,QAAI,SAAS,KAAK;AACd,uBAAiB,SAAS;AAAA,IAC9B,OAAO;AACH,uBAAiB,WAAW;AAC5B,uBAAiB,SAAS;AAAA,IAC9B;AAEA,QAAI,YAAY,sBAAsB;AAClC,uBAAiB,qBAAqB,YAAY;AAAA,IACtD;AAEA,qBAAiB,YAAY,WAAW;AAExC,SAAK,SAAS,GAAG,KAAK,SAAS,CAAC,GAAG,WAAW,KAAK,GAAG,mBAAmB,SAAS,CAAC,EAAE;AAErF,WAAO;AAAA,EACX;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"133c61ddbb2da0772518b9f7eed4e57bb4cdb194"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/array-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/array-object.ts","statementMap":{"0":{"start":{"line":4,"column":24},"end":{"line":4,"column":77}},"1":{"start":{"line":5,"column":27},"end":{"line":5,"column":83}},"2":{"start":{"line":6,"column":17},"end":{"line":6,"column":19}},"3":{"start":{"line":7,"column":2},"end":{"line":33,"column":3}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":16}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":18}},"6":{"start":{"line":9,"column":4},"end":{"line":31,"column":5}},"7":{"start":{"line":9,"column":17},"end":{"line":9,"column":18}},"8":{"start":{"line":10,"column":6},"end":{"line":14,"column":7}},"9":{"start":{"line":11,"column":23},"end":{"line":11,"column":82}},"10":{"start":{"line":12,"column":8},"end":{"line":12,"column":25}},"11":{"start":{"line":13,"column":8},"end":{"line":13,"column":17}},"12":{"start":{"line":15,"column":6},"end":{"line":19,"column":7}},"13":{"start":{"line":16,"column":23},"end":{"line":16,"column":44}},"14":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"15":{"start":{"line":18,"column":8},"end":{"line":18,"column":17}},"16":{"start":{"line":20,"column":6},"end":{"line":24,"column":7}},"17":{"start":{"line":21,"column":23},"end":{"line":21,"column":44}},"18":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"19":{"start":{"line":23,"column":8},"end":{"line":23,"column":17}},"20":{"start":{"line":25,"column":6},"end":{"line":28,"column":7}},"21":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"22":{"start":{"line":27,"column":8},"end":{"line":27,"column":17}},"23":{"start":{"line":29,"column":20},"end":{"line":29,"column":41}},"24":{"start":{"line":30,"column":6},"end":{"line":30,"column":22}},"25":{"start":{"line":32,"column":4},"end":{"line":32,"column":21}},"26":{"start":{"line":34,"column":2},"end":{"line":34,"column":55}},"27":{"start":{"line":37,"column":31},"end":{"line":45,"column":3}},"28":{"start":{"line":46,"column":2},"end":{"line":46,"column":55}}},"fnMap":{"0":{"name":"expandArrayValueObject","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":38}},"loc":{"start":{"line":3,"column":89},"end":{"line":35,"column":1}},"line":3},"1":{"name":"createNewArray","decl":{"start":{"line":36,"column":16},"end":{"line":36,"column":30}},"loc":{"start":{"line":36,"column":89},"end":{"line":47,"column":1}},"line":36}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":24},"end":{"line":4,"column":77}},"type":"cond-expr","locations":[{"start":{"line":4,"column":48},"end":{"line":4,"column":73}},{"start":{"line":4,"column":76},"end":{"line":4,"column":77}}],"line":4},"1":{"loc":{"start":{"line":5,"column":27},"end":{"line":5,"column":83}},"type":"cond-expr","locations":[{"start":{"line":5,"column":51},"end":{"line":5,"column":79}},{"start":{"line":5,"column":82},"end":{"line":5,"column":83}}],"line":5},"2":{"loc":{"start":{"line":10,"column":6},"end":{"line":14,"column":7}},"type":"if","locations":[{"start":{"line":10,"column":6},"end":{"line":14,"column":7}},{"start":{},"end":{}}],"line":10},"3":{"loc":{"start":{"line":10,"column":10},"end":{"line":10,"column":55}},"type":"binary-expr","locations":[{"start":{"line":10,"column":10},"end":{"line":10,"column":29}},{"start":{"line":10,"column":33},"end":{"line":10,"column":55}}],"line":10},"4":{"loc":{"start":{"line":11,"column":23},"end":{"line":11,"column":82}},"type":"cond-expr","locations":[{"start":{"line":11,"column":47},"end":{"line":11,"column":68}},{"start":{"line":11,"column":71},"end":{"line":11,"column":82}}],"line":11},"5":{"loc":{"start":{"line":15,"column":6},"end":{"line":19,"column":7}},"type":"if","locations":[{"start":{"line":15,"column":6},"end":{"line":19,"column":7}},{"start":{},"end":{}}],"line":15},"6":{"loc":{"start":{"line":15,"column":10},"end":{"line":15,"column":53}},"type":"binary-expr","locations":[{"start":{"line":15,"column":10},"end":{"line":15,"column":29}},{"start":{"line":15,"column":33},"end":{"line":15,"column":53}}],"line":15},"7":{"loc":{"start":{"line":20,"column":6},"end":{"line":24,"column":7}},"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":24,"column":7}},{"start":{},"end":{}}],"line":20},"8":{"loc":{"start":{"line":20,"column":10},"end":{"line":20,"column":53}},"type":"binary-expr","locations":[{"start":{"line":20,"column":10},"end":{"line":20,"column":32}},{"start":{"line":20,"column":36},"end":{"line":20,"column":53}}],"line":20},"9":{"loc":{"start":{"line":25,"column":6},"end":{"line":28,"column":7}},"type":"if","locations":[{"start":{"line":25,"column":6},"end":{"line":28,"column":7}},{"start":{},"end":{}}],"line":25},"10":{"loc":{"start":{"line":25,"column":10},"end":{"line":25,"column":53}},"type":"binary-expr","locations":[{"start":{"line":25,"column":10},"end":{"line":25,"column":28}},{"start":{"line":25,"column":32},"end":{"line":25,"column":53}}],"line":25},"11":{"loc":{"start":{"line":26,"column":17},"end":{"line":26,"column":57}},"type":"binary-expr","locations":[{"start":{"line":26,"column":17},"end":{"line":26,"column":29}},{"start":{"line":26,"column":33},"end":{"line":26,"column":57}}],"line":26},"12":{"loc":{"start":{"line":36,"column":62},"end":{"line":36,"column":73}},"type":"default-arg","locations":[{"start":{"line":36,"column":71},"end":{"line":36,"column":73}}],"line":36},"13":{"loc":{"start":{"line":36,"column":75},"end":{"line":36,"column":87}},"type":"default-arg","locations":[{"start":{"line":36,"column":85},"end":{"line":36,"column":87}}],"line":36}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"f":{"0":0,"1":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0],"13":[0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/array-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BaseValueObject, IArrayValueObject } from '../value-object/base-value-object';\nimport { ArrayValueObject } from '../value-object/array-value-object';\nimport { NullValueObject } from '../value-object/primitive-object';\n\nexport function expandArrayValueObject(rowCount: number, columnCount: number, valueObject: BaseValueObject, defaultValue?: BaseValueObject) {\n    const valueRowCount = valueObject.isArray() ? (valueObject as ArrayValueObject).getRowCount() : 1;\n    const valueColumnCount = valueObject.isArray() ? (valueObject as ArrayValueObject).getColumnCount() : 1;\n\n    const result: BaseValueObject[][] = [];\n\n    for (let r = 0; r < rowCount; r++) {\n        const row = [];\n\n        for (let c = 0; c < columnCount; c++) {\n            if (valueRowCount === 1 && valueColumnCount === 1) {\n                const value = valueObject.isArray() ? (valueObject as ArrayValueObject).get(0, 0) as BaseValueObject : valueObject;\n                row.push(value);\n                continue;\n            }\n\n            if (valueRowCount === 1 && c < valueColumnCount) {\n                const value = (valueObject as ArrayValueObject).get(0, c) as BaseValueObject;\n                row.push(value);\n                continue;\n            }\n\n            if (valueColumnCount === 1 && r < valueRowCount) {\n                const value = (valueObject as ArrayValueObject).get(r, 0) as BaseValueObject;\n                row.push(value);\n                continue;\n            }\n\n            if (r >= valueRowCount || c >= valueColumnCount) {\n                row.push(defaultValue ?? NullValueObject.create());\n                continue;\n            }\n\n            const value = (valueObject as ArrayValueObject).get(r, c) as BaseValueObject;\n            row.push(value);\n        }\n\n        result.push(row);\n    }\n\n    return createNewArray(result, rowCount, columnCount);\n}\n\nexport function createNewArray(\n    result: BaseValueObject[][],\n    rowCount: number,\n    columnCount: number,\n    unitId = '',\n    sheetId = ''\n) {\n    const arrayValueObjectData: IArrayValueObject = {\n        calculateValueList: result,\n        rowCount,\n        columnCount,\n        unitId,\n        sheetId,\n        row: -1,\n        column: -1,\n    };\n\n    return ArrayValueObject.create(arrayValueObjectData);\n}\n"],"mappings":"AAiBA,SAAS,wBAAwB;AACjC,SAAS,uBAAuB;AAEzB,gBAAS,uBAAuB,UAAkB,aAAqB,aAA8B,cAAgC;AACxI,QAAM,gBAAgB,YAAY,QAAQ,IAAK,YAAiC,YAAY,IAAI;AAChG,QAAM,mBAAmB,YAAY,QAAQ,IAAK,YAAiC,eAAe,IAAI;AAEtG,QAAM,SAA8B,CAAC;AAErC,WAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,UAAM,MAAM,CAAC;AAEb,aAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AAClC,UAAI,kBAAkB,KAAK,qBAAqB,GAAG;AAC/C,cAAMA,SAAQ,YAAY,QAAQ,IAAK,YAAiC,IAAI,GAAG,CAAC,IAAuB;AACvG,YAAI,KAAKA,MAAK;AACd;AAAA,MACJ;AAEA,UAAI,kBAAkB,KAAK,IAAI,kBAAkB;AAC7C,cAAMA,SAAS,YAAiC,IAAI,GAAG,CAAC;AACxD,YAAI,KAAKA,MAAK;AACd;AAAA,MACJ;AAEA,UAAI,qBAAqB,KAAK,IAAI,eAAe;AAC7C,cAAMA,SAAS,YAAiC,IAAI,GAAG,CAAC;AACxD,YAAI,KAAKA,MAAK;AACd;AAAA,MACJ;AAEA,UAAI,KAAK,iBAAiB,KAAK,kBAAkB;AAC7C,YAAI,KAAK,gBAAgB,gBAAgB,OAAO,CAAC;AACjD;AAAA,MACJ;AAEA,YAAM,QAAS,YAAiC,IAAI,GAAG,CAAC;AACxD,UAAI,KAAK,KAAK;AAAA,IAClB;AAEA,WAAO,KAAK,GAAG;AAAA,EACnB;AAEA,SAAO,eAAe,QAAQ,UAAU,WAAW;AACvD;AAEO,gBAAS,eACZ,QACA,UACA,aACA,SAAS,IACT,UAAU,IACZ;AACE,QAAM,uBAA0C;AAAA,IAC5C,oBAAoB;AAAA,IACpB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK;AAAA,IACL,QAAQ;AAAA,EACZ;AAEA,SAAO,iBAAiB,OAAO,oBAAoB;AACvD;","names":["value"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9742baf3d1216e2a6958a8647e4976a1c972bbc0"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/object-compare.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/object-compare.ts","statementMap":{"0":{"start":{"line":6,"column":27},"end":{"line":13,"column":3}},"1":{"start":{"line":14,"column":2},"end":{"line":19,"column":3}},"2":{"start":{"line":15,"column":4},"end":{"line":18,"column":5}},"3":{"start":{"line":16,"column":22},"end":{"line":16,"column":49}},"4":{"start":{"line":17,"column":6},"end":{"line":17,"column":57}},"5":{"start":{"line":20,"column":2},"end":{"line":20,"column":63}},"6":{"start":{"line":23,"column":2},"end":{"line":32,"column":3}},"7":{"start":{"line":24,"column":4},"end":{"line":31,"column":5}},"8":{"start":{"line":25,"column":34},"end":{"line":25,"column":58}},"9":{"start":{"line":26,"column":44},"end":{"line":26,"column":81}},"10":{"start":{"line":27,"column":6},"end":{"line":27,"column":23}},"11":{"start":{"line":28,"column":6},"end":{"line":28,"column":38}},"12":{"start":{"line":30,"column":6},"end":{"line":30,"column":37}},"13":{"start":{"line":33,"column":2},"end":{"line":33,"column":60}},"14":{"start":{"line":36,"column":23},"end":{"line":36,"column":145}},"15":{"start":{"line":37,"column":26},"end":{"line":37,"column":154}},"16":{"start":{"line":38,"column":28},"end":{"line":38,"column":95}},"17":{"start":{"line":39,"column":28},"end":{"line":39,"column":95}},"18":{"start":{"line":40,"column":2},"end":{"line":52,"column":5}},"19":{"start":{"line":41,"column":26},"end":{"line":41,"column":70}},"20":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"21":{"start":{"line":43,"column":6},"end":{"line":43,"column":27}},"22":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"23":{"start":{"line":46,"column":6},"end":{"line":46,"column":27}},"24":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"25":{"start":{"line":49,"column":6},"end":{"line":49,"column":102}},"26":{"start":{"line":51,"column":4},"end":{"line":51,"column":44}}},"fnMap":{"0":{"name":"findCompareToken","decl":{"start":{"line":5,"column":16},"end":{"line":5,"column":32}},"loc":{"start":{"line":5,"column":38},"end":{"line":21,"column":1}},"line":5},"1":{"name":"valueObjectCompare","decl":{"start":{"line":22,"column":16},"end":{"line":22,"column":34}},"loc":{"start":{"line":22,"column":79},"end":{"line":34,"column":1}},"line":22},"2":{"name":"booleanObjectIntersection","decl":{"start":{"line":35,"column":16},"end":{"line":35,"column":41}},"loc":{"start":{"line":35,"column":70},"end":{"line":53,"column":1}},"line":35},"3":{"name":"(anonymous_3)","decl":{"start":{"line":40,"column":36},"end":{"line":40,"column":37}},"loc":{"start":{"line":40,"column":78},"end":{"line":52,"column":3}},"line":40}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":4},"end":{"line":18,"column":5}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":18,"column":5}},{"start":{},"end":{}}],"line":15},"1":{"loc":{"start":{"line":23,"column":2},"end":{"line":32,"column":3}},"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":32,"column":3}},{"start":{},"end":{}}],"line":23},"2":{"loc":{"start":{"line":24,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":31,"column":5}},{"start":{"line":29,"column":11},"end":{"line":31,"column":5}}],"line":24},"3":{"loc":{"start":{"line":36,"column":32},"end":{"line":36,"column":87}},"type":"cond-expr","locations":[{"start":{"line":36,"column":57},"end":{"line":36,"column":83}},{"start":{"line":36,"column":86},"end":{"line":36,"column":87}}],"line":36},"4":{"loc":{"start":{"line":36,"column":89},"end":{"line":36,"column":144}},"type":"cond-expr","locations":[{"start":{"line":36,"column":114},"end":{"line":36,"column":140}},{"start":{"line":36,"column":143},"end":{"line":36,"column":144}}],"line":36},"5":{"loc":{"start":{"line":37,"column":35},"end":{"line":37,"column":93}},"type":"cond-expr","locations":[{"start":{"line":37,"column":60},"end":{"line":37,"column":89}},{"start":{"line":37,"column":92},"end":{"line":37,"column":93}}],"line":37},"6":{"loc":{"start":{"line":37,"column":95},"end":{"line":37,"column":153}},"type":"cond-expr","locations":[{"start":{"line":37,"column":120},"end":{"line":37,"column":149}},{"start":{"line":37,"column":152},"end":{"line":37,"column":153}}],"line":37},"7":{"loc":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},{"start":{},"end":{}}],"line":42},"8":{"loc":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},{"start":{},"end":{}}],"line":45},"9":{"loc":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},{"start":{},"end":{}}],"line":48},"10":{"loc":{"start":{"line":48,"column":8},"end":{"line":48,"column":64}},"type":"binary-expr","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":34}},{"start":{"line":48,"column":38},"end":{"line":48,"column":64}}],"line":48},"11":{"loc":{"start":{"line":49,"column":48},"end":{"line":49,"column":100}},"type":"binary-expr","locations":[{"start":{"line":49,"column":48},"end":{"line":49,"column":72}},{"start":{"line":49,"column":76},"end":{"line":49,"column":100}}],"line":49}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/object-compare.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { compareToken } from '../../basics/token';\nimport type { ArrayValueObject } from '../value-object/array-value-object';\nimport { ValueObjectFactory } from '../value-object/array-value-object';\nimport type { BaseValueObject } from '../value-object/base-value-object';\nimport { BooleanValueObject, createBooleanValueObjectByRawValue } from '../value-object/primitive-object';\nimport { expandArrayValueObject } from './array-object';\n\nexport function findCompareToken(str: string): [compareToken, BaseValueObject] {\n    const comparisonTokens: compareToken[] = [\n        compareToken.EQUALS,\n        compareToken.NOT_EQUAL,\n        compareToken.GREATER_THAN_OR_EQUAL,\n        compareToken.GREATER_THAN,\n        compareToken.LESS_THAN_OR_EQUAL,\n        compareToken.LESS_THAN,\n    ];\n\n    for (const token of comparisonTokens) {\n        if (str.startsWith(token)) {\n            const content = str.substring(token.length);\n            return [token, ValueObjectFactory.create(content) as BaseValueObject];\n        }\n    }\n\n    return [compareToken.EQUALS, ValueObjectFactory.create(str) as BaseValueObject];\n}\n\n/**\n * When it contains both comparison characters and wildcard characters\n * 1. The value of apple* has the same effect as =apple*\n * 2. >=apple*: normal value, >apple: obtains the same effect as >=apple*\n * 3. <apple*: normal value, <=apple: obtains the same effect as <apple*\n */\nexport function valueObjectCompare(range: BaseValueObject, criteria: BaseValueObject, operator?: compareToken, isCaseSensitive?: boolean) {\n    if (!operator) {\n        // Only strings can extract comparison symbols, other types of values are 'equal to'\n        // TODO: criteria: 32, \">32\", B5, \"3?\", \"apple*\", \"*~?\", TODAY(), \">\"&A1:B3\n        if (criteria.isString()) {\n            const criteriaValueString = `${criteria.getValue()}`;\n            const [token, criteriaStringObject] = findCompareToken(criteriaValueString);\n            operator = token;\n            criteria = criteriaStringObject;\n        } else {\n            operator = compareToken.EQUALS;\n        }\n    }\n\n    return range.compare(criteria, operator, isCaseSensitive);\n}\n\n/**\n * Find the Boolean intersection of two ArrayValueObjects\n * @param valueObject1\n * @param valueObject2\n */\nexport function booleanObjectIntersection(valueObject1: BaseValueObject, valueObject2: BaseValueObject) {\n    const maxRowLength = Math.max(valueObject1.isArray() ? (valueObject1 as ArrayValueObject).getRowCount() : 1, valueObject2.isArray() ? (valueObject2 as ArrayValueObject).getRowCount() : 1);\n    const maxColumnLength = Math.max(valueObject1.isArray() ? (valueObject1 as ArrayValueObject).getColumnCount() : 1, valueObject2.isArray() ? (valueObject2 as ArrayValueObject).getColumnCount() : 1);\n\n    const valueObject1Array = expandArrayValueObject(maxRowLength, maxColumnLength, valueObject1);\n    const valueObject2Array = expandArrayValueObject(maxRowLength, maxColumnLength, valueObject2);\n\n    return valueObject1Array.mapValue((valueObject1, rowIndex, columnIndex) => {\n        const valueObject2 = valueObject2Array.get(rowIndex, columnIndex);\n\n        if (valueObject1?.isError()) {\n            return valueObject1;\n        }\n\n        if (valueObject2?.isError()) {\n            return valueObject2;\n        }\n\n        if (valueObject1?.isBoolean() && valueObject2?.isBoolean()) {\n            return createBooleanValueObjectByRawValue(valueObject1.getValue() && valueObject2.getValue());\n        }\n\n        return BooleanValueObject.create(false);\n    });\n}\n"],"mappings":"AAgBA,SAAS,oBAAoB;AAE7B,SAAS,0BAA0B;AAEnC,SAAS,oBAAoB,0CAA0C;AACvE,SAAS,8BAA8B;AAEhC,gBAAS,iBAAiB,KAA8C;AAC3E,QAAM,mBAAmC;AAAA,IACrC,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,EACjB;AAEA,aAAW,SAAS,kBAAkB;AAClC,QAAI,IAAI,WAAW,KAAK,GAAG;AACvB,YAAM,UAAU,IAAI,UAAU,MAAM,MAAM;AAC1C,aAAO,CAAC,OAAO,mBAAmB,OAAO,OAAO,CAAoB;AAAA,IACxE;AAAA,EACJ;AAEA,SAAO,CAAC,aAAa,QAAQ,mBAAmB,OAAO,GAAG,CAAoB;AAClF;AAQO,gBAAS,mBAAmB,OAAwB,UAA2B,UAAyB,iBAA2B;AACtI,MAAI,CAAC,UAAU;AAGX,QAAI,SAAS,SAAS,GAAG;AACrB,YAAM,sBAAsB,GAAG,SAAS,SAAS,CAAC;AAClD,YAAM,CAAC,OAAO,oBAAoB,IAAI,iBAAiB,mBAAmB;AAC1E,iBAAW;AACX,iBAAW;AAAA,IACf,OAAO;AACH,iBAAW,aAAa;AAAA,IAC5B;AAAA,EACJ;AAEA,SAAO,MAAM,QAAQ,UAAU,UAAU,eAAe;AAC5D;AAOO,gBAAS,0BAA0B,cAA+B,cAA+B;AACpG,QAAM,eAAe,KAAK,IAAI,aAAa,QAAQ,IAAK,aAAkC,YAAY,IAAI,GAAG,aAAa,QAAQ,IAAK,aAAkC,YAAY,IAAI,CAAC;AAC1L,QAAM,kBAAkB,KAAK,IAAI,aAAa,QAAQ,IAAK,aAAkC,eAAe,IAAI,GAAG,aAAa,QAAQ,IAAK,aAAkC,eAAe,IAAI,CAAC;AAEnM,QAAM,oBAAoB,uBAAuB,cAAc,iBAAiB,YAAY;AAC5F,QAAM,oBAAoB,uBAAuB,cAAc,iBAAiB,YAAY;AAE5F,SAAO,kBAAkB,SAAS,CAACA,eAAc,UAAU,gBAAgB;AACvE,UAAMC,gBAAe,kBAAkB,IAAI,UAAU,WAAW;AAEhE,QAAID,eAAc,QAAQ,GAAG;AACzB,aAAOA;AAAA,IACX;AAEA,QAAIC,eAAc,QAAQ,GAAG;AACzB,aAAOA;AAAA,IACX;AAEA,QAAID,eAAc,UAAU,KAAKC,eAAc,UAAU,GAAG;AACxD,aAAO,mCAAmCD,cAAa,SAAS,KAAKC,cAAa,SAAS,CAAC;AAAA,IAChG;AAEA,WAAO,mBAAmB,OAAO,KAAK;AAAA,EAC1C,CAAC;AACL;","names":["valueObject1","valueObject2"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"56c9db498c42b3ffb26c7c90e0ca5157f501a858"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/value-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/value-object.ts","statementMap":{"0":{"start":{"line":11,"column":23},"end":{"line":11,"column":45}},"1":{"start":{"line":12,"column":15},"end":{"line":12,"column":16}},"2":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"3":{"start":{"line":14,"column":4},"end":{"line":14,"column":15}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":42}},"5":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":16}},"7":{"start":{"line":22,"column":2},"end":{"line":30,"column":3}},"8":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"9":{"start":{"line":24,"column":6},"end":{"line":24,"column":18}},"10":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"11":{"start":{"line":27,"column":6},"end":{"line":27,"column":18}},"12":{"start":{"line":29,"column":4},"end":{"line":29,"column":17}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":28}},"14":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"15":{"start":{"line":33,"column":4},"end":{"line":33,"column":16}},"16":{"start":{"line":35,"column":2},"end":{"line":35,"column":15}},"17":{"start":{"line":38,"column":18},"end":{"line":38,"column":43}},"18":{"start":{"line":39,"column":22},"end":{"line":39,"column":24}},"19":{"start":{"line":40,"column":27},"end":{"line":40,"column":29}},"20":{"start":{"line":41,"column":2},"end":{"line":49,"column":3}},"21":{"start":{"line":42,"column":4},"end":{"line":48,"column":6}},"22":{"start":{"line":50,"column":2},"end":{"line":54,"column":3}},"23":{"start":{"line":51,"column":4},"end":{"line":53,"column":6}},"24":{"start":{"line":55,"column":2},"end":{"line":60,"column":3}},"25":{"start":{"line":56,"column":4},"end":{"line":59,"column":6}},"26":{"start":{"line":61,"column":2},"end":{"line":68,"column":3}},"27":{"start":{"line":62,"column":4},"end":{"line":67,"column":6}},"28":{"start":{"line":69,"column":2},"end":{"line":109,"column":3}},"29":{"start":{"line":70,"column":15},"end":{"line":70,"column":26}},"30":{"start":{"line":71,"column":14},"end":{"line":71,"column":27}},"31":{"start":{"line":72,"column":4},"end":{"line":79,"column":5}},"32":{"start":{"line":73,"column":6},"end":{"line":78,"column":8}},"33":{"start":{"line":80,"column":4},"end":{"line":87,"column":5}},"34":{"start":{"line":81,"column":6},"end":{"line":86,"column":8}},"35":{"start":{"line":88,"column":4},"end":{"line":95,"column":5}},"36":{"start":{"line":89,"column":6},"end":{"line":94,"column":8}},"37":{"start":{"line":96,"column":4},"end":{"line":102,"column":5}},"38":{"start":{"line":97,"column":6},"end":{"line":101,"column":8}},"39":{"start":{"line":103,"column":4},"end":{"line":108,"column":6}},"40":{"start":{"line":112,"column":21},"end":{"line":112,"column":22}},"41":{"start":{"line":113,"column":24},"end":{"line":113,"column":25}},"42":{"start":{"line":114,"column":2},"end":{"line":125,"column":5}},"43":{"start":{"line":115,"column":4},"end":{"line":124,"column":5}},"44":{"start":{"line":116,"column":6},"end":{"line":123,"column":7}},"45":{"start":{"line":117,"column":27},"end":{"line":117,"column":34}},"46":{"start":{"line":118,"column":8},"end":{"line":118,"column":72}},"47":{"start":{"line":119,"column":8},"end":{"line":119,"column":81}},"48":{"start":{"line":121,"column":8},"end":{"line":121,"column":49}},"49":{"start":{"line":122,"column":8},"end":{"line":122,"column":55}},"50":{"start":{"line":126,"column":2},"end":{"line":126,"column":43}},"51":{"start":{"line":129,"column":23},"end":{"line":129,"column":45}},"52":{"start":{"line":130,"column":26},"end":{"line":130,"column":51}},"53":{"start":{"line":131,"column":2},"end":{"line":139,"column":3}},"54":{"start":{"line":131,"column":15},"end":{"line":131,"column":16}},"55":{"start":{"line":132,"column":4},"end":{"line":132,"column":30}},"56":{"start":{"line":132,"column":21},"end":{"line":132,"column":30}},"57":{"start":{"line":133,"column":18},"end":{"line":133,"column":29}},"58":{"start":{"line":134,"column":27},"end":{"line":134,"column":46}},"59":{"start":{"line":135,"column":30},"end":{"line":135,"column":52}},"60":{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},"61":{"start":{"line":137,"column":6},"end":{"line":137,"column":109}},"62":{"start":{"line":140,"column":2},"end":{"line":140,"column":14}},"63":{"start":{"line":143,"column":25},"end":{"line":143,"column":27}},"64":{"start":{"line":144,"column":2},"end":{"line":166,"column":3}},"65":{"start":{"line":144,"column":15},"end":{"line":144,"column":16}},"66":{"start":{"line":145,"column":4},"end":{"line":145,"column":30}},"67":{"start":{"line":145,"column":21},"end":{"line":145,"column":30}},"68":{"start":{"line":146,"column":18},"end":{"line":146,"column":29}},"69":{"start":{"line":147,"column":21},"end":{"line":147,"column":36}},"70":{"start":{"line":148,"column":26},"end":{"line":148,"column":128}},"71":{"start":{"line":149,"column":4},"end":{"line":165,"column":7}},"72":{"start":{"line":150,"column":6},"end":{"line":152,"column":7}},"73":{"start":{"line":151,"column":8},"end":{"line":151,"column":15}},"74":{"start":{"line":153,"column":30},"end":{"line":153,"column":76}},"75":{"start":{"line":154,"column":6},"end":{"line":156,"column":7}},"76":{"start":{"line":155,"column":8},"end":{"line":155,"column":103}},"77":{"start":{"line":157,"column":6},"end":{"line":159,"column":7}},"78":{"start":{"line":158,"column":8},"end":{"line":158,"column":38}},"79":{"start":{"line":160,"column":6},"end":{"line":163,"column":7}},"80":{"start":{"line":161,"column":8},"end":{"line":161,"column":66}},"81":{"start":{"line":162,"column":8},"end":{"line":162,"column":15}},"82":{"start":{"line":164,"column":6},"end":{"line":164,"column":130}},"83":{"start":{"line":167,"column":2},"end":{"line":167,"column":24}},"84":{"start":{"line":170,"column":37},"end":{"line":170,"column":79}},"85":{"start":{"line":171,"column":2},"end":{"line":196,"column":5}},"86":{"start":{"line":172,"column":29},"end":{"line":172,"column":44}},"87":{"start":{"line":173,"column":4},"end":{"line":195,"column":5}},"88":{"start":{"line":174,"column":6},"end":{"line":174,"column":25}},"89":{"start":{"line":175,"column":11},"end":{"line":195,"column":5}},"90":{"start":{"line":176,"column":6},"end":{"line":181,"column":7}},"91":{"start":{"line":177,"column":31},"end":{"line":177,"column":74}},"92":{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},"93":{"start":{"line":179,"column":10},"end":{"line":179,"column":68}},"94":{"start":{"line":182,"column":6},"end":{"line":182,"column":46}},"95":{"start":{"line":183,"column":11},"end":{"line":195,"column":5}},"96":{"start":{"line":184,"column":6},"end":{"line":189,"column":7}},"97":{"start":{"line":185,"column":28},"end":{"line":185,"column":73}},"98":{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},"99":{"start":{"line":187,"column":10},"end":{"line":187,"column":63}},"100":{"start":{"line":190,"column":6},"end":{"line":190,"column":46}},"101":{"start":{"line":191,"column":11},"end":{"line":195,"column":5}},"102":{"start":{"line":192,"column":6},"end":{"line":192,"column":45}},"103":{"start":{"line":194,"column":6},"end":{"line":194,"column":46}},"104":{"start":{"line":199,"column":2},"end":{"line":201,"column":3}},"105":{"start":{"line":200,"column":4},"end":{"line":200,"column":16}},"106":{"start":{"line":202,"column":2},"end":{"line":204,"column":3}},"107":{"start":{"line":203,"column":4},"end":{"line":203,"column":16}},"108":{"start":{"line":205,"column":22},"end":{"line":205,"column":63}},"109":{"start":{"line":206,"column":23},"end":{"line":206,"column":66}},"110":{"start":{"line":207,"column":2},"end":{"line":209,"column":3}},"111":{"start":{"line":208,"column":4},"end":{"line":208,"column":16}},"112":{"start":{"line":210,"column":2},"end":{"line":212,"column":3}},"113":{"start":{"line":211,"column":4},"end":{"line":211,"column":16}},"114":{"start":{"line":213,"column":2},"end":{"line":213,"column":15}},"115":{"start":{"line":215,"column":49},"end":{"line":220,"column":29}},"116":{"start":{"line":216,"column":2},"end":{"line":216,"column":66}},"117":{"start":{"line":217,"column":2},"end":{"line":217,"column":70}},"118":{"start":{"line":218,"column":2},"end":{"line":218,"column":64}},"119":{"start":{"line":219,"column":2},"end":{"line":219,"column":30}},"120":{"start":{"line":223,"column":2},"end":{"line":235,"column":3}},"121":{"start":{"line":225,"column":6},"end":{"line":225,"column":59}},"122":{"start":{"line":226,"column":6},"end":{"line":226,"column":12}},"123":{"start":{"line":228,"column":6},"end":{"line":228,"column":61}},"124":{"start":{"line":229,"column":6},"end":{"line":229,"column":12}},"125":{"start":{"line":231,"column":6},"end":{"line":231,"column":58}},"126":{"start":{"line":232,"column":6},"end":{"line":232,"column":12}},"127":{"start":{"line":234,"column":6},"end":{"line":234,"column":55}},"128":{"start":{"line":236,"column":2},"end":{"line":236,"column":25}},"129":{"start":{"line":239,"column":24},"end":{"line":239,"column":63}},"130":{"start":{"line":240,"column":2},"end":{"line":246,"column":3}},"131":{"start":{"line":241,"column":4},"end":{"line":241,"column":49}},"132":{"start":{"line":242,"column":9},"end":{"line":246,"column":3}},"133":{"start":{"line":243,"column":4},"end":{"line":243,"column":49}},"134":{"start":{"line":244,"column":9},"end":{"line":246,"column":3}},"135":{"start":{"line":245,"column":4},"end":{"line":245,"column":49}},"136":{"start":{"line":247,"column":2},"end":{"line":247,"column":25}}},"fnMap":{"0":{"name":"convertTonNumber","decl":{"start":{"line":10,"column":16},"end":{"line":10,"column":32}},"loc":{"start":{"line":10,"column":46},"end":{"line":17,"column":1}},"line":10},"1":{"name":"isSingleValueObject","decl":{"start":{"line":18,"column":16},"end":{"line":18,"column":35}},"loc":{"start":{"line":18,"column":49},"end":{"line":36,"column":1}},"line":18},"2":{"name":"objectValueToCellValue","decl":{"start":{"line":37,"column":16},"end":{"line":37,"column":38}},"loc":{"start":{"line":37,"column":52},"end":{"line":110,"column":1}},"line":37},"3":{"name":"calculateMaxDimensions","decl":{"start":{"line":111,"column":16},"end":{"line":111,"column":38}},"loc":{"start":{"line":111,"column":49},"end":{"line":127,"column":1}},"line":111},"4":{"name":"(anonymous_4)","decl":{"start":{"line":114,"column":19},"end":{"line":114,"column":20}},"loc":{"start":{"line":114,"column":35},"end":{"line":125,"column":3}},"line":114},"5":{"name":"getErrorArray","decl":{"start":{"line":128,"column":16},"end":{"line":128,"column":29}},"loc":{"start":{"line":128,"column":81},"end":{"line":141,"column":1}},"line":128},"6":{"name":"getBooleanResults","decl":{"start":{"line":142,"column":16},"end":{"line":142,"column":33}},"loc":{"start":{"line":142,"column":102},"end":{"line":168,"column":1}},"line":142},"7":{"name":"(anonymous_7)","decl":{"start":{"line":149,"column":27},"end":{"line":149,"column":28}},"loc":{"start":{"line":149,"column":75},"end":{"line":165,"column":5}},"line":149},"8":{"name":"filterSameValueObjectResult","decl":{"start":{"line":169,"column":16},"end":{"line":169,"column":43}},"loc":{"start":{"line":169,"column":68},"end":{"line":197,"column":1}},"line":169},"9":{"name":"(anonymous_9)","decl":{"start":{"line":171,"column":24},"end":{"line":171,"column":25}},"loc":{"start":{"line":171,"column":47},"end":{"line":196,"column":3}},"line":171},"10":{"name":"isSameValueObjectType","decl":{"start":{"line":198,"column":16},"end":{"line":198,"column":37}},"loc":{"start":{"line":198,"column":51},"end":{"line":214,"column":1}},"line":198},"11":{"name":"(anonymous_11)","decl":{"start":{"line":215,"column":50},"end":{"line":215,"column":51}},"loc":{"start":{"line":215,"column":76},"end":{"line":220,"column":1}},"line":215},"12":{"name":"getReferenceObjectFromCache","decl":{"start":{"line":221,"column":16},"end":{"line":221,"column":43}},"loc":{"start":{"line":221,"column":61},"end":{"line":237,"column":1}},"line":221},"13":{"name":"getRangeReferenceObjectFromCache","decl":{"start":{"line":238,"column":16},"end":{"line":238,"column":48}},"loc":{"start":{"line":238,"column":69},"end":{"line":248,"column":1}},"line":238}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},{"start":{},"end":{}}],"line":13},"1":{"loc":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},{"start":{},"end":{}}],"line":19},"2":{"loc":{"start":{"line":19,"column":6},"end":{"line":19,"column":100}},"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":27}},{"start":{"line":19,"column":31},"end":{"line":19,"column":62}},{"start":{"line":19,"column":66},"end":{"line":19,"column":100}}],"line":19},"3":{"loc":{"start":{"line":22,"column":2},"end":{"line":30,"column":3}},"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":30,"column":3}},{"start":{},"end":{}}],"line":22},"4":{"loc":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},{"start":{},"end":{}}],"line":23},"5":{"loc":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},{"start":{},"end":{}}],"line":26},"6":{"loc":{"start":{"line":26,"column":8},"end":{"line":26,"column":77}},"type":"binary-expr","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":39}},{"start":{"line":26,"column":43},"end":{"line":26,"column":77}}],"line":26},"7":{"loc":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},{"start":{},"end":{}}],"line":32},"8":{"loc":{"start":{"line":32,"column":6},"end":{"line":32,"column":130}},"type":"binary-expr","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":28}},{"start":{"line":32,"column":32},"end":{"line":32,"column":54}},{"start":{"line":32,"column":58},"end":{"line":32,"column":81}},{"start":{"line":32,"column":85},"end":{"line":32,"column":106}},{"start":{"line":32,"column":110},"end":{"line":32,"column":130}}],"line":32},"9":{"loc":{"start":{"line":41,"column":2},"end":{"line":49,"column":3}},"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":49,"column":3}},{"start":{},"end":{}}],"line":41},"10":{"loc":{"start":{"line":50,"column":2},"end":{"line":54,"column":3}},"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":54,"column":3}},{"start":{},"end":{}}],"line":50},"11":{"loc":{"start":{"line":55,"column":2},"end":{"line":60,"column":3}},"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":60,"column":3}},{"start":{},"end":{}}],"line":55},"12":{"loc":{"start":{"line":61,"column":2},"end":{"line":68,"column":3}},"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":68,"column":3}},{"start":{},"end":{}}],"line":61},"13":{"loc":{"start":{"line":69,"column":2},"end":{"line":109,"column":3}},"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":109,"column":3}},{"start":{},"end":{}}],"line":69},"14":{"loc":{"start":{"line":72,"column":4},"end":{"line":79,"column":5}},"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":79,"column":5}},{"start":{},"end":{}}],"line":72},"15":{"loc":{"start":{"line":80,"column":4},"end":{"line":87,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":87,"column":5}},{"start":{},"end":{}}],"line":80},"16":{"loc":{"start":{"line":82,"column":11},"end":{"line":82,"column":20}},"type":"cond-expr","locations":[{"start":{"line":82,"column":15},"end":{"line":82,"column":16}},{"start":{"line":82,"column":19},"end":{"line":82,"column":20}}],"line":82},"17":{"loc":{"start":{"line":88,"column":4},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":95,"column":5}},{"start":{},"end":{}}],"line":88},"18":{"loc":{"start":{"line":96,"column":4},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":102,"column":5}},{"start":{},"end":{}}],"line":96},"19":{"loc":{"start":{"line":115,"column":4},"end":{"line":124,"column":5}},"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":124,"column":5}},{"start":{},"end":{}}],"line":115},"20":{"loc":{"start":{"line":116,"column":6},"end":{"line":123,"column":7}},"type":"if","locations":[{"start":{"line":116,"column":6},"end":{"line":123,"column":7}},{"start":{"line":120,"column":13},"end":{"line":123,"column":7}}],"line":116},"21":{"loc":{"start":{"line":132,"column":4},"end":{"line":132,"column":30}},"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":30}},{"start":{},"end":{}}],"line":132},"22":{"loc":{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},{"start":{},"end":{}}],"line":136},"23":{"loc":{"start":{"line":136,"column":8},"end":{"line":136,"column":80}},"type":"binary-expr","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":39}},{"start":{"line":136,"column":43},"end":{"line":136,"column":80}}],"line":136},"24":{"loc":{"start":{"line":142,"column":75},"end":{"line":142,"column":100}},"type":"default-arg","locations":[{"start":{"line":142,"column":95},"end":{"line":142,"column":100}}],"line":142},"25":{"loc":{"start":{"line":145,"column":4},"end":{"line":145,"column":30}},"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":30}},{"start":{},"end":{}}],"line":145},"26":{"loc":{"start":{"line":150,"column":6},"end":{"line":152,"column":7}},"type":"if","locations":[{"start":{"line":150,"column":6},"end":{"line":152,"column":7}},{"start":{},"end":{}}],"line":150},"27":{"loc":{"start":{"line":154,"column":6},"end":{"line":156,"column":7}},"type":"if","locations":[{"start":{"line":154,"column":6},"end":{"line":156,"column":7}},{"start":{},"end":{}}],"line":154},"28":{"loc":{"start":{"line":157,"column":6},"end":{"line":159,"column":7}},"type":"if","locations":[{"start":{"line":157,"column":6},"end":{"line":159,"column":7}},{"start":{},"end":{}}],"line":157},"29":{"loc":{"start":{"line":160,"column":6},"end":{"line":163,"column":7}},"type":"if","locations":[{"start":{"line":160,"column":6},"end":{"line":163,"column":7}},{"start":{},"end":{}}],"line":160},"30":{"loc":{"start":{"line":173,"column":4},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":195,"column":5}},{"start":{"line":175,"column":11},"end":{"line":195,"column":5}}],"line":173},"31":{"loc":{"start":{"line":173,"column":8},"end":{"line":173,"column":83}},"type":"binary-expr","locations":[{"start":{"line":173,"column":8},"end":{"line":173,"column":24}},{"start":{"line":173,"column":28},"end":{"line":173,"column":83}}],"line":173},"32":{"loc":{"start":{"line":175,"column":11},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":175,"column":11},"end":{"line":195,"column":5}},{"start":{"line":183,"column":11},"end":{"line":195,"column":5}}],"line":175},"33":{"loc":{"start":{"line":176,"column":6},"end":{"line":181,"column":7}},"type":"if","locations":[{"start":{"line":176,"column":6},"end":{"line":181,"column":7}},{"start":{},"end":{}}],"line":176},"34":{"loc":{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},"type":"if","locations":[{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},{"start":{},"end":{}}],"line":178},"35":{"loc":{"start":{"line":183,"column":11},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":183,"column":11},"end":{"line":195,"column":5}},{"start":{"line":191,"column":11},"end":{"line":195,"column":5}}],"line":183},"36":{"loc":{"start":{"line":184,"column":6},"end":{"line":189,"column":7}},"type":"if","locations":[{"start":{"line":184,"column":6},"end":{"line":189,"column":7}},{"start":{},"end":{}}],"line":184},"37":{"loc":{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},"type":"if","locations":[{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},{"start":{},"end":{}}],"line":186},"38":{"loc":{"start":{"line":191,"column":11},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":191,"column":11},"end":{"line":195,"column":5}},{"start":{"line":193,"column":11},"end":{"line":195,"column":5}}],"line":191},"39":{"loc":{"start":{"line":191,"column":15},"end":{"line":191,"column":131}},"type":"binary-expr","locations":[{"start":{"line":191,"column":15},"end":{"line":191,"column":42}},{"start":{"line":191,"column":46},"end":{"line":191,"column":70}},{"start":{"line":191,"column":74},"end":{"line":191,"column":131}}],"line":191},"40":{"loc":{"start":{"line":199,"column":2},"end":{"line":201,"column":3}},"type":"if","locations":[{"start":{"line":199,"column":2},"end":{"line":201,"column":3}},{"start":{},"end":{}}],"line":199},"41":{"loc":{"start":{"line":199,"column":6},"end":{"line":199,"column":41}},"type":"binary-expr","locations":[{"start":{"line":199,"column":6},"end":{"line":199,"column":21}},{"start":{"line":199,"column":25},"end":{"line":199,"column":41}}],"line":199},"42":{"loc":{"start":{"line":202,"column":2},"end":{"line":204,"column":3}},"type":"if","locations":[{"start":{"line":202,"column":2},"end":{"line":204,"column":3}},{"start":{},"end":{}}],"line":202},"43":{"loc":{"start":{"line":202,"column":6},"end":{"line":202,"column":43}},"type":"binary-expr","locations":[{"start":{"line":202,"column":6},"end":{"line":202,"column":22}},{"start":{"line":202,"column":26},"end":{"line":202,"column":43}}],"line":202},"44":{"loc":{"start":{"line":205,"column":22},"end":{"line":205,"column":63}},"type":"binary-expr","locations":[{"start":{"line":205,"column":22},"end":{"line":205,"column":37}},{"start":{"line":205,"column":41},"end":{"line":205,"column":63}}],"line":205},"45":{"loc":{"start":{"line":206,"column":23},"end":{"line":206,"column":66}},"type":"binary-expr","locations":[{"start":{"line":206,"column":23},"end":{"line":206,"column":39}},{"start":{"line":206,"column":43},"end":{"line":206,"column":66}}],"line":206},"46":{"loc":{"start":{"line":207,"column":2},"end":{"line":209,"column":3}},"type":"if","locations":[{"start":{"line":207,"column":2},"end":{"line":209,"column":3}},{"start":{},"end":{}}],"line":207},"47":{"loc":{"start":{"line":207,"column":6},"end":{"line":207,"column":72}},"type":"binary-expr","locations":[{"start":{"line":207,"column":7},"end":{"line":207,"column":18}},{"start":{"line":207,"column":22},"end":{"line":207,"column":35}},{"start":{"line":207,"column":41},"end":{"line":207,"column":53}},{"start":{"line":207,"column":57},"end":{"line":207,"column":71}}],"line":207},"48":{"loc":{"start":{"line":210,"column":2},"end":{"line":212,"column":3}},"type":"if","locations":[{"start":{"line":210,"column":2},"end":{"line":212,"column":3}},{"start":{},"end":{}}],"line":210},"49":{"loc":{"start":{"line":210,"column":6},"end":{"line":210,"column":74}},"type":"binary-expr","locations":[{"start":{"line":210,"column":6},"end":{"line":210,"column":21}},{"start":{"line":210,"column":25},"end":{"line":210,"column":37}},{"start":{"line":210,"column":41},"end":{"line":210,"column":57}},{"start":{"line":210,"column":61},"end":{"line":210,"column":74}}],"line":210},"50":{"loc":{"start":{"line":220,"column":3},"end":{"line":220,"column":28}},"type":"binary-expr","locations":[{"start":{"line":220,"column":3},"end":{"line":220,"column":22}},{"start":{"line":220,"column":26},"end":{"line":220,"column":28}}],"line":220},"51":{"loc":{"start":{"line":223,"column":2},"end":{"line":235,"column":3}},"type":"switch","locations":[{"start":{"line":224,"column":4},"end":{"line":226,"column":12}},{"start":{"line":227,"column":4},"end":{"line":229,"column":12}},{"start":{"line":230,"column":4},"end":{"line":232,"column":12}},{"start":{"line":233,"column":4},"end":{"line":234,"column":55}}],"line":223},"52":{"loc":{"start":{"line":240,"column":2},"end":{"line":246,"column":3}},"type":"if","locations":[{"start":{"line":240,"column":2},"end":{"line":246,"column":3}},{"start":{"line":242,"column":9},"end":{"line":246,"column":3}}],"line":240},"53":{"loc":{"start":{"line":240,"column":6},"end":{"line":240,"column":44}},"type":"binary-expr","locations":[{"start":{"line":240,"column":6},"end":{"line":240,"column":23}},{"start":{"line":240,"column":27},"end":{"line":240,"column":44}}],"line":240},"54":{"loc":{"start":{"line":242,"column":9},"end":{"line":246,"column":3}},"type":"if","locations":[{"start":{"line":242,"column":9},"end":{"line":246,"column":3}},{"start":{"line":244,"column":9},"end":{"line":246,"column":3}}],"line":242},"55":{"loc":{"start":{"line":242,"column":13},"end":{"line":242,"column":49}},"type":"binary-expr","locations":[{"start":{"line":242,"column":13},"end":{"line":242,"column":29}},{"start":{"line":242,"column":33},"end":{"line":242,"column":49}}],"line":242},"56":{"loc":{"start":{"line":244,"column":9},"end":{"line":246,"column":3}},"type":"if","locations":[{"start":{"line":244,"column":9},"end":{"line":246,"column":3}},{"start":{},"end":{}}],"line":244},"57":{"loc":{"start":{"line":244,"column":13},"end":{"line":244,"column":55}},"type":"binary-expr","locations":[{"start":{"line":244,"column":13},"end":{"line":244,"column":32}},{"start":{"line":244,"column":36},"end":{"line":244,"column":55}}],"line":244}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":1,"117":1,"118":1,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0,0],"48":[0,0],"49":[0,0,0,0],"50":[1,1],"51":[0,0,0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/value-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, Nullable } from '@univerjs/core';\nimport type { BaseReferenceObject, FunctionVariantType } from '../reference-object/base-reference-object';\nimport type { ArrayValueObject } from '../value-object/array-value-object';\nimport type { BaseValueObject } from '../value-object/base-value-object';\nimport { CellValueType } from '@univerjs/core';\nimport { ErrorType } from '../../basics/error-type';\nimport { CellReferenceObject } from '../reference-object/cell-reference-object';\nimport { ColumnReferenceObject } from '../reference-object/column-reference-object';\nimport { RowReferenceObject } from '../reference-object/row-reference-object';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { BooleanValueObject, NumberValueObject } from '../value-object/primitive-object';\nimport { expandArrayValueObject } from './array-object';\nimport { booleanObjectIntersection, findCompareToken, valueObjectCompare } from './object-compare';\n\nexport function convertTonNumber(valueObject: BaseValueObject) {\n    const currentValue = valueObject.getValue();\n    let result = 0;\n    if (currentValue) {\n        result = 1;\n    }\n    return NumberValueObject.create(result);\n}\n\nexport function isSingleValueObject(valueObject: FunctionVariantType) {\n    if (valueObject.isArray() && (valueObject as ArrayValueObject).getRowCount() === 1 && (valueObject as ArrayValueObject).getColumnCount() === 1) {\n        return true;\n    }\n\n    if (valueObject.isReferenceObject()) {\n        if ((valueObject as BaseReferenceObject).isCell()) {\n            return true;\n        }\n\n        if ((valueObject as BaseReferenceObject).getRowCount() === 1 && (valueObject as BaseReferenceObject).getColumnCount() === 1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    valueObject = valueObject as BaseValueObject;\n\n    if (valueObject.isString() || valueObject.isNumber() || valueObject.isBoolean() || valueObject.isError() || valueObject.isNull()) {\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Covert BaseValueObject to cell value\n * @param objectValue\n * @returns\n */\nexport function objectValueToCellValue(objectValue: Nullable<BaseValueObject>): ICellData | undefined {\n    const pattern = objectValue?.getPattern();\n    let cellWithStyle: ICellData = {};\n    let cellWithCustomData: ICellData = {};\n\n    if (pattern) {\n        cellWithStyle = {\n            s: {\n                n: {\n                    pattern,\n                },\n            },\n        };\n    }\n\n    if (objectValue?.getCustomData()) {\n        cellWithCustomData = {\n            custom: objectValue.getCustomData(),\n        };\n    }\n\n    if (objectValue == null) {\n        return {\n            v: null,\n            ...cellWithStyle,\n        };\n    }\n    if (objectValue.isError()) {\n        return {\n            v: (objectValue as ErrorValueObject).getErrorType() as string,\n            t: CellValueType.STRING,\n            ...cellWithStyle,\n            ...cellWithCustomData,\n        };\n    }\n    if (objectValue.isValueObject()) {\n        const vo = objectValue as BaseValueObject;\n        const v = vo.getValue();\n        if (vo.isNumber()) {\n            return {\n                v,\n                t: CellValueType.NUMBER,\n                ...cellWithStyle,\n                ...cellWithCustomData,\n            };\n        }\n        if (vo.isBoolean()) {\n            return {\n                v: v ? 1 : 0,\n                t: CellValueType.BOOLEAN,\n                ...cellWithStyle,\n                ...cellWithCustomData,\n            };\n        }\n        // String \"00\"\n        // =IF(1,\"0\") evaluates to \"0\", which should be a normal string (regardless of whether it is a number or not). Forced strings only appear when preceded by single quotes\n        if (vo.isString()) {\n            return {\n                v,\n                t: CellValueType.STRING,\n                ...cellWithStyle,\n                ...cellWithCustomData,\n            };\n        }\n\n        if (vo.isNull()) {\n            return {\n                v: null,\n                ...cellWithStyle,\n                ...cellWithCustomData,\n            };\n        }\n\n        return {\n            v,\n            t: CellValueType.STRING,\n            ...cellWithStyle,\n            ...cellWithCustomData,\n        };\n    }\n}\n\n/**\n * The size of the extended range is determined by the maximum width and height of the criteria range.\n * @param variants\n * @returns\n */\nexport function calculateMaxDimensions(variants: BaseValueObject[]) {\n    let maxRowLength = 0;\n    let maxColumnLength = 0;\n\n    variants.forEach((variant, i) => {\n        if (i % 2 === 1) {\n            if (variant.isArray()) {\n                const arrayValue = variant as ArrayValueObject;\n                maxRowLength = Math.max(maxRowLength, arrayValue.getRowCount());\n                maxColumnLength = Math.max(maxColumnLength, arrayValue.getColumnCount());\n            } else {\n                maxRowLength = Math.max(maxRowLength, 1);\n                maxColumnLength = Math.max(maxColumnLength, 1);\n            }\n        }\n    });\n\n    return { maxRowLength, maxColumnLength };\n}\n\nexport function getErrorArray(variants: BaseValueObject[], sumRange: BaseValueObject, maxRowLength: number, maxColumnLength: number) {\n    const sumRowLength = (sumRange as ArrayValueObject).getRowCount();\n    const sumColumnLength = (sumRange as ArrayValueObject).getColumnCount();\n\n    for (let i = 0; i < variants.length; i++) {\n        if (i % 2 === 1) continue;\n\n        const range = variants[i];\n\n        const rangeRowLength = (range as ArrayValueObject).getRowCount();\n        const rangeColumnLength = (range as ArrayValueObject).getColumnCount();\n        if (rangeRowLength !== sumRowLength || rangeColumnLength !== sumColumnLength) {\n            return expandArrayValueObject(maxRowLength, maxColumnLength, ErrorValueObject.create(ErrorType.VALUE));\n        }\n    }\n\n    return null;\n}\n\nexport function getBooleanResults(variants: BaseValueObject[], maxRowLength: number, maxColumnLength: number, isNumberSensitive: boolean = false) {\n    const booleanResults: BaseValueObject[][] = [];\n\n    for (let i = 0; i < variants.length; i++) {\n        if (i % 2 === 1) continue;\n\n        const range = variants[i];\n        const criteria = variants[i + 1];\n        const criteriaArray = expandArrayValueObject(maxRowLength, maxColumnLength, criteria, ErrorValueObject.create(ErrorType.NA));\n\n        criteriaArray.iterator((criteriaValueObject, rowIndex, columnIndex) => {\n            if (!criteriaValueObject) {\n                return;\n            }\n\n            // range must be an ArrayValueObject, criteria must be a BaseValueObject\n            let resultArrayObject = valueObjectCompare(range, criteriaValueObject);\n\n            // When comparing non-numbers and numbers, countifs does not take the result\n            if (isNumberSensitive) {\n                resultArrayObject = filterSameValueObjectResult(resultArrayObject as ArrayValueObject, range as ArrayValueObject, criteriaValueObject);\n            }\n\n            if (booleanResults[rowIndex] === undefined) {\n                booleanResults[rowIndex] = [];\n            }\n\n            if (booleanResults[rowIndex][columnIndex] === undefined) {\n                booleanResults[rowIndex][columnIndex] = resultArrayObject;\n                return;\n            }\n\n            booleanResults[rowIndex][columnIndex] = booleanObjectIntersection(booleanResults[rowIndex][columnIndex], resultArrayObject);\n        });\n    }\n\n    return booleanResults;\n}\n\n/**\n * Two valueObjects of the same type can be compared\n * @param array\n * @param range\n * @param criteria\n * @returns\n */\nexport function filterSameValueObjectResult(array: ArrayValueObject, range: ArrayValueObject, criteria: BaseValueObject) {\n    const [operator, criteriaObject] = findCompareToken(`${criteria.getValue()}`);\n\n    return array.mapValue((valueObject, r, c) => {\n        const rangeValueObject = range.get(r, c);\n\n        if (rangeValueObject && isSameValueObjectType(rangeValueObject, criteriaObject)) {\n            return valueObject;\n        } else if (rangeValueObject?.isNumber()) {\n            if (criteriaObject.isString()) {\n                const criteriaNumber = criteriaObject.convertToNumberObjectValue();\n\n                if (criteriaNumber.isNumber()) {\n                    return rangeValueObject.compare(criteriaNumber, operator);\n                }\n            }\n\n            return BooleanValueObject.create(false);\n        } else if (criteriaObject.isNumber()) {\n            if (rangeValueObject?.isString()) {\n                const rangeNumber = rangeValueObject.convertToNumberObjectValue();\n\n                if (rangeNumber.isNumber()) {\n                    return rangeNumber.compare(criteriaObject, operator);\n                }\n            }\n\n            return BooleanValueObject.create(false);\n        } else if (rangeValueObject?.isError() && criteriaObject.isError() && rangeValueObject.getValue() === criteriaObject.getValue()) {\n            return BooleanValueObject.create(true);\n        } else {\n            return BooleanValueObject.create(false);\n        }\n    });\n}\n\n/**\n * Check if the two valueObjects are of the same type\n * @param left\n * @param right\n * @returns\n */\nexport function isSameValueObjectType(left: BaseValueObject, right: BaseValueObject) {\n    if (left.isNumber() && right.isNumber()) {\n        return true;\n    }\n\n    if (left.isBoolean() && right.isBoolean()) {\n        return true;\n    }\n\n    // blank string is same as a blank cell\n    const isLeftBlank = left.isString() && left.getValue() === '';\n    const isRightBlank = right.isString() && right.getValue() === '';\n\n    if ((isLeftBlank || left.isNull()) && (isRightBlank || right.isNull())) {\n        return true;\n    }\n\n    if (left.isString() && !isLeftBlank && right.isString() && !isRightBlank) {\n        return true;\n    }\n\n    return false;\n}\n\nexport enum ReferenceObjectType {\n    CELL,\n    COLUMN,\n    ROW,\n}\n\nexport function getReferenceObjectFromCache(trimToken: string, type: ReferenceObjectType) {\n    let referenceObject: BaseReferenceObject;\n    switch (type) {\n        case ReferenceObjectType.CELL:\n            referenceObject = new CellReferenceObject(trimToken);\n            break;\n        case ReferenceObjectType.COLUMN:\n            referenceObject = new ColumnReferenceObject(trimToken);\n            break;\n        case ReferenceObjectType.ROW:\n            referenceObject = new RowReferenceObject(trimToken);\n            break;\n        default:\n            throw new Error('Unknown reference object type');\n    }\n\n    return referenceObject;\n}\n\nexport function getRangeReferenceObjectFromCache(variant1: BaseReferenceObject, variant2: BaseReferenceObject) {\n    let referenceObject: FunctionVariantType = ErrorValueObject.create(ErrorType.NAME);\n    if (variant1.isCell() && variant2.isCell()) {\n        referenceObject = variant1.unionBy(variant2) as BaseReferenceObject;\n    } else if (variant1.isRow() && variant2.isRow()) {\n        referenceObject = variant1.unionBy(variant2) as BaseReferenceObject;\n    } else if (variant1.isColumn() && variant2.isColumn()) {\n        referenceObject = variant1.unionBy(variant2) as BaseReferenceObject;\n    }\n\n    return referenceObject;\n}\n"],"mappings":"AAoBA,SAAS,qBAAqB;AAC9B,SAAS,iBAAiB;AAC1B,SAAS,2BAA2B;AACpC,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,wBAAwB;AACjC,SAAS,oBAAoB,yBAAyB;AACtD,SAAS,8BAA8B;AACvC,SAAS,2BAA2B,kBAAkB,0BAA0B;AAEzE,gBAAS,iBAAiB,aAA8B;AAC3D,QAAM,eAAe,YAAY,SAAS;AAC1C,MAAI,SAAS;AACb,MAAI,cAAc;AACd,aAAS;AAAA,EACb;AACA,SAAO,kBAAkB,OAAO,MAAM;AAC1C;AAEO,gBAAS,oBAAoB,aAAkC;AAClE,MAAI,YAAY,QAAQ,KAAM,YAAiC,YAAY,MAAM,KAAM,YAAiC,eAAe,MAAM,GAAG;AAC5I,WAAO;AAAA,EACX;AAEA,MAAI,YAAY,kBAAkB,GAAG;AACjC,QAAK,YAAoC,OAAO,GAAG;AAC/C,aAAO;AAAA,IACX;AAEA,QAAK,YAAoC,YAAY,MAAM,KAAM,YAAoC,eAAe,MAAM,GAAG;AACzH,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAEA,gBAAc;AAEd,MAAI,YAAY,SAAS,KAAK,YAAY,SAAS,KAAK,YAAY,UAAU,KAAK,YAAY,QAAQ,KAAK,YAAY,OAAO,GAAG;AAC9H,WAAO;AAAA,EACX;AAEA,SAAO;AACX;AAOO,gBAAS,uBAAuB,aAA+D;AAClG,QAAM,UAAU,aAAa,WAAW;AACxC,MAAI,gBAA2B,CAAC;AAChC,MAAI,qBAAgC,CAAC;AAErC,MAAI,SAAS;AACT,oBAAgB;AAAA,MACZ,GAAG;AAAA,QACC,GAAG;AAAA,UACC;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEA,MAAI,aAAa,cAAc,GAAG;AAC9B,yBAAqB;AAAA,MACjB,QAAQ,YAAY,cAAc;AAAA,IACtC;AAAA,EACJ;AAEA,MAAI,eAAe,MAAM;AACrB,WAAO;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACP;AAAA,EACJ;AACA,MAAI,YAAY,QAAQ,GAAG;AACvB,WAAO;AAAA,MACH,GAAI,YAAiC,aAAa;AAAA,MAClD,GAAG,cAAc;AAAA,MACjB,GAAG;AAAA,MACH,GAAG;AAAA,IACP;AAAA,EACJ;AACA,MAAI,YAAY,cAAc,GAAG;AAC7B,UAAM,KAAK;AACX,UAAM,IAAI,GAAG,SAAS;AACtB,QAAI,GAAG,SAAS,GAAG;AACf,aAAO;AAAA,QACH;AAAA,QACA,GAAG,cAAc;AAAA,QACjB,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AACA,QAAI,GAAG,UAAU,GAAG;AAChB,aAAO;AAAA,QACH,GAAG,IAAI,IAAI;AAAA,QACX,GAAG,cAAc;AAAA,QACjB,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAGA,QAAI,GAAG,SAAS,GAAG;AACf,aAAO;AAAA,QACH;AAAA,QACA,GAAG,cAAc;AAAA,QACjB,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAEA,QAAI,GAAG,OAAO,GAAG;AACb,aAAO;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAAA,IACJ;AAEA,WAAO;AAAA,MACH;AAAA,MACA,GAAG,cAAc;AAAA,MACjB,GAAG;AAAA,MACH,GAAG;AAAA,IACP;AAAA,EACJ;AACJ;AAOO,gBAAS,uBAAuB,UAA6B;AAChE,MAAI,eAAe;AACnB,MAAI,kBAAkB;AAEtB,WAAS,QAAQ,CAAC,SAAS,MAAM;AAC7B,QAAI,IAAI,MAAM,GAAG;AACb,UAAI,QAAQ,QAAQ,GAAG;AACnB,cAAM,aAAa;AACnB,uBAAe,KAAK,IAAI,cAAc,WAAW,YAAY,CAAC;AAC9D,0BAAkB,KAAK,IAAI,iBAAiB,WAAW,eAAe,CAAC;AAAA,MAC3E,OAAO;AACH,uBAAe,KAAK,IAAI,cAAc,CAAC;AACvC,0BAAkB,KAAK,IAAI,iBAAiB,CAAC;AAAA,MACjD;AAAA,IACJ;AAAA,EACJ,CAAC;AAED,SAAO,EAAE,cAAc,gBAAgB;AAC3C;AAEO,gBAAS,cAAc,UAA6B,UAA2B,cAAsB,iBAAyB;AACjI,QAAM,eAAgB,SAA8B,YAAY;AAChE,QAAM,kBAAmB,SAA8B,eAAe;AAEtE,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,QAAI,IAAI,MAAM,EAAG;AAEjB,UAAM,QAAQ,SAAS,CAAC;AAExB,UAAM,iBAAkB,MAA2B,YAAY;AAC/D,UAAM,oBAAqB,MAA2B,eAAe;AACrE,QAAI,mBAAmB,gBAAgB,sBAAsB,iBAAiB;AAC1E,aAAO,uBAAuB,cAAc,iBAAiB,iBAAiB,OAAO,UAAU,KAAK,CAAC;AAAA,IACzG;AAAA,EACJ;AAEA,SAAO;AACX;AAEO,gBAAS,kBAAkB,UAA6B,cAAsB,iBAAyB,oBAA6B,OAAO;AAC9I,QAAM,iBAAsC,CAAC;AAE7C,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,QAAI,IAAI,MAAM,EAAG;AAEjB,UAAM,QAAQ,SAAS,CAAC;AACxB,UAAM,WAAW,SAAS,IAAI,CAAC;AAC/B,UAAM,gBAAgB,uBAAuB,cAAc,iBAAiB,UAAU,iBAAiB,OAAO,UAAU,EAAE,CAAC;AAE3H,kBAAc,SAAS,CAAC,qBAAqB,UAAU,gBAAgB;AACnE,UAAI,CAAC,qBAAqB;AACtB;AAAA,MACJ;AAGA,UAAI,oBAAoB,mBAAmB,OAAO,mBAAmB;AAGrE,UAAI,mBAAmB;AACnB,4BAAoB,4BAA4B,mBAAuC,OAA2B,mBAAmB;AAAA,MACzI;AAEA,UAAI,eAAe,QAAQ,MAAM,QAAW;AACxC,uBAAe,QAAQ,IAAI,CAAC;AAAA,MAChC;AAEA,UAAI,eAAe,QAAQ,EAAE,WAAW,MAAM,QAAW;AACrD,uBAAe,QAAQ,EAAE,WAAW,IAAI;AACxC;AAAA,MACJ;AAEA,qBAAe,QAAQ,EAAE,WAAW,IAAI,0BAA0B,eAAe,QAAQ,EAAE,WAAW,GAAG,iBAAiB;AAAA,IAC9H,CAAC;AAAA,EACL;AAEA,SAAO;AACX;AASO,gBAAS,4BAA4B,OAAyB,OAAyB,UAA2B;AACrH,QAAM,CAAC,UAAU,cAAc,IAAI,iBAAiB,GAAG,SAAS,SAAS,CAAC,EAAE;AAE5E,SAAO,MAAM,SAAS,CAAC,aAAa,GAAG,MAAM;AACzC,UAAM,mBAAmB,MAAM,IAAI,GAAG,CAAC;AAEvC,QAAI,oBAAoB,sBAAsB,kBAAkB,cAAc,GAAG;AAC7E,aAAO;AAAA,IACX,WAAW,kBAAkB,SAAS,GAAG;AACrC,UAAI,eAAe,SAAS,GAAG;AAC3B,cAAM,iBAAiB,eAAe,2BAA2B;AAEjE,YAAI,eAAe,SAAS,GAAG;AAC3B,iBAAO,iBAAiB,QAAQ,gBAAgB,QAAQ;AAAA,QAC5D;AAAA,MACJ;AAEA,aAAO,mBAAmB,OAAO,KAAK;AAAA,IAC1C,WAAW,eAAe,SAAS,GAAG;AAClC,UAAI,kBAAkB,SAAS,GAAG;AAC9B,cAAM,cAAc,iBAAiB,2BAA2B;AAEhE,YAAI,YAAY,SAAS,GAAG;AACxB,iBAAO,YAAY,QAAQ,gBAAgB,QAAQ;AAAA,QACvD;AAAA,MACJ;AAEA,aAAO,mBAAmB,OAAO,KAAK;AAAA,IAC1C,WAAW,kBAAkB,QAAQ,KAAK,eAAe,QAAQ,KAAK,iBAAiB,SAAS,MAAM,eAAe,SAAS,GAAG;AAC7H,aAAO,mBAAmB,OAAO,IAAI;AAAA,IACzC,OAAO;AACH,aAAO,mBAAmB,OAAO,KAAK;AAAA,IAC1C;AAAA,EACJ,CAAC;AACL;AAQO,gBAAS,sBAAsB,MAAuB,OAAwB;AACjF,MAAI,KAAK,SAAS,KAAK,MAAM,SAAS,GAAG;AACrC,WAAO;AAAA,EACX;AAEA,MAAI,KAAK,UAAU,KAAK,MAAM,UAAU,GAAG;AACvC,WAAO;AAAA,EACX;AAGA,QAAM,cAAc,KAAK,SAAS,KAAK,KAAK,SAAS,MAAM;AAC3D,QAAM,eAAe,MAAM,SAAS,KAAK,MAAM,SAAS,MAAM;AAE9D,OAAK,eAAe,KAAK,OAAO,OAAO,gBAAgB,MAAM,OAAO,IAAI;AACpE,WAAO;AAAA,EACX;AAEA,MAAI,KAAK,SAAS,KAAK,CAAC,eAAe,MAAM,SAAS,KAAK,CAAC,cAAc;AACtE,WAAO;AAAA,EACX;AAEA,SAAO;AACX;AAEO,WAAK,sBAAL,kBAAKA,yBAAL;AACH,EAAAA,0CAAA;AACA,EAAAA,0CAAA;AACA,EAAAA,0CAAA;AAHQ,SAAAA;AAAA,GAAA;AAML,gBAAS,4BAA4B,WAAmB,MAA2B;AACtF,MAAI;AACJ,UAAQ,MAAM;AAAA,IACV,KAAK;AACD,wBAAkB,IAAI,oBAAoB,SAAS;AACnD;AAAA,IACJ,KAAK;AACD,wBAAkB,IAAI,sBAAsB,SAAS;AACrD;AAAA,IACJ,KAAK;AACD,wBAAkB,IAAI,mBAAmB,SAAS;AAClD;AAAA,IACJ;AACI,YAAM,IAAI,MAAM,+BAA+B;AAAA,EACvD;AAEA,SAAO;AACX;AAEO,gBAAS,iCAAiC,UAA+B,UAA+B;AAC3G,MAAI,kBAAuC,iBAAiB,OAAO,UAAU,IAAI;AACjF,MAAI,SAAS,OAAO,KAAK,SAAS,OAAO,GAAG;AACxC,sBAAkB,SAAS,QAAQ,QAAQ;AAAA,EAC/C,WAAW,SAAS,MAAM,KAAK,SAAS,MAAM,GAAG;AAC7C,sBAAkB,SAAS,QAAQ,QAAQ;AAAA,EAC/C,WAAW,SAAS,SAAS,KAAK,SAAS,SAAS,GAAG;AACnD,sBAAkB,SAAS,QAAQ,QAAQ;AAAA,EAC/C;AAEA,SAAO;AACX;","names":["ReferenceObjectType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d4c9622b00e5d96445cfe3dd1956ec1f2519eb23"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/runtime.service.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/runtime.service.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":22,"column":53},"end":{"line":33,"column":33}},"15":{"start":{"line":23,"column":2},"end":{"line":23,"column":74}},"16":{"start":{"line":24,"column":2},"end":{"line":24,"column":76}},"17":{"start":{"line":25,"column":2},"end":{"line":25,"column":98}},"18":{"start":{"line":26,"column":2},"end":{"line":26,"column":100}},"19":{"start":{"line":27,"column":2},"end":{"line":27,"column":108}},"20":{"start":{"line":28,"column":2},"end":{"line":28,"column":126}},"21":{"start":{"line":29,"column":2},"end":{"line":29,"column":128}},"22":{"start":{"line":30,"column":2},"end":{"line":30,"column":136}},"23":{"start":{"line":31,"column":2},"end":{"line":31,"column":108}},"24":{"start":{"line":32,"column":2},"end":{"line":32,"column":34}},"25":{"start":{"line":34,"column":54},"end":{"line":40,"column":34}},"26":{"start":{"line":35,"column":2},"end":{"line":35,"column":82}},"27":{"start":{"line":36,"column":2},"end":{"line":36,"column":96}},"28":{"start":{"line":37,"column":2},"end":{"line":37,"column":92}},"29":{"start":{"line":38,"column":2},"end":{"line":38,"column":82}},"30":{"start":{"line":39,"column":2},"end":{"line":39,"column":35}},"31":{"start":{"line":41,"column":35},"end":{"line":472,"column":1}},"32":{"start":{"line":43,"column":4},"end":{"line":43,"column":12}},"33":{"start":{"line":44,"column":4},"end":{"line":44,"column":55}},"34":{"start":{"line":46,"column":25},"end":{"line":46,"column":26}},"35":{"start":{"line":47,"column":15},"end":{"line":47,"column":20}},"36":{"start":{"line":48,"column":16},"end":{"line":48,"column":18}},"37":{"start":{"line":49,"column":19},"end":{"line":49,"column":21}},"38":{"start":{"line":50,"column":21},"end":{"line":50,"column":45}},"39":{"start":{"line":51,"column":24},"end":{"line":51,"column":48}},"40":{"start":{"line":52,"column":22},"end":{"line":52,"column":24}},"41":{"start":{"line":53,"column":19},"end":{"line":53,"column":21}},"42":{"start":{"line":54,"column":17},"end":{"line":54,"column":19}},"43":{"start":{"line":55,"column":22},"end":{"line":55,"column":24}},"44":{"start":{"line":57,"column":27},"end":{"line":57,"column":29}},"45":{"start":{"line":58,"column":33},"end":{"line":58,"column":35}},"46":{"start":{"line":59,"column":38},"end":{"line":59,"column":40}},"47":{"start":{"line":60,"column":25},"end":{"line":60,"column":27}},"48":{"start":{"line":61,"column":28},"end":{"line":61,"column":30}},"49":{"start":{"line":62,"column":28},"end":{"line":62,"column":29}},"50":{"start":{"line":64,"column":50},"end":{"line":64,"column":59}},"51":{"start":{"line":65,"column":30},"end":{"line":65,"column":31}},"52":{"start":{"line":66,"column":28},"end":{"line":66,"column":29}},"53":{"start":{"line":67,"column":35},"end":{"line":67,"column":36}},"54":{"start":{"line":68,"column":33},"end":{"line":68,"column":34}},"55":{"start":{"line":69,"column":23},"end":{"line":69,"column":24}},"56":{"start":{"line":70,"column":23},"end":{"line":70,"column":28}},"57":{"start":{"line":72,"column":4},"end":{"line":72,"column":28}},"58":{"start":{"line":75,"column":4},"end":{"line":75,"column":31}},"59":{"start":{"line":78,"column":4},"end":{"line":78,"column":33}},"60":{"start":{"line":81,"column":4},"end":{"line":81,"column":36}},"61":{"start":{"line":84,"column":4},"end":{"line":84,"column":34}},"62":{"start":{"line":87,"column":4},"end":{"line":87,"column":31}},"63":{"start":{"line":90,"column":4},"end":{"line":90,"column":20}},"64":{"start":{"line":91,"column":4},"end":{"line":91,"column":17}},"65":{"start":{"line":92,"column":4},"end":{"line":92,"column":38}},"66":{"start":{"line":93,"column":4},"end":{"line":93,"column":35}},"67":{"start":{"line":94,"column":4},"end":{"line":94,"column":46}},"68":{"start":{"line":97,"column":4},"end":{"line":97,"column":35}},"69":{"start":{"line":100,"column":4},"end":{"line":100,"column":36}},"70":{"start":{"line":103,"column":4},"end":{"line":103,"column":35}},"71":{"start":{"line":106,"column":4},"end":{"line":106,"column":36}},"72":{"start":{"line":109,"column":4},"end":{"line":109,"column":35}},"73":{"start":{"line":112,"column":4},"end":{"line":112,"column":48}},"74":{"start":{"line":115,"column":4},"end":{"line":115,"column":47}},"75":{"start":{"line":118,"column":4},"end":{"line":118,"column":46}},"76":{"start":{"line":121,"column":4},"end":{"line":121,"column":45}},"77":{"start":{"line":124,"column":4},"end":{"line":124,"column":43}},"78":{"start":{"line":127,"column":4},"end":{"line":127,"column":42}},"79":{"start":{"line":130,"column":4},"end":{"line":130,"column":41}},"80":{"start":{"line":133,"column":4},"end":{"line":133,"column":40}},"81":{"start":{"line":136,"column":4},"end":{"line":136,"column":51}},"82":{"start":{"line":139,"column":4},"end":{"line":139,"column":56}},"83":{"start":{"line":142,"column":4},"end":{"line":142,"column":58}},"84":{"start":{"line":145,"column":4},"end":{"line":145,"column":51}},"85":{"start":{"line":148,"column":4},"end":{"line":148,"column":27}},"86":{"start":{"line":149,"column":4},"end":{"line":149,"column":46}},"87":{"start":{"line":152,"column":4},"end":{"line":152,"column":27}},"88":{"start":{"line":155,"column":4},"end":{"line":155,"column":37}},"89":{"start":{"line":158,"column":4},"end":{"line":158,"column":37}},"90":{"start":{"line":161,"column":4},"end":{"line":161,"column":45}},"91":{"start":{"line":162,"column":4},"end":{"line":162,"column":27}},"92":{"start":{"line":163,"column":4},"end":{"line":163,"column":32}},"93":{"start":{"line":164,"column":4},"end":{"line":164,"column":37}},"94":{"start":{"line":165,"column":4},"end":{"line":165,"column":43}},"95":{"start":{"line":166,"column":4},"end":{"line":166,"column":48}},"96":{"start":{"line":167,"column":4},"end":{"line":167,"column":47}},"97":{"start":{"line":168,"column":4},"end":{"line":168,"column":44}},"98":{"start":{"line":169,"column":4},"end":{"line":169,"column":28}},"99":{"start":{"line":170,"column":4},"end":{"line":170,"column":36}},"100":{"start":{"line":171,"column":4},"end":{"line":171,"column":39}},"101":{"start":{"line":172,"column":4},"end":{"line":172,"column":37}},"102":{"start":{"line":173,"column":4},"end":{"line":173,"column":46}},"103":{"start":{"line":176,"column":4},"end":{"line":176,"column":33}},"104":{"start":{"line":177,"column":4},"end":{"line":177,"column":38}},"105":{"start":{"line":178,"column":4},"end":{"line":178,"column":33}},"106":{"start":{"line":181,"column":4},"end":{"line":181,"column":27}},"107":{"start":{"line":182,"column":4},"end":{"line":182,"column":33}},"108":{"start":{"line":183,"column":4},"end":{"line":183,"column":37}},"109":{"start":{"line":184,"column":4},"end":{"line":184,"column":43}},"110":{"start":{"line":185,"column":4},"end":{"line":185,"column":37}},"111":{"start":{"line":186,"column":4},"end":{"line":186,"column":33}},"112":{"start":{"line":189,"column":4},"end":{"line":189,"column":47}},"113":{"start":{"line":192,"column":4},"end":{"line":192,"column":64}},"114":{"start":{"line":195,"column":4},"end":{"line":195,"column":60}},"115":{"start":{"line":198,"column":22},"end":{"line":198,"column":44}},"116":{"start":{"line":199,"column":19},"end":{"line":199,"column":38}},"117":{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},"118":{"start":{"line":201,"column":6},"end":{"line":201,"column":42}},"119":{"start":{"line":203,"column":21},"end":{"line":203,"column":51}},"120":{"start":{"line":204,"column":4},"end":{"line":206,"column":5}},"121":{"start":{"line":205,"column":6},"end":{"line":205,"column":31}},"122":{"start":{"line":207,"column":29},"end":{"line":207,"column":48}},"123":{"start":{"line":208,"column":20},"end":{"line":208,"column":22}},"124":{"start":{"line":209,"column":4},"end":{"line":223,"column":5}},"125":{"start":{"line":210,"column":36},"end":{"line":210,"column":51}},"126":{"start":{"line":211,"column":40},"end":{"line":211,"column":80}},"127":{"start":{"line":212,"column":6},"end":{"line":220,"column":9}},"128":{"start":{"line":213,"column":22},"end":{"line":213,"column":57}},"129":{"start":{"line":214,"column":20},"end":{"line":214,"column":39}},"130":{"start":{"line":215,"column":23},"end":{"line":215,"column":48}},"131":{"start":{"line":216,"column":8},"end":{"line":218,"column":9}},"132":{"start":{"line":217,"column":10},"end":{"line":217,"column":30}},"133":{"start":{"line":219,"column":8},"end":{"line":219,"column":39}},"134":{"start":{"line":222,"column":6},"end":{"line":222,"column":62}},"135":{"start":{"line":224,"column":4},"end":{"line":226,"column":5}},"136":{"start":{"line":225,"column":6},"end":{"line":225,"column":39}},"137":{"start":{"line":227,"column":4},"end":{"line":229,"column":5}},"138":{"start":{"line":228,"column":6},"end":{"line":228,"column":42}},"139":{"start":{"line":230,"column":4},"end":{"line":230,"column":50}},"140":{"start":{"line":234,"column":16},"end":{"line":234,"column":32}},"141":{"start":{"line":235,"column":19},"end":{"line":235,"column":38}},"142":{"start":{"line":236,"column":21},"end":{"line":236,"column":42}},"143":{"start":{"line":237,"column":24},"end":{"line":237,"column":47}},"144":{"start":{"line":238,"column":20},"end":{"line":238,"column":42}},"145":{"start":{"line":239,"column":19},"end":{"line":239,"column":38}},"146":{"start":{"line":240,"column":4},"end":{"line":242,"column":5}},"147":{"start":{"line":241,"column":6},"end":{"line":241,"column":37}},"148":{"start":{"line":243,"column":21},"end":{"line":243,"column":46}},"149":{"start":{"line":244,"column":4},"end":{"line":246,"column":5}},"150":{"start":{"line":245,"column":6},"end":{"line":245,"column":45}},"151":{"start":{"line":247,"column":4},"end":{"line":249,"column":5}},"152":{"start":{"line":248,"column":6},"end":{"line":248,"column":47}},"153":{"start":{"line":250,"column":30},"end":{"line":250,"column":65}},"154":{"start":{"line":251,"column":4},"end":{"line":253,"column":5}},"155":{"start":{"line":252,"column":6},"end":{"line":252,"column":38}},"156":{"start":{"line":254,"column":22},"end":{"line":254,"column":66}},"157":{"start":{"line":255,"column":4},"end":{"line":257,"column":5}},"158":{"start":{"line":256,"column":6},"end":{"line":256,"column":53}},"159":{"start":{"line":258,"column":40},"end":{"line":258,"column":81}},"160":{"start":{"line":259,"column":4},"end":{"line":261,"column":5}},"161":{"start":{"line":260,"column":6},"end":{"line":260,"column":64}},"162":{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},"163":{"start":{"line":263,"column":6},"end":{"line":263,"column":58}},"164":{"start":{"line":265,"column":38},"end":{"line":265,"column":84}},"165":{"start":{"line":266,"column":4},"end":{"line":268,"column":5}},"166":{"start":{"line":267,"column":6},"end":{"line":267,"column":62}},"167":{"start":{"line":269,"column":22},"end":{"line":269,"column":39}},"168":{"start":{"line":270,"column":33},"end":{"line":270,"column":69}},"169":{"start":{"line":271,"column":31},"end":{"line":271,"column":65}},"170":{"start":{"line":272,"column":4},"end":{"line":332,"column":5}},"171":{"start":{"line":273,"column":36},"end":{"line":273,"column":51}},"172":{"start":{"line":274,"column":59},"end":{"line":274,"column":99}},"173":{"start":{"line":275,"column":6},"end":{"line":281,"column":7}},"174":{"start":{"line":276,"column":26},"end":{"line":276,"column":62}},"175":{"start":{"line":277,"column":28},"end":{"line":277,"column":61}},"176":{"start":{"line":278,"column":8},"end":{"line":278,"column":53}},"177":{"start":{"line":279,"column":8},"end":{"line":279,"column":62}},"178":{"start":{"line":280,"column":8},"end":{"line":280,"column":15}},"179":{"start":{"line":282,"column":25},"end":{"line":287,"column":7}},"180":{"start":{"line":288,"column":6},"end":{"line":288,"column":50}},"181":{"start":{"line":289,"column":6},"end":{"line":327,"column":7}},"182":{"start":{"line":290,"column":28},"end":{"line":290,"column":92}},"183":{"start":{"line":291,"column":8},"end":{"line":291,"column":53}},"184":{"start":{"line":292,"column":8},"end":{"line":292,"column":62}},"185":{"start":{"line":293,"column":26},"end":{"line":293,"column":66}},"186":{"start":{"line":294,"column":8},"end":{"line":310,"column":11}},"187":{"start":{"line":295,"column":29},"end":{"line":295,"column":54}},"188":{"start":{"line":296,"column":32},"end":{"line":296,"column":66}},"189":{"start":{"line":297,"column":23},"end":{"line":297,"column":97}},"190":{"start":{"line":298,"column":10},"end":{"line":309,"column":11}},"191":{"start":{"line":299,"column":12},"end":{"line":299,"column":68}},"192":{"start":{"line":300,"column":17},"end":{"line":309,"column":11}},"193":{"start":{"line":301,"column":12},"end":{"line":303,"column":13}},"194":{"start":{"line":302,"column":14},"end":{"line":302,"column":26}},"195":{"start":{"line":304,"column":12},"end":{"line":304,"column":75}},"196":{"start":{"line":305,"column":17},"end":{"line":309,"column":11}},"197":{"start":{"line":306,"column":12},"end":{"line":306,"column":24}},"198":{"start":{"line":308,"column":12},"end":{"line":308,"column":80}},"199":{"start":{"line":312,"column":27},"end":{"line":312,"column":67}},"200":{"start":{"line":313,"column":8},"end":{"line":326,"column":11}},"201":{"start":{"line":314,"column":24},"end":{"line":314,"column":59}},"202":{"start":{"line":315,"column":10},"end":{"line":322,"column":11}},"203":{"start":{"line":316,"column":12},"end":{"line":320,"column":13}},"204":{"start":{"line":317,"column":14},"end":{"line":317,"column":59}},"205":{"start":{"line":318,"column":14},"end":{"line":318,"column":89}},"206":{"start":{"line":319,"column":14},"end":{"line":319,"column":27}},"207":{"start":{"line":321,"column":12},"end":{"line":321,"column":58}},"208":{"start":{"line":323,"column":29},"end":{"line":323,"column":54}},"209":{"start":{"line":324,"column":32},"end":{"line":324,"column":66}},"210":{"start":{"line":325,"column":10},"end":{"line":325,"column":74}},"211":{"start":{"line":329,"column":26},"end":{"line":329,"column":65}},"212":{"start":{"line":330,"column":6},"end":{"line":330,"column":51}},"213":{"start":{"line":331,"column":6},"end":{"line":331,"column":60}},"214":{"start":{"line":335,"column":4},"end":{"line":335,"column":29}},"215":{"start":{"line":338,"column":4},"end":{"line":338,"column":39}},"216":{"start":{"line":341,"column":4},"end":{"line":341,"column":34}},"217":{"start":{"line":344,"column":4},"end":{"line":344,"column":45}},"218":{"start":{"line":347,"column":4},"end":{"line":347,"column":50}},"219":{"start":{"line":350,"column":4},"end":{"line":350,"column":37}},"220":{"start":{"line":353,"column":4},"end":{"line":353,"column":56}},"221":{"start":{"line":356,"column":4},"end":{"line":356,"column":40}},"222":{"start":{"line":359,"column":4},"end":{"line":359,"column":58}},"223":{"start":{"line":362,"column":4},"end":{"line":371,"column":6}},"224":{"start":{"line":374,"column":4},"end":{"line":381,"column":6}},"225":{"start":{"line":385,"column":57},"end":{"line":385,"column":67}},"226":{"start":{"line":386,"column":21},"end":{"line":386,"column":61}},"227":{"start":{"line":387,"column":22},"end":{"line":387,"column":74}},"228":{"start":{"line":388,"column":34},"end":{"line":388,"column":125}},"229":{"start":{"line":389,"column":4},"end":{"line":405,"column":5}},"230":{"start":{"line":389,"column":17},"end":{"line":389,"column":25}},"231":{"start":{"line":390,"column":6},"end":{"line":404,"column":7}},"232":{"start":{"line":390,"column":19},"end":{"line":390,"column":30}},"233":{"start":{"line":391,"column":8},"end":{"line":393,"column":9}},"234":{"start":{"line":392,"column":10},"end":{"line":392,"column":19}},"235":{"start":{"line":394,"column":21},"end":{"line":394,"column":89}},"236":{"start":{"line":395,"column":30},"end":{"line":398,"column":9}},"237":{"start":{"line":399,"column":28},"end":{"line":399,"column":97}},"238":{"start":{"line":400,"column":28},"end":{"line":400,"column":97}},"239":{"start":{"line":401,"column":8},"end":{"line":403,"column":9}},"240":{"start":{"line":402,"column":10},"end":{"line":402,"column":22}},"241":{"start":{"line":406,"column":4},"end":{"line":406,"column":17}},"242":{"start":{"line":409,"column":4},"end":{"line":409,"column":93}},"243":{"start":{"line":412,"column":4},"end":{"line":414,"column":5}},"244":{"start":{"line":413,"column":6},"end":{"line":413,"column":19}},"245":{"start":{"line":415,"column":4},"end":{"line":417,"column":5}},"246":{"start":{"line":416,"column":6},"end":{"line":416,"column":18}},"247":{"start":{"line":418,"column":4},"end":{"line":418,"column":17}},"248":{"start":{"line":431,"column":30},"end":{"line":431,"column":112}},"249":{"start":{"line":432,"column":4},"end":{"line":434,"column":5}},"250":{"start":{"line":433,"column":6},"end":{"line":433,"column":19}},"251":{"start":{"line":435,"column":28},"end":{"line":435,"column":33}},"252":{"start":{"line":436,"column":36},"end":{"line":436,"column":71}},"253":{"start":{"line":437,"column":4},"end":{"line":446,"column":7}},"254":{"start":{"line":438,"column":6},"end":{"line":440,"column":7}},"255":{"start":{"line":439,"column":8},"end":{"line":439,"column":15}},"256":{"start":{"line":441,"column":28},"end":{"line":441,"column":68}},"257":{"start":{"line":442,"column":19},"end":{"line":442,"column":99}},"258":{"start":{"line":443,"column":6},"end":{"line":445,"column":7}},"259":{"start":{"line":444,"column":8},"end":{"line":444,"column":33}},"260":{"start":{"line":447,"column":4},"end":{"line":447,"column":29}},"261":{"start":{"line":450,"column":4},"end":{"line":452,"column":5}},"262":{"start":{"line":451,"column":6},"end":{"line":451,"column":19}},"263":{"start":{"line":453,"column":57},"end":{"line":453,"column":62}},"264":{"start":{"line":454,"column":4},"end":{"line":456,"column":5}},"265":{"start":{"line":455,"column":6},"end":{"line":455,"column":18}},"266":{"start":{"line":457,"column":4},"end":{"line":457,"column":17}},"267":{"start":{"line":460,"column":4},"end":{"line":462,"column":5}},"268":{"start":{"line":461,"column":6},"end":{"line":461,"column":18}},"269":{"start":{"line":463,"column":4},"end":{"line":463,"column":17}},"270":{"start":{"line":466,"column":24},"end":{"line":466,"column":67}},"271":{"start":{"line":467,"column":4},"end":{"line":469,"column":5}},"272":{"start":{"line":468,"column":6},"end":{"line":468,"column":18}},"273":{"start":{"line":470,"column":4},"end":{"line":470,"column":69}},"274":{"start":{"line":473,"column":0},"end":{"line":475,"column":26}},"275":{"start":{"line":476,"column":38},"end":{"line":476,"column":88}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":54},"end":{"line":22,"column":55}},"loc":{"start":{"line":22,"column":84},"end":{"line":33,"column":1}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":55},"end":{"line":34,"column":56}},"loc":{"start":{"line":34,"column":86},"end":{"line":40,"column":1}},"line":34},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":2},"end":{"line":42,"column":3}},"loc":{"start":{"line":42,"column":37},"end":{"line":45,"column":3}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":71,"column":2},"end":{"line":71,"column":3}},"loc":{"start":{"line":71,"column":19},"end":{"line":73,"column":3}},"line":71},"7":{"name":"(anonymous_7)","decl":{"start":{"line":74,"column":2},"end":{"line":74,"column":3}},"loc":{"start":{"line":74,"column":22},"end":{"line":76,"column":3}},"line":74},"8":{"name":"(anonymous_8)","decl":{"start":{"line":77,"column":2},"end":{"line":77,"column":3}},"loc":{"start":{"line":77,"column":24},"end":{"line":79,"column":3}},"line":77},"9":{"name":"(anonymous_9)","decl":{"start":{"line":80,"column":2},"end":{"line":80,"column":3}},"loc":{"start":{"line":80,"column":27},"end":{"line":82,"column":3}},"line":80},"10":{"name":"(anonymous_10)","decl":{"start":{"line":83,"column":2},"end":{"line":83,"column":3}},"loc":{"start":{"line":83,"column":25},"end":{"line":85,"column":3}},"line":83},"11":{"name":"(anonymous_11)","decl":{"start":{"line":86,"column":2},"end":{"line":86,"column":3}},"loc":{"start":{"line":86,"column":22},"end":{"line":88,"column":3}},"line":86},"12":{"name":"(anonymous_12)","decl":{"start":{"line":89,"column":2},"end":{"line":89,"column":3}},"loc":{"start":{"line":89,"column":12},"end":{"line":95,"column":3}},"line":89},"13":{"name":"(anonymous_13)","decl":{"start":{"line":96,"column":2},"end":{"line":96,"column":3}},"loc":{"start":{"line":96,"column":26},"end":{"line":98,"column":3}},"line":96},"14":{"name":"(anonymous_14)","decl":{"start":{"line":99,"column":2},"end":{"line":99,"column":3}},"loc":{"start":{"line":99,"column":27},"end":{"line":101,"column":3}},"line":99},"15":{"name":"(anonymous_15)","decl":{"start":{"line":102,"column":2},"end":{"line":102,"column":3}},"loc":{"start":{"line":102,"column":22},"end":{"line":104,"column":3}},"line":102},"16":{"name":"(anonymous_16)","decl":{"start":{"line":105,"column":2},"end":{"line":105,"column":3}},"loc":{"start":{"line":105,"column":30},"end":{"line":107,"column":3}},"line":105},"17":{"name":"(anonymous_17)","decl":{"start":{"line":108,"column":2},"end":{"line":108,"column":3}},"loc":{"start":{"line":108,"column":25},"end":{"line":110,"column":3}},"line":108},"18":{"name":"(anonymous_18)","decl":{"start":{"line":111,"column":2},"end":{"line":111,"column":3}},"loc":{"start":{"line":111,"column":42},"end":{"line":113,"column":3}},"line":111},"19":{"name":"(anonymous_19)","decl":{"start":{"line":114,"column":2},"end":{"line":114,"column":3}},"loc":{"start":{"line":114,"column":37},"end":{"line":116,"column":3}},"line":114},"20":{"name":"(anonymous_20)","decl":{"start":{"line":117,"column":2},"end":{"line":117,"column":3}},"loc":{"start":{"line":117,"column":40},"end":{"line":119,"column":3}},"line":117},"21":{"name":"(anonymous_21)","decl":{"start":{"line":120,"column":2},"end":{"line":120,"column":3}},"loc":{"start":{"line":120,"column":35},"end":{"line":122,"column":3}},"line":120},"22":{"name":"(anonymous_22)","decl":{"start":{"line":123,"column":2},"end":{"line":123,"column":3}},"loc":{"start":{"line":123,"column":37},"end":{"line":125,"column":3}},"line":123},"23":{"name":"(anonymous_23)","decl":{"start":{"line":126,"column":2},"end":{"line":126,"column":3}},"loc":{"start":{"line":126,"column":32},"end":{"line":128,"column":3}},"line":126},"24":{"name":"(anonymous_24)","decl":{"start":{"line":129,"column":2},"end":{"line":129,"column":3}},"loc":{"start":{"line":129,"column":35},"end":{"line":131,"column":3}},"line":129},"25":{"name":"(anonymous_25)","decl":{"start":{"line":132,"column":2},"end":{"line":132,"column":3}},"loc":{"start":{"line":132,"column":30},"end":{"line":134,"column":3}},"line":132},"26":{"name":"(anonymous_26)","decl":{"start":{"line":135,"column":2},"end":{"line":135,"column":3}},"loc":{"start":{"line":135,"column":33},"end":{"line":137,"column":3}},"line":135},"27":{"name":"(anonymous_27)","decl":{"start":{"line":138,"column":2},"end":{"line":138,"column":3}},"loc":{"start":{"line":138,"column":32},"end":{"line":140,"column":3}},"line":138},"28":{"name":"(anonymous_28)","decl":{"start":{"line":141,"column":2},"end":{"line":141,"column":3}},"loc":{"start":{"line":141,"column":34},"end":{"line":143,"column":3}},"line":141},"29":{"name":"(anonymous_29)","decl":{"start":{"line":144,"column":2},"end":{"line":144,"column":3}},"loc":{"start":{"line":144,"column":37},"end":{"line":146,"column":3}},"line":144},"30":{"name":"(anonymous_30)","decl":{"start":{"line":147,"column":2},"end":{"line":147,"column":3}},"loc":{"start":{"line":147,"column":18},"end":{"line":150,"column":3}},"line":147},"31":{"name":"(anonymous_31)","decl":{"start":{"line":151,"column":2},"end":{"line":151,"column":3}},"loc":{"start":{"line":151,"column":20},"end":{"line":153,"column":3}},"line":151},"32":{"name":"(anonymous_32)","decl":{"start":{"line":154,"column":2},"end":{"line":154,"column":3}},"loc":{"start":{"line":154,"column":31},"end":{"line":156,"column":3}},"line":154},"33":{"name":"(anonymous_33)","decl":{"start":{"line":157,"column":2},"end":{"line":157,"column":3}},"loc":{"start":{"line":157,"column":27},"end":{"line":159,"column":3}},"line":157},"34":{"name":"(anonymous_34)","decl":{"start":{"line":160,"column":2},"end":{"line":160,"column":3}},"loc":{"start":{"line":160,"column":10},"end":{"line":174,"column":3}},"line":160},"35":{"name":"(anonymous_35)","decl":{"start":{"line":175,"column":2},"end":{"line":175,"column":3}},"loc":{"start":{"line":175,"column":39},"end":{"line":179,"column":3}},"line":175},"36":{"name":"(anonymous_36)","decl":{"start":{"line":180,"column":2},"end":{"line":180,"column":3}},"loc":{"start":{"line":180,"column":66},"end":{"line":187,"column":3}},"line":180},"37":{"name":"(anonymous_37)","decl":{"start":{"line":188,"column":2},"end":{"line":188,"column":3}},"loc":{"start":{"line":188,"column":38},"end":{"line":190,"column":3}},"line":188},"38":{"name":"(anonymous_38)","decl":{"start":{"line":191,"column":2},"end":{"line":191,"column":3}},"loc":{"start":{"line":191,"column":60},"end":{"line":193,"column":3}},"line":191},"39":{"name":"(anonymous_39)","decl":{"start":{"line":194,"column":2},"end":{"line":194,"column":3}},"loc":{"start":{"line":194,"column":44},"end":{"line":196,"column":3}},"line":194},"40":{"name":"(anonymous_40)","decl":{"start":{"line":197,"column":2},"end":{"line":197,"column":3}},"loc":{"start":{"line":197,"column":56},"end":{"line":231,"column":3}},"line":197},"41":{"name":"(anonymous_41)","decl":{"start":{"line":212,"column":37},"end":{"line":212,"column":38}},"loc":{"start":{"line":212,"column":77},"end":{"line":220,"column":7}},"line":212},"42":{"name":"(anonymous_42)","decl":{"start":{"line":233,"column":2},"end":{"line":233,"column":3}},"loc":{"start":{"line":233,"column":34},"end":{"line":333,"column":3}},"line":233},"43":{"name":"(anonymous_43)","decl":{"start":{"line":294,"column":39},"end":{"line":294,"column":40}},"loc":{"start":{"line":294,"column":69},"end":{"line":310,"column":9}},"line":294},"44":{"name":"(anonymous_44)","decl":{"start":{"line":313,"column":39},"end":{"line":313,"column":40}},"loc":{"start":{"line":313,"column":79},"end":{"line":326,"column":9}},"line":313},"45":{"name":"(anonymous_45)","decl":{"start":{"line":334,"column":2},"end":{"line":334,"column":3}},"loc":{"start":{"line":334,"column":16},"end":{"line":336,"column":3}},"line":334},"46":{"name":"(anonymous_46)","decl":{"start":{"line":337,"column":2},"end":{"line":337,"column":3}},"loc":{"start":{"line":337,"column":24},"end":{"line":339,"column":3}},"line":337},"47":{"name":"(anonymous_47)","decl":{"start":{"line":340,"column":2},"end":{"line":340,"column":3}},"loc":{"start":{"line":340,"column":24},"end":{"line":342,"column":3}},"line":340},"48":{"name":"(anonymous_48)","decl":{"start":{"line":343,"column":2},"end":{"line":343,"column":3}},"loc":{"start":{"line":343,"column":35},"end":{"line":345,"column":3}},"line":343},"49":{"name":"(anonymous_49)","decl":{"start":{"line":346,"column":2},"end":{"line":346,"column":3}},"loc":{"start":{"line":346,"column":40},"end":{"line":348,"column":3}},"line":346},"50":{"name":"(anonymous_50)","decl":{"start":{"line":349,"column":2},"end":{"line":349,"column":3}},"loc":{"start":{"line":349,"column":27},"end":{"line":351,"column":3}},"line":349},"51":{"name":"(anonymous_51)","decl":{"start":{"line":352,"column":2},"end":{"line":352,"column":3}},"loc":{"start":{"line":352,"column":50},"end":{"line":354,"column":3}},"line":352},"52":{"name":"(anonymous_52)","decl":{"start":{"line":355,"column":2},"end":{"line":355,"column":3}},"loc":{"start":{"line":355,"column":30},"end":{"line":357,"column":3}},"line":355},"53":{"name":"(anonymous_53)","decl":{"start":{"line":358,"column":2},"end":{"line":358,"column":3}},"loc":{"start":{"line":358,"column":52},"end":{"line":360,"column":3}},"line":358},"54":{"name":"(anonymous_54)","decl":{"start":{"line":361,"column":2},"end":{"line":361,"column":3}},"loc":{"start":{"line":361,"column":22},"end":{"line":372,"column":3}},"line":361},"55":{"name":"(anonymous_55)","decl":{"start":{"line":373,"column":2},"end":{"line":373,"column":3}},"loc":{"start":{"line":373,"column":20},"end":{"line":382,"column":3}},"line":373},"56":{"name":"(anonymous_56)","decl":{"start":{"line":384,"column":2},"end":{"line":384,"column":3}},"loc":{"start":{"line":384,"column":105},"end":{"line":407,"column":3}},"line":384},"57":{"name":"(anonymous_57)","decl":{"start":{"line":408,"column":2},"end":{"line":408,"column":3}},"loc":{"start":{"line":408,"column":60},"end":{"line":410,"column":3}},"line":408},"58":{"name":"(anonymous_58)","decl":{"start":{"line":411,"column":2},"end":{"line":411,"column":3}},"loc":{"start":{"line":411,"column":26},"end":{"line":419,"column":3}},"line":411},"59":{"name":"(anonymous_59)","decl":{"start":{"line":430,"column":2},"end":{"line":430,"column":3}},"loc":{"start":{"line":430,"column":94},"end":{"line":448,"column":3}},"line":430},"60":{"name":"(anonymous_60)","decl":{"start":{"line":437,"column":37},"end":{"line":437,"column":38}},"loc":{"start":{"line":437,"column":68},"end":{"line":446,"column":5}},"line":437},"61":{"name":"(anonymous_61)","decl":{"start":{"line":449,"column":2},"end":{"line":449,"column":3}},"loc":{"start":{"line":449,"column":38},"end":{"line":458,"column":3}},"line":449},"62":{"name":"(anonymous_62)","decl":{"start":{"line":459,"column":2},"end":{"line":459,"column":3}},"loc":{"start":{"line":459,"column":66},"end":{"line":464,"column":3}},"line":459},"63":{"name":"(anonymous_63)","decl":{"start":{"line":465,"column":2},"end":{"line":465,"column":3}},"loc":{"start":{"line":465,"column":48},"end":{"line":471,"column":3}},"line":465}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":33,"column":3},"end":{"line":33,"column":32}},"type":"binary-expr","locations":[{"start":{"line":33,"column":3},"end":{"line":33,"column":26}},{"start":{"line":33,"column":30},"end":{"line":33,"column":32}}],"line":33},"8":{"loc":{"start":{"line":40,"column":3},"end":{"line":40,"column":33}},"type":"binary-expr","locations":[{"start":{"line":40,"column":3},"end":{"line":40,"column":27}},{"start":{"line":40,"column":31},"end":{"line":40,"column":33}}],"line":40},"9":{"loc":{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},"type":"if","locations":[{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},{"start":{},"end":{}}],"line":200},"10":{"loc":{"start":{"line":204,"column":4},"end":{"line":206,"column":5}},"type":"if","locations":[{"start":{"line":204,"column":4},"end":{"line":206,"column":5}},{"start":{},"end":{}}],"line":204},"11":{"loc":{"start":{"line":204,"column":8},"end":{"line":204,"column":70}},"type":"binary-expr","locations":[{"start":{"line":204,"column":8},"end":{"line":204,"column":38}},{"start":{"line":204,"column":42},"end":{"line":204,"column":70}}],"line":204},"12":{"loc":{"start":{"line":209,"column":4},"end":{"line":223,"column":5}},"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":223,"column":5}},{"start":{"line":221,"column":11},"end":{"line":223,"column":5}}],"line":209},"13":{"loc":{"start":{"line":209,"column":8},"end":{"line":209,"column":107}},"type":"binary-expr","locations":[{"start":{"line":209,"column":8},"end":{"line":209,"column":43}},{"start":{"line":209,"column":47},"end":{"line":209,"column":78}},{"start":{"line":209,"column":82},"end":{"line":209,"column":107}}],"line":209},"14":{"loc":{"start":{"line":216,"column":8},"end":{"line":218,"column":9}},"type":"if","locations":[{"start":{"line":216,"column":8},"end":{"line":218,"column":9}},{"start":{},"end":{}}],"line":216},"15":{"loc":{"start":{"line":224,"column":4},"end":{"line":226,"column":5}},"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":226,"column":5}},{"start":{},"end":{}}],"line":224},"16":{"loc":{"start":{"line":224,"column":8},"end":{"line":224,"column":86}},"type":"binary-expr","locations":[{"start":{"line":224,"column":8},"end":{"line":224,"column":46}},{"start":{"line":224,"column":50},"end":{"line":224,"column":86}}],"line":224},"17":{"loc":{"start":{"line":227,"column":4},"end":{"line":229,"column":5}},"type":"if","locations":[{"start":{"line":227,"column":4},"end":{"line":229,"column":5}},{"start":{},"end":{}}],"line":227},"18":{"loc":{"start":{"line":227,"column":8},"end":{"line":227,"column":92}},"type":"binary-expr","locations":[{"start":{"line":227,"column":8},"end":{"line":227,"column":49}},{"start":{"line":227,"column":53},"end":{"line":227,"column":92}}],"line":227},"19":{"loc":{"start":{"line":240,"column":4},"end":{"line":242,"column":5}},"type":"if","locations":[{"start":{"line":240,"column":4},"end":{"line":242,"column":5}},{"start":{},"end":{}}],"line":240},"20":{"loc":{"start":{"line":244,"column":4},"end":{"line":246,"column":5}},"type":"if","locations":[{"start":{"line":244,"column":4},"end":{"line":246,"column":5}},{"start":{},"end":{}}],"line":244},"21":{"loc":{"start":{"line":247,"column":4},"end":{"line":249,"column":5}},"type":"if","locations":[{"start":{"line":247,"column":4},"end":{"line":249,"column":5}},{"start":{},"end":{}}],"line":247},"22":{"loc":{"start":{"line":251,"column":4},"end":{"line":253,"column":5}},"type":"if","locations":[{"start":{"line":251,"column":4},"end":{"line":253,"column":5}},{"start":{},"end":{}}],"line":251},"23":{"loc":{"start":{"line":251,"column":8},"end":{"line":251,"column":84}},"type":"binary-expr","locations":[{"start":{"line":251,"column":8},"end":{"line":251,"column":43}},{"start":{"line":251,"column":47},"end":{"line":251,"column":84}}],"line":251},"24":{"loc":{"start":{"line":255,"column":4},"end":{"line":257,"column":5}},"type":"if","locations":[{"start":{"line":255,"column":4},"end":{"line":257,"column":5}},{"start":{},"end":{}}],"line":255},"25":{"loc":{"start":{"line":259,"column":4},"end":{"line":261,"column":5}},"type":"if","locations":[{"start":{"line":259,"column":4},"end":{"line":261,"column":5}},{"start":{},"end":{}}],"line":259},"26":{"loc":{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},{"start":{},"end":{}}],"line":262},"27":{"loc":{"start":{"line":266,"column":4},"end":{"line":268,"column":5}},"type":"if","locations":[{"start":{"line":266,"column":4},"end":{"line":268,"column":5}},{"start":{},"end":{}}],"line":266},"28":{"loc":{"start":{"line":272,"column":4},"end":{"line":332,"column":5}},"type":"if","locations":[{"start":{"line":272,"column":4},"end":{"line":332,"column":5}},{"start":{"line":328,"column":11},"end":{"line":332,"column":5}}],"line":272},"29":{"loc":{"start":{"line":272,"column":8},"end":{"line":272,"column":107}},"type":"binary-expr","locations":[{"start":{"line":272,"column":8},"end":{"line":272,"column":43}},{"start":{"line":272,"column":47},"end":{"line":272,"column":78}},{"start":{"line":272,"column":82},"end":{"line":272,"column":107}}],"line":272},"30":{"loc":{"start":{"line":275,"column":6},"end":{"line":281,"column":7}},"type":"if","locations":[{"start":{"line":275,"column":6},"end":{"line":281,"column":7}},{"start":{},"end":{}}],"line":275},"31":{"loc":{"start":{"line":275,"column":10},"end":{"line":275,"column":58}},"type":"binary-expr","locations":[{"start":{"line":275,"column":10},"end":{"line":275,"column":29}},{"start":{"line":275,"column":33},"end":{"line":275,"column":58}}],"line":275},"32":{"loc":{"start":{"line":289,"column":6},"end":{"line":327,"column":7}},"type":"if","locations":[{"start":{"line":289,"column":6},"end":{"line":327,"column":7}},{"start":{"line":311,"column":13},"end":{"line":327,"column":7}}],"line":289},"33":{"loc":{"start":{"line":289,"column":10},"end":{"line":289,"column":161}},"type":"binary-expr","locations":[{"start":{"line":289,"column":10},"end":{"line":289,"column":89}},{"start":{"line":289,"column":93},"end":{"line":289,"column":161}}],"line":289},"34":{"loc":{"start":{"line":298,"column":10},"end":{"line":309,"column":11}},"type":"if","locations":[{"start":{"line":298,"column":10},"end":{"line":309,"column":11}},{"start":{"line":300,"column":17},"end":{"line":309,"column":11}}],"line":298},"35":{"loc":{"start":{"line":298,"column":14},"end":{"line":298,"column":66}},"type":"binary-expr","locations":[{"start":{"line":298,"column":14},"end":{"line":298,"column":35}},{"start":{"line":298,"column":39},"end":{"line":298,"column":66}}],"line":298},"36":{"loc":{"start":{"line":300,"column":17},"end":{"line":309,"column":11}},"type":"if","locations":[{"start":{"line":300,"column":17},"end":{"line":309,"column":11}},{"start":{"line":305,"column":17},"end":{"line":309,"column":11}}],"line":300},"37":{"loc":{"start":{"line":301,"column":12},"end":{"line":303,"column":13}},"type":"if","locations":[{"start":{"line":301,"column":12},"end":{"line":303,"column":13}},{"start":{},"end":{}}],"line":301},"38":{"loc":{"start":{"line":305,"column":17},"end":{"line":309,"column":11}},"type":"if","locations":[{"start":{"line":305,"column":17},"end":{"line":309,"column":11}},{"start":{"line":307,"column":17},"end":{"line":309,"column":11}}],"line":305},"39":{"loc":{"start":{"line":315,"column":10},"end":{"line":322,"column":11}},"type":"if","locations":[{"start":{"line":315,"column":10},"end":{"line":322,"column":11}},{"start":{},"end":{}}],"line":315},"40":{"loc":{"start":{"line":315,"column":14},"end":{"line":315,"column":66}},"type":"binary-expr","locations":[{"start":{"line":315,"column":14},"end":{"line":315,"column":35}},{"start":{"line":315,"column":39},"end":{"line":315,"column":66}}],"line":315},"41":{"loc":{"start":{"line":316,"column":12},"end":{"line":320,"column":13}},"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":320,"column":13}},{"start":{},"end":{}}],"line":316},"42":{"loc":{"start":{"line":316,"column":16},"end":{"line":316,"column":99}},"type":"binary-expr","locations":[{"start":{"line":316,"column":16},"end":{"line":316,"column":35}},{"start":{"line":316,"column":39},"end":{"line":316,"column":60}},{"start":{"line":316,"column":64},"end":{"line":316,"column":99}}],"line":316},"43":{"loc":{"start":{"line":391,"column":8},"end":{"line":393,"column":9}},"type":"if","locations":[{"start":{"line":391,"column":8},"end":{"line":393,"column":9}},{"start":{},"end":{}}],"line":391},"44":{"loc":{"start":{"line":391,"column":12},"end":{"line":391,"column":51}},"type":"binary-expr","locations":[{"start":{"line":391,"column":12},"end":{"line":391,"column":28}},{"start":{"line":391,"column":32},"end":{"line":391,"column":51}}],"line":391},"45":{"loc":{"start":{"line":401,"column":8},"end":{"line":403,"column":9}},"type":"if","locations":[{"start":{"line":401,"column":8},"end":{"line":403,"column":9}},{"start":{},"end":{}}],"line":401},"46":{"loc":{"start":{"line":401,"column":12},"end":{"line":401,"column":215}},"type":"binary-expr","locations":[{"start":{"line":401,"column":12},"end":{"line":401,"column":39}},{"start":{"line":401,"column":43},"end":{"line":401,"column":139}},{"start":{"line":401,"column":143},"end":{"line":401,"column":177}},{"start":{"line":401,"column":181},"end":{"line":401,"column":215}}],"line":401},"47":{"loc":{"start":{"line":412,"column":4},"end":{"line":414,"column":5}},"type":"if","locations":[{"start":{"line":412,"column":4},"end":{"line":414,"column":5}},{"start":{},"end":{}}],"line":412},"48":{"loc":{"start":{"line":412,"column":8},"end":{"line":412,"column":40}},"type":"binary-expr","locations":[{"start":{"line":412,"column":8},"end":{"line":412,"column":21}},{"start":{"line":412,"column":25},"end":{"line":412,"column":40}}],"line":412},"49":{"loc":{"start":{"line":415,"column":4},"end":{"line":417,"column":5}},"type":"if","locations":[{"start":{"line":415,"column":4},"end":{"line":417,"column":5}},{"start":{},"end":{}}],"line":415},"50":{"loc":{"start":{"line":432,"column":4},"end":{"line":434,"column":5}},"type":"if","locations":[{"start":{"line":432,"column":4},"end":{"line":434,"column":5}},{"start":{},"end":{}}],"line":432},"51":{"loc":{"start":{"line":438,"column":6},"end":{"line":440,"column":7}},"type":"if","locations":[{"start":{"line":438,"column":6},"end":{"line":440,"column":7}},{"start":{},"end":{}}],"line":438},"52":{"loc":{"start":{"line":438,"column":10},"end":{"line":438,"column":63}},"type":"binary-expr","locations":[{"start":{"line":438,"column":10},"end":{"line":438,"column":33}},{"start":{"line":438,"column":37},"end":{"line":438,"column":63}}],"line":438},"53":{"loc":{"start":{"line":443,"column":6},"end":{"line":445,"column":7}},"type":"if","locations":[{"start":{"line":443,"column":6},"end":{"line":445,"column":7}},{"start":{},"end":{}}],"line":443},"54":{"loc":{"start":{"line":443,"column":10},"end":{"line":443,"column":54}},"type":"binary-expr","locations":[{"start":{"line":443,"column":10},"end":{"line":443,"column":23}},{"start":{"line":443,"column":27},"end":{"line":443,"column":54}}],"line":443},"55":{"loc":{"start":{"line":450,"column":4},"end":{"line":452,"column":5}},"type":"if","locations":[{"start":{"line":450,"column":4},"end":{"line":452,"column":5}},{"start":{},"end":{}}],"line":450},"56":{"loc":{"start":{"line":454,"column":4},"end":{"line":456,"column":5}},"type":"if","locations":[{"start":{"line":454,"column":4},"end":{"line":456,"column":5}},{"start":{},"end":{}}],"line":454},"57":{"loc":{"start":{"line":454,"column":8},"end":{"line":454,"column":74}},"type":"binary-expr","locations":[{"start":{"line":454,"column":8},"end":{"line":454,"column":21}},{"start":{"line":454,"column":25},"end":{"line":454,"column":36}},{"start":{"line":454,"column":40},"end":{"line":454,"column":56}},{"start":{"line":454,"column":60},"end":{"line":454,"column":74}}],"line":454},"58":{"loc":{"start":{"line":460,"column":4},"end":{"line":462,"column":5}},"type":"if","locations":[{"start":{"line":460,"column":4},"end":{"line":462,"column":5}},{"start":{},"end":{}}],"line":460},"59":{"loc":{"start":{"line":460,"column":8},"end":{"line":460,"column":76}},"type":"binary-expr","locations":[{"start":{"line":460,"column":8},"end":{"line":460,"column":37}},{"start":{"line":460,"column":41},"end":{"line":460,"column":76}}],"line":460},"60":{"loc":{"start":{"line":467,"column":4},"end":{"line":469,"column":5}},"type":"if","locations":[{"start":{"line":467,"column":4},"end":{"line":469,"column":5}},{"start":{},"end":{}}],"line":467}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":1,"275":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0},"b":{"0":[0,1],"1":[0,1],"2":[1,0],"3":[1,1],"4":[0,1],"5":[0,1],"6":[1,0],"7":[1,1],"8":[1,1],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0,0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0,0,0],"58":[0,0],"59":[0,0],"60":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/runtime.service.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, IRange, Nullable } from '@univerjs/core';\nimport type {\n    IArrayFormulaRangeType,\n    IFeatureDirtyRangeType,\n    IRuntimeOtherUnitDataType,\n    IRuntimeUnitDataType,\n} from '../basics/common';\nimport type { BaseAstNode } from '../engine/ast-node/base-ast-node';\nimport type { BaseReferenceObject, FunctionVariantType } from '../engine/reference-object/base-reference-object';\nimport type { ArrayValueObject } from '../engine/value-object/array-value-object';\nimport type { BaseValueObject } from '../engine/value-object/base-value-object';\nimport { createIdentifier, Disposable, ObjectMatrix } from '@univerjs/core';\nimport { isInDirtyRange } from '../basics/dirty';\nimport { ErrorType } from '../basics/error-type';\nimport { isNullCellForFormula } from '../basics/is-null-cell';\nimport { getRuntimeFeatureCell } from '../engine/utils/get-runtime-feature-cell';\nimport { clearNumberFormatTypeCache, clearStringToNumberPatternCache } from '../engine/utils/numfmt-kit';\nimport { clearReferenceToRangeCache } from '../engine/utils/reference-cache';\nimport { objectValueToCellValue } from '../engine/utils/value-object';\nimport { ErrorValueObject } from '../engine/value-object/base-value-object';\nimport { IFormulaCurrentConfigService } from './current-data.service';\n\n/**\n * The formula engine has a lot of stages. IDLE and CALCULATION_COMPLETED can be considered as\n * the computing has completed.\n */\nexport enum FormulaExecuteStageType {\n    IDLE,\n    START,\n    START_DEPENDENCY,\n    START_CALCULATION,\n    CURRENTLY_CALCULATING,\n    START_DEPENDENCY_ARRAY_FORMULA,\n    START_CALCULATION_ARRAY_FORMULA,\n    CURRENTLY_CALCULATING_ARRAY_FORMULA,\n    CALCULATION_COMPLETED,\n}\n\nexport enum FormulaExecutedStateType {\n    INITIAL,\n    STOP_EXECUTION,\n    NOT_EXECUTED,\n    SUCCESS,\n}\n\nexport interface IAllRuntimeData {\n    unitData: IRuntimeUnitDataType;\n    arrayFormulaRange: IArrayFormulaRangeType;\n    unitOtherData: IRuntimeOtherUnitDataType;\n    functionsExecutedState: FormulaExecutedStateType;\n    arrayFormulaCellData: IRuntimeUnitDataType;\n    clearArrayFormulaCellData: IRuntimeUnitDataType;\n\n    runtimeFeatureRange: { [featureId: string]: IFeatureDirtyRangeType };\n    runtimeFeatureCellData: { [featureId: string]: IRuntimeUnitDataType };\n}\n\nexport interface IExecutionInProgressParams {\n    totalFormulasToCalculate: number;\n    completedFormulasCount: number;\n\n    totalArrayFormulasToCalculate: number;\n    completedArrayFormulasCount: number;\n\n    formulaCycleIndex: number;\n\n    stage: FormulaExecuteStageType;\n}\n\nexport interface IFormulaRuntimeService {\n    currentRow: number;\n\n    currentColumn: number;\n\n    currentSubUnitId: string;\n\n    currentUnitId: string;\n\n    dispose(): void;\n\n    reset(): void;\n\n    setCurrent(\n        row: number,\n        column: number,\n        rowCount: number,\n        columnCount: number,\n        sheetId: string,\n        unitId: string\n    ): void;\n\n    registerFunctionDefinitionPrivacyVar(lambdaId: string, lambdaVar: Map<string, Nullable<BaseAstNode>>): void;\n\n    getFunctionDefinitionPrivacyVar(lambdaId: string): Nullable<Map<string, Nullable<BaseAstNode>>>;\n\n    setRuntimeData(functionVariant: FunctionVariantType): void;\n\n    getUnitData(): IRuntimeUnitDataType;\n\n    getUnitArrayFormula(): IArrayFormulaRangeType;\n\n    stopExecution(): void;\n\n    setFormulaExecuteStage(type: FormulaExecuteStageType): void;\n\n    setFormulaCycleIndex(index: number): void;\n\n    isStopExecution(): boolean;\n\n    getFormulaExecuteStage(): FormulaExecuteStageType;\n\n    setRuntimeOtherData(formulaId: string, x: number, y: number, functionVariant: FunctionVariantType): void;\n\n    getRuntimeOtherData(): IRuntimeOtherUnitDataType;\n\n    getAllRuntimeData(): IAllRuntimeData;\n\n    markedAsSuccessfullyExecuted(): void;\n\n    markedAsNoFunctionsExecuted(): void;\n\n    markedAsStopFunctionsExecuted(): void;\n\n    markedAsInitialFunctionsExecuted(): void;\n\n    setTotalFormulasToCalculate(value: number): void;\n\n    getTotalFormulasToCalculate(): number;\n\n    setCompletedFormulasCount(value: number): void;\n\n    getCompletedFormulasCount(): number;\n\n    getRuntimeState(): IExecutionInProgressParams;\n\n    setTotalArrayFormulasToCalculate(value: number): void;\n\n    getTotalArrayFormulasToCalculate(): number;\n\n    setCompletedArrayFormulasCount(value: number): void;\n\n    getCompletedArrayFormulasCount(): number;\n\n    enableCycleDependency(): void;\n\n    disableCycleDependency(): void;\n\n    isCycleDependency(): boolean;\n\n    getRuntimeArrayFormulaCellData(): IRuntimeUnitDataType;\n\n    getRuntimeFeatureRange(): { [featureId: string]: IFeatureDirtyRangeType };\n\n    getRuntimeFeatureCellData(): { [featureId: string]: IRuntimeUnitDataType };\n\n    setRuntimeFeatureCellData(featureId: string, featureData: IRuntimeUnitDataType): void;\n\n    setRuntimeFeatureRange(featureId: string, featureRange: IFeatureDirtyRangeType): void;\n\n    clearReferenceAndNumberformatCache(): void;\n}\n\nexport class FormulaRuntimeService extends Disposable implements IFormulaRuntimeService {\n    private _formulaExecuteStage: FormulaExecuteStageType = FormulaExecuteStageType.IDLE;\n\n    private _stopState = false;\n\n    private _currentRow: number = -1;\n    private _currentColumn: number = -1;\n\n    private _currentRowCount: number = Number.NEGATIVE_INFINITY;\n    private _currentColumnCount: number = Number.NEGATIVE_INFINITY;\n\n    private _currentSubUnitId: string = '';\n    private _currentUnitId: string = '';\n\n    private _runtimeData: IRuntimeUnitDataType = {};\n\n    private _runtimeOtherData: IRuntimeOtherUnitDataType = {}; // Data returned by other businesses through formula calculation, excluding the sheet.\n\n    private _unitArrayFormulaRange: IArrayFormulaRangeType = {};\n\n    private _runtimeArrayFormulaCellData: IRuntimeUnitDataType = {};\n\n    private _runtimeClearArrayFormulaCellData: IRuntimeUnitDataType = {};\n\n    private _runtimeFeatureRange: { [featureId: string]: IFeatureDirtyRangeType } = {};\n\n    private _runtimeFeatureCellData: { [featureId: string]: IRuntimeUnitDataType } = {};\n\n    private _functionsExecutedState: FormulaExecutedStateType = FormulaExecutedStateType.INITIAL;\n\n    // lambdaId: { key: BaseAstNode }\n    private _functionDefinitionPrivacyVar: Map<string, Map<string, Nullable<BaseAstNode>>> = new Map();\n\n    private _totalFormulasToCalculate: number = 0;\n\n    private _completedFormulasCount: number = 0;\n\n    private _totalArrayFormulasToCalculate: number = 0;\n\n    private _completedArrayFormulasCount: number = 0;\n\n    private _formulaCycleIndex: number = 0;\n\n    private _isCycleDependency: boolean = false;\n\n    constructor(\n        @IFormulaCurrentConfigService private readonly _currentConfigService: IFormulaCurrentConfigService\n    ) {\n        super();\n    }\n\n    get currentRow() {\n        return this._currentRow;\n    }\n\n    get currentColumn() {\n        return this._currentColumn;\n    }\n\n    get currentRowCount() {\n        return this._currentRowCount;\n    }\n\n    get currentColumnCount() {\n        return this._currentColumnCount;\n    }\n\n    get currentSubUnitId() {\n        return this._currentSubUnitId;\n    }\n\n    get currentUnitId() {\n        return this._currentUnitId;\n    }\n\n    override dispose(): void {\n        super.dispose();\n\n        this.reset();\n        this._runtimeFeatureCellData = {};\n        this._runtimeFeatureRange = {};\n        this.clearReferenceAndNumberformatCache();\n    }\n\n    enableCycleDependency() {\n        this._isCycleDependency = true;\n    }\n\n    disableCycleDependency() {\n        this._isCycleDependency = false;\n    }\n\n    isCycleDependency() {\n        return this._isCycleDependency;\n    }\n\n    setFormulaCycleIndex(index: number) {\n        this._formulaCycleIndex = index;\n    }\n\n    getFormulaCycleIndex() {\n        return this._formulaCycleIndex;\n    }\n\n    setTotalArrayFormulasToCalculate(value: number) {\n        this._totalArrayFormulasToCalculate = value;\n    }\n\n    getTotalArrayFormulasToCalculate() {\n        return this._totalArrayFormulasToCalculate;\n    }\n\n    setCompletedArrayFormulasCount(value: number) {\n        this._completedArrayFormulasCount = value;\n    }\n\n    getCompletedArrayFormulasCount() {\n        return this._completedArrayFormulasCount;\n    }\n\n    setTotalFormulasToCalculate(value: number) {\n        this._totalFormulasToCalculate = value;\n    }\n\n    getTotalFormulasToCalculate() {\n        return this._totalFormulasToCalculate;\n    }\n\n    setCompletedFormulasCount(value: number) {\n        this._completedFormulasCount = value;\n    }\n\n    getCompletedFormulasCount() {\n        return this._completedFormulasCount;\n    }\n\n    markedAsSuccessfullyExecuted() {\n        this._functionsExecutedState = FormulaExecutedStateType.SUCCESS;\n    }\n\n    markedAsNoFunctionsExecuted() {\n        this._functionsExecutedState = FormulaExecutedStateType.NOT_EXECUTED;\n    }\n\n    markedAsStopFunctionsExecuted() {\n        this._functionsExecutedState = FormulaExecutedStateType.STOP_EXECUTION;\n    }\n\n    markedAsInitialFunctionsExecuted() {\n        this._functionsExecutedState = FormulaExecutedStateType.INITIAL;\n    }\n\n    stopExecution() {\n        this._stopState = true;\n\n        this.setFormulaExecuteStage(FormulaExecuteStageType.IDLE);\n    }\n\n    isStopExecution() {\n        return this._stopState;\n    }\n\n    setFormulaExecuteStage(type: FormulaExecuteStageType) {\n        this._formulaExecuteStage = type;\n    }\n\n    getFormulaExecuteStage() {\n        return this._formulaExecuteStage;\n    }\n\n    reset() {\n        this._formulaExecuteStage = FormulaExecuteStageType.IDLE;\n        this._runtimeData = {};\n        this._runtimeOtherData = {};\n        this._unitArrayFormulaRange = {};\n        this._runtimeArrayFormulaCellData = {};\n        this._runtimeClearArrayFormulaCellData = {};\n\n        // this._runtimeFeatureCellData = {};\n        // this._runtimeFeatureRange = {};\n\n        this._functionDefinitionPrivacyVar.clear();\n        this.markedAsInitialFunctionsExecuted();\n\n        this._stopState = false;\n        this._isCycleDependency = false;\n        this._totalFormulasToCalculate = 0;\n        this._completedFormulasCount = 0;\n\n        this.clearReferenceAndNumberformatCache();\n    }\n\n    clearReferenceAndNumberformatCache() {\n        clearNumberFormatTypeCache();\n        clearStringToNumberPatternCache();\n        clearReferenceToRangeCache();\n    }\n\n    setCurrent(row: number, column: number, rowCount: number, columnCount: number, sheetId: string, unitId: string) {\n        this._currentRow = row;\n        this._currentColumn = column;\n        this._currentRowCount = rowCount;\n        this._currentColumnCount = columnCount;\n        this._currentSubUnitId = sheetId;\n        this._currentUnitId = unitId;\n    }\n\n    clearFunctionDefinitionPrivacyVar() {\n        this._functionDefinitionPrivacyVar.clear();\n    }\n\n    registerFunctionDefinitionPrivacyVar(lambdaId: string, lambdaVar: Map<string, Nullable<BaseAstNode>>) {\n        this._functionDefinitionPrivacyVar.set(lambdaId, lambdaVar);\n    }\n\n    getFunctionDefinitionPrivacyVar(lambdaId: string): Nullable<Map<string, Nullable<BaseAstNode>>> {\n        return this._functionDefinitionPrivacyVar.get(lambdaId);\n    }\n\n    setRuntimeOtherData(formulaId: string, x: number, y: number, functionVariant: FunctionVariantType) {\n        const subUnitId = this._currentSubUnitId;\n        const unitId = this._currentUnitId;\n\n        if (this._runtimeOtherData[unitId] === undefined) {\n            this._runtimeOtherData[unitId] = {};\n        }\n\n        const unitData = this._runtimeOtherData[unitId]!;\n\n        if (unitData[subUnitId] === undefined || unitData[subUnitId] === null) {\n            unitData[subUnitId] = {};\n        }\n\n        const subComponentData = unitData[subUnitId];\n\n        let cellDatas: Nullable<ICellData>[][] = [];\n\n        if (\n            functionVariant.isReferenceObject() ||\n            (functionVariant.isValueObject() && (functionVariant as BaseValueObject).isArray())\n        ) {\n            const objectValueRefOrArray = functionVariant as BaseReferenceObject | ArrayValueObject;\n            const { startRow, startColumn } = objectValueRefOrArray.getRangePosition();\n            objectValueRefOrArray.iterator((valueObject, rowIndex, columnIndex) => {\n                const value = objectValueToCellValue(valueObject);\n\n                const row = rowIndex - startRow;\n                const column = columnIndex - startColumn;\n                if (cellDatas[row] == null) {\n                    cellDatas[row] = [];\n                }\n\n                cellDatas[row][column] = value;\n            });\n        } else {\n            cellDatas = [[objectValueToCellValue(functionVariant as BaseValueObject)!]];\n        }\n\n        if (subComponentData[formulaId] === undefined || subComponentData[formulaId] === null) {\n            subComponentData[formulaId] = {};\n        }\n\n        if (subComponentData[formulaId][y] === undefined || subComponentData[formulaId][y] === null) {\n            subComponentData[formulaId][y] = {};\n        }\n\n        // x represents the column offset, y represents the row offset\n        subComponentData[formulaId][y][x] = cellDatas;\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    setRuntimeData(functionVariant: FunctionVariantType) {\n        const row = this._currentRow;\n        const column = this._currentColumn;\n        const rowCount = this._currentRowCount;\n        const columnCount = this.currentColumnCount;\n        const sheetId = this._currentSubUnitId;\n        const unitId = this._currentUnitId;\n\n        if (this._runtimeData[unitId] == null) {\n            this._runtimeData[unitId] = {};\n        }\n\n        const unitData = this._runtimeData[unitId]!;\n\n        if (unitData[sheetId] == null) {\n            unitData[sheetId] = new ObjectMatrix<Nullable<ICellData>>();\n        }\n\n        if (this._unitArrayFormulaRange[unitId] == null) {\n            this._unitArrayFormulaRange[unitId] = {};\n        }\n\n        const arrayFormulaRange = this._unitArrayFormulaRange[unitId]!;\n\n        if (arrayFormulaRange[sheetId] === null || arrayFormulaRange[sheetId] === undefined) {\n            arrayFormulaRange[sheetId] = {};\n        }\n\n        const arrayData = new ObjectMatrix<IRange>(arrayFormulaRange[sheetId]);\n\n        if (this._runtimeArrayFormulaCellData[unitId] === undefined) {\n            this._runtimeArrayFormulaCellData[unitId] = {};\n        }\n\n        const runtimeArrayFormulaCellData = this._runtimeArrayFormulaCellData[unitId]!;\n\n        if (runtimeArrayFormulaCellData[sheetId] == null) {\n            runtimeArrayFormulaCellData[sheetId] = new ObjectMatrix<Nullable<ICellData>>();\n        }\n\n        if (this._runtimeClearArrayFormulaCellData[unitId] === undefined) {\n            this._runtimeClearArrayFormulaCellData[unitId] = {};\n        }\n\n        const clearArrayFormulaCellData = this._runtimeClearArrayFormulaCellData[unitId]!;\n\n        if (clearArrayFormulaCellData[sheetId] == null) {\n            clearArrayFormulaCellData[sheetId] = new ObjectMatrix<Nullable<ICellData>>();\n        }\n\n        const sheetData = unitData[sheetId];\n\n        const runtimeArrayUnitData = runtimeArrayFormulaCellData[sheetId];\n\n        const clearArrayUnitData = clearArrayFormulaCellData[sheetId];\n\n        if (\n            functionVariant.isReferenceObject() ||\n            (functionVariant.isValueObject() && (functionVariant as BaseValueObject).isArray())\n        ) {\n            const objectValueRefOrArray = functionVariant as BaseReferenceObject | ArrayValueObject;\n\n            const { startRow, startColumn, endRow, endColumn } = objectValueRefOrArray.getRangePosition();\n\n            /**\n             * If the referenced range or array only contains a single value, such as A5,\n             * then it is not treated as an array range and is directly assigned.\n             */\n            if (startRow === endRow && startColumn === endColumn) {\n                const firstCell = objectValueRefOrArray.getFirstCell();\n                // TODO @Dushusir set pattern style\n                const valueObject = objectValueToCellValue(firstCell);\n                sheetData.setValue(row, column, valueObject);\n                clearArrayUnitData.setValue(row, column, valueObject);\n\n                return;\n            }\n\n            const arrayRange = {\n                startRow: row,\n                startColumn: column,\n                endRow: endRow - startRow + row,\n                endColumn: endColumn - startColumn + column,\n            };\n\n            // Do not use getData to synchronize arrayData to arrayFormulaRange[sheetId] anymore, they are already linked, otherwise it will cause performance issues\n            arrayData.setValue(row, column, arrayRange);\n\n            if (\n                this._checkIfArrayFormulaRangeHasData(unitId, sheetId, row, column, arrayRange) ||\n                this._checkIfArrayFormulaExceeded(rowCount, columnCount, arrayRange)\n            ) {\n                const errorObject = objectValueToCellValue(ErrorValueObject.create(ErrorType.SPILL));\n                sheetData.setValue(row, column, errorObject);\n                clearArrayUnitData.setValue(row, column, errorObject);\n\n                /**\n                 * When there are values within the array formula range, the entire formula will result in an error.\n                 * In this case, you need to clear the previous range data to prevent other formulas from referencing the old values.\n                 */\n                const unitData = this._currentConfigService.getUnitData();\n                objectValueRefOrArray.iterator((_, rowIndex, columnIndex) => {\n                    const currentRow = rowIndex - startRow + row;\n                    const currentColumn = columnIndex - startColumn + column;\n                    const cell = unitData[unitId]?.[sheetId]?.cellData.getValue(currentRow, currentColumn);\n\n                    if (rowIndex === startRow && columnIndex === startColumn) {\n                        runtimeArrayUnitData.setValue(row, column, errorObject);\n                    } else if (cell != null) {\n                        if (cell.v == null) {\n                            cell.v = '';\n                        }\n                        runtimeArrayUnitData.setValue(currentRow, currentColumn, cell);\n                    } // To determine whether a cell has a value, in addition to cell != null, other array formulas may get undefined (displayed as 0). In this case, the value of the existing array formula cannot be modified.\n                    else if (this._isInOtherArrayFormulaRange(unitId, sheetId, row, column, currentRow, currentColumn)) {\n                        return true;\n                    } else {\n                        runtimeArrayUnitData.setValue(currentRow, currentColumn, { v: '' });\n                    }\n                });\n            } else {\n                const spillError = ErrorValueObject.create(ErrorType.SPILL);\n                objectValueRefOrArray.iterator((valueObject, rowIndex, columnIndex) => {\n                    const value = objectValueToCellValue(valueObject);\n                    if (rowIndex === startRow && columnIndex === startColumn) {\n                        /**\n                         * If the referenced range contains an error in the spill of the array formula,\n                         * then the current array formula should report an error together.\n                         */\n                        if (valueObject != null && valueObject.isError() && valueObject.isEqualType(spillError)) {\n                            clearArrayUnitData.setValue(row, column, {});\n                            sheetData.setValue(row, column, { ...objectValueToCellValue(spillError) });\n                            return false;\n                        }\n                        sheetData.setValue(row, column, { ...value });\n                    }\n\n                    const currentRow = rowIndex - startRow + row;\n                    const currentColumn = columnIndex - startColumn + column;\n\n                    runtimeArrayUnitData.setValue(currentRow, currentColumn, value);\n                });\n            }\n        } else {\n            const valueObject = objectValueToCellValue(functionVariant as BaseValueObject);\n            sheetData.setValue(row, column, valueObject);\n            clearArrayUnitData.setValue(row, column, valueObject);\n        }\n    }\n\n    getUnitData() {\n        return this._runtimeData;\n    }\n\n    getUnitArrayFormula() {\n        return this._unitArrayFormulaRange;\n    }\n\n    getRuntimeOtherData() {\n        return this._runtimeOtherData;\n    }\n\n    getRuntimeArrayFormulaCellData() {\n        return this._runtimeArrayFormulaCellData;\n    }\n\n    getRuntimeClearArrayFormulaCellData() {\n        return this._runtimeClearArrayFormulaCellData;\n    }\n\n    getRuntimeFeatureRange() {\n        return this._runtimeFeatureRange;\n    }\n\n    setRuntimeFeatureRange(featureId: string, featureRange: IFeatureDirtyRangeType) {\n        this._runtimeFeatureRange[featureId] = featureRange;\n    }\n\n    getRuntimeFeatureCellData() {\n        return this._runtimeFeatureCellData;\n    }\n\n    setRuntimeFeatureCellData(featureId: string, featureData: IRuntimeUnitDataType) {\n        this._runtimeFeatureCellData[featureId] = featureData;\n    }\n\n    getAllRuntimeData(): IAllRuntimeData {\n        return {\n            unitData: this.getUnitData(),\n            arrayFormulaRange: this.getUnitArrayFormula(),\n            unitOtherData: this.getRuntimeOtherData(),\n            functionsExecutedState: this._functionsExecutedState,\n            arrayFormulaCellData: this.getRuntimeArrayFormulaCellData(),\n            clearArrayFormulaCellData: this.getRuntimeClearArrayFormulaCellData(),\n\n            runtimeFeatureRange: this.getRuntimeFeatureRange(),\n            runtimeFeatureCellData: this.getRuntimeFeatureCellData(),\n        };\n    }\n\n    getRuntimeState(): IExecutionInProgressParams {\n        return {\n            totalFormulasToCalculate: this.getTotalFormulasToCalculate(),\n\n            completedFormulasCount: this.getCompletedFormulasCount(),\n\n            totalArrayFormulasToCalculate: this.getTotalArrayFormulasToCalculate(),\n\n            completedArrayFormulasCount: this.getCompletedArrayFormulasCount(),\n\n            stage: this.getFormulaExecuteStage(),\n\n            formulaCycleIndex: this.getFormulaCycleIndex(),\n        };\n    }\n\n    // eslint-disable-next-line complexity\n    private _checkIfArrayFormulaRangeHasData(\n        formulaUnitId: string,\n        formulaSheetId: string,\n        formulaRow: number,\n        formulaColumn: number,\n        arrayRange: IRange\n    ) {\n        const { startRow, startColumn, endRow, endColumn } = arrayRange;\n\n        const unitData = this._currentConfigService.getUnitData();\n        // this._runtimeArrayFormulaCellData data is incomplete, use the data on configService\n        const arrayData = this._currentConfigService.getArrayFormulaCellData();\n\n        const unitArrayFormulaRange =\n            this._unitArrayFormulaRange[formulaUnitId]?.[formulaSheetId]?.[formulaRow]?.[formulaColumn];\n\n        for (let r = startRow; r <= endRow; r++) {\n            for (let c = startColumn; c <= endColumn; c++) {\n                if (r === formulaRow && formulaColumn === c) {\n                    continue;\n                }\n\n                const cell = this._runtimeData?.[formulaUnitId]?.[formulaSheetId]?.getValue(r, c);\n\n                const arrayDataCell = arrayData?.[formulaUnitId]?.[formulaSheetId]?.getValue(\n                    r,\n                    c\n                );\n                const currentCell = unitData?.[formulaUnitId]?.[formulaSheetId]?.cellData?.getValue(r, c);\n\n                const featureCell = this._getRuntimeFeatureCellValue(r, c, formulaSheetId, formulaUnitId);\n\n                // arrayDataCell may display 0 as {v: null}. Although it is an empty cell, it is considered to have a value.\n                if (\n                    !isNullCellForFormula(cell) ||\n                    this._isInOtherArrayFormulaRange(formulaUnitId, formulaSheetId, formulaRow, formulaColumn, r, c) ||\n                    !isNullCellForFormula(currentCell) ||\n                    !isNullCellForFormula(featureCell)\n                ) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    private _getRuntimeFeatureCellValue(row: number, column: number, sheetId: string, unitId: string) {\n        return getRuntimeFeatureCell(row, column, sheetId, unitId, this._runtimeFeatureCellData);\n    }\n\n    private _arrayCellHasData(cell: Nullable<ICellData>) {\n        if (cell === null || cell === undefined) {\n            return false;\n        }\n\n        if (cell.v !== undefined) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * If the current array formula in the extended area intersects with the existing array formula, a #SPILL! error will be reported. Note that if other array formulas are already #SPILL!, they will not conflict with the current array formula\n     * @param formulaUnitId\n     * @param formulaSheetId\n     * @param formulaRow\n     * @param formulaColumn\n     * @param r\n     * @param c\n     * @returns\n     */\n    private _isInOtherArrayFormulaRange(formulaUnitId: string, formulaSheetId: string, formulaRow: number, formulaColumn: number, r: number, c: number) {\n        const arrayFormulaRange = this._currentConfigService.getArrayFormulaRange()[formulaUnitId]?.[formulaSheetId];\n\n        if (arrayFormulaRange == null) {\n            return false;\n        }\n\n        let isCellOverlapping = false;\n\n        const arrayFormulaRangeMatrix = new ObjectMatrix(arrayFormulaRange);\n        arrayFormulaRangeMatrix.forValue((rangeRow, rangeCol, range) => {\n            // skip the current range\n            if (rangeRow === formulaRow && rangeCol === formulaColumn) {\n                return;\n            }\n\n            // Check if the cell is part of any other range in arrayFormulaRangeMatrix, and value is not #SPILL!\n            const isOverlapping = this._isInArrayFormulaRange(range, r, c);\n            const cell = this._runtimeData[formulaUnitId]?.[formulaSheetId]?.getValue(rangeRow, rangeCol);\n            if (isOverlapping && cell?.v !== ErrorType.SPILL) {\n                isCellOverlapping = true;\n            }\n        });\n\n        return isCellOverlapping;\n    }\n\n    private _isInArrayFormulaRange(range: Nullable<IRange>, r: number, c: number) {\n        if (range == null) {\n            return false;\n        }\n\n        const { startRow, startColumn, endRow, endColumn } = range;\n\n        if (r >= startRow && r <= endRow && c >= startColumn && c <= endColumn) {\n            return true;\n        }\n\n        return false;\n    }\n\n    private _checkIfArrayFormulaExceeded(rowCount: number, columnCount: number, arrayRange: IRange) {\n        if (arrayRange.endRow >= rowCount || arrayRange.endColumn >= columnCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    private _isInDirtyRange(unitId: string, sheetId: string, row: number, column: number) {\n        const dirtyRanges = this._currentConfigService.getDirtyRanges();\n        // Handle the deletion and add of sheet.\n        if (dirtyRanges.length === 0) {\n            return true;\n        }\n        return isInDirtyRange(dirtyRanges, unitId, sheetId, row, column);\n    }\n}\n\nexport const IFormulaRuntimeService = createIdentifier<FormulaRuntimeService>('univer.formula.runtime.service');\n"],"mappings":";;;;;;;;;;;AA2BA,SAAS,kBAAkB,YAAY,oBAAoB;AAC3D,SAAS,sBAAsB;AAC/B,SAAS,iBAAiB;AAC1B,SAAS,4BAA4B;AACrC,SAAS,6BAA6B;AACtC,SAAS,4BAA4B,uCAAuC;AAC5E,SAAS,kCAAkC;AAC3C,SAAS,8BAA8B;AACvC,SAAS,wBAAwB;AACjC,SAAS,oCAAoC;AAMtC,WAAK,0BAAL,kBAAKA,6BAAL;AACH,EAAAA,kDAAA;AACA,EAAAA,kDAAA;AACA,EAAAA,kDAAA;AACA,EAAAA,kDAAA;AACA,EAAAA,kDAAA;AACA,EAAAA,kDAAA;AACA,EAAAA,kDAAA;AACA,EAAAA,kDAAA;AACA,EAAAA,kDAAA;AATQ,SAAAA;AAAA,GAAA;AAYL,WAAK,2BAAL,kBAAKC,8BAAL;AACH,EAAAA,oDAAA;AACA,EAAAA,oDAAA;AACA,EAAAA,oDAAA;AACA,EAAAA,oDAAA;AAJQ,SAAAA;AAAA,GAAA;AA4HL,WAAM,wBAAN,cAAoC,WAA6C;AAAA,EA6CpF,YACmD,uBACjD;AACE,UAAM;AAFyC;AAAA,EAGnD;AAAA,EAhDQ,uBAAgD;AAAA,EAEhD,aAAa;AAAA,EAEb,cAAsB;AAAA,EACtB,iBAAyB;AAAA,EAEzB,mBAA2B,OAAO;AAAA,EAClC,sBAA8B,OAAO;AAAA,EAErC,oBAA4B;AAAA,EAC5B,iBAAyB;AAAA,EAEzB,eAAqC,CAAC;AAAA,EAEtC,oBAA+C,CAAC;AAAA;AAAA,EAEhD,yBAAiD,CAAC;AAAA,EAElD,+BAAqD,CAAC;AAAA,EAEtD,oCAA0D,CAAC;AAAA,EAE3D,uBAAwE,CAAC;AAAA,EAEzE,0BAAyE,CAAC;AAAA,EAE1E,0BAAoD;AAAA;AAAA,EAGpD,gCAAiF,oBAAI,IAAI;AAAA,EAEzF,4BAAoC;AAAA,EAEpC,0BAAkC;AAAA,EAElC,iCAAyC;AAAA,EAEzC,+BAAuC;AAAA,EAEvC,qBAA6B;AAAA,EAE7B,qBAA8B;AAAA,EAQtC,IAAI,aAAa;AACb,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAI,gBAAgB;AAChB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAI,kBAAkB;AAClB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAI,qBAAqB;AACrB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAI,mBAAmB;AACnB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAI,gBAAgB;AAChB,WAAO,KAAK;AAAA,EAChB;AAAA,EAES,UAAgB;AACrB,UAAM,QAAQ;AAEd,SAAK,MAAM;AACX,SAAK,0BAA0B,CAAC;AAChC,SAAK,uBAAuB,CAAC;AAC7B,SAAK,mCAAmC;AAAA,EAC5C;AAAA,EAEA,wBAAwB;AACpB,SAAK,qBAAqB;AAAA,EAC9B;AAAA,EAEA,yBAAyB;AACrB,SAAK,qBAAqB;AAAA,EAC9B;AAAA,EAEA,oBAAoB;AAChB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,qBAAqB,OAAe;AAChC,SAAK,qBAAqB;AAAA,EAC9B;AAAA,EAEA,uBAAuB;AACnB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,iCAAiC,OAAe;AAC5C,SAAK,iCAAiC;AAAA,EAC1C;AAAA,EAEA,mCAAmC;AAC/B,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,+BAA+B,OAAe;AAC1C,SAAK,+BAA+B;AAAA,EACxC;AAAA,EAEA,iCAAiC;AAC7B,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,4BAA4B,OAAe;AACvC,SAAK,4BAA4B;AAAA,EACrC;AAAA,EAEA,8BAA8B;AAC1B,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,0BAA0B,OAAe;AACrC,SAAK,0BAA0B;AAAA,EACnC;AAAA,EAEA,4BAA4B;AACxB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,+BAA+B;AAC3B,SAAK,0BAA0B;AAAA,EACnC;AAAA,EAEA,8BAA8B;AAC1B,SAAK,0BAA0B;AAAA,EACnC;AAAA,EAEA,gCAAgC;AAC5B,SAAK,0BAA0B;AAAA,EACnC;AAAA,EAEA,mCAAmC;AAC/B,SAAK,0BAA0B;AAAA,EACnC;AAAA,EAEA,gBAAgB;AACZ,SAAK,aAAa;AAElB,SAAK,uBAAuB,YAA4B;AAAA,EAC5D;AAAA,EAEA,kBAAkB;AACd,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,uBAAuB,MAA+B;AAClD,SAAK,uBAAuB;AAAA,EAChC;AAAA,EAEA,yBAAyB;AACrB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,QAAQ;AACJ,SAAK,uBAAuB;AAC5B,SAAK,eAAe,CAAC;AACrB,SAAK,oBAAoB,CAAC;AAC1B,SAAK,yBAAyB,CAAC;AAC/B,SAAK,+BAA+B,CAAC;AACrC,SAAK,oCAAoC,CAAC;AAK1C,SAAK,8BAA8B,MAAM;AACzC,SAAK,iCAAiC;AAEtC,SAAK,aAAa;AAClB,SAAK,qBAAqB;AAC1B,SAAK,4BAA4B;AACjC,SAAK,0BAA0B;AAE/B,SAAK,mCAAmC;AAAA,EAC5C;AAAA,EAEA,qCAAqC;AACjC,+BAA2B;AAC3B,oCAAgC;AAChC,+BAA2B;AAAA,EAC/B;AAAA,EAEA,WAAW,KAAa,QAAgB,UAAkB,aAAqB,SAAiB,QAAgB;AAC5G,SAAK,cAAc;AACnB,SAAK,iBAAiB;AACtB,SAAK,mBAAmB;AACxB,SAAK,sBAAsB;AAC3B,SAAK,oBAAoB;AACzB,SAAK,iBAAiB;AAAA,EAC1B;AAAA,EAEA,oCAAoC;AAChC,SAAK,8BAA8B,MAAM;AAAA,EAC7C;AAAA,EAEA,qCAAqC,UAAkB,WAA+C;AAClG,SAAK,8BAA8B,IAAI,UAAU,SAAS;AAAA,EAC9D;AAAA,EAEA,gCAAgC,UAAgE;AAC5F,WAAO,KAAK,8BAA8B,IAAI,QAAQ;AAAA,EAC1D;AAAA,EAEA,oBAAoB,WAAmB,GAAW,GAAW,iBAAsC;AAC/F,UAAM,YAAY,KAAK;AACvB,UAAM,SAAS,KAAK;AAEpB,QAAI,KAAK,kBAAkB,MAAM,MAAM,QAAW;AAC9C,WAAK,kBAAkB,MAAM,IAAI,CAAC;AAAA,IACtC;AAEA,UAAM,WAAW,KAAK,kBAAkB,MAAM;AAE9C,QAAI,SAAS,SAAS,MAAM,UAAa,SAAS,SAAS,MAAM,MAAM;AACnE,eAAS,SAAS,IAAI,CAAC;AAAA,IAC3B;AAEA,UAAM,mBAAmB,SAAS,SAAS;AAE3C,QAAI,YAAqC,CAAC;AAE1C,QACI,gBAAgB,kBAAkB,KACjC,gBAAgB,cAAc,KAAM,gBAAoC,QAAQ,GACnF;AACE,YAAM,wBAAwB;AAC9B,YAAM,EAAE,UAAU,YAAY,IAAI,sBAAsB,iBAAiB;AACzE,4BAAsB,SAAS,CAAC,aAAa,UAAU,gBAAgB;AACnE,cAAM,QAAQ,uBAAuB,WAAW;AAEhD,cAAM,MAAM,WAAW;AACvB,cAAM,SAAS,cAAc;AAC7B,YAAI,UAAU,GAAG,KAAK,MAAM;AACxB,oBAAU,GAAG,IAAI,CAAC;AAAA,QACtB;AAEA,kBAAU,GAAG,EAAE,MAAM,IAAI;AAAA,MAC7B,CAAC;AAAA,IACL,OAAO;AACH,kBAAY,CAAC,CAAC,uBAAuB,eAAkC,CAAE,CAAC;AAAA,IAC9E;AAEA,QAAI,iBAAiB,SAAS,MAAM,UAAa,iBAAiB,SAAS,MAAM,MAAM;AACnF,uBAAiB,SAAS,IAAI,CAAC;AAAA,IACnC;AAEA,QAAI,iBAAiB,SAAS,EAAE,CAAC,MAAM,UAAa,iBAAiB,SAAS,EAAE,CAAC,MAAM,MAAM;AACzF,uBAAiB,SAAS,EAAE,CAAC,IAAI,CAAC;AAAA,IACtC;AAGA,qBAAiB,SAAS,EAAE,CAAC,EAAE,CAAC,IAAI;AAAA,EACxC;AAAA;AAAA,EAGA,eAAe,iBAAsC;AACjD,UAAM,MAAM,KAAK;AACjB,UAAM,SAAS,KAAK;AACpB,UAAM,WAAW,KAAK;AACtB,UAAM,cAAc,KAAK;AACzB,UAAM,UAAU,KAAK;AACrB,UAAM,SAAS,KAAK;AAEpB,QAAI,KAAK,aAAa,MAAM,KAAK,MAAM;AACnC,WAAK,aAAa,MAAM,IAAI,CAAC;AAAA,IACjC;AAEA,UAAM,WAAW,KAAK,aAAa,MAAM;AAEzC,QAAI,SAAS,OAAO,KAAK,MAAM;AAC3B,eAAS,OAAO,IAAI,IAAI,aAAkC;AAAA,IAC9D;AAEA,QAAI,KAAK,uBAAuB,MAAM,KAAK,MAAM;AAC7C,WAAK,uBAAuB,MAAM,IAAI,CAAC;AAAA,IAC3C;AAEA,UAAM,oBAAoB,KAAK,uBAAuB,MAAM;AAE5D,QAAI,kBAAkB,OAAO,MAAM,QAAQ,kBAAkB,OAAO,MAAM,QAAW;AACjF,wBAAkB,OAAO,IAAI,CAAC;AAAA,IAClC;AAEA,UAAM,YAAY,IAAI,aAAqB,kBAAkB,OAAO,CAAC;AAErE,QAAI,KAAK,6BAA6B,MAAM,MAAM,QAAW;AACzD,WAAK,6BAA6B,MAAM,IAAI,CAAC;AAAA,IACjD;AAEA,UAAM,8BAA8B,KAAK,6BAA6B,MAAM;AAE5E,QAAI,4BAA4B,OAAO,KAAK,MAAM;AAC9C,kCAA4B,OAAO,IAAI,IAAI,aAAkC;AAAA,IACjF;AAEA,QAAI,KAAK,kCAAkC,MAAM,MAAM,QAAW;AAC9D,WAAK,kCAAkC,MAAM,IAAI,CAAC;AAAA,IACtD;AAEA,UAAM,4BAA4B,KAAK,kCAAkC,MAAM;AAE/E,QAAI,0BAA0B,OAAO,KAAK,MAAM;AAC5C,gCAA0B,OAAO,IAAI,IAAI,aAAkC;AAAA,IAC/E;AAEA,UAAM,YAAY,SAAS,OAAO;AAElC,UAAM,uBAAuB,4BAA4B,OAAO;AAEhE,UAAM,qBAAqB,0BAA0B,OAAO;AAE5D,QACI,gBAAgB,kBAAkB,KACjC,gBAAgB,cAAc,KAAM,gBAAoC,QAAQ,GACnF;AACE,YAAM,wBAAwB;AAE9B,YAAM,EAAE,UAAU,aAAa,QAAQ,UAAU,IAAI,sBAAsB,iBAAiB;AAM5F,UAAI,aAAa,UAAU,gBAAgB,WAAW;AAClD,cAAM,YAAY,sBAAsB,aAAa;AAErD,cAAM,cAAc,uBAAuB,SAAS;AACpD,kBAAU,SAAS,KAAK,QAAQ,WAAW;AAC3C,2BAAmB,SAAS,KAAK,QAAQ,WAAW;AAEpD;AAAA,MACJ;AAEA,YAAM,aAAa;AAAA,QACf,UAAU;AAAA,QACV,aAAa;AAAA,QACb,QAAQ,SAAS,WAAW;AAAA,QAC5B,WAAW,YAAY,cAAc;AAAA,MACzC;AAGA,gBAAU,SAAS,KAAK,QAAQ,UAAU;AAE1C,UACI,KAAK,iCAAiC,QAAQ,SAAS,KAAK,QAAQ,UAAU,KAC9E,KAAK,6BAA6B,UAAU,aAAa,UAAU,GACrE;AACE,cAAM,cAAc,uBAAuB,iBAAiB,OAAO,UAAU,KAAK,CAAC;AACnF,kBAAU,SAAS,KAAK,QAAQ,WAAW;AAC3C,2BAAmB,SAAS,KAAK,QAAQ,WAAW;AAMpD,cAAMC,YAAW,KAAK,sBAAsB,YAAY;AACxD,8BAAsB,SAAS,CAAC,GAAG,UAAU,gBAAgB;AACzD,gBAAM,aAAa,WAAW,WAAW;AACzC,gBAAM,gBAAgB,cAAc,cAAc;AAClD,gBAAM,OAAOA,UAAS,MAAM,IAAI,OAAO,GAAG,SAAS,SAAS,YAAY,aAAa;AAErF,cAAI,aAAa,YAAY,gBAAgB,aAAa;AACtD,iCAAqB,SAAS,KAAK,QAAQ,WAAW;AAAA,UAC1D,WAAW,QAAQ,MAAM;AACrB,gBAAI,KAAK,KAAK,MAAM;AAChB,mBAAK,IAAI;AAAA,YACb;AACA,iCAAqB,SAAS,YAAY,eAAe,IAAI;AAAA,UACjE,WACS,KAAK,4BAA4B,QAAQ,SAAS,KAAK,QAAQ,YAAY,aAAa,GAAG;AAChG,mBAAO;AAAA,UACX,OAAO;AACH,iCAAqB,SAAS,YAAY,eAAe,EAAE,GAAG,GAAG,CAAC;AAAA,UACtE;AAAA,QACJ,CAAC;AAAA,MACL,OAAO;AACH,cAAM,aAAa,iBAAiB,OAAO,UAAU,KAAK;AAC1D,8BAAsB,SAAS,CAAC,aAAa,UAAU,gBAAgB;AACnE,gBAAM,QAAQ,uBAAuB,WAAW;AAChD,cAAI,aAAa,YAAY,gBAAgB,aAAa;AAKtD,gBAAI,eAAe,QAAQ,YAAY,QAAQ,KAAK,YAAY,YAAY,UAAU,GAAG;AACrF,iCAAmB,SAAS,KAAK,QAAQ,CAAC,CAAC;AAC3C,wBAAU,SAAS,KAAK,QAAQ,EAAE,GAAG,uBAAuB,UAAU,EAAE,CAAC;AACzE,qBAAO;AAAA,YACX;AACA,sBAAU,SAAS,KAAK,QAAQ,EAAE,GAAG,MAAM,CAAC;AAAA,UAChD;AAEA,gBAAM,aAAa,WAAW,WAAW;AACzC,gBAAM,gBAAgB,cAAc,cAAc;AAElD,+BAAqB,SAAS,YAAY,eAAe,KAAK;AAAA,QAClE,CAAC;AAAA,MACL;AAAA,IACJ,OAAO;AACH,YAAM,cAAc,uBAAuB,eAAkC;AAC7E,gBAAU,SAAS,KAAK,QAAQ,WAAW;AAC3C,yBAAmB,SAAS,KAAK,QAAQ,WAAW;AAAA,IACxD;AAAA,EACJ;AAAA,EAEA,cAAc;AACV,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,sBAAsB;AAClB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,sBAAsB;AAClB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,iCAAiC;AAC7B,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,sCAAsC;AAClC,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,yBAAyB;AACrB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,uBAAuB,WAAmB,cAAsC;AAC5E,SAAK,qBAAqB,SAAS,IAAI;AAAA,EAC3C;AAAA,EAEA,4BAA4B;AACxB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,0BAA0B,WAAmB,aAAmC;AAC5E,SAAK,wBAAwB,SAAS,IAAI;AAAA,EAC9C;AAAA,EAEA,oBAAqC;AACjC,WAAO;AAAA,MACH,UAAU,KAAK,YAAY;AAAA,MAC3B,mBAAmB,KAAK,oBAAoB;AAAA,MAC5C,eAAe,KAAK,oBAAoB;AAAA,MACxC,wBAAwB,KAAK;AAAA,MAC7B,sBAAsB,KAAK,+BAA+B;AAAA,MAC1D,2BAA2B,KAAK,oCAAoC;AAAA,MAEpE,qBAAqB,KAAK,uBAAuB;AAAA,MACjD,wBAAwB,KAAK,0BAA0B;AAAA,IAC3D;AAAA,EACJ;AAAA,EAEA,kBAA8C;AAC1C,WAAO;AAAA,MACH,0BAA0B,KAAK,4BAA4B;AAAA,MAE3D,wBAAwB,KAAK,0BAA0B;AAAA,MAEvD,+BAA+B,KAAK,iCAAiC;AAAA,MAErE,6BAA6B,KAAK,+BAA+B;AAAA,MAEjE,OAAO,KAAK,uBAAuB;AAAA,MAEnC,mBAAmB,KAAK,qBAAqB;AAAA,IACjD;AAAA,EACJ;AAAA;AAAA,EAGQ,iCACJ,eACA,gBACA,YACA,eACA,YACF;AACE,UAAM,EAAE,UAAU,aAAa,QAAQ,UAAU,IAAI;AAErD,UAAM,WAAW,KAAK,sBAAsB,YAAY;AAExD,UAAM,YAAY,KAAK,sBAAsB,wBAAwB;AAErE,UAAM,wBACF,KAAK,uBAAuB,aAAa,IAAI,cAAc,IAAI,UAAU,IAAI,aAAa;AAE9F,aAAS,IAAI,UAAU,KAAK,QAAQ,KAAK;AACrC,eAAS,IAAI,aAAa,KAAK,WAAW,KAAK;AAC3C,YAAI,MAAM,cAAc,kBAAkB,GAAG;AACzC;AAAA,QACJ;AAEA,cAAM,OAAO,KAAK,eAAe,aAAa,IAAI,cAAc,GAAG,SAAS,GAAG,CAAC;AAEhF,cAAM,gBAAgB,YAAY,aAAa,IAAI,cAAc,GAAG;AAAA,UAChE;AAAA,UACA;AAAA,QACJ;AACA,cAAM,cAAc,WAAW,aAAa,IAAI,cAAc,GAAG,UAAU,SAAS,GAAG,CAAC;AAExF,cAAM,cAAc,KAAK,4BAA4B,GAAG,GAAG,gBAAgB,aAAa;AAGxF,YACI,CAAC,qBAAqB,IAAI,KAC1B,KAAK,4BAA4B,eAAe,gBAAgB,YAAY,eAAe,GAAG,CAAC,KAC/F,CAAC,qBAAqB,WAAW,KACjC,CAAC,qBAAqB,WAAW,GACnC;AACE,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAAA,EAEQ,4BAA4B,KAAa,QAAgB,SAAiB,QAAgB;AAC9F,WAAO,sBAAsB,KAAK,QAAQ,SAAS,QAAQ,KAAK,uBAAuB;AAAA,EAC3F;AAAA,EAEQ,kBAAkB,MAA2B;AACjD,QAAI,SAAS,QAAQ,SAAS,QAAW;AACrC,aAAO;AAAA,IACX;AAEA,QAAI,KAAK,MAAM,QAAW;AACtB,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYQ,4BAA4B,eAAuB,gBAAwB,YAAoB,eAAuB,GAAW,GAAW;AAChJ,UAAM,oBAAoB,KAAK,sBAAsB,qBAAqB,EAAE,aAAa,IAAI,cAAc;AAE3G,QAAI,qBAAqB,MAAM;AAC3B,aAAO;AAAA,IACX;AAEA,QAAI,oBAAoB;AAExB,UAAM,0BAA0B,IAAI,aAAa,iBAAiB;AAClE,4BAAwB,SAAS,CAAC,UAAU,UAAU,UAAU;AAE5D,UAAI,aAAa,cAAc,aAAa,eAAe;AACvD;AAAA,MACJ;AAGA,YAAM,gBAAgB,KAAK,uBAAuB,OAAO,GAAG,CAAC;AAC7D,YAAM,OAAO,KAAK,aAAa,aAAa,IAAI,cAAc,GAAG,SAAS,UAAU,QAAQ;AAC5F,UAAI,iBAAiB,MAAM,MAAM,UAAU,OAAO;AAC9C,4BAAoB;AAAA,MACxB;AAAA,IACJ,CAAC;AAED,WAAO;AAAA,EACX;AAAA,EAEQ,uBAAuB,OAAyB,GAAW,GAAW;AAC1E,QAAI,SAAS,MAAM;AACf,aAAO;AAAA,IACX;AAEA,UAAM,EAAE,UAAU,aAAa,QAAQ,UAAU,IAAI;AAErD,QAAI,KAAK,YAAY,KAAK,UAAU,KAAK,eAAe,KAAK,WAAW;AACpE,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAAA,EAEQ,6BAA6B,UAAkB,aAAqB,YAAoB;AAC5F,QAAI,WAAW,UAAU,YAAY,WAAW,aAAa,aAAa;AACtE,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAAA,EAEQ,gBAAgB,QAAgB,SAAiB,KAAa,QAAgB;AAClF,UAAM,cAAc,KAAK,sBAAsB,eAAe;AAE9D,QAAI,YAAY,WAAW,GAAG;AAC1B,aAAO;AAAA,IACX;AACA,WAAO,eAAe,aAAa,QAAQ,SAAS,KAAK,MAAM;AAAA,EACnE;AACJ;AA1mBa,wBAAN;AAAA,EA8CE;AAAA,GA9CI;AA4mBN,aAAM,yBAAyB,iBAAwC,gCAAgC;","names":["FormulaExecuteStageType","FormulaExecutedStateType","unitData"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1b23e1e3ff8bd22b5e44fa8a513a3560028c24a1"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/node-type.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/node-type.ts","statementMap":{"0":{"start":{"line":1,"column":38},"end":{"line":16,"column":18}},"1":{"start":{"line":2,"column":2},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":46}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":52}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":48}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":68}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":46}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":44}},"9":{"start":{"line":10,"column":2},"end":{"line":10,"column":44}},"10":{"start":{"line":11,"column":2},"end":{"line":11,"column":47}},"11":{"start":{"line":12,"column":2},"end":{"line":12,"column":49}},"12":{"start":{"line":13,"column":2},"end":{"line":13,"column":49}},"13":{"start":{"line":14,"column":2},"end":{"line":14,"column":45}},"14":{"start":{"line":15,"column":2},"end":{"line":15,"column":19}},"15":{"start":{"line":17,"column":46},"end":{"line":28,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":39},"end":{"line":1,"column":40}},"loc":{"start":{"line":1,"column":54},"end":{"line":16,"column":1}},"line":1}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":3},"end":{"line":16,"column":17}},"type":"binary-expr","locations":[{"start":{"line":16,"column":3},"end":{"line":16,"column":11}},{"start":{"line":16,"column":15},"end":{"line":16,"column":17}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/node-type.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum NodeType {\n    REFERENCE = 1,\n    VALUE = 2,\n    OPERATOR = 3,\n    FUNCTION = 4,\n    LAMBDA = 5,\n    LAMBDA_PARAMETER = 6,\n    ERROR = 7,\n    BASE = 8,\n    ROOT = 9,\n    UNION = 10,\n    PREFIX = 11,\n    SUFFIX = 12,\n    NULL = 13,\n}\n\nexport const NODE_ORDER_MAP = new Map([\n    [NodeType.REFERENCE, 7],\n    [NodeType.VALUE, 9],\n    [NodeType.OPERATOR, 8],\n    [NodeType.FUNCTION, 6],\n    [NodeType.LAMBDA, 1],\n    [NodeType.LAMBDA_PARAMETER, 2],\n    [NodeType.ROOT, 10],\n    [NodeType.UNION, 3],\n    [NodeType.PREFIX, 4],\n    [NodeType.SUFFIX, 5],\n]);\n"],"mappings":"AAgBO,WAAK,WAAL,kBAAKA,cAAL;AACH,EAAAA,oBAAA,eAAY,KAAZ;AACA,EAAAA,oBAAA,WAAQ,KAAR;AACA,EAAAA,oBAAA,cAAW,KAAX;AACA,EAAAA,oBAAA,cAAW,KAAX;AACA,EAAAA,oBAAA,YAAS,KAAT;AACA,EAAAA,oBAAA,sBAAmB,KAAnB;AACA,EAAAA,oBAAA,WAAQ,KAAR;AACA,EAAAA,oBAAA,UAAO,KAAP;AACA,EAAAA,oBAAA,UAAO,KAAP;AACA,EAAAA,oBAAA,WAAQ,MAAR;AACA,EAAAA,oBAAA,YAAS,MAAT;AACA,EAAAA,oBAAA,YAAS,MAAT;AACA,EAAAA,oBAAA,UAAO,MAAP;AAbQ,SAAAA;AAAA,GAAA;AAgBL,aAAM,iBAAiB,oBAAI,IAAI;AAAA,EAClC,CAAC,mBAAoB,CAAC;AAAA,EACtB,CAAC,eAAgB,CAAC;AAAA,EAClB,CAAC,kBAAmB,CAAC;AAAA,EACrB,CAAC,kBAAmB,CAAC;AAAA,EACrB,CAAC,gBAAiB,CAAC;AAAA,EACnB,CAAC,0BAA2B,CAAC;AAAA,EAC7B,CAAC,cAAe,EAAE;AAAA,EAClB,CAAC,gBAAgB,CAAC;AAAA,EAClB,CAAC,iBAAiB,CAAC;AAAA,EACnB,CAAC,iBAAiB,CAAC;AACvB,CAAC;","names":["NodeType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b71e2fa0f8519e20e063e9795731aa32001c6de6"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/base-ast-node.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/base-ast-node.ts","statementMap":{"0":{"start":{"line":6,"column":4},"end":{"line":6,"column":25}},"1":{"start":{"line":8,"column":14},"end":{"line":8,"column":16}},"2":{"start":{"line":12,"column":20},"end":{"line":12,"column":25}},"3":{"start":{"line":13,"column":11},"end":{"line":13,"column":16}},"4":{"start":{"line":14,"column":13},"end":{"line":14,"column":18}},"5":{"start":{"line":15,"column":31},"end":{"line":15,"column":36}},"6":{"start":{"line":17,"column":4},"end":{"line":19,"column":7}},"7":{"start":{"line":18,"column":6},"end":{"line":18,"column":21}},"8":{"start":{"line":20,"column":4},"end":{"line":20,"column":33}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":29}},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":24}},"11":{"start":{"line":23,"column":4},"end":{"line":23,"column":30}},"12":{"start":{"line":24,"column":4},"end":{"line":24,"column":24}},"13":{"start":{"line":27,"column":4},"end":{"line":27,"column":25}},"14":{"start":{"line":30,"column":4},"end":{"line":30,"column":23}},"15":{"start":{"line":33,"column":4},"end":{"line":33,"column":25}},"16":{"start":{"line":36,"column":4},"end":{"line":36,"column":43}},"17":{"start":{"line":39,"column":4},"end":{"line":39,"column":23}},"18":{"start":{"line":42,"column":4},"end":{"line":42,"column":25}},"19":{"start":{"line":45,"column":4},"end":{"line":45,"column":24}},"20":{"start":{"line":48,"column":4},"end":{"line":48,"column":24}},"21":{"start":{"line":49,"column":4},"end":{"line":49,"column":27}},"22":{"start":{"line":52,"column":4},"end":{"line":52,"column":43}},"23":{"start":{"line":55,"column":4},"end":{"line":55,"column":26}},"24":{"start":{"line":58,"column":4},"end":{"line":58,"column":36}},"25":{"start":{"line":61,"column":4},"end":{"line":61,"column":23}},"26":{"start":{"line":64,"column":4},"end":{"line":64,"column":30}},"27":{"start":{"line":67,"column":4},"end":{"line":67,"column":29}},"28":{"start":{"line":70,"column":4},"end":{"line":70,"column":32}},"29":{"start":{"line":73,"column":4},"end":{"line":73,"column":32}},"30":{"start":{"line":80,"column":4},"end":{"line":80,"column":55}},"31":{"start":{"line":83,"column":18},"end":{"line":83,"column":33}},"32":{"start":{"line":84,"column":21},"end":{"line":84,"column":39}},"33":{"start":{"line":85,"column":34},"end":{"line":85,"column":36}},"34":{"start":{"line":86,"column":26},"end":{"line":86,"column":41}},"35":{"start":{"line":87,"column":4},"end":{"line":90,"column":5}},"36":{"start":{"line":87,"column":17},"end":{"line":87,"column":18}},"37":{"start":{"line":88,"column":19},"end":{"line":88,"column":30}},"38":{"start":{"line":89,"column":6},"end":{"line":89,"column":51}},"39":{"start":{"line":91,"column":19},"end":{"line":94,"column":5}},"40":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"41":{"start":{"line":96,"column":6},"end":{"line":96,"column":46}},"42":{"start":{"line":98,"column":4},"end":{"line":98,"column":18}},"43":{"start":{"line":101,"column":4},"end":{"line":101,"column":62}},"44":{"start":{"line":104,"column":4},"end":{"line":104,"column":38}},"45":{"start":{"line":107,"column":4},"end":{"line":107,"column":30}},"46":{"start":{"line":113,"column":4},"end":{"line":113,"column":21}},"47":{"start":{"line":114,"column":4},"end":{"line":114,"column":64}},"48":{"start":{"line":117,"column":4},"end":{"line":117,"column":26}},"49":{"start":{"line":120,"column":4},"end":{"line":120,"column":36}},"50":{"start":{"line":123,"column":4},"end":{"line":123,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":2},"end":{"line":5,"column":3}},"loc":{"start":{"line":5,"column":22},"end":{"line":7,"column":3}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":2},"end":{"line":16,"column":3}},"loc":{"start":{"line":16,"column":12},"end":{"line":25,"column":3}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":27},"end":{"line":17,"column":28}},"loc":{"start":{"line":17,"column":37},"end":{"line":19,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":2},"end":{"line":26,"column":3}},"loc":{"start":{"line":26,"column":17},"end":{"line":28,"column":3}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":29,"column":2},"end":{"line":29,"column":3}},"loc":{"start":{"line":29,"column":12},"end":{"line":31,"column":3}},"line":29},"5":{"name":"(anonymous_5)","decl":{"start":{"line":32,"column":2},"end":{"line":32,"column":3}},"loc":{"start":{"line":32,"column":14},"end":{"line":34,"column":3}},"line":32},"6":{"name":"(anonymous_6)","decl":{"start":{"line":35,"column":2},"end":{"line":35,"column":3}},"loc":{"start":{"line":35,"column":30},"end":{"line":37,"column":3}},"line":35},"7":{"name":"(anonymous_7)","decl":{"start":{"line":38,"column":2},"end":{"line":38,"column":3}},"loc":{"start":{"line":38,"column":13},"end":{"line":40,"column":3}},"line":38},"8":{"name":"(anonymous_8)","decl":{"start":{"line":41,"column":2},"end":{"line":41,"column":3}},"loc":{"start":{"line":41,"column":15},"end":{"line":43,"column":3}},"line":41},"9":{"name":"(anonymous_9)","decl":{"start":{"line":44,"column":2},"end":{"line":44,"column":3}},"loc":{"start":{"line":44,"column":14},"end":{"line":46,"column":3}},"line":44},"10":{"name":"(anonymous_10)","decl":{"start":{"line":47,"column":2},"end":{"line":47,"column":3}},"loc":{"start":{"line":47,"column":18},"end":{"line":50,"column":3}},"line":47},"11":{"name":"(anonymous_11)","decl":{"start":{"line":51,"column":2},"end":{"line":51,"column":3}},"loc":{"start":{"line":51,"column":31},"end":{"line":53,"column":3}},"line":51},"12":{"name":"(anonymous_12)","decl":{"start":{"line":54,"column":2},"end":{"line":54,"column":3}},"loc":{"start":{"line":54,"column":16},"end":{"line":56,"column":3}},"line":54},"13":{"name":"(anonymous_13)","decl":{"start":{"line":57,"column":2},"end":{"line":57,"column":3}},"loc":{"start":{"line":57,"column":26},"end":{"line":59,"column":3}},"line":57},"14":{"name":"(anonymous_14)","decl":{"start":{"line":60,"column":2},"end":{"line":60,"column":3}},"loc":{"start":{"line":60,"column":13},"end":{"line":62,"column":3}},"line":60},"15":{"name":"(anonymous_15)","decl":{"start":{"line":63,"column":2},"end":{"line":63,"column":3}},"loc":{"start":{"line":63,"column":18},"end":{"line":65,"column":3}},"line":63},"16":{"name":"(anonymous_16)","decl":{"start":{"line":66,"column":2},"end":{"line":66,"column":3}},"loc":{"start":{"line":66,"column":13},"end":{"line":68,"column":3}},"line":66},"17":{"name":"(anonymous_17)","decl":{"start":{"line":69,"column":2},"end":{"line":69,"column":3}},"loc":{"start":{"line":69,"column":17},"end":{"line":71,"column":3}},"line":69},"18":{"name":"(anonymous_18)","decl":{"start":{"line":72,"column":2},"end":{"line":72,"column":3}},"loc":{"start":{"line":72,"column":18},"end":{"line":74,"column":3}},"line":72},"19":{"name":"(anonymous_19)","decl":{"start":{"line":75,"column":2},"end":{"line":75,"column":3}},"loc":{"start":{"line":75,"column":12},"end":{"line":76,"column":3}},"line":75},"20":{"name":"(anonymous_20)","decl":{"start":{"line":77,"column":2},"end":{"line":77,"column":3}},"loc":{"start":{"line":77,"column":28},"end":{"line":78,"column":3}},"line":77},"21":{"name":"(anonymous_21)","decl":{"start":{"line":79,"column":2},"end":{"line":79,"column":3}},"loc":{"start":{"line":79,"column":23},"end":{"line":81,"column":3}},"line":79},"22":{"name":"(anonymous_22)","decl":{"start":{"line":82,"column":2},"end":{"line":82,"column":3}},"loc":{"start":{"line":82,"column":14},"end":{"line":99,"column":3}},"line":82},"23":{"name":"(anonymous_23)","decl":{"start":{"line":100,"column":2},"end":{"line":100,"column":3}},"loc":{"start":{"line":100,"column":30},"end":{"line":102,"column":3}},"line":100},"24":{"name":"(anonymous_24)","decl":{"start":{"line":103,"column":2},"end":{"line":103,"column":3}},"loc":{"start":{"line":103,"column":32},"end":{"line":105,"column":3}},"line":103},"25":{"name":"(anonymous_25)","decl":{"start":{"line":106,"column":2},"end":{"line":106,"column":3}},"loc":{"start":{"line":106,"column":20},"end":{"line":108,"column":3}},"line":106},"26":{"name":"(anonymous_26)","decl":{"start":{"line":112,"column":2},"end":{"line":112,"column":3}},"loc":{"start":{"line":112,"column":25},"end":{"line":115,"column":3}},"line":112},"27":{"name":"(anonymous_27)","decl":{"start":{"line":116,"column":2},"end":{"line":116,"column":3}},"loc":{"start":{"line":116,"column":17},"end":{"line":118,"column":3}},"line":116},"28":{"name":"(anonymous_28)","decl":{"start":{"line":119,"column":2},"end":{"line":119,"column":3}},"loc":{"start":{"line":119,"column":27},"end":{"line":121,"column":3}},"line":119},"29":{"name":"(anonymous_29)","decl":{"start":{"line":122,"column":2},"end":{"line":122,"column":3}},"loc":{"start":{"line":122,"column":13},"end":{"line":124,"column":3}},"line":122}},"branchMap":{"0":{"loc":{"start":{"line":77,"column":14},"end":{"line":77,"column":26}},"type":"default-arg","locations":[{"start":{"line":77,"column":22},"end":{"line":77,"column":26}}],"line":77},"1":{"loc":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},{"start":{},"end":{}}],"line":95},"2":{"loc":{"start":{"line":101,"column":11},"end":{"line":101,"column":61}},"type":"binary-expr","locations":[{"start":{"line":101,"column":11},"end":{"line":101,"column":52}},{"start":{"line":101,"column":56},"end":{"line":101,"column":61}}],"line":101}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"0":[0],"1":[0,0],"2":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/base-ast-node.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\nimport type { ErrorType } from '../../basics/error-type';\n\nimport type { FunctionVariantType } from '../reference-object/base-reference-object';\n\nimport { AstNodePromiseType } from '../../basics/common';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { NodeType } from './node-type';\n\ninterface IAstNodeNodeJson {\n    token: string;\n    children?: IAstNodeNodeJson[];\n    nodeType: number;\n}\n\nexport type LambdaPrivacyVarType = Map<string, Nullable<BaseAstNode>>;\n\nexport class BaseAstNode {\n    private _children: BaseAstNode[] = [];\n\n    private _definedNames: Nullable<Array<string>>;\n\n    private _parent: Nullable<BaseAstNode>;\n\n    private _valueObject: Nullable<FunctionVariantType>;\n\n    private _calculateState = false;\n\n    private _async = false;\n\n    private _address = false;\n\n    private _isForcedCalculateFunction = false;\n\n    constructor(private _token: string) {\n\n    }\n\n    dispose(): void {\n        this._children.forEach((node) => {\n            node.dispose();\n        });\n        this._valueObject?.dispose();\n\n        this._valueObject = null;\n\n        this._children = [];\n\n        this._definedNames = null;\n\n        this._parent = null;\n    }\n\n    get nodeType() {\n        return NodeType.BASE;\n    }\n\n    isAsync() {\n        return this._async;\n    }\n\n    isAddress() {\n        return this._address;\n    }\n\n    isForcedCalculateFunction() {\n        return this._isForcedCalculateFunction;\n    }\n\n    setAsync() {\n        this._async = true;\n    }\n\n    setAddress() {\n        this._address = true;\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(node: BaseAstNode) {\n        this._parent = node;\n        node.addChildren(this);\n    }\n\n    setForcedCalculateFunction() {\n        this._isForcedCalculateFunction = true;\n    }\n\n    getChildren() {\n        return this._children;\n    }\n\n    addChildren(...astNode: BaseAstNode[]) {\n        this._children.push(...astNode);\n    }\n\n    getToken() {\n        return this._token;\n    }\n\n    setValue(value: Nullable<FunctionVariantType>) {\n        this._valueObject = value;\n    }\n\n    getValue(): Nullable<FunctionVariantType> {\n        return this._valueObject;\n    }\n\n    isCalculated() {\n        return this._calculateState;\n    }\n\n    setCalculated() {\n        this._calculateState = true;\n    }\n\n    execute() {\n        /* abstract */\n    }\n\n    setNotEmpty(state = true) {\n        /* abstract */\n    }\n\n    async executeAsync(): Promise<AstNodePromiseType> {\n        /* abstract */\n        return Promise.resolve(AstNodePromiseType.SUCCESS);\n    }\n\n    serialize() {\n        const token = this.getToken();\n        const children = this.getChildren();\n\n        const childrenSerialization: IAstNodeNodeJson[] = [];\n        const childrenCount = children.length;\n\n        for (let i = 0; i < childrenCount; i++) {\n            const item = children[i];\n            childrenSerialization.push(item.serialize());\n        }\n\n        const result: IAstNodeNodeJson = {\n            token,\n            nodeType: this.nodeType,\n        };\n\n        if (childrenCount > 0) {\n            result.children = childrenSerialization;\n        }\n\n        return result;\n    }\n\n    hasDefinedName(definedName: string) {\n        return this._definedNames?.includes(definedName) || false;\n    }\n\n    setDefinedNames(definedNames: Array<string>) {\n        this._definedNames = definedNames;\n    }\n\n    getDefinedNames() {\n        return this._definedNames;\n    }\n}\n\nexport class ErrorNode extends BaseAstNode {\n    private _errorValueObject: ErrorValueObject;\n\n    constructor(errorType: ErrorType) {\n        super(errorType);\n        this._errorValueObject = ErrorValueObject.create(errorType);\n    }\n\n    override get nodeType() {\n        return NodeType.ERROR;\n    }\n\n    static create(errorType: ErrorType) {\n        return new ErrorNode(errorType);\n    }\n\n    override getValue() {\n        return this._errorValueObject;\n    }\n}\n"],"mappings":"AAqBA,SAAS,0BAA0B;AACnC,SAAS,wBAAwB;AACjC,SAAS,gBAAgB;AAUlB,aAAM,YAAY;AAAA,EAiBrB,YAAoB,QAAgB;AAAhB;AAAA,EAEpB;AAAA,EAlBQ,YAA2B,CAAC;AAAA,EAE5B;AAAA,EAEA;AAAA,EAEA;AAAA,EAEA,kBAAkB;AAAA,EAElB,SAAS;AAAA,EAET,WAAW;AAAA,EAEX,6BAA6B;AAAA,EAMrC,UAAgB;AACZ,SAAK,UAAU,QAAQ,CAAC,SAAS;AAC7B,WAAK,QAAQ;AAAA,IACjB,CAAC;AACD,SAAK,cAAc,QAAQ;AAE3B,SAAK,eAAe;AAEpB,SAAK,YAAY,CAAC;AAElB,SAAK,gBAAgB;AAErB,SAAK,UAAU;AAAA,EACnB;AAAA,EAEA,IAAI,WAAW;AACX,WAAO,SAAS;AAAA,EACpB;AAAA,EAEA,UAAU;AACN,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,YAAY;AACR,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,4BAA4B;AACxB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,WAAW;AACP,SAAK,SAAS;AAAA,EAClB;AAAA,EAEA,aAAa;AACT,SAAK,WAAW;AAAA,EACpB;AAAA,EAEA,YAAY;AACR,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,UAAU,MAAmB;AACzB,SAAK,UAAU;AACf,SAAK,YAAY,IAAI;AAAA,EACzB;AAAA,EAEA,6BAA6B;AACzB,SAAK,6BAA6B;AAAA,EACtC;AAAA,EAEA,cAAc;AACV,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,eAAe,SAAwB;AACnC,SAAK,UAAU,KAAK,GAAG,OAAO;AAAA,EAClC;AAAA,EAEA,WAAW;AACP,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,SAAS,OAAsC;AAC3C,SAAK,eAAe;AAAA,EACxB;AAAA,EAEA,WAA0C;AACtC,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,eAAe;AACX,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,gBAAgB;AACZ,SAAK,kBAAkB;AAAA,EAC3B;AAAA,EAEA,UAAU;AAAA,EAEV;AAAA,EAEA,YAAY,QAAQ,MAAM;AAAA,EAE1B;AAAA,EAEA,MAAM,eAA4C;AAE9C,WAAO,QAAQ,QAAQ,mBAAmB,OAAO;AAAA,EACrD;AAAA,EAEA,YAAY;AACR,UAAM,QAAQ,KAAK,SAAS;AAC5B,UAAM,WAAW,KAAK,YAAY;AAElC,UAAM,wBAA4C,CAAC;AACnD,UAAM,gBAAgB,SAAS;AAE/B,aAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACpC,YAAM,OAAO,SAAS,CAAC;AACvB,4BAAsB,KAAK,KAAK,UAAU,CAAC;AAAA,IAC/C;AAEA,UAAM,SAA2B;AAAA,MAC7B;AAAA,MACA,UAAU,KAAK;AAAA,IACnB;AAEA,QAAI,gBAAgB,GAAG;AACnB,aAAO,WAAW;AAAA,IACtB;AAEA,WAAO;AAAA,EACX;AAAA,EAEA,eAAe,aAAqB;AAChC,WAAO,KAAK,eAAe,SAAS,WAAW,KAAK;AAAA,EACxD;AAAA,EAEA,gBAAgB,cAA6B;AACzC,SAAK,gBAAgB;AAAA,EACzB;AAAA,EAEA,kBAAkB;AACd,WAAO,KAAK;AAAA,EAChB;AACJ;AAEO,aAAM,kBAAkB,YAAY;AAAA,EAC/B;AAAA,EAER,YAAY,WAAsB;AAC9B,UAAM,SAAS;AACf,SAAK,oBAAoB,iBAAiB,OAAO,SAAS;AAAA,EAC9D;AAAA,EAEA,IAAa,WAAW;AACpB,WAAO,SAAS;AAAA,EACpB;AAAA,EAEA,OAAO,OAAO,WAAsB;AAChC,WAAO,IAAI,UAAU,SAAS;AAAA,EAClC;AAAA,EAES,WAAW;AAChB,WAAO,KAAK;AAAA,EAChB;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"67bccf02b024038958891217fa678d43a3c12b4f"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/base-ast-node-factory.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/base-ast-node-factory.ts","statementMap":{"0":{"start":{"line":3,"column":48},"end":{"line":3,"column":51}},"1":{"start":{"line":6,"column":4},"end":{"line":6,"column":13}},"2":{"start":{"line":12,"column":4},"end":{"line":16,"column":5}},"3":{"start":{"line":13,"column":6},"end":{"line":13,"column":31}},"4":{"start":{"line":15,"column":6},"end":{"line":15,"column":20}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":2},"end":{"line":5,"column":3}},"loc":{"start":{"line":5,"column":15},"end":{"line":7,"column":3}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":2},"end":{"line":8,"column":3}},"loc":{"start":{"line":8,"column":12},"end":{"line":9,"column":3}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":2},"end":{"line":10,"column":3}},"loc":{"start":{"line":10,"column":43},"end":{"line":18,"column":3}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":16,"column":5}},{"start":{"line":14,"column":11},"end":{"line":16,"column":5}}],"line":12}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/base-ast-node-factory.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\n\nimport { LexerNode } from '../analysis/lexer-node';\nimport { BaseAstNode } from './base-ast-node';\n\nexport const DEFAULT_AST_NODE_FACTORY_Z_INDEX = 100;\n\nexport abstract class BaseAstNodeFactory {\n    get zIndex() {\n        return 0;\n    }\n\n    dispose(): void {\n\n    }\n\n    create(param: LexerNode | string, currentRow?: number, currentColumn?: number): BaseAstNode {\n        let token;\n        if (param instanceof LexerNode) {\n            token = param.getToken();\n        } else {\n            token = param;\n        }\n        return new BaseAstNode(token);\n    }\n\n    abstract checkAndCreateNodeType(param: LexerNode | string): Nullable<BaseAstNode>;\n}\n"],"mappings":"AAkBA,SAAS,iBAAiB;AAC1B,SAAS,mBAAmB;AAErB,aAAM,mCAAmC;AAEzC,aAAe,mBAAmB;AAAA,EACrC,IAAI,SAAS;AACT,WAAO;AAAA,EACX;AAAA,EAEA,UAAgB;AAAA,EAEhB;AAAA,EAEA,OAAO,OAA2B,YAAqB,eAAqC;AACxF,QAAI;AACJ,QAAI,iBAAiB,WAAW;AAC5B,cAAQ,MAAM,SAAS;AAAA,IAC3B,OAAO;AACH,cAAQ;AAAA,IACZ;AACA,WAAO,IAAI,YAAY,KAAK;AAAA,EAChC;AAGJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8a1b39ee7ec29c8d57fdaa44da465028f0b0e01d"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/ast-root-node.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/ast-root-node.ts","statementMap":{"0":{"start":{"line":10,"column":4},"end":{"line":10,"column":25}},"1":{"start":{"line":13,"column":21},"end":{"line":13,"column":39}},"2":{"start":{"line":14,"column":4},"end":{"line":17,"column":5}},"3":{"start":{"line":15,"column":6},"end":{"line":15,"column":62}},"4":{"start":{"line":16,"column":6},"end":{"line":16,"column":13}},"5":{"start":{"line":18,"column":17},"end":{"line":18,"column":28}},"6":{"start":{"line":19,"column":4},"end":{"line":23,"column":5}},"7":{"start":{"line":20,"column":6},"end":{"line":20,"column":62}},"8":{"start":{"line":22,"column":6},"end":{"line":22,"column":37}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":81}},"10":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"11":{"start":{"line":32,"column":6},"end":{"line":32,"column":13}},"12":{"start":{"line":34,"column":18},"end":{"line":34,"column":34}},"13":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"14":{"start":{"line":36,"column":6},"end":{"line":36,"column":54}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":2},"end":{"line":9,"column":3}},"loc":{"start":{"line":9,"column":17},"end":{"line":11,"column":3}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":2},"end":{"line":12,"column":3}},"loc":{"start":{"line":12,"column":12},"end":{"line":24,"column":3}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":2},"end":{"line":27,"column":3}},"loc":{"start":{"line":27,"column":15},"end":{"line":29,"column":3}},"line":27},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":2},"end":{"line":30,"column":3}},"loc":{"start":{"line":30,"column":32},"end":{"line":38,"column":3}},"line":30}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":4},"end":{"line":17,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":17,"column":5}},{"start":{},"end":{}}],"line":14},"1":{"loc":{"start":{"line":19,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":23,"column":5}},{"start":{"line":21,"column":11},"end":{"line":23,"column":5}}],"line":19},"2":{"loc":{"start":{"line":28,"column":11},"end":{"line":28,"column":80}},"type":"binary-expr","locations":[{"start":{"line":28,"column":11},"end":{"line":28,"column":44}},{"start":{"line":28,"column":48},"end":{"line":28,"column":80}}],"line":28},"3":{"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},{"start":{},"end":{}}],"line":31},"4":{"loc":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},{"start":{},"end":{}}],"line":35}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/ast-root-node.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorType } from '../../basics/error-type';\nimport { DEFAULT_TOKEN_TYPE_ROOT } from '../../basics/token-type';\nimport { LexerNode } from '../analysis/lexer-node';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { BaseAstNode } from './base-ast-node';\nimport { BaseAstNodeFactory, DEFAULT_AST_NODE_FACTORY_Z_INDEX } from './base-ast-node-factory';\nimport { NODE_ORDER_MAP, NodeType } from './node-type';\n\nexport class AstRootNode extends BaseAstNode {\n    override get nodeType() {\n        return NodeType.ROOT;\n    }\n\n    override execute() {\n        const children = this.getChildren();\n\n        if (children.length > 1) {\n            this.setValue(ErrorValueObject.create(ErrorType.VALUE));\n\n            return;\n        }\n\n        const node = children[0];\n        // if (node.nodeType === NodeType.FUNCTION) {\n        //     await node.executeAsync(interpreterCalculateProps);\n        // } else {\n        //     node.execute(interpreterCalculateProps);\n        // }\n        if (node == null) {\n            /**\n             * fix: https://github.com/dream-num/univer/issues/1415\n             */\n            this.setValue(ErrorValueObject.create(ErrorType.VALUE));\n        } else {\n            this.setValue(node.getValue());\n        }\n\n        // return Promise.resolve(AstNodePromiseType.SUCCESS);\n    }\n}\n// export class AstVariantNode extends BaseAstNode {\n//     get nodeType() {\n//         return NodeType.Variant;\n//     }\n\n//     async executeAsync(interpreterCalculateProps: IInterpreterCalculateProps) {\n//         const children = this.getChildren();\n//         const childrenCount = children.length;\n//         for (let i = 0; i < childrenCount; i++) {\n//             const node = children[i];\n//             if (node.nodeType === NodeType.FUNCTION) {\n//                 await node.executeAsync(interpreterCalculateProps);\n//             } else {\n//                 node.execute(interpreterCalculateProps);\n//             }\n//         }\n\n//         return Promise.resolve(AstNodePromiseType.SUCCESS);\n//     }\n// }\n\nexport class AstRootNodeFactory extends BaseAstNodeFactory {\n    override get zIndex() {\n        return NODE_ORDER_MAP.get(NodeType.ROOT) || DEFAULT_AST_NODE_FACTORY_Z_INDEX;\n    }\n\n    override checkAndCreateNodeType(param: LexerNode | string) {\n        if (!(param instanceof LexerNode)) {\n            return;\n        }\n        const token = param.getToken();\n        if (token === DEFAULT_TOKEN_TYPE_ROOT) {\n            return new AstRootNode(DEFAULT_TOKEN_TYPE_ROOT);\n        }\n    }\n}\n\n// FORMULA_AST_NODE_REGISTRY.add(new AstRootNodeFactory());\n"],"mappings":"AAgBA,SAAS,iBAAiB;AAC1B,SAAS,+BAA+B;AACxC,SAAS,iBAAiB;AAC1B,SAAS,wBAAwB;AACjC,SAAS,mBAAmB;AAC5B,SAAS,oBAAoB,wCAAwC;AACrE,SAAS,gBAAgB,gBAAgB;AAElC,aAAM,oBAAoB,YAAY;AAAA,EACzC,IAAa,WAAW;AACpB,WAAO,SAAS;AAAA,EACpB;AAAA,EAES,UAAU;AACf,UAAM,WAAW,KAAK,YAAY;AAElC,QAAI,SAAS,SAAS,GAAG;AACrB,WAAK,SAAS,iBAAiB,OAAO,UAAU,KAAK,CAAC;AAEtD;AAAA,IACJ;AAEA,UAAM,OAAO,SAAS,CAAC;AAMvB,QAAI,QAAQ,MAAM;AAId,WAAK,SAAS,iBAAiB,OAAO,UAAU,KAAK,CAAC;AAAA,IAC1D,OAAO;AACH,WAAK,SAAS,KAAK,SAAS,CAAC;AAAA,IACjC;AAAA,EAGJ;AACJ;AAsBO,aAAM,2BAA2B,mBAAmB;AAAA,EACvD,IAAa,SAAS;AAClB,WAAO,eAAe,IAAI,SAAS,IAAI,KAAK;AAAA,EAChD;AAAA,EAES,uBAAuB,OAA2B;AACvD,QAAI,EAAE,iBAAiB,YAAY;AAC/B;AAAA,IACJ;AACA,UAAM,QAAQ,MAAM,SAAS;AAC7B,QAAI,UAAU,yBAAyB;AACnC,aAAO,IAAI,YAAY,uBAAuB;AAAA,IAClD;AAAA,EACJ;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"34bfa623bbaec89018ce3b23ed0eb01c066a640b"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/generate-ast-node.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/generate-ast-node.ts","statementMap":{"0":{"start":{"line":4,"column":32},"end":{"line":4,"column":35}},"1":{"start":{"line":5,"column":33},"end":{"line":5,"column":75}},"2":{"start":{"line":7,"column":16},"end":{"line":7,"column":66}},"3":{"start":{"line":8,"column":2},"end":{"line":10,"column":3}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":19}},"5":{"start":{"line":11,"column":20},"end":{"line":11,"column":52}},"6":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"7":{"start":{"line":13,"column":4},"end":{"line":13,"column":39}},"8":{"start":{"line":15,"column":2},"end":{"line":15,"column":44}},"9":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},"10":{"start":{"line":17,"column":4},"end":{"line":17,"column":39}},"11":{"start":{"line":19,"column":2},"end":{"line":19,"column":62}},"12":{"start":{"line":20,"column":2},"end":{"line":20,"column":17}},"13":{"start":{"line":23,"column":25},"end":{"line":23,"column":70}},"14":{"start":{"line":24,"column":24},"end":{"line":24,"column":63}},"15":{"start":{"line":25,"column":2},"end":{"line":33,"column":3}},"16":{"start":{"line":26,"column":18},"end":{"line":26,"column":60}},"17":{"start":{"line":27,"column":4},"end":{"line":32,"column":5}},"18":{"start":{"line":27,"column":17},"end":{"line":27,"column":18}},"19":{"start":{"line":27,"column":26},"end":{"line":27,"column":38}},"20":{"start":{"line":28,"column":19},"end":{"line":28,"column":27}},"21":{"start":{"line":29,"column":6},"end":{"line":31,"column":7}},"22":{"start":{"line":30,"column":8},"end":{"line":30,"column":20}},"23":{"start":{"line":34,"column":2},"end":{"line":34,"column":15}},"24":{"start":{"line":37,"column":2},"end":{"line":42,"column":3}},"25":{"start":{"line":38,"column":29},"end":{"line":38,"column":78}},"26":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"27":{"start":{"line":40,"column":6},"end":{"line":40,"column":18}},"28":{"start":{"line":43,"column":2},"end":{"line":43,"column":15}}},"fnMap":{"0":{"name":"generateAstNode","decl":{"start":{"line":6,"column":16},"end":{"line":6,"column":31}},"loc":{"start":{"line":6,"column":100},"end":{"line":21,"column":1}},"line":6},"1":{"name":"isDirtyDefinedForNode","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":30}},"loc":{"start":{"line":22,"column":59},"end":{"line":35,"column":1}},"line":22},"2":{"name":"includeDefinedName","decl":{"start":{"line":36,"column":16},"end":{"line":36,"column":34}},"loc":{"start":{"line":36,"column":69},"end":{"line":44,"column":1}},"line":36}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":2},"end":{"line":10,"column":3}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":10,"column":3}},{"start":{},"end":{}}],"line":8},"1":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":70}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":13}},{"start":{"line":8,"column":17},"end":{"line":8,"column":70}}],"line":8},"2":{"loc":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},{"start":{},"end":{}}],"line":12},"3":{"loc":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},{"start":{},"end":{}}],"line":16},"4":{"loc":{"start":{"line":25,"column":2},"end":{"line":33,"column":3}},"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":33,"column":3}},{"start":{},"end":{}}],"line":25},"5":{"loc":{"start":{"line":25,"column":6},"end":{"line":25,"column":68}},"type":"binary-expr","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":68}}],"line":25},"6":{"loc":{"start":{"line":29,"column":6},"end":{"line":31,"column":7}},"type":"if","locations":[{"start":{"line":29,"column":6},"end":{"line":31,"column":7}},{"start":{},"end":{}}],"line":29},"7":{"loc":{"start":{"line":37,"column":2},"end":{"line":42,"column":3}},"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":42,"column":3}},{"start":{},"end":{}}],"line":37},"8":{"loc":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},{"start":{},"end":{}}],"line":39}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/generate-ast-node.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\nimport type { ErrorType } from '../../basics/error-type';\nimport type { IFormulaCurrentConfigService } from '../../services/current-data.service';\nimport type { Lexer } from '../analysis/lexer';\nimport type { LexerNode } from '../analysis/lexer-node';\nimport type { AstTreeBuilder } from '../analysis/parser';\nimport type { AstRootNode } from '../ast-node/ast-root-node';\nimport type { IFormulaDependencyTree } from '../dependency/dependency-tree';\nimport { FormulaAstLRU } from '../../basics/cache-lru';\nimport { ERROR_TYPE_SET } from '../../basics/error-type';\nimport { type BaseAstNode, ErrorNode } from '../ast-node/base-ast-node';\n\nconst FORMULA_CACHE_LRU_COUNT = 5000;\n\nexport const FORMULA_AST_CACHE = new FormulaAstLRU<AstRootNode>(FORMULA_CACHE_LRU_COUNT);\n\nexport function generateAstNode(unitId: string, formulaString: string, lexer: Lexer, astTreeBuilder: AstTreeBuilder, currentConfigService: IFormulaCurrentConfigService): AstRootNode {\n    // refOffsetX and refOffsetY are separated by -, otherwise x:1 y:10 will be repeated with x:11 y:0\n    let astNode: Nullable<AstRootNode> = FORMULA_AST_CACHE.get(`${unitId}${formulaString}`);\n\n    if (astNode && !isDirtyDefinedForNode(astNode, currentConfigService)) {\n        // astNode.setRefOffset(refOffsetX, refOffsetY);\n        return astNode;\n    }\n\n    const lexerNode = lexer.treeBuilder(formulaString);\n\n    if (ERROR_TYPE_SET.has(lexerNode as ErrorType)) {\n        return ErrorNode.create(lexerNode as ErrorType);\n    }\n\n    // suffix Express, 1+(3*4=4)*5+1 convert to 134*4=5*1++\n\n    astNode = astTreeBuilder.parse(lexerNode as LexerNode);\n\n    if (astNode == null) {\n        throw new Error('astNode is null');\n    }\n\n    // astNode.setRefOffset(refOffsetX, refOffsetY);\n\n    FORMULA_AST_CACHE.set(`${unitId}${formulaString}`, astNode);\n\n    return astNode;\n}\n\nfunction isDirtyDefinedForNode(node: BaseAstNode, currentConfigService: IFormulaCurrentConfigService) {\n    const definedNameMap = currentConfigService.getDirtyDefinedNameMap();\n    const executeUnitId = currentConfigService.getExecuteUnitId();\n    if (executeUnitId != null && definedNameMap[executeUnitId] != null) {\n        const names = Object.keys(definedNameMap[executeUnitId]!);\n        for (let i = 0, len = names.length; i < len; i++) {\n            const name = names[i];\n            if (node.hasDefinedName(name)) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function includeDefinedName(tree: IFormulaDependencyTree, node: Nullable<AstRootNode>, currentConfigService: IFormulaCurrentConfigService) {\n    /**\n     * Detect whether the dirty map contains a defined name.\n     */\n    // const node = tree.nodeData?.node;\n    if (node != null) {\n        const dirtyDefinedName = isDirtyDefinedForNode(node, currentConfigService);\n        if (dirtyDefinedName) {\n            return true;\n        }\n    }\n    return false;\n}\n"],"mappings":"AAwBA,SAAS,qBAAqB;AAC9B,SAAS,sBAAsB;AAC/B,SAA2B,iBAAiB;AAE5C,MAAM,0BAA0B;AAEzB,aAAM,oBAAoB,IAAI,cAA2B,uBAAuB;AAEhF,gBAAS,gBAAgB,QAAgB,eAAuB,OAAc,gBAAgC,sBAAiE;AAElL,MAAI,UAAiC,kBAAkB,IAAI,GAAG,MAAM,GAAG,aAAa,EAAE;AAEtF,MAAI,WAAW,CAAC,sBAAsB,SAAS,oBAAoB,GAAG;AAElE,WAAO;AAAA,EACX;AAEA,QAAM,YAAY,MAAM,YAAY,aAAa;AAEjD,MAAI,eAAe,IAAI,SAAsB,GAAG;AAC5C,WAAO,UAAU,OAAO,SAAsB;AAAA,EAClD;AAIA,YAAU,eAAe,MAAM,SAAsB;AAErD,MAAI,WAAW,MAAM;AACjB,UAAM,IAAI,MAAM,iBAAiB;AAAA,EACrC;AAIA,oBAAkB,IAAI,GAAG,MAAM,GAAG,aAAa,IAAI,OAAO;AAE1D,SAAO;AACX;AAEA,SAAS,sBAAsB,MAAmB,sBAAoD;AAClG,QAAM,iBAAiB,qBAAqB,uBAAuB;AACnE,QAAM,gBAAgB,qBAAqB,iBAAiB;AAC5D,MAAI,iBAAiB,QAAQ,eAAe,aAAa,KAAK,MAAM;AAChE,UAAM,QAAQ,OAAO,KAAK,eAAe,aAAa,CAAE;AACxD,aAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK;AAC9C,YAAM,OAAO,MAAM,CAAC;AACpB,UAAI,KAAK,eAAe,IAAI,GAAG;AAC3B,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AAEA,SAAO;AACX;AAEO,gBAAS,mBAAmB,MAA8B,MAA6B,sBAAoD;AAK9I,MAAI,QAAQ,MAAM;AACd,UAAM,mBAAmB,sBAAsB,MAAM,oBAAoB;AACzE,QAAI,kBAAkB;AAClB,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"729f9e673de4973777f5cca741032c105ff7969a"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/function.service.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/function.service.ts","statementMap":{"0":{"start":{"line":3,"column":32},"end":{"line":3,"column":83}},"1":{"start":{"line":5,"column":39},"end":{"line":5,"column":48}},"2":{"start":{"line":6,"column":42},"end":{"line":6,"column":51}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":20}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":36}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":39}},"6":{"start":{"line":13,"column":4},"end":{"line":16,"column":5}},"7":{"start":{"line":13,"column":17},"end":{"line":13,"column":18}},"8":{"start":{"line":14,"column":19},"end":{"line":14,"column":31}},"9":{"start":{"line":15,"column":6},"end":{"line":15,"column":51}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":35}},"11":{"start":{"line":22,"column":4},"end":{"line":22,"column":54}},"12":{"start":{"line":25,"column":4},"end":{"line":25,"column":54}},"13":{"start":{"line":28,"column":4},"end":{"line":31,"column":5}},"14":{"start":{"line":28,"column":17},"end":{"line":28,"column":18}},"15":{"start":{"line":29,"column":28},"end":{"line":29,"column":45}},"16":{"start":{"line":30,"column":6},"end":{"line":30,"column":52}},"17":{"start":{"line":34,"column":4},"end":{"line":37,"column":5}},"18":{"start":{"line":34,"column":17},"end":{"line":34,"column":18}},"19":{"start":{"line":35,"column":26},"end":{"line":35,"column":41}},"20":{"start":{"line":36,"column":6},"end":{"line":36,"column":76}},"21":{"start":{"line":38,"column":4},"end":{"line":43,"column":7}},"22":{"start":{"line":39,"column":6},"end":{"line":42,"column":7}},"23":{"start":{"line":39,"column":19},"end":{"line":39,"column":20}},"24":{"start":{"line":40,"column":28},"end":{"line":40,"column":43}},"25":{"start":{"line":41,"column":8},"end":{"line":41,"column":68}},"26":{"start":{"line":46,"column":4},"end":{"line":46,"column":38}},"27":{"start":{"line":49,"column":4},"end":{"line":49,"column":57}},"28":{"start":{"line":52,"column":4},"end":{"line":52,"column":57}},"29":{"start":{"line":55,"column":4},"end":{"line":58,"column":5}},"30":{"start":{"line":55,"column":17},"end":{"line":55,"column":18}},"31":{"start":{"line":56,"column":28},"end":{"line":56,"column":45}},"32":{"start":{"line":57,"column":6},"end":{"line":57,"column":55}},"33":{"start":{"line":61,"column":4},"end":{"line":67,"column":7}},"34":{"start":{"line":62,"column":6},"end":{"line":66,"column":9}},"35":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"36":{"start":{"line":64,"column":10},"end":{"line":64,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":2},"end":{"line":7,"column":3}},"loc":{"start":{"line":7,"column":12},"end":{"line":11,"column":3}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":2},"end":{"line":12,"column":3}},"loc":{"start":{"line":12,"column":34},"end":{"line":17,"column":3}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":2},"end":{"line":18,"column":3}},"loc":{"start":{"line":18,"column":17},"end":{"line":20,"column":3}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":2},"end":{"line":21,"column":3}},"loc":{"start":{"line":21,"column":29},"end":{"line":23,"column":3}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":2},"end":{"line":24,"column":3}},"loc":{"start":{"line":24,"column":29},"end":{"line":26,"column":3}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":27,"column":2},"end":{"line":27,"column":3}},"loc":{"start":{"line":27,"column":41},"end":{"line":32,"column":3}},"line":27},"6":{"name":"(anonymous_6)","decl":{"start":{"line":33,"column":2},"end":{"line":33,"column":3}},"loc":{"start":{"line":33,"column":40},"end":{"line":44,"column":3}},"line":33},"7":{"name":"(anonymous_7)","decl":{"start":{"line":38,"column":24},"end":{"line":38,"column":25}},"loc":{"start":{"line":38,"column":30},"end":{"line":43,"column":5}},"line":38},"8":{"name":"(anonymous_8)","decl":{"start":{"line":45,"column":2},"end":{"line":45,"column":3}},"loc":{"start":{"line":45,"column":20},"end":{"line":47,"column":3}},"line":45},"9":{"name":"(anonymous_9)","decl":{"start":{"line":48,"column":2},"end":{"line":48,"column":3}},"loc":{"start":{"line":48,"column":32},"end":{"line":50,"column":3}},"line":48},"10":{"name":"(anonymous_10)","decl":{"start":{"line":51,"column":2},"end":{"line":51,"column":3}},"loc":{"start":{"line":51,"column":32},"end":{"line":53,"column":3}},"line":51},"11":{"name":"(anonymous_11)","decl":{"start":{"line":54,"column":2},"end":{"line":54,"column":3}},"loc":{"start":{"line":54,"column":44},"end":{"line":59,"column":3}},"line":54},"12":{"name":"(anonymous_12)","decl":{"start":{"line":60,"column":2},"end":{"line":60,"column":3}},"loc":{"start":{"line":60,"column":45},"end":{"line":68,"column":3}},"line":60},"13":{"name":"(anonymous_13)","decl":{"start":{"line":61,"column":30},"end":{"line":61,"column":31}},"loc":{"start":{"line":61,"column":42},"end":{"line":67,"column":5}},"line":61},"14":{"name":"(anonymous_14)","decl":{"start":{"line":62,"column":28},"end":{"line":62,"column":29}},"loc":{"start":{"line":62,"column":39},"end":{"line":66,"column":7}},"line":62}},"branchMap":{"0":{"loc":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},{"start":{},"end":{}}],"line":63}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/function.service.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IDisposable, Nullable } from '@univerjs/core';\nimport type { IFunctionInfo, IFunctionNames } from '../basics/function';\nimport type { BaseFunction } from '../functions/base-function';\nimport { createIdentifier, Disposable, toDisposable } from '@univerjs/core';\nimport { FORMULA_AST_CACHE } from '../engine/utils/generate-ast-node';\n\nexport interface IFunctionService {\n    /**\n     * Use register to register a function, new CustomFunction(inject, name)\n     */\n    registerExecutors(...functions: BaseFunction[]): void;\n\n    getExecutors(): Map<IFunctionNames, BaseFunction>;\n\n    /**\n     * Obtain the operator of the function to reuse the calculation logic.\n     * The argument type accepted by the function is: FunctionVariantType.\n     * For instance, the sum formula capability is needed for the statistics bar.\n     * You can obtain the calculation result by using\n     * const sum = formulaService.getExecutor(FUNCTION_NAMES_MATH.SUM);\n     * sum.calculate(new RangeReferenceObject(range, sheetId, unitId), ref2, re3).\n     * @param functionName Function name, which can be obtained through the FUNCTION_NAMES enumeration.\n     * @returns\n     */\n    getExecutor(functionToken: IFunctionNames): Nullable<BaseFunction>;\n\n    hasExecutor(functionToken: IFunctionNames): boolean;\n\n    unregisterExecutors(...functionTokens: IFunctionNames[]): void;\n\n    registerDescriptions(...functions: IFunctionInfo[]): IDisposable;\n\n    getDescriptions(): Map<IFunctionNames, IFunctionInfo>;\n\n    getDescription(functionToken: IFunctionNames): Nullable<IFunctionInfo>;\n\n    hasDescription(functionToken: IFunctionNames): boolean;\n\n    unregisterDescriptions(...functionTokens: IFunctionNames[]): void;\n\n    deleteFormulaAstCacheKey(...functionToken: IFunctionNames[]): void;\n}\nexport const IFunctionService = createIdentifier<FunctionService>('univer.formula-function.service');\n\nexport class FunctionService extends Disposable implements IFunctionService {\n    private _functionExecutors: Map<IFunctionNames, BaseFunction> = new Map();\n\n    private _functionDescriptions: Map<IFunctionNames, IFunctionInfo> = new Map();\n\n    override dispose(): void {\n        super.dispose();\n        this._functionExecutors.clear();\n        this._functionDescriptions.clear();\n    }\n\n    registerExecutors(...functions: BaseFunction[]) {\n        for (let i = 0; i < functions.length; i++) {\n            const func = functions[i];\n            this._functionExecutors.set(func.name, func);\n        }\n    }\n\n    getExecutors() {\n        return this._functionExecutors;\n    }\n\n    getExecutor(functionToken: IFunctionNames) {\n        return this._functionExecutors.get(functionToken);\n    }\n\n    hasExecutor(functionToken: IFunctionNames) {\n        return this._functionExecutors.has(functionToken);\n    }\n\n    unregisterExecutors(...functionTokens: IFunctionNames[]) {\n        for (let i = 0; i < functionTokens.length; i++) {\n            const functionToken = functionTokens[i];\n            this._functionExecutors.delete(functionToken);\n        }\n    }\n\n    registerDescriptions(...descriptions: IFunctionInfo[]): IDisposable {\n        for (let i = 0; i < descriptions.length; i++) {\n            const description = descriptions[i];\n            this._functionDescriptions.set(description.functionName, description);\n        }\n\n        return toDisposable(() => {\n            for (let i = 0; i < descriptions.length; i++) {\n                const description = descriptions[i];\n                this._functionDescriptions.delete(description.functionName);\n            }\n        });\n    }\n\n    getDescriptions() {\n        return this._functionDescriptions;\n    }\n\n    getDescription(functionToken: IFunctionNames) {\n        return this._functionDescriptions.get(functionToken);\n    }\n\n    hasDescription(functionToken: IFunctionNames) {\n        return this._functionDescriptions.has(functionToken);\n    }\n\n    unregisterDescriptions(...functionTokens: IFunctionNames[]) {\n        for (let i = 0; i < functionTokens.length; i++) {\n            const functionToken = functionTokens[i];\n            this._functionDescriptions.delete(functionToken);\n        }\n    }\n\n    deleteFormulaAstCacheKey(...functionToken: IFunctionNames[]) {\n        FORMULA_AST_CACHE.forEach((_, key) => {\n            functionToken.forEach((token) => {\n                if (key.includes(token as string)) {\n                    FORMULA_AST_CACHE.delete(key);\n                }\n            });\n        });\n    }\n}\n"],"mappings":"AAmBA,SAAS,kBAAkB,YAAY,oBAAoB;AAC3D,SAAS,yBAAyB;AAsC3B,aAAM,mBAAmB,iBAAkC,iCAAiC;AAE5F,aAAM,wBAAwB,WAAuC;AAAA,EAChE,qBAAwD,oBAAI,IAAI;AAAA,EAEhE,wBAA4D,oBAAI,IAAI;AAAA,EAEnE,UAAgB;AACrB,UAAM,QAAQ;AACd,SAAK,mBAAmB,MAAM;AAC9B,SAAK,sBAAsB,MAAM;AAAA,EACrC;AAAA,EAEA,qBAAqB,WAA2B;AAC5C,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACvC,YAAM,OAAO,UAAU,CAAC;AACxB,WAAK,mBAAmB,IAAI,KAAK,MAAM,IAAI;AAAA,IAC/C;AAAA,EACJ;AAAA,EAEA,eAAe;AACX,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,YAAY,eAA+B;AACvC,WAAO,KAAK,mBAAmB,IAAI,aAAa;AAAA,EACpD;AAAA,EAEA,YAAY,eAA+B;AACvC,WAAO,KAAK,mBAAmB,IAAI,aAAa;AAAA,EACpD;AAAA,EAEA,uBAAuB,gBAAkC;AACrD,aAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC5C,YAAM,gBAAgB,eAAe,CAAC;AACtC,WAAK,mBAAmB,OAAO,aAAa;AAAA,IAChD;AAAA,EACJ;AAAA,EAEA,wBAAwB,cAA4C;AAChE,aAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC1C,YAAM,cAAc,aAAa,CAAC;AAClC,WAAK,sBAAsB,IAAI,YAAY,cAAc,WAAW;AAAA,IACxE;AAEA,WAAO,aAAa,MAAM;AACtB,eAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC1C,cAAM,cAAc,aAAa,CAAC;AAClC,aAAK,sBAAsB,OAAO,YAAY,YAAY;AAAA,MAC9D;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EAEA,kBAAkB;AACd,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,eAAe,eAA+B;AAC1C,WAAO,KAAK,sBAAsB,IAAI,aAAa;AAAA,EACvD;AAAA,EAEA,eAAe,eAA+B;AAC1C,WAAO,KAAK,sBAAsB,IAAI,aAAa;AAAA,EACvD;AAAA,EAEA,0BAA0B,gBAAkC;AACxD,aAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC5C,YAAM,gBAAgB,eAAe,CAAC;AACtC,WAAK,sBAAsB,OAAO,aAAa;AAAA,IACnD;AAAA,EACJ;AAAA,EAEA,4BAA4B,eAAiC;AACzD,sBAAkB,QAAQ,CAAC,GAAG,QAAQ;AAClC,oBAAc,QAAQ,CAAC,UAAU;AAC7B,YAAI,IAAI,SAAS,KAAe,GAAG;AAC/B,4BAAkB,OAAO,GAAG;AAAA,QAChC;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"80a48171092258da7fc29329977689f28debd69b"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/meta/function-names.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/meta/function-names.ts","statementMap":{"0":{"start":{"line":1,"column":49},"end":{"line":10,"column":29}},"1":{"start":{"line":2,"column":2},"end":{"line":2,"column":46}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":46}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":42}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":48}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":40}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":42}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":40}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":50},"end":{"line":1,"column":51}},"loc":{"start":{"line":1,"column":76},"end":{"line":10,"column":1}},"line":1}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":3},"end":{"line":10,"column":28}},"type":"binary-expr","locations":[{"start":{"line":10,"column":3},"end":{"line":10,"column":22}},{"start":{"line":10,"column":26},"end":{"line":10,"column":28}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/meta/function-names.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum FUNCTION_NAMES_META {\n    COMPARE = 'COMPARE',\n    DIVIDED = 'DIVIDED',\n    MINUS = 'MINUS',\n    MULTIPLY = 'MULTIPLY',\n    PLUS = 'PLUS',\n    UNION = 'UNION',\n    CUBE = 'CUBE',\n}\n"],"mappings":"AAgBO,WAAK,sBAAL,kBAAKA,yBAAL;AACH,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,cAAW;AACX,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,UAAO;AAPC,SAAAA;AAAA,GAAA;","names":["FUNCTION_NAMES_META"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6fe247d04b573ae7cae2f1f4960a974a36f827be"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/prefix-node.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/prefix-node.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":25,"column":4},"end":{"line":25,"column":27}},"15":{"start":{"line":26,"column":4},"end":{"line":26,"column":43}},"16":{"start":{"line":27,"column":4},"end":{"line":27,"column":43}},"17":{"start":{"line":28,"column":4},"end":{"line":28,"column":47}},"18":{"start":{"line":31,"column":4},"end":{"line":31,"column":27}},"19":{"start":{"line":34,"column":21},"end":{"line":34,"column":39}},"20":{"start":{"line":35,"column":16},"end":{"line":35,"column":38}},"21":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"22":{"start":{"line":38,"column":6},"end":{"line":38,"column":40}},"23":{"start":{"line":40,"column":4},"end":{"line":52,"column":5}},"24":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"25":{"start":{"line":42,"column":8},"end":{"line":42,"column":43}},"26":{"start":{"line":44,"column":6},"end":{"line":47,"column":8}},"27":{"start":{"line":48,"column":11},"end":{"line":52,"column":5}},"28":{"start":{"line":49,"column":6},"end":{"line":49,"column":38}},"29":{"start":{"line":51,"column":6},"end":{"line":51,"column":56}},"30":{"start":{"line":53,"column":4},"end":{"line":53,"column":26}},"31":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"32":{"start":{"line":57,"column":6},"end":{"line":57,"column":54}},"33":{"start":{"line":59,"column":25},"end":{"line":59,"column":30}},"34":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"35":{"start":{"line":61,"column":6},"end":{"line":61,"column":54}},"36":{"start":{"line":63,"column":27},"end":{"line":63,"column":47}},"37":{"start":{"line":64,"column":23},"end":{"line":64,"column":53}},"38":{"start":{"line":65,"column":26},"end":{"line":65,"column":59}},"39":{"start":{"line":66,"column":21},"end":{"line":66,"column":52}},"40":{"start":{"line":67,"column":57},"end":{"line":67,"column":65}},"41":{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},"42":{"start":{"line":69,"column":6},"end":{"line":69,"column":54}},"43":{"start":{"line":71,"column":4},"end":{"line":73,"column":5}},"44":{"start":{"line":72,"column":6},"end":{"line":72,"column":54}},"45":{"start":{"line":74,"column":4},"end":{"line":78,"column":5}},"46":{"start":{"line":75,"column":6},"end":{"line":75,"column":57}},"47":{"start":{"line":76,"column":11},"end":{"line":78,"column":5}},"48":{"start":{"line":77,"column":6},"end":{"line":77,"column":51}},"49":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"50":{"start":{"line":80,"column":6},"end":{"line":80,"column":56}},"51":{"start":{"line":82,"column":4},"end":{"line":82,"column":52}},"52":{"start":{"line":85,"column":31},"end":{"line":118,"column":1}},"53":{"start":{"line":87,"column":4},"end":{"line":87,"column":12}},"54":{"start":{"line":88,"column":4},"end":{"line":88,"column":45}},"55":{"start":{"line":89,"column":4},"end":{"line":89,"column":43}},"56":{"start":{"line":92,"column":4},"end":{"line":92,"column":83}},"57":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"58":{"start":{"line":96,"column":6},"end":{"line":96,"column":13}},"59":{"start":{"line":98,"column":18},"end":{"line":98,"column":34}},"60":{"start":{"line":99,"column":22},"end":{"line":99,"column":34}},"61":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"62":{"start":{"line":101,"column":6},"end":{"line":101,"column":13}},"63":{"start":{"line":103,"column":23},"end":{"line":103,"column":25}},"64":{"start":{"line":104,"column":4},"end":{"line":110,"column":5}},"65":{"start":{"line":105,"column":6},"end":{"line":105,"column":47}},"66":{"start":{"line":106,"column":11},"end":{"line":110,"column":5}},"67":{"start":{"line":107,"column":6},"end":{"line":107,"column":61}},"68":{"start":{"line":109,"column":6},"end":{"line":109,"column":13}},"69":{"start":{"line":111,"column":29},"end":{"line":111,"column":76}},"70":{"start":{"line":112,"column":4},"end":{"line":115,"column":5}},"71":{"start":{"line":113,"column":6},"end":{"line":113,"column":44}},"72":{"start":{"line":114,"column":6},"end":{"line":114,"column":46}},"73":{"start":{"line":116,"column":4},"end":{"line":116,"column":77}},"74":{"start":{"line":119,"column":0},"end":{"line":122,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":2},"end":{"line":24,"column":3}},"loc":{"start":{"line":24,"column":67},"end":{"line":29,"column":3}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":2},"end":{"line":30,"column":3}},"loc":{"start":{"line":30,"column":17},"end":{"line":32,"column":3}},"line":30},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":2},"end":{"line":33,"column":3}},"loc":{"start":{"line":33,"column":12},"end":{"line":54,"column":3}},"line":33},"6":{"name":"(anonymous_6)","decl":{"start":{"line":55,"column":2},"end":{"line":55,"column":3}},"loc":{"start":{"line":55,"column":20},"end":{"line":83,"column":3}},"line":55},"7":{"name":"(anonymous_7)","decl":{"start":{"line":86,"column":2},"end":{"line":86,"column":3}},"loc":{"start":{"line":86,"column":49},"end":{"line":90,"column":3}},"line":86},"8":{"name":"(anonymous_8)","decl":{"start":{"line":91,"column":2},"end":{"line":91,"column":3}},"loc":{"start":{"line":91,"column":15},"end":{"line":93,"column":3}},"line":91},"9":{"name":"(anonymous_9)","decl":{"start":{"line":94,"column":2},"end":{"line":94,"column":3}},"loc":{"start":{"line":94,"column":32},"end":{"line":117,"column":3}},"line":94}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},{"start":{},"end":{}}],"line":37},"8":{"loc":{"start":{"line":40,"column":4},"end":{"line":52,"column":5}},"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":52,"column":5}},{"start":{"line":48,"column":11},"end":{"line":52,"column":5}}],"line":40},"9":{"loc":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},{"start":{},"end":{}}],"line":41},"10":{"loc":{"start":{"line":48,"column":11},"end":{"line":52,"column":5}},"type":"if","locations":[{"start":{"line":48,"column":11},"end":{"line":52,"column":5}},{"start":{"line":50,"column":11},"end":{"line":52,"column":5}}],"line":48},"11":{"loc":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},{"start":{},"end":{}}],"line":56},"12":{"loc":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},{"start":{},"end":{}}],"line":60},"13":{"loc":{"start":{"line":64,"column":23},"end":{"line":64,"column":53}},"type":"binary-expr","locations":[{"start":{"line":64,"column":23},"end":{"line":64,"column":48}},{"start":{"line":64,"column":52},"end":{"line":64,"column":53}}],"line":64},"14":{"loc":{"start":{"line":65,"column":26},"end":{"line":65,"column":59}},"type":"binary-expr","locations":[{"start":{"line":65,"column":26},"end":{"line":65,"column":54}},{"start":{"line":65,"column":58},"end":{"line":65,"column":59}}],"line":65},"15":{"loc":{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},{"start":{},"end":{}}],"line":68},"16":{"loc":{"start":{"line":68,"column":8},"end":{"line":68,"column":56}},"type":"binary-expr","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":33}},{"start":{"line":68,"column":37},"end":{"line":68,"column":56}}],"line":68},"17":{"loc":{"start":{"line":71,"column":4},"end":{"line":73,"column":5}},"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":73,"column":5}},{"start":{},"end":{}}],"line":71},"18":{"loc":{"start":{"line":71,"column":8},"end":{"line":71,"column":56}},"type":"binary-expr","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":27}},{"start":{"line":71,"column":31},"end":{"line":71,"column":56}}],"line":71},"19":{"loc":{"start":{"line":74,"column":4},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":78,"column":5}},{"start":{"line":76,"column":11},"end":{"line":78,"column":5}}],"line":74},"20":{"loc":{"start":{"line":74,"column":8},"end":{"line":74,"column":89}},"type":"binary-expr","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":27}},{"start":{"line":74,"column":31},"end":{"line":74,"column":59}},{"start":{"line":74,"column":63},"end":{"line":74,"column":89}}],"line":74},"21":{"loc":{"start":{"line":76,"column":11},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":76,"column":11},"end":{"line":78,"column":5}},{"start":{},"end":{}}],"line":76},"22":{"loc":{"start":{"line":76,"column":15},"end":{"line":76,"column":90}},"type":"binary-expr","locations":[{"start":{"line":76,"column":15},"end":{"line":76,"column":40}},{"start":{"line":76,"column":44},"end":{"line":76,"column":66}},{"start":{"line":76,"column":70},"end":{"line":76,"column":90}}],"line":76},"23":{"loc":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},{"start":{},"end":{}}],"line":79},"24":{"loc":{"start":{"line":92,"column":11},"end":{"line":92,"column":82}},"type":"binary-expr","locations":[{"start":{"line":92,"column":11},"end":{"line":92,"column":46}},{"start":{"line":92,"column":50},"end":{"line":92,"column":82}}],"line":92},"25":{"loc":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},{"start":{},"end":{}}],"line":95},"26":{"loc":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},{"start":{},"end":{}}],"line":100},"27":{"loc":{"start":{"line":100,"column":8},"end":{"line":100,"column":85}},"type":"binary-expr","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":35}},{"start":{"line":100,"column":39},"end":{"line":100,"column":85}}],"line":100},"28":{"loc":{"start":{"line":104,"column":4},"end":{"line":110,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":110,"column":5}},{"start":{"line":106,"column":11},"end":{"line":110,"column":5}}],"line":104},"29":{"loc":{"start":{"line":106,"column":11},"end":{"line":110,"column":5}},"type":"if","locations":[{"start":{"line":106,"column":11},"end":{"line":110,"column":5}},{"start":{"line":108,"column":11},"end":{"line":110,"column":5}}],"line":106},"30":{"loc":{"start":{"line":112,"column":4},"end":{"line":115,"column":5}},"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":115,"column":5}},{"start":{},"end":{}}],"line":112}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":1,"9":0,"10":1,"11":1,"12":2,"13":2,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1},"f":{"0":1,"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[0,1],"1":[0,1],"2":[2,0],"3":[2,2],"4":[0,2],"5":[0,1],"6":[1,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/prefix-node.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\nimport type { BaseFunction } from '../../functions/base-function';\n\nimport type { BaseReferenceObject, FunctionVariantType } from '../reference-object/base-reference-object';\nimport type { BaseValueObject } from '../value-object/base-value-object';\nimport { ErrorType } from '../../basics/error-type';\nimport { prefixToken } from '../../basics/token';\nimport { FUNCTION_NAMES_META } from '../../functions/meta/function-names';\nimport { IFunctionService } from '../../services/function.service';\nimport { IFormulaRuntimeService } from '../../services/runtime.service';\nimport { LexerNode } from '../analysis/lexer-node';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { NumberValueObject } from '../value-object/primitive-object';\nimport { BaseAstNode, ErrorNode } from './base-ast-node';\nimport { BaseAstNodeFactory, DEFAULT_AST_NODE_FACTORY_Z_INDEX } from './base-ast-node-factory';\nimport { NODE_ORDER_MAP, NodeType } from './node-type';\n\nexport class PrefixNode extends BaseAstNode {\n    constructor(\n        private _runtimeService: IFormulaRuntimeService,\n        private _operatorString: string,\n        private _functionExecutor?: Nullable<BaseFunction>\n    ) {\n        super(_operatorString);\n    }\n\n    override get nodeType() {\n        return NodeType.PREFIX;\n    }\n\n    override execute() {\n        const children = this.getChildren();\n        let value = children[0].getValue();\n        let result: FunctionVariantType;\n        if (value == null) {\n            throw new Error('object is null');\n        }\n\n        if (this._operatorString === prefixToken.MINUS) {\n            if (value.isReferenceObject()) {\n                value = (value as BaseReferenceObject).toArrayValueObject();\n            }\n            result = this._functionExecutor!.calculate(\n                NumberValueObject.create(0),\n                value as BaseValueObject\n            ) as FunctionVariantType;\n        } else if (this._operatorString === prefixToken.AT) {\n            result = this._handlerAT(value);\n        } else {\n            result = ErrorValueObject.create(ErrorType.VALUE);\n        }\n        this.setValue(result);\n    }\n\n    private _handlerAT(value: FunctionVariantType) {\n        if (!value.isReferenceObject()) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        const currentValue = value as BaseReferenceObject;\n\n        if (currentValue.isCell()) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        const runtimeService = this._runtimeService;\n\n        const currentRow = runtimeService.currentRow || 0;\n        const currentColumn = runtimeService.currentColumn || 0;\n\n        const rangePos = currentValue.getRangePosition();\n\n        const { startRow, startColumn, endRow, endColumn } = rangePos;\n\n        if (endColumn !== startColumn && endRow !== startRow) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        if (startRow === endRow && startColumn === endColumn) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        // @ projection to current\n        if (endRow === startRow && currentColumn >= startColumn && currentColumn <= endColumn) {\n            return currentValue.getCellByColumn(currentColumn);\n        } else if (startColumn === endColumn && currentRow >= startRow && currentRow <= endRow) {\n            return currentValue.getCellByRow(currentRow);\n        }\n\n        if (currentValue.isTable()) {\n            return currentValue.getCellByPosition(currentRow);\n        }\n\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n}\n\nexport class PrefixNodeFactory extends BaseAstNodeFactory {\n    constructor(\n        @IFunctionService private readonly _functionService: IFunctionService,\n        @IFormulaRuntimeService private readonly _runtimeService: IFormulaRuntimeService\n    ) {\n        super();\n    }\n\n    override get zIndex() {\n        return NODE_ORDER_MAP.get(NodeType.PREFIX) || DEFAULT_AST_NODE_FACTORY_Z_INDEX;\n    }\n\n    override checkAndCreateNodeType(param: LexerNode | string) {\n        if (!(param instanceof LexerNode)) {\n            return;\n        }\n\n        const token = param.getToken();\n        const tokenTrim = token.trim();\n\n        if (tokenTrim.charAt(0) === '\"' && tokenTrim.charAt(tokenTrim.length - 1) === '\"') {\n            return;\n        }\n\n        let functionName = '';\n        if (tokenTrim === prefixToken.MINUS) {\n            functionName = FUNCTION_NAMES_META.MINUS;\n        } else if (tokenTrim === prefixToken.AT) {\n            return new PrefixNode(this._runtimeService, tokenTrim);\n        } else {\n            return;\n        }\n\n        const functionExecutor = this._functionService.getExecutor(functionName);\n        if (!functionExecutor) {\n            console.error(`No function ${token}`);\n            return ErrorNode.create(ErrorType.NAME);\n        }\n        return new PrefixNode(this._runtimeService, tokenTrim, functionExecutor);\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"47bd023d89af6ecbc959ef43bbf8f2f50efccc99"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/prefix-handler.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/prefix-handler.ts","statementMap":{"0":{"start":{"line":4,"column":20},"end":{"line":4,"column":54}},"1":{"start":{"line":5,"column":17},"end":{"line":5,"column":48}},"2":{"start":{"line":9,"column":18},"end":{"line":9,"column":32}},"3":{"start":{"line":10,"column":17},"end":{"line":10,"column":38}},"4":{"start":{"line":11,"column":20},"end":{"line":11,"column":21}},"5":{"start":{"line":12,"column":2},"end":{"line":16,"column":3}},"6":{"start":{"line":13,"column":29},"end":{"line":13,"column":83}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":90}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":18}},"9":{"start":{"line":17,"column":2},"end":{"line":23,"column":3}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":66}},"11":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"12":{"start":{"line":20,"column":6},"end":{"line":20,"column":46}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":18}},"14":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"15":{"start":{"line":25,"column":4},"end":{"line":25,"column":45}},"16":{"start":{"line":27,"column":2},"end":{"line":27,"column":54}}},"fnMap":{"0":{"name":"prefixHandler","decl":{"start":{"line":6,"column":16},"end":{"line":6,"column":29}},"loc":{"start":{"line":6,"column":79},"end":{"line":28,"column":1}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":2},"end":{"line":16,"column":3}},"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":16,"column":3}},{"start":{},"end":{}}],"line":12},"1":{"loc":{"start":{"line":17,"column":2},"end":{"line":23,"column":3}},"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":23,"column":3}},{"start":{},"end":{}}],"line":17},"2":{"loc":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},{"start":{},"end":{}}],"line":19},"3":{"loc":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},{"start":{},"end":{}}],"line":24}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/prefix-handler.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\nimport type { IFunctionService } from '../../services/function.service';\nimport type { IFormulaRuntimeService } from '../../services/runtime.service';\nimport { prefixToken } from '../../basics/token';\nimport { FUNCTION_NAMES_META } from '../../functions/meta/function-names';\nimport { PrefixNode } from '../ast-node/prefix-node';\n\nconst minusRegExp = new RegExp(prefixToken.MINUS, 'g');\nconst atRegExp = new RegExp(prefixToken.AT, 'g');\n\nexport function prefixHandler(tokenTrimParam: string, functionService: IFunctionService, runtimeService: IFormulaRuntimeService) {\n    let minusPrefixNode: Nullable<PrefixNode>;\n    let atPrefixNode: Nullable<PrefixNode>;\n    let tokenTrim = tokenTrimParam;\n    const prefix = tokenTrim.slice(0, 2);\n    let sliceLength = 0;\n    if (prefix[0] === prefixToken.MINUS) {\n        const functionExecutor = functionService.getExecutor(FUNCTION_NAMES_META.MINUS);\n        minusPrefixNode = new PrefixNode(runtimeService, prefixToken.MINUS, functionExecutor);\n        sliceLength++;\n    }\n\n    if (prefix[0] === prefixToken.AT) {\n        atPrefixNode = new PrefixNode(runtimeService, prefixToken.AT);\n        if (minusPrefixNode) {\n                // minusPrefixNode.addChildren(atPrefixNode);\n            atPrefixNode.setParent(minusPrefixNode);\n        }\n        sliceLength++;\n    }\n\n    if (sliceLength > 0) {\n        tokenTrim = tokenTrim.slice(sliceLength);\n    }\n\n    return { tokenTrim, minusPrefixNode, atPrefixNode };\n}\n"],"mappings":"AAmBA,SAAS,mBAAmB;AAC5B,SAAS,2BAA2B;AACpC,SAAS,kBAAkB;AAE3B,MAAM,cAAc,IAAI,OAAO,YAAY,OAAO,GAAG;AACrD,MAAM,WAAW,IAAI,OAAO,YAAY,IAAI,GAAG;AAExC,gBAAS,cAAc,gBAAwB,iBAAmC,gBAAwC;AAC7H,MAAI;AACJ,MAAI;AACJ,MAAI,YAAY;AAChB,QAAM,SAAS,UAAU,MAAM,GAAG,CAAC;AACnC,MAAI,cAAc;AAClB,MAAI,OAAO,CAAC,MAAM,YAAY,OAAO;AACjC,UAAM,mBAAmB,gBAAgB,YAAY,oBAAoB,KAAK;AAC9E,sBAAkB,IAAI,WAAW,gBAAgB,YAAY,OAAO,gBAAgB;AACpF;AAAA,EACJ;AAEA,MAAI,OAAO,CAAC,MAAM,YAAY,IAAI;AAC9B,mBAAe,IAAI,WAAW,gBAAgB,YAAY,EAAE;AAC5D,QAAI,iBAAiB;AAEjB,mBAAa,UAAU,eAAe;AAAA,IAC1C;AACA;AAAA,EACJ;AAEA,MAAI,cAAc,GAAG;AACjB,gBAAY,UAAU,MAAM,WAAW;AAAA,EAC3C;AAEA,SAAO,EAAE,WAAW,iBAAiB,aAAa;AACtD;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bc5a401ce773174030de3b7b1f4c5db7ba53e59f"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/function-node.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/function-node.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":29,"column":4},"end":{"line":29,"column":17}},"15":{"start":{"line":30,"column":4},"end":{"line":30,"column":47}},"16":{"start":{"line":31,"column":4},"end":{"line":31,"column":55}},"17":{"start":{"line":32,"column":4},"end":{"line":32,"column":43}},"18":{"start":{"line":33,"column":4},"end":{"line":33,"column":53}},"19":{"start":{"line":34,"column":4},"end":{"line":34,"column":47}},"20":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"21":{"start":{"line":36,"column":6},"end":{"line":36,"column":22}},"22":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"23":{"start":{"line":39,"column":6},"end":{"line":39,"column":24}},"24":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"25":{"start":{"line":42,"column":6},"end":{"line":42,"column":24}},"26":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"27":{"start":{"line":45,"column":6},"end":{"line":45,"column":28}},"28":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"29":{"start":{"line":48,"column":6},"end":{"line":48,"column":73}},"30":{"start":{"line":52,"column":4},"end":{"line":52,"column":29}},"31":{"start":{"line":55,"column":21},"end":{"line":55,"column":23}},"32":{"start":{"line":56,"column":21},"end":{"line":56,"column":39}},"33":{"start":{"line":57,"column":26},"end":{"line":57,"column":41}},"34":{"start":{"line":58,"column":4},"end":{"line":58,"column":26}},"35":{"start":{"line":59,"column":4},"end":{"line":70,"column":5}},"36":{"start":{"line":59,"column":17},"end":{"line":59,"column":18}},"37":{"start":{"line":60,"column":20},"end":{"line":60,"column":31}},"38":{"start":{"line":61,"column":21},"end":{"line":61,"column":37}},"39":{"start":{"line":62,"column":6},"end":{"line":64,"column":7}},"40":{"start":{"line":63,"column":8},"end":{"line":63,"column":17}},"41":{"start":{"line":65,"column":6},"end":{"line":69,"column":7}},"42":{"start":{"line":66,"column":8},"end":{"line":66,"column":51}},"43":{"start":{"line":68,"column":8},"end":{"line":68,"column":30}},"44":{"start":{"line":71,"column":26},"end":{"line":71,"column":62}},"45":{"start":{"line":73,"column":4},"end":{"line":77,"column":5}},"46":{"start":{"line":74,"column":6},"end":{"line":74,"column":46}},"47":{"start":{"line":76,"column":6},"end":{"line":76,"column":29}},"48":{"start":{"line":78,"column":4},"end":{"line":78,"column":29}},"49":{"start":{"line":79,"column":4},"end":{"line":79,"column":26}},"50":{"start":{"line":80,"column":4},"end":{"line":80,"column":55}},"51":{"start":{"line":83,"column":21},"end":{"line":83,"column":23}},"52":{"start":{"line":84,"column":21},"end":{"line":84,"column":39}},"53":{"start":{"line":85,"column":26},"end":{"line":85,"column":41}},"54":{"start":{"line":86,"column":4},"end":{"line":86,"column":26}},"55":{"start":{"line":87,"column":4},"end":{"line":98,"column":5}},"56":{"start":{"line":87,"column":17},"end":{"line":87,"column":18}},"57":{"start":{"line":88,"column":20},"end":{"line":88,"column":31}},"58":{"start":{"line":89,"column":21},"end":{"line":89,"column":37}},"59":{"start":{"line":90,"column":6},"end":{"line":92,"column":7}},"60":{"start":{"line":91,"column":8},"end":{"line":91,"column":17}},"61":{"start":{"line":93,"column":6},"end":{"line":97,"column":7}},"62":{"start":{"line":94,"column":8},"end":{"line":94,"column":51}},"63":{"start":{"line":96,"column":8},"end":{"line":96,"column":30}},"64":{"start":{"line":99,"column":26},"end":{"line":99,"column":51}},"65":{"start":{"line":100,"column":4},"end":{"line":100,"column":36}},"66":{"start":{"line":101,"column":4},"end":{"line":101,"column":33}},"67":{"start":{"line":107,"column":4},"end":{"line":107,"column":32}},"68":{"start":{"line":117,"column":21},"end":{"line":117,"column":39}},"69":{"start":{"line":118,"column":26},"end":{"line":118,"column":41}},"70":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"71":{"start":{"line":120,"column":6},"end":{"line":120,"column":13}},"72":{"start":{"line":122,"column":32},"end":{"line":122,"column":54}},"73":{"start":{"line":123,"column":25},"end":{"line":123,"column":47}},"74":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"75":{"start":{"line":125,"column":6},"end":{"line":125,"column":13}},"76":{"start":{"line":129,"column":4},"end":{"line":137,"column":5}},"77":{"start":{"line":130,"column":39},"end":{"line":130,"column":73}},"78":{"start":{"line":131,"column":59},"end":{"line":131,"column":83}},"79":{"start":{"line":132,"column":6},"end":{"line":132,"column":45}},"80":{"start":{"line":133,"column":6},"end":{"line":133,"column":54}},"81":{"start":{"line":135,"column":6},"end":{"line":135,"column":94}},"82":{"start":{"line":136,"column":6},"end":{"line":136,"column":100}},"83":{"start":{"line":138,"column":30},"end":{"line":138,"column":57}},"84":{"start":{"line":139,"column":107},"end":{"line":139,"column":124}},"85":{"start":{"line":140,"column":27},"end":{"line":140,"column":52}},"86":{"start":{"line":141,"column":30},"end":{"line":141,"column":61}},"87":{"start":{"line":142,"column":4},"end":{"line":144,"column":5}},"88":{"start":{"line":143,"column":6},"end":{"line":143,"column":66}},"89":{"start":{"line":145,"column":4},"end":{"line":147,"column":5}},"90":{"start":{"line":146,"column":6},"end":{"line":146,"column":75}},"91":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"92":{"start":{"line":154,"column":6},"end":{"line":154,"column":60}},"93":{"start":{"line":156,"column":24},"end":{"line":156,"column":67}},"94":{"start":{"line":157,"column":4},"end":{"line":165,"column":7}},"95":{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},"96":{"start":{"line":169,"column":6},"end":{"line":169,"column":41}},"97":{"start":{"line":173,"column":4},"end":{"line":181,"column":7}},"98":{"start":{"line":174,"column":6},"end":{"line":176,"column":7}},"99":{"start":{"line":175,"column":8},"end":{"line":175,"column":33}},"100":{"start":{"line":177,"column":6},"end":{"line":179,"column":7}},"101":{"start":{"line":178,"column":8},"end":{"line":178,"column":23}},"102":{"start":{"line":180,"column":6},"end":{"line":180,"column":32}},"103":{"start":{"line":184,"column":37},"end":{"line":184,"column":59}},"104":{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},"105":{"start":{"line":186,"column":6},"end":{"line":186,"column":51}},"106":{"start":{"line":189,"column":4},"end":{"line":189,"column":23}},"107":{"start":{"line":190,"column":4},"end":{"line":198,"column":5}},"108":{"start":{"line":191,"column":34},"end":{"line":193,"column":7}},"109":{"start":{"line":194,"column":6},"end":{"line":194,"column":68}},"110":{"start":{"line":196,"column":6},"end":{"line":196,"column":36}},"111":{"start":{"line":197,"column":6},"end":{"line":197,"column":68}},"112":{"start":{"line":199,"column":4},"end":{"line":199,"column":25}},"113":{"start":{"line":202,"column":37},"end":{"line":202,"column":59}},"114":{"start":{"line":203,"column":4},"end":{"line":205,"column":5}},"115":{"start":{"line":204,"column":6},"end":{"line":204,"column":51}},"116":{"start":{"line":207,"column":4},"end":{"line":207,"column":23}},"117":{"start":{"line":208,"column":4},"end":{"line":216,"column":5}},"118":{"start":{"line":209,"column":34},"end":{"line":211,"column":7}},"119":{"start":{"line":212,"column":6},"end":{"line":212,"column":68}},"120":{"start":{"line":214,"column":6},"end":{"line":214,"column":36}},"121":{"start":{"line":215,"column":6},"end":{"line":215,"column":68}},"122":{"start":{"line":217,"column":4},"end":{"line":217,"column":25}},"123":{"start":{"line":220,"column":25},"end":{"line":220,"column":70}},"124":{"start":{"line":221,"column":4},"end":{"line":223,"column":5}},"125":{"start":{"line":222,"column":6},"end":{"line":222,"column":13}},"126":{"start":{"line":224,"column":25},"end":{"line":224,"column":82}},"127":{"start":{"line":225,"column":4},"end":{"line":227,"column":5}},"128":{"start":{"line":226,"column":6},"end":{"line":226,"column":13}},"129":{"start":{"line":228,"column":4},"end":{"line":228,"column":57}},"130":{"start":{"line":231,"column":75},"end":{"line":231,"column":95}},"131":{"start":{"line":232,"column":4},"end":{"line":232,"column":98}},"132":{"start":{"line":233,"column":4},"end":{"line":236,"column":5}},"133":{"start":{"line":234,"column":40},"end":{"line":234,"column":122}},"134":{"start":{"line":235,"column":6},"end":{"line":235,"column":75}},"135":{"start":{"line":239,"column":4},"end":{"line":241,"column":5}},"136":{"start":{"line":240,"column":6},"end":{"line":240,"column":13}},"137":{"start":{"line":242,"column":28},"end":{"line":242,"column":35}},"138":{"start":{"line":243,"column":4},"end":{"line":243,"column":83}},"139":{"start":{"line":244,"column":4},"end":{"line":244,"column":74}},"140":{"start":{"line":245,"column":4},"end":{"line":245,"column":98}},"141":{"start":{"line":246,"column":4},"end":{"line":246,"column":71}},"142":{"start":{"line":247,"column":4},"end":{"line":247,"column":106}},"143":{"start":{"line":248,"column":4},"end":{"line":248,"column":96}},"144":{"start":{"line":251,"column":4},"end":{"line":251,"column":77}},"145":{"start":{"line":254,"column":4},"end":{"line":254,"column":85}},"146":{"start":{"line":259,"column":4},"end":{"line":259,"column":17}},"147":{"start":{"line":262,"column":4},"end":{"line":262,"column":29}},"148":{"start":{"line":265,"column":4},"end":{"line":265,"column":59}},"149":{"start":{"line":266,"column":4},"end":{"line":266,"column":55}},"150":{"start":{"line":269,"column":4},"end":{"line":269,"column":59}},"151":{"start":{"line":272,"column":33},"end":{"line":323,"column":1}},"152":{"start":{"line":274,"column":4},"end":{"line":274,"column":12}},"153":{"start":{"line":275,"column":4},"end":{"line":275,"column":45}},"154":{"start":{"line":276,"column":4},"end":{"line":276,"column":55}},"155":{"start":{"line":277,"column":4},"end":{"line":277,"column":43}},"156":{"start":{"line":278,"column":4},"end":{"line":278,"column":53}},"157":{"start":{"line":279,"column":4},"end":{"line":279,"column":31}},"158":{"start":{"line":280,"column":4},"end":{"line":280,"column":47}},"159":{"start":{"line":283,"column":4},"end":{"line":283,"column":85}},"160":{"start":{"line":286,"column":29},"end":{"line":286,"column":69}},"161":{"start":{"line":287,"column":4},"end":{"line":290,"column":5}},"162":{"start":{"line":288,"column":6},"end":{"line":288,"column":44}},"163":{"start":{"line":289,"column":6},"end":{"line":289,"column":46}},"164":{"start":{"line":291,"column":4},"end":{"line":298,"column":6}},"165":{"start":{"line":301,"column":4},"end":{"line":303,"column":5}},"166":{"start":{"line":302,"column":6},"end":{"line":302,"column":13}},"167":{"start":{"line":304,"column":18},"end":{"line":304,"column":34}},"168":{"start":{"line":305,"column":57},"end":{"line":305,"column":129}},"169":{"start":{"line":306,"column":4},"end":{"line":308,"column":5}},"170":{"start":{"line":307,"column":6},"end":{"line":307,"column":47}},"171":{"start":{"line":309,"column":27},"end":{"line":309,"column":50}},"172":{"start":{"line":310,"column":4},"end":{"line":318,"column":5}},"173":{"start":{"line":311,"column":27},"end":{"line":311,"column":54}},"174":{"start":{"line":312,"column":6},"end":{"line":316,"column":7}},"175":{"start":{"line":313,"column":8},"end":{"line":313,"column":45}},"176":{"start":{"line":314,"column":13},"end":{"line":316,"column":7}},"177":{"start":{"line":315,"column":8},"end":{"line":315,"column":48}},"178":{"start":{"line":317,"column":6},"end":{"line":317,"column":26}},"179":{"start":{"line":321,"column":4},"end":{"line":321,"column":75}},"180":{"start":{"line":324,"column":0},"end":{"line":331,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":2},"end":{"line":28,"column":3}},"loc":{"start":{"line":28,"column":121},"end":{"line":50,"column":3}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":51,"column":2},"end":{"line":51,"column":3}},"loc":{"start":{"line":51,"column":17},"end":{"line":53,"column":3}},"line":51},"5":{"name":"(anonymous_5)","decl":{"start":{"line":54,"column":2},"end":{"line":54,"column":3}},"loc":{"start":{"line":54,"column":23},"end":{"line":81,"column":3}},"line":54},"6":{"name":"(anonymous_6)","decl":{"start":{"line":82,"column":2},"end":{"line":82,"column":3}},"loc":{"start":{"line":82,"column":12},"end":{"line":102,"column":3}},"line":82},"7":{"name":"(anonymous_7)","decl":{"start":{"line":106,"column":2},"end":{"line":106,"column":3}},"loc":{"start":{"line":106,"column":19},"end":{"line":108,"column":3}},"line":106},"8":{"name":"(anonymous_8)","decl":{"start":{"line":116,"column":2},"end":{"line":116,"column":3}},"loc":{"start":{"line":116,"column":25},"end":{"line":148,"column":3}},"line":116},"9":{"name":"(anonymous_9)","decl":{"start":{"line":152,"column":2},"end":{"line":152,"column":3}},"loc":{"start":{"line":152,"column":43},"end":{"line":166,"column":3}},"line":152},"10":{"name":"(anonymous_10)","decl":{"start":{"line":167,"column":2},"end":{"line":167,"column":3}},"loc":{"start":{"line":167,"column":27},"end":{"line":171,"column":3}},"line":167},"11":{"name":"(anonymous_11)","decl":{"start":{"line":172,"column":2},"end":{"line":172,"column":3}},"loc":{"start":{"line":172,"column":33},"end":{"line":182,"column":3}},"line":172},"12":{"name":"(anonymous_12)","decl":{"start":{"line":173,"column":24},"end":{"line":173,"column":25}},"loc":{"start":{"line":173,"column":37},"end":{"line":181,"column":5}},"line":173},"13":{"name":"(anonymous_13)","decl":{"start":{"line":183,"column":2},"end":{"line":183,"column":3}},"loc":{"start":{"line":183,"column":23},"end":{"line":200,"column":3}},"line":183},"14":{"name":"(anonymous_14)","decl":{"start":{"line":201,"column":2},"end":{"line":201,"column":3}},"loc":{"start":{"line":201,"column":34},"end":{"line":218,"column":3}},"line":201},"15":{"name":"(anonymous_15)","decl":{"start":{"line":219,"column":2},"end":{"line":219,"column":3}},"loc":{"start":{"line":219,"column":32},"end":{"line":229,"column":3}},"line":219},"16":{"name":"(anonymous_16)","decl":{"start":{"line":230,"column":2},"end":{"line":230,"column":3}},"loc":{"start":{"line":230,"column":16},"end":{"line":237,"column":3}},"line":230},"17":{"name":"(anonymous_17)","decl":{"start":{"line":238,"column":2},"end":{"line":238,"column":3}},"loc":{"start":{"line":238,"column":23},"end":{"line":249,"column":3}},"line":238},"18":{"name":"(anonymous_18)","decl":{"start":{"line":250,"column":2},"end":{"line":250,"column":3}},"loc":{"start":{"line":250,"column":15},"end":{"line":252,"column":3}},"line":250},"19":{"name":"(anonymous_19)","decl":{"start":{"line":253,"column":2},"end":{"line":253,"column":3}},"loc":{"start":{"line":253,"column":19},"end":{"line":255,"column":3}},"line":253},"20":{"name":"(anonymous_20)","decl":{"start":{"line":258,"column":2},"end":{"line":258,"column":3}},"loc":{"start":{"line":258,"column":31},"end":{"line":260,"column":3}},"line":258},"21":{"name":"(anonymous_21)","decl":{"start":{"line":261,"column":2},"end":{"line":261,"column":3}},"loc":{"start":{"line":261,"column":17},"end":{"line":263,"column":3}},"line":261},"22":{"name":"(anonymous_22)","decl":{"start":{"line":264,"column":2},"end":{"line":264,"column":3}},"loc":{"start":{"line":264,"column":23},"end":{"line":267,"column":3}},"line":264},"23":{"name":"(anonymous_23)","decl":{"start":{"line":268,"column":2},"end":{"line":268,"column":3}},"loc":{"start":{"line":268,"column":12},"end":{"line":270,"column":3}},"line":268},"24":{"name":"(anonymous_24)","decl":{"start":{"line":273,"column":2},"end":{"line":273,"column":3}},"loc":{"start":{"line":273,"column":124},"end":{"line":281,"column":3}},"line":273},"25":{"name":"(anonymous_25)","decl":{"start":{"line":282,"column":2},"end":{"line":282,"column":3}},"loc":{"start":{"line":282,"column":15},"end":{"line":284,"column":3}},"line":282},"26":{"name":"(anonymous_26)","decl":{"start":{"line":285,"column":2},"end":{"line":285,"column":3}},"loc":{"start":{"line":285,"column":16},"end":{"line":299,"column":3}},"line":285},"27":{"name":"(anonymous_27)","decl":{"start":{"line":300,"column":2},"end":{"line":300,"column":3}},"loc":{"start":{"line":300,"column":32},"end":{"line":319,"column":3}},"line":300},"28":{"name":"(anonymous_28)","decl":{"start":{"line":320,"column":2},"end":{"line":320,"column":3}},"loc":{"start":{"line":320,"column":28},"end":{"line":322,"column":3}},"line":320}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},{"start":{},"end":{}}],"line":35},"8":{"loc":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},{"start":{},"end":{}}],"line":38},"9":{"loc":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},{"start":{},"end":{}}],"line":41},"10":{"loc":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},{"start":{},"end":{}}],"line":44},"11":{"loc":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},{"start":{},"end":{}}],"line":47},"12":{"loc":{"start":{"line":62,"column":6},"end":{"line":64,"column":7}},"type":"if","locations":[{"start":{"line":62,"column":6},"end":{"line":64,"column":7}},{"start":{},"end":{}}],"line":62},"13":{"loc":{"start":{"line":65,"column":6},"end":{"line":69,"column":7}},"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":69,"column":7}},{"start":{"line":67,"column":13},"end":{"line":69,"column":7}}],"line":65},"14":{"loc":{"start":{"line":65,"column":10},"end":{"line":65,"column":84}},"type":"binary-expr","locations":[{"start":{"line":65,"column":10},"end":{"line":65,"column":36}},{"start":{"line":65,"column":40},"end":{"line":65,"column":84}}],"line":65},"15":{"loc":{"start":{"line":73,"column":4},"end":{"line":77,"column":5}},"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":77,"column":5}},{"start":{"line":75,"column":11},"end":{"line":77,"column":5}}],"line":73},"16":{"loc":{"start":{"line":73,"column":8},"end":{"line":73,"column":75}},"type":"binary-expr","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":37}},{"start":{"line":73,"column":41},"end":{"line":73,"column":75}}],"line":73},"17":{"loc":{"start":{"line":90,"column":6},"end":{"line":92,"column":7}},"type":"if","locations":[{"start":{"line":90,"column":6},"end":{"line":92,"column":7}},{"start":{},"end":{}}],"line":90},"18":{"loc":{"start":{"line":93,"column":6},"end":{"line":97,"column":7}},"type":"if","locations":[{"start":{"line":93,"column":6},"end":{"line":97,"column":7}},{"start":{"line":95,"column":13},"end":{"line":97,"column":7}}],"line":93},"19":{"loc":{"start":{"line":93,"column":10},"end":{"line":93,"column":84}},"type":"binary-expr","locations":[{"start":{"line":93,"column":10},"end":{"line":93,"column":36}},{"start":{"line":93,"column":40},"end":{"line":93,"column":84}}],"line":93},"20":{"loc":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},{"start":{},"end":{}}],"line":119},"21":{"loc":{"start":{"line":119,"column":8},"end":{"line":119,"column":72}},"type":"binary-expr","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":49}},{"start":{"line":119,"column":53},"end":{"line":119,"column":72}}],"line":119},"22":{"loc":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},{"start":{},"end":{}}],"line":124},"23":{"loc":{"start":{"line":124,"column":8},"end":{"line":124,"column":87}},"type":"binary-expr","locations":[{"start":{"line":124,"column":8},"end":{"line":124,"column":49}},{"start":{"line":124,"column":53},"end":{"line":124,"column":87}}],"line":124},"24":{"loc":{"start":{"line":129,"column":4},"end":{"line":137,"column":5}},"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":137,"column":5}},{"start":{"line":134,"column":11},"end":{"line":137,"column":5}}],"line":129},"25":{"loc":{"start":{"line":135,"column":23},"end":{"line":135,"column":93}},"type":"cond-expr","locations":[{"start":{"line":135,"column":56},"end":{"line":135,"column":89}},{"start":{"line":135,"column":92},"end":{"line":135,"column":93}}],"line":135},"26":{"loc":{"start":{"line":136,"column":26},"end":{"line":136,"column":99}},"type":"cond-expr","locations":[{"start":{"line":136,"column":59},"end":{"line":136,"column":95}},{"start":{"line":136,"column":98},"end":{"line":136,"column":99}}],"line":136},"27":{"loc":{"start":{"line":142,"column":4},"end":{"line":144,"column":5}},"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":144,"column":5}},{"start":{},"end":{}}],"line":142},"28":{"loc":{"start":{"line":145,"column":4},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":147,"column":5}},{"start":{},"end":{}}],"line":145},"29":{"loc":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},{"start":{},"end":{}}],"line":153},"30":{"loc":{"start":{"line":153,"column":8},"end":{"line":153,"column":78}},"type":"binary-expr","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":47}},{"start":{"line":153,"column":51},"end":{"line":153,"column":78}}],"line":153},"31":{"loc":{"start":{"line":160,"column":19},"end":{"line":160,"column":46}},"type":"binary-expr","locations":[{"start":{"line":160,"column":19},"end":{"line":160,"column":41}},{"start":{"line":160,"column":45},"end":{"line":160,"column":46}}],"line":160},"32":{"loc":{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},{"start":{},"end":{}}],"line":168},"33":{"loc":{"start":{"line":174,"column":6},"end":{"line":176,"column":7}},"type":"if","locations":[{"start":{"line":174,"column":6},"end":{"line":176,"column":7}},{"start":{},"end":{}}],"line":174},"34":{"loc":{"start":{"line":177,"column":6},"end":{"line":179,"column":7}},"type":"if","locations":[{"start":{"line":177,"column":6},"end":{"line":179,"column":7}},{"start":{},"end":{}}],"line":177},"35":{"loc":{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},{"start":{},"end":{}}],"line":185},"36":{"loc":{"start":{"line":185,"column":8},"end":{"line":185,"column":108}},"type":"binary-expr","locations":[{"start":{"line":185,"column":8},"end":{"line":185,"column":24}},{"start":{"line":185,"column":28},"end":{"line":185,"column":44}},{"start":{"line":185,"column":49},"end":{"line":185,"column":76}},{"start":{"line":185,"column":80},"end":{"line":185,"column":107}}],"line":185},"37":{"loc":{"start":{"line":190,"column":4},"end":{"line":198,"column":5}},"type":"if","locations":[{"start":{"line":190,"column":4},"end":{"line":198,"column":5}},{"start":{"line":195,"column":11},"end":{"line":198,"column":5}}],"line":190},"38":{"loc":{"start":{"line":203,"column":4},"end":{"line":205,"column":5}},"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":205,"column":5}},{"start":{},"end":{}}],"line":203},"39":{"loc":{"start":{"line":203,"column":8},"end":{"line":203,"column":108}},"type":"binary-expr","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":24}},{"start":{"line":203,"column":28},"end":{"line":203,"column":44}},{"start":{"line":203,"column":49},"end":{"line":203,"column":76}},{"start":{"line":203,"column":80},"end":{"line":203,"column":107}}],"line":203},"40":{"loc":{"start":{"line":208,"column":4},"end":{"line":216,"column":5}},"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":216,"column":5}},{"start":{"line":213,"column":11},"end":{"line":216,"column":5}}],"line":208},"41":{"loc":{"start":{"line":221,"column":4},"end":{"line":223,"column":5}},"type":"if","locations":[{"start":{"line":221,"column":4},"end":{"line":223,"column":5}},{"start":{},"end":{}}],"line":221},"42":{"loc":{"start":{"line":225,"column":4},"end":{"line":227,"column":5}},"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":227,"column":5}},{"start":{},"end":{}}],"line":225},"43":{"loc":{"start":{"line":233,"column":4},"end":{"line":236,"column":5}},"type":"if","locations":[{"start":{"line":233,"column":4},"end":{"line":236,"column":5}},{"start":{},"end":{}}],"line":233},"44":{"loc":{"start":{"line":239,"column":4},"end":{"line":241,"column":5}},"type":"if","locations":[{"start":{"line":239,"column":4},"end":{"line":241,"column":5}},{"start":{},"end":{}}],"line":239},"45":{"loc":{"start":{"line":258,"column":14},"end":{"line":258,"column":29}},"type":"default-arg","locations":[{"start":{"line":258,"column":22},"end":{"line":258,"column":29}}],"line":258},"46":{"loc":{"start":{"line":283,"column":11},"end":{"line":283,"column":84}},"type":"binary-expr","locations":[{"start":{"line":283,"column":11},"end":{"line":283,"column":48}},{"start":{"line":283,"column":52},"end":{"line":283,"column":84}}],"line":283},"47":{"loc":{"start":{"line":287,"column":4},"end":{"line":290,"column":5}},"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":290,"column":5}},{"start":{},"end":{}}],"line":287},"48":{"loc":{"start":{"line":301,"column":4},"end":{"line":303,"column":5}},"type":"if","locations":[{"start":{"line":301,"column":4},"end":{"line":303,"column":5}},{"start":{},"end":{}}],"line":301},"49":{"loc":{"start":{"line":306,"column":4},"end":{"line":308,"column":5}},"type":"if","locations":[{"start":{"line":306,"column":4},"end":{"line":308,"column":5}},{"start":{},"end":{}}],"line":306},"50":{"loc":{"start":{"line":306,"column":8},"end":{"line":306,"column":75}},"type":"binary-expr","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":40}},{"start":{"line":306,"column":44},"end":{"line":306,"column":75}}],"line":306},"51":{"loc":{"start":{"line":310,"column":4},"end":{"line":318,"column":5}},"type":"if","locations":[{"start":{"line":310,"column":4},"end":{"line":318,"column":5}},{"start":{},"end":{}}],"line":310},"52":{"loc":{"start":{"line":312,"column":6},"end":{"line":316,"column":7}},"type":"if","locations":[{"start":{"line":312,"column":6},"end":{"line":316,"column":7}},{"start":{"line":314,"column":13},"end":{"line":316,"column":7}}],"line":312},"53":{"loc":{"start":{"line":314,"column":13},"end":{"line":316,"column":7}},"type":"if","locations":[{"start":{"line":314,"column":13},"end":{"line":316,"column":7}},{"start":{},"end":{}}],"line":314}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":6,"7":6,"8":1,"9":0,"10":1,"11":1,"12":6,"13":6,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":1},"f":{"0":1,"1":6,"2":6,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"b":{"0":[0,1],"1":[0,1],"2":[6,0],"3":[6,6],"4":[0,6],"5":[0,1],"6":[1,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0,0,0],"37":[0,0],"38":[0,0],"39":[0,0,0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/function-node.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BaseFunction } from '../../functions/base-function';\n\nimport type { LexerNode } from '../analysis/lexer-node';\nimport type {\n    AsyncArrayObject,\n    AsyncObject,\n    BaseReferenceObject,\n    FunctionVariantType,\n    NodeValueType,\n} from '../reference-object/base-reference-object';\nimport type { BaseValueObject } from '../value-object/base-value-object';\nimport type { FormulaFunctionResultValueType } from '../value-object/primitive-object';\nimport { Inject, Injector } from '@univerjs/core';\nimport { AstNodePromiseType } from '../../basics/common';\nimport { ErrorType } from '../../basics/error-type';\nimport { matchToken } from '../../basics/token';\nimport { FormulaDataModel } from '../../models/formula-data.model';\nimport { IFormulaCurrentConfigService } from '../../services/current-data.service';\nimport { IDefinedNamesService } from '../../services/defined-names.service';\nimport { IFunctionService } from '../../services/function.service';\nimport { IFormulaRuntimeService } from '../../services/runtime.service';\nimport { prefixHandler } from '../utils/prefix-handler';\nimport { ArrayValueObject, transformToValueObject, ValueObjectFactory } from '../value-object/array-value-object';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { BaseAstNode, ErrorNode } from './base-ast-node';\nimport { BaseAstNodeFactory, DEFAULT_AST_NODE_FACTORY_Z_INDEX } from './base-ast-node-factory';\nimport { NODE_ORDER_MAP, NodeType } from './node-type';\n\nexport class FunctionNode extends BaseAstNode {\n    constructor(\n        token: string,\n        private _functionExecutor: BaseFunction,\n        private _currentConfigService: IFormulaCurrentConfigService,\n        private _runtimeService: IFormulaRuntimeService,\n        private _definedNamesService: IDefinedNamesService,\n        private _formulaDataModel: FormulaDataModel\n    ) {\n        super(token);\n\n        if (this._functionExecutor.isAsync()) {\n            this.setAsync();\n        }\n\n        if (this._functionExecutor.isAddress()) {\n            this.setAddress();\n        }\n\n        if (this._functionExecutor.needsLocale) {\n            this._setLocale();\n        }\n\n        if (this._functionExecutor.needsSheetsInfo) {\n            this._setSheetsInfo();\n        }\n\n        if (this._functionExecutor.needsFormulaDataModel) {\n            this._functionExecutor.setFormulaDataModel(this._formulaDataModel);\n        }\n    }\n\n    override get nodeType() {\n        return NodeType.FUNCTION;\n    }\n\n    override async executeAsync() {\n        const variants: BaseValueObject[] = [];\n        const children = this.getChildren();\n        const childrenCount = children.length;\n\n        this._compatibility();\n\n        for (let i = 0; i < childrenCount; i++) {\n            const child = children[i];\n            const object = child.getValue();\n            if (object == null) {\n                continue;\n            }\n            if (object.isReferenceObject() && !this._functionExecutor.needsReferenceObject) {\n                variants.push((object as BaseReferenceObject).toArrayValueObject());\n            } else {\n                variants.push(object as BaseValueObject);\n            }\n        }\n\n        const resultVariant = await this._calculateAsync(variants);\n        let result: FunctionVariantType;\n        if (resultVariant.isAsyncObject() || resultVariant.isAsyncArrayObject()) {\n            result = await (resultVariant as AsyncObject | AsyncArrayObject).getValue();\n        } else {\n            result = resultVariant as FunctionVariantType;\n        }\n\n        this._setRefData(result);\n\n        this.setValue(result);\n\n        return Promise.resolve(AstNodePromiseType.SUCCESS);\n    }\n\n    override execute() {\n        const variants: BaseValueObject[] = [];\n        const children = this.getChildren();\n        const childrenCount = children.length;\n\n        this._compatibility();\n\n        for (let i = 0; i < childrenCount; i++) {\n            const child = children[i];\n            const object = child.getValue();\n\n            if (object == null) {\n                continue;\n            }\n\n            // In the SUBTOTAL function, we need to get rowData information, we can only use ReferenceObject\n            if (object.isReferenceObject() && !this._functionExecutor.needsReferenceObject) {\n                // Array converted from reference object needs to be marked\n                variants.push((object as BaseReferenceObject).toArrayValueObject());\n            } else {\n                variants.push(object as BaseValueObject);\n            }\n        }\n\n        const resultVariant = this._calculate(variants) as FunctionVariantType;\n\n        this._setRefData(resultVariant);\n\n        this.setValue(resultVariant as FunctionVariantType);\n    }\n\n     /**\n      * Compatibility handling for special functions.\n      */\n    private _compatibility() {\n        this._lookupCompatibility();\n    }\n\n    /**\n     * The LOOKUP function follows the following rules when dealing with vectors of different sizes:\n     *    If the lookup_vector is larger than the result_vector,\n     *    the LOOKUP function will ignore the extra portion of the lookup_vector and only use the portion of the result_vector that is the same size as the lookup_vector for lookup and returning results.\n     *    If the lookup_vector is smaller than the result_vector,\n     *    the LOOKUP function will continue using the last value of the result_vector for lookup and returning results after the last value of the lookup_vector.\n     */\n    private _lookupCompatibility() {\n        const children = this.getChildren();\n        const childrenCount = children.length;\n\n        if (!this._functionExecutor.needsExpandParams || childrenCount !== 3) {\n            return;\n        }\n\n        const lookupVectorOrArray = children[1].getValue();\n\n        const resultVector = children[2].getValue();\n\n        if (!lookupVectorOrArray?.isReferenceObject() && !resultVector?.isReferenceObject()) {\n            return;\n        }\n\n        let lookupCountRow: number;\n        let lookupCountColumn: number;\n\n        if (lookupVectorOrArray?.isReferenceObject()) {\n            const lookupVectorOrArrayRange = (lookupVectorOrArray as BaseReferenceObject).getRangeData();\n            const { startRow, startColumn, endRow, endColumn } = lookupVectorOrArrayRange;\n\n            lookupCountRow = endRow - startRow + 1;\n            lookupCountColumn = endColumn - startColumn + 1;\n        } else {\n            lookupCountRow = lookupVectorOrArray?.isArray() ? (lookupVectorOrArray as ArrayValueObject).getRowCount() : 1;\n            lookupCountColumn = lookupVectorOrArray?.isArray() ? (lookupVectorOrArray as ArrayValueObject).getColumnCount() : 1;\n        }\n\n        const resultVectorRange = (resultVector as BaseReferenceObject).getRangeData();\n\n        const { startRow: reStartRow, startColumn: reStartColumn, endRow: reEndRow, endColumn: reEndColumn } = resultVectorRange;\n\n        const resultCountRow = reEndRow - reStartRow + 1;\n        const resultCountColumn = reEndColumn - reStartColumn + 1;\n\n        if (lookupCountRow !== resultCountRow) {\n            resultVectorRange.endRow += lookupCountRow - resultCountRow;\n        }\n\n        if (lookupCountColumn !== resultCountColumn) {\n            resultVectorRange.endColumn += lookupCountColumn - resultCountColumn;\n        }\n    }\n\n    /**\n     * Transform the result of a custom function to a NodeValueType.\n     */\n    private _handleCustomResult(resultVariantCustom: FormulaFunctionResultValueType): NodeValueType {\n        if (typeof resultVariantCustom !== 'object' || resultVariantCustom == null) {\n            return ValueObjectFactory.create(resultVariantCustom);\n        }\n\n        const arrayValues = transformToValueObject(resultVariantCustom);\n        return ArrayValueObject.create({\n            calculateValueList: arrayValues,\n            rowCount: arrayValues.length,\n            columnCount: arrayValues[0]?.length || 0,\n            unitId: '',\n            sheetId: '',\n            row: -1,\n            column: -1,\n        });\n    }\n\n    private _handleAddressFunction() {\n        /**\n         * In Excel, to inject a defined name into a function that has positioning capabilities,\n         * such as using the INDIRECT function to reference a named range,\n         * you can write it as follows:\n         * =INDIRECT(\"DefinedName1\")\n         */\n        if (this._functionExecutor.isAddress()) {\n            this._setDefinedNamesForFunction();\n        }\n    }\n\n    private _mapVariantsToValues(variants: BaseValueObject[]) {\n        return variants.map((variant) => {\n            if (variant.isArray()) {\n                return (variant as ArrayValueObject).toValue();\n            }\n\n            if (variant.isLambda()) {\n                return variant;\n            }\n\n            return variant.getValue();\n        });\n    }\n\n    private _calculate(variants: BaseValueObject[]) {\n        // Check the number of parameters\n        const { minParams, maxParams } = this._functionExecutor;\n        if (minParams !== -1 && maxParams !== -1 && (variants.length < minParams || variants.length > maxParams)) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n        let resultVariant: NodeValueType;\n\n        this._setRefInfo();\n\n        if (this._functionExecutor.isCustom()) {\n            const resultVariantCustom = this._functionExecutor.calculateCustom(\n                ...this._mapVariantsToValues(variants)\n            ) as FormulaFunctionResultValueType;\n\n            resultVariant = this._handleCustomResult(resultVariantCustom);\n        } else {\n            this._handleAddressFunction();\n            resultVariant = this._functionExecutor.calculate(...variants);\n        }\n\n        return resultVariant;\n    }\n\n    private async _calculateAsync(variants: BaseValueObject[]) {\n        // Check the number of parameters\n        const { minParams, maxParams } = this._functionExecutor;\n        if (minParams !== -1 && maxParams !== -1 && (variants.length < minParams || variants.length > maxParams)) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        let resultVariant: NodeValueType;\n\n        this._setRefInfo();\n\n        if (this._functionExecutor.isCustom()) {\n            const resultVariantCustom = await this._functionExecutor.calculateCustom(\n                ...this._mapVariantsToValues(variants)\n            );\n\n            resultVariant = this._handleCustomResult(resultVariantCustom);\n        } else {\n            this._handleAddressFunction();\n            resultVariant = this._functionExecutor.calculate(...variants);\n        }\n\n        return resultVariant;\n    }\n\n    private _setDefinedNamesForFunction() {\n        const editorUnitId = this._currentConfigService.getExecuteUnitId();\n        if (editorUnitId == null) {\n            return;\n        }\n        const definedNames = this._definedNamesService.getDefinedNameMap(editorUnitId);\n        if (definedNames == null) {\n            return;\n        }\n\n        this._functionExecutor.setDefinedNames(definedNames);\n    }\n\n    private _setRefInfo() {\n        const { currentUnitId, currentSubUnitId, currentRow, currentColumn } = this._runtimeService;\n\n        this._functionExecutor.setRefInfo(currentUnitId, currentSubUnitId, currentRow, currentColumn);\n\n        if (this._functionExecutor.needsSheetRowColumnCount) {\n            const { rowCount, columnCount } = this._currentConfigService.getSheetRowColumnCount(currentUnitId, currentSubUnitId);\n\n            this._functionExecutor.setSheetRowColumnCount(rowCount, columnCount);\n        }\n    }\n\n    private _setRefData(variant: FunctionVariantType) {\n        if (!variant.isReferenceObject()) {\n            return;\n        }\n        const referenceObject = variant as BaseReferenceObject;\n\n        referenceObject.setForcedSheetId(this._currentConfigService.getSheetNameMap());\n\n        referenceObject.setUnitData(this._currentConfigService.getUnitData());\n\n        referenceObject.setArrayFormulaCellData(this._currentConfigService.getArrayFormulaCellData());\n\n        referenceObject.setRuntimeData(this._runtimeService.getUnitData());\n\n        referenceObject.setRuntimeArrayFormulaCellData(this._runtimeService.getRuntimeArrayFormulaCellData());\n\n        referenceObject.setRuntimeFeatureCellData(this._runtimeService.getRuntimeFeatureCellData());\n    }\n\n    private _setLocale() {\n        this._functionExecutor.setLocale(this._currentConfigService.getLocale());\n    }\n\n    private _setSheetsInfo() {\n        this._functionExecutor.setSheetsInfo(this._currentConfigService.getSheetsInfo());\n    }\n}\n\nexport class ErrorFunctionNode extends BaseAstNode {\n    constructor(\n        token: string = 'Error'\n    ) {\n        super(token);\n    }\n\n    override get nodeType() {\n        return NodeType.FUNCTION;\n    }\n\n    override async executeAsync() {\n        this.setValue(ErrorValueObject.create(ErrorType.NAME) as FunctionVariantType);\n\n        return Promise.resolve(AstNodePromiseType.SUCCESS);\n    }\n\n    override execute() {\n        this.setValue(ErrorValueObject.create(ErrorType.NAME) as FunctionVariantType);\n    }\n}\n\nexport class FunctionNodeFactory extends BaseAstNodeFactory {\n    constructor(\n        @IFunctionService private readonly _functionService: IFunctionService,\n        @IFormulaCurrentConfigService private readonly _currentConfigService: IFormulaCurrentConfigService,\n        @IFormulaRuntimeService private readonly _runtimeService: IFormulaRuntimeService,\n        @IDefinedNamesService private readonly _definedNamesService: IDefinedNamesService,\n        @Inject(Injector) private readonly _injector: Injector,\n        @Inject(FormulaDataModel) private readonly _formulaDataModel: FormulaDataModel\n    ) {\n        super();\n    }\n\n    override get zIndex() {\n        return NODE_ORDER_MAP.get(NodeType.FUNCTION) || DEFAULT_AST_NODE_FACTORY_Z_INDEX;\n    }\n\n    override create(token: string): BaseAstNode {\n        const functionExecutor = this._functionService.getExecutor(token);\n        if (!functionExecutor) {\n            console.error(`No function ${token}`);\n            return ErrorNode.create(ErrorType.NAME);\n        }\n\n        return new FunctionNode(\n            token,\n            functionExecutor,\n            this._currentConfigService,\n            this._runtimeService,\n            this._definedNamesService,\n            this._formulaDataModel\n        );\n    }\n\n    override checkAndCreateNodeType(param: LexerNode | string) {\n        if (typeof param === 'string') {\n            return;\n        }\n        const token = param.getToken();\n\n        const { tokenTrim, minusPrefixNode, atPrefixNode } = prefixHandler(token.trim(), this._functionService, this._runtimeService);\n\n        if (!Number.isNaN(Number(tokenTrim)) && !this._isParentUnionNode(param)) {\n            return ErrorNode.create(ErrorType.VALUE);\n        }\n\n        const tokenTrimUpper = tokenTrim.toUpperCase();\n\n        if (this._functionService.hasExecutor(tokenTrimUpper)) {\n            const functionNode = this.create(tokenTrimUpper);\n            if (atPrefixNode) {\n                functionNode.setParent(atPrefixNode);\n                // return atPrefixNode;\n            } else if (minusPrefixNode) {\n                functionNode.setParent(minusPrefixNode);\n                // return minusPrefixNode;\n            }\n            return functionNode;\n        }\n    }\n\n    private _isParentUnionNode(param: LexerNode) {\n        return param.getParent()?.getParent()?.getToken() === matchToken.COLON;\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a7cd9a10818ab1e27302e082b810dd8124177985"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/interpreter/interpreter.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/interpreter/interpreter.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":19,"column":25},"end":{"line":125,"column":1}},"15":{"start":{"line":21,"column":4},"end":{"line":21,"column":12}},"16":{"start":{"line":22,"column":4},"end":{"line":22,"column":43}},"17":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"18":{"start":{"line":26,"column":6},"end":{"line":26,"column":71}},"19":{"start":{"line":28,"column":17},"end":{"line":28,"column":30}},"20":{"start":{"line":29,"column":23},"end":{"line":29,"column":42}},"21":{"start":{"line":30,"column":23},"end":{"line":30,"column":42}},"22":{"start":{"line":31,"column":4},"end":{"line":31,"column":59}},"23":{"start":{"line":32,"column":18},"end":{"line":32,"column":33}},"24":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"25":{"start":{"line":34,"column":6},"end":{"line":34,"column":71}},"26":{"start":{"line":36,"column":4},"end":{"line":36,"column":34}},"27":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"28":{"start":{"line":40,"column":6},"end":{"line":40,"column":54}},"29":{"start":{"line":42,"column":17},"end":{"line":42,"column":30}},"30":{"start":{"line":43,"column":23},"end":{"line":43,"column":42}},"31":{"start":{"line":44,"column":23},"end":{"line":44,"column":42}},"32":{"start":{"line":45,"column":4},"end":{"line":45,"column":48}},"33":{"start":{"line":46,"column":18},"end":{"line":46,"column":33}},"34":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"35":{"start":{"line":48,"column":6},"end":{"line":48,"column":54}},"36":{"start":{"line":50,"column":4},"end":{"line":50,"column":17}},"37":{"start":{"line":53,"column":4},"end":{"line":53,"column":19}},"38":{"start":{"line":54,"column":4},"end":{"line":54,"column":27}},"39":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"40":{"start":{"line":58,"column":6},"end":{"line":58,"column":19}},"41":{"start":{"line":60,"column":19},"end":{"line":60,"column":21}},"42":{"start":{"line":61,"column":4},"end":{"line":61,"column":39}},"43":{"start":{"line":62,"column":4},"end":{"line":67,"column":5}},"44":{"start":{"line":62,"column":17},"end":{"line":62,"column":18}},"45":{"start":{"line":62,"column":26},"end":{"line":62,"column":39}},"46":{"start":{"line":63,"column":19},"end":{"line":63,"column":28}},"47":{"start":{"line":64,"column":6},"end":{"line":66,"column":7}},"48":{"start":{"line":65,"column":8},"end":{"line":65,"column":20}},"49":{"start":{"line":68,"column":4},"end":{"line":68,"column":17}},"50":{"start":{"line":71,"column":21},"end":{"line":71,"column":39}},"51":{"start":{"line":72,"column":26},"end":{"line":72,"column":41}},"52":{"start":{"line":73,"column":4},"end":{"line":77,"column":5}},"53":{"start":{"line":73,"column":17},"end":{"line":73,"column":18}},"54":{"start":{"line":74,"column":19},"end":{"line":74,"column":30}},"55":{"start":{"line":75,"column":6},"end":{"line":75,"column":38}},"56":{"start":{"line":76,"column":6},"end":{"line":76,"column":45}},"57":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"58":{"start":{"line":81,"column":6},"end":{"line":81,"column":55}},"59":{"start":{"line":83,"column":21},"end":{"line":83,"column":39}},"60":{"start":{"line":84,"column":26},"end":{"line":84,"column":41}},"61":{"start":{"line":85,"column":4},"end":{"line":93,"column":5}},"62":{"start":{"line":85,"column":17},"end":{"line":85,"column":18}},"63":{"start":{"line":86,"column":19},"end":{"line":86,"column":30}},"64":{"start":{"line":87,"column":20},"end":{"line":87,"column":35}},"65":{"start":{"line":88,"column":6},"end":{"line":91,"column":7}},"66":{"start":{"line":89,"column":8},"end":{"line":89,"column":23}},"67":{"start":{"line":90,"column":8},"end":{"line":90,"column":17}},"68":{"start":{"line":92,"column":6},"end":{"line":92,"column":61}},"69":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"70":{"start":{"line":95,"column":6},"end":{"line":95,"column":48}},"71":{"start":{"line":97,"column":4},"end":{"line":101,"column":5}},"72":{"start":{"line":98,"column":6},"end":{"line":98,"column":32}},"73":{"start":{"line":100,"column":6},"end":{"line":100,"column":21}},"74":{"start":{"line":102,"column":4},"end":{"line":102,"column":55}},"75":{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},"76":{"start":{"line":106,"column":6},"end":{"line":106,"column":38}},"77":{"start":{"line":108,"column":21},"end":{"line":108,"column":39}},"78":{"start":{"line":109,"column":26},"end":{"line":109,"column":41}},"79":{"start":{"line":110,"column":4},"end":{"line":118,"column":5}},"80":{"start":{"line":110,"column":17},"end":{"line":110,"column":18}},"81":{"start":{"line":111,"column":19},"end":{"line":111,"column":30}},"82":{"start":{"line":112,"column":20},"end":{"line":112,"column":35}},"83":{"start":{"line":113,"column":6},"end":{"line":116,"column":7}},"84":{"start":{"line":114,"column":8},"end":{"line":114,"column":23}},"85":{"start":{"line":115,"column":8},"end":{"line":115,"column":17}},"86":{"start":{"line":117,"column":6},"end":{"line":117,"column":50}},"87":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"88":{"start":{"line":120,"column":6},"end":{"line":120,"column":48}},"89":{"start":{"line":122,"column":4},"end":{"line":122,"column":19}},"90":{"start":{"line":123,"column":4},"end":{"line":123,"column":38}},"91":{"start":{"line":126,"column":0},"end":{"line":128,"column":16}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":2},"end":{"line":20,"column":3}},"loc":{"start":{"line":20,"column":31},"end":{"line":23,"column":3}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":2},"end":{"line":24,"column":3}},"loc":{"start":{"line":24,"column":31},"end":{"line":37,"column":3}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":38,"column":2},"end":{"line":38,"column":3}},"loc":{"start":{"line":38,"column":20},"end":{"line":51,"column":3}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":52,"column":2},"end":{"line":52,"column":3}},"loc":{"start":{"line":52,"column":32},"end":{"line":55,"column":3}},"line":52},"7":{"name":"(anonymous_7)","decl":{"start":{"line":56,"column":2},"end":{"line":56,"column":3}},"loc":{"start":{"line":56,"column":23},"end":{"line":69,"column":3}},"line":56},"8":{"name":"(anonymous_8)","decl":{"start":{"line":70,"column":2},"end":{"line":70,"column":3}},"loc":{"start":{"line":70,"column":36},"end":{"line":78,"column":3}},"line":70},"9":{"name":"(anonymous_9)","decl":{"start":{"line":79,"column":2},"end":{"line":79,"column":3}},"loc":{"start":{"line":79,"column":60},"end":{"line":103,"column":3}},"line":79},"10":{"name":"(anonymous_10)","decl":{"start":{"line":104,"column":2},"end":{"line":104,"column":3}},"loc":{"start":{"line":104,"column":49},"end":{"line":124,"column":3}},"line":104}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},{"start":{},"end":{}}],"line":25},"8":{"loc":{"start":{"line":25,"column":8},"end":{"line":25,"column":35}},"type":"binary-expr","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":17}},{"start":{"line":25,"column":21},"end":{"line":25,"column":35}}],"line":25},"9":{"loc":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},{"start":{},"end":{}}],"line":33},"10":{"loc":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},{"start":{},"end":{}}],"line":39},"11":{"loc":{"start":{"line":39,"column":8},"end":{"line":39,"column":35}},"type":"binary-expr","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":17}},{"start":{"line":39,"column":21},"end":{"line":39,"column":35}}],"line":39},"12":{"loc":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},{"start":{},"end":{}}],"line":47},"13":{"loc":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},{"start":{},"end":{}}],"line":57},"14":{"loc":{"start":{"line":64,"column":6},"end":{"line":66,"column":7}},"type":"if","locations":[{"start":{"line":64,"column":6},"end":{"line":66,"column":7}},{"start":{},"end":{}}],"line":64},"15":{"loc":{"start":{"line":79,"column":28},"end":{"line":79,"column":42}},"type":"default-arg","locations":[{"start":{"line":79,"column":41},"end":{"line":79,"column":42}}],"line":79},"16":{"loc":{"start":{"line":79,"column":44},"end":{"line":79,"column":58}},"type":"default-arg","locations":[{"start":{"line":79,"column":57},"end":{"line":79,"column":58}}],"line":79},"17":{"loc":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},{"start":{},"end":{}}],"line":80},"18":{"loc":{"start":{"line":88,"column":6},"end":{"line":91,"column":7}},"type":"if","locations":[{"start":{"line":88,"column":6},"end":{"line":91,"column":7}},{"start":{},"end":{}}],"line":88},"19":{"loc":{"start":{"line":88,"column":10},"end":{"line":88,"column":99}},"type":"binary-expr","locations":[{"start":{"line":88,"column":10},"end":{"line":88,"column":68}},{"start":{"line":88,"column":72},"end":{"line":88,"column":99}}],"line":88},"20":{"loc":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},{"start":{},"end":{}}],"line":94},"21":{"loc":{"start":{"line":97,"column":4},"end":{"line":101,"column":5}},"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":101,"column":5}},{"start":{"line":99,"column":11},"end":{"line":101,"column":5}}],"line":97},"22":{"loc":{"start":{"line":97,"column":8},"end":{"line":97,"column":61}},"type":"binary-expr","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":43}},{"start":{"line":97,"column":47},"end":{"line":97,"column":61}}],"line":97},"23":{"loc":{"start":{"line":104,"column":17},"end":{"line":104,"column":31}},"type":"default-arg","locations":[{"start":{"line":104,"column":30},"end":{"line":104,"column":31}}],"line":104},"24":{"loc":{"start":{"line":104,"column":33},"end":{"line":104,"column":47}},"type":"default-arg","locations":[{"start":{"line":104,"column":46},"end":{"line":104,"column":47}}],"line":104},"25":{"loc":{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},{"start":{},"end":{}}],"line":105},"26":{"loc":{"start":{"line":113,"column":6},"end":{"line":116,"column":7}},"type":"if","locations":[{"start":{"line":113,"column":6},"end":{"line":116,"column":7}},{"start":{},"end":{}}],"line":113},"27":{"loc":{"start":{"line":113,"column":10},"end":{"line":113,"column":99}},"type":"binary-expr","locations":[{"start":{"line":113,"column":10},"end":{"line":113,"column":68}},{"start":{"line":113,"column":72},"end":{"line":113,"column":99}}],"line":113},"28":{"loc":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},{"start":{},"end":{}}],"line":119}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1},"f":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[0,1],"1":[0,1],"2":[1,0],"3":[1,1],"4":[0,1],"5":[0,1],"6":[1,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0],"16":[0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0],"24":[0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/interpreter/interpreter.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\nimport type { BaseAstNode } from '../ast-node/base-ast-node';\nimport type { FunctionNode } from '../ast-node/function-node';\nimport type { LambdaNode } from '../ast-node/lambda-node';\nimport type { ReferenceNode } from '../ast-node/reference-node';\nimport type { FunctionVariantType } from '../reference-object/base-reference-object';\nimport type { IExecuteAstNodeData } from '../utils/ast-node-tool';\nimport type { PreCalculateNodeType } from '../utils/node-type';\nimport { Disposable } from '@univerjs/core';\nimport { AstNodePromiseType } from '../../basics/common';\nimport { ErrorType } from '../../basics/error-type';\nimport { DEFAULT_TOKEN_LAMBDA_FUNCTION_NAME } from '../../basics/token-type';\nimport { IFormulaRuntimeService } from '../../services/runtime.service';\nimport { NodeType } from '../ast-node/node-type';\nimport { ErrorValueObject } from '../value-object/base-value-object';\n\nexport class Interpreter extends Disposable {\n    constructor(@IFormulaRuntimeService private readonly _runtimeService: IFormulaRuntimeService) {\n        super();\n    }\n\n    async executeAsync(nodeData: IExecuteAstNodeData): Promise<FunctionVariantType> {\n        // if (!this._interpreterCalculateProps) {\n        //     return ErrorValueObject.create(ErrorType.ERROR);\n        // }\n\n        if (!nodeData || !nodeData.node) {\n            return Promise.resolve(ErrorValueObject.create(ErrorType.VALUE));\n        }\n\n        const node = nodeData.node;\n        const refOffsetX = nodeData.refOffsetX;\n        const refOffsetY = nodeData.refOffsetY;\n\n        await this._executeAsync(node, refOffsetX, refOffsetY);\n\n        const value = node.getValue();\n\n        if (value == null) {\n            return Promise.resolve(ErrorValueObject.create(ErrorType.VALUE));\n        }\n\n        return Promise.resolve(value);\n    }\n\n    execute(nodeData: IExecuteAstNodeData): FunctionVariantType {\n        // if (!this._interpreterCalculateProps) {\n        //     return ErrorValueObject.create(ErrorType.ERROR);\n        // }\n\n        if (!nodeData || !nodeData.node) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        const node = nodeData.node;\n        const refOffsetX = nodeData.refOffsetX;\n        const refOffsetY = nodeData.refOffsetY;\n\n        this._execute(node, refOffsetX, refOffsetY);\n\n        const value = node.getValue();\n\n        if (value == null) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        return value;\n    }\n\n    executePreCalculateNode(node: PreCalculateNodeType) {\n        node.execute();\n        return node.getValue();\n    }\n\n    checkAsyncNode(node: Nullable<BaseAstNode>) {\n        if (node == null) {\n            return false;\n        }\n        const result: boolean[] = [];\n        this._checkAsyncNode(node, result);\n\n        for (let i = 0, len = result.length; i < len; i++) {\n            const item = result[i];\n            if (item === true) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _checkAsyncNode(node: BaseAstNode, resultList: boolean[]) {\n        const children = node.getChildren();\n        const childrenCount = children.length;\n        for (let i = 0; i < childrenCount; i++) {\n            const item = children[i];\n            resultList.push(item.isAsync());\n            this._checkAsyncNode(item, resultList);\n        }\n    }\n\n    private async _executeAsync(node: BaseAstNode, refOffsetX = 0, refOffsetY = 0): Promise<AstNodePromiseType> {\n        if (this._runtimeService.isStopExecution()) {\n            return Promise.resolve(AstNodePromiseType.ERROR);\n        }\n        const children = node.getChildren();\n        const childrenCount = children.length;\n        for (let i = 0; i < childrenCount; i++) {\n            const item = children[i];\n            const token = item.getToken();\n            /**\n             * If the lambda expression has no parameters, then do not execute further.\n             */\n            if (\n                token.toUpperCase() === DEFAULT_TOKEN_LAMBDA_FUNCTION_NAME &&\n                (item as LambdaNode).isEmptyParamFunction()\n            ) {\n                item.execute();\n                continue;\n            }\n            await this._executeAsync(item, refOffsetX, refOffsetY);\n        }\n\n        if (node.nodeType === NodeType.REFERENCE) {\n            (node as ReferenceNode).setRefOffset(refOffsetX, refOffsetY);\n        }\n\n        if (node.nodeType === NodeType.FUNCTION && (node as FunctionNode).isAsync()) {\n            await node.executeAsync();\n        } else {\n            node.execute();\n        }\n\n        return Promise.resolve(AstNodePromiseType.SUCCESS);\n    }\n\n    private _execute(node: BaseAstNode, refOffsetX = 0, refOffsetY = 0): AstNodePromiseType {\n        if (this._runtimeService.isStopExecution()) {\n            return AstNodePromiseType.ERROR;\n        }\n        const children = node.getChildren();\n        const childrenCount = children.length;\n        for (let i = 0; i < childrenCount; i++) {\n            const item = children[i];\n            const token = item.getToken();\n            /**\n             * If the lambda expression has no parameters, then do not execute further.\n             */\n            if (\n                token.toUpperCase() === DEFAULT_TOKEN_LAMBDA_FUNCTION_NAME &&\n                (item as LambdaNode).isEmptyParamFunction()\n            ) {\n                item.execute();\n                continue;\n            }\n            this._execute(item, refOffsetX, refOffsetY);\n        }\n\n        if (node.nodeType === NodeType.REFERENCE) {\n            (node as ReferenceNode).setRefOffset(refOffsetX, refOffsetY);\n        }\n\n        node.execute();\n\n        return AstNodePromiseType.SUCCESS;\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e4ca25169464ca80a1c5813fe5701e2f2f64b844"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/function-definition.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/function-definition.ts","statementMap":{"0":{"start":{"line":4,"column":2},"end":{"line":6,"column":3}},"1":{"start":{"line":5,"column":4},"end":{"line":5,"column":17}},"2":{"start":{"line":7,"column":2},"end":{"line":7,"column":70}},"3":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"4":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"5":{"start":{"line":13,"column":2},"end":{"line":13,"column":75}}},"fnMap":{"0":{"name":"isFirstChildParameter","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":49},"end":{"line":8,"column":1}},"line":3},"1":{"name":"isChildRunTimeParameter","decl":{"start":{"line":9,"column":16},"end":{"line":9,"column":39}},"loc":{"start":{"line":9,"column":51},"end":{"line":14,"column":1}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":2},"end":{"line":6,"column":3}},"type":"if","locations":[{"start":{"line":4,"column":2},"end":{"line":6,"column":3}},{"start":{},"end":{}}],"line":4},"1":{"loc":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},{"start":{},"end":{}}],"line":10}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"f":{"0":0,"1":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/function-definition.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_TOKEN_TYPE_LAMBDA_OMIT_PARAMETER, DEFAULT_TOKEN_TYPE_LAMBDA_PARAMETER } from '../../basics/token-type';\nimport { LexerNode } from '../analysis/lexer-node';\n\nexport function isFirstChildParameter(lexerNode: LexerNode | string) {\n    if (!(lexerNode instanceof LexerNode)) {\n        return false;\n    }\n    return lexerNode.getToken() === DEFAULT_TOKEN_TYPE_LAMBDA_PARAMETER;\n}\n\nexport function isChildRunTimeParameter(lexerNode: LexerNode | string) {\n    if (!(lexerNode instanceof LexerNode)) {\n        return false;\n    }\n    return lexerNode.getToken() === DEFAULT_TOKEN_TYPE_LAMBDA_OMIT_PARAMETER;\n}\n"],"mappings":"AAgBA,SAAS,0CAA0C,2CAA2C;AAC9F,SAAS,iBAAiB;AAEnB,gBAAS,sBAAsB,WAA+B;AACjE,MAAI,EAAE,qBAAqB,YAAY;AACnC,WAAO;AAAA,EACX;AACA,SAAO,UAAU,SAAS,MAAM;AACpC;AAEO,gBAAS,wBAAwB,WAA+B;AACnE,MAAI,EAAE,qBAAqB,YAAY;AACnC,WAAO;AAAA,EACX;AACA,SAAO,UAAU,SAAS,MAAM;AACpC;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7fa25882abc42bc5ccb26e8d0892b4ee13a82d5f"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/update-lambda-statement.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/update-lambda-statement.ts","statementMap":{"0":{"start":{"line":5,"column":19},"end":{"line":5,"column":54}},"1":{"start":{"line":6,"column":24},"end":{"line":6,"column":39}},"2":{"start":{"line":7,"column":21},"end":{"line":7,"column":32}},"3":{"start":{"line":8,"column":2},"end":{"line":26,"column":3}},"4":{"start":{"line":8,"column":15},"end":{"line":8,"column":16}},"5":{"start":{"line":9,"column":17},"end":{"line":9,"column":28}},"6":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"7":{"start":{"line":11,"column":6},"end":{"line":11,"column":15}},"8":{"start":{"line":13,"column":4},"end":{"line":25,"column":5}},"9":{"start":{"line":14,"column":6},"end":{"line":14,"column":69}},"10":{"start":{"line":16,"column":20},"end":{"line":16,"column":31}},"11":{"start":{"line":17,"column":6},"end":{"line":24,"column":7}},"12":{"start":{"line":18,"column":24},"end":{"line":18,"column":39}},"13":{"start":{"line":19,"column":8},"end":{"line":19,"column":70}},"14":{"start":{"line":20,"column":8},"end":{"line":20,"column":38}},"15":{"start":{"line":21,"column":8},"end":{"line":21,"column":61}},"16":{"start":{"line":22,"column":8},"end":{"line":22,"column":42}},"17":{"start":{"line":23,"column":8},"end":{"line":23,"column":30}}},"fnMap":{"0":{"name":"updateLambdaStatement","decl":{"start":{"line":4,"column":16},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":96},"end":{"line":27,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},{"start":{},"end":{}}],"line":10},"1":{"loc":{"start":{"line":10,"column":8},"end":{"line":10,"column":52}},"type":"binary-expr","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":41}},{"start":{"line":10,"column":45},"end":{"line":10,"column":52}}],"line":10},"2":{"loc":{"start":{"line":13,"column":4},"end":{"line":25,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":25,"column":5}},{"start":{"line":15,"column":11},"end":{"line":25,"column":5}}],"line":13},"3":{"loc":{"start":{"line":17,"column":6},"end":{"line":24,"column":7}},"type":"if","locations":[{"start":{"line":17,"column":6},"end":{"line":24,"column":7}},{"start":{},"end":{}}],"line":17}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/update-lambda-statement.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { LambdaPrivacyVarType } from '../ast-node/base-ast-node';\nimport { DEFAULT_TOKEN_TYPE_LAMBDA_RUNTIME_PARAMETER } from '../../basics/token-type';\nimport { LexerNode } from '../analysis/lexer-node';\nimport { isFirstChildParameter } from './function-definition';\n\nexport function updateLambdaStatement(\n    functionStatementNode: LexerNode,\n    lambdaId: string,\n    currentLambdaPrivacyVar: LambdaPrivacyVarType\n) {\n    const children = functionStatementNode.getChildren();\n    const childrenCount = children.length;\n    const firstChild = children[0];\n    for (let i = 0; i < childrenCount; i++) {\n        const node = children[i];\n        if (isFirstChildParameter(firstChild) && i !== 0) {\n            continue;\n        }\n        if (node instanceof LexerNode) {\n            updateLambdaStatement(node, lambdaId, currentLambdaPrivacyVar);\n        } else {\n            const token = node.trim();\n            if (currentLambdaPrivacyVar.has(token)) {\n                const newNode = new LexerNode();\n                newNode.setToken(DEFAULT_TOKEN_TYPE_LAMBDA_RUNTIME_PARAMETER);\n                newNode.setLambdaId(lambdaId);\n                newNode.setLambdaPrivacyVar(currentLambdaPrivacyVar);\n                newNode.setLambdaParameter(token);\n                children[i] = newNode;\n            }\n        }\n    }\n}\n"],"mappings":"AAiBA,SAAS,mDAAmD;AAC5D,SAAS,iBAAiB;AAC1B,SAAS,6BAA6B;AAE/B,gBAAS,sBACZ,uBACA,UACA,yBACF;AACE,QAAM,WAAW,sBAAsB,YAAY;AACnD,QAAM,gBAAgB,SAAS;AAC/B,QAAM,aAAa,SAAS,CAAC;AAC7B,WAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACpC,UAAM,OAAO,SAAS,CAAC;AACvB,QAAI,sBAAsB,UAAU,KAAK,MAAM,GAAG;AAC9C;AAAA,IACJ;AACA,QAAI,gBAAgB,WAAW;AAC3B,4BAAsB,MAAM,UAAU,uBAAuB;AAAA,IACjE,OAAO;AACH,YAAM,QAAQ,KAAK,KAAK;AACxB,UAAI,wBAAwB,IAAI,KAAK,GAAG;AACpC,cAAM,UAAU,IAAI,UAAU;AAC9B,gBAAQ,SAAS,2CAA2C;AAC5D,gBAAQ,YAAY,QAAQ;AAC5B,gBAAQ,oBAAoB,uBAAuB;AACnD,gBAAQ,mBAAmB,KAAK;AAChC,iBAAS,CAAC,IAAI;AAAA,MAClB;AAAA,IACJ;AAAA,EACJ;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"283db20928c21773be08f42726273c149d5f8ba2"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/ast-node-tool.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/ast-node-tool.ts","statementMap":{"0":{"start":{"line":2,"column":15},"end":{"line":2,"column":19}},"1":{"start":{"line":3,"column":2},"end":{"line":5,"column":3}},"2":{"start":{"line":4,"column":4},"end":{"line":4,"column":32}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":16}},"4":{"start":{"line":9,"column":2},"end":{"line":13,"column":4}}},"fnMap":{"0":{"name":"getAstNodeTopParent","decl":{"start":{"line":1,"column":16},"end":{"line":1,"column":35}},"loc":{"start":{"line":1,"column":42},"end":{"line":7,"column":1}},"line":1},"1":{"name":"generateExecuteAstNodeData","decl":{"start":{"line":8,"column":16},"end":{"line":8,"column":42}},"loc":{"start":{"line":8,"column":81},"end":{"line":14,"column":1}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":49},"end":{"line":8,"column":63}},"type":"default-arg","locations":[{"start":{"line":8,"column":62},"end":{"line":8,"column":63}}],"line":8},"1":{"loc":{"start":{"line":8,"column":65},"end":{"line":8,"column":79}},"type":"default-arg","locations":[{"start":{"line":8,"column":78},"end":{"line":8,"column":79}}],"line":8}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0},"f":{"0":0,"1":0},"b":{"0":[0],"1":[0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/ast-node-tool.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\nimport type { BaseAstNode } from '../ast-node/base-ast-node';\n\nexport interface IExecuteAstNodeData {\n    node: Nullable<BaseAstNode>;\n    refOffsetX: number;\n    refOffsetY: number;\n}\n\nexport function getAstNodeTopParent(node: BaseAstNode) {\n    let parent: Nullable<BaseAstNode> = node;\n    while (parent?.getParent()) {\n        parent = parent.getParent();\n        // console.log(parent);\n    }\n    return parent;\n}\n\nexport function generateExecuteAstNodeData(node: BaseAstNode, refOffsetX: number = 0, refOffsetY: number = 0) {\n    return {\n        node,\n        refOffsetX,\n        refOffsetY,\n    };\n}\n"],"mappings":"AAyBO,gBAAS,oBAAoB,MAAmB;AACnD,MAAI,SAAgC;AACpC,SAAO,QAAQ,UAAU,GAAG;AACxB,aAAS,OAAO,UAAU;AAAA,EAE9B;AACA,SAAO;AACX;AAEO,gBAAS,2BAA2B,MAAmB,aAAqB,GAAG,aAAqB,GAAG;AAC1G,SAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8461ea8da0c7369d12522525b26754c2d2e3ae0e"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/lambda-value-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/lambda-value-object.ts","statementMap":{"0":{"start":{"line":8,"column":2},"end":{"line":10,"column":3}},"1":{"start":{"line":9,"column":4},"end":{"line":9,"column":11}},"2":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":16}},"4":{"start":{"line":14,"column":24},"end":{"line":14,"column":28}},"5":{"start":{"line":15,"column":34},"end":{"line":15,"column":76}},"6":{"start":{"line":16,"column":26},"end":{"line":16,"column":60}},"7":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":11}},"9":{"start":{"line":20,"column":20},"end":{"line":20,"column":64}},"10":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"11":{"start":{"line":22,"column":4},"end":{"line":22,"column":16}},"12":{"start":{"line":24,"column":2},"end":{"line":24,"column":45}},"13":{"start":{"line":28,"column":4},"end":{"line":28,"column":13}},"14":{"start":{"line":29,"column":4},"end":{"line":29,"column":35}},"15":{"start":{"line":30,"column":4},"end":{"line":30,"column":37}},"16":{"start":{"line":31,"column":4},"end":{"line":31,"column":55}},"17":{"start":{"line":32,"column":4},"end":{"line":32,"column":40}},"18":{"start":{"line":35,"column":4},"end":{"line":35,"column":86}},"19":{"start":{"line":37,"column":43},"end":{"line":37,"column":52}},"20":{"start":{"line":39,"column":4},"end":{"line":39,"column":40}},"21":{"start":{"line":40,"column":4},"end":{"line":40,"column":60}},"22":{"start":{"line":41,"column":4},"end":{"line":41,"column":28}},"23":{"start":{"line":42,"column":4},"end":{"line":42,"column":29}},"24":{"start":{"line":43,"column":4},"end":{"line":43,"column":36}},"25":{"start":{"line":46,"column":4},"end":{"line":46,"column":16}},"26":{"start":{"line":49,"column":23},"end":{"line":49,"column":56}},"27":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"28":{"start":{"line":51,"column":6},"end":{"line":51,"column":54}},"29":{"start":{"line":53,"column":4},"end":{"line":53,"column":45}},"30":{"start":{"line":54,"column":4},"end":{"line":54,"column":47}},"31":{"start":{"line":55,"column":4},"end":{"line":55,"column":40}},"32":{"start":{"line":57,"column":4},"end":{"line":66,"column":5}},"33":{"start":{"line":58,"column":6},"end":{"line":58,"column":108}},"34":{"start":{"line":60,"column":16},"end":{"line":60,"column":87}},"35":{"start":{"line":61,"column":6},"end":{"line":65,"column":7}},"36":{"start":{"line":62,"column":8},"end":{"line":62,"column":39}},"37":{"start":{"line":64,"column":8},"end":{"line":64,"column":18}},"38":{"start":{"line":67,"column":4},"end":{"line":67,"column":39}},"39":{"start":{"line":68,"column":4},"end":{"line":68,"column":17}},"40":{"start":{"line":75,"column":29},"end":{"line":75,"column":90}},"41":{"start":{"line":75,"column":55},"end":{"line":75,"column":89}},"42":{"start":{"line":76,"column":4},"end":{"line":76,"column":45}},"43":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"44":{"start":{"line":80,"column":6},"end":{"line":80,"column":13}},"45":{"start":{"line":82,"column":21},"end":{"line":82,"column":39}},"46":{"start":{"line":83,"column":26},"end":{"line":83,"column":41}},"47":{"start":{"line":84,"column":4},"end":{"line":102,"column":5}},"48":{"start":{"line":84,"column":17},"end":{"line":84,"column":18}},"49":{"start":{"line":85,"column":19},"end":{"line":85,"column":30}},"50":{"start":{"line":86,"column":20},"end":{"line":86,"column":35}},"51":{"start":{"line":87,"column":6},"end":{"line":100,"column":7}},"52":{"start":{"line":88,"column":32},"end":{"line":88,"column":57}},"53":{"start":{"line":89,"column":22},"end":{"line":89,"column":70}},"54":{"start":{"line":90,"column":8},"end":{"line":98,"column":9}},"55":{"start":{"line":91,"column":10},"end":{"line":91,"column":31}},"56":{"start":{"line":93,"column":42},"end":{"line":93,"column":75}},"57":{"start":{"line":94,"column":24},"end":{"line":94,"column":94}},"58":{"start":{"line":95,"column":10},"end":{"line":97,"column":11}},"59":{"start":{"line":96,"column":12},"end":{"line":96,"column":44}},"60":{"start":{"line":99,"column":8},"end":{"line":99,"column":17}},"61":{"start":{"line":101,"column":6},"end":{"line":101,"column":37}},"62":{"start":{"line":105,"column":4},"end":{"line":109,"column":5}},"63":{"start":{"line":105,"column":17},"end":{"line":105,"column":18}},"64":{"start":{"line":106,"column":22},"end":{"line":106,"column":33}},"65":{"start":{"line":107,"column":18},"end":{"line":107,"column":47}},"66":{"start":{"line":108,"column":6},"end":{"line":108,"column":52}},"67":{"start":{"line":112,"column":4},"end":{"line":112,"column":38}}},"fnMap":{"0":{"name":"getRootLexerHasValueNode","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":33}},"loc":{"start":{"line":7,"column":40},"end":{"line":25,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":2},"end":{"line":27,"column":3}},"loc":{"start":{"line":27,"column":64},"end":{"line":33,"column":3}},"line":27},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":2},"end":{"line":34,"column":3}},"loc":{"start":{"line":34,"column":63},"end":{"line":36,"column":3}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":38,"column":2},"end":{"line":38,"column":3}},"loc":{"start":{"line":38,"column":12},"end":{"line":44,"column":3}},"line":38},"4":{"name":"(anonymous_4)","decl":{"start":{"line":45,"column":2},"end":{"line":45,"column":3}},"loc":{"start":{"line":45,"column":13},"end":{"line":47,"column":3}},"line":45},"5":{"name":"(anonymous_5)","decl":{"start":{"line":48,"column":2},"end":{"line":48,"column":3}},"loc":{"start":{"line":48,"column":23},"end":{"line":69,"column":3}},"line":48},"6":{"name":"(anonymous_6)","decl":{"start":{"line":74,"column":2},"end":{"line":74,"column":3}},"loc":{"start":{"line":74,"column":29},"end":{"line":77,"column":3}},"line":74},"7":{"name":"(anonymous_7)","decl":{"start":{"line":75,"column":42},"end":{"line":75,"column":43}},"loc":{"start":{"line":75,"column":55},"end":{"line":75,"column":89}},"line":75},"8":{"name":"(anonymous_8)","decl":{"start":{"line":78,"column":2},"end":{"line":78,"column":3}},"loc":{"start":{"line":78,"column":28},"end":{"line":103,"column":3}},"line":78},"9":{"name":"(anonymous_9)","decl":{"start":{"line":104,"column":2},"end":{"line":104,"column":3}},"loc":{"start":{"line":104,"column":38},"end":{"line":110,"column":3}},"line":104},"10":{"name":"(anonymous_10)","decl":{"start":{"line":111,"column":2},"end":{"line":111,"column":3}},"loc":{"start":{"line":111,"column":28},"end":{"line":113,"column":3}},"line":111}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":2},"end":{"line":10,"column":3}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":10,"column":3}},{"start":{},"end":{}}],"line":8},"1":{"loc":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},{"start":{},"end":{}}],"line":11},"2":{"loc":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},{"start":{},"end":{}}],"line":17},"3":{"loc":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},{"start":{},"end":{}}],"line":21},"4":{"loc":{"start":{"line":21,"column":6},"end":{"line":21,"column":42}},"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":23}},{"start":{"line":21,"column":27},"end":{"line":21,"column":42}}],"line":21},"5":{"loc":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},{"start":{},"end":{}}],"line":50},"6":{"loc":{"start":{"line":50,"column":8},"end":{"line":50,"column":81}},"type":"binary-expr","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":38}},{"start":{"line":50,"column":42},"end":{"line":50,"column":60}},{"start":{"line":50,"column":64},"end":{"line":50,"column":81}}],"line":50},"7":{"loc":{"start":{"line":57,"column":4},"end":{"line":66,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":66,"column":5}},{"start":{"line":59,"column":11},"end":{"line":66,"column":5}}],"line":57},"8":{"loc":{"start":{"line":61,"column":6},"end":{"line":65,"column":7}},"type":"if","locations":[{"start":{"line":61,"column":6},"end":{"line":65,"column":7}},{"start":{"line":63,"column":13},"end":{"line":65,"column":7}}],"line":61},"9":{"loc":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},{"start":{},"end":{}}],"line":79},"10":{"loc":{"start":{"line":87,"column":6},"end":{"line":100,"column":7}},"type":"if","locations":[{"start":{"line":87,"column":6},"end":{"line":100,"column":7}},{"start":{},"end":{}}],"line":87},"11":{"loc":{"start":{"line":90,"column":8},"end":{"line":98,"column":9}},"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":98,"column":9}},{"start":{"line":92,"column":15},"end":{"line":98,"column":9}}],"line":90},"12":{"loc":{"start":{"line":95,"column":10},"end":{"line":97,"column":11}},"type":"if","locations":[{"start":{"line":95,"column":10},"end":{"line":97,"column":11}},{"start":{},"end":{}}],"line":95}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/lambda-value-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\n\nimport type { BaseAstNode } from '../ast-node/base-ast-node';\nimport type { LambdaParameterNode } from '../ast-node/lambda-parameter-node';\nimport type { Interpreter } from '../interpreter/interpreter';\nimport type { BaseReferenceObject, FunctionVariantType } from '../reference-object/base-reference-object';\nimport type { PrimitiveValueType } from './primitive-object';\nimport { ErrorType } from '../../basics/error-type';\nimport { DEFAULT_TOKEN_TYPE_LAMBDA_RUNTIME_PARAMETER } from '../../basics/token-type';\nimport { AsyncObject } from '../reference-object/base-reference-object';\nimport { generateExecuteAstNodeData } from '../utils/ast-node-tool';\nimport { ValueObjectFactory } from './array-value-object';\nimport { BaseValueObject, ErrorValueObject } from './base-value-object';\n\nfunction getRootLexerHasValueNode(node: Nullable<BaseAstNode>): Nullable<BaseAstNode> {\n    if (!node) {\n        return;\n    }\n    if (node.getToken() !== DEFAULT_TOKEN_TYPE_LAMBDA_RUNTIME_PARAMETER) {\n        return node;\n    }\n\n    const parameterNode = node as LambdaParameterNode;\n    const currentLambdaPrivacyVar = parameterNode.getCurrentLambdaPrivacyVar();\n    const lambdaParameter = parameterNode.getLambdaParameter();\n\n    if (!currentLambdaPrivacyVar) {\n        return;\n    }\n\n    const chainNode = currentLambdaPrivacyVar.get(lambdaParameter);\n\n    if (chainNode == null && node.getValue()) {\n        return node;\n    }\n\n    return getRootLexerHasValueNode(chainNode);\n}\n\nexport class LambdaValueObjectObject extends BaseValueObject {\n    static create(lambdaNode: BaseAstNode, interpreter: Interpreter, lambdaPrivacyVarKeys: string[]) {\n        return new LambdaValueObjectObject(lambdaNode, interpreter, lambdaPrivacyVarKeys);\n    }\n\n    private _lambdaPrivacyValueMap = new Map<string, FunctionVariantType>();\n\n    constructor(\n        private _lambdaNode: Nullable<BaseAstNode>,\n\n        private _interpreter: Nullable<Interpreter>,\n\n        private _lambdaPrivacyVarKeys: string[]\n    ) {\n        super(0);\n        this._lambdaPrivacyValueMap.clear();\n    }\n\n    override dispose(): void {\n        this._lambdaPrivacyValueMap.clear();\n        this._lambdaPrivacyValueMap = new Map();\n        this._lambdaNode = null;\n        this._interpreter = null;\n        this._lambdaPrivacyVarKeys = [];\n    }\n\n    override isLambda() {\n        return true;\n    }\n\n    execute(...variants: FunctionVariantType[]) {\n        const paramCount = this._lambdaPrivacyVarKeys.length;\n        if (variants.length !== paramCount || !this._interpreter || !this._lambdaNode) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        this._setLambdaPrivacyValueMap(variants);\n\n        this._setLambdaNodeValue(this._lambdaNode);\n\n        this._lambdaNode.setNotEmpty(false);\n\n        let value: AsyncObject | BaseValueObject;\n        if (this._interpreter.checkAsyncNode(this._lambdaNode)) {\n            value = new AsyncObject(this._interpreter.executeAsync(generateExecuteAstNodeData(this._lambdaNode)) as Promise<BaseValueObject>);\n        } else {\n            const o = this._interpreter.execute(generateExecuteAstNodeData(this._lambdaNode));\n            if (o.isReferenceObject()) {\n                value = (o as BaseReferenceObject).toArrayValueObject();\n            } else {\n                value = o as BaseValueObject;\n            }\n        }\n\n        this._lambdaNode.setNotEmpty(true);\n\n        return value;\n    }\n\n    /**\n     * Execute custom lambda function, handle basic types\n     * @param variants\n     */\n    executeCustom(...variants: PrimitiveValueType[]) {\n        // Create base value object from primitive value, then execute\n        const baseValueObjects = variants.map((variant) => ValueObjectFactory.create(variant));\n        return this.execute(...baseValueObjects);\n    }\n\n    private _setLambdaNodeValue(node: Nullable<BaseAstNode>) {\n        if (!node) {\n            return;\n        }\n        const children = node.getChildren();\n        const childrenCount = children.length;\n        for (let i = 0; i < childrenCount; i++) {\n            const item = children[i];\n            const token = item.getToken();\n\n            if (token === DEFAULT_TOKEN_TYPE_LAMBDA_RUNTIME_PARAMETER) {\n                const lambdaParameter = (item as LambdaParameterNode).getLambdaParameter();\n                const value = this._lambdaPrivacyValueMap.get(lambdaParameter);\n                if (value) {\n                    (item as LambdaParameterNode).setValue(value);\n                } else {\n                    const currentLambdaPrivacyVar = (item as LambdaParameterNode).getCurrentLambdaPrivacyVar();\n                    const node = getRootLexerHasValueNode(currentLambdaPrivacyVar.get(lambdaParameter));\n                    if (node != null) {\n                        (item as LambdaParameterNode).setValue(node.getValue());\n                    }\n                }\n                continue;\n            }\n\n            this._setLambdaNodeValue(item);\n        }\n    }\n\n    private _setLambdaPrivacyValueMap(variants: FunctionVariantType[]) {\n        for (let i = 0; i < variants.length; i++) {\n            const variant = variants[i];\n            const key = this._lambdaPrivacyVarKeys[i];\n\n            this._lambdaPrivacyValueMap.set(key, variant);\n        }\n    }\n\n    getLambdaPrivacyVarKeys() {\n        return this._lambdaPrivacyVarKeys;\n    }\n}\n"],"mappings":"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","names":["node"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2bd79ad3a97f2e52630713334f3c753bc1acaf91"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/lambda-node.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/lambda-node.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":29,"column":4},"end":{"line":29,"column":17}},"15":{"start":{"line":30,"column":4},"end":{"line":30,"column":31}},"16":{"start":{"line":31,"column":4},"end":{"line":31,"column":37}},"17":{"start":{"line":32,"column":4},"end":{"line":32,"column":55}},"18":{"start":{"line":34,"column":16},"end":{"line":34,"column":20}},"19":{"start":{"line":36,"column":4},"end":{"line":36,"column":27}},"20":{"start":{"line":39,"column":4},"end":{"line":39,"column":29}},"21":{"start":{"line":42,"column":4},"end":{"line":42,"column":61}},"22":{"start":{"line":45,"column":4},"end":{"line":45,"column":35}},"23":{"start":{"line":48,"column":4},"end":{"line":48,"column":26}},"24":{"start":{"line":51,"column":4},"end":{"line":57,"column":5}},"25":{"start":{"line":52,"column":6},"end":{"line":52,"column":105}},"26":{"start":{"line":54,"column":23},"end":{"line":54,"column":41}},"27":{"start":{"line":55,"column":28},"end":{"line":55,"column":43}},"28":{"start":{"line":56,"column":6},"end":{"line":56,"column":60}},"29":{"start":{"line":70,"column":31},"end":{"line":124,"column":1}},"30":{"start":{"line":72,"column":4},"end":{"line":72,"column":12}},"31":{"start":{"line":73,"column":4},"end":{"line":73,"column":43}},"32":{"start":{"line":74,"column":4},"end":{"line":74,"column":37}},"33":{"start":{"line":77,"column":4},"end":{"line":77,"column":83}},"34":{"start":{"line":80,"column":21},"end":{"line":80,"column":40}},"35":{"start":{"line":81,"column":22},"end":{"line":81,"column":33}},"36":{"start":{"line":82,"column":25},"end":{"line":82,"column":46}},"37":{"start":{"line":83,"column":34},"end":{"line":83,"column":63}},"38":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"39":{"start":{"line":85,"column":6},"end":{"line":85,"column":46}},"40":{"start":{"line":87,"column":4},"end":{"line":94,"column":5}},"41":{"start":{"line":88,"column":32},"end":{"line":88,"column":55}},"42":{"start":{"line":89,"column":6},"end":{"line":91,"column":7}},"43":{"start":{"line":90,"column":8},"end":{"line":90,"column":49}},"44":{"start":{"line":93,"column":6},"end":{"line":93,"column":45}},"45":{"start":{"line":95,"column":21},"end":{"line":95,"column":46}},"46":{"start":{"line":96,"column":52},"end":{"line":96,"column":61}},"47":{"start":{"line":97,"column":4},"end":{"line":106,"column":5}},"48":{"start":{"line":97,"column":17},"end":{"line":97,"column":18}},"49":{"start":{"line":98,"column":24},"end":{"line":98,"column":41}},"50":{"start":{"line":99,"column":6},"end":{"line":105,"column":7}},"51":{"start":{"line":100,"column":24},"end":{"line":100,"column":50}},"52":{"start":{"line":101,"column":8},"end":{"line":101,"column":69}},"53":{"start":{"line":102,"column":8},"end":{"line":102,"column":60}},"54":{"start":{"line":104,"column":8},"end":{"line":104,"column":49}},"55":{"start":{"line":107,"column":4},"end":{"line":107,"column":97}},"56":{"start":{"line":108,"column":4},"end":{"line":108,"column":90}},"57":{"start":{"line":109,"column":4},"end":{"line":109,"column":110}},"58":{"start":{"line":112,"column":4},"end":{"line":114,"column":5}},"59":{"start":{"line":113,"column":6},"end":{"line":113,"column":13}},"60":{"start":{"line":115,"column":18},"end":{"line":115,"column":55}},"61":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"62":{"start":{"line":117,"column":6},"end":{"line":117,"column":13}},"63":{"start":{"line":119,"column":4},"end":{"line":119,"column":30}},"64":{"start":{"line":122,"column":4},"end":{"line":122,"column":84}},"65":{"start":{"line":125,"column":0},"end":{"line":128,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":2},"end":{"line":28,"column":3}},"loc":{"start":{"line":28,"column":69},"end":{"line":33,"column":3}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":2},"end":{"line":35,"column":3}},"loc":{"start":{"line":35,"column":17},"end":{"line":37,"column":3}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":38,"column":2},"end":{"line":38,"column":3}},"loc":{"start":{"line":38,"column":29},"end":{"line":40,"column":3}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":41,"column":2},"end":{"line":41,"column":3}},"loc":{"start":{"line":41,"column":25},"end":{"line":43,"column":3}},"line":41},"7":{"name":"(anonymous_7)","decl":{"start":{"line":44,"column":2},"end":{"line":44,"column":3}},"loc":{"start":{"line":44,"column":24},"end":{"line":46,"column":3}},"line":44},"8":{"name":"(anonymous_8)","decl":{"start":{"line":47,"column":2},"end":{"line":47,"column":3}},"loc":{"start":{"line":47,"column":16},"end":{"line":49,"column":3}},"line":47},"9":{"name":"(anonymous_9)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":12},"end":{"line":58,"column":3}},"line":50},"10":{"name":"(anonymous_10)","decl":{"start":{"line":71,"column":2},"end":{"line":71,"column":3}},"loc":{"start":{"line":71,"column":45},"end":{"line":75,"column":3}},"line":71},"11":{"name":"(anonymous_11)","decl":{"start":{"line":76,"column":2},"end":{"line":76,"column":3}},"loc":{"start":{"line":76,"column":15},"end":{"line":78,"column":3}},"line":76},"12":{"name":"(anonymous_12)","decl":{"start":{"line":79,"column":2},"end":{"line":79,"column":3}},"loc":{"start":{"line":79,"column":16},"end":{"line":110,"column":3}},"line":79},"13":{"name":"(anonymous_13)","decl":{"start":{"line":111,"column":2},"end":{"line":111,"column":3}},"loc":{"start":{"line":111,"column":32},"end":{"line":120,"column":3}},"line":111},"14":{"name":"(anonymous_14)","decl":{"start":{"line":121,"column":2},"end":{"line":121,"column":3}},"loc":{"start":{"line":121,"column":83},"end":{"line":123,"column":3}},"line":121}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":27}},"type":"default-arg","locations":[{"start":{"line":38,"column":22},"end":{"line":38,"column":27}}],"line":38},"8":{"loc":{"start":{"line":42,"column":11},"end":{"line":42,"column":60}},"type":"binary-expr","locations":[{"start":{"line":42,"column":11},"end":{"line":42,"column":40}},{"start":{"line":42,"column":44},"end":{"line":42,"column":60}}],"line":42},"9":{"loc":{"start":{"line":51,"column":4},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":57,"column":5}},{"start":{"line":53,"column":11},"end":{"line":57,"column":5}}],"line":51},"10":{"loc":{"start":{"line":77,"column":11},"end":{"line":77,"column":82}},"type":"binary-expr","locations":[{"start":{"line":77,"column":11},"end":{"line":77,"column":46}},{"start":{"line":77,"column":50},"end":{"line":77,"column":82}}],"line":77},"11":{"loc":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},{"start":{},"end":{}}],"line":84},"12":{"loc":{"start":{"line":84,"column":10},"end":{"line":84,"column":86}},"type":"binary-expr","locations":[{"start":{"line":84,"column":10},"end":{"line":84,"column":40}},{"start":{"line":84,"column":44},"end":{"line":84,"column":86}}],"line":84},"13":{"loc":{"start":{"line":87,"column":4},"end":{"line":94,"column":5}},"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":94,"column":5}},{"start":{"line":92,"column":11},"end":{"line":94,"column":5}}],"line":87},"14":{"loc":{"start":{"line":89,"column":6},"end":{"line":91,"column":7}},"type":"if","locations":[{"start":{"line":89,"column":6},"end":{"line":91,"column":7}},{"start":{},"end":{}}],"line":89},"15":{"loc":{"start":{"line":99,"column":6},"end":{"line":105,"column":7}},"type":"if","locations":[{"start":{"line":99,"column":6},"end":{"line":105,"column":7}},{"start":{"line":103,"column":13},"end":{"line":105,"column":7}}],"line":99},"16":{"loc":{"start":{"line":112,"column":4},"end":{"line":114,"column":5}},"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":114,"column":5}},{"start":{},"end":{}}],"line":112},"17":{"loc":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},{"start":{},"end":{}}],"line":116}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":1,"9":0,"10":1,"11":1,"12":2,"13":2,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1},"f":{"0":1,"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"0":[0,1],"1":[0,1],"2":[2,0],"3":[2,2],"4":[0,2],"5":[0,1],"6":[1,0],"7":[0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/lambda-node.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\nimport type { LambdaPrivacyVarType } from './base-ast-node';\n\nimport { Inject, Tools } from '@univerjs/core';\nimport { ErrorType } from '../../basics/error-type';\nimport {\n    DEFAULT_TOKEN_LAMBDA_FUNCTION_NAME,\n    DEFAULT_TOKEN_TYPE_LAMBDA_OMIT_PARAMETER,\n    DEFAULT_TOKEN_TYPE_LAMBDA_PARAMETER,\n} from '../../basics/token-type';\nimport { IFormulaRuntimeService } from '../../services/runtime.service';\nimport { LexerNode } from '../analysis/lexer-node';\nimport { Interpreter } from '../interpreter/interpreter';\nimport { updateLambdaStatement } from '../utils/update-lambda-statement';\nimport { LambdaValueObjectObject } from '../value-object/lambda-value-object';\nimport { BaseAstNode, ErrorNode } from './base-ast-node';\nimport { BaseAstNodeFactory, DEFAULT_AST_NODE_FACTORY_Z_INDEX } from './base-ast-node-factory';\nimport { NODE_ORDER_MAP, NodeType } from './node-type';\n\nexport class LambdaNode extends BaseAstNode {\n    private _isNotEmpty = true;\n\n    constructor(\n        token: string,\n        private _lambdaId: string,\n        private _interpreter: Interpreter,\n        private _lambdaPrivacyVarKeys: string[]\n    ) {\n        super(token);\n    }\n\n    override get nodeType() {\n        return NodeType.LAMBDA;\n    }\n\n    override setNotEmpty(state = false) {\n        this._isNotEmpty = state;\n    }\n\n    isEmptyParamFunction() {\n        return this.getChildren().length < 2 && this._isNotEmpty;\n    }\n\n    isFunctionParameter() {\n        return this._lambdaId === null;\n    }\n\n    getLambdaId() {\n        return this._lambdaId;\n    }\n\n    override execute() {\n        if (this.isEmptyParamFunction()) {\n            this.setValue(LambdaValueObjectObject.create(this, this._interpreter, this._lambdaPrivacyVarKeys));\n        } else {\n            const children = this.getChildren();\n            const childrenCount = children.length;\n            this.setValue(children[childrenCount - 1].getValue());\n        }\n    }\n\n    // override async executeAsync() {\n    //     if (this.isEmptyParamFunction()) {\n    //         await this.setValue(LambdaValueObjectObject.create(this, this._interpreter, this._lambdaPrivacyVarKeys));\n    //     } else {\n    //         const children = this.getChildren();\n    //         const childrenCount = children.length;\n    //         await this.setValue(children[childrenCount - 1].getValue());\n    //     }\n\n    //     return Promise.resolve(AstNodePromiseType.SUCCESS);\n    // }\n}\n\nexport class LambdaNodeFactory extends BaseAstNodeFactory {\n    constructor(\n        @IFormulaRuntimeService private readonly _runtimeService: IFormulaRuntimeService,\n        @Inject(Interpreter) private readonly _interpreter: Interpreter\n    ) {\n        super();\n    }\n\n    override get zIndex() {\n        return NODE_ORDER_MAP.get(NodeType.LAMBDA) || DEFAULT_AST_NODE_FACTORY_Z_INDEX;\n    }\n\n    override create(param: LexerNode): BaseAstNode {\n        const children = param.getChildren();\n        const lambdaVar = children[0];\n        let parameterArray = children.slice(1, -1);\n        const functionStatementNode = children[children.length - 1];\n        if (!(lambdaVar instanceof LexerNode && functionStatementNode instanceof LexerNode)) {\n            return ErrorNode.create(ErrorType.NAME);\n        }\n\n        if (lambdaVar.getToken() === DEFAULT_TOKEN_TYPE_LAMBDA_PARAMETER) {\n            const lambdaVarChildren = lambdaVar.getChildren();\n\n            if (parameterArray.length !== lambdaVarChildren.length) {\n                return ErrorNode.create(ErrorType.VALUE);\n            }\n        } else {\n            parameterArray = children.slice(0, -1);\n        }\n\n        // const lambdaId = nanoid(8);\n        const lambdaId = Tools.generateRandomId(8);\n\n        // const lambdaRuntime = parserDataLoader.getLambdaRuntime();\n        const currentLambdaPrivacyVar = new Map<string, Nullable<BaseAstNode>>();\n\n        for (let i = 0; i < parameterArray.length; i++) {\n            const parameter = parameterArray[i];\n            if (parameter instanceof LexerNode) {\n                const variant = parameter.getChildren()[0] as string;\n                parameter.setToken(DEFAULT_TOKEN_TYPE_LAMBDA_OMIT_PARAMETER);\n                currentLambdaPrivacyVar.set(variant.trim(), undefined);\n            } else {\n                return ErrorNode.create(ErrorType.VALUE);\n            }\n        }\n\n        this._runtimeService.registerFunctionDefinitionPrivacyVar(lambdaId, currentLambdaPrivacyVar);\n\n        this._updateLambdaStatement(functionStatementNode, lambdaId, currentLambdaPrivacyVar);\n\n        return new LambdaNode(param.getToken(), lambdaId, this._interpreter, [...currentLambdaPrivacyVar.keys()]);\n    }\n\n    override checkAndCreateNodeType(param: LexerNode | string) {\n        if (!(param instanceof LexerNode)) {\n            return;\n        }\n\n        const token = param.getToken().trim().toUpperCase();\n        if (token !== DEFAULT_TOKEN_LAMBDA_FUNCTION_NAME) {\n            return;\n        }\n\n        return this.create(param);\n    }\n\n    private _updateLambdaStatement(\n        functionStatementNode: LexerNode,\n        lambdaId: string,\n        currentLambdaPrivacyVar: LambdaPrivacyVarType\n    ) {\n        updateLambdaStatement(functionStatementNode, lambdaId, currentLambdaPrivacyVar);\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5afd3144a7153076743672790378399080d4d955"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/lambda-parameter-node.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/lambda-parameter-node.ts","statementMap":{"0":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"1":{"start":{"line":10,"column":4},"end":{"line":10,"column":11}},"2":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":16}},"4":{"start":{"line":15,"column":24},"end":{"line":15,"column":28}},"5":{"start":{"line":16,"column":34},"end":{"line":16,"column":76}},"6":{"start":{"line":17,"column":26},"end":{"line":17,"column":60}},"7":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":11}},"9":{"start":{"line":21,"column":2},"end":{"line":21,"column":72}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":17}},"11":{"start":{"line":26,"column":4},"end":{"line":26,"column":45}},"12":{"start":{"line":27,"column":4},"end":{"line":27,"column":61}},"13":{"start":{"line":30,"column":4},"end":{"line":30,"column":33}},"14":{"start":{"line":33,"column":4},"end":{"line":33,"column":41}},"15":{"start":{"line":36,"column":4},"end":{"line":36,"column":37}},"16":{"start":{"line":39,"column":17},"end":{"line":39,"column":91}},"17":{"start":{"line":40,"column":4},"end":{"line":47,"column":5}},"18":{"start":{"line":41,"column":20},"end":{"line":41,"column":35}},"19":{"start":{"line":42,"column":6},"end":{"line":44,"column":7}},"20":{"start":{"line":43,"column":8},"end":{"line":43,"column":63}},"21":{"start":{"line":46,"column":6},"end":{"line":46,"column":37}},"22":{"start":{"line":52,"column":4},"end":{"line":52,"column":93}},"23":{"start":{"line":55,"column":36},"end":{"line":55,"column":75}},"24":{"start":{"line":56,"column":28},"end":{"line":56,"column":54}},"25":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"26":{"start":{"line":58,"column":6},"end":{"line":58,"column":43}},"27":{"start":{"line":60,"column":4},"end":{"line":60,"column":95}},"28":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"29":{"start":{"line":64,"column":6},"end":{"line":64,"column":13}},"30":{"start":{"line":66,"column":18},"end":{"line":66,"column":41}},"31":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"32":{"start":{"line":68,"column":6},"end":{"line":68,"column":13}},"33":{"start":{"line":70,"column":4},"end":{"line":70,"column":30}}},"fnMap":{"0":{"name":"getRootLexerNode","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":25}},"loc":{"start":{"line":8,"column":32},"end":{"line":22,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":2},"end":{"line":24,"column":3}},"loc":{"start":{"line":24,"column":65},"end":{"line":28,"column":3}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":29,"column":2},"end":{"line":29,"column":3}},"loc":{"start":{"line":29,"column":23},"end":{"line":31,"column":3}},"line":29},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":2},"end":{"line":32,"column":3}},"loc":{"start":{"line":32,"column":31},"end":{"line":34,"column":3}},"line":32},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":2},"end":{"line":35,"column":3}},"loc":{"start":{"line":35,"column":17},"end":{"line":37,"column":3}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":38,"column":2},"end":{"line":38,"column":3}},"loc":{"start":{"line":38,"column":12},"end":{"line":48,"column":3}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":51,"column":2},"end":{"line":51,"column":3}},"loc":{"start":{"line":51,"column":15},"end":{"line":53,"column":3}},"line":51},"7":{"name":"(anonymous_7)","decl":{"start":{"line":54,"column":2},"end":{"line":54,"column":3}},"loc":{"start":{"line":54,"column":16},"end":{"line":61,"column":3}},"line":54},"8":{"name":"(anonymous_8)","decl":{"start":{"line":62,"column":2},"end":{"line":62,"column":3}},"loc":{"start":{"line":62,"column":32},"end":{"line":71,"column":3}},"line":62}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},{"start":{},"end":{}}],"line":9},"1":{"loc":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},{"start":{},"end":{}}],"line":12},"2":{"loc":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},{"start":{},"end":{}}],"line":18},"3":{"loc":{"start":{"line":40,"column":4},"end":{"line":47,"column":5}},"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":47,"column":5}},{"start":{"line":45,"column":11},"end":{"line":47,"column":5}}],"line":40},"4":{"loc":{"start":{"line":42,"column":6},"end":{"line":44,"column":7}},"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":44,"column":7}},{"start":{},"end":{}}],"line":42},"5":{"loc":{"start":{"line":42,"column":10},"end":{"line":42,"column":42}},"type":"binary-expr","locations":[{"start":{"line":42,"column":10},"end":{"line":42,"column":23}},{"start":{"line":42,"column":27},"end":{"line":42,"column":42}}],"line":42},"6":{"loc":{"start":{"line":52,"column":11},"end":{"line":52,"column":92}},"type":"binary-expr","locations":[{"start":{"line":52,"column":11},"end":{"line":52,"column":56}},{"start":{"line":52,"column":60},"end":{"line":52,"column":92}}],"line":52},"7":{"loc":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},{"start":{},"end":{}}],"line":57},"8":{"loc":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},{"start":{},"end":{}}],"line":63},"9":{"loc":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},{"start":{},"end":{}}],"line":67}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/lambda-parameter-node.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\n\nimport type { LambdaPrivacyVarType } from './base-ast-node';\nimport { ErrorType } from '../../basics/error-type';\nimport { DEFAULT_TOKEN_TYPE_LAMBDA_RUNTIME_PARAMETER } from '../../basics/token-type';\nimport { LexerNode } from '../analysis/lexer-node';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { BaseAstNode, ErrorNode } from './base-ast-node';\nimport { BaseAstNodeFactory, DEFAULT_AST_NODE_FACTORY_Z_INDEX } from './base-ast-node-factory';\nimport { NODE_ORDER_MAP, NodeType } from './node-type';\n\nfunction getRootLexerNode(node: Nullable<BaseAstNode>): Nullable<BaseAstNode> {\n    if (!node) {\n        return;\n    }\n    if (node.getToken() !== DEFAULT_TOKEN_TYPE_LAMBDA_RUNTIME_PARAMETER) {\n        return node;\n    }\n\n    const parameterNode = node as LambdaParameterNode;\n    const currentLambdaPrivacyVar = parameterNode.getCurrentLambdaPrivacyVar();\n    const lambdaParameter = parameterNode.getLambdaParameter();\n\n    if (!currentLambdaPrivacyVar) {\n        return;\n    }\n\n    return getRootLexerNode(currentLambdaPrivacyVar.get(lambdaParameter));\n}\n\nexport class LambdaParameterNode extends BaseAstNode {\n    constructor(\n        token: string,\n        private _lambdaParameter: string,\n        private _currentLambdaPrivacyVar: LambdaPrivacyVarType\n    ) {\n        super(token);\n    }\n\n    getLambdaParameter() {\n        return this._lambdaParameter;\n    }\n\n    getCurrentLambdaPrivacyVar() {\n        return this._currentLambdaPrivacyVar;\n    }\n\n    override get nodeType() {\n        return NodeType.LAMBDA_PARAMETER;\n    }\n\n    override execute() {\n        /**\n         * In the case of =lambda(x,y,lambda(a,b,a*b)(x,y))(1,2)\n         */\n        const node = getRootLexerNode(this._currentLambdaPrivacyVar.get(this._lambdaParameter));\n        if (!node) {\n            const value = this.getValue();\n            if (value == null || value.isError()) {\n                this.setValue(ErrorValueObject.create(ErrorType.NAME));\n            }\n        } else {\n            this.setValue(node.getValue());\n        }\n    }\n}\n\nexport class LambdaParameterNodeFactory extends BaseAstNodeFactory {\n    override get zIndex() {\n        return NODE_ORDER_MAP.get(NodeType.LAMBDA_PARAMETER) || DEFAULT_AST_NODE_FACTORY_Z_INDEX;\n    }\n\n    override create(param: LexerNode): BaseAstNode {\n        // const lambdaId = param.getLambdaId();\n        const currentLambdaPrivacyVar = param.getFunctionDefinitionPrivacyVar();\n        const lambdaParameter = param.getLambdaParameter();\n\n        if (!currentLambdaPrivacyVar) {\n            return new ErrorNode(ErrorType.NAME);\n        }\n\n        return new LambdaParameterNode(param.getToken(), lambdaParameter, currentLambdaPrivacyVar);\n    }\n\n    override checkAndCreateNodeType(param: LexerNode | string) {\n        if (!(param instanceof LexerNode)) {\n            return;\n        }\n\n        const token = param.getToken().trim();\n        if (token !== DEFAULT_TOKEN_TYPE_LAMBDA_RUNTIME_PARAMETER) {\n            return;\n        }\n\n        return this.create(param);\n    }\n}\n"],"mappings":"AAmBA,SAAS,iBAAiB;AAC1B,SAAS,mDAAmD;AAC5D,SAAS,iBAAiB;AAC1B,SAAS,wBAAwB;AACjC,SAAS,aAAa,iBAAiB;AACvC,SAAS,oBAAoB,wCAAwC;AACrE,SAAS,gBAAgB,gBAAgB;AAEzC,SAAS,iBAAiB,MAAoD;AAC1E,MAAI,CAAC,MAAM;AACP;AAAA,EACJ;AACA,MAAI,KAAK,SAAS,MAAM,6CAA6C;AACjE,WAAO;AAAA,EACX;AAEA,QAAM,gBAAgB;AACtB,QAAM,0BAA0B,cAAc,2BAA2B;AACzE,QAAM,kBAAkB,cAAc,mBAAmB;AAEzD,MAAI,CAAC,yBAAyB;AAC1B;AAAA,EACJ;AAEA,SAAO,iBAAiB,wBAAwB,IAAI,eAAe,CAAC;AACxE;AAEO,aAAM,4BAA4B,YAAY;AAAA,EACjD,YACI,OACQ,kBACA,0BACV;AACE,UAAM,KAAK;AAHH;AACA;AAAA,EAGZ;AAAA,EAEA,qBAAqB;AACjB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,6BAA6B;AACzB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAa,WAAW;AACpB,WAAO,SAAS;AAAA,EACpB;AAAA,EAES,UAAU;AAIf,UAAM,OAAO,iBAAiB,KAAK,yBAAyB,IAAI,KAAK,gBAAgB,CAAC;AACtF,QAAI,CAAC,MAAM;AACP,YAAM,QAAQ,KAAK,SAAS;AAC5B,UAAI,SAAS,QAAQ,MAAM,QAAQ,GAAG;AAClC,aAAK,SAAS,iBAAiB,OAAO,UAAU,IAAI,CAAC;AAAA,MACzD;AAAA,IACJ,OAAO;AACH,WAAK,SAAS,KAAK,SAAS,CAAC;AAAA,IACjC;AAAA,EACJ;AACJ;AAEO,aAAM,mCAAmC,mBAAmB;AAAA,EAC/D,IAAa,SAAS;AAClB,WAAO,eAAe,IAAI,SAAS,gBAAgB,KAAK;AAAA,EAC5D;AAAA,EAES,OAAO,OAA+B;AAE3C,UAAM,0BAA0B,MAAM,gCAAgC;AACtE,UAAM,kBAAkB,MAAM,mBAAmB;AAEjD,QAAI,CAAC,yBAAyB;AAC1B,aAAO,IAAI,UAAU,UAAU,IAAI;AAAA,IACvC;AAEA,WAAO,IAAI,oBAAoB,MAAM,SAAS,GAAG,iBAAiB,uBAAuB;AAAA,EAC7F;AAAA,EAES,uBAAuB,OAA2B;AACvD,QAAI,EAAE,iBAAiB,YAAY;AAC/B;AAAA,IACJ;AAEA,UAAM,QAAQ,MAAM,SAAS,EAAE,KAAK;AACpC,QAAI,UAAU,6CAA6C;AACvD;AAAA,IACJ;AAEA,WAAO,KAAK,OAAO,KAAK;AAAA,EAC5B;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2dde24ecc31806931e422684525543bf409172a8"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/null-node.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/null-node.ts","statementMap":{"0":{"start":{"line":6,"column":4},"end":{"line":6,"column":27}},"1":{"start":{"line":7,"column":4},"end":{"line":7,"column":43}},"2":{"start":{"line":10,"column":4},"end":{"line":10,"column":25}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":2},"end":{"line":5,"column":3}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":3}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":2},"end":{"line":9,"column":3}},"loc":{"start":{"line":9,"column":17},"end":{"line":11,"column":3}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":2},"end":{"line":12,"column":3}},"loc":{"start":{"line":12,"column":12},"end":{"line":14,"column":3}},"line":12}},"branchMap":{},"s":{"0":0,"1":0,"2":0,"3":0},"f":{"0":0,"1":0,"2":0},"b":{},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/null-node.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NullValueObject } from '../value-object/primitive-object';\nimport { BaseAstNode } from './base-ast-node';\nimport { NodeType } from './node-type';\n\nexport class NullNode extends BaseAstNode {\n    constructor(private _operatorString: string) {\n        super(_operatorString);\n    }\n\n    override get nodeType() {\n        return NodeType.NULL;\n    }\n\n    override execute() {\n        this.setValue(NullValueObject.create());\n    }\n}\n"],"mappings":"AAgBA,SAAS,uBAAuB;AAChC,SAAS,mBAAmB;AAC5B,SAAS,gBAAgB;AAElB,aAAM,iBAAiB,YAAY;AAAA,EACtC,YAAoB,iBAAyB;AACzC,UAAM,eAAe;AADL;AAAA,EAEpB;AAAA,EAEA,IAAa,WAAW;AACpB,WAAO,SAAS;AAAA,EACpB;AAAA,EAES,UAAU;AACf,SAAK,SAAS,gBAAgB,OAAO,CAAC;AAAA,EAC1C;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5426b6b71d9f47804f5a5950c2b3b2b4a1e1328a"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/math/function-names.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/math/function-names.ts","statementMap":{"0":{"start":{"line":1,"column":49},"end":{"line":86,"column":29}},"1":{"start":{"line":2,"column":2},"end":{"line":2,"column":38}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":40}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":42}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":40}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":42}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":50}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":44}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":40}},"9":{"start":{"line":10,"column":2},"end":{"line":10,"column":42}},"10":{"start":{"line":11,"column":2},"end":{"line":11,"column":40}},"11":{"start":{"line":12,"column":2},"end":{"line":12,"column":42}},"12":{"start":{"line":13,"column":2},"end":{"line":13,"column":42}},"13":{"start":{"line":14,"column":2},"end":{"line":14,"column":40}},"14":{"start":{"line":15,"column":2},"end":{"line":15,"column":46}},"15":{"start":{"line":16,"column":2},"end":{"line":16,"column":56}},"16":{"start":{"line":17,"column":2},"end":{"line":17,"column":62}},"17":{"start":{"line":18,"column":2},"end":{"line":18,"column":44}},"18":{"start":{"line":19,"column":2},"end":{"line":19,"column":46}},"19":{"start":{"line":20,"column":2},"end":{"line":20,"column":38}},"20":{"start":{"line":21,"column":2},"end":{"line":21,"column":40}},"21":{"start":{"line":22,"column":2},"end":{"line":22,"column":38}},"22":{"start":{"line":23,"column":2},"end":{"line":23,"column":40}},"23":{"start":{"line":24,"column":2},"end":{"line":24,"column":38}},"24":{"start":{"line":25,"column":2},"end":{"line":25,"column":40}},"25":{"start":{"line":26,"column":2},"end":{"line":26,"column":46}},"26":{"start":{"line":27,"column":2},"end":{"line":27,"column":46}},"27":{"start":{"line":28,"column":2},"end":{"line":28,"column":40}},"28":{"start":{"line":29,"column":2},"end":{"line":29,"column":38}},"29":{"start":{"line":30,"column":2},"end":{"line":30,"column":40}},"30":{"start":{"line":31,"column":2},"end":{"line":31,"column":52}},"31":{"start":{"line":32,"column":2},"end":{"line":32,"column":42}},"32":{"start":{"line":33,"column":2},"end":{"line":33,"column":52}},"33":{"start":{"line":34,"column":2},"end":{"line":34,"column":58}},"34":{"start":{"line":35,"column":2},"end":{"line":35,"column":38}},"35":{"start":{"line":36,"column":2},"end":{"line":36,"column":38}},"36":{"start":{"line":37,"column":2},"end":{"line":37,"column":54}},"37":{"start":{"line":38,"column":2},"end":{"line":38,"column":38}},"38":{"start":{"line":39,"column":2},"end":{"line":39,"column":38}},"39":{"start":{"line":40,"column":2},"end":{"line":40,"column":36}},"40":{"start":{"line":41,"column":2},"end":{"line":41,"column":38}},"41":{"start":{"line":42,"column":2},"end":{"line":42,"column":42}},"42":{"start":{"line":43,"column":2},"end":{"line":43,"column":46}},"43":{"start":{"line":44,"column":2},"end":{"line":44,"column":48}},"44":{"start":{"line":45,"column":2},"end":{"line":45,"column":42}},"45":{"start":{"line":46,"column":2},"end":{"line":46,"column":38}},"46":{"start":{"line":47,"column":2},"end":{"line":47,"column":44}},"47":{"start":{"line":48,"column":2},"end":{"line":48,"column":54}},"48":{"start":{"line":49,"column":2},"end":{"line":49,"column":42}},"49":{"start":{"line":50,"column":2},"end":{"line":50,"column":38}},"50":{"start":{"line":51,"column":2},"end":{"line":51,"column":36}},"51":{"start":{"line":52,"column":2},"end":{"line":52,"column":42}},"52":{"start":{"line":53,"column":2},"end":{"line":53,"column":46}},"53":{"start":{"line":54,"column":2},"end":{"line":54,"column":48}},"54":{"start":{"line":55,"column":2},"end":{"line":55,"column":46}},"55":{"start":{"line":56,"column":2},"end":{"line":56,"column":40}},"56":{"start":{"line":57,"column":2},"end":{"line":57,"column":50}},"57":{"start":{"line":58,"column":2},"end":{"line":58,"column":54}},"58":{"start":{"line":59,"column":2},"end":{"line":59,"column":42}},"59":{"start":{"line":60,"column":2},"end":{"line":60,"column":42}},"60":{"start":{"line":61,"column":2},"end":{"line":61,"column":50}},"61":{"start":{"line":62,"column":2},"end":{"line":62,"column":50}},"62":{"start":{"line":63,"column":2},"end":{"line":63,"column":46}},"63":{"start":{"line":64,"column":2},"end":{"line":64,"column":38}},"64":{"start":{"line":65,"column":2},"end":{"line":65,"column":40}},"65":{"start":{"line":66,"column":2},"end":{"line":66,"column":50}},"66":{"start":{"line":67,"column":2},"end":{"line":67,"column":48}},"67":{"start":{"line":68,"column":2},"end":{"line":68,"column":40}},"68":{"start":{"line":69,"column":2},"end":{"line":69,"column":38}},"69":{"start":{"line":70,"column":2},"end":{"line":70,"column":40}},"70":{"start":{"line":71,"column":2},"end":{"line":71,"column":40}},"71":{"start":{"line":72,"column":2},"end":{"line":72,"column":44}},"72":{"start":{"line":73,"column":2},"end":{"line":73,"column":48}},"73":{"start":{"line":74,"column":2},"end":{"line":74,"column":38}},"74":{"start":{"line":75,"column":2},"end":{"line":75,"column":42}},"75":{"start":{"line":76,"column":2},"end":{"line":76,"column":44}},"76":{"start":{"line":77,"column":2},"end":{"line":77,"column":52}},"77":{"start":{"line":78,"column":2},"end":{"line":78,"column":42}},"78":{"start":{"line":79,"column":2},"end":{"line":79,"column":48}},"79":{"start":{"line":80,"column":2},"end":{"line":80,"column":48}},"80":{"start":{"line":81,"column":2},"end":{"line":81,"column":46}},"81":{"start":{"line":82,"column":2},"end":{"line":82,"column":38}},"82":{"start":{"line":83,"column":2},"end":{"line":83,"column":40}},"83":{"start":{"line":84,"column":2},"end":{"line":84,"column":42}},"84":{"start":{"line":85,"column":2},"end":{"line":85,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":50},"end":{"line":1,"column":51}},"loc":{"start":{"line":1,"column":76},"end":{"line":86,"column":1}},"line":1}},"branchMap":{"0":{"loc":{"start":{"line":86,"column":3},"end":{"line":86,"column":28}},"type":"binary-expr","locations":[{"start":{"line":86,"column":3},"end":{"line":86,"column":22}},{"start":{"line":86,"column":26},"end":{"line":86,"column":28}}],"line":86}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/math/function-names.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum FUNCTION_NAMES_MATH {\n    ABS = 'ABS',\n    ACOS = 'ACOS',\n    ACOSH = 'ACOSH',\n    ACOT = 'ACOT',\n    ACOTH = 'ACOTH',\n    AGGREGATE = 'AGGREGATE',\n    ARABIC = 'ARABIC',\n    ASIN = 'ASIN',\n    ASINH = 'ASINH',\n    ATAN = 'ATAN',\n    ATAN2 = 'ATAN2',\n    ATANH = 'ATANH',\n    BASE = 'BASE',\n    CEILING = 'CEILING',\n    CEILING_MATH = 'CEILING.MATH',\n    CEILING_PRECISE = 'CEILING.PRECISE',\n    COMBIN = 'COMBIN',\n    COMBINA = 'COMBINA',\n    COS = 'COS',\n    COSH = 'COSH',\n    COT = 'COT',\n    COTH = 'COTH',\n    CSC = 'CSC',\n    CSCH = 'CSCH',\n    DECIMAL = 'DECIMAL',\n    DEGREES = 'DEGREES',\n    EVEN = 'EVEN',\n    EXP = 'EXP',\n    FACT = 'FACT',\n    FACTDOUBLE = 'FACTDOUBLE',\n    FLOOR = 'FLOOR',\n    FLOOR_MATH = 'FLOOR.MATH',\n    FLOOR_PRECISE = 'FLOOR.PRECISE',\n    GCD = 'GCD',\n    INT = 'INT',\n    ISO_CEILING = 'ISO.CEILING',\n    LCM = 'LCM',\n    LET = 'LET',\n    LN = 'LN',\n    LOG = 'LOG',\n    LOG10 = 'LOG10',\n    MDETERM = 'MDETERM',\n    MINVERSE = 'MINVERSE',\n    MMULT = 'MMULT',\n    MOD = 'MOD',\n    MROUND = 'MROUND',\n    MULTINOMIAL = 'MULTINOMIAL',\n    MUNIT = 'MUNIT',\n    ODD = 'ODD',\n    PI = 'PI',\n    POWER = 'POWER',\n    PRODUCT = 'PRODUCT',\n    QUOTIENT = 'QUOTIENT',\n    RADIANS = 'RADIANS',\n    RAND = 'RAND',\n    RANDARRAY = 'RANDARRAY',\n    RANDBETWEEN = 'RANDBETWEEN',\n    ROMAN = 'ROMAN',\n    ROUND = 'ROUND',\n    ROUNDBANK = 'ROUNDBANK',\n    ROUNDDOWN = 'ROUNDDOWN',\n    ROUNDUP = 'ROUNDUP',\n    SEC = 'SEC',\n    SECH = 'SECH',\n    SERIESSUM = 'SERIESSUM',\n    SEQUENCE = 'SEQUENCE',\n    SIGN = 'SIGN',\n    SIN = 'SIN',\n    SINH = 'SINH',\n    SQRT = 'SQRT',\n    SQRTPI = 'SQRTPI',\n    SUBTOTAL = 'SUBTOTAL',\n    SUM = 'SUM',\n    SUMIF = 'SUMIF',\n    SUMIFS = 'SUMIFS',\n    SUMPRODUCT = 'SUMPRODUCT',\n    SUMSQ = 'SUMSQ',\n    SUMX2MY2 = 'SUMX2MY2',\n    SUMX2PY2 = 'SUMX2PY2',\n    SUMXMY2 = 'SUMXMY2',\n    TAN = 'TAN',\n    TANH = 'TANH',\n    TRUNC = 'TRUNC',\n}\n"],"mappings":"AAgBO,WAAK,sBAAL,kBAAKA,yBAAL;AACH,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,eAAY;AACZ,EAAAA,qBAAA,YAAS;AACT,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,kBAAe;AACf,EAAAA,qBAAA,qBAAkB;AAClB,EAAAA,qBAAA,YAAS;AACT,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,gBAAa;AACb,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,gBAAa;AACb,EAAAA,qBAAA,mBAAgB;AAChB,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,iBAAc;AACd,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,QAAK;AACL,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,cAAW;AACX,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,YAAS;AACT,EAAAA,qBAAA,iBAAc;AACd,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,QAAK;AACL,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,cAAW;AACX,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,eAAY;AACZ,EAAAA,qBAAA,iBAAc;AACd,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,eAAY;AACZ,EAAAA,qBAAA,eAAY;AACZ,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,eAAY;AACZ,EAAAA,qBAAA,cAAW;AACX,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,YAAS;AACT,EAAAA,qBAAA,cAAW;AACX,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,YAAS;AACT,EAAAA,qBAAA,gBAAa;AACb,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,cAAW;AACX,EAAAA,qBAAA,cAAW;AACX,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,WAAQ;AAnFA,SAAAA;AAAA,GAAA;","names":["FUNCTION_NAMES_MATH"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f612d2b262ac71f23ea1ebb5010733745d1a02b7"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/text/function-names.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/text/function-names.ts","statementMap":{"0":{"start":{"line":1,"column":49},"end":{"line":54,"column":29}},"1":{"start":{"line":2,"column":2},"end":{"line":2,"column":38}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":54}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":48}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":40}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":42}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":40}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":44}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":54}},"9":{"start":{"line":10,"column":2},"end":{"line":10,"column":40}},"10":{"start":{"line":11,"column":2},"end":{"line":11,"column":44}},"11":{"start":{"line":12,"column":2},"end":{"line":12,"column":42}},"12":{"start":{"line":13,"column":2},"end":{"line":13,"column":40}},"13":{"start":{"line":14,"column":2},"end":{"line":14,"column":42}},"14":{"start":{"line":15,"column":2},"end":{"line":15,"column":42}},"15":{"start":{"line":16,"column":2},"end":{"line":16,"column":40}},"16":{"start":{"line":17,"column":2},"end":{"line":17,"column":42}},"17":{"start":{"line":18,"column":2},"end":{"line":18,"column":38}},"18":{"start":{"line":19,"column":2},"end":{"line":19,"column":40}},"19":{"start":{"line":20,"column":2},"end":{"line":20,"column":42}},"20":{"start":{"line":21,"column":2},"end":{"line":21,"column":38}},"21":{"start":{"line":22,"column":2},"end":{"line":22,"column":40}},"22":{"start":{"line":23,"column":2},"end":{"line":23,"column":56}},"23":{"start":{"line":24,"column":2},"end":{"line":24,"column":54}},"24":{"start":{"line":25,"column":2},"end":{"line":25,"column":48}},"25":{"start":{"line":26,"column":2},"end":{"line":26,"column":44}},"26":{"start":{"line":27,"column":2},"end":{"line":27,"column":56}},"27":{"start":{"line":28,"column":2},"end":{"line":28,"column":52}},"28":{"start":{"line":29,"column":2},"end":{"line":29,"column":56}},"29":{"start":{"line":30,"column":2},"end":{"line":30,"column":46}},"30":{"start":{"line":31,"column":2},"end":{"line":31,"column":48}},"31":{"start":{"line":32,"column":2},"end":{"line":32,"column":40}},"32":{"start":{"line":33,"column":2},"end":{"line":33,"column":42}},"33":{"start":{"line":34,"column":2},"end":{"line":34,"column":44}},"34":{"start":{"line":35,"column":2},"end":{"line":35,"column":44}},"35":{"start":{"line":36,"column":2},"end":{"line":36,"column":46}},"36":{"start":{"line":37,"column":2},"end":{"line":37,"column":52}},"37":{"start":{"line":38,"column":2},"end":{"line":38,"column":34}},"38":{"start":{"line":39,"column":2},"end":{"line":39,"column":40}},"39":{"start":{"line":40,"column":2},"end":{"line":40,"column":50}},"40":{"start":{"line":41,"column":2},"end":{"line":41,"column":52}},"41":{"start":{"line":42,"column":2},"end":{"line":42,"column":48}},"42":{"start":{"line":43,"column":2},"end":{"line":43,"column":50}},"43":{"start":{"line":44,"column":2},"end":{"line":44,"column":40}},"44":{"start":{"line":45,"column":2},"end":{"line":45,"column":46}},"45":{"start":{"line":46,"column":2},"end":{"line":46,"column":46}},"46":{"start":{"line":47,"column":2},"end":{"line":47,"column":42}},"47":{"start":{"line":48,"column":2},"end":{"line":48,"column":42}},"48":{"start":{"line":49,"column":2},"end":{"line":49,"column":54}},"49":{"start":{"line":50,"column":2},"end":{"line":50,"column":40}},"50":{"start":{"line":51,"column":2},"end":{"line":51,"column":54}},"51":{"start":{"line":52,"column":2},"end":{"line":52,"column":54}},"52":{"start":{"line":53,"column":2},"end":{"line":53,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":50},"end":{"line":1,"column":51}},"loc":{"start":{"line":1,"column":76},"end":{"line":54,"column":1}},"line":1}},"branchMap":{"0":{"loc":{"start":{"line":54,"column":3},"end":{"line":54,"column":28}},"type":"binary-expr","locations":[{"start":{"line":54,"column":3},"end":{"line":54,"column":22}},{"start":{"line":54,"column":26},"end":{"line":54,"column":28}}],"line":54}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/text/function-names.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum FUNCTION_NAMES_TEXT {\n    ASC = 'ASC',\n    ARRAYTOTEXT = 'ARRAYTOTEXT',\n    BAHTTEXT = 'BAHTTEXT',\n    CHAR = 'CHAR',\n    CLEAN = 'CLEAN',\n    CODE = 'CODE',\n    CONCAT = 'CONCAT',\n    CONCATENATE = 'CONCATENATE',\n    DBCS = 'DBCS',\n    DOLLAR = 'DOLLAR',\n    EXACT = 'EXACT',\n    FIND = 'FIND',\n    FINDB = 'FINDB',\n    FIXED = 'FIXED',\n    LEFT = 'LEFT',\n    LEFTB = 'LEFTB',\n    LEN = 'LEN',\n    LENB = 'LENB',\n    LOWER = 'LOWER',\n    MID = 'MID',\n    MIDB = 'MIDB',\n    NUMBERSTRING = 'NUMBERSTRING',\n    NUMBERVALUE = 'NUMBERVALUE',\n    PHONETIC = 'PHONETIC',\n    PROPER = 'PROPER',\n    REGEXEXTRACT = 'REGEXEXTRACT',\n    REGEXMATCH = 'REGEXMATCH',\n    REGEXREPLACE = 'REGEXREPLACE',\n    REPLACE = 'REPLACE',\n    REPLACEB = 'REPLACEB',\n    REPT = 'REPT',\n    RIGHT = 'RIGHT',\n    RIGHTB = 'RIGHTB',\n    SEARCH = 'SEARCH',\n    SEARCHB = 'SEARCHB',\n    SUBSTITUTE = 'SUBSTITUTE',\n    T = 'T',\n    TEXT = 'TEXT',\n    TEXTAFTER = 'TEXTAFTER',\n    TEXTBEFORE = 'TEXTBEFORE',\n    TEXTJOIN = 'TEXTJOIN',\n    TEXTSPLIT = 'TEXTSPLIT',\n    TRIM = 'TRIM',\n    UNICHAR = 'UNICHAR',\n    UNICODE = 'UNICODE',\n    UPPER = 'UPPER',\n    VALUE = 'VALUE',\n    VALUETOTEXT = 'VALUETOTEXT',\n    CALL = 'CALL',\n    EUROCONVERT = 'EUROCONVERT',\n    REGISTER_ID = 'REGISTER.ID',\n}\n"],"mappings":"AAgBO,WAAK,sBAAL,kBAAKA,yBAAL;AACH,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,iBAAc;AACd,EAAAA,qBAAA,cAAW;AACX,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,YAAS;AACT,EAAAA,qBAAA,iBAAc;AACd,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,YAAS;AACT,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,SAAM;AACN,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,kBAAe;AACf,EAAAA,qBAAA,iBAAc;AACd,EAAAA,qBAAA,cAAW;AACX,EAAAA,qBAAA,YAAS;AACT,EAAAA,qBAAA,kBAAe;AACf,EAAAA,qBAAA,gBAAa;AACb,EAAAA,qBAAA,kBAAe;AACf,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,cAAW;AACX,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,YAAS;AACT,EAAAA,qBAAA,YAAS;AACT,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,gBAAa;AACb,EAAAA,qBAAA,OAAI;AACJ,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,eAAY;AACZ,EAAAA,qBAAA,gBAAa;AACb,EAAAA,qBAAA,cAAW;AACX,EAAAA,qBAAA,eAAY;AACZ,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,aAAU;AACV,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,WAAQ;AACR,EAAAA,qBAAA,iBAAc;AACd,EAAAA,qBAAA,UAAO;AACP,EAAAA,qBAAA,iBAAc;AACd,EAAAA,qBAAA,iBAAc;AAnDN,SAAAA;AAAA,GAAA;","names":["FUNCTION_NAMES_TEXT"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3c7569f0af3f1509771432a36565dd9c8c6338bd"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/operator-node.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/operator-node.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":26,"column":4},"end":{"line":26,"column":26}},"15":{"start":{"line":27,"column":4},"end":{"line":27,"column":47}},"16":{"start":{"line":30,"column":4},"end":{"line":30,"column":29}},"17":{"start":{"line":33,"column":21},"end":{"line":33,"column":39}},"18":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"19":{"start":{"line":35,"column":6},"end":{"line":35,"column":61}},"20":{"start":{"line":37,"column":19},"end":{"line":37,"column":30}},"21":{"start":{"line":38,"column":19},"end":{"line":38,"column":30}},"22":{"start":{"line":39,"column":18},"end":{"line":39,"column":36}},"23":{"start":{"line":40,"column":18},"end":{"line":40,"column":36}},"24":{"start":{"line":41,"column":18},"end":{"line":41,"column":33}},"25":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"26":{"start":{"line":43,"column":6},"end":{"line":43,"column":62}},"27":{"start":{"line":44,"column":6},"end":{"line":44,"column":13}},"28":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"29":{"start":{"line":47,"column":6},"end":{"line":47,"column":41}},"30":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"31":{"start":{"line":50,"column":6},"end":{"line":50,"column":41}},"32":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"33":{"start":{"line":53,"column":6},"end":{"line":53,"column":45}},"34":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"35":{"start":{"line":56,"column":6},"end":{"line":56,"column":45}},"36":{"start":{"line":58,"column":4},"end":{"line":63,"column":6}},"37":{"start":{"line":66,"column":33},"end":{"line":111,"column":1}},"38":{"start":{"line":68,"column":4},"end":{"line":68,"column":12}},"39":{"start":{"line":69,"column":4},"end":{"line":69,"column":45}},"40":{"start":{"line":72,"column":4},"end":{"line":72,"column":85}},"41":{"start":{"line":75,"column":23},"end":{"line":75,"column":25}},"42":{"start":{"line":76,"column":22},"end":{"line":76,"column":27}},"43":{"start":{"line":77,"column":4},"end":{"line":91,"column":5}},"44":{"start":{"line":78,"column":6},"end":{"line":78,"column":46}},"45":{"start":{"line":79,"column":11},"end":{"line":91,"column":5}},"46":{"start":{"line":80,"column":6},"end":{"line":80,"column":47}},"47":{"start":{"line":81,"column":11},"end":{"line":91,"column":5}},"48":{"start":{"line":82,"column":6},"end":{"line":82,"column":50}},"49":{"start":{"line":83,"column":11},"end":{"line":91,"column":5}},"50":{"start":{"line":84,"column":6},"end":{"line":84,"column":49}},"51":{"start":{"line":85,"column":11},"end":{"line":91,"column":5}},"52":{"start":{"line":86,"column":6},"end":{"line":86,"column":53}},"53":{"start":{"line":87,"column":11},"end":{"line":91,"column":5}},"54":{"start":{"line":88,"column":6},"end":{"line":88,"column":47}},"55":{"start":{"line":89,"column":11},"end":{"line":91,"column":5}},"56":{"start":{"line":90,"column":6},"end":{"line":90,"column":49}},"57":{"start":{"line":92,"column":29},"end":{"line":92,"column":76}},"58":{"start":{"line":93,"column":4},"end":{"line":96,"column":5}},"59":{"start":{"line":94,"column":6},"end":{"line":94,"column":44}},"60":{"start":{"line":95,"column":6},"end":{"line":95,"column":46}},"61":{"start":{"line":97,"column":4},"end":{"line":97,"column":57}},"62":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"63":{"start":{"line":101,"column":6},"end":{"line":101,"column":13}},"64":{"start":{"line":103,"column":22},"end":{"line":103,"column":34}},"65":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"66":{"start":{"line":105,"column":6},"end":{"line":105,"column":13}},"67":{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},"68":{"start":{"line":108,"column":6},"end":{"line":108,"column":36}},"69":{"start":{"line":112,"column":0},"end":{"line":114,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":2},"end":{"line":25,"column":3}},"loc":{"start":{"line":25,"column":49},"end":{"line":28,"column":3}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":29,"column":2},"end":{"line":29,"column":3}},"loc":{"start":{"line":29,"column":17},"end":{"line":31,"column":3}},"line":29},"5":{"name":"(anonymous_5)","decl":{"start":{"line":32,"column":2},"end":{"line":32,"column":3}},"loc":{"start":{"line":32,"column":12},"end":{"line":64,"column":3}},"line":32},"6":{"name":"(anonymous_6)","decl":{"start":{"line":67,"column":2},"end":{"line":67,"column":3}},"loc":{"start":{"line":67,"column":32},"end":{"line":70,"column":3}},"line":67},"7":{"name":"(anonymous_7)","decl":{"start":{"line":71,"column":2},"end":{"line":71,"column":3}},"loc":{"start":{"line":71,"column":15},"end":{"line":73,"column":3}},"line":71},"8":{"name":"(anonymous_8)","decl":{"start":{"line":74,"column":2},"end":{"line":74,"column":3}},"loc":{"start":{"line":74,"column":16},"end":{"line":98,"column":3}},"line":74},"9":{"name":"(anonymous_9)","decl":{"start":{"line":99,"column":2},"end":{"line":99,"column":3}},"loc":{"start":{"line":99,"column":32},"end":{"line":110,"column":3}},"line":99}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},{"start":{},"end":{}}],"line":34},"8":{"loc":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},{"start":{},"end":{}}],"line":42},"9":{"loc":{"start":{"line":42,"column":8},"end":{"line":42,"column":109}},"type":"binary-expr","locations":[{"start":{"line":42,"column":9},"end":{"line":42,"column":24}},{"start":{"line":42,"column":28},"end":{"line":42,"column":43}},{"start":{"line":42,"column":48},"end":{"line":42,"column":77}},{"start":{"line":42,"column":81},"end":{"line":42,"column":109}}],"line":42},"10":{"loc":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},{"start":{},"end":{}}],"line":46},"11":{"loc":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},{"start":{},"end":{}}],"line":49},"12":{"loc":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},{"start":{},"end":{}}],"line":52},"13":{"loc":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},{"start":{},"end":{}}],"line":55},"14":{"loc":{"start":{"line":72,"column":11},"end":{"line":72,"column":84}},"type":"binary-expr","locations":[{"start":{"line":72,"column":11},"end":{"line":72,"column":48}},{"start":{"line":72,"column":52},"end":{"line":72,"column":84}}],"line":72},"15":{"loc":{"start":{"line":77,"column":4},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":91,"column":5}},{"start":{"line":79,"column":11},"end":{"line":91,"column":5}}],"line":77},"16":{"loc":{"start":{"line":79,"column":11},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":79,"column":11},"end":{"line":91,"column":5}},{"start":{"line":81,"column":11},"end":{"line":91,"column":5}}],"line":79},"17":{"loc":{"start":{"line":81,"column":11},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":81,"column":11},"end":{"line":91,"column":5}},{"start":{"line":83,"column":11},"end":{"line":91,"column":5}}],"line":81},"18":{"loc":{"start":{"line":83,"column":11},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":83,"column":11},"end":{"line":91,"column":5}},{"start":{"line":85,"column":11},"end":{"line":91,"column":5}}],"line":83},"19":{"loc":{"start":{"line":85,"column":11},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":85,"column":11},"end":{"line":91,"column":5}},{"start":{"line":87,"column":11},"end":{"line":91,"column":5}}],"line":85},"20":{"loc":{"start":{"line":87,"column":11},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":87,"column":11},"end":{"line":91,"column":5}},{"start":{"line":89,"column":11},"end":{"line":91,"column":5}}],"line":87},"21":{"loc":{"start":{"line":89,"column":11},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":89,"column":11},"end":{"line":91,"column":5}},{"start":{},"end":{}}],"line":89},"22":{"loc":{"start":{"line":93,"column":4},"end":{"line":96,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":96,"column":5}},{"start":{},"end":{}}],"line":93},"23":{"loc":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},{"start":{},"end":{}}],"line":100},"24":{"loc":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},{"start":{},"end":{}}],"line":104},"25":{"loc":{"start":{"line":104,"column":8},"end":{"line":104,"column":85}},"type":"binary-expr","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":35}},{"start":{"line":104,"column":39},"end":{"line":104,"column":85}}],"line":104},"26":{"loc":{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},{"start":{},"end":{}}],"line":107}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1},"f":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[0,1],"1":[0,1],"2":[1,0],"3":[1,1],"4":[0,1],"5":[0,1],"6":[1,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/operator-node.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { compareToken } from '../../basics/token';\nimport type { BaseFunction } from '../../functions/base-function';\nimport type { Compare } from '../../functions/meta/compare';\nimport type { BaseReferenceObject, FunctionVariantType } from '../reference-object/base-reference-object';\nimport { ErrorType } from '../../basics/error-type';\nimport { OPERATOR_TOKEN_COMPARE_SET, OPERATOR_TOKEN_SET, operatorToken } from '../../basics/token';\nimport { FUNCTION_NAMES_MATH } from '../../functions/math/function-names';\nimport { FUNCTION_NAMES_META } from '../../functions/meta/function-names';\nimport { FUNCTION_NAMES_TEXT } from '../../functions/text/function-names';\nimport { IFunctionService } from '../../services/function.service';\nimport { LexerNode } from '../analysis/lexer-node';\nimport { type BaseValueObject, ErrorValueObject } from '../value-object/base-value-object';\nimport { NullValueObject } from '../value-object/primitive-object';\nimport { BaseAstNode, ErrorNode } from './base-ast-node';\nimport { BaseAstNodeFactory, DEFAULT_AST_NODE_FACTORY_Z_INDEX } from './base-ast-node-factory';\nimport { NODE_ORDER_MAP, NodeType } from './node-type';\n\nexport class OperatorNode extends BaseAstNode {\n    constructor(\n        operatorString: string,\n        private _functionExecutor: BaseFunction\n    ) {\n        super(operatorString);\n    }\n\n    override get nodeType() {\n        return NodeType.OPERATOR;\n    }\n\n    override execute() {\n        const children = this.getChildren();\n        if (this._functionExecutor.name === FUNCTION_NAMES_META.COMPARE) {\n            (this._functionExecutor as Compare).setCompareType(this.getToken() as compareToken);\n        }\n\n        const child1 = children[0];\n        const child2 = children[1];\n\n        let object1 = child1?.getValue();\n        let object2 = child2?.getValue();\n\n        const token = this.getToken();\n\n        if ((object1 == null || object2 == null) && token !== operatorToken.MINUS && token !== operatorToken.PLUS) {\n            this.setValue(ErrorValueObject.create(ErrorType.VALUE));\n            return;\n        }\n\n        if (object1 == null) {\n            object1 = NullValueObject.create();\n        }\n\n        if (object2 == null) {\n            object2 = NullValueObject.create();\n        }\n\n        if (object1.isReferenceObject()) {\n            object1 = (object1 as BaseReferenceObject).toArrayValueObject();\n        }\n\n        if (object2.isReferenceObject()) {\n            object2 = (object2 as BaseReferenceObject).toArrayValueObject();\n        }\n\n        this.setValue(\n            this._functionExecutor.calculate(\n                object1 as BaseValueObject,\n                object2 as BaseValueObject\n            ) as FunctionVariantType\n        );\n    }\n}\n\nexport class OperatorNodeFactory extends BaseAstNodeFactory {\n    constructor(@IFunctionService private readonly _functionService: IFunctionService) {\n        super();\n    }\n\n    override get zIndex() {\n        return NODE_ORDER_MAP.get(NodeType.OPERATOR) || DEFAULT_AST_NODE_FACTORY_Z_INDEX;\n    }\n\n    override create(param: string): BaseAstNode {\n        let functionName = '';\n        const tokenTrim = param;\n        if (tokenTrim === operatorToken.PLUS) {\n            functionName = FUNCTION_NAMES_META.PLUS;\n        } else if (tokenTrim === operatorToken.MINUS) {\n            functionName = FUNCTION_NAMES_META.MINUS;\n        } else if (tokenTrim === operatorToken.MULTIPLY) {\n            functionName = FUNCTION_NAMES_META.MULTIPLY;\n        } else if (tokenTrim === operatorToken.DIVIDED) {\n            functionName = FUNCTION_NAMES_META.DIVIDED;\n        } else if (tokenTrim === operatorToken.CONCATENATE) {\n            functionName = FUNCTION_NAMES_TEXT.CONCATENATE;\n        } else if (tokenTrim === operatorToken.POWER) {\n            functionName = FUNCTION_NAMES_MATH.POWER;\n        } else if (OPERATOR_TOKEN_COMPARE_SET.has(tokenTrim)) {\n            functionName = FUNCTION_NAMES_META.COMPARE;\n        }\n\n        const functionExecutor = this._functionService.getExecutor(functionName);\n        if (!functionExecutor) {\n            console.error(`No function ${param}`);\n            return ErrorNode.create(ErrorType.NAME);\n        }\n        return new OperatorNode(tokenTrim, functionExecutor);\n    }\n\n    override checkAndCreateNodeType(param: LexerNode | string) {\n        if (param instanceof LexerNode) {\n            return;\n        }\n        const tokenTrim = param.trim();\n\n        if (tokenTrim.charAt(0) === '\"' && tokenTrim.charAt(tokenTrim.length - 1) === '\"') {\n            return;\n        }\n\n        if (OPERATOR_TOKEN_SET.has(tokenTrim)) {\n            return this.create(tokenTrim);\n        }\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"df8fd3338c7b4de6bf3a54972fbacb2085ad174f"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/reference-node.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/reference-node.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":31,"column":4},"end":{"line":31,"column":26}},"15":{"start":{"line":32,"column":4},"end":{"line":32,"column":55}},"16":{"start":{"line":33,"column":4},"end":{"line":33,"column":43}},"17":{"start":{"line":34,"column":4},"end":{"line":34,"column":53}},"18":{"start":{"line":35,"column":4},"end":{"line":35,"column":43}},"19":{"start":{"line":37,"column":16},"end":{"line":37,"column":17}},"20":{"start":{"line":38,"column":16},"end":{"line":38,"column":17}},"21":{"start":{"line":40,"column":4},"end":{"line":40,"column":30}},"22":{"start":{"line":43,"column":33},"end":{"line":43,"column":59}},"23":{"start":{"line":44,"column":27},"end":{"line":44,"column":47}},"24":{"start":{"line":45,"column":28},"end":{"line":45,"column":99}},"25":{"start":{"line":46,"column":4},"end":{"line":46,"column":67}},"26":{"start":{"line":47,"column":4},"end":{"line":47,"column":71}},"27":{"start":{"line":48,"column":4},"end":{"line":48,"column":77}},"28":{"start":{"line":49,"column":4},"end":{"line":49,"column":68}},"29":{"start":{"line":50,"column":4},"end":{"line":50,"column":92}},"30":{"start":{"line":51,"column":4},"end":{"line":51,"column":65}},"31":{"start":{"line":52,"column":4},"end":{"line":52,"column":80}},"32":{"start":{"line":53,"column":4},"end":{"line":53,"column":100}},"33":{"start":{"line":54,"column":4},"end":{"line":54,"column":90}},"34":{"start":{"line":55,"column":21},"end":{"line":55,"column":40}},"35":{"start":{"line":56,"column":4},"end":{"line":56,"column":39}},"36":{"start":{"line":57,"column":4},"end":{"line":61,"column":5}},"37":{"start":{"line":58,"column":6},"end":{"line":58,"column":61}},"38":{"start":{"line":60,"column":6},"end":{"line":60,"column":37}},"39":{"start":{"line":64,"column":4},"end":{"line":64,"column":25}},"40":{"start":{"line":65,"column":4},"end":{"line":65,"column":25}},"41":{"start":{"line":68,"column":4},"end":{"line":71,"column":6}},"42":{"start":{"line":74,"column":34},"end":{"line":125,"column":1}},"43":{"start":{"line":76,"column":4},"end":{"line":76,"column":12}},"44":{"start":{"line":77,"column":4},"end":{"line":77,"column":55}},"45":{"start":{"line":78,"column":4},"end":{"line":78,"column":57}},"46":{"start":{"line":79,"column":4},"end":{"line":79,"column":45}},"47":{"start":{"line":82,"column":4},"end":{"line":82,"column":86}},"48":{"start":{"line":85,"column":22},"end":{"line":85,"column":27}},"49":{"start":{"line":87,"column":25},"end":{"line":87,"column":30}},"50":{"start":{"line":88,"column":4},"end":{"line":96,"column":5}},"51":{"start":{"line":89,"column":6},"end":{"line":89,"column":25}},"52":{"start":{"line":90,"column":6},"end":{"line":90,"column":45}},"53":{"start":{"line":91,"column":6},"end":{"line":93,"column":7}},"54":{"start":{"line":92,"column":8},"end":{"line":92,"column":30}},"55":{"start":{"line":95,"column":6},"end":{"line":95,"column":34}},"56":{"start":{"line":97,"column":33},"end":{"line":97,"column":59}},"57":{"start":{"line":98,"column":27},"end":{"line":98,"column":54}},"58":{"start":{"line":99,"column":57},"end":{"line":99,"column":123}},"59":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"60":{"start":{"line":101,"column":6},"end":{"line":101,"column":13}},"61":{"start":{"line":104,"column":4},"end":{"line":112,"column":5}},"62":{"start":{"line":105,"column":6},"end":{"line":105,"column":122}},"63":{"start":{"line":106,"column":11},"end":{"line":112,"column":5}},"64":{"start":{"line":107,"column":6},"end":{"line":111,"column":7}},"65":{"start":{"line":108,"column":8},"end":{"line":108,"column":123}},"66":{"start":{"line":109,"column":13},"end":{"line":111,"column":7}},"67":{"start":{"line":110,"column":8},"end":{"line":110,"column":126}},"68":{"start":{"line":113,"column":4},"end":{"line":120,"column":5}},"69":{"start":{"line":114,"column":6},"end":{"line":118,"column":7}},"70":{"start":{"line":115,"column":8},"end":{"line":115,"column":37}},"71":{"start":{"line":116,"column":13},"end":{"line":118,"column":7}},"72":{"start":{"line":117,"column":8},"end":{"line":117,"column":40}},"73":{"start":{"line":119,"column":6},"end":{"line":119,"column":18}},"74":{"start":{"line":123,"column":4},"end":{"line":123,"column":82}},"75":{"start":{"line":126,"column":0},"end":{"line":130,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":2},"end":{"line":30,"column":3}},"loc":{"start":{"line":30,"column":117},"end":{"line":36,"column":3}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":39,"column":2},"end":{"line":39,"column":3}},"loc":{"start":{"line":39,"column":17},"end":{"line":41,"column":3}},"line":39},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":2},"end":{"line":42,"column":3}},"loc":{"start":{"line":42,"column":12},"end":{"line":62,"column":3}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":63,"column":2},"end":{"line":63,"column":3}},"loc":{"start":{"line":63,"column":29},"end":{"line":66,"column":3}},"line":63},"7":{"name":"(anonymous_7)","decl":{"start":{"line":67,"column":2},"end":{"line":67,"column":3}},"loc":{"start":{"line":67,"column":17},"end":{"line":72,"column":3}},"line":67},"8":{"name":"(anonymous_8)","decl":{"start":{"line":75,"column":2},"end":{"line":75,"column":3}},"loc":{"start":{"line":75,"column":79},"end":{"line":80,"column":3}},"line":75},"9":{"name":"(anonymous_9)","decl":{"start":{"line":81,"column":2},"end":{"line":81,"column":3}},"loc":{"start":{"line":81,"column":15},"end":{"line":83,"column":3}},"line":81},"10":{"name":"(anonymous_10)","decl":{"start":{"line":84,"column":2},"end":{"line":84,"column":3}},"loc":{"start":{"line":84,"column":32},"end":{"line":121,"column":3}},"line":84},"11":{"name":"(anonymous_11)","decl":{"start":{"line":122,"column":2},"end":{"line":122,"column":3}},"loc":{"start":{"line":122,"column":37},"end":{"line":124,"column":3}},"line":122}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":30,"column":92},"end":{"line":30,"column":115}},"type":"default-arg","locations":[{"start":{"line":30,"column":110},"end":{"line":30,"column":115}}],"line":30},"8":{"loc":{"start":{"line":57,"column":4},"end":{"line":61,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":61,"column":5}},{"start":{"line":59,"column":11},"end":{"line":61,"column":5}}],"line":57},"9":{"loc":{"start":{"line":57,"column":8},"end":{"line":57,"column":64}},"type":"binary-expr","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":29}},{"start":{"line":57,"column":33},"end":{"line":57,"column":64}}],"line":57},"10":{"loc":{"start":{"line":63,"column":15},"end":{"line":63,"column":20}},"type":"default-arg","locations":[{"start":{"line":63,"column":19},"end":{"line":63,"column":20}}],"line":63},"11":{"loc":{"start":{"line":63,"column":22},"end":{"line":63,"column":27}},"type":"default-arg","locations":[{"start":{"line":63,"column":26},"end":{"line":63,"column":27}}],"line":63},"12":{"loc":{"start":{"line":82,"column":11},"end":{"line":82,"column":85}},"type":"binary-expr","locations":[{"start":{"line":82,"column":11},"end":{"line":82,"column":49}},{"start":{"line":82,"column":53},"end":{"line":82,"column":85}}],"line":82},"13":{"loc":{"start":{"line":88,"column":4},"end":{"line":96,"column":5}},"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":96,"column":5}},{"start":{"line":94,"column":11},"end":{"line":96,"column":5}}],"line":88},"14":{"loc":{"start":{"line":91,"column":6},"end":{"line":93,"column":7}},"type":"if","locations":[{"start":{"line":91,"column":6},"end":{"line":93,"column":7}},{"start":{},"end":{}}],"line":91},"15":{"loc":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},{"start":{},"end":{}}],"line":100},"16":{"loc":{"start":{"line":100,"column":8},"end":{"line":100,"column":101}},"type":"binary-expr","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":20}},{"start":{"line":100,"column":24},"end":{"line":100,"column":51}},{"start":{"line":100,"column":55},"end":{"line":100,"column":101}}],"line":100},"17":{"loc":{"start":{"line":104,"column":4},"end":{"line":112,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":112,"column":5}},{"start":{"line":106,"column":11},"end":{"line":112,"column":5}}],"line":104},"18":{"loc":{"start":{"line":106,"column":11},"end":{"line":112,"column":5}},"type":"if","locations":[{"start":{"line":106,"column":11},"end":{"line":112,"column":5}},{"start":{},"end":{}}],"line":106},"19":{"loc":{"start":{"line":106,"column":15},"end":{"line":106,"column":69}},"type":"binary-expr","locations":[{"start":{"line":106,"column":15},"end":{"line":106,"column":26}},{"start":{"line":106,"column":30},"end":{"line":106,"column":69}}],"line":106},"20":{"loc":{"start":{"line":107,"column":6},"end":{"line":111,"column":7}},"type":"if","locations":[{"start":{"line":107,"column":6},"end":{"line":111,"column":7}},{"start":{"line":109,"column":13},"end":{"line":111,"column":7}}],"line":107},"21":{"loc":{"start":{"line":109,"column":13},"end":{"line":111,"column":7}},"type":"if","locations":[{"start":{"line":109,"column":13},"end":{"line":111,"column":7}},{"start":{},"end":{}}],"line":109},"22":{"loc":{"start":{"line":113,"column":4},"end":{"line":120,"column":5}},"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":120,"column":5}},{"start":{},"end":{}}],"line":113},"23":{"loc":{"start":{"line":114,"column":6},"end":{"line":118,"column":7}},"type":"if","locations":[{"start":{"line":114,"column":6},"end":{"line":118,"column":7}},{"start":{"line":116,"column":13},"end":{"line":118,"column":7}}],"line":114},"24":{"loc":{"start":{"line":116,"column":13},"end":{"line":118,"column":7}},"type":"if","locations":[{"start":{"line":116,"column":13},"end":{"line":118,"column":7}},{"start":{},"end":{}}],"line":116}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":3,"7":3,"8":1,"9":0,"10":1,"11":1,"12":3,"13":3,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1},"f":{"0":1,"1":3,"2":3,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"0":[0,1],"1":[0,1],"2":[3,0],"3":[3,3],"4":[0,3],"5":[0,1],"6":[1,0],"7":[0],"8":[0,0],"9":[0,0],"10":[0],"11":[0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/reference-node.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\n\nimport { ErrorType } from '../../basics/error-type';\nimport {\n    regexTestSingeRange,\n    regexTestSingleColumn,\n    regexTestSingleRow,\n} from '../../basics/regex';\nimport { matchToken } from '../../basics/token';\nimport { IFormulaCurrentConfigService } from '../../services/current-data.service';\nimport { IFunctionService } from '../../services/function.service';\nimport { IFormulaRuntimeService } from '../../services/runtime.service';\nimport { LexerNode } from '../analysis/lexer-node';\nimport { prefixHandler } from '../utils/prefix-handler';\nimport { getReferenceObjectFromCache, ReferenceObjectType } from '../utils/value-object';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { BaseAstNode } from './base-ast-node';\nimport { BaseAstNodeFactory, DEFAULT_AST_NODE_FACTORY_Z_INDEX } from './base-ast-node-factory';\nimport { NODE_ORDER_MAP, NodeType } from './node-type';\n\nexport class ReferenceNode extends BaseAstNode {\n    private _refOffsetX = 0;\n    private _refOffsetY = 0;\n\n    constructor(\n        private _currentConfigService: IFormulaCurrentConfigService,\n        private _runtimeService: IFormulaRuntimeService,\n        operatorString: string,\n        private _referenceObjectType: ReferenceObjectType,\n        private _isPrepareMerge: boolean = false\n    ) {\n        super(operatorString);\n    }\n\n    override get nodeType() {\n        return NodeType.REFERENCE;\n    }\n\n    override execute() {\n        const currentConfigService = this._currentConfigService;\n        const runtimeService = this._runtimeService;\n\n        const referenceObject = getReferenceObjectFromCache(this.getToken(), this._referenceObjectType);\n\n        referenceObject.setDefaultUnitId(runtimeService.currentUnitId);\n\n        referenceObject.setDefaultSheetId(runtimeService.currentSubUnitId);\n\n        referenceObject.setForcedSheetId(currentConfigService.getSheetNameMap());\n\n        referenceObject.setUnitData(currentConfigService.getUnitData());\n\n        referenceObject.setArrayFormulaCellData(currentConfigService.getArrayFormulaCellData());\n\n        referenceObject.setRuntimeData(runtimeService.getUnitData());\n\n        referenceObject.setUnitStylesData(currentConfigService.getUnitStylesData());\n\n        referenceObject.setRuntimeArrayFormulaCellData(runtimeService.getRuntimeArrayFormulaCellData());\n\n        referenceObject.setRuntimeFeatureCellData(runtimeService.getRuntimeFeatureCellData());\n\n        const { x, y } = this.getRefOffset();\n\n        referenceObject.setRefOffset(x, y);\n\n        if (!this._isPrepareMerge && referenceObject.isExceedRange()) {\n            this.setValue(ErrorValueObject.create(ErrorType.NAME));\n        } else {\n            this.setValue(referenceObject);\n        }\n    }\n\n    setRefOffset(x: number = 0, y: number = 0) {\n        this._refOffsetX = x;\n        this._refOffsetY = y;\n    }\n\n    getRefOffset() {\n        return {\n            x: this._refOffsetX,\n            y: this._refOffsetY,\n        };\n    }\n}\n\nexport class ReferenceNodeFactory extends BaseAstNodeFactory {\n    constructor(\n        @IFormulaCurrentConfigService private readonly _currentConfigService: IFormulaCurrentConfigService,\n        @IFormulaRuntimeService private readonly _formulaRuntimeService: IFormulaRuntimeService,\n        @IFunctionService private readonly _functionService: IFunctionService\n    ) {\n        super();\n    }\n\n    override get zIndex() {\n        return NODE_ORDER_MAP.get(NodeType.REFERENCE) || DEFAULT_AST_NODE_FACTORY_Z_INDEX;\n    }\n\n    override checkAndCreateNodeType(param: LexerNode | string) {\n        let isLexerNode = false;\n        let tokenTrimPre: string;\n        let isPrepareMerge = false;\n        if (param instanceof LexerNode) {\n            isLexerNode = true;\n            tokenTrimPre = param.getToken().trim();\n\n            /**\n             * If this node is a reference to a range,\n             * it is necessary to determine whether it will be combined into a single range by a union operation.\n             */\n            if (param.getParent()?.getParent()?.getToken().trim() === matchToken.COLON) {\n                isPrepareMerge = true;\n            }\n        } else {\n            tokenTrimPre = param.trim();\n        }\n\n        // const tokenTrim = param.trim();\n        // if (regexTestSingeRange(tokenTrim)) {\n        //     return true;\n        // }\n\n        const currentConfigService = this._currentConfigService;\n        const runtimeService = this._formulaRuntimeService;\n\n        const { tokenTrim, minusPrefixNode, atPrefixNode } = prefixHandler(tokenTrimPre, this._functionService, runtimeService);\n\n        if (!isLexerNode && tokenTrim.charAt(0) === '\"' && tokenTrim.charAt(tokenTrim.length - 1) === '\"') {\n            return;\n        }\n\n        let node: Nullable<ReferenceNode>;\n        if (regexTestSingeRange(tokenTrim)) {\n            node = new ReferenceNode(currentConfigService, runtimeService, tokenTrim, ReferenceObjectType.CELL, isPrepareMerge);\n        } else if (isLexerNode && this._checkParentIsUnionOperator(param as LexerNode)) {\n            if (regexTestSingleRow(tokenTrim)) {\n                node = new ReferenceNode(currentConfigService, runtimeService, tokenTrim, ReferenceObjectType.ROW, isPrepareMerge);\n            } else if (regexTestSingleColumn(tokenTrim)) {\n                node = new ReferenceNode(currentConfigService, runtimeService, tokenTrim, ReferenceObjectType.COLUMN, isPrepareMerge);\n            }\n        }\n        // else {\n        //     const unitId = this._formulaRuntimeService.currentUnitId;\n        //     // parserDataLoader.get\n\n        //     const tableMap = this._superTableService.getTableMap(unitId);\n        //     const $regex = $SUPER_TABLE_COLUMN_REGEX_PRECOMPILING;\n        //     const tableName = tokenTrim.replace($regex, '');\n        //     if (!isLexerNode && tableMap?.has(tableName)) {\n        //         const columnResult = $regex.exec(tokenTrim);\n        //         let columnDataString = '';\n        //         if (columnResult) {\n        //             columnDataString = columnResult[0];\n        //         }\n        //         const tableData = tableMap.get(tableName)!;\n        //         const tableOption = this._superTableService.getTableOptionMap();\n        //         node = new ReferenceNode(\n        //             this._injector,\n        //             tokenTrim,\n        //             new TableReferenceObject(tokenTrim, tableData, columnDataString, tableOption)\n        //         );\n        //     }\n        // }\n\n        if (node) {\n            if (atPrefixNode) {\n                node.setParent(atPrefixNode);\n            } else if (minusPrefixNode) {\n                node.setParent(minusPrefixNode);\n            }\n            return node;\n        }\n    }\n\n    private _checkParentIsUnionOperator(param: LexerNode) {\n        return param.getParent()?.getParent()?.getToken().trim() === matchToken.COLON;\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3f449cd5b468dbe993acbfbc28a2925077d91f8f"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/suffix-node.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/suffix-node.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":27,"column":4},"end":{"line":27,"column":27}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":55}},"16":{"start":{"line":29,"column":4},"end":{"line":29,"column":25}},"17":{"start":{"line":30,"column":4},"end":{"line":30,"column":43}},"18":{"start":{"line":31,"column":4},"end":{"line":31,"column":47}},"19":{"start":{"line":34,"column":4},"end":{"line":34,"column":27}},"20":{"start":{"line":37,"column":21},"end":{"line":37,"column":39}},"21":{"start":{"line":38,"column":16},"end":{"line":38,"column":38}},"22":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"23":{"start":{"line":41,"column":6},"end":{"line":41,"column":40}},"24":{"start":{"line":43,"column":4},"end":{"line":59,"column":5}},"25":{"start":{"line":44,"column":6},"end":{"line":46,"column":7}},"26":{"start":{"line":45,"column":8},"end":{"line":45,"column":43}},"27":{"start":{"line":47,"column":6},"end":{"line":50,"column":8}},"28":{"start":{"line":51,"column":6},"end":{"line":54,"column":7}},"29":{"start":{"line":52,"column":23},"end":{"line":52,"column":48}},"30":{"start":{"line":53,"column":8},"end":{"line":53,"column":59}},"31":{"start":{"line":55,"column":11},"end":{"line":59,"column":5}},"32":{"start":{"line":56,"column":6},"end":{"line":56,"column":41}},"33":{"start":{"line":58,"column":6},"end":{"line":58,"column":56}},"34":{"start":{"line":60,"column":4},"end":{"line":60,"column":26}},"35":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"36":{"start":{"line":64,"column":6},"end":{"line":64,"column":54}},"37":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"38":{"start":{"line":67,"column":6},"end":{"line":67,"column":54}},"39":{"start":{"line":69,"column":22},"end":{"line":69,"column":27}},"40":{"start":{"line":70,"column":18},"end":{"line":70,"column":46}},"41":{"start":{"line":71,"column":19},"end":{"line":71,"column":40}},"42":{"start":{"line":72,"column":20},"end":{"line":72,"column":42}},"43":{"start":{"line":73,"column":24},"end":{"line":73,"column":67}},"44":{"start":{"line":74,"column":26},"end":{"line":74,"column":100}},"45":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"46":{"start":{"line":76,"column":6},"end":{"line":76,"column":54}},"47":{"start":{"line":78,"column":22},"end":{"line":78,"column":60}},"48":{"start":{"line":79,"column":4},"end":{"line":79,"column":52}},"49":{"start":{"line":82,"column":31},"end":{"line":115,"column":1}},"50":{"start":{"line":84,"column":4},"end":{"line":84,"column":12}},"51":{"start":{"line":85,"column":4},"end":{"line":85,"column":45}},"52":{"start":{"line":86,"column":4},"end":{"line":86,"column":25}},"53":{"start":{"line":87,"column":4},"end":{"line":87,"column":55}},"54":{"start":{"line":90,"column":4},"end":{"line":90,"column":83}},"55":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"56":{"start":{"line":94,"column":6},"end":{"line":94,"column":13}},"57":{"start":{"line":96,"column":22},"end":{"line":96,"column":45}},"58":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"59":{"start":{"line":98,"column":6},"end":{"line":98,"column":13}},"60":{"start":{"line":100,"column":23},"end":{"line":100,"column":25}},"61":{"start":{"line":101,"column":4},"end":{"line":107,"column":5}},"62":{"start":{"line":102,"column":6},"end":{"line":102,"column":49}},"63":{"start":{"line":103,"column":11},"end":{"line":107,"column":5}},"64":{"start":{"line":104,"column":6},"end":{"line":104,"column":80}},"65":{"start":{"line":106,"column":6},"end":{"line":106,"column":13}},"66":{"start":{"line":108,"column":29},"end":{"line":108,"column":76}},"67":{"start":{"line":109,"column":4},"end":{"line":112,"column":5}},"68":{"start":{"line":110,"column":6},"end":{"line":110,"column":44}},"69":{"start":{"line":111,"column":6},"end":{"line":111,"column":46}},"70":{"start":{"line":113,"column":4},"end":{"line":113,"column":96}},"71":{"start":{"line":116,"column":0},"end":{"line":120,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":2},"end":{"line":26,"column":3}},"loc":{"start":{"line":26,"column":81},"end":{"line":32,"column":3}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":2},"end":{"line":33,"column":3}},"loc":{"start":{"line":33,"column":17},"end":{"line":35,"column":3}},"line":33},"5":{"name":"(anonymous_5)","decl":{"start":{"line":36,"column":2},"end":{"line":36,"column":3}},"loc":{"start":{"line":36,"column":12},"end":{"line":61,"column":3}},"line":36},"6":{"name":"(anonymous_6)","decl":{"start":{"line":62,"column":2},"end":{"line":62,"column":3}},"loc":{"start":{"line":62,"column":23},"end":{"line":80,"column":3}},"line":62},"7":{"name":"(anonymous_7)","decl":{"start":{"line":83,"column":2},"end":{"line":83,"column":3}},"loc":{"start":{"line":83,"column":63},"end":{"line":88,"column":3}},"line":83},"8":{"name":"(anonymous_8)","decl":{"start":{"line":89,"column":2},"end":{"line":89,"column":3}},"loc":{"start":{"line":89,"column":15},"end":{"line":91,"column":3}},"line":89},"9":{"name":"(anonymous_9)","decl":{"start":{"line":92,"column":2},"end":{"line":92,"column":3}},"loc":{"start":{"line":92,"column":32},"end":{"line":114,"column":3}},"line":92}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},{"start":{},"end":{}}],"line":40},"8":{"loc":{"start":{"line":43,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":59,"column":5}},{"start":{"line":55,"column":11},"end":{"line":59,"column":5}}],"line":43},"9":{"loc":{"start":{"line":44,"column":6},"end":{"line":46,"column":7}},"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":46,"column":7}},{"start":{},"end":{}}],"line":44},"10":{"loc":{"start":{"line":51,"column":6},"end":{"line":54,"column":7}},"type":"if","locations":[{"start":{"line":51,"column":6},"end":{"line":54,"column":7}},{"start":{},"end":{}}],"line":51},"11":{"loc":{"start":{"line":55,"column":11},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":11},"end":{"line":59,"column":5}},{"start":{"line":57,"column":11},"end":{"line":59,"column":5}}],"line":55},"12":{"loc":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},{"start":{},"end":{}}],"line":63},"13":{"loc":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},{"start":{},"end":{}}],"line":66},"14":{"loc":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},{"start":{},"end":{}}],"line":75},"15":{"loc":{"start":{"line":90,"column":11},"end":{"line":90,"column":82}},"type":"binary-expr","locations":[{"start":{"line":90,"column":11},"end":{"line":90,"column":46}},{"start":{"line":90,"column":50},"end":{"line":90,"column":82}}],"line":90},"16":{"loc":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},{"start":{},"end":{}}],"line":93},"17":{"loc":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},{"start":{},"end":{}}],"line":97},"18":{"loc":{"start":{"line":97,"column":8},"end":{"line":97,"column":85}},"type":"binary-expr","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":35}},{"start":{"line":97,"column":39},"end":{"line":97,"column":85}}],"line":97},"19":{"loc":{"start":{"line":101,"column":4},"end":{"line":107,"column":5}},"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":107,"column":5}},{"start":{"line":103,"column":11},"end":{"line":107,"column":5}}],"line":101},"20":{"loc":{"start":{"line":103,"column":11},"end":{"line":107,"column":5}},"type":"if","locations":[{"start":{"line":103,"column":11},"end":{"line":107,"column":5}},{"start":{"line":105,"column":11},"end":{"line":107,"column":5}}],"line":103},"21":{"loc":{"start":{"line":109,"column":4},"end":{"line":112,"column":5}},"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":112,"column":5}},{"start":{},"end":{}}],"line":109}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":3,"7":3,"8":1,"9":0,"10":1,"11":1,"12":3,"13":3,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1},"f":{"0":1,"1":3,"2":3,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[0,1],"1":[0,1],"2":[3,0],"3":[3,3],"4":[0,3],"5":[0,1],"6":[1,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/suffix-node.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BaseFunction } from '../../functions/base-function';\n\nimport type { BaseReferenceObject, FunctionVariantType } from '../reference-object/base-reference-object';\nimport type { CellReferenceObject } from '../reference-object/cell-reference-object';\nimport type { BaseValueObject } from '../value-object/base-value-object';\nimport { Inject } from '@univerjs/core';\nimport { ErrorType } from '../../basics/error-type';\nimport { suffixToken } from '../../basics/token';\nimport { FUNCTION_NAMES_META } from '../../functions/meta/function-names';\nimport { IFormulaCurrentConfigService } from '../../services/current-data.service';\nimport { IFunctionService } from '../../services/function.service';\nimport { Lexer } from '../analysis/lexer';\nimport { LexerNode } from '../analysis/lexer-node';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { NumberValueObject } from '../value-object/primitive-object';\nimport { BaseAstNode, ErrorNode } from './base-ast-node';\nimport { BaseAstNodeFactory, DEFAULT_AST_NODE_FACTORY_Z_INDEX } from './base-ast-node-factory';\nimport { NODE_ORDER_MAP, NodeType } from './node-type';\n\nexport class SuffixNode extends BaseAstNode {\n    constructor(\n        private _currentConfigService: IFormulaCurrentConfigService,\n        private _lexer: Lexer,\n        private _operatorString: string,\n        private _functionExecutor?: BaseFunction\n    ) {\n        super(_operatorString);\n    }\n\n    override get nodeType() {\n        return NodeType.SUFFIX;\n    }\n\n    override execute() {\n        const children = this.getChildren();\n        let value = children[0].getValue();\n        let result: FunctionVariantType;\n        if (value == null) {\n            throw new Error('object is null');\n        }\n\n        if (this._operatorString === suffixToken.PERCENTAGE) {\n            if (value.isReferenceObject()) {\n                value = (value as BaseReferenceObject).toArrayValueObject();\n            }\n            result = this._functionExecutor!.calculate(\n                value as BaseValueObject,\n                NumberValueObject.create(100)\n            ) as FunctionVariantType;\n\n            // set number format\n            if ((result as NumberValueObject).isNumber()) {\n                const value = Number((result as NumberValueObject).getValue());\n                result = NumberValueObject.create(value, '0.00%');\n            }\n        } else if (this._operatorString === suffixToken.POUND) {\n            result = this._handlerPound(value);\n        } else {\n            result = ErrorValueObject.create(ErrorType.VALUE);\n        }\n        this.setValue(result);\n    }\n\n    private _handlerPound(value: FunctionVariantType) {\n        // const sheetData = interpreterDatasetConfig.sheetData;\n        // if (!sheetData) {\n        //     return false;\n        // }\n\n        if (!value.isReferenceObject()) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        if (!(value as BaseReferenceObject).isCell()) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        // const currentConfigService = this._accessor.get(IFormulaCurrentConfigService);\n\n        // const lexer = this._accessor.get(Lexer);\n\n        const cellValue = value as CellReferenceObject;\n        const range = cellValue.getRangePosition();\n        const unitId = cellValue.getUnitId();\n        const sheetId = cellValue.getSheetId();\n        const formulaData = this._currentConfigService.getFormulaData();\n\n        const formulaString = formulaData?.[unitId]?.[sheetId]?.[range.startRow]?.[range.startColumn]?.f;\n\n        if (!formulaString) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        const lexerNode = this._lexer.treeBuilder(formulaString);\n\n        return ErrorValueObject.create(ErrorType.VALUE);\n        /** todo */\n    }\n}\n\nexport class SuffixNodeFactory extends BaseAstNodeFactory {\n    constructor(\n        @IFunctionService private readonly _functionService: IFunctionService,\n        @Inject(Lexer) private readonly _lexer: Lexer,\n        @IFormulaCurrentConfigService private readonly _currentConfigService: IFormulaCurrentConfigService\n    ) {\n        super();\n    }\n\n    override get zIndex() {\n        return NODE_ORDER_MAP.get(NodeType.SUFFIX) || DEFAULT_AST_NODE_FACTORY_Z_INDEX;\n    }\n\n    override checkAndCreateNodeType(param: LexerNode | string) {\n        if (!(param instanceof LexerNode)) {\n            return;\n        }\n\n        const tokenTrim = param.getToken().trim();\n\n        if (tokenTrim.charAt(0) === '\"' && tokenTrim.charAt(tokenTrim.length - 1) === '\"') {\n            return;\n        }\n\n        let functionName = '';\n        if (tokenTrim === suffixToken.PERCENTAGE) {\n            functionName = FUNCTION_NAMES_META.DIVIDED;\n        } else if (tokenTrim === suffixToken.POUND) {\n            return new SuffixNode(this._currentConfigService, this._lexer, tokenTrim);\n        } else {\n            return;\n        }\n\n        const functionExecutor = this._functionService.getExecutor(functionName);\n        if (!functionExecutor) {\n            console.error(`No function ${param}`);\n            return ErrorNode.create(ErrorType.NAME);\n        }\n        return new SuffixNode(this._currentConfigService, this._lexer, tokenTrim, functionExecutor);\n    }\n}\n"],"mappings":"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","names":["value"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"920cd50cb60783559345d4105b0d1eb5418b450b"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/union-node.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/union-node.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":23,"column":4},"end":{"line":23,"column":26}},"15":{"start":{"line":26,"column":4},"end":{"line":26,"column":26}},"16":{"start":{"line":29,"column":21},"end":{"line":29,"column":39}},"17":{"start":{"line":30,"column":22},"end":{"line":30,"column":33}},"18":{"start":{"line":31,"column":23},"end":{"line":31,"column":34}},"19":{"start":{"line":32,"column":21},"end":{"line":32,"column":41}},"20":{"start":{"line":33,"column":22},"end":{"line":33,"column":43}},"21":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"22":{"start":{"line":35,"column":6},"end":{"line":35,"column":48}},"23":{"start":{"line":38,"column":4},"end":{"line":42,"column":5}},"24":{"start":{"line":39,"column":6},"end":{"line":39,"column":56}},"25":{"start":{"line":41,"column":6},"end":{"line":41,"column":55}},"26":{"start":{"line":43,"column":4},"end":{"line":43,"column":26}},"27":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"28":{"start":{"line":47,"column":6},"end":{"line":47,"column":52}},"29":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"30":{"start":{"line":50,"column":6},"end":{"line":50,"column":52}},"31":{"start":{"line":52,"column":4},"end":{"line":52,"column":24}},"32":{"start":{"line":53,"column":4},"end":{"line":53,"column":24}},"33":{"start":{"line":54,"column":4},"end":{"line":54,"column":64}},"34":{"start":{"line":57,"column":30},"end":{"line":82,"column":1}},"35":{"start":{"line":59,"column":4},"end":{"line":59,"column":12}},"36":{"start":{"line":60,"column":4},"end":{"line":60,"column":45}},"37":{"start":{"line":63,"column":4},"end":{"line":63,"column":82}},"38":{"start":{"line":66,"column":4},"end":{"line":66,"column":32}},"39":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"40":{"start":{"line":70,"column":6},"end":{"line":70,"column":13}},"41":{"start":{"line":72,"column":18},"end":{"line":72,"column":34}},"42":{"start":{"line":73,"column":22},"end":{"line":73,"column":34}},"43":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"44":{"start":{"line":75,"column":6},"end":{"line":75,"column":13}},"45":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"46":{"start":{"line":78,"column":6},"end":{"line":78,"column":13}},"47":{"start":{"line":80,"column":4},"end":{"line":80,"column":34}},"48":{"start":{"line":83,"column":0},"end":{"line":85,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":2},"end":{"line":22,"column":3}},"loc":{"start":{"line":22,"column":30},"end":{"line":24,"column":3}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":2},"end":{"line":25,"column":3}},"loc":{"start":{"line":25,"column":17},"end":{"line":27,"column":3}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":28,"column":2},"end":{"line":28,"column":3}},"loc":{"start":{"line":28,"column":12},"end":{"line":44,"column":3}},"line":28},"6":{"name":"(anonymous_6)","decl":{"start":{"line":45,"column":2},"end":{"line":45,"column":3}},"loc":{"start":{"line":45,"column":37},"end":{"line":55,"column":3}},"line":45},"7":{"name":"(anonymous_7)","decl":{"start":{"line":58,"column":2},"end":{"line":58,"column":3}},"loc":{"start":{"line":58,"column":32},"end":{"line":61,"column":3}},"line":58},"8":{"name":"(anonymous_8)","decl":{"start":{"line":62,"column":2},"end":{"line":62,"column":3}},"loc":{"start":{"line":62,"column":15},"end":{"line":64,"column":3}},"line":62},"9":{"name":"(anonymous_9)","decl":{"start":{"line":65,"column":2},"end":{"line":65,"column":3}},"loc":{"start":{"line":65,"column":16},"end":{"line":67,"column":3}},"line":65},"10":{"name":"(anonymous_10)","decl":{"start":{"line":68,"column":2},"end":{"line":68,"column":3}},"loc":{"start":{"line":68,"column":32},"end":{"line":81,"column":3}},"line":68}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},{"start":{},"end":{}}],"line":34},"8":{"loc":{"start":{"line":34,"column":8},"end":{"line":34,"column":45}},"type":"binary-expr","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":24}},{"start":{"line":34,"column":28},"end":{"line":34,"column":45}}],"line":34},"9":{"loc":{"start":{"line":38,"column":4},"end":{"line":42,"column":5}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":42,"column":5}},{"start":{"line":40,"column":11},"end":{"line":42,"column":5}}],"line":38},"10":{"loc":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},{"start":{},"end":{}}],"line":46},"11":{"loc":{"start":{"line":46,"column":8},"end":{"line":46,"column":48}},"type":"binary-expr","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":26}},{"start":{"line":46,"column":30},"end":{"line":46,"column":48}}],"line":46},"12":{"loc":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},{"start":{},"end":{}}],"line":49},"13":{"loc":{"start":{"line":49,"column":8},"end":{"line":49,"column":70}},"type":"binary-expr","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":37}},{"start":{"line":49,"column":41},"end":{"line":49,"column":70}}],"line":49},"14":{"loc":{"start":{"line":63,"column":11},"end":{"line":63,"column":81}},"type":"binary-expr","locations":[{"start":{"line":63,"column":11},"end":{"line":63,"column":45}},{"start":{"line":63,"column":49},"end":{"line":63,"column":81}}],"line":63},"15":{"loc":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},{"start":{},"end":{}}],"line":69},"16":{"loc":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},{"start":{},"end":{}}],"line":74},"17":{"loc":{"start":{"line":74,"column":8},"end":{"line":74,"column":85}},"type":"binary-expr","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":35}},{"start":{"line":74,"column":39},"end":{"line":74,"column":85}}],"line":74},"18":{"loc":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},{"start":{},"end":{}}],"line":77}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1},"f":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[0,1],"1":[0,1],"2":[1,0],"3":[1,1],"4":[0,1],"5":[0,1],"6":[1,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/union-node.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BaseReferenceObject, FunctionVariantType } from '../reference-object/base-reference-object';\nimport { ErrorType } from '../../basics/error-type';\nimport { matchToken } from '../../basics/token';\nimport { IFunctionService } from '../../services/function.service';\nimport { LexerNode } from '../analysis/lexer-node';\nimport { getRangeReferenceObjectFromCache } from '../utils/value-object';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { BaseAstNode } from './base-ast-node';\nimport { BaseAstNodeFactory, DEFAULT_AST_NODE_FACTORY_Z_INDEX } from './base-ast-node-factory';\nimport { NODE_ORDER_MAP, NodeType } from './node-type';\n\n// const UNION_EXECUTOR_NAME = 'UNION';\n\nexport class UnionNode extends BaseAstNode {\n    constructor(operatorString: string) {\n        super(operatorString);\n    }\n\n    override get nodeType() {\n        return NodeType.UNION;\n    }\n\n    override execute() {\n        const children = this.getChildren();\n        const leftChild = children[0];\n        const rightChild = children[1];\n        const leftNode = leftChild.getValue();\n        const rightNode = rightChild.getValue();\n\n        if (leftNode == null || rightNode == null) {\n            throw new Error('leftNode and rightNode');\n        }\n\n        let result: FunctionVariantType;\n        if (this.getToken() === matchToken.COLON) {\n            result = this._unionFunction(leftNode, rightNode) as FunctionVariantType;\n        } else {\n            result = ErrorValueObject.create(ErrorType.NAME);\n        }\n        this.setValue(result);\n    }\n\n    private _unionFunction(variant1: FunctionVariantType, variant2: FunctionVariantType) {\n        if (variant1.isError() || variant2.isError()) {\n            return ErrorValueObject.create(ErrorType.REF);\n        }\n\n        if (!variant1.isReferenceObject() || !variant2.isReferenceObject()) {\n            return ErrorValueObject.create(ErrorType.REF);\n        }\n\n        variant1 = variant1 as BaseReferenceObject;\n\n        variant2 = variant2 as BaseReferenceObject;\n\n        return getRangeReferenceObjectFromCache(variant1, variant2);\n\n        // if (variant1.isCell() && variant2.isCell()) {\n\n        //     return variant1.unionBy(variant2);\n        // }\n        // if (variant1.isRow() && variant2.isRow()) {\n        //     return variant1.unionBy(variant2);\n        // }\n        // if (variant1.isColumn() && variant2.isColumn()) {\n        //     return variant1.unionBy(variant2);\n        // }\n\n        // // =A1:A gets #NAME?\n        // return ErrorValueObject.create(ErrorType.NAME);\n    }\n}\n\nexport class UnionNodeFactory extends BaseAstNodeFactory {\n    constructor(@IFunctionService private readonly _functionService: IFunctionService) {\n        super();\n    }\n\n    override get zIndex() {\n        return NODE_ORDER_MAP.get(NodeType.UNION) || DEFAULT_AST_NODE_FACTORY_Z_INDEX;\n    }\n\n    override create(param: string): BaseAstNode {\n        return new UnionNode(param);\n    }\n\n    override checkAndCreateNodeType(param: LexerNode | string) {\n        if (!(param instanceof LexerNode)) {\n            return;\n        }\n\n        const token = param.getToken();\n\n        const tokenTrim = token.trim();\n\n        if (tokenTrim.charAt(0) === '\"' && tokenTrim.charAt(tokenTrim.length - 1) === '\"') {\n            return;\n        }\n\n        if (tokenTrim !== matchToken.COLON) {\n            return;\n        }\n\n        return this.create(tokenTrim);\n    }\n}\n"],"mappings":";;;;;;;;;;;AAiBA,SAAS,iBAAiB;AAC1B,SAAS,kBAAkB;AAC3B,SAAS,wBAAwB;AACjC,SAAS,iBAAiB;AAC1B,SAAS,wCAAwC;AACjD,SAAS,wBAAwB;AACjC,SAAS,mBAAmB;AAC5B,SAAS,oBAAoB,wCAAwC;AACrE,SAAS,gBAAgB,gBAAgB;AAIlC,aAAM,kBAAkB,YAAY;AAAA,EACvC,YAAY,gBAAwB;AAChC,UAAM,cAAc;AAAA,EACxB;AAAA,EAEA,IAAa,WAAW;AACpB,WAAO,SAAS;AAAA,EACpB;AAAA,EAES,UAAU;AACf,UAAM,WAAW,KAAK,YAAY;AAClC,UAAM,YAAY,SAAS,CAAC;AAC5B,UAAM,aAAa,SAAS,CAAC;AAC7B,UAAM,WAAW,UAAU,SAAS;AACpC,UAAM,YAAY,WAAW,SAAS;AAEtC,QAAI,YAAY,QAAQ,aAAa,MAAM;AACvC,YAAM,IAAI,MAAM,wBAAwB;AAAA,IAC5C;AAEA,QAAI;AACJ,QAAI,KAAK,SAAS,MAAM,WAAW,OAAO;AACtC,eAAS,KAAK,eAAe,UAAU,SAAS;AAAA,IACpD,OAAO;AACH,eAAS,iBAAiB,OAAO,UAAU,IAAI;AAAA,IACnD;AACA,SAAK,SAAS,MAAM;AAAA,EACxB;AAAA,EAEQ,eAAe,UAA+B,UAA+B;AACjF,QAAI,SAAS,QAAQ,KAAK,SAAS,QAAQ,GAAG;AAC1C,aAAO,iBAAiB,OAAO,UAAU,GAAG;AAAA,IAChD;AAEA,QAAI,CAAC,SAAS,kBAAkB,KAAK,CAAC,SAAS,kBAAkB,GAAG;AAChE,aAAO,iBAAiB,OAAO,UAAU,GAAG;AAAA,IAChD;AAEA,eAAW;AAEX,eAAW;AAEX,WAAO,iCAAiC,UAAU,QAAQ;AAAA,EAe9D;AACJ;AAEO,WAAM,mBAAN,cAA+B,mBAAmB;AAAA,EACrD,YAA+C,kBAAoC;AAC/E,UAAM;AADqC;AAAA,EAE/C;AAAA,EAEA,IAAa,SAAS;AAClB,WAAO,eAAe,IAAI,SAAS,KAAK,KAAK;AAAA,EACjD;AAAA,EAES,OAAO,OAA4B;AACxC,WAAO,IAAI,UAAU,KAAK;AAAA,EAC9B;AAAA,EAES,uBAAuB,OAA2B;AACvD,QAAI,EAAE,iBAAiB,YAAY;AAC/B;AAAA,IACJ;AAEA,UAAM,QAAQ,MAAM,SAAS;AAE7B,UAAM,YAAY,MAAM,KAAK;AAE7B,QAAI,UAAU,OAAO,CAAC,MAAM,OAAO,UAAU,OAAO,UAAU,SAAS,CAAC,MAAM,KAAK;AAC/E;AAAA,IACJ;AAEA,QAAI,cAAc,WAAW,OAAO;AAChC;AAAA,IACJ;AAEA,WAAO,KAAK,OAAO,SAAS;AAAA,EAChC;AACJ;AAhCa,mBAAN;AAAA,EACU;AAAA,GADJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"793d622cf55a6c36b79cf99d59ff9cb12cbd27e5"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/value-node.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/value-node.ts","statementMap":{"0":{"start":{"line":10,"column":4},"end":{"line":10,"column":26}},"1":{"start":{"line":13,"column":4},"end":{"line":13,"column":26}},"2":{"start":{"line":16,"column":4},"end":{"line":16,"column":62}},"3":{"start":{"line":21,"column":4},"end":{"line":21,"column":82}},"4":{"start":{"line":24,"column":4},"end":{"line":43,"column":5}},"5":{"start":{"line":25,"column":24},"end":{"line":25,"column":36}},"6":{"start":{"line":26,"column":25},"end":{"line":26,"column":44}},"7":{"start":{"line":27,"column":23},"end":{"line":27,"column":61}},"8":{"start":{"line":28,"column":6},"end":{"line":30,"column":7}},"9":{"start":{"line":29,"column":8},"end":{"line":29,"column":38}},"10":{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},"11":{"start":{"line":32,"column":8},"end":{"line":32,"column":38}},"12":{"start":{"line":34,"column":6},"end":{"line":36,"column":7}},"13":{"start":{"line":35,"column":8},"end":{"line":35,"column":38}},"14":{"start":{"line":37,"column":29},"end":{"line":37,"column":52}},"15":{"start":{"line":38,"column":6},"end":{"line":40,"column":7}},"16":{"start":{"line":39,"column":8},"end":{"line":39,"column":43}},"17":{"start":{"line":42,"column":6},"end":{"line":42,"column":32}},"18":{"start":{"line":46,"column":4},"end":{"line":46,"column":32}},"19":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"20":{"start":{"line":50,"column":6},"end":{"line":50,"column":13}},"21":{"start":{"line":52,"column":4},"end":{"line":52,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":2},"end":{"line":9,"column":3}},"loc":{"start":{"line":9,"column":30},"end":{"line":11,"column":3}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":2},"end":{"line":12,"column":3}},"loc":{"start":{"line":12,"column":17},"end":{"line":14,"column":3}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":2},"end":{"line":15,"column":3}},"loc":{"start":{"line":15,"column":12},"end":{"line":17,"column":3}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":2},"end":{"line":20,"column":3}},"loc":{"start":{"line":20,"column":15},"end":{"line":22,"column":3}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":2},"end":{"line":23,"column":3}},"loc":{"start":{"line":23,"column":25},"end":{"line":44,"column":3}},"line":23},"5":{"name":"(anonymous_5)","decl":{"start":{"line":45,"column":2},"end":{"line":45,"column":3}},"loc":{"start":{"line":45,"column":16},"end":{"line":47,"column":3}},"line":45},"6":{"name":"(anonymous_6)","decl":{"start":{"line":48,"column":2},"end":{"line":48,"column":3}},"loc":{"start":{"line":48,"column":32},"end":{"line":53,"column":3}},"line":48}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":11},"end":{"line":21,"column":81}},"type":"binary-expr","locations":[{"start":{"line":21,"column":11},"end":{"line":21,"column":45}},{"start":{"line":21,"column":49},"end":{"line":21,"column":81}}],"line":21},"1":{"loc":{"start":{"line":24,"column":4},"end":{"line":43,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":43,"column":5}},{"start":{"line":41,"column":11},"end":{"line":43,"column":5}}],"line":24},"2":{"loc":{"start":{"line":28,"column":6},"end":{"line":30,"column":7}},"type":"if","locations":[{"start":{"line":28,"column":6},"end":{"line":30,"column":7}},{"start":{},"end":{}}],"line":28},"3":{"loc":{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},{"start":{},"end":{}}],"line":31},"4":{"loc":{"start":{"line":31,"column":10},"end":{"line":31,"column":48}},"type":"binary-expr","locations":[{"start":{"line":31,"column":10},"end":{"line":31,"column":28}},{"start":{"line":31,"column":32},"end":{"line":31,"column":48}}],"line":31},"5":{"loc":{"start":{"line":34,"column":6},"end":{"line":36,"column":7}},"type":"if","locations":[{"start":{"line":34,"column":6},"end":{"line":36,"column":7}},{"start":{},"end":{}}],"line":34},"6":{"loc":{"start":{"line":34,"column":10},"end":{"line":34,"column":48}},"type":"binary-expr","locations":[{"start":{"line":34,"column":10},"end":{"line":34,"column":28}},{"start":{"line":34,"column":32},"end":{"line":34,"column":48}}],"line":34},"7":{"loc":{"start":{"line":38,"column":6},"end":{"line":40,"column":7}},"type":"if","locations":[{"start":{"line":38,"column":6},"end":{"line":40,"column":7}},{"start":{},"end":{}}],"line":38},"8":{"loc":{"start":{"line":38,"column":10},"end":{"line":38,"column":87}},"type":"binary-expr","locations":[{"start":{"line":38,"column":10},"end":{"line":38,"column":46}},{"start":{"line":38,"column":50},"end":{"line":38,"column":87}}],"line":38},"9":{"loc":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},{"start":{},"end":{}}],"line":49}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/ast-node/value-node.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ErrorType } from '../../basics/error-type';\nimport { BooleanValue } from '../../basics/common';\nimport { ERROR_TYPE_SET } from '../../basics/error-type';\nimport { LexerNode } from '../analysis/lexer-node';\nimport { ValueObjectFactory } from '../value-object/array-value-object';\nimport { BaseAstNode } from './base-ast-node';\nimport { BaseAstNodeFactory, DEFAULT_AST_NODE_FACTORY_Z_INDEX } from './base-ast-node-factory';\nimport { NODE_ORDER_MAP, NodeType } from './node-type';\n\nexport class ValueNode extends BaseAstNode {\n    constructor(operatorString: string) {\n        super(operatorString);\n    }\n\n    override get nodeType(): NodeType {\n        return NodeType.VALUE;\n    }\n\n    override execute(): void {\n        this.setValue(ValueObjectFactory.create(this.getToken()));\n    }\n}\n\nexport class ValueNodeFactory extends BaseAstNodeFactory {\n    override get zIndex(): number {\n        return NODE_ORDER_MAP.get(NodeType.VALUE) || DEFAULT_AST_NODE_FACTORY_Z_INDEX;\n    }\n\n    _checkValueNode(token: string): BaseAstNode | undefined {\n        if (Number.isNaN(Number(token))) {\n            const tokenTrim = token.trim();\n            const startToken = tokenTrim.charAt(0);\n            const endToken = tokenTrim.charAt(tokenTrim.length - 1);\n\n            if (ERROR_TYPE_SET.has(tokenTrim as ErrorType)) {\n                return this.create(tokenTrim);\n            }\n\n            if (startToken === '\"' && endToken === '\"') {\n                return this.create(tokenTrim);\n            }\n            if (startToken === '{' && endToken === '}') {\n                return this.create(tokenTrim);\n            }\n\n            const tokenTrimUpper = tokenTrim.toUpperCase();\n            if (tokenTrimUpper === BooleanValue.TRUE || tokenTrimUpper === BooleanValue.FALSE) {\n                return this.create(tokenTrimUpper);\n            }\n        } else {\n            return this.create(token);\n        }\n    }\n\n    override create(param: string): BaseAstNode {\n        return new ValueNode(param);\n    }\n\n    override checkAndCreateNodeType(param: LexerNode | string): BaseAstNode | undefined {\n        if (param instanceof LexerNode) {\n            return;\n        }\n        return this._checkValueNode(param);\n    }\n}\n"],"mappings":"AAiBA,SAAS,oBAAoB;AAC7B,SAAS,sBAAsB;AAC/B,SAAS,iBAAiB;AAC1B,SAAS,0BAA0B;AACnC,SAAS,mBAAmB;AAC5B,SAAS,oBAAoB,wCAAwC;AACrE,SAAS,gBAAgB,gBAAgB;AAElC,aAAM,kBAAkB,YAAY;AAAA,EACvC,YAAY,gBAAwB;AAChC,UAAM,cAAc;AAAA,EACxB;AAAA,EAEA,IAAa,WAAqB;AAC9B,WAAO,SAAS;AAAA,EACpB;AAAA,EAES,UAAgB;AACrB,SAAK,SAAS,mBAAmB,OAAO,KAAK,SAAS,CAAC,CAAC;AAAA,EAC5D;AACJ;AAEO,aAAM,yBAAyB,mBAAmB;AAAA,EACrD,IAAa,SAAiB;AAC1B,WAAO,eAAe,IAAI,SAAS,KAAK,KAAK;AAAA,EACjD;AAAA,EAEA,gBAAgB,OAAwC;AACpD,QAAI,OAAO,MAAM,OAAO,KAAK,CAAC,GAAG;AAC7B,YAAM,YAAY,MAAM,KAAK;AAC7B,YAAM,aAAa,UAAU,OAAO,CAAC;AACrC,YAAM,WAAW,UAAU,OAAO,UAAU,SAAS,CAAC;AAEtD,UAAI,eAAe,IAAI,SAAsB,GAAG;AAC5C,eAAO,KAAK,OAAO,SAAS;AAAA,MAChC;AAEA,UAAI,eAAe,OAAO,aAAa,KAAK;AACxC,eAAO,KAAK,OAAO,SAAS;AAAA,MAChC;AACA,UAAI,eAAe,OAAO,aAAa,KAAK;AACxC,eAAO,KAAK,OAAO,SAAS;AAAA,MAChC;AAEA,YAAM,iBAAiB,UAAU,YAAY;AAC7C,UAAI,mBAAmB,aAAa,QAAQ,mBAAmB,aAAa,OAAO;AAC/E,eAAO,KAAK,OAAO,cAAc;AAAA,MACrC;AAAA,IACJ,OAAO;AACH,aAAO,KAAK,OAAO,KAAK;AAAA,IAC5B;AAAA,EACJ;AAAA,EAES,OAAO,OAA4B;AACxC,WAAO,IAAI,UAAU,KAAK;AAAA,EAC9B;AAAA,EAES,uBAAuB,OAAoD;AAChF,QAAI,iBAAiB,WAAW;AAC5B;AAAA,IACJ;AACA,WAAO,KAAK,gBAAgB,KAAK;AAAA,EACrC;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0569c71d0ae84e0a7be0f6f4b6a1b4c6450d52b8"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/analysis/parser.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/analysis/parser.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":40,"column":28},"end":{"line":292,"column":1}},"15":{"start":{"line":42,"column":4},"end":{"line":42,"column":12}},"16":{"start":{"line":43,"column":4},"end":{"line":43,"column":43}},"17":{"start":{"line":44,"column":4},"end":{"line":44,"column":51}},"18":{"start":{"line":45,"column":4},"end":{"line":45,"column":53}},"19":{"start":{"line":46,"column":4},"end":{"line":46,"column":49}},"20":{"start":{"line":47,"column":4},"end":{"line":47,"column":67}},"21":{"start":{"line":48,"column":4},"end":{"line":48,"column":53}},"22":{"start":{"line":49,"column":4},"end":{"line":49,"column":49}},"23":{"start":{"line":50,"column":4},"end":{"line":50,"column":55}},"24":{"start":{"line":51,"column":4},"end":{"line":51,"column":49}},"25":{"start":{"line":52,"column":4},"end":{"line":52,"column":47}},"26":{"start":{"line":53,"column":4},"end":{"line":53,"column":47}},"27":{"start":{"line":54,"column":4},"end":{"line":54,"column":30}},"28":{"start":{"line":56,"column":24},"end":{"line":56,"column":26}},"29":{"start":{"line":58,"column":4},"end":{"line":60,"column":7}},"30":{"start":{"line":59,"column":6},"end":{"line":59,"column":28}},"31":{"start":{"line":61,"column":4},"end":{"line":61,"column":34}},"32":{"start":{"line":64,"column":20},"end":{"line":64,"column":60}},"33":{"start":{"line":65,"column":17},"end":{"line":65,"column":48}},"34":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"35":{"start":{"line":67,"column":6},"end":{"line":67,"column":57}},"36":{"start":{"line":69,"column":4},"end":{"line":69,"column":16}},"37":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"38":{"start":{"line":73,"column":6},"end":{"line":73,"column":47}},"39":{"start":{"line":75,"column":21},"end":{"line":75,"column":41}},"40":{"start":{"line":76,"column":26},"end":{"line":76,"column":66}},"41":{"start":{"line":77,"column":36},"end":{"line":77,"column":98}},"42":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"43":{"start":{"line":79,"column":6},"end":{"line":79,"column":19}},"44":{"start":{"line":81,"column":40},"end":{"line":81,"column":75}},"45":{"start":{"line":82,"column":21},"end":{"line":82,"column":44}},"46":{"start":{"line":83,"column":26},"end":{"line":83,"column":41}},"47":{"start":{"line":84,"column":4},"end":{"line":97,"column":5}},"48":{"start":{"line":84,"column":17},"end":{"line":84,"column":18}},"49":{"start":{"line":85,"column":19},"end":{"line":85,"column":30}},"50":{"start":{"line":86,"column":6},"end":{"line":96,"column":7}},"51":{"start":{"line":87,"column":8},"end":{"line":87,"column":71}},"52":{"start":{"line":88,"column":8},"end":{"line":88,"column":41}},"53":{"start":{"line":89,"column":31},"end":{"line":89,"column":58}},"54":{"start":{"line":90,"column":26},"end":{"line":90,"column":43}},"55":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"56":{"start":{"line":92,"column":10},"end":{"line":92,"column":81}},"57":{"start":{"line":95,"column":8},"end":{"line":95,"column":21}},"58":{"start":{"line":98,"column":4},"end":{"line":98,"column":36}},"59":{"start":{"line":99,"column":4},"end":{"line":99,"column":18}},"60":{"start":{"line":102,"column":24},"end":{"line":102,"column":50}},"61":{"start":{"line":103,"column":29},"end":{"line":103,"column":47}},"62":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"63":{"start":{"line":105,"column":6},"end":{"line":105,"column":13}},"64":{"start":{"line":107,"column":26},"end":{"line":107,"column":41}},"65":{"start":{"line":108,"column":4},"end":{"line":108,"column":63}},"66":{"start":{"line":109,"column":35},"end":{"line":109,"column":50}},"67":{"start":{"line":110,"column":4},"end":{"line":110,"column":73}},"68":{"start":{"line":111,"column":25},"end":{"line":111,"column":41}},"69":{"start":{"line":112,"column":4},"end":{"line":122,"column":5}},"70":{"start":{"line":112,"column":17},"end":{"line":112,"column":18}},"71":{"start":{"line":113,"column":20},"end":{"line":113,"column":35}},"72":{"start":{"line":114,"column":6},"end":{"line":116,"column":7}},"73":{"start":{"line":115,"column":8},"end":{"line":115,"column":15}},"74":{"start":{"line":117,"column":6},"end":{"line":121,"column":7}},"75":{"start":{"line":118,"column":8},"end":{"line":118,"column":44}},"76":{"start":{"line":120,"column":8},"end":{"line":120,"column":53}},"77":{"start":{"line":123,"column":4},"end":{"line":123,"column":59}},"78":{"start":{"line":124,"column":4},"end":{"line":124,"column":52}},"79":{"start":{"line":125,"column":19},"end":{"line":125,"column":43}},"80":{"start":{"line":126,"column":4},"end":{"line":126,"column":54}},"81":{"start":{"line":127,"column":4},"end":{"line":127,"column":25}},"82":{"start":{"line":131,"column":21},"end":{"line":131,"column":44}},"83":{"start":{"line":132,"column":26},"end":{"line":132,"column":41}},"84":{"start":{"line":133,"column":27},"end":{"line":133,"column":29}},"85":{"start":{"line":134,"column":25},"end":{"line":134,"column":29}},"86":{"start":{"line":135,"column":18},"end":{"line":135,"column":59}},"87":{"start":{"line":136,"column":4},"end":{"line":142,"column":5}},"88":{"start":{"line":137,"column":25},"end":{"line":137,"column":59}},"89":{"start":{"line":138,"column":6},"end":{"line":140,"column":7}},"90":{"start":{"line":139,"column":8},"end":{"line":139,"column":47}},"91":{"start":{"line":141,"column":6},"end":{"line":141,"column":47}},"92":{"start":{"line":143,"column":4},"end":{"line":162,"column":5}},"93":{"start":{"line":144,"column":6},"end":{"line":144,"column":30}},"94":{"start":{"line":145,"column":6},"end":{"line":149,"column":7}},"95":{"start":{"line":146,"column":25},"end":{"line":146,"column":62}},"96":{"start":{"line":147,"column":8},"end":{"line":147,"column":35}},"97":{"start":{"line":148,"column":8},"end":{"line":148,"column":30}},"98":{"start":{"line":151,"column":6},"end":{"line":157,"column":7}},"99":{"start":{"line":152,"column":25},"end":{"line":152,"column":72}},"100":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"101":{"start":{"line":154,"column":10},"end":{"line":154,"column":57}},"102":{"start":{"line":156,"column":8},"end":{"line":156,"column":26}},"103":{"start":{"line":158,"column":6},"end":{"line":158,"column":53}},"104":{"start":{"line":159,"column":6},"end":{"line":161,"column":7}},"105":{"start":{"line":160,"column":8},"end":{"line":160,"column":48}},"106":{"start":{"line":163,"column":23},"end":{"line":163,"column":34}},"107":{"start":{"line":164,"column":4},"end":{"line":245,"column":5}},"108":{"start":{"line":164,"column":17},"end":{"line":164,"column":18}},"109":{"start":{"line":165,"column":19},"end":{"line":165,"column":30}},"110":{"start":{"line":166,"column":6},"end":{"line":174,"column":7}},"111":{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},"112":{"start":{"line":168,"column":10},"end":{"line":168,"column":19}},"113":{"start":{"line":170,"column":13},"end":{"line":174,"column":7}},"114":{"start":{"line":171,"column":8},"end":{"line":173,"column":9}},"115":{"start":{"line":172,"column":10},"end":{"line":172,"column":19}},"116":{"start":{"line":175,"column":20},"end":{"line":175,"column":24}},"117":{"start":{"line":176,"column":6},"end":{"line":189,"column":7}},"118":{"start":{"line":177,"column":8},"end":{"line":182,"column":9}},"119":{"start":{"line":178,"column":28},"end":{"line":178,"column":59}},"120":{"start":{"line":179,"column":10},"end":{"line":181,"column":11}},"121":{"start":{"line":180,"column":12},"end":{"line":180,"column":52}},"122":{"start":{"line":183,"column":8},"end":{"line":183,"column":52}},"123":{"start":{"line":184,"column":8},"end":{"line":186,"column":9}},"124":{"start":{"line":185,"column":10},"end":{"line":185,"column":19}},"125":{"start":{"line":188,"column":8},"end":{"line":188,"column":43}},"126":{"start":{"line":190,"column":6},"end":{"line":192,"column":7}},"127":{"start":{"line":191,"column":8},"end":{"line":191,"column":48}},"128":{"start":{"line":193,"column":6},"end":{"line":193,"column":45}},"129":{"start":{"line":194,"column":6},"end":{"line":196,"column":7}},"130":{"start":{"line":195,"column":8},"end":{"line":195,"column":23}},"131":{"start":{"line":197,"column":6},"end":{"line":244,"column":7}},"132":{"start":{"line":201,"column":25},"end":{"line":201,"column":64}},"133":{"start":{"line":202,"column":10},"end":{"line":204,"column":11}},"134":{"start":{"line":203,"column":12},"end":{"line":203,"column":49}},"135":{"start":{"line":205,"column":10},"end":{"line":205,"column":39}},"136":{"start":{"line":206,"column":10},"end":{"line":206,"column":16}},"137":{"start":{"line":209,"column":10},"end":{"line":209,"column":39}},"138":{"start":{"line":210,"column":10},"end":{"line":210,"column":16}},"139":{"start":{"line":212,"column":10},"end":{"line":212,"column":39}},"140":{"start":{"line":213,"column":10},"end":{"line":213,"column":16}},"141":{"start":{"line":215,"column":33},"end":{"line":215,"column":53}},"142":{"start":{"line":216,"column":33},"end":{"line":216,"column":53}},"143":{"start":{"line":217,"column":10},"end":{"line":219,"column":11}},"144":{"start":{"line":218,"column":12},"end":{"line":218,"column":46}},"145":{"start":{"line":220,"column":10},"end":{"line":222,"column":11}},"146":{"start":{"line":221,"column":12},"end":{"line":221,"column":46}},"147":{"start":{"line":223,"column":10},"end":{"line":223,"column":39}},"148":{"start":{"line":224,"column":10},"end":{"line":224,"column":16}},"149":{"start":{"line":227,"column":10},"end":{"line":227,"column":39}},"150":{"start":{"line":228,"column":10},"end":{"line":228,"column":16}},"151":{"start":{"line":230,"column":10},"end":{"line":230,"column":39}},"152":{"start":{"line":231,"column":10},"end":{"line":231,"column":16}},"153":{"start":{"line":233,"column":10},"end":{"line":233,"column":39}},"154":{"start":{"line":234,"column":10},"end":{"line":234,"column":16}},"155":{"start":{"line":236,"column":10},"end":{"line":236,"column":39}},"156":{"start":{"line":237,"column":10},"end":{"line":237,"column":16}},"157":{"start":{"line":239,"column":10},"end":{"line":239,"column":39}},"158":{"start":{"line":240,"column":10},"end":{"line":240,"column":16}},"159":{"start":{"line":242,"column":10},"end":{"line":242,"column":39}},"160":{"start":{"line":243,"column":10},"end":{"line":243,"column":16}},"161":{"start":{"line":246,"column":32},"end":{"line":246,"column":53}},"162":{"start":{"line":247,"column":4},"end":{"line":250,"column":5}},"163":{"start":{"line":247,"column":17},"end":{"line":247,"column":18}},"164":{"start":{"line":248,"column":19},"end":{"line":248,"column":36}},"165":{"start":{"line":249,"column":6},"end":{"line":249,"column":37}},"166":{"start":{"line":251,"column":4},"end":{"line":251,"column":26}},"167":{"start":{"line":264,"column":18},"end":{"line":264,"column":22}},"168":{"start":{"line":265,"column":36},"end":{"line":265,"column":67}},"169":{"start":{"line":266,"column":4},"end":{"line":272,"column":5}},"170":{"start":{"line":266,"column":17},"end":{"line":266,"column":18}},"171":{"start":{"line":267,"column":29},"end":{"line":267,"column":56}},"172":{"start":{"line":268,"column":6},"end":{"line":268,"column":60}},"173":{"start":{"line":269,"column":6},"end":{"line":271,"column":7}},"174":{"start":{"line":270,"column":8},"end":{"line":270,"column":14}},"175":{"start":{"line":273,"column":4},"end":{"line":275,"column":5}},"176":{"start":{"line":274,"column":6},"end":{"line":274,"column":37}},"177":{"start":{"line":276,"column":4},"end":{"line":276,"column":19}},"178":{"start":{"line":279,"column":4},"end":{"line":290,"column":22}},"179":{"start":{"line":293,"column":0},"end":{"line":305,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":41,"column":2},"end":{"line":41,"column":3}},"loc":{"start":{"line":41,"column":246},"end":{"line":55,"column":3}},"line":41},"4":{"name":"(anonymous_4)","decl":{"start":{"line":57,"column":2},"end":{"line":57,"column":3}},"loc":{"start":{"line":57,"column":12},"end":{"line":62,"column":3}},"line":57},"5":{"name":"(anonymous_5)","decl":{"start":{"line":58,"column":37},"end":{"line":58,"column":38}},"loc":{"start":{"line":58,"column":54},"end":{"line":60,"column":5}},"line":58},"6":{"name":"(anonymous_6)","decl":{"start":{"line":63,"column":2},"end":{"line":63,"column":3}},"loc":{"start":{"line":63,"column":19},"end":{"line":70,"column":3}},"line":63},"7":{"name":"(anonymous_7)","decl":{"start":{"line":71,"column":2},"end":{"line":71,"column":3}},"loc":{"start":{"line":71,"column":45},"end":{"line":100,"column":3}},"line":71},"8":{"name":"(anonymous_8)","decl":{"start":{"line":101,"column":2},"end":{"line":101,"column":3}},"loc":{"start":{"line":101,"column":35},"end":{"line":128,"column":3}},"line":101},"9":{"name":"(anonymous_9)","decl":{"start":{"line":130,"column":2},"end":{"line":130,"column":3}},"loc":{"start":{"line":130,"column":28},"end":{"line":252,"column":3}},"line":130},"10":{"name":"(anonymous_10)","decl":{"start":{"line":263,"column":2},"end":{"line":263,"column":3}},"loc":{"start":{"line":263,"column":22},"end":{"line":277,"column":3}},"line":263},"11":{"name":"(anonymous_11)","decl":{"start":{"line":278,"column":2},"end":{"line":278,"column":3}},"loc":{"start":{"line":278,"column":23},"end":{"line":291,"column":3}},"line":278}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},{"start":{},"end":{}}],"line":66},"8":{"loc":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},{"start":{},"end":{}}],"line":72},"9":{"loc":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},{"start":{},"end":{}}],"line":78},"10":{"loc":{"start":{"line":86,"column":6},"end":{"line":96,"column":7}},"type":"if","locations":[{"start":{"line":86,"column":6},"end":{"line":96,"column":7}},{"start":{"line":94,"column":13},"end":{"line":96,"column":7}}],"line":86},"11":{"loc":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},{"start":{},"end":{}}],"line":91},"12":{"loc":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},{"start":{},"end":{}}],"line":104},"13":{"loc":{"start":{"line":104,"column":8},"end":{"line":104,"column":60}},"type":"binary-expr","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":34}},{"start":{"line":104,"column":38},"end":{"line":104,"column":60}}],"line":104},"14":{"loc":{"start":{"line":114,"column":6},"end":{"line":116,"column":7}},"type":"if","locations":[{"start":{"line":114,"column":6},"end":{"line":116,"column":7}},{"start":{},"end":{}}],"line":114},"15":{"loc":{"start":{"line":117,"column":6},"end":{"line":121,"column":7}},"type":"if","locations":[{"start":{"line":117,"column":6},"end":{"line":121,"column":7}},{"start":{"line":119,"column":13},"end":{"line":121,"column":7}}],"line":117},"16":{"loc":{"start":{"line":136,"column":4},"end":{"line":142,"column":5}},"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":142,"column":5}},{"start":{},"end":{}}],"line":136},"17":{"loc":{"start":{"line":138,"column":6},"end":{"line":140,"column":7}},"type":"if","locations":[{"start":{"line":138,"column":6},"end":{"line":140,"column":7}},{"start":{},"end":{}}],"line":138},"18":{"loc":{"start":{"line":143,"column":4},"end":{"line":162,"column":5}},"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":162,"column":5}},{"start":{"line":150,"column":11},"end":{"line":162,"column":5}}],"line":143},"19":{"loc":{"start":{"line":145,"column":6},"end":{"line":149,"column":7}},"type":"if","locations":[{"start":{"line":145,"column":6},"end":{"line":149,"column":7}},{"start":{},"end":{}}],"line":145},"20":{"loc":{"start":{"line":151,"column":6},"end":{"line":157,"column":7}},"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":157,"column":7}},{"start":{},"end":{}}],"line":151},"21":{"loc":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},{"start":{},"end":{}}],"line":153},"22":{"loc":{"start":{"line":159,"column":6},"end":{"line":161,"column":7}},"type":"if","locations":[{"start":{"line":159,"column":6},"end":{"line":161,"column":7}},{"start":{},"end":{}}],"line":159},"23":{"loc":{"start":{"line":166,"column":6},"end":{"line":174,"column":7}},"type":"if","locations":[{"start":{"line":166,"column":6},"end":{"line":174,"column":7}},{"start":{"line":170,"column":13},"end":{"line":174,"column":7}}],"line":166},"24":{"loc":{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},"type":"if","locations":[{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},{"start":{},"end":{}}],"line":167},"25":{"loc":{"start":{"line":167,"column":12},"end":{"line":167,"column":46}},"type":"binary-expr","locations":[{"start":{"line":167,"column":12},"end":{"line":167,"column":19}},{"start":{"line":167,"column":23},"end":{"line":167,"column":46}}],"line":167},"26":{"loc":{"start":{"line":170,"column":13},"end":{"line":174,"column":7}},"type":"if","locations":[{"start":{"line":170,"column":13},"end":{"line":174,"column":7}},{"start":{},"end":{}}],"line":170},"27":{"loc":{"start":{"line":171,"column":8},"end":{"line":173,"column":9}},"type":"if","locations":[{"start":{"line":171,"column":8},"end":{"line":173,"column":9}},{"start":{},"end":{}}],"line":171},"28":{"loc":{"start":{"line":176,"column":6},"end":{"line":189,"column":7}},"type":"if","locations":[{"start":{"line":176,"column":6},"end":{"line":189,"column":7}},{"start":{"line":187,"column":13},"end":{"line":189,"column":7}}],"line":176},"29":{"loc":{"start":{"line":177,"column":8},"end":{"line":182,"column":9}},"type":"if","locations":[{"start":{"line":177,"column":8},"end":{"line":182,"column":9}},{"start":{},"end":{}}],"line":177},"30":{"loc":{"start":{"line":177,"column":12},"end":{"line":177,"column":95}},"type":"binary-expr","locations":[{"start":{"line":177,"column":12},"end":{"line":177,"column":60}},{"start":{"line":177,"column":64},"end":{"line":177,"column":95}}],"line":177},"31":{"loc":{"start":{"line":179,"column":10},"end":{"line":181,"column":11}},"type":"if","locations":[{"start":{"line":179,"column":10},"end":{"line":181,"column":11}},{"start":{},"end":{}}],"line":179},"32":{"loc":{"start":{"line":179,"column":14},"end":{"line":179,"column":49}},"type":"binary-expr","locations":[{"start":{"line":179,"column":14},"end":{"line":179,"column":23}},{"start":{"line":179,"column":27},"end":{"line":179,"column":49}}],"line":179},"33":{"loc":{"start":{"line":184,"column":8},"end":{"line":186,"column":9}},"type":"if","locations":[{"start":{"line":184,"column":8},"end":{"line":186,"column":9}},{"start":{},"end":{}}],"line":184},"34":{"loc":{"start":{"line":190,"column":6},"end":{"line":192,"column":7}},"type":"if","locations":[{"start":{"line":190,"column":6},"end":{"line":192,"column":7}},{"start":{},"end":{}}],"line":190},"35":{"loc":{"start":{"line":194,"column":6},"end":{"line":196,"column":7}},"type":"if","locations":[{"start":{"line":194,"column":6},"end":{"line":196,"column":7}},{"start":{},"end":{}}],"line":194},"36":{"loc":{"start":{"line":194,"column":10},"end":{"line":194,"column":65}},"type":"binary-expr","locations":[{"start":{"line":194,"column":10},"end":{"line":194,"column":25}},{"start":{"line":194,"column":29},"end":{"line":194,"column":65}}],"line":194},"37":{"loc":{"start":{"line":197,"column":6},"end":{"line":244,"column":7}},"type":"switch","locations":[{"start":{"line":200,"column":8},"end":{"line":207,"column":9}},{"start":{"line":208,"column":8},"end":{"line":210,"column":16}},{"start":{"line":211,"column":8},"end":{"line":213,"column":16}},{"start":{"line":214,"column":8},"end":{"line":225,"column":9}},{"start":{"line":226,"column":8},"end":{"line":228,"column":16}},{"start":{"line":229,"column":8},"end":{"line":231,"column":16}},{"start":{"line":232,"column":8},"end":{"line":234,"column":16}},{"start":{"line":235,"column":8},"end":{"line":237,"column":16}},{"start":{"line":238,"column":8},"end":{"line":240,"column":16}},{"start":{"line":241,"column":8},"end":{"line":243,"column":16}}],"line":197},"38":{"loc":{"start":{"line":202,"column":10},"end":{"line":204,"column":11}},"type":"if","locations":[{"start":{"line":202,"column":10},"end":{"line":204,"column":11}},{"start":{},"end":{}}],"line":202},"39":{"loc":{"start":{"line":217,"column":10},"end":{"line":219,"column":11}},"type":"if","locations":[{"start":{"line":217,"column":10},"end":{"line":219,"column":11}},{"start":{},"end":{}}],"line":217},"40":{"loc":{"start":{"line":220,"column":10},"end":{"line":222,"column":11}},"type":"if","locations":[{"start":{"line":220,"column":10},"end":{"line":222,"column":11}},{"start":{},"end":{}}],"line":220},"41":{"loc":{"start":{"line":269,"column":6},"end":{"line":271,"column":7}},"type":"if","locations":[{"start":{"line":269,"column":6},"end":{"line":271,"column":7}},{"start":{},"end":{}}],"line":269},"42":{"loc":{"start":{"line":273,"column":4},"end":{"line":275,"column":5}},"type":"if","locations":[{"start":{"line":273,"column":4},"end":{"line":275,"column":5}},{"start":{},"end":{}}],"line":273}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":11,"7":11,"8":1,"9":0,"10":1,"11":1,"12":11,"13":11,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":1},"f":{"0":1,"1":11,"2":11,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"0":[0,1],"1":[0,1],"2":[11,0],"3":[11,11],"4":[0,11],"5":[0,1],"6":[1,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0,0,0,0,0,0,0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/analysis/parser.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\nimport type { BaseAstNode } from '../ast-node/base-ast-node';\n\nimport type { LambdaNode } from '../ast-node/lambda-node';\nimport { Disposable, Inject, sortRules } from '@univerjs/core';\nimport { ErrorType } from '../../basics/error-type';\nimport {\n    DEFAULT_TOKEN_LAMBDA_FUNCTION_NAME,\n    DEFAULT_TOKEN_LET_FUNCTION_NAME,\n    DEFAULT_TOKEN_TYPE_LAMBDA_PARAMETER,\n    DEFAULT_TOKEN_TYPE_PARAMETER,\n    DEFAULT_TOKEN_TYPE_ROOT,\n    FORCED_RECALCULATION_FUNCTION_NAME,\n} from '../../basics/token-type';\nimport { IFormulaRuntimeService } from '../../services/runtime.service';\nimport { AstRootNode, AstRootNodeFactory } from '../ast-node/ast-root-node';\nimport { ErrorNode } from '../ast-node/base-ast-node';\nimport { ErrorFunctionNode, FunctionNodeFactory } from '../ast-node/function-node';\nimport { LambdaNodeFactory } from '../ast-node/lambda-node';\nimport { LambdaParameterNodeFactory } from '../ast-node/lambda-parameter-node';\nimport { NodeType } from '../ast-node/node-type';\nimport { NullNode } from '../ast-node/null-node';\nimport { OperatorNodeFactory } from '../ast-node/operator-node';\nimport { PrefixNodeFactory } from '../ast-node/prefix-node';\nimport { ReferenceNodeFactory } from '../ast-node/reference-node';\nimport { SuffixNodeFactory } from '../ast-node/suffix-node';\nimport { UnionNodeFactory } from '../ast-node/union-node';\nimport { ValueNodeFactory } from '../ast-node/value-node';\nimport { getAstNodeTopParent } from '../utils/ast-node-tool';\nimport { isChildRunTimeParameter, isFirstChildParameter } from '../utils/function-definition';\nimport { updateLambdaStatement } from '../utils/update-lambda-statement';\nimport { LexerNode } from './lexer-node';\n\nexport class AstTreeBuilder extends Disposable {\n    private _astNodeFactoryList: AstRootNodeFactory[] = [];\n\n    constructor(\n        @IFormulaRuntimeService private readonly _runtimeService: IFormulaRuntimeService,\n        @Inject(AstRootNodeFactory) private readonly _astRootNodeFactory: AstRootNodeFactory,\n        @Inject(FunctionNodeFactory) private readonly _functionNodeFactory: FunctionNodeFactory,\n        @Inject(LambdaNodeFactory) private readonly _lambdaNodeFactory: LambdaNodeFactory,\n        @Inject(LambdaParameterNodeFactory) private readonly _lambdaParameterNodeFactory: LambdaParameterNodeFactory,\n        @Inject(OperatorNodeFactory) private readonly _operatorNodeFactory: OperatorNodeFactory,\n        @Inject(PrefixNodeFactory) private readonly _prefixNodeFactory: PrefixNodeFactory,\n        @Inject(ReferenceNodeFactory) private readonly _referenceNodeFactory: ReferenceNodeFactory,\n        @Inject(SuffixNodeFactory) private readonly _suffixNodeFactory: SuffixNodeFactory,\n        @Inject(UnionNodeFactory) private readonly _unionNodeFactory: UnionNodeFactory,\n        @Inject(ValueNodeFactory) private readonly _valueNodeFactory: ValueNodeFactory\n    ) {\n        super();\n\n        this._initializeAstNode();\n    }\n\n    override dispose(): void {\n        this._astNodeFactoryList.forEach((nodeFactory) => {\n            nodeFactory.dispose();\n        });\n\n        this._astNodeFactoryList = [];\n    }\n\n    parse(lexerNode: LexerNode) {\n        const astNode = new AstRootNode(DEFAULT_TOKEN_TYPE_ROOT);\n        const node = this._parse(lexerNode, astNode);\n\n        /**\n         * If the lexer node has defined names,\n         * it means that the current formula contains a reference to the defined name.\n         */\n        if (lexerNode.hasDefinedNames()) {\n            node?.setDefinedNames(lexerNode.getDefinedNames());\n        }\n        return node;\n    }\n\n    private _lambdaParameterHandler(lexerNode: LexerNode, parent: LambdaNode) {\n        if (parent.getLambdaId == null) {\n            return ErrorNode.create(ErrorType.VALUE);\n        }\n        const lambdaId = parent.getLambdaId();\n\n        const parentAstNode = new AstRootNode(DEFAULT_TOKEN_TYPE_ROOT);\n\n        // const lambdaRuntime = this._parserDataLoader.getLambdaRuntime();\n        const currentLambdaPrivacyVar = this._runtimeService.getFunctionDefinitionPrivacyVar(lambdaId);\n\n        if (!currentLambdaPrivacyVar) {\n            return false;\n        }\n\n        const currentLambdaPrivacyVarKeys = [...currentLambdaPrivacyVar.keys()];\n\n        const children = lexerNode.getChildren();\n        const childrenCount = children.length;\n\n        for (let i = 0; i < childrenCount; i++) {\n            const item = children[i];\n\n            if (item instanceof LexerNode) {\n                updateLambdaStatement(item, lambdaId, currentLambdaPrivacyVar);\n\n                this._parse(item, parentAstNode);\n\n                const parentChildren = parentAstNode.getChildren();\n                const valueNode = parentChildren[i];\n                if (valueNode != null) {\n                    currentLambdaPrivacyVar.set(currentLambdaPrivacyVarKeys[i], valueNode);\n                }\n            } else {\n                return false;\n            }\n\n            // astNode?.setParent(parentAstNode);\n        }\n\n        // const parentChildren = parentAstNode.getChildren();\n        // const parentChildrenCount = parentChildren.length;\n\n        // for (let i = 0; i < parentChildrenCount; i++) {\n        //     const item = parentChildren[i];\n        //     currentLambdaPrivacyVar.set(currentLambdaPrivacyVarKeys[i], item);\n        // }\n\n        parentAstNode.setParent(parent);\n\n        return parent;\n    }\n\n    private _changeLetToLambda(letLexerNode: LexerNode) {\n        const letChildren = letLexerNode.getChildren();\n\n        const letChildrenCount = letChildren.length;\n        if (letChildrenCount % 2 !== 1 || letChildrenCount === 0) {\n            return;\n        }\n\n        const newLambdaNode = new LexerNode();\n        newLambdaNode.setToken(DEFAULT_TOKEN_LAMBDA_FUNCTION_NAME);\n\n        const newLambdaParameterNode = new LexerNode();\n        newLambdaParameterNode.setToken(DEFAULT_TOKEN_TYPE_LAMBDA_PARAMETER);\n\n        // const lastLetChild = letChildren[letChildrenCount - 1];\n\n        const copyChildren = [...letChildren];\n\n        for (let i = 0; i < letChildrenCount; i++) {\n            const child = copyChildren[i];\n            if (!(child instanceof LexerNode)) {\n                return;\n            }\n\n            if (i % 2 === 0) {\n                child.changeToParent(newLambdaNode);\n            } else {\n                child.changeToParent(newLambdaParameterNode);\n            }\n        }\n\n        newLambdaNode.addChildrenFirst(newLambdaParameterNode);\n\n        newLambdaParameterNode.setParent(newLambdaNode);\n\n        const parent = letLexerNode.getParent();\n\n        parent?.replaceChild(letLexerNode, newLambdaNode);\n\n        return newLambdaNode;\n    }\n\n    // eslint-disable-next-line max-lines-per-function, complexity\n    private _parse(lexerNode: LexerNode, parent: BaseAstNode): Nullable<BaseAstNode> {\n        const children = lexerNode.getChildren();\n        const childrenCount = children.length;\n        const calculateStack: BaseAstNode[] = [];\n        let currentAstNode: Nullable<BaseAstNode> = null;\n        // console.log('lexerNode', lexerNode, children);\n        const token = lexerNode.getToken().trim().toUpperCase();\n        if (token === DEFAULT_TOKEN_LET_FUNCTION_NAME) {\n            /**\n             * Since the let function performs the same as lambda expressions,\n             * here we make a conversion to use only lambda expressions for calculations.\n             */\n            const resultNode: Nullable<LexerNode> = this._changeLetToLambda(lexerNode);\n            if (resultNode != null) {\n                return this._parse(resultNode, parent);\n            }\n\n            // console.log('errorLet', resultNode, currentAstNode, lexerNode);\n            return ErrorNode.create(ErrorType.ERROR);\n        }\n        if (token === DEFAULT_TOKEN_TYPE_PARAMETER) {\n            currentAstNode = parent;\n\n            if (childrenCount === 0) {\n                const nullNode = new NullNode(DEFAULT_TOKEN_TYPE_ROOT);\n\n                nullNode.setParent(parent);\n\n                return currentAstNode;\n            }\n        } else {\n            /**\n             * Process the parameters of the lambda expression, create an execution environment,\n             * allowing parameters to correspond to variables.\n             */\n            if (token === DEFAULT_TOKEN_TYPE_LAMBDA_PARAMETER) {\n                let resultNode: BaseAstNode | false = this._lambdaParameterHandler(lexerNode, parent as LambdaNode);\n                if (resultNode === false) {\n                    // console.log('error1', resultNode, currentAstNode, lexerNode);\n                    resultNode = ErrorNode.create(ErrorType.ERROR);\n                }\n\n                return resultNode;\n            }\n\n            currentAstNode = this._checkAstNode(lexerNode);\n            if (currentAstNode == null) {\n                // console.log('error2', currentAstNode, lexerNode);\n                return ErrorNode.create(ErrorType.NAME);\n            }\n\n            // currentAstNode.setParent(parent);\n            // parent.addChildren(currentAstNode);\n        }\n        // console.log('currentAstNode', currentAstNode.nodeType, currentAstNode, lexerNode);\n        const firstChild = children[0];\n        // let isSkipFirstInLambda = false;\n        // if (\n        //     currentAstNode.getToken().trim().toUpperCase() === DEFAULT_TOKEN_LAMBDA_FUNCTION_NAME &&\n        //     !isFirstChildParameter(firstChild)\n        // ) {\n        //     isSkipFirstInLambda = true;\n        // }\n        for (let i = 0; i < childrenCount; i++) {\n            const item = children[i];\n            /**\n             *  If it is a lambda expression, by default, only the first and last child nodes are valid.\n             * The intermediate nodes have already been processed during the conversion of lambda parameters,\n             * so they need to be skipped here.\n             */\n            if (isFirstChildParameter(firstChild)) {\n                if (i !== 0 && i !== childrenCount - 1) {\n                    continue;\n                }\n            } else if (isChildRunTimeParameter(item)) {\n                if (i !== childrenCount - 1) {\n                    continue;\n                }\n            }\n\n            let astNode: Nullable<BaseAstNode> = null;\n            if (item instanceof LexerNode) {\n                if (item.getToken() === DEFAULT_TOKEN_TYPE_PARAMETER && item.getChildren().length === 0) {\n                    // =trim(      ) is #NAME?\n                    const children = item.getParent()?.getChildren();\n                    if (children && children.length === 1) {\n                        return ErrorNode.create(ErrorType.NAME);\n                    }\n                }\n\n                astNode = this._parse(item, currentAstNode);\n                if (astNode === currentAstNode) {\n                    continue;\n                }\n            } else {\n                astNode = this._checkAstNode(item);\n            }\n\n            if (astNode == null) {\n                // console.log('error3', astNode, currentAstNode, lexerNode);\n                return ErrorNode.create(ErrorType.NAME);\n            }\n\n            astNode = getAstNodeTopParent(astNode);\n\n            if (astNode == null || astNode?.nodeType === NodeType.ERROR) {\n                return astNode;\n            }\n\n            // console.log('bugfix1', astNode, astNode.nodeType, currentAstNode, lexerNode);\n            switch (astNode.nodeType) {\n                // case NodeType.ERROR:\n                //     return astNode;\n                case NodeType.FUNCTION: {\n                    const token = astNode.getToken().trim().toUpperCase();\n                    if (FORCED_RECALCULATION_FUNCTION_NAME.has(token)) {\n                        astNode.setForcedCalculateFunction();\n                    }\n                    calculateStack.push(astNode);\n                    break;\n                }\n                case NodeType.LAMBDA:\n                    calculateStack.push(astNode);\n                    break;\n                case NodeType.LAMBDA_PARAMETER:\n                    calculateStack.push(astNode);\n                    break;\n                case NodeType.OPERATOR: {\n                    const parameterNode1 = calculateStack.pop();\n                    const parameterNode2 = calculateStack.pop();\n\n                    if (parameterNode2) {\n                        parameterNode2.setParent(astNode);\n                    }\n\n                    if (parameterNode1) {\n                        parameterNode1.setParent(astNode);\n                    }\n\n                    calculateStack.push(astNode);\n                    break;\n                }\n                case NodeType.REFERENCE:\n                    // astNode.setRefOffset(this._refOffsetX, this._refOffsetY);\n                    calculateStack.push(astNode);\n                    break;\n                case NodeType.ROOT:\n                    calculateStack.push(astNode);\n                    break;\n                case NodeType.UNION:\n                    calculateStack.push(astNode);\n                    break;\n                case NodeType.VALUE:\n                    calculateStack.push(astNode);\n                    break;\n                case NodeType.PREFIX:\n                    // this._setPrefixRefOffset(astNode);\n                    calculateStack.push(astNode);\n                    break;\n                case NodeType.SUFFIX:\n                    calculateStack.push(astNode);\n                    break;\n            }\n        }\n\n        const calculateStackCount = calculateStack.length;\n\n        for (let i = 0; i < calculateStackCount; i++) {\n            const item = calculateStack[i];\n            item.setParent(currentAstNode);\n        }\n\n        return currentAstNode;\n    }\n\n    // private _setPrefixRefOffset(astNode: BaseAstNode) {\n    //     const children = astNode.getChildren();\n    //     const childrenCount = children.length;\n    //     for (let i = 0; i < childrenCount; i++) {\n    //         const item = children[i];\n    //         if (item.nodeType === NodeType.REFERENCE) {\n    //             item.setRefOffset(this._refOffsetX, this._refOffsetY);\n    //         }\n    //     }\n    // }\n\n    private _checkAstNode(item: LexerNode | string) {\n        let astNode: Nullable<BaseAstNode> = null;\n        const astNodeFactoryListCount = this._astNodeFactoryList.length;\n        for (let x = 0; x < astNodeFactoryListCount; x++) {\n            const astNodeFactory = this._astNodeFactoryList[x];\n            astNode = astNodeFactory.checkAndCreateNodeType(item);\n            if (astNode != null) {\n                break;\n            }\n        }\n\n        if (astNode == null) {\n            return new ErrorFunctionNode();\n        }\n\n        // console.log('astNode111', astNode, item);\n        return astNode;\n    }\n\n    private _initializeAstNode() {\n        this._astNodeFactoryList = [\n            this._astRootNodeFactory,\n            this._functionNodeFactory,\n            this._lambdaNodeFactory,\n            this._lambdaParameterNodeFactory,\n            this._operatorNodeFactory,\n            this._prefixNodeFactory,\n            this._referenceNodeFactory,\n            this._suffixNodeFactory,\n            this._unionNodeFactory,\n            this._valueNodeFactory,\n        ].sort(sortRules);\n    }\n}\n"],"mappings":";;;;;;;;;;;AAoBA,SAAS,YAAY,QAAQ,iBAAiB;AAC9C,SAAS,iBAAiB;AAC1B;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACG;AACP,SAAS,8BAA8B;AACvC,SAAS,aAAa,0BAA0B;AAChD,SAAS,iBAAiB;AAC1B,SAAS,mBAAmB,2BAA2B;AACvD,SAAS,yBAAyB;AAClC,SAAS,kCAAkC;AAC3C,SAAS,gBAAgB;AACzB,SAAS,gBAAgB;AACzB,SAAS,2BAA2B;AACpC,SAAS,yBAAyB;AAClC,SAAS,4BAA4B;AACrC,SAAS,yBAAyB;AAClC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,2BAA2B;AACpC,SAAS,yBAAyB,6BAA6B;AAC/D,SAAS,6BAA6B;AACtC,SAAS,iBAAiB;AAEnB,WAAM,iBAAN,cAA6B,WAAW;AAAA,EAG3C,YAC6C,iBACI,qBACC,sBACF,oBACS,6BACP,sBACF,oBACG,uBACH,oBACD,mBACA,mBAC7C;AACE,UAAM;AAZmC;AACI;AACC;AACF;AACS;AACP;AACF;AACG;AACH;AACD;AACA;AAI3C,SAAK,mBAAmB;AAAA,EAC5B;AAAA,EAlBQ,sBAA4C,CAAC;AAAA,EAoB5C,UAAgB;AACrB,SAAK,oBAAoB,QAAQ,CAAC,gBAAgB;AAC9C,kBAAY,QAAQ;AAAA,IACxB,CAAC;AAED,SAAK,sBAAsB,CAAC;AAAA,EAChC;AAAA,EAEA,MAAM,WAAsB;AACxB,UAAM,UAAU,IAAI,YAAY,uBAAuB;AACvD,UAAM,OAAO,KAAK,OAAO,WAAW,OAAO;AAM3C,QAAI,UAAU,gBAAgB,GAAG;AAC7B,YAAM,gBAAgB,UAAU,gBAAgB,CAAC;AAAA,IACrD;AACA,WAAO;AAAA,EACX;AAAA,EAEQ,wBAAwB,WAAsB,QAAoB;AACtE,QAAI,OAAO,eAAe,MAAM;AAC5B,aAAO,UAAU,OAAO,UAAU,KAAK;AAAA,IAC3C;AACA,UAAM,WAAW,OAAO,YAAY;AAEpC,UAAM,gBAAgB,IAAI,YAAY,uBAAuB;AAG7D,UAAM,0BAA0B,KAAK,gBAAgB,gCAAgC,QAAQ;AAE7F,QAAI,CAAC,yBAAyB;AAC1B,aAAO;AAAA,IACX;AAEA,UAAM,8BAA8B,CAAC,GAAG,wBAAwB,KAAK,CAAC;AAEtE,UAAM,WAAW,UAAU,YAAY;AACvC,UAAM,gBAAgB,SAAS;AAE/B,aAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACpC,YAAM,OAAO,SAAS,CAAC;AAEvB,UAAI,gBAAgB,WAAW;AAC3B,8BAAsB,MAAM,UAAU,uBAAuB;AAE7D,aAAK,OAAO,MAAM,aAAa;AAE/B,cAAM,iBAAiB,cAAc,YAAY;AACjD,cAAM,YAAY,eAAe,CAAC;AAClC,YAAI,aAAa,MAAM;AACnB,kCAAwB,IAAI,4BAA4B,CAAC,GAAG,SAAS;AAAA,QACzE;AAAA,MACJ,OAAO;AACH,eAAO;AAAA,MACX;AAAA,IAGJ;AAUA,kBAAc,UAAU,MAAM;AAE9B,WAAO;AAAA,EACX;AAAA,EAEQ,mBAAmB,cAAyB;AAChD,UAAM,cAAc,aAAa,YAAY;AAE7C,UAAM,mBAAmB,YAAY;AACrC,QAAI,mBAAmB,MAAM,KAAK,qBAAqB,GAAG;AACtD;AAAA,IACJ;AAEA,UAAM,gBAAgB,IAAI,UAAU;AACpC,kBAAc,SAAS,kCAAkC;AAEzD,UAAM,yBAAyB,IAAI,UAAU;AAC7C,2BAAuB,SAAS,mCAAmC;AAInE,UAAM,eAAe,CAAC,GAAG,WAAW;AAEpC,aAAS,IAAI,GAAG,IAAI,kBAAkB,KAAK;AACvC,YAAM,QAAQ,aAAa,CAAC;AAC5B,UAAI,EAAE,iBAAiB,YAAY;AAC/B;AAAA,MACJ;AAEA,UAAI,IAAI,MAAM,GAAG;AACb,cAAM,eAAe,aAAa;AAAA,MACtC,OAAO;AACH,cAAM,eAAe,sBAAsB;AAAA,MAC/C;AAAA,IACJ;AAEA,kBAAc,iBAAiB,sBAAsB;AAErD,2BAAuB,UAAU,aAAa;AAE9C,UAAM,SAAS,aAAa,UAAU;AAEtC,YAAQ,aAAa,cAAc,aAAa;AAEhD,WAAO;AAAA,EACX;AAAA;AAAA,EAGQ,OAAO,WAAsB,QAA4C;AAC7E,UAAM,WAAW,UAAU,YAAY;AACvC,UAAM,gBAAgB,SAAS;AAC/B,UAAM,iBAAgC,CAAC;AACvC,QAAI,iBAAwC;AAE5C,UAAM,QAAQ,UAAU,SAAS,EAAE,KAAK,EAAE,YAAY;AACtD,QAAI,UAAU,iCAAiC;AAK3C,YAAM,aAAkC,KAAK,mBAAmB,SAAS;AACzE,UAAI,cAAc,MAAM;AACpB,eAAO,KAAK,OAAO,YAAY,MAAM;AAAA,MACzC;AAGA,aAAO,UAAU,OAAO,UAAU,KAAK;AAAA,IAC3C;AACA,QAAI,UAAU,8BAA8B;AACxC,uBAAiB;AAEjB,UAAI,kBAAkB,GAAG;AACrB,cAAM,WAAW,IAAI,SAAS,uBAAuB;AAErD,iBAAS,UAAU,MAAM;AAEzB,eAAO;AAAA,MACX;AAAA,IACJ,OAAO;AAKH,UAAI,UAAU,qCAAqC;AAC/C,YAAI,aAAkC,KAAK,wBAAwB,WAAW,MAAoB;AAClG,YAAI,eAAe,OAAO;AAEtB,uBAAa,UAAU,OAAO,UAAU,KAAK;AAAA,QACjD;AAEA,eAAO;AAAA,MACX;AAEA,uBAAiB,KAAK,cAAc,SAAS;AAC7C,UAAI,kBAAkB,MAAM;AAExB,eAAO,UAAU,OAAO,UAAU,IAAI;AAAA,MAC1C;AAAA,IAIJ;AAEA,UAAM,aAAa,SAAS,CAAC;AAQ7B,aAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACpC,YAAM,OAAO,SAAS,CAAC;AAMvB,UAAI,sBAAsB,UAAU,GAAG;AACnC,YAAI,MAAM,KAAK,MAAM,gBAAgB,GAAG;AACpC;AAAA,QACJ;AAAA,MACJ,WAAW,wBAAwB,IAAI,GAAG;AACtC,YAAI,MAAM,gBAAgB,GAAG;AACzB;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,UAAiC;AACrC,UAAI,gBAAgB,WAAW;AAC3B,YAAI,KAAK,SAAS,MAAM,gCAAgC,KAAK,YAAY,EAAE,WAAW,GAAG;AAErF,gBAAMA,YAAW,KAAK,UAAU,GAAG,YAAY;AAC/C,cAAIA,aAAYA,UAAS,WAAW,GAAG;AACnC,mBAAO,UAAU,OAAO,UAAU,IAAI;AAAA,UAC1C;AAAA,QACJ;AAEA,kBAAU,KAAK,OAAO,MAAM,cAAc;AAC1C,YAAI,YAAY,gBAAgB;AAC5B;AAAA,QACJ;AAAA,MACJ,OAAO;AACH,kBAAU,KAAK,cAAc,IAAI;AAAA,MACrC;AAEA,UAAI,WAAW,MAAM;AAEjB,eAAO,UAAU,OAAO,UAAU,IAAI;AAAA,MAC1C;AAEA,gBAAU,oBAAoB,OAAO;AAErC,UAAI,WAAW,QAAQ,SAAS,aAAa,SAAS,OAAO;AACzD,eAAO;AAAA,MACX;AAGA,cAAQ,QAAQ,UAAU;AAAA;AAAA;AAAA,QAGtB,KAAK,SAAS,UAAU;AACpB,gBAAMC,SAAQ,QAAQ,SAAS,EAAE,KAAK,EAAE,YAAY;AACpD,cAAI,mCAAmC,IAAIA,MAAK,GAAG;AAC/C,oBAAQ,2BAA2B;AAAA,UACvC;AACA,yBAAe,KAAK,OAAO;AAC3B;AAAA,QACJ;AAAA,QACA,KAAK,SAAS;AACV,yBAAe,KAAK,OAAO;AAC3B;AAAA,QACJ,KAAK,SAAS;AACV,yBAAe,KAAK,OAAO;AAC3B;AAAA,QACJ,KAAK,SAAS,UAAU;AACpB,gBAAM,iBAAiB,eAAe,IAAI;AAC1C,gBAAM,iBAAiB,eAAe,IAAI;AAE1C,cAAI,gBAAgB;AAChB,2BAAe,UAAU,OAAO;AAAA,UACpC;AAEA,cAAI,gBAAgB;AAChB,2BAAe,UAAU,OAAO;AAAA,UACpC;AAEA,yBAAe,KAAK,OAAO;AAC3B;AAAA,QACJ;AAAA,QACA,KAAK,SAAS;AAEV,yBAAe,KAAK,OAAO;AAC3B;AAAA,QACJ,KAAK,SAAS;AACV,yBAAe,KAAK,OAAO;AAC3B;AAAA,QACJ,KAAK,SAAS;AACV,yBAAe,KAAK,OAAO;AAC3B;AAAA,QACJ,KAAK,SAAS;AACV,yBAAe,KAAK,OAAO;AAC3B;AAAA,QACJ,KAAK,SAAS;AAEV,yBAAe,KAAK,OAAO;AAC3B;AAAA,QACJ,KAAK,SAAS;AACV,yBAAe,KAAK,OAAO;AAC3B;AAAA,MACR;AAAA,IACJ;AAEA,UAAM,sBAAsB,eAAe;AAE3C,aAAS,IAAI,GAAG,IAAI,qBAAqB,KAAK;AAC1C,YAAM,OAAO,eAAe,CAAC;AAC7B,WAAK,UAAU,cAAc;AAAA,IACjC;AAEA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaQ,cAAc,MAA0B;AAC5C,QAAI,UAAiC;AACrC,UAAM,0BAA0B,KAAK,oBAAoB;AACzD,aAAS,IAAI,GAAG,IAAI,yBAAyB,KAAK;AAC9C,YAAM,iBAAiB,KAAK,oBAAoB,CAAC;AACjD,gBAAU,eAAe,uBAAuB,IAAI;AACpD,UAAI,WAAW,MAAM;AACjB;AAAA,MACJ;AAAA,IACJ;AAEA,QAAI,WAAW,MAAM;AACjB,aAAO,IAAI,kBAAkB;AAAA,IACjC;AAGA,WAAO;AAAA,EACX;AAAA,EAEQ,qBAAqB;AACzB,SAAK,sBAAsB;AAAA,MACvB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACT,EAAE,KAAK,SAAS;AAAA,EACpB;AACJ;AAtWa,iBAAN;AAAA,EAIE;AAAA,EACA,0BAAO,kBAAkB;AAAA,EACzB,0BAAO,mBAAmB;AAAA,EAC1B,0BAAO,iBAAiB;AAAA,EACxB,0BAAO,0BAA0B;AAAA,EACjC,0BAAO,mBAAmB;AAAA,EAC1B,0BAAO,iBAAiB;AAAA,EACxB,0BAAO,oBAAoB;AAAA,EAC3B,0BAAO,iBAAiB;AAAA,EACxB,0BAAO,gBAAgB;AAAA,EACvB,2BAAO,gBAAgB;AAAA,GAdnB;","names":["children","token"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"017bea4ee2f342f9f503358733d30e27ba3200ae"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/dependency-manager.service.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/dependency-manager.service.ts","statementMap":{"0":{"start":{"line":4,"column":4},"end":{"line":4,"column":47}},"1":{"start":{"line":7,"column":4},"end":{"line":7,"column":47}},"2":{"start":{"line":10,"column":4},"end":{"line":10,"column":47}},"3":{"start":{"line":12,"column":38},"end":{"line":12,"column":47}},"4":{"start":{"line":14,"column":40},"end":{"line":14,"column":49}},"5":{"start":{"line":16,"column":33},"end":{"line":16,"column":42}},"6":{"start":{"line":18,"column":36},"end":{"line":18,"column":45}},"7":{"start":{"line":20,"column":46},"end":{"line":20,"column":55}},"8":{"start":{"line":21,"column":26},"end":{"line":21,"column":37}},"9":{"start":{"line":22,"column":26},"end":{"line":22,"column":27}},"10":{"start":{"line":24,"column":4},"end":{"line":24,"column":47}},"11":{"start":{"line":27,"column":4},"end":{"line":27,"column":47}},"12":{"start":{"line":30,"column":4},"end":{"line":30,"column":47}},"13":{"start":{"line":33,"column":4},"end":{"line":33,"column":47}},"14":{"start":{"line":36,"column":4},"end":{"line":36,"column":47}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":47}},"16":{"start":{"line":42,"column":4},"end":{"line":42,"column":47}},"17":{"start":{"line":45,"column":4},"end":{"line":45,"column":47}},"18":{"start":{"line":48,"column":4},"end":{"line":48,"column":47}},"19":{"start":{"line":51,"column":4},"end":{"line":51,"column":47}},"20":{"start":{"line":54,"column":4},"end":{"line":54,"column":47}},"21":{"start":{"line":57,"column":4},"end":{"line":57,"column":72}},"22":{"start":{"line":60,"column":4},"end":{"line":60,"column":35}},"23":{"start":{"line":63,"column":4},"end":{"line":63,"column":76}},"24":{"start":{"line":66,"column":4},"end":{"line":66,"column":50}},"25":{"start":{"line":69,"column":4},"end":{"line":69,"column":57}},"26":{"start":{"line":72,"column":4},"end":{"line":72,"column":59}},"27":{"start":{"line":75,"column":4},"end":{"line":75,"column":78}},"28":{"start":{"line":78,"column":4},"end":{"line":78,"column":78}},"29":{"start":{"line":81,"column":25},"end":{"line":81,"column":27}},"30":{"start":{"line":82,"column":4},"end":{"line":91,"column":5}},"31":{"start":{"line":82,"column":17},"end":{"line":82,"column":18}},"32":{"start":{"line":83,"column":31},"end":{"line":83,"column":48}},"33":{"start":{"line":84,"column":41},"end":{"line":84,"column":57}},"34":{"start":{"line":85,"column":6},"end":{"line":90,"column":9}},"35":{"start":{"line":92,"column":4},"end":{"line":92,"column":56}},"36":{"start":{"line":93,"column":4},"end":{"line":93,"column":30}},"37":{"start":{"line":96,"column":15},"end":{"line":96,"column":41}},"38":{"start":{"line":97,"column":4},"end":{"line":97,"column":33}},"39":{"start":{"line":98,"column":4},"end":{"line":98,"column":14}},"40":{"start":{"line":101,"column":4},"end":{"line":101,"column":47}},"41":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"42":{"start":{"line":105,"column":6},"end":{"line":105,"column":66}},"43":{"start":{"line":107,"column":20},"end":{"line":107,"column":52}},"44":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"45":{"start":{"line":109,"column":6},"end":{"line":109,"column":58}},"46":{"start":{"line":111,"column":20},"end":{"line":111,"column":44}},"47":{"start":{"line":112,"column":4},"end":{"line":112,"column":24}},"48":{"start":{"line":115,"column":19},"end":{"line":115,"column":30}},"49":{"start":{"line":116,"column":25},"end":{"line":116,"column":54}},"50":{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},"51":{"start":{"line":118,"column":6},"end":{"line":118,"column":61}},"52":{"start":{"line":123,"column":32},"end":{"line":123,"column":41}},"53":{"start":{"line":125,"column":4},"end":{"line":125,"column":20}},"54":{"start":{"line":126,"column":4},"end":{"line":126,"column":17}},"55":{"start":{"line":129,"column":21},"end":{"line":129,"column":38}},"56":{"start":{"line":130,"column":4},"end":{"line":133,"column":5}},"57":{"start":{"line":131,"column":6},"end":{"line":131,"column":62}},"58":{"start":{"line":132,"column":6},"end":{"line":132,"column":22}},"59":{"start":{"line":134,"column":4},"end":{"line":134,"column":60}},"60":{"start":{"line":135,"column":4},"end":{"line":135,"column":63}},"61":{"start":{"line":136,"column":4},"end":{"line":136,"column":20}},"62":{"start":{"line":144,"column":49},"end":{"line":144,"column":58}},"63":{"start":{"line":145,"column":4},"end":{"line":148,"column":5}},"64":{"start":{"line":145,"column":17},"end":{"line":145,"column":18}},"65":{"start":{"line":146,"column":19},"end":{"line":146,"column":40}},"66":{"start":{"line":147,"column":6},"end":{"line":147,"column":50}},"67":{"start":{"line":149,"column":4},"end":{"line":159,"column":5}},"68":{"start":{"line":149,"column":17},"end":{"line":149,"column":18}},"69":{"start":{"line":150,"column":19},"end":{"line":150,"column":30}},"70":{"start":{"line":151,"column":24},"end":{"line":151,"column":42}},"71":{"start":{"line":152,"column":28},"end":{"line":152,"column":76}},"72":{"start":{"line":153,"column":6},"end":{"line":158,"column":7}},"73":{"start":{"line":154,"column":34},"end":{"line":154,"column":62}},"74":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"75":{"start":{"line":156,"column":10},"end":{"line":156,"column":47}},"76":{"start":{"line":160,"column":4},"end":{"line":160,"column":33}},"77":{"start":{"line":168,"column":39},"end":{"line":168,"column":48}},"78":{"start":{"line":169,"column":4},"end":{"line":172,"column":5}},"79":{"start":{"line":169,"column":17},"end":{"line":169,"column":18}},"80":{"start":{"line":170,"column":19},"end":{"line":170,"column":30}},"81":{"start":{"line":171,"column":6},"end":{"line":171,"column":40}},"82":{"start":{"line":173,"column":4},"end":{"line":183,"column":5}},"83":{"start":{"line":173,"column":17},"end":{"line":173,"column":18}},"84":{"start":{"line":174,"column":19},"end":{"line":174,"column":37}},"85":{"start":{"line":175,"column":24},"end":{"line":175,"column":42}},"86":{"start":{"line":176,"column":28},"end":{"line":176,"column":76}},"87":{"start":{"line":177,"column":6},"end":{"line":182,"column":7}},"88":{"start":{"line":178,"column":24},"end":{"line":178,"column":42}},"89":{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},"90":{"start":{"line":180,"column":10},"end":{"line":180,"column":37}},"91":{"start":{"line":184,"column":4},"end":{"line":184,"column":23}},"92":{"start":{"line":191,"column":18},"end":{"line":191,"column":20}},"93":{"start":{"line":192,"column":4},"end":{"line":195,"column":7}},"94":{"start":{"line":193,"column":6},"end":{"line":193,"column":24}},"95":{"start":{"line":194,"column":6},"end":{"line":194,"column":23}},"96":{"start":{"line":196,"column":4},"end":{"line":196,"column":17}},"97":{"start":{"line":199,"column":4},"end":{"line":199,"column":40}},"98":{"start":{"line":202,"column":4},"end":{"line":202,"column":35}},"99":{"start":{"line":203,"column":4},"end":{"line":203,"column":37}},"100":{"start":{"line":204,"column":4},"end":{"line":204,"column":30}},"101":{"start":{"line":205,"column":4},"end":{"line":205,"column":33}},"102":{"start":{"line":206,"column":4},"end":{"line":206,"column":43}},"103":{"start":{"line":207,"column":4},"end":{"line":207,"column":39}},"104":{"start":{"line":208,"column":4},"end":{"line":208,"column":29}},"105":{"start":{"line":209,"column":4},"end":{"line":209,"column":33}},"106":{"start":{"line":212,"column":4},"end":{"line":214,"column":5}},"107":{"start":{"line":213,"column":6},"end":{"line":213,"column":68}},"108":{"start":{"line":215,"column":20},"end":{"line":215,"column":54}},"109":{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},"110":{"start":{"line":217,"column":6},"end":{"line":217,"column":54}},"111":{"start":{"line":219,"column":21},"end":{"line":219,"column":41}},"112":{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},"113":{"start":{"line":221,"column":6},"end":{"line":221,"column":50}},"114":{"start":{"line":223,"column":26},"end":{"line":223,"column":49}},"115":{"start":{"line":224,"column":4},"end":{"line":224,"column":104}},"116":{"start":{"line":225,"column":4},"end":{"line":225,"column":40}},"117":{"start":{"line":228,"column":20},"end":{"line":228,"column":54}},"118":{"start":{"line":229,"column":4},"end":{"line":250,"column":5}},"119":{"start":{"line":230,"column":23},"end":{"line":230,"column":43}},"120":{"start":{"line":231,"column":6},"end":{"line":243,"column":9}},"121":{"start":{"line":232,"column":24},"end":{"line":232,"column":47}},"122":{"start":{"line":233,"column":8},"end":{"line":235,"column":9}},"123":{"start":{"line":234,"column":10},"end":{"line":234,"column":17}},"124":{"start":{"line":236,"column":8},"end":{"line":240,"column":11}},"125":{"start":{"line":237,"column":10},"end":{"line":237,"column":51}},"126":{"start":{"line":238,"column":10},"end":{"line":238,"column":68}},"127":{"start":{"line":239,"column":10},"end":{"line":239,"column":41}},"128":{"start":{"line":241,"column":8},"end":{"line":241,"column":35}},"129":{"start":{"line":242,"column":8},"end":{"line":242,"column":57}},"130":{"start":{"line":244,"column":6},"end":{"line":246,"column":7}},"131":{"start":{"line":245,"column":8},"end":{"line":245,"column":32}},"132":{"start":{"line":247,"column":6},"end":{"line":249,"column":7}},"133":{"start":{"line":248,"column":8},"end":{"line":248,"column":46}},"134":{"start":{"line":253,"column":20},"end":{"line":253,"column":54}},"135":{"start":{"line":254,"column":4},"end":{"line":292,"column":5}},"136":{"start":{"line":255,"column":23},"end":{"line":255,"column":43}},"137":{"start":{"line":256,"column":6},"end":{"line":256,"column":60}},"138":{"start":{"line":257,"column":6},"end":{"line":270,"column":7}},"139":{"start":{"line":258,"column":31},"end":{"line":258,"column":54}},"140":{"start":{"line":259,"column":8},"end":{"line":261,"column":9}},"141":{"start":{"line":260,"column":10},"end":{"line":260,"column":19}},"142":{"start":{"line":262,"column":8},"end":{"line":268,"column":11}},"143":{"start":{"line":263,"column":23},"end":{"line":263,"column":51}},"144":{"start":{"line":264,"column":10},"end":{"line":267,"column":11}},"145":{"start":{"line":265,"column":12},"end":{"line":265,"column":46}},"146":{"start":{"line":266,"column":12},"end":{"line":266,"column":43}},"147":{"start":{"line":269,"column":8},"end":{"line":269,"column":57}},"148":{"start":{"line":271,"column":6},"end":{"line":271,"column":23}},"149":{"start":{"line":272,"column":11},"end":{"line":292,"column":5}},"150":{"start":{"line":273,"column":6},"end":{"line":290,"column":7}},"151":{"start":{"line":274,"column":25},"end":{"line":274,"column":46}},"152":{"start":{"line":275,"column":8},"end":{"line":275,"column":63}},"153":{"start":{"line":276,"column":8},"end":{"line":289,"column":9}},"154":{"start":{"line":277,"column":33},"end":{"line":277,"column":56}},"155":{"start":{"line":278,"column":10},"end":{"line":280,"column":11}},"156":{"start":{"line":279,"column":12},"end":{"line":279,"column":21}},"157":{"start":{"line":281,"column":10},"end":{"line":287,"column":13}},"158":{"start":{"line":282,"column":25},"end":{"line":282,"column":53}},"159":{"start":{"line":283,"column":12},"end":{"line":286,"column":13}},"160":{"start":{"line":284,"column":14},"end":{"line":284,"column":48}},"161":{"start":{"line":285,"column":14},"end":{"line":285,"column":45}},"162":{"start":{"line":288,"column":10},"end":{"line":288,"column":59}},"163":{"start":{"line":291,"column":6},"end":{"line":291,"column":44}},"164":{"start":{"line":295,"column":4},"end":{"line":297,"column":5}},"165":{"start":{"line":296,"column":6},"end":{"line":296,"column":70}},"166":{"start":{"line":298,"column":20},"end":{"line":298,"column":56}},"167":{"start":{"line":299,"column":4},"end":{"line":301,"column":5}},"168":{"start":{"line":300,"column":6},"end":{"line":300,"column":54}},"169":{"start":{"line":302,"column":21},"end":{"line":302,"column":41}},"170":{"start":{"line":303,"column":4},"end":{"line":303,"column":51}},"171":{"start":{"line":304,"column":4},"end":{"line":304,"column":40}},"172":{"start":{"line":307,"column":20},"end":{"line":307,"column":56}},"173":{"start":{"line":308,"column":4},"end":{"line":320,"column":5}},"174":{"start":{"line":309,"column":23},"end":{"line":309,"column":43}},"175":{"start":{"line":310,"column":6},"end":{"line":319,"column":9}},"176":{"start":{"line":311,"column":29},"end":{"line":311,"column":52}},"177":{"start":{"line":312,"column":8},"end":{"line":314,"column":9}},"178":{"start":{"line":313,"column":10},"end":{"line":313,"column":17}},"179":{"start":{"line":315,"column":8},"end":{"line":315,"column":55}},"180":{"start":{"line":316,"column":8},"end":{"line":316,"column":35}},"181":{"start":{"line":317,"column":8},"end":{"line":317,"column":72}},"182":{"start":{"line":318,"column":8},"end":{"line":318,"column":45}},"183":{"start":{"line":323,"column":20},"end":{"line":323,"column":56}},"184":{"start":{"line":324,"column":4},"end":{"line":347,"column":5}},"185":{"start":{"line":325,"column":23},"end":{"line":325,"column":43}},"186":{"start":{"line":326,"column":6},"end":{"line":326,"column":60}},"187":{"start":{"line":327,"column":6},"end":{"line":333,"column":9}},"188":{"start":{"line":328,"column":8},"end":{"line":330,"column":9}},"189":{"start":{"line":329,"column":10},"end":{"line":329,"column":17}},"190":{"start":{"line":331,"column":8},"end":{"line":331,"column":73}},"191":{"start":{"line":332,"column":8},"end":{"line":332,"column":46}},"192":{"start":{"line":334,"column":6},"end":{"line":334,"column":23}},"193":{"start":{"line":335,"column":11},"end":{"line":347,"column":5}},"194":{"start":{"line":336,"column":6},"end":{"line":345,"column":9}},"195":{"start":{"line":337,"column":8},"end":{"line":337,"column":63}},"196":{"start":{"line":338,"column":8},"end":{"line":344,"column":11}},"197":{"start":{"line":339,"column":10},"end":{"line":341,"column":11}},"198":{"start":{"line":340,"column":12},"end":{"line":340,"column":19}},"199":{"start":{"line":342,"column":10},"end":{"line":342,"column":75}},"200":{"start":{"line":343,"column":10},"end":{"line":343,"column":48}},"201":{"start":{"line":346,"column":6},"end":{"line":346,"column":46}},"202":{"start":{"line":350,"column":4},"end":{"line":352,"column":5}},"203":{"start":{"line":351,"column":6},"end":{"line":351,"column":63}},"204":{"start":{"line":353,"column":20},"end":{"line":353,"column":49}},"205":{"start":{"line":354,"column":4},"end":{"line":356,"column":5}},"206":{"start":{"line":355,"column":6},"end":{"line":355,"column":47}},"207":{"start":{"line":357,"column":24},"end":{"line":357,"column":44}},"208":{"start":{"line":358,"column":4},"end":{"line":358,"column":61}},"209":{"start":{"line":359,"column":4},"end":{"line":359,"column":40}},"210":{"start":{"line":362,"column":20},"end":{"line":362,"column":49}},"211":{"start":{"line":363,"column":4},"end":{"line":373,"column":5}},"212":{"start":{"line":364,"column":26},"end":{"line":364,"column":46}},"213":{"start":{"line":365,"column":27},"end":{"line":365,"column":60}},"214":{"start":{"line":366,"column":6},"end":{"line":368,"column":7}},"215":{"start":{"line":367,"column":8},"end":{"line":367,"column":15}},"216":{"start":{"line":369,"column":6},"end":{"line":369,"column":53}},"217":{"start":{"line":370,"column":6},"end":{"line":370,"column":47}},"218":{"start":{"line":371,"column":6},"end":{"line":371,"column":70}},"219":{"start":{"line":372,"column":6},"end":{"line":372,"column":43}},"220":{"start":{"line":376,"column":20},"end":{"line":376,"column":49}},"221":{"start":{"line":377,"column":4},"end":{"line":400,"column":5}},"222":{"start":{"line":378,"column":26},"end":{"line":378,"column":46}},"223":{"start":{"line":379,"column":6},"end":{"line":379,"column":60}},"224":{"start":{"line":380,"column":6},"end":{"line":386,"column":9}},"225":{"start":{"line":381,"column":8},"end":{"line":383,"column":9}},"226":{"start":{"line":382,"column":10},"end":{"line":382,"column":22}},"227":{"start":{"line":384,"column":8},"end":{"line":384,"column":66}},"228":{"start":{"line":385,"column":8},"end":{"line":385,"column":39}},"229":{"start":{"line":387,"column":6},"end":{"line":387,"column":26}},"230":{"start":{"line":388,"column":11},"end":{"line":400,"column":5}},"231":{"start":{"line":389,"column":6},"end":{"line":398,"column":9}},"232":{"start":{"line":390,"column":8},"end":{"line":390,"column":63}},"233":{"start":{"line":391,"column":8},"end":{"line":397,"column":11}},"234":{"start":{"line":392,"column":10},"end":{"line":394,"column":11}},"235":{"start":{"line":393,"column":12},"end":{"line":393,"column":24}},"236":{"start":{"line":395,"column":10},"end":{"line":395,"column":68}},"237":{"start":{"line":396,"column":10},"end":{"line":396,"column":41}},"238":{"start":{"line":399,"column":6},"end":{"line":399,"column":39}},"239":{"start":{"line":408,"column":4},"end":{"line":410,"column":5}},"240":{"start":{"line":409,"column":6},"end":{"line":409,"column":13}},"241":{"start":{"line":411,"column":20},"end":{"line":411,"column":45}},"242":{"start":{"line":412,"column":21},"end":{"line":412,"column":47}},"243":{"start":{"line":413,"column":23},"end":{"line":413,"column":39}},"244":{"start":{"line":414,"column":4},"end":{"line":417,"column":5}},"245":{"start":{"line":415,"column":21},"end":{"line":415,"column":49}},"246":{"start":{"line":416,"column":6},"end":{"line":416,"column":56}},"247":{"start":{"line":418,"column":4},"end":{"line":421,"column":5}},"248":{"start":{"line":419,"column":20},"end":{"line":419,"column":47}},"249":{"start":{"line":420,"column":6},"end":{"line":420,"column":54}},"250":{"start":{"line":422,"column":4},"end":{"line":422,"column":32}},"251":{"start":{"line":425,"column":4},"end":{"line":427,"column":5}},"252":{"start":{"line":426,"column":6},"end":{"line":426,"column":13}},"253":{"start":{"line":428,"column":25},"end":{"line":428,"column":53}},"254":{"start":{"line":429,"column":4},"end":{"line":442,"column":5}},"255":{"start":{"line":430,"column":27},"end":{"line":430,"column":29}},"256":{"start":{"line":431,"column":6},"end":{"line":440,"column":7}},"257":{"start":{"line":431,"column":19},"end":{"line":431,"column":20}},"258":{"start":{"line":432,"column":33},"end":{"line":432,"column":58}},"259":{"start":{"line":433,"column":43},"end":{"line":433,"column":59}},"260":{"start":{"line":434,"column":8},"end":{"line":439,"column":11}},"261":{"start":{"line":441,"column":6},"end":{"line":441,"column":58}},"262":{"start":{"line":445,"column":20},"end":{"line":445,"column":52}},"263":{"start":{"line":446,"column":4},"end":{"line":456,"column":5}},"264":{"start":{"line":447,"column":22},"end":{"line":447,"column":46}},"265":{"start":{"line":448,"column":6},"end":{"line":455,"column":7}},"266":{"start":{"line":449,"column":8},"end":{"line":453,"column":9}},"267":{"start":{"line":450,"column":10},"end":{"line":450,"column":51}},"268":{"start":{"line":451,"column":10},"end":{"line":451,"column":68}},"269":{"start":{"line":452,"column":10},"end":{"line":452,"column":41}},"270":{"start":{"line":454,"column":8},"end":{"line":454,"column":24}},"271":{"start":{"line":459,"column":4},"end":{"line":461,"column":5}},"272":{"start":{"line":460,"column":6},"end":{"line":460,"column":13}},"273":{"start":{"line":462,"column":4},"end":{"line":462,"column":36}},"274":{"start":{"line":465,"column":4},"end":{"line":465,"column":44}},"275":{"start":{"line":468,"column":41},"end":{"line":470,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":2},"end":{"line":3,"column":3}},"loc":{"start":{"line":3,"column":59},"end":{"line":5,"column":3}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":2},"end":{"line":6,"column":3}},"loc":{"start":{"line":6,"column":22},"end":{"line":8,"column":3}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":2},"end":{"line":9,"column":3}},"loc":{"start":{"line":9,"column":15},"end":{"line":11,"column":3}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":2},"end":{"line":23,"column":3}},"loc":{"start":{"line":23,"column":10},"end":{"line":25,"column":3}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":2},"end":{"line":26,"column":3}},"loc":{"start":{"line":26,"column":72},"end":{"line":28,"column":3}},"line":26},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":2},"end":{"line":29,"column":3}},"loc":{"start":{"line":29,"column":59},"end":{"line":31,"column":3}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":32,"column":2},"end":{"line":32,"column":3}},"loc":{"start":{"line":32,"column":47},"end":{"line":34,"column":3}},"line":32},"7":{"name":"(anonymous_7)","decl":{"start":{"line":35,"column":2},"end":{"line":35,"column":3}},"loc":{"start":{"line":35,"column":74},"end":{"line":37,"column":3}},"line":35},"8":{"name":"(anonymous_8)","decl":{"start":{"line":38,"column":2},"end":{"line":38,"column":3}},"loc":{"start":{"line":38,"column":62},"end":{"line":40,"column":3}},"line":38},"9":{"name":"(anonymous_9)","decl":{"start":{"line":41,"column":2},"end":{"line":41,"column":3}},"loc":{"start":{"line":41,"column":49},"end":{"line":43,"column":3}},"line":41},"10":{"name":"(anonymous_10)","decl":{"start":{"line":44,"column":2},"end":{"line":44,"column":3}},"loc":{"start":{"line":44,"column":69},"end":{"line":46,"column":3}},"line":44},"11":{"name":"(anonymous_11)","decl":{"start":{"line":47,"column":2},"end":{"line":47,"column":3}},"loc":{"start":{"line":47,"column":56},"end":{"line":49,"column":3}},"line":47},"12":{"name":"(anonymous_12)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":42},"end":{"line":52,"column":3}},"line":50},"13":{"name":"(anonymous_13)","decl":{"start":{"line":53,"column":2},"end":{"line":53,"column":3}},"loc":{"start":{"line":53,"column":60},"end":{"line":55,"column":3}},"line":53},"14":{"name":"(anonymous_14)","decl":{"start":{"line":56,"column":2},"end":{"line":56,"column":3}},"loc":{"start":{"line":56,"column":42},"end":{"line":58,"column":3}},"line":56},"15":{"name":"(anonymous_15)","decl":{"start":{"line":59,"column":2},"end":{"line":59,"column":3}},"loc":{"start":{"line":59,"column":26},"end":{"line":61,"column":3}},"line":59},"16":{"name":"(anonymous_16)","decl":{"start":{"line":62,"column":2},"end":{"line":62,"column":3}},"loc":{"start":{"line":62,"column":56},"end":{"line":64,"column":3}},"line":62},"17":{"name":"(anonymous_17)","decl":{"start":{"line":65,"column":2},"end":{"line":65,"column":3}},"loc":{"start":{"line":65,"column":47},"end":{"line":67,"column":3}},"line":65},"18":{"name":"(anonymous_18)","decl":{"start":{"line":68,"column":2},"end":{"line":68,"column":3}},"loc":{"start":{"line":68,"column":41},"end":{"line":70,"column":3}},"line":68},"19":{"name":"(anonymous_19)","decl":{"start":{"line":71,"column":2},"end":{"line":71,"column":3}},"loc":{"start":{"line":71,"column":51},"end":{"line":73,"column":3}},"line":71},"20":{"name":"(anonymous_20)","decl":{"start":{"line":74,"column":2},"end":{"line":74,"column":3}},"loc":{"start":{"line":74,"column":58},"end":{"line":76,"column":3}},"line":74},"21":{"name":"(anonymous_21)","decl":{"start":{"line":77,"column":2},"end":{"line":77,"column":3}},"loc":{"start":{"line":77,"column":53},"end":{"line":79,"column":3}},"line":77},"22":{"name":"(anonymous_22)","decl":{"start":{"line":80,"column":2},"end":{"line":80,"column":3}},"loc":{"start":{"line":80,"column":32},"end":{"line":94,"column":3}},"line":80},"23":{"name":"(anonymous_23)","decl":{"start":{"line":95,"column":2},"end":{"line":95,"column":3}},"loc":{"start":{"line":95,"column":18},"end":{"line":99,"column":3}},"line":95},"24":{"name":"(anonymous_24)","decl":{"start":{"line":100,"column":2},"end":{"line":100,"column":3}},"loc":{"start":{"line":100,"column":23},"end":{"line":102,"column":3}},"line":100},"25":{"name":"(anonymous_25)","decl":{"start":{"line":103,"column":2},"end":{"line":103,"column":3}},"loc":{"start":{"line":103,"column":47},"end":{"line":113,"column":3}},"line":103},"26":{"name":"(anonymous_26)","decl":{"start":{"line":114,"column":2},"end":{"line":114,"column":3}},"loc":{"start":{"line":114,"column":48},"end":{"line":120,"column":3}},"line":114},"27":{"name":"(anonymous_27)","decl":{"start":{"line":124,"column":2},"end":{"line":124,"column":3}},"loc":{"start":{"line":124,"column":12},"end":{"line":127,"column":3}},"line":124},"28":{"name":"(anonymous_28)","decl":{"start":{"line":128,"column":2},"end":{"line":128,"column":3}},"loc":{"start":{"line":128,"column":64},"end":{"line":137,"column":3}},"line":128},"29":{"name":"(anonymous_29)","decl":{"start":{"line":143,"column":2},"end":{"line":143,"column":3}},"loc":{"start":{"line":143,"column":53},"end":{"line":161,"column":3}},"line":143},"30":{"name":"(anonymous_30)","decl":{"start":{"line":167,"column":2},"end":{"line":167,"column":3}},"loc":{"start":{"line":167,"column":53},"end":{"line":185,"column":3}},"line":167},"31":{"name":"(anonymous_31)","decl":{"start":{"line":190,"column":2},"end":{"line":190,"column":3}},"loc":{"start":{"line":190,"column":15},"end":{"line":197,"column":3}},"line":190},"32":{"name":"(anonymous_32)","decl":{"start":{"line":192,"column":29},"end":{"line":192,"column":30}},"loc":{"start":{"line":192,"column":39},"end":{"line":195,"column":5}},"line":192},"33":{"name":"(anonymous_33)","decl":{"start":{"line":198,"column":2},"end":{"line":198,"column":3}},"loc":{"start":{"line":198,"column":22},"end":{"line":200,"column":3}},"line":198},"34":{"name":"(anonymous_34)","decl":{"start":{"line":201,"column":2},"end":{"line":201,"column":3}},"loc":{"start":{"line":201,"column":10},"end":{"line":210,"column":3}},"line":201},"35":{"name":"(anonymous_35)","decl":{"start":{"line":211,"column":2},"end":{"line":211,"column":3}},"loc":{"start":{"line":211,"column":72},"end":{"line":226,"column":3}},"line":211},"36":{"name":"(anonymous_36)","decl":{"start":{"line":227,"column":2},"end":{"line":227,"column":3}},"loc":{"start":{"line":227,"column":60},"end":{"line":251,"column":3}},"line":227},"37":{"name":"(anonymous_37)","decl":{"start":{"line":231,"column":25},"end":{"line":231,"column":26}},"loc":{"start":{"line":231,"column":40},"end":{"line":243,"column":7}},"line":231},"38":{"name":"(anonymous_38)","decl":{"start":{"line":236,"column":25},"end":{"line":236,"column":26}},"loc":{"start":{"line":236,"column":50},"end":{"line":240,"column":9}},"line":236},"39":{"name":"(anonymous_39)","decl":{"start":{"line":252,"column":2},"end":{"line":252,"column":3}},"loc":{"start":{"line":252,"column":47},"end":{"line":293,"column":3}},"line":252},"40":{"name":"(anonymous_40)","decl":{"start":{"line":262,"column":32},"end":{"line":262,"column":33}},"loc":{"start":{"line":262,"column":57},"end":{"line":268,"column":9}},"line":262},"41":{"name":"(anonymous_41)","decl":{"start":{"line":281,"column":34},"end":{"line":281,"column":35}},"loc":{"start":{"line":281,"column":59},"end":{"line":287,"column":11}},"line":281},"42":{"name":"(anonymous_42)","decl":{"start":{"line":294,"column":2},"end":{"line":294,"column":3}},"loc":{"start":{"line":294,"column":74},"end":{"line":305,"column":3}},"line":294},"43":{"name":"(anonymous_43)","decl":{"start":{"line":306,"column":2},"end":{"line":306,"column":3}},"loc":{"start":{"line":306,"column":62},"end":{"line":321,"column":3}},"line":306},"44":{"name":"(anonymous_44)","decl":{"start":{"line":310,"column":25},"end":{"line":310,"column":26}},"loc":{"start":{"line":310,"column":40},"end":{"line":319,"column":7}},"line":310},"45":{"name":"(anonymous_45)","decl":{"start":{"line":322,"column":2},"end":{"line":322,"column":3}},"loc":{"start":{"line":322,"column":49},"end":{"line":348,"column":3}},"line":322},"46":{"name":"(anonymous_46)","decl":{"start":{"line":327,"column":23},"end":{"line":327,"column":24}},"loc":{"start":{"line":327,"column":42},"end":{"line":333,"column":7}},"line":327},"47":{"name":"(anonymous_47)","decl":{"start":{"line":336,"column":22},"end":{"line":336,"column":23}},"loc":{"start":{"line":336,"column":46},"end":{"line":345,"column":7}},"line":336},"48":{"name":"(anonymous_48)","decl":{"start":{"line":338,"column":25},"end":{"line":338,"column":26}},"loc":{"start":{"line":338,"column":44},"end":{"line":344,"column":9}},"line":338},"49":{"name":"(anonymous_49)","decl":{"start":{"line":349,"column":2},"end":{"line":349,"column":3}},"loc":{"start":{"line":349,"column":69},"end":{"line":360,"column":3}},"line":349},"50":{"name":"(anonymous_50)","decl":{"start":{"line":361,"column":2},"end":{"line":361,"column":3}},"loc":{"start":{"line":361,"column":56},"end":{"line":374,"column":3}},"line":361},"51":{"name":"(anonymous_51)","decl":{"start":{"line":375,"column":2},"end":{"line":375,"column":3}},"loc":{"start":{"line":375,"column":42},"end":{"line":401,"column":3}},"line":375},"52":{"name":"(anonymous_52)","decl":{"start":{"line":380,"column":27},"end":{"line":380,"column":28}},"loc":{"start":{"line":380,"column":52},"end":{"line":386,"column":7}},"line":380},"53":{"name":"(anonymous_53)","decl":{"start":{"line":389,"column":22},"end":{"line":389,"column":23}},"loc":{"start":{"line":389,"column":49},"end":{"line":398,"column":7}},"line":389},"54":{"name":"(anonymous_54)","decl":{"start":{"line":391,"column":29},"end":{"line":391,"column":30}},"loc":{"start":{"line":391,"column":54},"end":{"line":397,"column":9}},"line":391},"55":{"name":"(anonymous_55)","decl":{"start":{"line":407,"column":2},"end":{"line":407,"column":3}},"loc":{"start":{"line":407,"column":44},"end":{"line":423,"column":3}},"line":407},"56":{"name":"(anonymous_56)","decl":{"start":{"line":424,"column":2},"end":{"line":424,"column":3}},"loc":{"start":{"line":424,"column":38},"end":{"line":443,"column":3}},"line":424},"57":{"name":"(anonymous_57)","decl":{"start":{"line":444,"column":2},"end":{"line":444,"column":3}},"loc":{"start":{"line":444,"column":60},"end":{"line":457,"column":3}},"line":444},"58":{"name":"(anonymous_58)","decl":{"start":{"line":458,"column":2},"end":{"line":458,"column":3}},"loc":{"start":{"line":458,"column":28},"end":{"line":463,"column":3}},"line":458},"59":{"name":"(anonymous_59)","decl":{"start":{"line":464,"column":2},"end":{"line":464,"column":3}},"loc":{"start":{"line":464,"column":23},"end":{"line":466,"column":3}},"line":464}},"branchMap":{"0":{"loc":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},{"start":{},"end":{}}],"line":104},"1":{"loc":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},{"start":{},"end":{}}],"line":108},"2":{"loc":{"start":{"line":116,"column":25},"end":{"line":116,"column":54}},"type":"binary-expr","locations":[{"start":{"line":116,"column":25},"end":{"line":116,"column":48}},{"start":{"line":116,"column":52},"end":{"line":116,"column":54}}],"line":116},"3":{"loc":{"start":{"line":128,"column":42},"end":{"line":128,"column":62}},"type":"default-arg","locations":[{"start":{"line":128,"column":60},"end":{"line":128,"column":62}}],"line":128},"4":{"loc":{"start":{"line":130,"column":4},"end":{"line":133,"column":5}},"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":133,"column":5}},{"start":{},"end":{}}],"line":130},"5":{"loc":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},{"start":{},"end":{}}],"line":155},"6":{"loc":{"start":{"line":155,"column":12},"end":{"line":155,"column":106}},"type":"binary-expr","locations":[{"start":{"line":155,"column":12},"end":{"line":155,"column":29}},{"start":{"line":155,"column":33},"end":{"line":155,"column":59}},{"start":{"line":155,"column":63},"end":{"line":155,"column":106}}],"line":155},"7":{"loc":{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},"type":"if","locations":[{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},{"start":{},"end":{}}],"line":179},"8":{"loc":{"start":{"line":179,"column":12},"end":{"line":179,"column":76}},"type":"binary-expr","locations":[{"start":{"line":179,"column":12},"end":{"line":179,"column":19}},{"start":{"line":179,"column":23},"end":{"line":179,"column":39}},{"start":{"line":179,"column":43},"end":{"line":179,"column":76}}],"line":179},"9":{"loc":{"start":{"line":212,"column":4},"end":{"line":214,"column":5}},"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":214,"column":5}},{"start":{},"end":{}}],"line":212},"10":{"loc":{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},{"start":{},"end":{}}],"line":216},"11":{"loc":{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},{"start":{},"end":{}}],"line":220},"12":{"loc":{"start":{"line":229,"column":4},"end":{"line":250,"column":5}},"type":"if","locations":[{"start":{"line":229,"column":4},"end":{"line":250,"column":5}},{"start":{},"end":{}}],"line":229},"13":{"loc":{"start":{"line":229,"column":8},"end":{"line":229,"column":39}},"type":"binary-expr","locations":[{"start":{"line":229,"column":8},"end":{"line":229,"column":15}},{"start":{"line":229,"column":19},"end":{"line":229,"column":39}}],"line":229},"14":{"loc":{"start":{"line":233,"column":8},"end":{"line":235,"column":9}},"type":"if","locations":[{"start":{"line":233,"column":8},"end":{"line":235,"column":9}},{"start":{},"end":{}}],"line":233},"15":{"loc":{"start":{"line":244,"column":6},"end":{"line":246,"column":7}},"type":"if","locations":[{"start":{"line":244,"column":6},"end":{"line":246,"column":7}},{"start":{},"end":{}}],"line":244},"16":{"loc":{"start":{"line":247,"column":6},"end":{"line":249,"column":7}},"type":"if","locations":[{"start":{"line":247,"column":6},"end":{"line":249,"column":7}},{"start":{},"end":{}}],"line":247},"17":{"loc":{"start":{"line":254,"column":4},"end":{"line":292,"column":5}},"type":"if","locations":[{"start":{"line":254,"column":4},"end":{"line":292,"column":5}},{"start":{"line":272,"column":11},"end":{"line":292,"column":5}}],"line":254},"18":{"loc":{"start":{"line":254,"column":8},"end":{"line":254,"column":50}},"type":"binary-expr","locations":[{"start":{"line":254,"column":8},"end":{"line":254,"column":15}},{"start":{"line":254,"column":19},"end":{"line":254,"column":26}},{"start":{"line":254,"column":30},"end":{"line":254,"column":50}}],"line":254},"19":{"loc":{"start":{"line":259,"column":8},"end":{"line":261,"column":9}},"type":"if","locations":[{"start":{"line":259,"column":8},"end":{"line":261,"column":9}},{"start":{},"end":{}}],"line":259},"20":{"loc":{"start":{"line":264,"column":10},"end":{"line":267,"column":11}},"type":"if","locations":[{"start":{"line":264,"column":10},"end":{"line":267,"column":11}},{"start":{},"end":{}}],"line":264},"21":{"loc":{"start":{"line":272,"column":11},"end":{"line":292,"column":5}},"type":"if","locations":[{"start":{"line":272,"column":11},"end":{"line":292,"column":5}},{"start":{},"end":{}}],"line":272},"22":{"loc":{"start":{"line":278,"column":10},"end":{"line":280,"column":11}},"type":"if","locations":[{"start":{"line":278,"column":10},"end":{"line":280,"column":11}},{"start":{},"end":{}}],"line":278},"23":{"loc":{"start":{"line":283,"column":12},"end":{"line":286,"column":13}},"type":"if","locations":[{"start":{"line":283,"column":12},"end":{"line":286,"column":13}},{"start":{},"end":{}}],"line":283},"24":{"loc":{"start":{"line":295,"column":4},"end":{"line":297,"column":5}},"type":"if","locations":[{"start":{"line":295,"column":4},"end":{"line":297,"column":5}},{"start":{},"end":{}}],"line":295},"25":{"loc":{"start":{"line":299,"column":4},"end":{"line":301,"column":5}},"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":301,"column":5}},{"start":{},"end":{}}],"line":299},"26":{"loc":{"start":{"line":308,"column":4},"end":{"line":320,"column":5}},"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":320,"column":5}},{"start":{},"end":{}}],"line":308},"27":{"loc":{"start":{"line":308,"column":8},"end":{"line":308,"column":39}},"type":"binary-expr","locations":[{"start":{"line":308,"column":8},"end":{"line":308,"column":15}},{"start":{"line":308,"column":19},"end":{"line":308,"column":39}}],"line":308},"28":{"loc":{"start":{"line":312,"column":8},"end":{"line":314,"column":9}},"type":"if","locations":[{"start":{"line":312,"column":8},"end":{"line":314,"column":9}},{"start":{},"end":{}}],"line":312},"29":{"loc":{"start":{"line":324,"column":4},"end":{"line":347,"column":5}},"type":"if","locations":[{"start":{"line":324,"column":4},"end":{"line":347,"column":5}},{"start":{"line":335,"column":11},"end":{"line":347,"column":5}}],"line":324},"30":{"loc":{"start":{"line":324,"column":8},"end":{"line":324,"column":50}},"type":"binary-expr","locations":[{"start":{"line":324,"column":8},"end":{"line":324,"column":15}},{"start":{"line":324,"column":19},"end":{"line":324,"column":26}},{"start":{"line":324,"column":30},"end":{"line":324,"column":50}}],"line":324},"31":{"loc":{"start":{"line":328,"column":8},"end":{"line":330,"column":9}},"type":"if","locations":[{"start":{"line":328,"column":8},"end":{"line":330,"column":9}},{"start":{},"end":{}}],"line":328},"32":{"loc":{"start":{"line":335,"column":11},"end":{"line":347,"column":5}},"type":"if","locations":[{"start":{"line":335,"column":11},"end":{"line":347,"column":5}},{"start":{},"end":{}}],"line":335},"33":{"loc":{"start":{"line":339,"column":10},"end":{"line":341,"column":11}},"type":"if","locations":[{"start":{"line":339,"column":10},"end":{"line":341,"column":11}},{"start":{},"end":{}}],"line":339},"34":{"loc":{"start":{"line":350,"column":4},"end":{"line":352,"column":5}},"type":"if","locations":[{"start":{"line":350,"column":4},"end":{"line":352,"column":5}},{"start":{},"end":{}}],"line":350},"35":{"loc":{"start":{"line":354,"column":4},"end":{"line":356,"column":5}},"type":"if","locations":[{"start":{"line":354,"column":4},"end":{"line":356,"column":5}},{"start":{},"end":{}}],"line":354},"36":{"loc":{"start":{"line":363,"column":4},"end":{"line":373,"column":5}},"type":"if","locations":[{"start":{"line":363,"column":4},"end":{"line":373,"column":5}},{"start":{},"end":{}}],"line":363},"37":{"loc":{"start":{"line":363,"column":8},"end":{"line":363,"column":39}},"type":"binary-expr","locations":[{"start":{"line":363,"column":8},"end":{"line":363,"column":15}},{"start":{"line":363,"column":19},"end":{"line":363,"column":39}}],"line":363},"38":{"loc":{"start":{"line":366,"column":6},"end":{"line":368,"column":7}},"type":"if","locations":[{"start":{"line":366,"column":6},"end":{"line":368,"column":7}},{"start":{},"end":{}}],"line":366},"39":{"loc":{"start":{"line":377,"column":4},"end":{"line":400,"column":5}},"type":"if","locations":[{"start":{"line":377,"column":4},"end":{"line":400,"column":5}},{"start":{"line":388,"column":11},"end":{"line":400,"column":5}}],"line":377},"40":{"loc":{"start":{"line":377,"column":8},"end":{"line":377,"column":50}},"type":"binary-expr","locations":[{"start":{"line":377,"column":8},"end":{"line":377,"column":15}},{"start":{"line":377,"column":19},"end":{"line":377,"column":26}},{"start":{"line":377,"column":30},"end":{"line":377,"column":50}}],"line":377},"41":{"loc":{"start":{"line":381,"column":8},"end":{"line":383,"column":9}},"type":"if","locations":[{"start":{"line":381,"column":8},"end":{"line":383,"column":9}},{"start":{},"end":{}}],"line":381},"42":{"loc":{"start":{"line":388,"column":11},"end":{"line":400,"column":5}},"type":"if","locations":[{"start":{"line":388,"column":11},"end":{"line":400,"column":5}},{"start":{},"end":{}}],"line":388},"43":{"loc":{"start":{"line":392,"column":10},"end":{"line":394,"column":11}},"type":"if","locations":[{"start":{"line":392,"column":10},"end":{"line":394,"column":11}},{"start":{},"end":{}}],"line":392},"44":{"loc":{"start":{"line":408,"column":4},"end":{"line":410,"column":5}},"type":"if","locations":[{"start":{"line":408,"column":4},"end":{"line":410,"column":5}},{"start":{},"end":{}}],"line":408},"45":{"loc":{"start":{"line":425,"column":4},"end":{"line":427,"column":5}},"type":"if","locations":[{"start":{"line":425,"column":4},"end":{"line":427,"column":5}},{"start":{},"end":{}}],"line":425},"46":{"loc":{"start":{"line":429,"column":4},"end":{"line":442,"column":5}},"type":"if","locations":[{"start":{"line":429,"column":4},"end":{"line":442,"column":5}},{"start":{},"end":{}}],"line":429},"47":{"loc":{"start":{"line":446,"column":4},"end":{"line":456,"column":5}},"type":"if","locations":[{"start":{"line":446,"column":4},"end":{"line":456,"column":5}},{"start":{},"end":{}}],"line":446},"48":{"loc":{"start":{"line":448,"column":6},"end":{"line":455,"column":7}},"type":"if","locations":[{"start":{"line":448,"column":6},"end":{"line":455,"column":7}},{"start":{},"end":{}}],"line":448},"49":{"loc":{"start":{"line":459,"column":4},"end":{"line":461,"column":5}},"type":"if","locations":[{"start":{"line":459,"column":4},"end":{"line":461,"column":5}},{"start":{},"end":{}}],"line":459}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/dependency-manager.service.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRTreeItem, IUnitRange, Nullable } from '@univerjs/core';\nimport type { AstRootNode } from '../engine/ast-node';\nimport type { FormulaDependencyTree, IFormulaDependencyTree } from '../engine/dependency/dependency-tree';\nimport { createIdentifier, Disposable, ObjectMatrix, RTree } from '@univerjs/core';\n\nexport interface IDependencyManagerService {\n    dispose(): void;\n\n    reset(): void;\n\n    addOtherFormulaDependency(unitId: string, sheetId: string, formulaId: string, dependencyTree: IFormulaDependencyTree): void;\n    addOtherFormulaDependencyMainData(formulaId: string): void;\n    removeOtherFormulaDependency(unitId: string, sheetId: string, formulaId: string[]): void;\n    hasOtherFormulaDataMainData(formulaId: string): boolean;\n    clearOtherFormulaDependency(unitId: string, sheetId?: string): void;\n    getOtherFormulaDependency(unitId: string, sheetId: string, formulaId: string): Nullable<ObjectMatrix<number>>;\n\n    addFeatureFormulaDependency(unitId: string, sheetId: string, featureId: string, dependencyTree: FormulaDependencyTree): void;\n    removeFeatureFormulaDependency(unitId: string, sheetId: string, featureIds: string[]): void;\n    getFeatureFormulaDependency(unitId: string, sheetId: string, featureId: string): Nullable<number>;\n    clearFeatureFormulaDependency(unitId: string, sheetId?: string): void;\n\n    addFormulaDependency(unitId: string, sheetId: string, row: number, column: number, dependencyTree: IFormulaDependencyTree): void;\n    removeFormulaDependency(unitId: string, sheetId: string, row: number, column: number): void;\n    getFormulaDependency(unitId: string, sheetId: string, row: number, column: number): Nullable<number>;\n    clearFormulaDependency(unitId: string, sheetId?: string): void;\n\n    removeFormulaDependencyByDefinedName(unitId: string, definedName: string): void;\n    addFormulaDependencyByDefinedName(tree: IFormulaDependencyTree, node: Nullable<AstRootNode>): void;\n\n    addDependencyRTreeCache(tree: IFormulaDependencyTree): void;\n    searchDependency(search: IUnitRange[], exceptTreeIds?: Set<number>): Set<number>;\n\n    getLastTreeId(): number;\n\n    getTreeById(treeId: number): Nullable<IFormulaDependencyTree>;\n\n    getAllTree(): IFormulaDependencyTree[];\n\n    buildDependencyTree(shouldBeBuildTrees: IFormulaDependencyTree[], dependencyTrees?: IFormulaDependencyTree[]): IFormulaDependencyTree[];\n}\n\nexport class DependencyManagerBaseService extends Disposable implements IDependencyManagerService {\n    buildDependencyTree(shouldBeBuildTrees: IFormulaDependencyTree[], dependencyTrees?: IFormulaDependencyTree[]): IFormulaDependencyTree[] {\n        throw new Error('Method not implemented.');\n    }\n\n    getTreeById(treeId: number): Nullable<IFormulaDependencyTree> {\n        throw new Error('Method not implemented.');\n    }\n\n    getAllTree(): IFormulaDependencyTree[] {\n        throw new Error('Method not implemented.');\n    }\n\n    protected _otherFormulaData: Map<string, Map<string, Map<string, ObjectMatrix<number>>>> = new Map(); //  [unitId: string]: Nullable<{ [sheetId: string]: { [formulaId: string]: Set<number> } }>;\n\n    protected _featureFormulaData: Map<string, Map<string, Map<string, Nullable<number>>>> = new Map(); // [unitId: string]: Nullable<{ [sheetId: string]: { [featureId: string]: Nullable<number> } }>;\n\n    protected _formulaData: Map<string, Map<string, ObjectMatrix<number>>> = new Map(); // [unitId: string]: Nullable<{ [sheetId: string]: ObjectMatrix<number> }>;\n\n    protected _definedNameMap: Map<string, Map<string, Set<number>>> = new Map(); // unitId -> definedName -> treeId\n\n    protected _otherFormulaDataMainData: Set<string> = new Set();\n\n    protected _dependencyRTreeCache: RTree = new RTree();\n\n    private _dependencyTreeIdLast: number = 0;\n\n    reset(): void {\n        throw new Error('Method not implemented.');\n    }\n\n    addOtherFormulaDependency(unitId: string, sheetId: string, formulaId: string, dependencyTree: IFormulaDependencyTree): void {\n        throw new Error('Method not implemented.');\n    }\n\n    removeOtherFormulaDependency(unitId: string, sheetId: string, formulaId: string[]): void {\n        throw new Error('Method not implemented.');\n    }\n\n    clearOtherFormulaDependency(unitId: string, sheetId?: string): void {\n        throw new Error('Method not implemented.');\n    }\n\n    addFeatureFormulaDependency(unitId: string, sheetId: string, featureId: string, dependencyTree: FormulaDependencyTree): void {\n        throw new Error('Method not implemented.');\n    }\n\n    removeFeatureFormulaDependency(unitId: string, sheetId: string, featureIds: string[]): void {\n        throw new Error('Method not implemented.');\n    }\n\n    clearFeatureFormulaDependency(unitId: string, sheetId?: string): void {\n        throw new Error('Method not implemented.');\n    }\n\n    addFormulaDependency(unitId: string, sheetId: string, row: number, column: number, dependencyTree: IFormulaDependencyTree): void {\n        throw new Error('Method not implemented.');\n    }\n\n    removeFormulaDependency(unitId: string, sheetId: string, row: number, column: number): void {\n        throw new Error('Method not implemented.');\n    }\n\n    clearFormulaDependency(unitId: string, sheetId?: string): void {\n        throw new Error('Method not implemented.');\n    }\n\n    removeFormulaDependencyByDefinedName(unitId: string, definedName: string): void {\n        throw new Error('Method not implemented.');\n    }\n\n    searchDependency(search: IUnitRange[], exceptTreeIds?: Set<number>): Set<number> {\n        return this._dependencyRTreeCache.bulkSearch(search, exceptTreeIds) as Set<number>;\n    }\n\n    protected _restDependencyTreeId() {\n        this._dependencyTreeIdLast = 0;\n    }\n\n    getOtherFormulaDependency(unitId: string, sheetId: string, formulaId: string) {\n        return this._otherFormulaData.get(unitId)?.get(sheetId)?.get(formulaId);\n    }\n\n    addOtherFormulaDependencyMainData(formulaId: string) {\n        this._otherFormulaDataMainData.add(formulaId);\n    }\n\n    hasOtherFormulaDataMainData(formulaId: string) {\n        return this._otherFormulaDataMainData.has(formulaId);\n    }\n\n    protected _removeDependencyRTreeCacheById(unitId: string, sheetId: string) {\n        this._dependencyRTreeCache.removeById(unitId, sheetId);\n    }\n\n    getFeatureFormulaDependency(unitId: string, sheetId: string, featureId: string) {\n        return this._featureFormulaData.get(unitId)?.get(sheetId)?.get(featureId);\n    }\n\n    getFormulaDependency(unitId: string, sheetId: string, row: number, column: number) {\n        return this._formulaData.get(unitId)?.get(sheetId)?.getValue(row, column);\n    }\n\n    addDependencyRTreeCache(tree: IFormulaDependencyTree) {\n        const searchRanges: IRTreeItem[] = [];\n        for (let i = 0; i < tree.rangeList.length; i++) {\n            const unitRangeWithNum = tree.rangeList[i];\n            const { unitId, sheetId, range } = unitRangeWithNum;\n\n            searchRanges.push({\n                unitId,\n                sheetId,\n                range,\n                id: tree.treeId,\n            });\n        }\n\n        this._dependencyRTreeCache.bulkInsert(searchRanges);\n\n        this._addAllTreeMap(tree);\n    }\n\n    getLastTreeId() {\n        const id = this._dependencyTreeIdLast;\n        this._dependencyTreeIdLast++;\n        return id;\n    }\n\n    protected _addAllTreeMap(tree: IFormulaDependencyTree) {\n        throw new Error('Method not implemented.');\n    }\n\n    protected _addDefinedName(unitId: string, definedName: string, treeId: number) {\n        if (!this._definedNameMap.has(unitId)) {\n            this._definedNameMap.set(unitId, new Map<string, Set<number>>());\n        }\n\n        const unitMap = this._definedNameMap.get(unitId)!;\n\n        if (!unitMap.has(definedName)) {\n            unitMap.set(definedName, new Set<number>());\n        }\n\n        const treeSet = unitMap.get(definedName)!;\n        treeSet.add(treeId);\n    }\n\n    addFormulaDependencyByDefinedName(tree: IFormulaDependencyTree, node: Nullable<AstRootNode>) {\n        const treeId = tree.treeId;\n        // const node = tree.node;\n\n        const definedNames = node?.getDefinedNames() || [];\n\n        for (const definedName of definedNames) {\n            this._addDefinedName(tree.unitId, definedName, treeId);\n        }\n    }\n}\n\n/**\n * Passively marked as dirty, register the reference and execution actions of the feature plugin.\n * After execution, a dirty area and calculated data will be returned,\n * causing the formula to be marked dirty again,\n * thereby completing the calculation of the entire dependency tree.\n */\nexport class DependencyManagerService extends DependencyManagerBaseService implements IDependencyManagerService {\n    protected _allTreeMap: Map<number, IFormulaDependencyTree> = new Map();\n\n    override dispose(): void {\n        super.dispose();\n        this.reset();\n    }\n\n    override buildDependencyTree(shouldBeBuildTrees: IFormulaDependencyTree[], dependencyTrees: IFormulaDependencyTree[] = []): IFormulaDependencyTree[] {\n        const allTrees = this.getAllTree();\n        if (shouldBeBuildTrees.length === 0) {\n            this._buildReverseDependency(allTrees, dependencyTrees);\n            return allTrees;\n        }\n\n        this._buildDependencyTree(allTrees, shouldBeBuildTrees);\n        this._buildReverseDependency(allTrees, shouldBeBuildTrees);\n        return allTrees;\n    }\n\n    /**\n     * Build the dependency relationship between the trees.\n     * @param allTrees  all FormulaDependencyTree\n     * @param shouldBeBuildTrees  FormulaDependencyTree[] | FormulaDependencyTreeCache\n     */\n    private _buildDependencyTree(allTrees: IFormulaDependencyTree[], shouldBeBuildTrees: IFormulaDependencyTree[]) {\n        const shouldBeBuildTreeMap = new Map<number, IFormulaDependencyTree>();\n        for (let i = 0; i < shouldBeBuildTrees.length; i++) {\n            const tree = shouldBeBuildTrees[i];\n            shouldBeBuildTreeMap.set(tree.treeId, tree);\n        }\n\n        for (let i = 0; i < allTrees.length; i++) {\n            const tree = allTrees[i];\n            const RTreeItem = tree.toRTreeItem();\n\n            const searchResults = this._dependencyRTreeCache.bulkSearch(RTreeItem);\n\n            for (const id of searchResults) {\n                const shouldBeBuildTree = shouldBeBuildTreeMap.get(id as number);\n\n                if (shouldBeBuildTree && tree !== shouldBeBuildTree && !shouldBeBuildTree.hasChildren(tree.treeId)) {\n                    shouldBeBuildTree.pushChildren(tree);\n                }\n            }\n        }\n\n        // console.log('searchResultsCount:', count);\n\n        shouldBeBuildTreeMap.clear();\n    }\n\n    /**\n     * Build the reverse dependency relationship between the trees.\n     * @param allTrees\n     * @param dependencyTrees\n     */\n    private _buildReverseDependency(allTrees: IFormulaDependencyTree[], dependencyTrees: IFormulaDependencyTree[]) {\n        const allTreeMap = new Map<number, IFormulaDependencyTree>();\n\n        for (let i = 0; i < allTrees.length; i++) {\n            const tree = allTrees[i];\n            allTreeMap.set(tree.treeId, tree);\n        }\n\n        for (let i = 0; i < dependencyTrees.length; i++) {\n            const tree = dependencyTrees[i];\n            const RTreeItem = tree.toRTreeItem();\n\n            const searchResults = this._dependencyRTreeCache.bulkSearch(RTreeItem);\n\n            for (const id of searchResults) {\n                const allTree = allTreeMap.get(id as number);\n\n                if (allTree && tree !== allTree && !allTree.hasChildren(tree.treeId)) {\n                    allTree.pushChildren(tree);\n                }\n            }\n        }\n\n        allTreeMap.clear();\n    }\n\n     /**\n      * Get all FormulaDependencyTree from _otherFormulaData, _featureFormulaData, _formulaData\n      * return FormulaDependencyTree[]\n      */\n    override getAllTree() {\n        const trees: IFormulaDependencyTree[] = [];\n        this._allTreeMap.forEach((tree) => {\n            tree.resetState();\n            trees.push(tree);\n        });\n\n        return trees;\n    }\n\n    override getTreeById(treeId: number) {\n        return this._allTreeMap.get(treeId);\n    }\n\n    override reset() {\n        this._otherFormulaData.clear();\n        this._featureFormulaData.clear();\n        this._formulaData.clear();\n        this._definedNameMap.clear();\n        this._otherFormulaDataMainData.clear();\n        this._dependencyRTreeCache.clear();\n        this._allTreeMap.clear();\n        this._restDependencyTreeId();\n    }\n\n    override addOtherFormulaDependency(unitId: string, sheetId: string, formulaId: string, dependencyTree: IFormulaDependencyTree) {\n        if (!this._otherFormulaData.has(unitId)) {\n            this._otherFormulaData.set(unitId, new Map<string, Map<string, ObjectMatrix<number>>>());\n        }\n\n        const unitMap = this._otherFormulaData.get(unitId)!;\n\n        if (!unitMap.has(sheetId)) {\n            unitMap.set(sheetId, new Map<string, ObjectMatrix<number>>());\n        }\n\n        const sheetMap = unitMap.get(sheetId)!;\n\n        if (!sheetMap.has(formulaId)) {\n            sheetMap.set(formulaId, new ObjectMatrix<number>());\n        }\n\n        const formulaMatrix = sheetMap.get(formulaId)!;\n\n        formulaMatrix.setValue(dependencyTree.refOffsetX, dependencyTree.refOffsetY, dependencyTree.treeId);\n\n        this._addAllTreeMap(dependencyTree);\n    }\n\n    override removeOtherFormulaDependency(unitId: string, sheetId: string, formulaIds: string[]) {\n        const unitMap = this._otherFormulaData.get(unitId);\n        if (unitMap && unitMap.has(sheetId)) {\n            const sheetMap = unitMap.get(sheetId)!;\n\n            formulaIds.forEach((formulaId) => {\n                const treeSet = sheetMap.get(formulaId);\n                if (treeSet == null) {\n                    return;\n                }\n\n                treeSet.forValue((row, column, treeId) => {\n                    this._removeDependencyRTreeCache(treeId);\n                    this.clearDependencyForTree(this._allTreeMap.get(treeId));\n                    this._removeAllTreeMap(treeId);\n                });\n\n                sheetMap.delete(formulaId);\n                this._otherFormulaDataMainData.delete(formulaId);\n            });\n\n            if (sheetMap.size === 0) {\n                unitMap.delete(sheetId);\n            }\n\n            if (unitMap.size === 0) {\n                this._otherFormulaData.delete(unitId);\n            }\n        }\n    }\n\n    override clearOtherFormulaDependency(unitId: string, sheetId?: string) {\n        const unitMap = this._otherFormulaData.get(unitId);\n\n        if (sheetId && unitMap && unitMap.has(sheetId)) {\n            const sheetMap = unitMap.get(sheetId)!;\n\n            this._removeDependencyRTreeCacheById(unitId, sheetId);\n            for (const formulaId of sheetMap.keys()) {\n                const formulaTreeSet = sheetMap.get(formulaId);\n                if (formulaTreeSet == null) {\n                    continue;\n                }\n\n                formulaTreeSet.forValue((row, column, treeId) => {\n                    const tree = this._allTreeMap.get(treeId);\n                    if (tree) {\n                        this.clearDependencyForTree(tree);\n                        this._removeAllTreeMap(treeId);\n                    }\n                });\n\n                this._otherFormulaDataMainData.delete(formulaId);\n            }\n\n            sheetMap.clear(); // Clear the formula dependent data corresponding to the sheetId\n        } else if (unitMap) {\n            for (const sheetId of unitMap.keys()) {\n                const sheetMap = unitMap.get(sheetId)!;\n                this._removeDependencyRTreeCacheById(unitId, sheetId);\n                for (const formulaId of sheetMap.keys()) {\n                    const formulaTreeSet = sheetMap.get(formulaId);\n                    if (formulaTreeSet == null) {\n                        continue;\n                    }\n\n                    formulaTreeSet.forValue((row, column, treeId) => {\n                        const tree = this._allTreeMap.get(treeId);\n                        if (tree) {\n                            this.clearDependencyForTree(tree);\n                            this._removeAllTreeMap(treeId);\n                        }\n                    });\n\n                    this._otherFormulaDataMainData.delete(formulaId);\n                }\n            }\n\n            this._otherFormulaData.delete(unitId); // Delete the data corresponding to the entire unitId\n        }\n    }\n\n    override addFeatureFormulaDependency(unitId: string, sheetId: string, featureId: string, dependencyTree: FormulaDependencyTree) {\n        if (!this._featureFormulaData.has(unitId)) {\n            this._featureFormulaData.set(unitId, new Map<string, Map<string, number>>());\n        }\n\n        const unitMap = this._featureFormulaData.get(unitId)!;\n\n        if (!unitMap.has(sheetId)) {\n            unitMap.set(sheetId, new Map<string, number>());\n        }\n\n        const sheetMap = unitMap.get(sheetId)!;\n        sheetMap.set(featureId, dependencyTree.treeId);\n        // this._allTreeMap.set(dependencyTree.treeId, dependencyTree);\n        this._addAllTreeMap(dependencyTree);\n    }\n\n    override removeFeatureFormulaDependency(unitId: string, sheetId: string, featureIds: string[]) {\n        const unitMap = this._featureFormulaData.get(unitId);\n        if (unitMap && unitMap.has(sheetId)) {\n            const sheetMap = unitMap.get(sheetId)!;\n            featureIds.forEach((featureId) => {\n                const deleteTreeId = sheetMap.get(featureId);\n                if (deleteTreeId == null) {\n                    return;\n                }\n\n                this._removeDependencyRTreeCache(deleteTreeId);\n\n                sheetMap.delete(featureId);\n                this.clearDependencyForTree(this._allTreeMap.get(deleteTreeId));\n                this._removeAllTreeMap(deleteTreeId);\n            });\n        }\n    }\n\n    override clearFeatureFormulaDependency(unitId: string, sheetId?: string) {\n        const unitMap = this._featureFormulaData.get(unitId);\n\n        if (sheetId && unitMap && unitMap.has(sheetId)) {\n            const sheetMap = unitMap.get(sheetId)!;\n            this._removeDependencyRTreeCacheById(unitId, sheetId);\n            sheetMap.forEach((featureTreeId) => {\n                if (featureTreeId == null) {\n                    return;\n                }\n                this.clearDependencyForTree(this._allTreeMap.get(featureTreeId));\n                this._removeAllTreeMap(featureTreeId);\n            });\n\n            sheetMap.clear(); // Clear the formula dependent data corresponding to the sheetId\n        } else if (unitMap) {\n            unitMap.forEach((sheetMap, sheetId) => {\n                this._removeDependencyRTreeCacheById(unitId, sheetId);\n                sheetMap.forEach((featureTreeId) => {\n                    if (featureTreeId == null) {\n                        return;\n                    }\n                    this.clearDependencyForTree(this._allTreeMap.get(featureTreeId));\n                    this._removeAllTreeMap(featureTreeId);\n                });\n            });\n\n            this._featureFormulaData.delete(unitId); // Delete the data corresponding to the entire unitId\n        }\n    }\n\n    override addFormulaDependency(unitId: string, sheetId: string, row: number, column: number, dependencyTree: IFormulaDependencyTree) {\n        if (!this._formulaData.has(unitId)) {\n            this._formulaData.set(unitId, new Map<string, ObjectMatrix<number>>());\n        }\n        const unitMap = this._formulaData.get(unitId)!;\n\n        if (!unitMap.has(sheetId)) {\n            unitMap.set(sheetId, new ObjectMatrix<number>());\n        }\n        const sheetMatrix = unitMap.get(sheetId)!;\n\n        sheetMatrix.setValue(row, column, dependencyTree.treeId);\n        // this._allTreeMap.set(dependencyTree.treeId, dependencyTree);\n        this._addAllTreeMap(dependencyTree);\n    }\n\n    override removeFormulaDependency(unitId: string, sheetId: string, row: number, column: number) {\n        const unitMap = this._formulaData.get(unitId);\n        if (unitMap && unitMap.has(sheetId)) {\n            const sheetMatrix = unitMap.get(sheetId)!;\n            const deleteTreeId = sheetMatrix.getValue(row, column);\n            if (deleteTreeId == null) {\n                return;\n            }\n\n            this._removeDependencyRTreeCache(deleteTreeId);\n\n            sheetMatrix.realDeleteValue(row, column);\n            this.clearDependencyForTree(this._allTreeMap.get(deleteTreeId));\n            this._removeAllTreeMap(deleteTreeId);\n        }\n    }\n\n    override clearFormulaDependency(unitId: string, sheetId?: string) {\n        const unitMap = this._formulaData.get(unitId);\n\n        if (sheetId && unitMap && unitMap.has(sheetId)) {\n            const sheetMatrix = unitMap.get(sheetId)!;\n            this._removeDependencyRTreeCacheById(unitId, sheetId);\n\n            sheetMatrix.forValue((row, column, treeId) => {\n                if (treeId == null) {\n                    return true;\n                }\n                this.clearDependencyForTree(this._allTreeMap.get(treeId));\n                this._removeAllTreeMap(treeId);\n            });\n\n            sheetMatrix.reset();\n        } else if (unitMap) {\n            unitMap.forEach((sheetMatrix, sheetId) => {\n                this._removeDependencyRTreeCacheById(unitId, sheetId);\n\n                sheetMatrix.forValue((row, column, treeId) => {\n                    if (treeId == null) {\n                        return true;\n                    }\n                    this.clearDependencyForTree(this._allTreeMap.get(treeId));\n                    this._removeAllTreeMap(treeId);\n                });\n            });\n\n            this._formulaData.delete(unitId); // Delete the data of the entire unitId\n        }\n    }\n\n    /**\n     * Clear the dependency relationship of the tree.\n     * establish the relationship between the parent and the child.\n     * @param shouldBeClearTree\n     */\n    clearDependencyForTree(shouldBeClearTree: Nullable<IFormulaDependencyTree>) {\n        if (shouldBeClearTree == null) {\n            return;\n        }\n\n        const parents = shouldBeClearTree.parents;\n\n        const children = shouldBeClearTree.children;\n\n        const allTreeMap = this._allTreeMap;\n\n        for (const parentTreeId of parents) {\n            const parent = allTreeMap.get(parentTreeId);\n            parent?.children.delete(shouldBeClearTree.treeId);\n        }\n\n        for (const childTreeId of children) {\n            const child = allTreeMap.get(childTreeId);\n            child?.parents.delete(shouldBeClearTree.treeId);\n        }\n\n        shouldBeClearTree.dispose();\n    }\n\n    private _removeDependencyRTreeCache(treeId: Nullable<number>) {\n        if (treeId == null) {\n            return;\n        }\n\n        const treeRangeMap = this._allTreeMap.get(treeId);\n\n        if (treeRangeMap) {\n            const searchRanges: IRTreeItem[] = [];\n            for (let i = 0; i < treeRangeMap.rangeList.length; i++) {\n                const unitRangeWithNum = treeRangeMap.rangeList[i];\n                const { unitId, sheetId, range } = unitRangeWithNum;\n\n                searchRanges.push({\n                    unitId,\n                    sheetId,\n                    range,\n                    id: treeId,\n                });\n            }\n            this._dependencyRTreeCache.bulkRemove(searchRanges);\n        }\n    }\n\n    override removeFormulaDependencyByDefinedName(unitId: string, definedName: string) {\n        const unitMap = this._definedNameMap.get(unitId);\n\n        if (unitMap) {\n            const treeSet = unitMap.get(definedName);\n            if (treeSet) {\n                for (const treeId of treeSet) {\n                    this._removeDependencyRTreeCache(treeId);\n                    this.clearDependencyForTree(this._allTreeMap.get(treeId));\n                    this._removeAllTreeMap(treeId);\n                }\n                treeSet.clear();\n            }\n        }\n    }\n\n    protected _removeAllTreeMap(treeId: Nullable<number>) {\n        if (treeId == null) {\n            return;\n        }\n        this._allTreeMap.delete(treeId);\n    }\n\n    protected override _addAllTreeMap(tree: IFormulaDependencyTree) {\n        this._allTreeMap.set(tree.treeId, tree);\n    }\n}\n\nexport const IDependencyManagerService = createIdentifier<DependencyManagerService>(\n    'univer.formula.dependency-manager.service'\n);\n"],"mappings":"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","names":["sheetId"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1f3bc1f71e7b2952e7151f23af48653ede502576"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/feature-calculation-manager.service.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/feature-calculation-manager.service.ts","statementMap":{"0":{"start":{"line":4,"column":42},"end":{"line":4,"column":51}},"1":{"start":{"line":6,"column":16},"end":{"line":6,"column":29}},"2":{"start":{"line":7,"column":15},"end":{"line":7,"column":46}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":20}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":39}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":32}},"6":{"start":{"line":14,"column":4},"end":{"line":16,"column":7}},"7":{"start":{"line":15,"column":6},"end":{"line":15,"column":80}},"8":{"start":{"line":17,"column":4},"end":{"line":21,"column":7}},"9":{"start":{"line":24,"column":4},"end":{"line":24,"column":82}},"10":{"start":{"line":27,"column":4},"end":{"line":27,"column":91}},"11":{"start":{"line":30,"column":18},"end":{"line":30,"column":56}},"12":{"start":{"line":31,"column":4},"end":{"line":34,"column":5}},"13":{"start":{"line":32,"column":6},"end":{"line":32,"column":42}},"14":{"start":{"line":33,"column":6},"end":{"line":33,"column":54}},"15":{"start":{"line":35,"column":21},"end":{"line":35,"column":43}},"16":{"start":{"line":36,"column":4},"end":{"line":39,"column":5}},"17":{"start":{"line":37,"column":6},"end":{"line":37,"column":45}},"18":{"start":{"line":38,"column":6},"end":{"line":38,"column":41}},"19":{"start":{"line":40,"column":4},"end":{"line":44,"column":7}},"20":{"start":{"line":45,"column":4},"end":{"line":45,"column":49}},"21":{"start":{"line":48,"column":4},"end":{"line":48,"column":38}},"22":{"start":{"line":51,"column":49},"end":{"line":53,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":2},"end":{"line":8,"column":3}},"loc":{"start":{"line":8,"column":12},"end":{"line":12,"column":3}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":2},"end":{"line":13,"column":3}},"loc":{"start":{"line":13,"column":40},"end":{"line":22,"column":3}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":23},"end":{"line":14,"column":24}},"loc":{"start":{"line":14,"column":38},"end":{"line":16,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":2},"end":{"line":23,"column":3}},"loc":{"start":{"line":23,"column":36},"end":{"line":25,"column":3}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":2},"end":{"line":26,"column":3}},"loc":{"start":{"line":26,"column":36},"end":{"line":28,"column":3}},"line":26},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":2},"end":{"line":29,"column":3}},"loc":{"start":{"line":29,"column":60},"end":{"line":46,"column":3}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":47,"column":2},"end":{"line":47,"column":3}},"loc":{"start":{"line":47,"column":28},"end":{"line":49,"column":3}},"line":47}},"branchMap":{"0":{"loc":{"start":{"line":31,"column":4},"end":{"line":34,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":34,"column":5}},{"start":{},"end":{}}],"line":31},"1":{"loc":{"start":{"line":36,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":39,"column":5}},{"start":{},"end":{}}],"line":36}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/feature-calculation-manager.service.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IUnitRange, Nullable } from '@univerjs/core';\nimport type { Observable } from 'rxjs';\n\nimport type { IFeatureDirtyRangeType, IRuntimeUnitDataType } from '../basics/common';\nimport type { IRemoveFeatureCalculationMutationParam } from '../commands/mutations/set-feature-calculation.mutation';\nimport type { IFormulaDirtyData } from './current-data.service';\nimport type { IAllRuntimeData } from './runtime.service';\nimport { createIdentifier, Disposable } from '@univerjs/core';\nimport { Subject } from 'rxjs';\n\nexport interface IFeatureCalculationManagerParam {\n    unitId: string;\n    subUnitId: string;\n    dependencyRanges: IUnitRange[];\n    getDirtyData: (dirtyData: IFormulaDirtyData, runtimeData: IAllRuntimeData) => {\n        runtimeCellData: IRuntimeUnitDataType;\n        dirtyRanges: IFeatureDirtyRangeType;\n    };\n}\n\nexport interface IFeatureCalculationManagerService {\n    dispose(): void;\n\n    remove(unitId: string, subUnitId: string, featureIds: string[]): void;\n\n    get(unitId: string, subUnitId: string, featureId: string): Nullable<IFeatureCalculationManagerParam>;\n\n    has(unitId: string, subUnitId: string, featureId: string): boolean;\n\n    register(unitId: string, subUnitId: string, featureId: string, referenceExecutor: IFeatureCalculationManagerParam): void;\n\n    getReferenceExecutorMap(): Map<string, Map<string, Map<string, IFeatureCalculationManagerParam>>>;\n\n    onChanged$: Observable<IRemoveFeatureCalculationMutationParam>;\n}\n\n/**\n * Passively marked as dirty, register the reference and execution actions of the feature plugin.\n * After execution, a dirty area and calculated data will be returned,\n * causing the formula to be marked dirty again,\n * thereby completing the calculation of the entire dependency tree.\n */\nexport class FeatureCalculationManagerService extends Disposable implements IFeatureCalculationManagerService {\n    private _referenceExecutorMap: Map<string, Map<string, Map<string, IFeatureCalculationManagerParam>>> = new Map(); // unitId -> subUnitId -> featureId -> IFeatureCalculationManagerParam\n\n    private _onChanged$ = new Subject<IRemoveFeatureCalculationMutationParam>();\n    readonly onChanged$ = this._onChanged$.asObservable();\n\n    override dispose(): void {\n        super.dispose();\n        this._referenceExecutorMap.clear();\n        this._onChanged$.complete();\n    }\n\n    remove(unitId: string, subUnitId: string, featureIds: string[]) {\n        featureIds.forEach((featureId) => {\n            this._referenceExecutorMap.get(unitId)?.get(subUnitId)?.delete(featureId);\n        });\n\n        this._onChanged$.next({\n            unitId,\n            subUnitId,\n            featureIds,\n        });\n    }\n\n    get(unitId: string, subUnitId: string, featureId: string) {\n        return this._referenceExecutorMap.get(unitId)?.get(subUnitId)?.get(featureId);\n    }\n\n    has(unitId: string, subUnitId: string, featureId: string): boolean {\n        return Boolean(this._referenceExecutorMap.get(unitId)?.get(subUnitId)?.has(featureId));\n    }\n\n    register(unitId: string, subUnitId: string, featureId: string, referenceExecutor: IFeatureCalculationManagerParam) {\n        let unitMap = this._referenceExecutorMap.get(unitId);\n\n        if (!unitMap) {\n            unitMap = new Map();\n            this._referenceExecutorMap.set(unitId, unitMap);\n        }\n\n        let subUnitMap = unitMap.get(subUnitId);\n\n        if (!subUnitMap) {\n            subUnitMap = new Map();\n            unitMap.set(subUnitId, subUnitMap);\n        }\n\n        this._onChanged$.next({\n            unitId,\n            subUnitId,\n            featureIds: [featureId],\n        });\n\n        subUnitMap.set(featureId, referenceExecutor);\n    }\n\n    getReferenceExecutorMap() {\n        return this._referenceExecutorMap;\n    }\n}\n\nexport const IFeatureCalculationManagerService = createIdentifier<FeatureCalculationManagerService>(\n    'univer.formula.feature-calculation-manager.service'\n);\n"],"mappings":"AAuBA,SAAS,kBAAkB,kBAAkB;AAC7C,SAAS,eAAe;AAkCjB,aAAM,yCAAyC,WAAwD;AAAA,EAClG,wBAAgG,oBAAI,IAAI;AAAA;AAAA,EAExG,cAAc,IAAI,QAAgD;AAAA,EACjE,aAAa,KAAK,YAAY,aAAa;AAAA,EAE3C,UAAgB;AACrB,UAAM,QAAQ;AACd,SAAK,sBAAsB,MAAM;AACjC,SAAK,YAAY,SAAS;AAAA,EAC9B;AAAA,EAEA,OAAO,QAAgB,WAAmB,YAAsB;AAC5D,eAAW,QAAQ,CAAC,cAAc;AAC9B,WAAK,sBAAsB,IAAI,MAAM,GAAG,IAAI,SAAS,GAAG,OAAO,SAAS;AAAA,IAC5E,CAAC;AAED,SAAK,YAAY,KAAK;AAAA,MAClB;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EAEA,IAAI,QAAgB,WAAmB,WAAmB;AACtD,WAAO,KAAK,sBAAsB,IAAI,MAAM,GAAG,IAAI,SAAS,GAAG,IAAI,SAAS;AAAA,EAChF;AAAA,EAEA,IAAI,QAAgB,WAAmB,WAA4B;AAC/D,WAAO,QAAQ,KAAK,sBAAsB,IAAI,MAAM,GAAG,IAAI,SAAS,GAAG,IAAI,SAAS,CAAC;AAAA,EACzF;AAAA,EAEA,SAAS,QAAgB,WAAmB,WAAmB,mBAAoD;AAC/G,QAAI,UAAU,KAAK,sBAAsB,IAAI,MAAM;AAEnD,QAAI,CAAC,SAAS;AACV,gBAAU,oBAAI,IAAI;AAClB,WAAK,sBAAsB,IAAI,QAAQ,OAAO;AAAA,IAClD;AAEA,QAAI,aAAa,QAAQ,IAAI,SAAS;AAEtC,QAAI,CAAC,YAAY;AACb,mBAAa,oBAAI,IAAI;AACrB,cAAQ,IAAI,WAAW,UAAU;AAAA,IACrC;AAEA,SAAK,YAAY,KAAK;AAAA,MAClB;AAAA,MACA;AAAA,MACA,YAAY,CAAC,SAAS;AAAA,IAC1B,CAAC;AAED,eAAW,IAAI,WAAW,iBAAiB;AAAA,EAC/C;AAAA,EAEA,0BAA0B;AACtB,WAAO,KAAK;AAAA,EAChB;AACJ;AAEO,aAAM,oCAAoC;AAAA,EAC7C;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c4ed9d7e54c1a31797aace14e1a1e9d8c4cc60b6"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/other-formula-manager.service.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/other-formula-manager.service.ts","statementMap":{"0":{"start":{"line":3,"column":22},"end":{"line":3,"column":24}},"1":{"start":{"line":5,"column":4},"end":{"line":5,"column":20}},"2":{"start":{"line":6,"column":4},"end":{"line":6,"column":32}},"3":{"start":{"line":9,"column":45},"end":{"line":9,"column":56}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":70}},"5":{"start":{"line":13,"column":45},"end":{"line":13,"column":56}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":68}},"7":{"start":{"line":17,"column":45},"end":{"line":17,"column":56}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":76}},"9":{"start":{"line":21,"column":51},"end":{"line":21,"column":62}},"10":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"11":{"start":{"line":23,"column":6},"end":{"line":23,"column":42}},"12":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"13":{"start":{"line":26,"column":6},"end":{"line":26,"column":53}},"14":{"start":{"line":28,"column":4},"end":{"line":28,"column":64}},"15":{"start":{"line":31,"column":4},"end":{"line":54,"column":7}},"16":{"start":{"line":32,"column":23},"end":{"line":32,"column":42}},"17":{"start":{"line":33,"column":6},"end":{"line":35,"column":7}},"18":{"start":{"line":34,"column":8},"end":{"line":34,"column":20}},"19":{"start":{"line":36,"column":6},"end":{"line":53,"column":9}},"20":{"start":{"line":37,"column":24},"end":{"line":37,"column":43}},"21":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"22":{"start":{"line":39,"column":10},"end":{"line":39,"column":22}},"23":{"start":{"line":41,"column":8},"end":{"line":52,"column":11}},"24":{"start":{"line":42,"column":23},"end":{"line":42,"column":41}},"25":{"start":{"line":43,"column":10},"end":{"line":45,"column":11}},"26":{"start":{"line":44,"column":12},"end":{"line":44,"column":24}},"27":{"start":{"line":46,"column":10},"end":{"line":51,"column":13}},"28":{"start":{"line":57,"column":4},"end":{"line":75,"column":7}},"29":{"start":{"line":58,"column":23},"end":{"line":58,"column":42}},"30":{"start":{"line":59,"column":6},"end":{"line":61,"column":7}},"31":{"start":{"line":60,"column":8},"end":{"line":60,"column":20}},"32":{"start":{"line":62,"column":6},"end":{"line":74,"column":9}},"33":{"start":{"line":63,"column":24},"end":{"line":63,"column":43}},"34":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"35":{"start":{"line":65,"column":10},"end":{"line":65,"column":22}},"36":{"start":{"line":67,"column":8},"end":{"line":73,"column":11}},"37":{"start":{"line":68,"column":10},"end":{"line":72,"column":13}},"38":{"start":{"line":78,"column":4},"end":{"line":78,"column":34}},"39":{"start":{"line":81,"column":43},"end":{"line":83,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":2},"end":{"line":4,"column":3}},"loc":{"start":{"line":4,"column":12},"end":{"line":7,"column":3}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":2},"end":{"line":8,"column":3}},"loc":{"start":{"line":8,"column":22},"end":{"line":11,"column":3}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":2},"end":{"line":12,"column":3}},"loc":{"start":{"line":12,"column":19},"end":{"line":15,"column":3}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":2},"end":{"line":16,"column":3}},"loc":{"start":{"line":16,"column":19},"end":{"line":19,"column":3}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":20,"column":2},"end":{"line":20,"column":3}},"loc":{"start":{"line":20,"column":24},"end":{"line":29,"column":3}},"line":20},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":2},"end":{"line":30,"column":3}},"loc":{"start":{"line":30,"column":29},"end":{"line":55,"column":3}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":31,"column":37},"end":{"line":31,"column":38}},"loc":{"start":{"line":31,"column":49},"end":{"line":54,"column":5}},"line":31},"7":{"name":"(anonymous_7)","decl":{"start":{"line":36,"column":36},"end":{"line":36,"column":37}},"loc":{"start":{"line":36,"column":51},"end":{"line":53,"column":7}},"line":36},"8":{"name":"(anonymous_8)","decl":{"start":{"line":41,"column":37},"end":{"line":41,"column":38}},"loc":{"start":{"line":41,"column":52},"end":{"line":52,"column":9}},"line":41},"9":{"name":"(anonymous_9)","decl":{"start":{"line":56,"column":2},"end":{"line":56,"column":3}},"loc":{"start":{"line":56,"column":27},"end":{"line":76,"column":3}},"line":56},"10":{"name":"(anonymous_10)","decl":{"start":{"line":57,"column":37},"end":{"line":57,"column":38}},"loc":{"start":{"line":57,"column":49},"end":{"line":75,"column":5}},"line":57},"11":{"name":"(anonymous_11)","decl":{"start":{"line":62,"column":36},"end":{"line":62,"column":37}},"loc":{"start":{"line":62,"column":51},"end":{"line":74,"column":7}},"line":62},"12":{"name":"(anonymous_12)","decl":{"start":{"line":67,"column":37},"end":{"line":67,"column":38}},"loc":{"start":{"line":67,"column":52},"end":{"line":73,"column":9}},"line":67},"13":{"name":"(anonymous_13)","decl":{"start":{"line":77,"column":2},"end":{"line":77,"column":3}},"loc":{"start":{"line":77,"column":24},"end":{"line":79,"column":3}},"line":77}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},{"start":{},"end":{}}],"line":22},"1":{"loc":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},{"start":{},"end":{}}],"line":25},"2":{"loc":{"start":{"line":33,"column":6},"end":{"line":35,"column":7}},"type":"if","locations":[{"start":{"line":33,"column":6},"end":{"line":35,"column":7}},{"start":{},"end":{}}],"line":33},"3":{"loc":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},{"start":{},"end":{}}],"line":38},"4":{"loc":{"start":{"line":43,"column":10},"end":{"line":45,"column":11}},"type":"if","locations":[{"start":{"line":43,"column":10},"end":{"line":45,"column":11}},{"start":{},"end":{}}],"line":43},"5":{"loc":{"start":{"line":59,"column":6},"end":{"line":61,"column":7}},"type":"if","locations":[{"start":{"line":59,"column":6},"end":{"line":61,"column":7}},{"start":{},"end":{}}],"line":59},"6":{"loc":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},{"start":{},"end":{}}],"line":64}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/other-formula-manager.service.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\nimport type { IDirtyUnitOtherFormulaMap, IOtherFormulaData, IOtherFormulaDataItem } from '../basics/common';\n\nimport { createIdentifier, Disposable } from '@univerjs/core';\n\nexport interface IOtherFormulaManagerSearchParam {\n    unitId: string;\n    subUnitId: string;\n    formulaId: string;\n}\n\nexport interface IOtherFormulaManagerInsertParam extends IOtherFormulaManagerSearchParam {\n    item: IOtherFormulaDataItem;\n}\n\nexport interface IOtherFormulaManagerService {\n    dispose(): void;\n\n    remove(searchParam: IOtherFormulaManagerSearchParam): void;\n\n    get(searchParam: IOtherFormulaManagerSearchParam): Nullable<IOtherFormulaDataItem>;\n\n    has(searchParam: IOtherFormulaManagerSearchParam): boolean;\n\n    register(insertParam: IOtherFormulaManagerInsertParam): void;\n\n    getOtherFormulaData(): IOtherFormulaData;\n\n    batchRegister(formulaData: IOtherFormulaData): void;\n\n    batchRemove(formulaData: IDirtyUnitOtherFormulaMap): void;\n}\n\n/**\n * Passively marked as dirty, register the reference and execution actions of the feature plugin.\n * After execution, a dirty area and calculated data will be returned,\n * causing the formula to be marked dirty again,\n * thereby completing the calculation of the entire dependency tree.\n */\nexport class OtherFormulaManagerService extends Disposable implements IOtherFormulaManagerService {\n    private _otherFormulaData: IOtherFormulaData = {};\n\n    override dispose(): void {\n        super.dispose();\n        this._otherFormulaData = {};\n    }\n\n    remove(searchParam: IOtherFormulaManagerSearchParam) {\n        const { unitId, subUnitId, formulaId } = searchParam;\n        delete this._otherFormulaData?.[unitId]?.[subUnitId]?.[formulaId];\n    }\n\n    get(searchParam: IOtherFormulaManagerSearchParam) {\n        const { unitId, subUnitId, formulaId } = searchParam;\n        return this._otherFormulaData[unitId]?.[subUnitId]?.[formulaId];\n    }\n\n    has(searchParam: IOtherFormulaManagerSearchParam) {\n        const { unitId, subUnitId, formulaId } = searchParam;\n        return this._otherFormulaData[unitId]?.[subUnitId]?.[formulaId] != null;\n    }\n\n    register(insertParam: IOtherFormulaManagerInsertParam) {\n        const { unitId, subUnitId, formulaId, item } = insertParam;\n        if (!this._otherFormulaData[unitId]) {\n            this._otherFormulaData[unitId] = {};\n        }\n\n        if (!this._otherFormulaData[unitId]![subUnitId]) {\n            this._otherFormulaData[unitId]![subUnitId] = {};\n        }\n\n        this._otherFormulaData[unitId]![subUnitId]![formulaId] = item;\n    }\n\n    batchRegister(formulaData: IOtherFormulaData) {\n        Object.keys(formulaData).forEach((unitId) => {\n            const subUnits = formulaData[unitId];\n            if (subUnits == null) {\n                return true;\n            }\n            Object.keys(subUnits).forEach((subUnitId) => {\n                const subUnit = subUnits[subUnitId];\n                if (subUnit == null) {\n                    return true;\n                }\n                Object.keys(subUnit).forEach((formulaId) => {\n                    const item = subUnit[formulaId];\n                    if (item == null) {\n                        return true;\n                    }\n\n                    this.register({\n                        unitId,\n                        subUnitId,\n                        formulaId,\n                        item,\n                    });\n                });\n            });\n        });\n    }\n\n    batchRemove(formulaData: IDirtyUnitOtherFormulaMap) {\n        Object.keys(formulaData).forEach((unitId) => {\n            const subUnits = formulaData[unitId];\n            if (subUnits == null) {\n                return true;\n            }\n            Object.keys(subUnits).forEach((subUnitId) => {\n                const subUnit = subUnits[subUnitId];\n                if (subUnit == null) {\n                    return true;\n                }\n                Object.keys(subUnit).forEach((formulaId) => {\n                    this.remove({\n                        unitId,\n                        subUnitId,\n                        formulaId,\n                    });\n                });\n            });\n        });\n    }\n\n    getOtherFormulaData() {\n        return this._otherFormulaData;\n    }\n}\n\nexport const IOtherFormulaManagerService = createIdentifier<OtherFormulaManagerService>(\n    'univer.formula.other-formula-manager.service'\n);\n"],"mappings":"AAmBA,SAAS,kBAAkB,kBAAkB;AAoCtC,aAAM,mCAAmC,WAAkD;AAAA,EACtF,oBAAuC,CAAC;AAAA,EAEvC,UAAgB;AACrB,UAAM,QAAQ;AACd,SAAK,oBAAoB,CAAC;AAAA,EAC9B;AAAA,EAEA,OAAO,aAA8C;AACjD,UAAM,EAAE,QAAQ,WAAW,UAAU,IAAI;AACzC,WAAO,KAAK,oBAAoB,MAAM,IAAI,SAAS,IAAI,SAAS;AAAA,EACpE;AAAA,EAEA,IAAI,aAA8C;AAC9C,UAAM,EAAE,QAAQ,WAAW,UAAU,IAAI;AACzC,WAAO,KAAK,kBAAkB,MAAM,IAAI,SAAS,IAAI,SAAS;AAAA,EAClE;AAAA,EAEA,IAAI,aAA8C;AAC9C,UAAM,EAAE,QAAQ,WAAW,UAAU,IAAI;AACzC,WAAO,KAAK,kBAAkB,MAAM,IAAI,SAAS,IAAI,SAAS,KAAK;AAAA,EACvE;AAAA,EAEA,SAAS,aAA8C;AACnD,UAAM,EAAE,QAAQ,WAAW,WAAW,KAAK,IAAI;AAC/C,QAAI,CAAC,KAAK,kBAAkB,MAAM,GAAG;AACjC,WAAK,kBAAkB,MAAM,IAAI,CAAC;AAAA,IACtC;AAEA,QAAI,CAAC,KAAK,kBAAkB,MAAM,EAAG,SAAS,GAAG;AAC7C,WAAK,kBAAkB,MAAM,EAAG,SAAS,IAAI,CAAC;AAAA,IAClD;AAEA,SAAK,kBAAkB,MAAM,EAAG,SAAS,EAAG,SAAS,IAAI;AAAA,EAC7D;AAAA,EAEA,cAAc,aAAgC;AAC1C,WAAO,KAAK,WAAW,EAAE,QAAQ,CAAC,WAAW;AACzC,YAAM,WAAW,YAAY,MAAM;AACnC,UAAI,YAAY,MAAM;AAClB,eAAO;AAAA,MACX;AACA,aAAO,KAAK,QAAQ,EAAE,QAAQ,CAAC,cAAc;AACzC,cAAM,UAAU,SAAS,SAAS;AAClC,YAAI,WAAW,MAAM;AACjB,iBAAO;AAAA,QACX;AACA,eAAO,KAAK,OAAO,EAAE,QAAQ,CAAC,cAAc;AACxC,gBAAM,OAAO,QAAQ,SAAS;AAC9B,cAAI,QAAQ,MAAM;AACd,mBAAO;AAAA,UACX;AAEA,eAAK,SAAS;AAAA,YACV;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACJ,CAAC;AAAA,QACL,CAAC;AAAA,MACL,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AAAA,EAEA,YAAY,aAAwC;AAChD,WAAO,KAAK,WAAW,EAAE,QAAQ,CAAC,WAAW;AACzC,YAAM,WAAW,YAAY,MAAM;AACnC,UAAI,YAAY,MAAM;AAClB,eAAO;AAAA,MACX;AACA,aAAO,KAAK,QAAQ,EAAE,QAAQ,CAAC,cAAc;AACzC,cAAM,UAAU,SAAS,SAAS;AAClC,YAAI,WAAW,MAAM;AACjB,iBAAO;AAAA,QACX;AACA,eAAO,KAAK,OAAO,EAAE,QAAQ,CAAC,cAAc;AACxC,eAAK,OAAO;AAAA,YACR;AAAA,YACA;AAAA,YACA;AAAA,UACJ,CAAC;AAAA,QACL,CAAC;AAAA,MACL,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AAAA,EAEA,sBAAsB;AAClB,WAAO,KAAK;AAAA,EAChB;AACJ;AAEO,aAAM,8BAA8B;AAAA,EACvC;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"34669b4b1a3703c10329e966987906e6ff25d7c2"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/dependency/dependency-tree.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/dependency/dependency-tree.ts","statementMap":{"0":{"start":{"line":2,"column":45},"end":{"line":7,"column":25}},"1":{"start":{"line":3,"column":2},"end":{"line":3,"column":64}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":2},"end":{"line":5,"column":58}},"4":{"start":{"line":6,"column":2},"end":{"line":6,"column":26}},"5":{"start":{"line":8,"column":55},"end":{"line":13,"column":35}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":98}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":96}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":100}},"9":{"start":{"line":12,"column":2},"end":{"line":12,"column":36}},"10":{"start":{"line":15,"column":11},"end":{"line":15,"column":12}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":34}},"12":{"start":{"line":20,"column":4},"end":{"line":20,"column":32}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":41}},"14":{"start":{"line":26,"column":4},"end":{"line":26,"column":31}},"15":{"start":{"line":29,"column":4},"end":{"line":29,"column":40}},"16":{"start":{"line":32,"column":29},"end":{"line":32,"column":38}},"17":{"start":{"line":33,"column":28},"end":{"line":33,"column":37}},"18":{"start":{"line":35,"column":4},"end":{"line":35,"column":35}},"19":{"start":{"line":36,"column":4},"end":{"line":36,"column":27}},"20":{"start":{"line":39,"column":4},"end":{"line":39,"column":37}},"21":{"start":{"line":42,"column":4},"end":{"line":42,"column":34}},"22":{"start":{"line":47,"column":15},"end":{"line":47,"column":17}},"23":{"start":{"line":48,"column":15},"end":{"line":48,"column":17}},"24":{"start":{"line":49,"column":12},"end":{"line":49,"column":17}},"25":{"start":{"line":50,"column":12},"end":{"line":50,"column":17}},"26":{"start":{"line":51,"column":25},"end":{"line":51,"column":27}},"27":{"start":{"line":53,"column":4},"end":{"line":53,"column":16}},"28":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"29":{"start":{"line":57,"column":6},"end":{"line":57,"column":16}},"30":{"start":{"line":59,"column":4},"end":{"line":59,"column":46}},"31":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"32":{"start":{"line":63,"column":6},"end":{"line":63,"column":16}},"33":{"start":{"line":65,"column":4},"end":{"line":65,"column":49}},"34":{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},"35":{"start":{"line":69,"column":6},"end":{"line":69,"column":15}},"36":{"start":{"line":71,"column":4},"end":{"line":71,"column":33}},"37":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"38":{"start":{"line":75,"column":6},"end":{"line":75,"column":15}},"39":{"start":{"line":77,"column":4},"end":{"line":77,"column":36}},"40":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"41":{"start":{"line":81,"column":6},"end":{"line":81,"column":16}},"42":{"start":{"line":83,"column":4},"end":{"line":83,"column":31}},"43":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"44":{"start":{"line":87,"column":6},"end":{"line":87,"column":16}},"45":{"start":{"line":89,"column":4},"end":{"line":89,"column":34}},"46":{"start":{"line":92,"column":4},"end":{"line":92,"column":39}},"47":{"start":{"line":95,"column":4},"end":{"line":99,"column":6}},"48":{"start":{"line":102,"column":4},"end":{"line":102,"column":30}},"49":{"start":{"line":105,"column":4},"end":{"line":105,"column":24}},"50":{"start":{"line":108,"column":26},"end":{"line":108,"column":28}},"51":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"52":{"start":{"line":110,"column":6},"end":{"line":110,"column":16}},"53":{"start":{"line":112,"column":4},"end":{"line":119,"column":5}},"54":{"start":{"line":112,"column":17},"end":{"line":112,"column":18}},"55":{"start":{"line":113,"column":20},"end":{"line":113,"column":45}},"56":{"start":{"line":114,"column":6},"end":{"line":118,"column":9}},"57":{"start":{"line":120,"column":4},"end":{"line":120,"column":25}},"58":{"start":{"line":123,"column":23},"end":{"line":123,"column":31}},"59":{"start":{"line":124,"column":26},"end":{"line":124,"column":37}},"60":{"start":{"line":125,"column":4},"end":{"line":134,"column":7}},"61":{"start":{"line":137,"column":21},"end":{"line":137,"column":35}},"62":{"start":{"line":138,"column":24},"end":{"line":138,"column":41}},"63":{"start":{"line":139,"column":19},"end":{"line":139,"column":31}},"64":{"start":{"line":140,"column":22},"end":{"line":140,"column":37}},"65":{"start":{"line":141,"column":23},"end":{"line":141,"column":31}},"66":{"start":{"line":142,"column":26},"end":{"line":142,"column":37}},"67":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"68":{"start":{"line":144,"column":6},"end":{"line":144,"column":19}},"69":{"start":{"line":146,"column":4},"end":{"line":146,"column":16}},"70":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"71":{"start":{"line":150,"column":6},"end":{"line":150,"column":19}},"72":{"start":{"line":152,"column":4},"end":{"line":152,"column":67}},"73":{"start":{"line":155,"column":22},"end":{"line":155,"column":36}},"74":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"75":{"start":{"line":157,"column":6},"end":{"line":157,"column":19}},"76":{"start":{"line":159,"column":4},"end":{"line":186,"column":5}},"77":{"start":{"line":159,"column":17},"end":{"line":159,"column":18}},"78":{"start":{"line":159,"column":26},"end":{"line":159,"column":42}},"79":{"start":{"line":160,"column":24},"end":{"line":160,"column":36}},"80":{"start":{"line":161,"column":41},"end":{"line":161,"column":50}},"81":{"start":{"line":162,"column":27},"end":{"line":162,"column":64}},"82":{"start":{"line":163,"column":119},"end":{"line":163,"column":124}},"83":{"start":{"line":164,"column":6},"end":{"line":166,"column":7}},"84":{"start":{"line":165,"column":8},"end":{"line":165,"column":26}},"85":{"start":{"line":167,"column":6},"end":{"line":169,"column":7}},"86":{"start":{"line":168,"column":8},"end":{"line":168,"column":29}},"87":{"start":{"line":170,"column":6},"end":{"line":172,"column":7}},"88":{"start":{"line":171,"column":8},"end":{"line":171,"column":47}},"89":{"start":{"line":173,"column":6},"end":{"line":175,"column":7}},"90":{"start":{"line":174,"column":8},"end":{"line":174,"column":50}},"91":{"start":{"line":176,"column":22},"end":{"line":176,"column":27}},"92":{"start":{"line":177,"column":6},"end":{"line":182,"column":9}},"93":{"start":{"line":178,"column":8},"end":{"line":181,"column":9}},"94":{"start":{"line":179,"column":10},"end":{"line":179,"column":27}},"95":{"start":{"line":180,"column":10},"end":{"line":180,"column":23}},"96":{"start":{"line":183,"column":6},"end":{"line":185,"column":7}},"97":{"start":{"line":184,"column":8},"end":{"line":184,"column":20}},"98":{"start":{"line":187,"column":4},"end":{"line":187,"column":17}},"99":{"start":{"line":192,"column":4},"end":{"line":194,"column":5}},"100":{"start":{"line":193,"column":6},"end":{"line":193,"column":16}},"101":{"start":{"line":195,"column":4},"end":{"line":195,"column":34}},"102":{"start":{"line":199,"column":12},"end":{"line":199,"column":17}},"103":{"start":{"line":201,"column":23},"end":{"line":201,"column":25}},"104":{"start":{"line":202,"column":15},"end":{"line":202,"column":16}},"105":{"start":{"line":203,"column":15},"end":{"line":203,"column":16}},"106":{"start":{"line":204,"column":9},"end":{"line":204,"column":10}},"107":{"start":{"line":206,"column":14},"end":{"line":206,"column":16}},"108":{"start":{"line":207,"column":11},"end":{"line":207,"column":13}},"109":{"start":{"line":208,"column":14},"end":{"line":208,"column":16}},"110":{"start":{"line":209,"column":12},"end":{"line":209,"column":14}},"111":{"start":{"line":210,"column":8},"end":{"line":210,"column":10}},"112":{"start":{"line":211,"column":11},"end":{"line":211,"column":13}},"113":{"start":{"line":212,"column":13},"end":{"line":212,"column":37}},"114":{"start":{"line":213,"column":16},"end":{"line":213,"column":40}},"115":{"start":{"line":214,"column":12},"end":{"line":214,"column":17}},"116":{"start":{"line":216,"column":25},"end":{"line":216,"column":27}},"117":{"start":{"line":218,"column":4},"end":{"line":218,"column":12}},"118":{"start":{"line":219,"column":4},"end":{"line":219,"column":25}},"119":{"start":{"line":222,"column":4},"end":{"line":222,"column":17}},"120":{"start":{"line":225,"column":4},"end":{"line":229,"column":6}},"121":{"start":{"line":232,"column":4},"end":{"line":236,"column":6}},"122":{"start":{"line":240,"column":4},"end":{"line":240,"column":33}},"123":{"start":{"line":241,"column":4},"end":{"line":241,"column":24}},"124":{"start":{"line":242,"column":4},"end":{"line":242,"column":35}},"125":{"start":{"line":243,"column":4},"end":{"line":243,"column":29}},"126":{"start":{"line":246,"column":21},"end":{"line":246,"column":35}},"127":{"start":{"line":247,"column":24},"end":{"line":247,"column":41}},"128":{"start":{"line":248,"column":19},"end":{"line":248,"column":31}},"129":{"start":{"line":249,"column":22},"end":{"line":249,"column":37}},"130":{"start":{"line":250,"column":23},"end":{"line":250,"column":31}},"131":{"start":{"line":251,"column":26},"end":{"line":251,"column":37}},"132":{"start":{"line":252,"column":4},"end":{"line":254,"column":5}},"133":{"start":{"line":253,"column":6},"end":{"line":253,"column":19}},"134":{"start":{"line":255,"column":4},"end":{"line":255,"column":16}},"135":{"start":{"line":258,"column":22},"end":{"line":258,"column":36}},"136":{"start":{"line":259,"column":4},"end":{"line":261,"column":5}},"137":{"start":{"line":260,"column":6},"end":{"line":260,"column":19}},"138":{"start":{"line":262,"column":4},"end":{"line":268,"column":5}},"139":{"start":{"line":262,"column":17},"end":{"line":262,"column":18}},"140":{"start":{"line":262,"column":26},"end":{"line":262,"column":42}},"141":{"start":{"line":263,"column":24},"end":{"line":263,"column":36}},"142":{"start":{"line":264,"column":34},"end":{"line":264,"column":43}},"143":{"start":{"line":265,"column":6},"end":{"line":267,"column":7}},"144":{"start":{"line":266,"column":8},"end":{"line":266,"column":20}},"145":{"start":{"line":269,"column":4},"end":{"line":269,"column":17}},"146":{"start":{"line":272,"column":22},"end":{"line":272,"column":36}},"147":{"start":{"line":273,"column":4},"end":{"line":275,"column":5}},"148":{"start":{"line":274,"column":6},"end":{"line":274,"column":19}},"149":{"start":{"line":276,"column":4},"end":{"line":303,"column":5}},"150":{"start":{"line":276,"column":17},"end":{"line":276,"column":18}},"151":{"start":{"line":276,"column":26},"end":{"line":276,"column":42}},"152":{"start":{"line":277,"column":24},"end":{"line":277,"column":36}},"153":{"start":{"line":278,"column":41},"end":{"line":278,"column":50}},"154":{"start":{"line":279,"column":27},"end":{"line":279,"column":64}},"155":{"start":{"line":280,"column":119},"end":{"line":280,"column":124}},"156":{"start":{"line":281,"column":6},"end":{"line":283,"column":7}},"157":{"start":{"line":282,"column":8},"end":{"line":282,"column":26}},"158":{"start":{"line":284,"column":6},"end":{"line":286,"column":7}},"159":{"start":{"line":285,"column":8},"end":{"line":285,"column":29}},"160":{"start":{"line":287,"column":6},"end":{"line":289,"column":7}},"161":{"start":{"line":288,"column":8},"end":{"line":288,"column":47}},"162":{"start":{"line":290,"column":6},"end":{"line":292,"column":7}},"163":{"start":{"line":291,"column":8},"end":{"line":291,"column":50}},"164":{"start":{"line":293,"column":22},"end":{"line":293,"column":27}},"165":{"start":{"line":294,"column":6},"end":{"line":299,"column":9}},"166":{"start":{"line":295,"column":8},"end":{"line":298,"column":9}},"167":{"start":{"line":296,"column":10},"end":{"line":296,"column":27}},"168":{"start":{"line":297,"column":10},"end":{"line":297,"column":23}},"169":{"start":{"line":300,"column":6},"end":{"line":302,"column":7}},"170":{"start":{"line":301,"column":8},"end":{"line":301,"column":20}},"171":{"start":{"line":304,"column":4},"end":{"line":304,"column":17}},"172":{"start":{"line":315,"column":4},"end":{"line":315,"column":35}},"173":{"start":{"line":318,"column":4},"end":{"line":318,"column":80}},"174":{"start":{"line":324,"column":4},"end":{"line":326,"column":5}},"175":{"start":{"line":325,"column":6},"end":{"line":325,"column":37}},"176":{"start":{"line":327,"column":23},"end":{"line":327,"column":31}},"177":{"start":{"line":328,"column":26},"end":{"line":328,"column":37}},"178":{"start":{"line":329,"column":4},"end":{"line":338,"column":7}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":46},"end":{"line":2,"column":47}},"loc":{"start":{"line":2,"column":68},"end":{"line":7,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":56},"end":{"line":8,"column":57}},"loc":{"start":{"line":8,"column":88},"end":{"line":13,"column":1}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":2},"end":{"line":16,"column":3}},"loc":{"start":{"line":16,"column":15},"end":{"line":18,"column":3}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":2},"end":{"line":19,"column":3}},"loc":{"start":{"line":19,"column":13},"end":{"line":21,"column":3}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":22,"column":2},"end":{"line":22,"column":3}},"loc":{"start":{"line":22,"column":12},"end":{"line":24,"column":3}},"line":22},"5":{"name":"(anonymous_5)","decl":{"start":{"line":25,"column":2},"end":{"line":25,"column":3}},"loc":{"start":{"line":25,"column":12},"end":{"line":27,"column":3}},"line":25},"6":{"name":"(anonymous_6)","decl":{"start":{"line":28,"column":2},"end":{"line":28,"column":3}},"loc":{"start":{"line":28,"column":11},"end":{"line":30,"column":3}},"line":28},"7":{"name":"(anonymous_7)","decl":{"start":{"line":34,"column":2},"end":{"line":34,"column":3}},"loc":{"start":{"line":34,"column":21},"end":{"line":37,"column":3}},"line":34},"8":{"name":"(anonymous_8)","decl":{"start":{"line":38,"column":2},"end":{"line":38,"column":3}},"loc":{"start":{"line":38,"column":22},"end":{"line":40,"column":3}},"line":38},"9":{"name":"(anonymous_9)","decl":{"start":{"line":41,"column":2},"end":{"line":41,"column":3}},"loc":{"start":{"line":41,"column":20},"end":{"line":43,"column":3}},"line":41},"10":{"name":"(anonymous_10)","decl":{"start":{"line":52,"column":2},"end":{"line":52,"column":3}},"loc":{"start":{"line":52,"column":18},"end":{"line":54,"column":3}},"line":52},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":2},"end":{"line":55,"column":3}},"loc":{"start":{"line":55,"column":12},"end":{"line":60,"column":3}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":61,"column":2},"end":{"line":61,"column":3}},"loc":{"start":{"line":61,"column":15},"end":{"line":66,"column":3}},"line":61},"13":{"name":"(anonymous_13)","decl":{"start":{"line":67,"column":2},"end":{"line":67,"column":3}},"loc":{"start":{"line":67,"column":17},"end":{"line":72,"column":3}},"line":67},"14":{"name":"(anonymous_14)","decl":{"start":{"line":73,"column":2},"end":{"line":73,"column":3}},"loc":{"start":{"line":73,"column":20},"end":{"line":78,"column":3}},"line":73},"15":{"name":"(anonymous_15)","decl":{"start":{"line":79,"column":2},"end":{"line":79,"column":3}},"loc":{"start":{"line":79,"column":15},"end":{"line":84,"column":3}},"line":79},"16":{"name":"(anonymous_16)","decl":{"start":{"line":85,"column":2},"end":{"line":85,"column":3}},"loc":{"start":{"line":85,"column":18},"end":{"line":90,"column":3}},"line":85},"17":{"name":"(anonymous_17)","decl":{"start":{"line":91,"column":2},"end":{"line":91,"column":3}},"loc":{"start":{"line":91,"column":16},"end":{"line":93,"column":3}},"line":91},"18":{"name":"(anonymous_18)","decl":{"start":{"line":94,"column":2},"end":{"line":94,"column":3}},"loc":{"start":{"line":94,"column":17},"end":{"line":100,"column":3}},"line":94},"19":{"name":"(anonymous_19)","decl":{"start":{"line":101,"column":2},"end":{"line":101,"column":3}},"loc":{"start":{"line":101,"column":13},"end":{"line":103,"column":3}},"line":101},"20":{"name":"(anonymous_20)","decl":{"start":{"line":104,"column":2},"end":{"line":104,"column":3}},"loc":{"start":{"line":104,"column":12},"end":{"line":106,"column":3}},"line":104},"21":{"name":"(anonymous_21)","decl":{"start":{"line":107,"column":2},"end":{"line":107,"column":3}},"loc":{"start":{"line":107,"column":18},"end":{"line":121,"column":3}},"line":107},"22":{"name":"(anonymous_22)","decl":{"start":{"line":122,"column":2},"end":{"line":122,"column":3}},"loc":{"start":{"line":122,"column":16},"end":{"line":135,"column":3}},"line":122},"23":{"name":"(anonymous_23)","decl":{"start":{"line":136,"column":2},"end":{"line":136,"column":3}},"loc":{"start":{"line":136,"column":21},"end":{"line":147,"column":3}},"line":136},"24":{"name":"(anonymous_24)","decl":{"start":{"line":148,"column":2},"end":{"line":148,"column":3}},"loc":{"start":{"line":148,"column":45},"end":{"line":153,"column":3}},"line":148},"25":{"name":"(anonymous_25)","decl":{"start":{"line":154,"column":2},"end":{"line":154,"column":3}},"loc":{"start":{"line":154,"column":35},"end":{"line":188,"column":3}},"line":154},"26":{"name":"(anonymous_26)","decl":{"start":{"line":177,"column":29},"end":{"line":177,"column":30}},"loc":{"start":{"line":177,"column":46},"end":{"line":182,"column":7}},"line":177},"27":{"name":"(anonymous_27)","decl":{"start":{"line":191,"column":2},"end":{"line":191,"column":3}},"loc":{"start":{"line":191,"column":18},"end":{"line":196,"column":3}},"line":191},"28":{"name":"(anonymous_28)","decl":{"start":{"line":217,"column":2},"end":{"line":217,"column":3}},"loc":{"start":{"line":217,"column":22},"end":{"line":220,"column":3}},"line":217},"29":{"name":"(anonymous_29)","decl":{"start":{"line":221,"column":2},"end":{"line":221,"column":3}},"loc":{"start":{"line":221,"column":18},"end":{"line":223,"column":3}},"line":221},"30":{"name":"(anonymous_30)","decl":{"start":{"line":224,"column":2},"end":{"line":224,"column":3}},"loc":{"start":{"line":224,"column":17},"end":{"line":230,"column":3}},"line":224},"31":{"name":"(anonymous_31)","decl":{"start":{"line":231,"column":2},"end":{"line":231,"column":3}},"loc":{"start":{"line":231,"column":11},"end":{"line":237,"column":3}},"line":231},"32":{"name":"(anonymous_32)","decl":{"start":{"line":239,"column":2},"end":{"line":239,"column":3}},"loc":{"start":{"line":239,"column":12},"end":{"line":244,"column":3}},"line":239},"33":{"name":"(anonymous_33)","decl":{"start":{"line":245,"column":2},"end":{"line":245,"column":3}},"loc":{"start":{"line":245,"column":21},"end":{"line":256,"column":3}},"line":245},"34":{"name":"(anonymous_34)","decl":{"start":{"line":257,"column":2},"end":{"line":257,"column":3}},"loc":{"start":{"line":257,"column":45},"end":{"line":270,"column":3}},"line":257},"35":{"name":"(anonymous_35)","decl":{"start":{"line":271,"column":2},"end":{"line":271,"column":3}},"loc":{"start":{"line":271,"column":35},"end":{"line":305,"column":3}},"line":271},"36":{"name":"(anonymous_36)","decl":{"start":{"line":294,"column":29},"end":{"line":294,"column":30}},"loc":{"start":{"line":294,"column":46},"end":{"line":299,"column":7}},"line":294},"37":{"name":"(anonymous_37)","decl":{"start":{"line":314,"column":2},"end":{"line":314,"column":3}},"loc":{"start":{"line":314,"column":24},"end":{"line":316,"column":3}},"line":314},"38":{"name":"(anonymous_38)","decl":{"start":{"line":317,"column":2},"end":{"line":317,"column":3}},"loc":{"start":{"line":317,"column":26},"end":{"line":319,"column":3}},"line":317},"39":{"name":"(anonymous_39)","decl":{"start":{"line":323,"column":2},"end":{"line":323,"column":3}},"loc":{"start":{"line":323,"column":16},"end":{"line":339,"column":3}},"line":323}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":3},"end":{"line":7,"column":24}},"type":"binary-expr","locations":[{"start":{"line":7,"column":3},"end":{"line":7,"column":18}},{"start":{"line":7,"column":22},"end":{"line":7,"column":24}}],"line":7},"1":{"loc":{"start":{"line":13,"column":3},"end":{"line":13,"column":34}},"type":"binary-expr","locations":[{"start":{"line":13,"column":3},"end":{"line":13,"column":28}},{"start":{"line":13,"column":32},"end":{"line":13,"column":34}}],"line":13},"2":{"loc":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},{"start":{},"end":{}}],"line":56},"3":{"loc":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},{"start":{},"end":{}}],"line":62},"4":{"loc":{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},{"start":{},"end":{}}],"line":68},"5":{"loc":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},{"start":{},"end":{}}],"line":74},"6":{"loc":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},{"start":{},"end":{}}],"line":80},"7":{"loc":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},{"start":{},"end":{}}],"line":86},"8":{"loc":{"start":{"line":92,"column":11},"end":{"line":92,"column":38}},"type":"binary-expr","locations":[{"start":{"line":92,"column":11},"end":{"line":92,"column":32}},{"start":{"line":92,"column":36},"end":{"line":92,"column":38}}],"line":92},"9":{"loc":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},{"start":{},"end":{}}],"line":109},"10":{"loc":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},{"start":{},"end":{}}],"line":143},"11":{"loc":{"start":{"line":143,"column":8},"end":{"line":143,"column":112}},"type":"binary-expr","locations":[{"start":{"line":143,"column":8},"end":{"line":143,"column":29}},{"start":{"line":143,"column":33},"end":{"line":143,"column":52}},{"start":{"line":143,"column":56},"end":{"line":143,"column":83}},{"start":{"line":143,"column":87},"end":{"line":143,"column":112}}],"line":143},"12":{"loc":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},{"start":{},"end":{}}],"line":149},"13":{"loc":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},{"start":{},"end":{}}],"line":156},"14":{"loc":{"start":{"line":164,"column":6},"end":{"line":166,"column":7}},"type":"if","locations":[{"start":{"line":164,"column":6},"end":{"line":166,"column":7}},{"start":{},"end":{}}],"line":164},"15":{"loc":{"start":{"line":167,"column":6},"end":{"line":169,"column":7}},"type":"if","locations":[{"start":{"line":167,"column":6},"end":{"line":169,"column":7}},{"start":{},"end":{}}],"line":167},"16":{"loc":{"start":{"line":170,"column":6},"end":{"line":172,"column":7}},"type":"if","locations":[{"start":{"line":170,"column":6},"end":{"line":172,"column":7}},{"start":{},"end":{}}],"line":170},"17":{"loc":{"start":{"line":173,"column":6},"end":{"line":175,"column":7}},"type":"if","locations":[{"start":{"line":173,"column":6},"end":{"line":175,"column":7}},{"start":{},"end":{}}],"line":173},"18":{"loc":{"start":{"line":178,"column":8},"end":{"line":181,"column":9}},"type":"if","locations":[{"start":{"line":178,"column":8},"end":{"line":181,"column":9}},{"start":{},"end":{}}],"line":178},"19":{"loc":{"start":{"line":178,"column":12},"end":{"line":178,"column":112}},"type":"binary-expr","locations":[{"start":{"line":178,"column":12},"end":{"line":178,"column":32}},{"start":{"line":178,"column":36},"end":{"line":178,"column":54}},{"start":{"line":178,"column":58},"end":{"line":178,"column":84}},{"start":{"line":178,"column":88},"end":{"line":178,"column":112}}],"line":178},"20":{"loc":{"start":{"line":183,"column":6},"end":{"line":185,"column":7}},"type":"if","locations":[{"start":{"line":183,"column":6},"end":{"line":185,"column":7}},{"start":{},"end":{}}],"line":183},"21":{"loc":{"start":{"line":192,"column":4},"end":{"line":194,"column":5}},"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":194,"column":5}},{"start":{},"end":{}}],"line":192},"22":{"loc":{"start":{"line":252,"column":4},"end":{"line":254,"column":5}},"type":"if","locations":[{"start":{"line":252,"column":4},"end":{"line":254,"column":5}},{"start":{},"end":{}}],"line":252},"23":{"loc":{"start":{"line":252,"column":8},"end":{"line":252,"column":112}},"type":"binary-expr","locations":[{"start":{"line":252,"column":8},"end":{"line":252,"column":29}},{"start":{"line":252,"column":33},"end":{"line":252,"column":52}},{"start":{"line":252,"column":56},"end":{"line":252,"column":83}},{"start":{"line":252,"column":87},"end":{"line":252,"column":112}}],"line":252},"24":{"loc":{"start":{"line":259,"column":4},"end":{"line":261,"column":5}},"type":"if","locations":[{"start":{"line":259,"column":4},"end":{"line":261,"column":5}},{"start":{},"end":{}}],"line":259},"25":{"loc":{"start":{"line":259,"column":8},"end":{"line":259,"column":63}},"type":"binary-expr","locations":[{"start":{"line":259,"column":8},"end":{"line":259,"column":30}},{"start":{"line":259,"column":34},"end":{"line":259,"column":63}}],"line":259},"26":{"loc":{"start":{"line":265,"column":6},"end":{"line":267,"column":7}},"type":"if","locations":[{"start":{"line":265,"column":6},"end":{"line":267,"column":7}},{"start":{},"end":{}}],"line":265},"27":{"loc":{"start":{"line":273,"column":4},"end":{"line":275,"column":5}},"type":"if","locations":[{"start":{"line":273,"column":4},"end":{"line":275,"column":5}},{"start":{},"end":{}}],"line":273},"28":{"loc":{"start":{"line":281,"column":6},"end":{"line":283,"column":7}},"type":"if","locations":[{"start":{"line":281,"column":6},"end":{"line":283,"column":7}},{"start":{},"end":{}}],"line":281},"29":{"loc":{"start":{"line":284,"column":6},"end":{"line":286,"column":7}},"type":"if","locations":[{"start":{"line":284,"column":6},"end":{"line":286,"column":7}},{"start":{},"end":{}}],"line":284},"30":{"loc":{"start":{"line":287,"column":6},"end":{"line":289,"column":7}},"type":"if","locations":[{"start":{"line":287,"column":6},"end":{"line":289,"column":7}},{"start":{},"end":{}}],"line":287},"31":{"loc":{"start":{"line":290,"column":6},"end":{"line":292,"column":7}},"type":"if","locations":[{"start":{"line":290,"column":6},"end":{"line":292,"column":7}},{"start":{},"end":{}}],"line":290},"32":{"loc":{"start":{"line":295,"column":8},"end":{"line":298,"column":9}},"type":"if","locations":[{"start":{"line":295,"column":8},"end":{"line":298,"column":9}},{"start":{},"end":{}}],"line":295},"33":{"loc":{"start":{"line":295,"column":12},"end":{"line":295,"column":112}},"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":32}},{"start":{"line":295,"column":36},"end":{"line":295,"column":54}},{"start":{"line":295,"column":58},"end":{"line":295,"column":84}},{"start":{"line":295,"column":88},"end":{"line":295,"column":112}}],"line":295},"34":{"loc":{"start":{"line":300,"column":6},"end":{"line":302,"column":7}},"type":"if","locations":[{"start":{"line":300,"column":6},"end":{"line":302,"column":7}},{"start":{},"end":{}}],"line":300},"35":{"loc":{"start":{"line":318,"column":11},"end":{"line":318,"column":57}},"type":"binary-expr","locations":[{"start":{"line":318,"column":11},"end":{"line":318,"column":38}},{"start":{"line":318,"column":42},"end":{"line":318,"column":57}}],"line":318},"36":{"loc":{"start":{"line":324,"column":4},"end":{"line":326,"column":5}},"type":"if","locations":[{"start":{"line":324,"column":4},"end":{"line":326,"column":5}},{"start":{},"end":{}}],"line":324}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0},"f":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"b":{"0":[1,1],"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0,0,0],"34":[0,0],"35":[0,0],"36":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/dependency/dependency-tree.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n    IDirtyUnitSheetNameMap,\n    IFeatureDirtyRangeType,\n    IRuntimeUnitDataType,\n    IUnitExcludedCell,\n} from '../../basics/common';\nimport type { IFormulaDirtyData } from '../../services/current-data.service';\nimport type { IAllRuntimeData } from '../../services/runtime.service';\n\nimport type { AstRootNode, FunctionNode } from '../ast-node';\nimport { type IRange, type IUnitRange, moveRangeByOffset, type Nullable } from '@univerjs/core';\n\nexport enum FDtreeStateType {\n    DEFAULT,\n    ADDED,\n    SKIP,\n}\n\nexport enum FormulaDependencyTreeType {\n    NORMAL_FORMULA,\n    OTHER_FORMULA,\n    FEATURE_FORMULA,\n}\n\n// export interface IUnitRangeWithToken {\n//     gridRange: IUnitRange;\n//     token: string;\n// }\n\nclass FormulaDependencyTreeCalculator {\n    private _state = FDtreeStateType.DEFAULT;\n\n    resetState() {\n        this._state = FDtreeStateType.DEFAULT;\n    }\n\n    setAdded() {\n        this._state = FDtreeStateType.ADDED;\n    }\n\n    isAdded() {\n        return this._state === FDtreeStateType.ADDED;\n    }\n\n    setSkip() {\n        this._state = FDtreeStateType.SKIP;\n    }\n\n    isSkip() {\n        return this._state === FDtreeStateType.SKIP;\n    }\n\n    treeId: number;\n\n    children: Set<number> = new Set();\n\n    parents: Set<number> = new Set();\n\n    pushChildren(tree: FormulaDependencyTreeCalculator) {\n        this.children.add(tree.treeId);\n        tree._pushParent(this);\n    }\n\n    hasChildren(treeId: number) {\n        return this.children.has(treeId);\n    }\n\n    private _pushParent(tree: FormulaDependencyTreeCalculator) {\n        this.parents.add(tree.treeId);\n    }\n}\n\ntype GetDirtyDataType = Nullable<\n    (dirtyData: IFormulaDirtyData, runtimeData: IAllRuntimeData) => {\n        runtimeCellData: IRuntimeUnitDataType;\n        dirtyRanges: IFeatureDirtyRangeType;\n    }\n>;\nexport type IFormulaDependencyTree = FormulaDependencyTree | FormulaDependencyTreeVirtual;\n\nexport class FormulaDependencyTreeVirtual extends FormulaDependencyTreeCalculator {\n    refTree: Nullable<FormulaDependencyTree>;\n    refOffsetX: number = -1;\n    refOffsetY: number = -1;\n    isCache: boolean = false;\n    isDirty: boolean = false;\n\n    addressFunctionNodes: FunctionNode[] = [];\n\n    get isVirtual() {\n        return true;\n    }\n\n    get row() {\n        if (this.refTree == null) {\n            return -1;\n        }\n        return this.refTree.row + this.refOffsetY;\n    }\n\n    get column() {\n        if (this.refTree == null) {\n            return -1;\n        }\n        return this.refTree.column + this.refOffsetX;\n    }\n\n    get rowCount() {\n        if (this.refTree == null) {\n            return 0;\n        }\n        return this.refTree.rowCount;\n    }\n\n    get columnCount() {\n        if (this.refTree == null) {\n            return 0;\n        }\n        return this.refTree.columnCount;\n    }\n\n    get unitId() {\n        if (this.refTree == null) {\n            return '';\n        }\n        return this.refTree.unitId;\n    }\n\n    get subUnitId() {\n        if (this.refTree == null) {\n            return '';\n        }\n        return this.refTree.subUnitId;\n    }\n\n    get formula() {\n        return this.refTree?.formula ?? '';\n    }\n\n    get nodeData() {\n        return {\n            node: this.node,\n            refOffsetX: this.refOffsetX,\n            refOffsetY: this.refOffsetY,\n        };\n    }\n\n    get node() {\n        return this.refTree?.node;\n    }\n\n    dispose() {\n        this.refTree = null;\n    }\n\n    get rangeList() {\n        const unitRangeList = [];\n        if (this.refTree == null) {\n            return [];\n        }\n        for (let i = 0; i < this.refTree.rangeList.length; i++) {\n            const range = this.refTree.rangeList[i];\n            unitRangeList.push({\n                unitId: range.unitId,\n                sheetId: range.sheetId,\n                range: moveRangeByOffset(range.range, this.refOffsetX, this.refOffsetY),\n            });\n        }\n        return unitRangeList;\n    }\n\n    toRTreeItem(): IUnitRange[] {\n        const currentRow = this.row;\n        const currentColumn = this.column;\n\n        return [{\n            unitId: this.unitId,\n            sheetId: this.subUnitId,\n            range: {\n                startRow: currentRow,\n                startColumn: currentColumn,\n                endRow: currentRow,\n                endColumn: currentColumn,\n            },\n        }];\n    }\n\n    inRangeData(range: IRange) {\n        const startRow = range.startRow;\n        const startColumn = range.startColumn;\n        const endRow = range.endRow;\n        const endColumn = range.endColumn;\n\n        const currentRow = this.row;\n        const currentColumn = this.column;\n\n        if (currentRow < startRow || currentRow > endRow || currentColumn < startColumn || currentColumn > endColumn) {\n            return false;\n        }\n\n        return true;\n    }\n\n    dependencySheetName(dirtyUnitSheetNameMap?: IDirtyUnitSheetNameMap) {\n        if (this.refTree == null) {\n            return false;\n        }\n        return this.refTree.dependencySheetName(dirtyUnitSheetNameMap);\n    }\n\n    isExcludeRange(unitExcludedCell: Nullable<IUnitExcludedCell>) {\n        const rangeList = this.rangeList;\n\n        if (rangeList.length === 0) {\n            return false;\n        }\n\n        for (let r = 0, len = rangeList.length; r < len; r++) {\n            const unitRange = rangeList[r];\n            const { unitId, sheetId, range } = unitRange;\n\n            const excludedCell = unitExcludedCell?.[unitId]?.[sheetId];\n            let { startRow: rangeStartRow, endRow: rangeEndRow, startColumn: rangeStartColumn, endColumn: rangeEndColumn } = range;\n\n            if (Number.isNaN(rangeStartRow)) {\n                rangeStartRow = 0;\n            }\n            if (Number.isNaN(rangeStartColumn)) {\n                rangeStartColumn = 0;\n            }\n            if (Number.isNaN(rangeEndRow)) {\n                rangeEndRow = Number.POSITIVE_INFINITY;\n            }\n            if (Number.isNaN(rangeEndColumn)) {\n                rangeEndColumn = Number.POSITIVE_INFINITY;\n            }\n\n            let isInclude = false;\n\n            excludedCell?.forValue((row, column) => {\n                if (row >= rangeStartRow && row <= rangeEndRow && column >= rangeStartColumn && column <= rangeEndColumn) {\n                    isInclude = true;\n                    return false;\n                }\n            });\n\n            if (isInclude) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getDirtyData: GetDirtyDataType;\n\n    featureId: Nullable<string>;\n    get formulaId() {\n        if (this.refTree == null) {\n            return '';\n        }\n        return this.refTree.formulaId;\n    }\n}\n\n/**\n * A dependency tree, capable of calculating mutual dependencies,\n * is used to determine the order of formula calculations.\n */\nexport class FormulaDependencyTree extends FormulaDependencyTreeCalculator {\n    isCache: boolean = false;\n\n    featureId: Nullable<string>;\n    featureDirtyRanges: IUnitRange[] = [];\n\n    refOffsetX: number = 0;\n    refOffsetY: number = 0;\n\n    type: FormulaDependencyTreeType = FormulaDependencyTreeType.NORMAL_FORMULA;\n\n    formulaId: Nullable<string>;\n\n    subUnitId: string = '';\n\n    unitId: string = '';\n\n    rangeList: IUnitRange[] = [];\n\n    formula: string = '';\n\n    row: number = -1;\n\n    column: number = -1;\n\n    rowCount: number = Number.NEGATIVE_INFINITY;\n\n    columnCount: number = Number.NEGATIVE_INFINITY;\n\n    isDirty: boolean = false;\n\n    node: Nullable<AstRootNode>;\n\n    addressFunctionNodes: FunctionNode[] = [];\n\n    constructor(treeId: number) {\n        super();\n        this.treeId = treeId;\n    }\n\n    get isVirtual() {\n        return false;\n    }\n\n    get nodeData() {\n        return {\n            node: this.node,\n            refOffsetX: 0,\n            refOffsetY: 0,\n        };\n    }\n\n    toJson() {\n        return {\n            formula: this.formula,\n            refOffsetX: this.refOffsetX,\n            refOffsetY: this.refOffsetY,\n        };\n    }\n\n    getDirtyData: GetDirtyDataType;\n\n    dispose(): void {\n        this.featureDirtyRanges = [];\n\n        this.rangeList = [];\n\n        this.addressFunctionNodes = [];\n\n        // this.nodeData?.node.dispose();\n\n        this.getDirtyData = null;\n    }\n\n    inRangeData(range: IRange) {\n        const startRow = range.startRow;\n        const startColumn = range.startColumn;\n        const endRow = range.endRow;\n        const endColumn = range.endColumn;\n\n        const currentRow = this.row;\n        const currentColumn = this.column;\n\n        if (currentRow < startRow || currentRow > endRow || currentColumn < startColumn || currentColumn > endColumn) {\n            return false;\n        }\n\n        return true;\n    }\n\n    dependencySheetName(dirtyUnitSheetNameMap?: IDirtyUnitSheetNameMap) {\n        const rangeList = this.rangeList;\n\n        if (rangeList.length === 0 || dirtyUnitSheetNameMap == null) {\n            return false;\n        }\n\n        for (let r = 0, len = rangeList.length; r < len; r++) {\n            const unitRange = rangeList[r];\n            const { unitId, sheetId } = unitRange;\n\n            /**\n             * When a worksheet is inserted or deleted,\n             * the formulas that depend on these worksheets need to be calculated.\n             */\n            if (dirtyUnitSheetNameMap[unitId]?.[sheetId] != null) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    isExcludeRange(unitExcludedCell: Nullable<IUnitExcludedCell>) {\n        const rangeList = this.rangeList;\n\n        if (rangeList.length === 0) {\n            return false;\n        }\n\n        for (let r = 0, len = rangeList.length; r < len; r++) {\n            const unitRange = rangeList[r];\n            const { unitId, sheetId, range } = unitRange;\n\n            const excludedCell = unitExcludedCell?.[unitId]?.[sheetId];\n            let { startRow: rangeStartRow, endRow: rangeEndRow, startColumn: rangeStartColumn, endColumn: rangeEndColumn } = range;\n\n            if (Number.isNaN(rangeStartRow)) {\n                rangeStartRow = 0;\n            }\n            if (Number.isNaN(rangeStartColumn)) {\n                rangeStartColumn = 0;\n            }\n            if (Number.isNaN(rangeEndRow)) {\n                rangeEndRow = Number.POSITIVE_INFINITY;\n            }\n            if (Number.isNaN(rangeEndColumn)) {\n                rangeEndColumn = Number.POSITIVE_INFINITY;\n            }\n\n            let isInclude = false;\n\n            excludedCell?.forValue((row, column) => {\n                if (row >= rangeStartRow && row <= rangeEndRow && column >= rangeStartColumn && column <= rangeEndColumn) {\n                    isInclude = true;\n                    return false;\n                }\n            });\n\n            if (isInclude) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // pushChildren(tree: FormulaDependencyTree) {\n    //     this.children.add(tree.treeId);\n    //     tree._pushParent(this);\n    // }\n\n    /**\n     * Add the range corresponding to the current ast node.\n     * @param range\n     */\n    pushRangeList(ranges: IUnitRange[]) {\n        this.rangeList.push(...ranges);\n    }\n\n    shouldBePushRangeList() {\n        return this.rangeList.length === 0 && this.type !== FormulaDependencyTreeType.FEATURE_FORMULA;\n    }\n\n    // hasChildren(treeId: number) {\n    //     return this.children.has(treeId);\n    // }\n\n    toRTreeItem(): IUnitRange[] {\n        if (this.featureId != null) {\n            return this.featureDirtyRanges;\n        }\n\n        const currentRow = this.row;\n        const currentColumn = this.column;\n\n        return [{\n            unitId: this.unitId,\n            sheetId: this.subUnitId,\n            range: {\n                startRow: currentRow,\n                startColumn: currentColumn,\n                endRow: currentRow,\n                endColumn: currentColumn,\n            },\n        }];\n    }\n\n    /**\n     * Determine whether it is dependent on other trees.\n     * @param dependenceTree\n     */\n    // dependency(dependenceTree: FormulaDependencyTree) {\n    //     if (this.rangeList.length === 0) {\n    //         return false;\n    //     }\n\n    //     for (let r = 0, len = this.rangeList.length; r < len; r++) {\n    //         const unitRange = this.rangeList[r];\n    //         const unitId = unitRange.unitId;\n    //         const sheetId = unitRange.sheetId;\n    //         const range = unitRange.range;\n\n    //         if (\n    //             dependenceTree.unitId === unitId &&\n    //             dependenceTree.subUnitId === sheetId &&\n    //             dependenceTree.inRangeData(range)\n    //         ) {\n    //             return true;\n    //         }\n    //     }\n\n    //     return false;\n    // }\n\n    // private _pushParent(tree: FormulaDependencyTree) {\n    //     this.parents.add(tree.treeId);\n    // }\n}\n"],"mappings":"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","names":["FDtreeStateType","FormulaDependencyTreeType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6a5537616ee09919983bb8e9544a134c02f692ef"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/dependency/formula-dependency.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/dependency/formula-dependency.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":25,"column":32},"end":{"line":25,"column":35}},"15":{"start":{"line":27,"column":16},"end":{"line":27,"column":61}},"16":{"start":{"line":28,"column":2},"end":{"line":28,"column":15}},"17":{"start":{"line":30,"column":43},"end":{"line":30,"column":98}},"18":{"start":{"line":31,"column":40},"end":{"line":940,"column":1}},"19":{"start":{"line":33,"column":4},"end":{"line":33,"column":12}},"20":{"start":{"line":34,"column":4},"end":{"line":34,"column":55}},"21":{"start":{"line":35,"column":4},"end":{"line":35,"column":43}},"22":{"start":{"line":36,"column":4},"end":{"line":36,"column":67}},"23":{"start":{"line":37,"column":4},"end":{"line":37,"column":79}},"24":{"start":{"line":38,"column":4},"end":{"line":38,"column":37}},"25":{"start":{"line":39,"column":4},"end":{"line":39,"column":43}},"26":{"start":{"line":40,"column":4},"end":{"line":40,"column":25}},"27":{"start":{"line":41,"column":4},"end":{"line":41,"column":63}},"28":{"start":{"line":43,"column":45},"end":{"line":43,"column":54}},"29":{"start":{"line":44,"column":44},"end":{"line":44,"column":55}},"30":{"start":{"line":46,"column":4},"end":{"line":46,"column":42}},"31":{"start":{"line":47,"column":4},"end":{"line":47,"column":57}},"32":{"start":{"line":48,"column":4},"end":{"line":48,"column":30}},"33":{"start":{"line":51,"column":4},"end":{"line":51,"column":31}},"34":{"start":{"line":52,"column":24},"end":{"line":52,"column":67}},"35":{"start":{"line":53,"column":29},"end":{"line":53,"column":83}},"36":{"start":{"line":54,"column":37},"end":{"line":54,"column":93}},"37":{"start":{"line":55,"column":4},"end":{"line":69,"column":5}},"38":{"start":{"line":56,"column":6},"end":{"line":68,"column":9}},"39":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"40":{"start":{"line":58,"column":10},"end":{"line":58,"column":17}},"41":{"start":{"line":60,"column":8},"end":{"line":67,"column":11}},"42":{"start":{"line":61,"column":10},"end":{"line":63,"column":11}},"43":{"start":{"line":62,"column":12},"end":{"line":62,"column":19}},"44":{"start":{"line":64,"column":10},"end":{"line":64,"column":88}},"45":{"start":{"line":65,"column":10},"end":{"line":65,"column":90}},"46":{"start":{"line":66,"column":10},"end":{"line":66,"column":83}},"47":{"start":{"line":70,"column":21},"end":{"line":70,"column":61}},"48":{"start":{"line":71,"column":21},"end":{"line":71,"column":90}},"49":{"start":{"line":72,"column":27},"end":{"line":72,"column":77}},"50":{"start":{"line":73,"column":24},"end":{"line":73,"column":62}},"51":{"start":{"line":74,"column":34},"end":{"line":74,"column":83}},"52":{"start":{"line":75,"column":4},"end":{"line":80,"column":5}},"53":{"start":{"line":76,"column":6},"end":{"line":78,"column":9}},"54":{"start":{"line":77,"column":8},"end":{"line":77,"column":26}},"55":{"start":{"line":79,"column":6},"end":{"line":79,"column":60}},"56":{"start":{"line":81,"column":30},"end":{"line":81,"column":73}},"57":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"58":{"start":{"line":83,"column":6},"end":{"line":83,"column":51}},"59":{"start":{"line":85,"column":4},"end":{"line":85,"column":57}},"60":{"start":{"line":86,"column":4},"end":{"line":86,"column":42}},"61":{"start":{"line":89,"column":23},"end":{"line":89,"column":87}},"62":{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},"63":{"start":{"line":91,"column":6},"end":{"line":91,"column":13}},"64":{"start":{"line":93,"column":4},"end":{"line":93,"column":51}},"65":{"start":{"line":94,"column":32},"end":{"line":94,"column":37}},"66":{"start":{"line":95,"column":4},"end":{"line":119,"column":7}},"67":{"start":{"line":96,"column":6},"end":{"line":118,"column":9}},"68":{"start":{"line":97,"column":8},"end":{"line":117,"column":11}},"69":{"start":{"line":98,"column":54},"end":{"line":98,"column":60}},"70":{"start":{"line":99,"column":32},"end":{"line":99,"column":129}},"71":{"start":{"line":100,"column":30},"end":{"line":100,"column":92}},"72":{"start":{"line":101,"column":33},"end":{"line":101,"column":126}},"73":{"start":{"line":102,"column":10},"end":{"line":116,"column":11}},"74":{"start":{"line":103,"column":30},"end":{"line":103,"column":99}},"75":{"start":{"line":104,"column":12},"end":{"line":107,"column":13}},"76":{"start":{"line":105,"column":14},"end":{"line":105,"column":139}},"77":{"start":{"line":106,"column":14},"end":{"line":106,"column":44}},"78":{"start":{"line":108,"column":12},"end":{"line":108,"column":60}},"79":{"start":{"line":109,"column":12},"end":{"line":114,"column":15}},"80":{"start":{"line":110,"column":14},"end":{"line":112,"column":15}},"81":{"start":{"line":111,"column":16},"end":{"line":111,"column":23}},"82":{"start":{"line":113,"column":14},"end":{"line":113,"column":45}},"83":{"start":{"line":115,"column":12},"end":{"line":115,"column":41}},"84":{"start":{"line":120,"column":4},"end":{"line":120,"column":33}},"85":{"start":{"line":123,"column":23},"end":{"line":123,"column":87}},"86":{"start":{"line":124,"column":4},"end":{"line":151,"column":7}},"87":{"start":{"line":125,"column":42},"end":{"line":125,"column":51}},"88":{"start":{"line":126,"column":6},"end":{"line":136,"column":7}},"89":{"start":{"line":127,"column":22},"end":{"line":127,"column":77}},"90":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"91":{"start":{"line":129,"column":10},"end":{"line":129,"column":19}},"92":{"start":{"line":131,"column":8},"end":{"line":135,"column":9}},"93":{"start":{"line":132,"column":10},"end":{"line":132,"column":39}},"94":{"start":{"line":133,"column":15},"end":{"line":135,"column":9}},"95":{"start":{"line":134,"column":10},"end":{"line":134,"column":39}},"96":{"start":{"line":137,"column":6},"end":{"line":137,"column":34}},"97":{"start":{"line":138,"column":41},"end":{"line":138,"column":50}},"98":{"start":{"line":139,"column":6},"end":{"line":149,"column":7}},"99":{"start":{"line":140,"column":23},"end":{"line":140,"column":79}},"100":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"101":{"start":{"line":142,"column":10},"end":{"line":142,"column":19}},"102":{"start":{"line":144,"column":8},"end":{"line":148,"column":9}},"103":{"start":{"line":145,"column":10},"end":{"line":145,"column":39}},"104":{"start":{"line":146,"column":15},"end":{"line":148,"column":9}},"105":{"start":{"line":147,"column":10},"end":{"line":147,"column":39}},"106":{"start":{"line":150,"column":6},"end":{"line":150,"column":32}},"107":{"start":{"line":159,"column":22},"end":{"line":159,"column":24}},"108":{"start":{"line":160,"column":4},"end":{"line":172,"column":5}},"109":{"start":{"line":161,"column":22},"end":{"line":161,"column":41}},"110":{"start":{"line":162,"column":6},"end":{"line":171,"column":7}},"111":{"start":{"line":163,"column":23},"end":{"line":163,"column":41}},"112":{"start":{"line":164,"column":8},"end":{"line":170,"column":9}},"113":{"start":{"line":165,"column":10},"end":{"line":169,"column":13}},"114":{"start":{"line":173,"column":4},"end":{"line":173,"column":21}},"115":{"start":{"line":176,"column":27},"end":{"line":176,"column":29}},"116":{"start":{"line":177,"column":20},"end":{"line":177,"column":80}},"117":{"start":{"line":178,"column":4},"end":{"line":187,"column":5}},"118":{"start":{"line":178,"column":17},"end":{"line":178,"column":18}},"119":{"start":{"line":178,"column":26},"end":{"line":178,"column":44}},"120":{"start":{"line":179,"column":19},"end":{"line":179,"column":33}},"121":{"start":{"line":180,"column":6},"end":{"line":182,"column":7}},"122":{"start":{"line":181,"column":8},"end":{"line":181,"column":17}},"123":{"start":{"line":183,"column":22},"end":{"line":183,"column":46}},"124":{"start":{"line":184,"column":6},"end":{"line":186,"column":7}},"125":{"start":{"line":185,"column":8},"end":{"line":185,"column":34}},"126":{"start":{"line":188,"column":4},"end":{"line":188,"column":26}},"127":{"start":{"line":191,"column":45},"end":{"line":191,"column":50}},"128":{"start":{"line":192,"column":4},"end":{"line":197,"column":5}},"129":{"start":{"line":192,"column":17},"end":{"line":192,"column":18}},"130":{"start":{"line":192,"column":26},"end":{"line":192,"column":41}},"131":{"start":{"line":193,"column":19},"end":{"line":193,"column":30}},"132":{"start":{"line":194,"column":6},"end":{"line":196,"column":7}},"133":{"start":{"line":195,"column":8},"end":{"line":195,"column":20}},"134":{"start":{"line":200,"column":17},"end":{"line":200,"column":67}},"135":{"start":{"line":201,"column":4},"end":{"line":203,"column":5}},"136":{"start":{"line":202,"column":6},"end":{"line":202,"column":19}},"137":{"start":{"line":204,"column":4},"end":{"line":215,"column":5}},"138":{"start":{"line":205,"column":6},"end":{"line":205,"column":31}},"139":{"start":{"line":206,"column":6},"end":{"line":206,"column":38}},"140":{"start":{"line":207,"column":6},"end":{"line":214,"column":7}},"141":{"start":{"line":208,"column":8},"end":{"line":210,"column":9}},"142":{"start":{"line":209,"column":10},"end":{"line":209,"column":22}},"143":{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},"144":{"start":{"line":212,"column":10},"end":{"line":212,"column":22}},"145":{"start":{"line":216,"column":4},"end":{"line":216,"column":39}},"146":{"start":{"line":217,"column":4},"end":{"line":217,"column":17}},"147":{"start":{"line":220,"column":36},"end":{"line":220,"column":45}},"148":{"start":{"line":221,"column":43},"end":{"line":221,"column":52}},"149":{"start":{"line":222,"column":4},"end":{"line":228,"column":5}},"150":{"start":{"line":222,"column":17},"end":{"line":222,"column":18}},"151":{"start":{"line":222,"column":26},"end":{"line":222,"column":41}},"152":{"start":{"line":223,"column":19},"end":{"line":223,"column":30}},"153":{"start":{"line":224,"column":22},"end":{"line":224,"column":78}},"154":{"start":{"line":225,"column":6},"end":{"line":227,"column":7}},"155":{"start":{"line":226,"column":8},"end":{"line":226,"column":20}},"156":{"start":{"line":229,"column":4},"end":{"line":229,"column":17}},"157":{"start":{"line":236,"column":28},"end":{"line":236,"column":52}},"158":{"start":{"line":237,"column":33},"end":{"line":237,"column":62}},"159":{"start":{"line":238,"column":21},"end":{"line":238,"column":23}},"160":{"start":{"line":239,"column":27},"end":{"line":239,"column":72}},"161":{"start":{"line":240,"column":4},"end":{"line":242,"column":5}},"162":{"start":{"line":241,"column":6},"end":{"line":241,"column":45}},"163":{"start":{"line":243,"column":4},"end":{"line":243,"column":77}},"164":{"start":{"line":244,"column":4},"end":{"line":244,"column":82}},"165":{"start":{"line":245,"column":4},"end":{"line":245,"column":44}},"166":{"start":{"line":246,"column":4},"end":{"line":274,"column":5}},"167":{"start":{"line":246,"column":17},"end":{"line":246,"column":18}},"168":{"start":{"line":246,"column":26},"end":{"line":246,"column":41}},"169":{"start":{"line":247,"column":19},"end":{"line":247,"column":30}},"170":{"start":{"line":248,"column":6},"end":{"line":250,"column":7}},"171":{"start":{"line":249,"column":8},"end":{"line":249,"column":17}},"172":{"start":{"line":251,"column":19},"end":{"line":251,"column":42}},"173":{"start":{"line":252,"column":6},"end":{"line":252,"column":51}},"174":{"start":{"line":253,"column":35},"end":{"line":253,"column":73}},"175":{"start":{"line":254,"column":6},"end":{"line":256,"column":7}},"176":{"start":{"line":255,"column":8},"end":{"line":255,"column":57}},"177":{"start":{"line":257,"column":6},"end":{"line":259,"column":7}},"178":{"start":{"line":258,"column":8},"end":{"line":258,"column":17}},"179":{"start":{"line":260,"column":6},"end":{"line":267,"column":8}},"180":{"start":{"line":268,"column":24},"end":{"line":272,"column":8}},"181":{"start":{"line":273,"column":6},"end":{"line":273,"column":36}},"182":{"start":{"line":275,"column":4},"end":{"line":281,"column":5}},"183":{"start":{"line":275,"column":17},"end":{"line":275,"column":18}},"184":{"start":{"line":275,"column":26},"end":{"line":275,"column":41}},"185":{"start":{"line":276,"column":19},"end":{"line":276,"column":30}},"186":{"start":{"line":277,"column":6},"end":{"line":279,"column":7}},"187":{"start":{"line":278,"column":8},"end":{"line":278,"column":17}},"188":{"start":{"line":280,"column":6},"end":{"line":280,"column":67}},"189":{"start":{"line":282,"column":4},"end":{"line":282,"column":57}},"190":{"start":{"line":283,"column":4},"end":{"line":283,"column":20}},"191":{"start":{"line":300,"column":23},"end":{"line":300,"column":87}},"192":{"start":{"line":301,"column":4},"end":{"line":308,"column":7}},"193":{"start":{"line":302,"column":6},"end":{"line":307,"column":9}},"194":{"start":{"line":303,"column":8},"end":{"line":306,"column":11}},"195":{"start":{"line":304,"column":25},"end":{"line":304,"column":127}},"196":{"start":{"line":305,"column":10},"end":{"line":305,"column":80}},"197":{"start":{"line":311,"column":66},"end":{"line":311,"column":72}},"198":{"start":{"line":312,"column":22},"end":{"line":312,"column":94}},"199":{"start":{"line":313,"column":19},"end":{"line":313,"column":55}},"200":{"start":{"line":314,"column":4},"end":{"line":314,"column":27}},"201":{"start":{"line":315,"column":4},"end":{"line":315,"column":33}},"202":{"start":{"line":316,"column":4},"end":{"line":316,"column":40}},"203":{"start":{"line":317,"column":4},"end":{"line":317,"column":39}},"204":{"start":{"line":318,"column":26},"end":{"line":318,"column":123}},"205":{"start":{"line":319,"column":24},"end":{"line":319,"column":86}},"206":{"start":{"line":320,"column":4},"end":{"line":320,"column":44}},"207":{"start":{"line":321,"column":4},"end":{"line":321,"column":33}},"208":{"start":{"line":322,"column":4},"end":{"line":322,"column":60}},"209":{"start":{"line":323,"column":4},"end":{"line":323,"column":101}},"210":{"start":{"line":324,"column":22},"end":{"line":324,"column":124}},"211":{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},"212":{"start":{"line":326,"column":6},"end":{"line":326,"column":28}},"213":{"start":{"line":328,"column":4},"end":{"line":328,"column":18}},"214":{"start":{"line":331,"column":4},"end":{"line":391,"column":5}},"215":{"start":{"line":332,"column":31},"end":{"line":332,"column":55}},"216":{"start":{"line":333,"column":6},"end":{"line":335,"column":7}},"217":{"start":{"line":334,"column":8},"end":{"line":334,"column":17}},"218":{"start":{"line":336,"column":31},"end":{"line":336,"column":60}},"219":{"start":{"line":337,"column":6},"end":{"line":390,"column":7}},"220":{"start":{"line":338,"column":31},"end":{"line":338,"column":58}},"221":{"start":{"line":339,"column":8},"end":{"line":341,"column":9}},"222":{"start":{"line":340,"column":10},"end":{"line":340,"column":19}},"223":{"start":{"line":342,"column":35},"end":{"line":342,"column":62}},"224":{"start":{"line":343,"column":8},"end":{"line":389,"column":9}},"225":{"start":{"line":344,"column":34},"end":{"line":344,"column":110}},"226":{"start":{"line":345,"column":34},"end":{"line":345,"column":66}},"227":{"start":{"line":346,"column":47},"end":{"line":346,"column":62}},"228":{"start":{"line":347,"column":24},"end":{"line":347,"column":29}},"229":{"start":{"line":348,"column":10},"end":{"line":350,"column":11}},"230":{"start":{"line":349,"column":12},"end":{"line":349,"column":27}},"231":{"start":{"line":351,"column":23},"end":{"line":351,"column":124}},"232":{"start":{"line":352,"column":44},"end":{"line":352,"column":77}},"233":{"start":{"line":353,"column":29},"end":{"line":353,"column":122}},"234":{"start":{"line":354,"column":30},"end":{"line":354,"column":122}},"235":{"start":{"line":355,"column":30},"end":{"line":355,"column":68}},"236":{"start":{"line":356,"column":10},"end":{"line":387,"column":11}},"237":{"start":{"line":356,"column":23},"end":{"line":356,"column":24}},"238":{"start":{"line":357,"column":26},"end":{"line":357,"column":35}},"239":{"start":{"line":358,"column":65},"end":{"line":358,"column":70}},"240":{"start":{"line":359,"column":12},"end":{"line":386,"column":13}},"241":{"start":{"line":359,"column":25},"end":{"line":359,"column":33}},"242":{"start":{"line":360,"column":14},"end":{"line":385,"column":15}},"243":{"start":{"line":360,"column":27},"end":{"line":360,"column":38}},"244":{"start":{"line":361,"column":26},"end":{"line":361,"column":41}},"245":{"start":{"line":362,"column":26},"end":{"line":362,"column":38}},"246":{"start":{"line":363,"column":16},"end":{"line":375,"column":17}},"247":{"start":{"line":364,"column":18},"end":{"line":364,"column":42}},"248":{"start":{"line":365,"column":18},"end":{"line":365,"column":54}},"249":{"start":{"line":366,"column":18},"end":{"line":366,"column":46}},"250":{"start":{"line":367,"column":18},"end":{"line":367,"column":52}},"251":{"start":{"line":368,"column":18},"end":{"line":368,"column":59}},"252":{"start":{"line":369,"column":18},"end":{"line":369,"column":77}},"253":{"start":{"line":370,"column":18},"end":{"line":370,"column":48}},"254":{"start":{"line":371,"column":18},"end":{"line":371,"column":45}},"255":{"start":{"line":372,"column":18},"end":{"line":372,"column":125}},"256":{"start":{"line":373,"column":18},"end":{"line":373,"column":96}},"257":{"start":{"line":374,"column":18},"end":{"line":374,"column":27}},"258":{"start":{"line":376,"column":32},"end":{"line":376,"column":66}},"259":{"start":{"line":377,"column":16},"end":{"line":377,"column":126}},"260":{"start":{"line":378,"column":16},"end":{"line":378,"column":46}},"261":{"start":{"line":379,"column":16},"end":{"line":379,"column":39}},"262":{"start":{"line":380,"column":16},"end":{"line":380,"column":39}},"263":{"start":{"line":381,"column":16},"end":{"line":381,"column":42}},"264":{"start":{"line":382,"column":16},"end":{"line":382,"column":119}},"265":{"start":{"line":383,"column":16},"end":{"line":383,"column":90}},"266":{"start":{"line":384,"column":16},"end":{"line":384,"column":39}},"267":{"start":{"line":388,"column":10},"end":{"line":388,"column":93}},"268":{"start":{"line":394,"column":18},"end":{"line":394,"column":27}},"269":{"start":{"line":395,"column":4},"end":{"line":398,"column":6}},"270":{"start":{"line":401,"column":4},"end":{"line":455,"column":5}},"271":{"start":{"line":402,"column":24},"end":{"line":402,"column":43}},"272":{"start":{"line":403,"column":6},"end":{"line":405,"column":7}},"273":{"start":{"line":404,"column":8},"end":{"line":404,"column":17}},"274":{"start":{"line":406,"column":28},"end":{"line":406,"column":50}},"275":{"start":{"line":407,"column":6},"end":{"line":454,"column":7}},"276":{"start":{"line":408,"column":27},"end":{"line":408,"column":69}},"277":{"start":{"line":409,"column":41},"end":{"line":409,"column":50}},"278":{"start":{"line":410,"column":8},"end":{"line":428,"column":11}},"279":{"start":{"line":411,"column":10},"end":{"line":413,"column":11}},"280":{"start":{"line":412,"column":12},"end":{"line":412,"column":24}},"281":{"start":{"line":414,"column":39},"end":{"line":414,"column":54}},"282":{"start":{"line":415,"column":10},"end":{"line":417,"column":11}},"283":{"start":{"line":416,"column":12},"end":{"line":416,"column":24}},"284":{"start":{"line":418,"column":25},"end":{"line":418,"column":100}},"285":{"start":{"line":419,"column":25},"end":{"line":419,"column":106}},"286":{"start":{"line":420,"column":10},"end":{"line":425,"column":11}},"287":{"start":{"line":421,"column":12},"end":{"line":421,"column":35}},"288":{"start":{"line":423,"column":12},"end":{"line":423,"column":102}},"289":{"start":{"line":424,"column":12},"end":{"line":424,"column":85}},"290":{"start":{"line":426,"column":10},"end":{"line":426,"column":35}},"291":{"start":{"line":427,"column":10},"end":{"line":427,"column":32}},"292":{"start":{"line":429,"column":8},"end":{"line":452,"column":11}},"293":{"start":{"line":430,"column":10},"end":{"line":432,"column":11}},"294":{"start":{"line":431,"column":12},"end":{"line":431,"column":24}},"295":{"start":{"line":433,"column":39},"end":{"line":433,"column":54}},"296":{"start":{"line":434,"column":10},"end":{"line":436,"column":11}},"297":{"start":{"line":435,"column":12},"end":{"line":435,"column":24}},"298":{"start":{"line":438,"column":10},"end":{"line":443,"column":11}},"299":{"start":{"line":439,"column":26},"end":{"line":439,"column":42}},"300":{"start":{"line":440,"column":12},"end":{"line":440,"column":71}},"301":{"start":{"line":442,"column":12},"end":{"line":442,"column":97}},"302":{"start":{"line":444,"column":25},"end":{"line":444,"column":106}},"303":{"start":{"line":445,"column":10},"end":{"line":450,"column":11}},"304":{"start":{"line":446,"column":12},"end":{"line":446,"column":35}},"305":{"start":{"line":448,"column":12},"end":{"line":448,"column":102}},"306":{"start":{"line":449,"column":12},"end":{"line":449,"column":85}},"307":{"start":{"line":451,"column":10},"end":{"line":451,"column":32}},"308":{"start":{"line":453,"column":8},"end":{"line":453,"column":25}},"309":{"start":{"line":458,"column":47},"end":{"line":458,"column":62}},"310":{"start":{"line":459,"column":19},"end":{"line":459,"column":108}},"311":{"start":{"line":460,"column":22},"end":{"line":460,"column":47}},"312":{"start":{"line":461,"column":17},"end":{"line":461,"column":118}},"313":{"start":{"line":462,"column":4},"end":{"line":462,"column":23}},"314":{"start":{"line":463,"column":4},"end":{"line":463,"column":35}},"315":{"start":{"line":464,"column":4},"end":{"line":464,"column":27}},"316":{"start":{"line":465,"column":4},"end":{"line":465,"column":31}},"317":{"start":{"line":466,"column":4},"end":{"line":466,"column":21}},"318":{"start":{"line":467,"column":4},"end":{"line":467,"column":27}},"319":{"start":{"line":468,"column":4},"end":{"line":468,"column":41}},"320":{"start":{"line":469,"column":4},"end":{"line":469,"column":47}},"321":{"start":{"line":470,"column":4},"end":{"line":470,"column":18}},"322":{"start":{"line":473,"column":29},"end":{"line":473,"column":44}},"323":{"start":{"line":474,"column":20},"end":{"line":474,"column":54}},"324":{"start":{"line":475,"column":4},"end":{"line":475,"column":84}},"325":{"start":{"line":476,"column":4},"end":{"line":476,"column":27}},"326":{"start":{"line":477,"column":4},"end":{"line":477,"column":27}},"327":{"start":{"line":478,"column":4},"end":{"line":478,"column":27}},"328":{"start":{"line":479,"column":4},"end":{"line":479,"column":19}},"329":{"start":{"line":485,"column":27},"end":{"line":485,"column":72}},"330":{"start":{"line":486,"column":24},"end":{"line":486,"column":67}},"331":{"start":{"line":487,"column":4},"end":{"line":489,"column":5}},"332":{"start":{"line":488,"column":6},"end":{"line":488,"column":13}},"333":{"start":{"line":490,"column":4},"end":{"line":490,"column":42}},"334":{"start":{"line":491,"column":4},"end":{"line":497,"column":5}},"335":{"start":{"line":491,"column":17},"end":{"line":491,"column":18}},"336":{"start":{"line":492,"column":24},"end":{"line":492,"column":38}},"337":{"start":{"line":493,"column":20},"end":{"line":493,"column":35}},"338":{"start":{"line":494,"column":22},"end":{"line":494,"column":39}},"339":{"start":{"line":495,"column":21},"end":{"line":495,"column":37}},"340":{"start":{"line":496,"column":6},"end":{"line":496,"column":52}},"341":{"start":{"line":500,"column":21},"end":{"line":500,"column":62}},"342":{"start":{"line":501,"column":4},"end":{"line":504,"column":5}},"343":{"start":{"line":502,"column":6},"end":{"line":502,"column":45}},"344":{"start":{"line":503,"column":6},"end":{"line":503,"column":60}},"345":{"start":{"line":505,"column":17},"end":{"line":505,"column":40}},"346":{"start":{"line":506,"column":4},"end":{"line":509,"column":5}},"347":{"start":{"line":507,"column":6},"end":{"line":507,"column":18}},"348":{"start":{"line":508,"column":6},"end":{"line":508,"column":38}},"349":{"start":{"line":510,"column":4},"end":{"line":510,"column":23}},"350":{"start":{"line":513,"column":4},"end":{"line":515,"column":5}},"351":{"start":{"line":514,"column":6},"end":{"line":514,"column":18}},"352":{"start":{"line":516,"column":4},"end":{"line":518,"column":5}},"353":{"start":{"line":517,"column":6},"end":{"line":517,"column":18}},"354":{"start":{"line":519,"column":4},"end":{"line":521,"column":5}},"355":{"start":{"line":520,"column":6},"end":{"line":520,"column":18}},"356":{"start":{"line":522,"column":4},"end":{"line":522,"column":17}},"357":{"start":{"line":525,"column":21},"end":{"line":525,"column":39}},"358":{"start":{"line":526,"column":26},"end":{"line":526,"column":41}},"359":{"start":{"line":527,"column":4},"end":{"line":543,"column":5}},"360":{"start":{"line":527,"column":17},"end":{"line":527,"column":18}},"361":{"start":{"line":528,"column":19},"end":{"line":528,"column":30}},"362":{"start":{"line":529,"column":6},"end":{"line":541,"column":7}},"363":{"start":{"line":530,"column":8},"end":{"line":530,"column":26}},"364":{"start":{"line":531,"column":8},"end":{"line":537,"column":9}},"365":{"start":{"line":532,"column":10},"end":{"line":536,"column":11}},"366":{"start":{"line":533,"column":12},"end":{"line":535,"column":13}},"367":{"start":{"line":534,"column":14},"end":{"line":534,"column":61}},"368":{"start":{"line":538,"column":8},"end":{"line":538,"column":17}},"369":{"start":{"line":539,"column":13},"end":{"line":541,"column":7}},"370":{"start":{"line":540,"column":8},"end":{"line":540,"column":26}},"371":{"start":{"line":542,"column":6},"end":{"line":542,"column":43}},"372":{"start":{"line":546,"column":21},"end":{"line":546,"column":39}},"373":{"start":{"line":547,"column":26},"end":{"line":547,"column":41}},"374":{"start":{"line":548,"column":4},"end":{"line":555,"column":5}},"375":{"start":{"line":548,"column":17},"end":{"line":548,"column":18}},"376":{"start":{"line":549,"column":19},"end":{"line":549,"column":30}},"377":{"start":{"line":550,"column":6},"end":{"line":553,"column":7}},"378":{"start":{"line":551,"column":8},"end":{"line":551,"column":26}},"379":{"start":{"line":552,"column":8},"end":{"line":552,"column":17}},"380":{"start":{"line":554,"column":6},"end":{"line":554,"column":57}},"381":{"start":{"line":559,"column":21},"end":{"line":563,"column":5}},"382":{"start":{"line":564,"column":4},"end":{"line":568,"column":5}},"383":{"start":{"line":565,"column":6},"end":{"line":565,"column":61}},"384":{"start":{"line":567,"column":6},"end":{"line":567,"column":50}},"385":{"start":{"line":569,"column":4},"end":{"line":569,"column":17}},"386":{"start":{"line":577,"column":33},"end":{"line":577,"column":35}},"387":{"start":{"line":578,"column":23},"end":{"line":578,"column":42}},"388":{"start":{"line":579,"column":23},"end":{"line":579,"column":42}},"389":{"start":{"line":580,"column":17},"end":{"line":580,"column":30}},"390":{"start":{"line":581,"column":4},"end":{"line":583,"column":5}},"391":{"start":{"line":582,"column":6},"end":{"line":582,"column":16}},"392":{"start":{"line":584,"column":4},"end":{"line":584,"column":55}},"393":{"start":{"line":585,"column":22},"end":{"line":585,"column":24}},"394":{"start":{"line":586,"column":4},"end":{"line":592,"column":5}},"395":{"start":{"line":586,"column":17},"end":{"line":586,"column":18}},"396":{"start":{"line":586,"column":26},"end":{"line":586,"column":53}},"397":{"start":{"line":587,"column":20},"end":{"line":587,"column":43}},"398":{"start":{"line":588,"column":20},"end":{"line":588,"column":74}},"399":{"start":{"line":589,"column":24},"end":{"line":589,"column":43}},"400":{"start":{"line":590,"column":6},"end":{"line":590,"column":32}},"401":{"start":{"line":591,"column":6},"end":{"line":591,"column":27}},"402":{"start":{"line":593,"column":4},"end":{"line":593,"column":21}},"403":{"start":{"line":596,"column":34},"end":{"line":596,"column":36}},"404":{"start":{"line":597,"column":4},"end":{"line":599,"column":5}},"405":{"start":{"line":598,"column":6},"end":{"line":598,"column":16}},"406":{"start":{"line":600,"column":4},"end":{"line":600,"column":70}},"407":{"start":{"line":601,"column":4},"end":{"line":601,"column":33}},"408":{"start":{"line":604,"column":4},"end":{"line":604,"column":21}},"409":{"start":{"line":607,"column":33},"end":{"line":607,"column":58}},"410":{"start":{"line":608,"column":4},"end":{"line":610,"column":5}},"411":{"start":{"line":609,"column":6},"end":{"line":609,"column":13}},"412":{"start":{"line":611,"column":23},"end":{"line":611,"column":38}},"413":{"start":{"line":612,"column":23},"end":{"line":612,"column":38}},"414":{"start":{"line":613,"column":37},"end":{"line":613,"column":124}},"415":{"start":{"line":614,"column":4},"end":{"line":614,"column":35}},"416":{"start":{"line":615,"column":4},"end":{"line":615,"column":77}},"417":{"start":{"line":616,"column":29},"end":{"line":616,"column":85}},"418":{"start":{"line":617,"column":33},"end":{"line":617,"column":74}},"419":{"start":{"line":618,"column":4},"end":{"line":620,"column":5}},"420":{"start":{"line":619,"column":6},"end":{"line":619,"column":13}},"421":{"start":{"line":621,"column":4},"end":{"line":621,"column":95}},"422":{"start":{"line":623,"column":52},"end":{"line":623,"column":61}},"423":{"start":{"line":625,"column":32},"end":{"line":625,"column":43}},"424":{"start":{"line":626,"column":4},"end":{"line":639,"column":5}},"425":{"start":{"line":626,"column":17},"end":{"line":626,"column":18}},"426":{"start":{"line":626,"column":26},"end":{"line":626,"column":41}},"427":{"start":{"line":627,"column":19},"end":{"line":627,"column":30}},"428":{"start":{"line":628,"column":6},"end":{"line":638,"column":9}},"429":{"start":{"line":640,"column":4},"end":{"line":640,"column":49}},"430":{"start":{"line":641,"column":4},"end":{"line":644,"column":5}},"431":{"start":{"line":641,"column":17},"end":{"line":641,"column":18}},"432":{"start":{"line":641,"column":26},"end":{"line":641,"column":41}},"433":{"start":{"line":642,"column":19},"end":{"line":642,"column":30}},"434":{"start":{"line":643,"column":6},"end":{"line":643,"column":70}},"435":{"start":{"line":647,"column":33},"end":{"line":647,"column":58}},"436":{"start":{"line":648,"column":4},"end":{"line":650,"column":5}},"437":{"start":{"line":649,"column":6},"end":{"line":649,"column":13}},"438":{"start":{"line":651,"column":23},"end":{"line":651,"column":38}},"439":{"start":{"line":652,"column":23},"end":{"line":652,"column":38}},"440":{"start":{"line":653,"column":4},"end":{"line":660,"column":6}},"441":{"start":{"line":661,"column":24},"end":{"line":661,"column":26}},"442":{"start":{"line":662,"column":4},"end":{"line":669,"column":5}},"443":{"start":{"line":662,"column":17},"end":{"line":662,"column":18}},"444":{"start":{"line":662,"column":26},"end":{"line":662,"column":53}},"445":{"start":{"line":663,"column":24},"end":{"line":667,"column":8}},"446":{"start":{"line":668,"column":6},"end":{"line":668,"column":37}},"447":{"start":{"line":670,"column":45},"end":{"line":670,"column":54}},"448":{"start":{"line":671,"column":4},"end":{"line":671,"column":96}},"449":{"start":{"line":672,"column":33},"end":{"line":672,"column":74}},"450":{"start":{"line":673,"column":4},"end":{"line":676,"column":5}},"451":{"start":{"line":674,"column":6},"end":{"line":674,"column":79}},"452":{"start":{"line":675,"column":6},"end":{"line":675,"column":13}},"453":{"start":{"line":677,"column":4},"end":{"line":677,"column":95}},"454":{"start":{"line":678,"column":4},"end":{"line":678,"column":77}},"455":{"start":{"line":681,"column":4},"end":{"line":709,"column":5}},"456":{"start":{"line":682,"column":19},"end":{"line":682,"column":45}},"457":{"start":{"line":683,"column":19},"end":{"line":683,"column":42}},"458":{"start":{"line":684,"column":23},"end":{"line":688,"column":7}},"459":{"start":{"line":689,"column":6},"end":{"line":689,"column":70}},"460":{"start":{"line":690,"column":6},"end":{"line":697,"column":8}},"461":{"start":{"line":699,"column":6},"end":{"line":703,"column":7}},"462":{"start":{"line":700,"column":8},"end":{"line":700,"column":63}},"463":{"start":{"line":702,"column":8},"end":{"line":702,"column":52}},"464":{"start":{"line":704,"column":6},"end":{"line":708,"column":7}},"465":{"start":{"line":705,"column":8},"end":{"line":705,"column":106}},"466":{"start":{"line":707,"column":8},"end":{"line":707,"column":51}},"467":{"start":{"line":712,"column":33},"end":{"line":712,"column":35}},"468":{"start":{"line":713,"column":4},"end":{"line":720,"column":5}},"469":{"start":{"line":714,"column":19},"end":{"line":714,"column":44}},"470":{"start":{"line":715,"column":6},"end":{"line":717,"column":7}},"471":{"start":{"line":716,"column":8},"end":{"line":716,"column":17}},"472":{"start":{"line":718,"column":6},"end":{"line":718,"column":55}},"473":{"start":{"line":719,"column":6},"end":{"line":719,"column":38}},"474":{"start":{"line":721,"column":4},"end":{"line":721,"column":32}},"475":{"start":{"line":724,"column":29},"end":{"line":724,"column":72}},"476":{"start":{"line":725,"column":33},"end":{"line":725,"column":101}},"477":{"start":{"line":726,"column":4},"end":{"line":730,"column":5}},"478":{"start":{"line":727,"column":6},"end":{"line":729,"column":7}},"479":{"start":{"line":728,"column":8},"end":{"line":728,"column":34}},"480":{"start":{"line":731,"column":27},"end":{"line":731,"column":29}},"481":{"start":{"line":732,"column":4},"end":{"line":738,"column":5}},"482":{"start":{"line":733,"column":19},"end":{"line":733,"column":44}},"483":{"start":{"line":734,"column":6},"end":{"line":737,"column":7}},"484":{"start":{"line":735,"column":8},"end":{"line":735,"column":47}},"485":{"start":{"line":736,"column":8},"end":{"line":736,"column":34}},"486":{"start":{"line":739,"column":4},"end":{"line":741,"column":5}},"487":{"start":{"line":740,"column":6},"end":{"line":740,"column":98}},"488":{"start":{"line":742,"column":4},"end":{"line":742,"column":25}},"489":{"start":{"line":745,"column":4},"end":{"line":745,"column":62}},"490":{"start":{"line":748,"column":25},"end":{"line":748,"column":27}},"491":{"start":{"line":749,"column":4},"end":{"line":758,"column":5}},"492":{"start":{"line":749,"column":17},"end":{"line":749,"column":18}},"493":{"start":{"line":750,"column":31},"end":{"line":750,"column":58}},"494":{"start":{"line":751,"column":41},"end":{"line":751,"column":57}},"495":{"start":{"line":752,"column":6},"end":{"line":757,"column":9}},"496":{"start":{"line":759,"column":4},"end":{"line":759,"column":74}},"497":{"start":{"line":767,"column":22},"end":{"line":767,"column":24}},"498":{"start":{"line":768,"column":4},"end":{"line":774,"column":5}},"499":{"start":{"line":768,"column":17},"end":{"line":768,"column":18}},"500":{"start":{"line":768,"column":26},"end":{"line":768,"column":54}},"501":{"start":{"line":769,"column":19},"end":{"line":769,"column":43}},"502":{"start":{"line":770,"column":20},"end":{"line":770,"column":73}},"503":{"start":{"line":771,"column":24},"end":{"line":771,"column":43}},"504":{"start":{"line":772,"column":6},"end":{"line":772,"column":32}},"505":{"start":{"line":773,"column":6},"end":{"line":773,"column":26}},"506":{"start":{"line":775,"column":4},"end":{"line":775,"column":21}},"507":{"start":{"line":782,"column":24},"end":{"line":782,"column":26}},"508":{"start":{"line":783,"column":38},"end":{"line":783,"column":47}},"509":{"start":{"line":784,"column":27},"end":{"line":784,"column":72}},"510":{"start":{"line":785,"column":24},"end":{"line":785,"column":67}},"511":{"start":{"line":786,"column":20},"end":{"line":786,"column":80}},"512":{"start":{"line":787,"column":33},"end":{"line":787,"column":101}},"513":{"start":{"line":788,"column":4},"end":{"line":790,"column":5}},"514":{"start":{"line":789,"column":6},"end":{"line":789,"column":39}},"515":{"start":{"line":791,"column":20},"end":{"line":791,"column":80}},"516":{"start":{"line":792,"column":4},"end":{"line":799,"column":5}},"517":{"start":{"line":793,"column":21},"end":{"line":793,"column":32}},"518":{"start":{"line":794,"column":6},"end":{"line":798,"column":7}},"519":{"start":{"line":796,"column":8},"end":{"line":796,"column":31}},"520":{"start":{"line":797,"column":8},"end":{"line":797,"column":30}},"521":{"start":{"line":800,"column":4},"end":{"line":800,"column":23}},"522":{"start":{"line":803,"column":19},"end":{"line":803,"column":30}},"523":{"start":{"line":804,"column":22},"end":{"line":804,"column":36}},"524":{"start":{"line":805,"column":22},"end":{"line":805,"column":36}},"525":{"start":{"line":806,"column":4},"end":{"line":812,"column":5}},"526":{"start":{"line":807,"column":25},"end":{"line":807,"column":76}},"527":{"start":{"line":808,"column":20},"end":{"line":808,"column":66}},"528":{"start":{"line":809,"column":6},"end":{"line":811,"column":7}},"529":{"start":{"line":810,"column":8},"end":{"line":810,"column":20}},"530":{"start":{"line":813,"column":4},"end":{"line":813,"column":17}},"531":{"start":{"line":816,"column":19},"end":{"line":816,"column":30}},"532":{"start":{"line":817,"column":22},"end":{"line":817,"column":36}},"533":{"start":{"line":818,"column":22},"end":{"line":818,"column":36}},"534":{"start":{"line":819,"column":4},"end":{"line":825,"column":5}},"535":{"start":{"line":820,"column":30},"end":{"line":820,"column":86}},"536":{"start":{"line":821,"column":20},"end":{"line":821,"column":71}},"537":{"start":{"line":822,"column":6},"end":{"line":824,"column":7}},"538":{"start":{"line":823,"column":8},"end":{"line":823,"column":20}},"539":{"start":{"line":826,"column":4},"end":{"line":826,"column":17}},"540":{"start":{"line":829,"column":4},"end":{"line":831,"column":5}},"541":{"start":{"line":830,"column":6},"end":{"line":830,"column":19}},"542":{"start":{"line":832,"column":4},"end":{"line":832,"column":62}},"543":{"start":{"line":835,"column":4},"end":{"line":837,"column":5}},"544":{"start":{"line":836,"column":6},"end":{"line":836,"column":18}},"545":{"start":{"line":838,"column":21},"end":{"line":838,"column":39}},"546":{"start":{"line":839,"column":4},"end":{"line":844,"column":5}},"547":{"start":{"line":839,"column":17},"end":{"line":839,"column":18}},"548":{"start":{"line":839,"column":26},"end":{"line":839,"column":41}},"549":{"start":{"line":840,"column":20},"end":{"line":840,"column":31}},"550":{"start":{"line":841,"column":6},"end":{"line":843,"column":7}},"551":{"start":{"line":842,"column":8},"end":{"line":842,"column":20}},"552":{"start":{"line":845,"column":4},"end":{"line":845,"column":17}},"553":{"start":{"line":853,"column":19},"end":{"line":853,"column":30}},"554":{"start":{"line":854,"column":22},"end":{"line":854,"column":36}},"555":{"start":{"line":855,"column":4},"end":{"line":857,"column":5}},"556":{"start":{"line":856,"column":6},"end":{"line":856,"column":18}},"557":{"start":{"line":858,"column":4},"end":{"line":860,"column":5}},"558":{"start":{"line":859,"column":6},"end":{"line":859,"column":18}},"559":{"start":{"line":861,"column":4},"end":{"line":863,"column":5}},"560":{"start":{"line":862,"column":6},"end":{"line":862,"column":18}},"561":{"start":{"line":864,"column":4},"end":{"line":866,"column":5}},"562":{"start":{"line":865,"column":6},"end":{"line":865,"column":18}},"563":{"start":{"line":867,"column":25},"end":{"line":867,"column":93}},"564":{"start":{"line":868,"column":22},"end":{"line":868,"column":75}},"565":{"start":{"line":869,"column":4},"end":{"line":871,"column":5}},"566":{"start":{"line":870,"column":6},"end":{"line":870,"column":19}},"567":{"start":{"line":872,"column":4},"end":{"line":874,"column":5}},"568":{"start":{"line":873,"column":6},"end":{"line":873,"column":18}},"569":{"start":{"line":875,"column":4},"end":{"line":877,"column":5}},"570":{"start":{"line":876,"column":6},"end":{"line":876,"column":19}},"571":{"start":{"line":878,"column":26},"end":{"line":878,"column":67}},"572":{"start":{"line":879,"column":4},"end":{"line":881,"column":5}},"573":{"start":{"line":880,"column":6},"end":{"line":880,"column":19}},"574":{"start":{"line":882,"column":19},"end":{"line":882,"column":47}},"575":{"start":{"line":883,"column":4},"end":{"line":887,"column":5}},"576":{"start":{"line":884,"column":6},"end":{"line":886,"column":7}},"577":{"start":{"line":885,"column":8},"end":{"line":885,"column":20}},"578":{"start":{"line":888,"column":4},"end":{"line":888,"column":17}},"579":{"start":{"line":895,"column":18},"end":{"line":895,"column":26}},"580":{"start":{"line":896,"column":27},"end":{"line":896,"column":29}},"581":{"start":{"line":897,"column":23},"end":{"line":897,"column":25}},"582":{"start":{"line":898,"column":4},"end":{"line":937,"column":5}},"583":{"start":{"line":899,"column":19},"end":{"line":899,"column":30}},"584":{"start":{"line":900,"column":6},"end":{"line":902,"column":7}},"585":{"start":{"line":901,"column":8},"end":{"line":901,"column":17}},"586":{"start":{"line":903,"column":6},"end":{"line":907,"column":7}},"587":{"start":{"line":904,"column":8},"end":{"line":904,"column":34}},"588":{"start":{"line":905,"column":8},"end":{"line":905,"column":23}},"589":{"start":{"line":906,"column":8},"end":{"line":906,"column":17}},"590":{"start":{"line":908,"column":6},"end":{"line":908,"column":28}},"591":{"start":{"line":909,"column":6},"end":{"line":918,"column":7}},"592":{"start":{"line":910,"column":27},"end":{"line":910,"column":83}},"593":{"start":{"line":911,"column":8},"end":{"line":913,"column":9}},"594":{"start":{"line":912,"column":10},"end":{"line":912,"column":65}},"595":{"start":{"line":914,"column":8},"end":{"line":916,"column":9}},"596":{"start":{"line":915,"column":10},"end":{"line":915,"column":19}},"597":{"start":{"line":917,"column":8},"end":{"line":917,"column":36}},"598":{"start":{"line":919,"column":35},"end":{"line":919,"column":110}},"599":{"start":{"line":920,"column":6},"end":{"line":929,"column":7}},"600":{"start":{"line":921,"column":27},"end":{"line":921,"column":83}},"601":{"start":{"line":922,"column":8},"end":{"line":924,"column":9}},"602":{"start":{"line":923,"column":10},"end":{"line":923,"column":65}},"603":{"start":{"line":925,"column":8},"end":{"line":927,"column":9}},"604":{"start":{"line":926,"column":10},"end":{"line":926,"column":19}},"605":{"start":{"line":928,"column":8},"end":{"line":928,"column":36}},"606":{"start":{"line":930,"column":6},"end":{"line":936,"column":7}},"607":{"start":{"line":931,"column":8},"end":{"line":931,"column":34}},"608":{"start":{"line":932,"column":8},"end":{"line":932,"column":23}},"609":{"start":{"line":934,"column":8},"end":{"line":934,"column":24}},"610":{"start":{"line":935,"column":8},"end":{"line":935,"column":40}},"611":{"start":{"line":938,"column":4},"end":{"line":938,"column":26}},"612":{"start":{"line":941,"column":0},"end":{"line":950,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"generateRandomDependencyTreeId","decl":{"start":{"line":26,"column":16},"end":{"line":26,"column":46}},"loc":{"start":{"line":26,"column":73},"end":{"line":29,"column":1}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":32,"column":2},"end":{"line":32,"column":3}},"loc":{"start":{"line":32,"column":184},"end":{"line":42,"column":3}},"line":32},"5":{"name":"(anonymous_5)","decl":{"start":{"line":45,"column":2},"end":{"line":45,"column":3}},"loc":{"start":{"line":45,"column":12},"end":{"line":49,"column":3}},"line":45},"6":{"name":"(anonymous_6)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":19},"end":{"line":87,"column":3}},"line":50},"7":{"name":"(anonymous_7)","decl":{"start":{"line":56,"column":52},"end":{"line":56,"column":53}},"loc":{"start":{"line":56,"column":64},"end":{"line":68,"column":7}},"line":56},"8":{"name":"(anonymous_8)","decl":{"start":{"line":60,"column":62},"end":{"line":60,"column":63}},"loc":{"start":{"line":60,"column":77},"end":{"line":67,"column":9}},"line":60},"9":{"name":"(anonymous_9)","decl":{"start":{"line":76,"column":28},"end":{"line":76,"column":29}},"loc":{"start":{"line":76,"column":38},"end":{"line":78,"column":7}},"line":76},"10":{"name":"(anonymous_10)","decl":{"start":{"line":88,"column":2},"end":{"line":88,"column":3}},"loc":{"start":{"line":88,"column":45},"end":{"line":121,"column":3}},"line":88},"11":{"name":"(anonymous_11)","decl":{"start":{"line":95,"column":23},"end":{"line":95,"column":24}},"loc":{"start":{"line":95,"column":42},"end":{"line":119,"column":5}},"line":95},"12":{"name":"(anonymous_12)","decl":{"start":{"line":96,"column":25},"end":{"line":96,"column":26}},"loc":{"start":{"line":96,"column":46},"end":{"line":118,"column":7}},"line":96},"13":{"name":"(anonymous_13)","decl":{"start":{"line":97,"column":28},"end":{"line":97,"column":29}},"loc":{"start":{"line":97,"column":51},"end":{"line":117,"column":9}},"line":97},"14":{"name":"(anonymous_14)","decl":{"start":{"line":109,"column":35},"end":{"line":109,"column":36}},"loc":{"start":{"line":109,"column":45},"end":{"line":114,"column":13}},"line":109},"15":{"name":"(anonymous_15)","decl":{"start":{"line":122,"column":2},"end":{"line":122,"column":3}},"loc":{"start":{"line":122,"column":44},"end":{"line":152,"column":3}},"line":122},"16":{"name":"(anonymous_16)","decl":{"start":{"line":124,"column":24},"end":{"line":124,"column":25}},"loc":{"start":{"line":124,"column":34},"end":{"line":151,"column":5}},"line":124},"17":{"name":"(anonymous_17)","decl":{"start":{"line":158,"column":2},"end":{"line":158,"column":3}},"loc":{"start":{"line":158,"column":46},"end":{"line":174,"column":3}},"line":158},"18":{"name":"(anonymous_18)","decl":{"start":{"line":175,"column":2},"end":{"line":175,"column":3}},"loc":{"start":{"line":175,"column":64},"end":{"line":189,"column":3}},"line":175},"19":{"name":"(anonymous_19)","decl":{"start":{"line":190,"column":2},"end":{"line":190,"column":3}},"loc":{"start":{"line":190,"column":37},"end":{"line":198,"column":3}},"line":190},"20":{"name":"(anonymous_20)","decl":{"start":{"line":199,"column":2},"end":{"line":199,"column":3}},"loc":{"start":{"line":199,"column":49},"end":{"line":218,"column":3}},"line":199},"21":{"name":"(anonymous_21)","decl":{"start":{"line":219,"column":2},"end":{"line":219,"column":3}},"loc":{"start":{"line":219,"column":36},"end":{"line":230,"column":3}},"line":219},"22":{"name":"(anonymous_22)","decl":{"start":{"line":235,"column":2},"end":{"line":235,"column":3}},"loc":{"start":{"line":235,"column":67},"end":{"line":284,"column":3}},"line":235},"23":{"name":"(anonymous_23)","decl":{"start":{"line":299,"column":2},"end":{"line":299,"column":3}},"loc":{"start":{"line":299,"column":37},"end":{"line":309,"column":3}},"line":299},"24":{"name":"(anonymous_24)","decl":{"start":{"line":301,"column":23},"end":{"line":301,"column":24}},"loc":{"start":{"line":301,"column":42},"end":{"line":308,"column":5}},"line":301},"25":{"name":"(anonymous_25)","decl":{"start":{"line":302,"column":25},"end":{"line":302,"column":26}},"loc":{"start":{"line":302,"column":46},"end":{"line":307,"column":7}},"line":302},"26":{"name":"(anonymous_26)","decl":{"start":{"line":303,"column":28},"end":{"line":303,"column":29}},"loc":{"start":{"line":303,"column":51},"end":{"line":306,"column":9}},"line":303},"27":{"name":"(anonymous_27)","decl":{"start":{"line":310,"column":2},"end":{"line":310,"column":3}},"loc":{"start":{"line":310,"column":52},"end":{"line":329,"column":3}},"line":310},"28":{"name":"(anonymous_28)","decl":{"start":{"line":330,"column":2},"end":{"line":330,"column":3}},"loc":{"start":{"line":330,"column":75},"end":{"line":392,"column":3}},"line":330},"29":{"name":"(anonymous_29)","decl":{"start":{"line":393,"column":2},"end":{"line":393,"column":3}},"loc":{"start":{"line":393,"column":31},"end":{"line":399,"column":3}},"line":393},"30":{"name":"(anonymous_30)","decl":{"start":{"line":400,"column":2},"end":{"line":400,"column":3}},"loc":{"start":{"line":400,"column":70},"end":{"line":456,"column":3}},"line":400},"31":{"name":"(anonymous_31)","decl":{"start":{"line":410,"column":28},"end":{"line":410,"column":29}},"loc":{"start":{"line":410,"column":62},"end":{"line":428,"column":9}},"line":410},"32":{"name":"(anonymous_32)","decl":{"start":{"line":429,"column":28},"end":{"line":429,"column":29}},"loc":{"start":{"line":429,"column":62},"end":{"line":452,"column":9}},"line":429},"33":{"name":"(anonymous_33)","decl":{"start":{"line":457,"column":2},"end":{"line":457,"column":3}},"loc":{"start":{"line":457,"column":73},"end":{"line":471,"column":3}},"line":457},"34":{"name":"(anonymous_34)","decl":{"start":{"line":472,"column":2},"end":{"line":472,"column":3}},"loc":{"start":{"line":472,"column":46},"end":{"line":480,"column":3}},"line":472},"35":{"name":"(anonymous_35)","decl":{"start":{"line":484,"column":2},"end":{"line":484,"column":3}},"loc":{"start":{"line":484,"column":24},"end":{"line":498,"column":3}},"line":484},"36":{"name":"(anonymous_36)","decl":{"start":{"line":499,"column":2},"end":{"line":499,"column":3}},"loc":{"start":{"line":499,"column":43},"end":{"line":511,"column":3}},"line":499},"37":{"name":"(anonymous_37)","decl":{"start":{"line":512,"column":2},"end":{"line":512,"column":3}},"loc":{"start":{"line":512,"column":28},"end":{"line":523,"column":3}},"line":512},"38":{"name":"(anonymous_38)","decl":{"start":{"line":524,"column":2},"end":{"line":524,"column":3}},"loc":{"start":{"line":524,"column":34},"end":{"line":544,"column":3}},"line":524},"39":{"name":"(anonymous_39)","decl":{"start":{"line":545,"column":2},"end":{"line":545,"column":3}},"loc":{"start":{"line":545,"column":48},"end":{"line":556,"column":3}},"line":545},"40":{"name":"(anonymous_40)","decl":{"start":{"line":557,"column":2},"end":{"line":557,"column":3}},"loc":{"start":{"line":557,"column":59},"end":{"line":570,"column":3}},"line":557},"41":{"name":"(anonymous_41)","decl":{"start":{"line":576,"column":2},"end":{"line":576,"column":3}},"loc":{"start":{"line":576,"column":38},"end":{"line":594,"column":3}},"line":576},"42":{"name":"(anonymous_42)","decl":{"start":{"line":595,"column":2},"end":{"line":595,"column":3}},"loc":{"start":{"line":595,"column":36},"end":{"line":602,"column":3}},"line":595},"43":{"name":"(anonymous_43)","decl":{"start":{"line":603,"column":2},"end":{"line":603,"column":3}},"loc":{"start":{"line":603,"column":21},"end":{"line":605,"column":3}},"line":603},"44":{"name":"(anonymous_44)","decl":{"start":{"line":606,"column":2},"end":{"line":606,"column":3}},"loc":{"start":{"line":606,"column":70},"end":{"line":622,"column":3}},"line":606},"45":{"name":"(anonymous_45)","decl":{"start":{"line":624,"column":2},"end":{"line":624,"column":3}},"loc":{"start":{"line":624,"column":50},"end":{"line":645,"column":3}},"line":624},"46":{"name":"(anonymous_46)","decl":{"start":{"line":646,"column":2},"end":{"line":646,"column":3}},"loc":{"start":{"line":646,"column":61},"end":{"line":679,"column":3}},"line":646},"47":{"name":"(anonymous_47)","decl":{"start":{"line":680,"column":2},"end":{"line":680,"column":3}},"loc":{"start":{"line":680,"column":88},"end":{"line":710,"column":3}},"line":680},"48":{"name":"(anonymous_48)","decl":{"start":{"line":711,"column":2},"end":{"line":711,"column":3}},"loc":{"start":{"line":711,"column":30},"end":{"line":722,"column":3}},"line":711},"49":{"name":"(anonymous_49)","decl":{"start":{"line":723,"column":2},"end":{"line":723,"column":3}},"loc":{"start":{"line":723,"column":86},"end":{"line":743,"column":3}},"line":723},"50":{"name":"(anonymous_50)","decl":{"start":{"line":744,"column":2},"end":{"line":744,"column":3}},"loc":{"start":{"line":744,"column":23},"end":{"line":746,"column":3}},"line":744},"51":{"name":"(anonymous_51)","decl":{"start":{"line":747,"column":2},"end":{"line":747,"column":3}},"loc":{"start":{"line":747,"column":70},"end":{"line":760,"column":3}},"line":747},"52":{"name":"(anonymous_52)","decl":{"start":{"line":766,"column":2},"end":{"line":766,"column":3}},"loc":{"start":{"line":766,"column":86},"end":{"line":776,"column":3}},"line":766},"53":{"name":"(anonymous_53)","decl":{"start":{"line":781,"column":2},"end":{"line":781,"column":3}},"loc":{"start":{"line":781,"column":48},"end":{"line":801,"column":3}},"line":781},"54":{"name":"(anonymous_54)","decl":{"start":{"line":802,"column":2},"end":{"line":802,"column":3}},"loc":{"start":{"line":802,"column":28},"end":{"line":814,"column":3}},"line":802},"55":{"name":"(anonymous_55)","decl":{"start":{"line":815,"column":2},"end":{"line":815,"column":3}},"loc":{"start":{"line":815,"column":29},"end":{"line":827,"column":3}},"line":815},"56":{"name":"(anonymous_56)","decl":{"start":{"line":828,"column":2},"end":{"line":828,"column":3}},"loc":{"start":{"line":828,"column":45},"end":{"line":833,"column":3}},"line":828},"57":{"name":"(anonymous_57)","decl":{"start":{"line":834,"column":2},"end":{"line":834,"column":3}},"loc":{"start":{"line":834,"column":48},"end":{"line":846,"column":3}},"line":834},"58":{"name":"(anonymous_58)","decl":{"start":{"line":852,"column":2},"end":{"line":852,"column":3}},"loc":{"start":{"line":852,"column":27},"end":{"line":889,"column":3}},"line":852},"59":{"name":"(anonymous_59)","decl":{"start":{"line":894,"column":2},"end":{"line":894,"column":3}},"loc":{"start":{"line":894,"column":30},"end":{"line":939,"column":3}},"line":894}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":27,"column":16},"end":{"line":27,"column":61}},"type":"binary-expr","locations":[{"start":{"line":27,"column":16},"end":{"line":27,"column":56}},{"start":{"line":27,"column":60},"end":{"line":27,"column":61}}],"line":27},"8":{"loc":{"start":{"line":55,"column":4},"end":{"line":69,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":69,"column":5}},{"start":{},"end":{}}],"line":55},"9":{"loc":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},{"start":{},"end":{}}],"line":57},"10":{"loc":{"start":{"line":61,"column":10},"end":{"line":63,"column":11}},"type":"if","locations":[{"start":{"line":61,"column":10},"end":{"line":63,"column":11}},{"start":{},"end":{}}],"line":61},"11":{"loc":{"start":{"line":75,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":80,"column":5}},{"start":{},"end":{}}],"line":75},"12":{"loc":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},{"start":{},"end":{}}],"line":82},"13":{"loc":{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},{"start":{},"end":{}}],"line":90},"14":{"loc":{"start":{"line":102,"column":10},"end":{"line":116,"column":11}},"type":"if","locations":[{"start":{"line":102,"column":10},"end":{"line":116,"column":11}},{"start":{},"end":{}}],"line":102},"15":{"loc":{"start":{"line":104,"column":12},"end":{"line":107,"column":13}},"type":"if","locations":[{"start":{"line":104,"column":12},"end":{"line":107,"column":13}},{"start":{},"end":{}}],"line":104},"16":{"loc":{"start":{"line":110,"column":14},"end":{"line":112,"column":15}},"type":"if","locations":[{"start":{"line":110,"column":14},"end":{"line":112,"column":15}},{"start":{},"end":{}}],"line":110},"17":{"loc":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},{"start":{},"end":{}}],"line":128},"18":{"loc":{"start":{"line":131,"column":8},"end":{"line":135,"column":9}},"type":"if","locations":[{"start":{"line":131,"column":8},"end":{"line":135,"column":9}},{"start":{"line":133,"column":15},"end":{"line":135,"column":9}}],"line":131},"19":{"loc":{"start":{"line":133,"column":15},"end":{"line":135,"column":9}},"type":"if","locations":[{"start":{"line":133,"column":15},"end":{"line":135,"column":9}},{"start":{},"end":{}}],"line":133},"20":{"loc":{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":143,"column":9}},{"start":{},"end":{}}],"line":141},"21":{"loc":{"start":{"line":144,"column":8},"end":{"line":148,"column":9}},"type":"if","locations":[{"start":{"line":144,"column":8},"end":{"line":148,"column":9}},{"start":{"line":146,"column":15},"end":{"line":148,"column":9}}],"line":144},"22":{"loc":{"start":{"line":146,"column":15},"end":{"line":148,"column":9}},"type":"if","locations":[{"start":{"line":146,"column":15},"end":{"line":148,"column":9}},{"start":{},"end":{}}],"line":146},"23":{"loc":{"start":{"line":180,"column":6},"end":{"line":182,"column":7}},"type":"if","locations":[{"start":{"line":180,"column":6},"end":{"line":182,"column":7}},{"start":{},"end":{}}],"line":180},"24":{"loc":{"start":{"line":180,"column":10},"end":{"line":180,"column":114}},"type":"binary-expr","locations":[{"start":{"line":180,"column":10},"end":{"line":180,"column":38}},{"start":{"line":180,"column":42},"end":{"line":180,"column":76}},{"start":{"line":180,"column":80},"end":{"line":180,"column":114}}],"line":180},"25":{"loc":{"start":{"line":184,"column":6},"end":{"line":186,"column":7}},"type":"if","locations":[{"start":{"line":184,"column":6},"end":{"line":186,"column":7}},{"start":{},"end":{}}],"line":184},"26":{"loc":{"start":{"line":194,"column":6},"end":{"line":196,"column":7}},"type":"if","locations":[{"start":{"line":194,"column":6},"end":{"line":196,"column":7}},{"start":{},"end":{}}],"line":194},"27":{"loc":{"start":{"line":194,"column":10},"end":{"line":194,"column":96}},"type":"binary-expr","locations":[{"start":{"line":194,"column":10},"end":{"line":194,"column":32}},{"start":{"line":194,"column":36},"end":{"line":194,"column":64}},{"start":{"line":194,"column":68},"end":{"line":194,"column":96}}],"line":194},"28":{"loc":{"start":{"line":201,"column":4},"end":{"line":203,"column":5}},"type":"if","locations":[{"start":{"line":201,"column":4},"end":{"line":203,"column":5}},{"start":{},"end":{}}],"line":201},"29":{"loc":{"start":{"line":204,"column":4},"end":{"line":215,"column":5}},"type":"if","locations":[{"start":{"line":204,"column":4},"end":{"line":215,"column":5}},{"start":{},"end":{}}],"line":204},"30":{"loc":{"start":{"line":208,"column":8},"end":{"line":210,"column":9}},"type":"if","locations":[{"start":{"line":208,"column":8},"end":{"line":210,"column":9}},{"start":{},"end":{}}],"line":208},"31":{"loc":{"start":{"line":208,"column":12},"end":{"line":208,"column":97}},"type":"binary-expr","locations":[{"start":{"line":208,"column":12},"end":{"line":208,"column":37}},{"start":{"line":208,"column":41},"end":{"line":208,"column":97}}],"line":208},"32":{"loc":{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},"type":"if","locations":[{"start":{"line":211,"column":8},"end":{"line":213,"column":9}},{"start":{},"end":{}}],"line":211},"33":{"loc":{"start":{"line":225,"column":6},"end":{"line":227,"column":7}},"type":"if","locations":[{"start":{"line":225,"column":6},"end":{"line":227,"column":7}},{"start":{},"end":{}}],"line":225},"34":{"loc":{"start":{"line":240,"column":4},"end":{"line":242,"column":5}},"type":"if","locations":[{"start":{"line":240,"column":4},"end":{"line":242,"column":5}},{"start":{},"end":{}}],"line":240},"35":{"loc":{"start":{"line":248,"column":6},"end":{"line":250,"column":7}},"type":"if","locations":[{"start":{"line":248,"column":6},"end":{"line":250,"column":7}},{"start":{},"end":{}}],"line":248},"36":{"loc":{"start":{"line":254,"column":6},"end":{"line":256,"column":7}},"type":"if","locations":[{"start":{"line":254,"column":6},"end":{"line":256,"column":7}},{"start":{},"end":{}}],"line":254},"37":{"loc":{"start":{"line":257,"column":6},"end":{"line":259,"column":7}},"type":"if","locations":[{"start":{"line":257,"column":6},"end":{"line":259,"column":7}},{"start":{},"end":{}}],"line":257},"38":{"loc":{"start":{"line":277,"column":6},"end":{"line":279,"column":7}},"type":"if","locations":[{"start":{"line":277,"column":6},"end":{"line":279,"column":7}},{"start":{},"end":{}}],"line":277},"39":{"loc":{"start":{"line":312,"column":22},"end":{"line":312,"column":94}},"type":"binary-expr","locations":[{"start":{"line":312,"column":22},"end":{"line":312,"column":28}},{"start":{"line":312,"column":32},"end":{"line":312,"column":94}}],"line":312},"40":{"loc":{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},"type":"if","locations":[{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},{"start":{},"end":{}}],"line":325},"41":{"loc":{"start":{"line":333,"column":6},"end":{"line":335,"column":7}},"type":"if","locations":[{"start":{"line":333,"column":6},"end":{"line":335,"column":7}},{"start":{},"end":{}}],"line":333},"42":{"loc":{"start":{"line":339,"column":8},"end":{"line":341,"column":9}},"type":"if","locations":[{"start":{"line":339,"column":8},"end":{"line":341,"column":9}},{"start":{},"end":{}}],"line":339},"43":{"loc":{"start":{"line":348,"column":10},"end":{"line":350,"column":11}},"type":"if","locations":[{"start":{"line":348,"column":10},"end":{"line":350,"column":11}},{"start":{},"end":{}}],"line":348},"44":{"loc":{"start":{"line":354,"column":30},"end":{"line":354,"column":122}},"type":"binary-expr","locations":[{"start":{"line":354,"column":30},"end":{"line":354,"column":56}},{"start":{"line":354,"column":60},"end":{"line":354,"column":122}}],"line":354},"45":{"loc":{"start":{"line":363,"column":16},"end":{"line":375,"column":17}},"type":"if","locations":[{"start":{"line":363,"column":16},"end":{"line":375,"column":17}},{"start":{},"end":{}}],"line":363},"46":{"loc":{"start":{"line":363,"column":20},"end":{"line":363,"column":38}},"type":"binary-expr","locations":[{"start":{"line":363,"column":20},"end":{"line":363,"column":27}},{"start":{"line":363,"column":31},"end":{"line":363,"column":38}}],"line":363},"47":{"loc":{"start":{"line":377,"column":33},"end":{"line":377,"column":125}},"type":"binary-expr","locations":[{"start":{"line":377,"column":33},"end":{"line":377,"column":59}},{"start":{"line":377,"column":63},"end":{"line":377,"column":125}}],"line":377},"48":{"loc":{"start":{"line":403,"column":6},"end":{"line":405,"column":7}},"type":"if","locations":[{"start":{"line":403,"column":6},"end":{"line":405,"column":7}},{"start":{},"end":{}}],"line":403},"49":{"loc":{"start":{"line":408,"column":44},"end":{"line":408,"column":68}},"type":"binary-expr","locations":[{"start":{"line":408,"column":44},"end":{"line":408,"column":62}},{"start":{"line":408,"column":66},"end":{"line":408,"column":68}}],"line":408},"50":{"loc":{"start":{"line":411,"column":10},"end":{"line":413,"column":11}},"type":"if","locations":[{"start":{"line":411,"column":10},"end":{"line":413,"column":11}},{"start":{},"end":{}}],"line":411},"51":{"loc":{"start":{"line":414,"column":18},"end":{"line":414,"column":23}},"type":"default-arg","locations":[{"start":{"line":414,"column":22},"end":{"line":414,"column":23}}],"line":414},"52":{"loc":{"start":{"line":414,"column":25},"end":{"line":414,"column":30}},"type":"default-arg","locations":[{"start":{"line":414,"column":29},"end":{"line":414,"column":30}}],"line":414},"53":{"loc":{"start":{"line":415,"column":10},"end":{"line":417,"column":11}},"type":"if","locations":[{"start":{"line":415,"column":10},"end":{"line":417,"column":11}},{"start":{},"end":{}}],"line":415},"54":{"loc":{"start":{"line":415,"column":16},"end":{"line":415,"column":48}},"type":"binary-expr","locations":[{"start":{"line":415,"column":16},"end":{"line":415,"column":23}},{"start":{"line":415,"column":27},"end":{"line":415,"column":34}},{"start":{"line":415,"column":38},"end":{"line":415,"column":48}}],"line":415},"55":{"loc":{"start":{"line":420,"column":10},"end":{"line":425,"column":11}},"type":"if","locations":[{"start":{"line":420,"column":10},"end":{"line":425,"column":11}},{"start":{"line":422,"column":17},"end":{"line":425,"column":11}}],"line":420},"56":{"loc":{"start":{"line":430,"column":10},"end":{"line":432,"column":11}},"type":"if","locations":[{"start":{"line":430,"column":10},"end":{"line":432,"column":11}},{"start":{},"end":{}}],"line":430},"57":{"loc":{"start":{"line":433,"column":18},"end":{"line":433,"column":23}},"type":"default-arg","locations":[{"start":{"line":433,"column":22},"end":{"line":433,"column":23}}],"line":433},"58":{"loc":{"start":{"line":433,"column":25},"end":{"line":433,"column":30}},"type":"default-arg","locations":[{"start":{"line":433,"column":29},"end":{"line":433,"column":30}}],"line":433},"59":{"loc":{"start":{"line":434,"column":10},"end":{"line":436,"column":11}},"type":"if","locations":[{"start":{"line":434,"column":10},"end":{"line":436,"column":11}},{"start":{},"end":{}}],"line":434},"60":{"loc":{"start":{"line":434,"column":14},"end":{"line":434,"column":46}},"type":"binary-expr","locations":[{"start":{"line":434,"column":14},"end":{"line":434,"column":21}},{"start":{"line":434,"column":25},"end":{"line":434,"column":32}},{"start":{"line":434,"column":36},"end":{"line":434,"column":46}}],"line":434},"61":{"loc":{"start":{"line":438,"column":10},"end":{"line":443,"column":11}},"type":"if","locations":[{"start":{"line":438,"column":10},"end":{"line":443,"column":11}},{"start":{"line":441,"column":17},"end":{"line":443,"column":11}}],"line":438},"62":{"loc":{"start":{"line":438,"column":14},"end":{"line":438,"column":36}},"type":"binary-expr","locations":[{"start":{"line":438,"column":14},"end":{"line":438,"column":16}},{"start":{"line":438,"column":20},"end":{"line":438,"column":36}}],"line":438},"63":{"loc":{"start":{"line":445,"column":10},"end":{"line":450,"column":11}},"type":"if","locations":[{"start":{"line":445,"column":10},"end":{"line":450,"column":11}},{"start":{"line":447,"column":17},"end":{"line":450,"column":11}}],"line":445},"64":{"loc":{"start":{"line":458,"column":30},"end":{"line":458,"column":35}},"type":"default-arg","locations":[{"start":{"line":458,"column":34},"end":{"line":458,"column":35}}],"line":458},"65":{"loc":{"start":{"line":458,"column":37},"end":{"line":458,"column":42}},"type":"default-arg","locations":[{"start":{"line":458,"column":41},"end":{"line":458,"column":42}}],"line":458},"66":{"loc":{"start":{"line":473,"column":12},"end":{"line":473,"column":17}},"type":"default-arg","locations":[{"start":{"line":473,"column":16},"end":{"line":473,"column":17}}],"line":473},"67":{"loc":{"start":{"line":473,"column":19},"end":{"line":473,"column":24}},"type":"default-arg","locations":[{"start":{"line":473,"column":23},"end":{"line":473,"column":24}}],"line":473},"68":{"loc":{"start":{"line":487,"column":4},"end":{"line":489,"column":5}},"type":"if","locations":[{"start":{"line":487,"column":4},"end":{"line":489,"column":5}},{"start":{},"end":{}}],"line":487},"69":{"loc":{"start":{"line":501,"column":4},"end":{"line":504,"column":5}},"type":"if","locations":[{"start":{"line":501,"column":4},"end":{"line":504,"column":5}},{"start":{},"end":{}}],"line":501},"70":{"loc":{"start":{"line":506,"column":4},"end":{"line":509,"column":5}},"type":"if","locations":[{"start":{"line":506,"column":4},"end":{"line":509,"column":5}},{"start":{},"end":{}}],"line":506},"71":{"loc":{"start":{"line":513,"column":4},"end":{"line":515,"column":5}},"type":"if","locations":[{"start":{"line":513,"column":4},"end":{"line":515,"column":5}},{"start":{},"end":{}}],"line":513},"72":{"loc":{"start":{"line":516,"column":4},"end":{"line":518,"column":5}},"type":"if","locations":[{"start":{"line":516,"column":4},"end":{"line":518,"column":5}},{"start":{},"end":{}}],"line":516},"73":{"loc":{"start":{"line":516,"column":8},"end":{"line":516,"column":79}},"type":"binary-expr","locations":[{"start":{"line":516,"column":8},"end":{"line":516,"column":41}},{"start":{"line":516,"column":45},"end":{"line":516,"column":79}}],"line":516},"74":{"loc":{"start":{"line":519,"column":4},"end":{"line":521,"column":5}},"type":"if","locations":[{"start":{"line":519,"column":4},"end":{"line":521,"column":5}},{"start":{},"end":{}}],"line":519},"75":{"loc":{"start":{"line":519,"column":8},"end":{"line":519,"column":82}},"type":"binary-expr","locations":[{"start":{"line":519,"column":8},"end":{"line":519,"column":41}},{"start":{"line":519,"column":45},"end":{"line":519,"column":82}}],"line":519},"76":{"loc":{"start":{"line":529,"column":6},"end":{"line":541,"column":7}},"type":"if","locations":[{"start":{"line":529,"column":6},"end":{"line":541,"column":7}},{"start":{"line":539,"column":13},"end":{"line":541,"column":7}}],"line":529},"77":{"loc":{"start":{"line":531,"column":8},"end":{"line":537,"column":9}},"type":"if","locations":[{"start":{"line":531,"column":8},"end":{"line":537,"column":9}},{"start":{},"end":{}}],"line":531},"78":{"loc":{"start":{"line":533,"column":12},"end":{"line":535,"column":13}},"type":"if","locations":[{"start":{"line":533,"column":12},"end":{"line":535,"column":13}},{"start":{},"end":{}}],"line":533},"79":{"loc":{"start":{"line":533,"column":16},"end":{"line":533,"column":91}},"type":"binary-expr","locations":[{"start":{"line":533,"column":16},"end":{"line":533,"column":61}},{"start":{"line":533,"column":65},"end":{"line":533,"column":91}}],"line":533},"80":{"loc":{"start":{"line":539,"column":13},"end":{"line":541,"column":7}},"type":"if","locations":[{"start":{"line":539,"column":13},"end":{"line":541,"column":7}},{"start":{},"end":{}}],"line":539},"81":{"loc":{"start":{"line":550,"column":6},"end":{"line":553,"column":7}},"type":"if","locations":[{"start":{"line":550,"column":6},"end":{"line":553,"column":7}},{"start":{},"end":{}}],"line":550},"82":{"loc":{"start":{"line":550,"column":10},"end":{"line":550,"column":65}},"type":"binary-expr","locations":[{"start":{"line":550,"column":10},"end":{"line":550,"column":45}},{"start":{"line":550,"column":49},"end":{"line":550,"column":65}}],"line":550},"83":{"loc":{"start":{"line":557,"column":27},"end":{"line":557,"column":41}},"type":"default-arg","locations":[{"start":{"line":557,"column":40},"end":{"line":557,"column":41}}],"line":557},"84":{"loc":{"start":{"line":557,"column":43},"end":{"line":557,"column":57}},"type":"default-arg","locations":[{"start":{"line":557,"column":56},"end":{"line":557,"column":57}}],"line":557},"85":{"loc":{"start":{"line":564,"column":4},"end":{"line":568,"column":5}},"type":"if","locations":[{"start":{"line":564,"column":4},"end":{"line":568,"column":5}},{"start":{"line":566,"column":11},"end":{"line":568,"column":5}}],"line":564},"86":{"loc":{"start":{"line":581,"column":4},"end":{"line":583,"column":5}},"type":"if","locations":[{"start":{"line":581,"column":4},"end":{"line":583,"column":5}},{"start":{},"end":{}}],"line":581},"87":{"loc":{"start":{"line":597,"column":4},"end":{"line":599,"column":5}},"type":"if","locations":[{"start":{"line":597,"column":4},"end":{"line":599,"column":5}},{"start":{},"end":{}}],"line":597},"88":{"loc":{"start":{"line":608,"column":4},"end":{"line":610,"column":5}},"type":"if","locations":[{"start":{"line":608,"column":4},"end":{"line":610,"column":5}},{"start":{},"end":{}}],"line":608},"89":{"loc":{"start":{"line":618,"column":4},"end":{"line":620,"column":5}},"type":"if","locations":[{"start":{"line":618,"column":4},"end":{"line":620,"column":5}},{"start":{},"end":{}}],"line":618},"90":{"loc":{"start":{"line":648,"column":4},"end":{"line":650,"column":5}},"type":"if","locations":[{"start":{"line":648,"column":4},"end":{"line":650,"column":5}},{"start":{},"end":{}}],"line":648},"91":{"loc":{"start":{"line":673,"column":4},"end":{"line":676,"column":5}},"type":"if","locations":[{"start":{"line":673,"column":4},"end":{"line":676,"column":5}},{"start":{},"end":{}}],"line":673},"92":{"loc":{"start":{"line":699,"column":6},"end":{"line":703,"column":7}},"type":"if","locations":[{"start":{"line":699,"column":6},"end":{"line":703,"column":7}},{"start":{"line":701,"column":13},"end":{"line":703,"column":7}}],"line":699},"93":{"loc":{"start":{"line":704,"column":6},"end":{"line":708,"column":7}},"type":"if","locations":[{"start":{"line":704,"column":6},"end":{"line":708,"column":7}},{"start":{"line":706,"column":13},"end":{"line":708,"column":7}}],"line":704},"94":{"loc":{"start":{"line":715,"column":6},"end":{"line":717,"column":7}},"type":"if","locations":[{"start":{"line":715,"column":6},"end":{"line":717,"column":7}},{"start":{},"end":{}}],"line":715},"95":{"loc":{"start":{"line":715,"column":10},"end":{"line":715,"column":67}},"type":"binary-expr","locations":[{"start":{"line":715,"column":10},"end":{"line":715,"column":15}},{"start":{"line":715,"column":19},"end":{"line":715,"column":67}}],"line":715},"96":{"loc":{"start":{"line":727,"column":6},"end":{"line":729,"column":7}},"type":"if","locations":[{"start":{"line":727,"column":6},"end":{"line":729,"column":7}},{"start":{},"end":{}}],"line":727},"97":{"loc":{"start":{"line":734,"column":6},"end":{"line":737,"column":7}},"type":"if","locations":[{"start":{"line":734,"column":6},"end":{"line":737,"column":7}},{"start":{},"end":{}}],"line":734},"98":{"loc":{"start":{"line":734,"column":10},"end":{"line":734,"column":44}},"type":"binary-expr","locations":[{"start":{"line":734,"column":10},"end":{"line":734,"column":14}},{"start":{"line":734,"column":18},"end":{"line":734,"column":44}}],"line":734},"99":{"loc":{"start":{"line":739,"column":4},"end":{"line":741,"column":5}},"type":"if","locations":[{"start":{"line":739,"column":4},"end":{"line":741,"column":5}},{"start":{},"end":{}}],"line":739},"100":{"loc":{"start":{"line":794,"column":6},"end":{"line":798,"column":7}},"type":"if","locations":[{"start":{"line":794,"column":6},"end":{"line":798,"column":7}},{"start":{},"end":{}}],"line":794},"101":{"loc":{"start":{"line":794,"column":10},"end":{"line":795,"column":123}},"type":"binary-expr","locations":[{"start":{"line":794,"column":11},"end":{"line":794,"column":25}},{"start":{"line":794,"column":29},"end":{"line":794,"column":41}},{"start":{"line":794,"column":45},"end":{"line":794,"column":115}},{"start":{"line":795,"column":6},"end":{"line":795,"column":25}},{"start":{"line":795,"column":29},"end":{"line":795,"column":96}},{"start":{"line":795,"column":101},"end":{"line":795,"column":123}}],"line":794},"102":{"loc":{"start":{"line":806,"column":4},"end":{"line":812,"column":5}},"type":"if","locations":[{"start":{"line":806,"column":4},"end":{"line":812,"column":5}},{"start":{},"end":{}}],"line":806},"103":{"loc":{"start":{"line":809,"column":6},"end":{"line":811,"column":7}},"type":"if","locations":[{"start":{"line":809,"column":6},"end":{"line":811,"column":7}},{"start":{},"end":{}}],"line":809},"104":{"loc":{"start":{"line":819,"column":4},"end":{"line":825,"column":5}},"type":"if","locations":[{"start":{"line":819,"column":4},"end":{"line":825,"column":5}},{"start":{},"end":{}}],"line":819},"105":{"loc":{"start":{"line":822,"column":6},"end":{"line":824,"column":7}},"type":"if","locations":[{"start":{"line":822,"column":6},"end":{"line":824,"column":7}},{"start":{},"end":{}}],"line":822},"106":{"loc":{"start":{"line":829,"column":4},"end":{"line":831,"column":5}},"type":"if","locations":[{"start":{"line":829,"column":4},"end":{"line":831,"column":5}},{"start":{},"end":{}}],"line":829},"107":{"loc":{"start":{"line":835,"column":4},"end":{"line":837,"column":5}},"type":"if","locations":[{"start":{"line":835,"column":4},"end":{"line":837,"column":5}},{"start":{},"end":{}}],"line":835},"108":{"loc":{"start":{"line":841,"column":6},"end":{"line":843,"column":7}},"type":"if","locations":[{"start":{"line":841,"column":6},"end":{"line":843,"column":7}},{"start":{},"end":{}}],"line":841},"109":{"loc":{"start":{"line":855,"column":4},"end":{"line":857,"column":5}},"type":"if","locations":[{"start":{"line":855,"column":4},"end":{"line":857,"column":5}},{"start":{},"end":{}}],"line":855},"110":{"loc":{"start":{"line":858,"column":4},"end":{"line":860,"column":5}},"type":"if","locations":[{"start":{"line":858,"column":4},"end":{"line":860,"column":5}},{"start":{},"end":{}}],"line":858},"111":{"loc":{"start":{"line":861,"column":4},"end":{"line":863,"column":5}},"type":"if","locations":[{"start":{"line":861,"column":4},"end":{"line":863,"column":5}},{"start":{},"end":{}}],"line":861},"112":{"loc":{"start":{"line":864,"column":4},"end":{"line":866,"column":5}},"type":"if","locations":[{"start":{"line":864,"column":4},"end":{"line":866,"column":5}},{"start":{},"end":{}}],"line":864},"113":{"loc":{"start":{"line":869,"column":4},"end":{"line":871,"column":5}},"type":"if","locations":[{"start":{"line":869,"column":4},"end":{"line":871,"column":5}},{"start":{},"end":{}}],"line":869},"114":{"loc":{"start":{"line":872,"column":4},"end":{"line":874,"column":5}},"type":"if","locations":[{"start":{"line":872,"column":4},"end":{"line":874,"column":5}},{"start":{},"end":{}}],"line":872},"115":{"loc":{"start":{"line":875,"column":4},"end":{"line":877,"column":5}},"type":"if","locations":[{"start":{"line":875,"column":4},"end":{"line":877,"column":5}},{"start":{},"end":{}}],"line":875},"116":{"loc":{"start":{"line":879,"column":4},"end":{"line":881,"column":5}},"type":"if","locations":[{"start":{"line":879,"column":4},"end":{"line":881,"column":5}},{"start":{},"end":{}}],"line":879},"117":{"loc":{"start":{"line":884,"column":6},"end":{"line":886,"column":7}},"type":"if","locations":[{"start":{"line":884,"column":6},"end":{"line":886,"column":7}},{"start":{},"end":{}}],"line":884},"118":{"loc":{"start":{"line":900,"column":6},"end":{"line":902,"column":7}},"type":"if","locations":[{"start":{"line":900,"column":6},"end":{"line":902,"column":7}},{"start":{},"end":{}}],"line":900},"119":{"loc":{"start":{"line":900,"column":10},"end":{"line":900,"column":42}},"type":"binary-expr","locations":[{"start":{"line":900,"column":10},"end":{"line":900,"column":25}},{"start":{"line":900,"column":29},"end":{"line":900,"column":42}}],"line":900},"120":{"loc":{"start":{"line":903,"column":6},"end":{"line":907,"column":7}},"type":"if","locations":[{"start":{"line":903,"column":6},"end":{"line":907,"column":7}},{"start":{},"end":{}}],"line":903},"121":{"loc":{"start":{"line":911,"column":8},"end":{"line":913,"column":9}},"type":"if","locations":[{"start":{"line":911,"column":8},"end":{"line":913,"column":9}},{"start":{},"end":{}}],"line":911},"122":{"loc":{"start":{"line":914,"column":8},"end":{"line":916,"column":9}},"type":"if","locations":[{"start":{"line":914,"column":8},"end":{"line":916,"column":9}},{"start":{},"end":{}}],"line":914},"123":{"loc":{"start":{"line":914,"column":12},"end":{"line":914,"column":49}},"type":"binary-expr","locations":[{"start":{"line":914,"column":12},"end":{"line":914,"column":32}},{"start":{"line":914,"column":36},"end":{"line":914,"column":49}}],"line":914},"124":{"loc":{"start":{"line":922,"column":8},"end":{"line":924,"column":9}},"type":"if","locations":[{"start":{"line":922,"column":8},"end":{"line":924,"column":9}},{"start":{},"end":{}}],"line":922},"125":{"loc":{"start":{"line":925,"column":8},"end":{"line":927,"column":9}},"type":"if","locations":[{"start":{"line":925,"column":8},"end":{"line":927,"column":9}},{"start":{},"end":{}}],"line":925},"126":{"loc":{"start":{"line":925,"column":12},"end":{"line":925,"column":49}},"type":"binary-expr","locations":[{"start":{"line":925,"column":12},"end":{"line":925,"column":32}},{"start":{"line":925,"column":36},"end":{"line":925,"column":49}}],"line":925},"127":{"loc":{"start":{"line":930,"column":6},"end":{"line":936,"column":7}},"type":"if","locations":[{"start":{"line":930,"column":6},"end":{"line":936,"column":7}},{"start":{"line":933,"column":13},"end":{"line":936,"column":7}}],"line":930}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":8,"7":8,"8":1,"9":0,"10":1,"11":1,"12":8,"13":8,"14":1,"15":0,"16":0,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":1},"f":{"0":1,"1":8,"2":8,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0},"b":{"0":[0,1],"1":[0,1],"2":[8,0],"3":[8,8],"4":[0,8],"5":[0,1],"6":[1,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0],"52":[0],"53":[0,0],"54":[0,0,0],"55":[0,0],"56":[0,0],"57":[0],"58":[0],"59":[0,0],"60":[0,0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0],"65":[0],"66":[0],"67":[0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0],"84":[0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0,0,0,0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/dependency/formula-dependency.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, IUnitRange, Nullable } from '@univerjs/core';\nimport type { IFeatureDirtyRangeType, IFormulaData, IFormulaDataItem, IOtherFormulaData, IUnitData } from '../../basics/common';\nimport type { IFormulaDirtyData } from '../../services/current-data.service';\n\nimport type { IFeatureCalculationManagerParam } from '../../services/feature-calculation-manager.service';\nimport type { IAllRuntimeData } from '../../services/runtime.service';\nimport type { FunctionNode, PrefixNode, SuffixNode } from '../ast-node';\nimport type { BaseAstNode } from '../ast-node/base-ast-node';\nimport type { BaseReferenceObject, FunctionVariantType } from '../reference-object/base-reference-object';\nimport type { IExecuteAstNodeData } from '../utils/ast-node-tool';\nimport type { PreCalculateNodeType } from '../utils/node-type';\nimport type { IFormulaDependencyTree } from './dependency-tree';\nimport { createIdentifier, Disposable, Inject, ObjectMatrix, RTree } from '@univerjs/core';\n\nimport { prefixToken, suffixToken } from '../../basics/token';\nimport { IFormulaCurrentConfigService } from '../../services/current-data.service';\nimport { IDependencyManagerService } from '../../services/dependency-manager.service';\nimport { IFeatureCalculationManagerService } from '../../services/feature-calculation-manager.service';\nimport { IOtherFormulaManagerService } from '../../services/other-formula-manager.service';\nimport { IFormulaRuntimeService } from '../../services/runtime.service';\nimport { Lexer } from '../analysis/lexer';\nimport { AstTreeBuilder } from '../analysis/parser';\nimport { NodeType } from '../ast-node/node-type';\nimport { Interpreter } from '../interpreter/interpreter';\nimport { FORMULA_AST_CACHE, generateAstNode, includeDefinedName } from '../utils/generate-ast-node';\nimport { FormulaDependencyTree, FormulaDependencyTreeType, FormulaDependencyTreeVirtual } from './dependency-tree';\n\nconst FORMULA_CACHE_LRU_COUNT = 5000;\n\ninterface IFeatureFormulaParam {\n    unitId: string;\n    subUnitId: string;\n    featureId: string;\n}\n\nexport function generateRandomDependencyTreeId(dependencyManagerService: IDependencyManagerService): number {\n    const idNum = dependencyManagerService.getLastTreeId() || 0;\n    return idNum;\n}\n\nexport interface IFormulaDependencyGenerator {\n    generate(): Promise<IFormulaDependencyTree[]>;\n}\n\nexport const IFormulaDependencyGenerator = createIdentifier<IFormulaDependencyGenerator>('engine-formula.dependency-generator');\n\nexport class FormulaDependencyGenerator extends Disposable {\n    private _updateRangeFlattenCache = new Map<string, Map<string, IRange[]>>();\n\n    protected _dependencyRTreeCacheForAddressFunction: RTree = new RTree();\n\n    constructor(\n        @IFormulaCurrentConfigService protected readonly _currentConfigService: IFormulaCurrentConfigService,\n        @IFormulaRuntimeService protected readonly _runtimeService: IFormulaRuntimeService,\n        @IOtherFormulaManagerService protected readonly _otherFormulaManagerService: IOtherFormulaManagerService,\n        @IFeatureCalculationManagerService\n        private readonly _featureCalculationManagerService: IFeatureCalculationManagerService,\n        @Inject(Interpreter) private readonly _interpreter: Interpreter,\n        @Inject(AstTreeBuilder) protected readonly _astTreeBuilder: AstTreeBuilder,\n        @Inject(Lexer) protected readonly _lexer: Lexer,\n        @IDependencyManagerService protected readonly _dependencyManagerService: IDependencyManagerService\n    ) {\n        super();\n    }\n\n    override dispose(): void {\n        this._updateRangeFlattenCache.clear();\n        this._dependencyRTreeCacheForAddressFunction.clear();\n        FORMULA_AST_CACHE.clear();\n    }\n\n    async generate() {\n        this._updateRangeFlatten();\n        // const formulaInterpreter = Interpreter.create(interpreterDatasetConfig);\n\n        const formulaData = this._currentConfigService.getFormulaData();\n\n        const otherFormulaData = this._otherFormulaManagerService.getOtherFormulaData();\n\n        const clearDependencyTreeCache = this._currentConfigService.getClearDependencyTreeCache();\n\n        if (clearDependencyTreeCache != null) {\n            Object.keys(clearDependencyTreeCache).forEach((unitId) => {\n                if (unitId == null) {\n                    return;\n                }\n                Object.keys(clearDependencyTreeCache[unitId]!).forEach((subUnitId) => {\n                    if (subUnitId == null) {\n                        return;\n                    }\n\n                    this._dependencyManagerService.clearOtherFormulaDependency(unitId, subUnitId);\n                    this._dependencyManagerService.clearFeatureFormulaDependency(unitId, subUnitId);\n                    this._dependencyManagerService.clearFormulaDependency(unitId, subUnitId);\n                });\n            });\n        }\n\n        const unitData = this._currentConfigService.getUnitData();\n\n        const treeList = await this._generateTreeList(formulaData, otherFormulaData, unitData);\n\n        const updateTreeList = this._getUpdateTreeListAndMakeDependency(treeList);\n\n        let finalTreeList = this._calculateRunList(updateTreeList);\n\n        const hasFeatureCalculation = this._dependencyFeatureCalculation(finalTreeList);\n\n        if (hasFeatureCalculation) {\n            finalTreeList.forEach((tree) => {\n                tree.resetState();\n            });\n            finalTreeList = this._calculateRunList(finalTreeList);\n        }\n\n        const isCycleDependency = this._checkIsCycleDependency(finalTreeList);\n\n        if (isCycleDependency) {\n            this._runtimeService.enableCycleDependency();\n        }\n\n        this._dependencyRTreeCacheForAddressFunction.clear();\n\n        return Promise.resolve(finalTreeList);\n    }\n\n    private _dependencyFeatureCalculation(newTreeList: IFormulaDependencyTree[]) {\n        const featureMap = this._featureCalculationManagerService.getReferenceExecutorMap();\n\n        if (featureMap.size === 0) {\n            return;\n        }\n\n        /**\n         * Clear the dependency relationships of all featureCalculation nodes in the tree.\n         * Because each execution requires rebuilding the reverse dependencies,\n         * the previous dependencies may become outdated due to data changes in applications such as pivot tables,\n         * which can result in an outdated dirty mark range.\n         */\n        this._clearFeatureCalculationNode(newTreeList);\n\n        let hasFeatureCalculation = false;\n\n        featureMap.forEach((subUnitMap, _) => {\n            subUnitMap.forEach((featureMap, _) => {\n                featureMap.forEach((params, featureId) => {\n                    const { unitId, subUnitId, getDirtyData } = params;\n                    const allDependency = getDirtyData(this._currentConfigService.getDirtyData() as IFormulaDirtyData, this._runtimeService.getAllRuntimeData() as IAllRuntimeData);\n                    const dirtyRanges = this._convertDirtyRangesToUnitRange(allDependency.dirtyRanges);\n                    const intersectTrees = this._intersectFeatureCalculation(dirtyRanges, newTreeList, { unitId, subUnitId, featureId });\n                    if (intersectTrees.length > 0) {\n                        let featureTree = this._getExistTreeList({ unitId, subUnitId, featureId }, newTreeList);\n                        if (featureTree == null) {\n                            featureTree = this._getFeatureFormulaTree(featureId, generateRandomDependencyTreeId(this._dependencyManagerService), params);\n                            newTreeList.push(featureTree);\n                        }\n                        featureTree.parents = new Set<number>();\n                        intersectTrees.forEach((tree) => {\n                            if (tree.hasChildren(featureTree!.treeId)) {\n                                return;\n                            }\n                            tree.pushChildren(featureTree!);\n                        });\n\n                        hasFeatureCalculation = true;\n                    }\n                });\n            });\n        });\n\n        return hasFeatureCalculation;\n    }\n\n    private _clearFeatureCalculationNode(newTreeList: IFormulaDependencyTree[]) {\n        const featureMap = this._featureCalculationManagerService.getReferenceExecutorMap();\n\n        newTreeList.forEach((tree) => {\n            const newChildren = new Set<number>();\n            for (const childTreeId of tree.children) {\n                const child = this._dependencyManagerService.getTreeById(childTreeId);\n                if (!child) {\n                    continue;\n                }\n                if (!child.featureId) {\n                    newChildren.add(childTreeId);\n                } else if (!featureMap.get(tree.unitId)?.get(tree.subUnitId)?.has(child.featureId)) {\n                    newChildren.add(childTreeId);\n                }\n            }\n            tree.children = newChildren;\n\n            const newParents = new Set<number>();\n            for (const parentTreeId of tree.parents) {\n                const parent = this._dependencyManagerService.getTreeById(parentTreeId);\n                if (!parent) {\n                    continue;\n                }\n                if (!parent.featureId) {\n                    newParents.add(parentTreeId);\n                } else if (!featureMap.get(tree.unitId)?.get(tree.subUnitId)?.has(parent.featureId)) {\n                    newParents.add(parentTreeId);\n                }\n            }\n            tree.parents = newParents;\n        });\n    }\n\n    /**\n     * TODO @DR-Univer: The next step will be to try changing the incoming dirtyRanges to an array, thus avoiding conversion.\n     * @param dirtyRanges\n     * @returns\n     */\n    protected _convertDirtyRangesToUnitRange(dirtyRanges: IFeatureDirtyRangeType) {\n        const unitRange: IUnitRange[] = [];\n        for (const unitId in dirtyRanges) {\n            const unitMap = dirtyRanges[unitId];\n            for (const subUnitId in unitMap) {\n                const ranges = unitMap[subUnitId];\n                for (const range of ranges) {\n                    unitRange.push({\n                        unitId,\n                        sheetId: subUnitId,\n                        range,\n                    });\n                }\n            }\n        }\n        return unitRange;\n    }\n\n    private _intersectFeatureCalculation(dirtyRanges: IUnitRange[], newTreeList: IFormulaDependencyTree[], param: IFeatureFormulaParam) {\n        const dependencyTree = [];\n        const treeIds = this._dependencyManagerService.searchDependency(dirtyRanges);\n        for (let i = 0, len = newTreeList.length; i < len; i++) {\n            const tree = newTreeList[i];\n            if (tree.unitId === param.unitId && tree.subUnitId === param.subUnitId && tree.featureId === param.featureId) {\n                continue;\n            }\n            const isAdded = treeIds.has(tree.treeId);\n            if (isAdded) {\n                dependencyTree.push(tree);\n            }\n        }\n        return dependencyTree;\n    }\n\n    private _getExistTreeList(param: IFeatureFormulaParam, treeList: IFormulaDependencyTree[]) {\n        const { unitId, subUnitId, featureId } = param;\n        for (let i = 0, len = treeList.length; i < len; i++) {\n            const tree = treeList[i];\n            if (tree.unitId === unitId && tree.subUnitId === subUnitId && tree.featureId === featureId) {\n                return tree;\n            }\n        }\n    }\n\n    private _isCyclicUtil(\n        treeId: number,\n        visited: Set<number>,\n        recursionStack: Set<number>\n    ) {\n        const node = this._dependencyManagerService.getTreeById(treeId);\n        if (node == null) {\n            return false;\n        }\n        if (!visited.has(node.treeId)) {\n            // Mark the current node as visited and part of recursion stack\n            visited.add(node.treeId);\n            recursionStack.add(node.treeId);\n\n            // Recur for all the children of this node\n            for (const childTreeId of node.children) {\n                if (!visited.has(childTreeId) && this._isCyclicUtil(childTreeId, visited, recursionStack)) {\n                    return true;\n                }\n                if (recursionStack.has(childTreeId)) {\n                    return true;\n                }\n            }\n        }\n        recursionStack.delete(node.treeId); // remove the node from recursion stack\n        return false;\n    }\n\n    protected _checkIsCycleDependency(treeList: IFormulaDependencyTree[]) {\n        const visited = new Set<number>();\n        const recursionStack = new Set<number>();\n\n        // Call the recursive helper function to detect cycle in different\n        // DFS trees\n        for (let i = 0, len = treeList.length; i < len; i++) {\n            const tree = treeList[i];\n            const isCycle = this._isCyclicUtil(tree.treeId, visited, recursionStack);\n            if (isCycle === true) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Generate nodes for the dependency tree, where each node contains all the reference data ranges included in each formula.\n     * @param formulaData\n     */\n    protected async _generateTreeList(\n        formulaData: IFormulaData,\n        otherFormulaData: IOtherFormulaData,\n        unitData: IUnitData\n    ) {\n        const formulaDataKeys = Object.keys(formulaData);\n\n        const otherFormulaDataKeys = Object.keys(otherFormulaData);\n\n        const treeList: IFormulaDependencyTree[] = [];\n\n        // Recalculation can only be triggered after clearing the cache. For example, if a calculation error is reported for a non-existent formula and a custom formula is registered later, all formulas need to be calculated forcibly.\n        const forceCalculate = this._currentConfigService.isForceCalculate();\n        if (forceCalculate) {\n            this._dependencyManagerService.reset();\n        }\n\n        this._registerFormulas(formulaDataKeys, formulaData, unitData, treeList);\n\n        this._registerOtherFormulas(otherFormulaData, otherFormulaDataKeys, treeList as FormulaDependencyTree[]);\n\n        this._registerFeatureFormulas(treeList as FormulaDependencyTree[]);\n\n        for (let i = 0, len = treeList.length; i < len; i++) {\n            const tree = treeList[i];\n\n            // After entering the pivot table, no calculation is required if there is no formula\n            if (!tree.formula) {\n                continue;\n            }\n\n            const node = this._getTreeNode(tree);\n            tree.isDirty = this._includeTree(tree, node);\n\n            const addressFunctionNodes = this._getAddressFunctionNodeList(node);\n            if (addressFunctionNodes.length > 0) {\n                tree.addressFunctionNodes = addressFunctionNodes;\n            }\n\n            if (tree.isVirtual) {\n                continue;\n            }\n\n            this._runtimeService.setCurrent(\n                tree.row,\n                tree.column,\n                tree.rowCount,\n                tree.columnCount,\n                tree.subUnitId,\n                tree.unitId\n            );\n\n            const rangeList = await this._getRangeListByNode({\n                node,\n                refOffsetX: tree.refOffsetX,\n                refOffsetY: tree.refOffsetY,\n            });\n            (tree as FormulaDependencyTree).pushRangeList(rangeList);\n        }\n\n        for (let i = 0, len = treeList.length; i < len; i++) {\n            const tree = treeList[i];\n            if (tree.isCache) {\n                continue;\n            }\n            this._dependencyManagerService.addDependencyRTreeCache(tree);\n        }\n\n        await this._calculateListByFunctionRefNode(treeList);\n\n        return treeList;\n    }\n\n    // private _moveRangeList(tree: FormulaDependencyTree, refOffsetX: number, refOffsetY: number) {\n    //     const rangeList = tree.rangeList;\n    //     const newRangeList = [];\n    //     for (let i = 0, len = rangeList.length; i < len; i++) {\n    //         const unitRange = rangeList[i];\n    //         const newRange = {\n    //             unitId: tree.unitId,\n    //             sheetId: tree.subUnitId,\n    //             range: moveRangeByOffset(unitRange.range, refOffsetX, refOffsetY),\n    //         };\n    //         newRangeList.push(newRange);\n    //     }\n    //     return newRangeList;\n    // }\n\n    protected _registerFeatureFormulas(treeList: FormulaDependencyTree[]) {\n        /**\n         * Register the external application relying on 'ref' into the formula system,\n         * which can determine the execution timing of the external application\n         * registration Executor based on the dependency relationship.\n         */\n        const featureMap = this._featureCalculationManagerService.getReferenceExecutorMap();\n        featureMap.forEach((subUnitMap, _) => {\n            subUnitMap.forEach((featureMap, _) => {\n                featureMap.forEach((params, featureId) => {\n                    const treeId = this._dependencyManagerService.getFeatureFormulaDependency(params.unitId, params.subUnitId, featureId);\n                    treeList.push(this._getFeatureFormulaTree(featureId, treeId, params));\n                });\n            });\n        });\n    }\n\n    protected _getFeatureFormulaTree(featureId: string, treeId: Nullable<number>, params: IFeatureCalculationManagerParam) {\n        const { unitId, subUnitId, dependencyRanges, getDirtyData } = params;\n        const treeIdNum = treeId || generateRandomDependencyTreeId(this._dependencyManagerService);\n        const FDtree = new FormulaDependencyTree(treeIdNum);\n\n        // FDtree.unitId = unitId;\n        // FDtree.subUnitId = subUnitId;\n\n        FDtree.unitId = unitId;\n        FDtree.subUnitId = subUnitId;\n        FDtree.rangeList = dependencyRanges;\n        FDtree.getDirtyData = getDirtyData;\n\n        const allDependency = getDirtyData(this._currentConfigService.getDirtyData() as IFormulaDirtyData, this._runtimeService.getAllRuntimeData() as IAllRuntimeData);\n        const dirtyRanges = this._convertDirtyRangesToUnitRange(allDependency.dirtyRanges);\n\n        FDtree.featureDirtyRanges = dirtyRanges;\n\n        FDtree.featureId = featureId;\n\n        FDtree.type = FormulaDependencyTreeType.FEATURE_FORMULA;\n\n        // FDtree.rangeList = dependencyRanges;\n\n        this._dependencyManagerService.addFeatureFormulaDependency(unitId, subUnitId, featureId, FDtree);\n\n        const treeCache = this._dependencyManagerService.getFeatureFormulaDependency(params.unitId, params.subUnitId, featureId);\n        if (treeCache) {\n            FDtree.isCache = true;\n        }\n\n        return FDtree;\n    }\n\n    protected _registerOtherFormulas(otherFormulaData: IOtherFormulaData, otherFormulaDataKeys: string[], treeList: IFormulaDependencyTree[]) {\n        /**\n         * Register formulas in doc, slide, and other types of applications.\n         */\n        for (const unitId of otherFormulaDataKeys) {\n            const subComponentData = otherFormulaData[unitId];\n            if (subComponentData == null) {\n                continue;\n            }\n            const subComponentKeys = Object.keys(subComponentData);\n            for (const subUnitId of subComponentKeys) {\n                const subFormulaData = subComponentData[subUnitId];\n                if (subFormulaData == null) {\n                    continue;\n                }\n                const subFormulaDataKeys = Object.keys(subFormulaData);\n                for (const subFormulaDataId of subFormulaDataKeys) {\n                    const hasOtherFormula = this._dependencyManagerService.hasOtherFormulaDataMainData(subFormulaDataId);\n                    const formulaDataItem = subFormulaData[subFormulaDataId];\n                    const { f: formulaString, ranges } = formulaDataItem;\n                    let isCache = false;\n                    if (hasOtherFormula) {\n                        isCache = true;\n                    }\n                    const node = generateAstNode(unitId, formulaString, this._lexer, this._astTreeBuilder, this._currentConfigService);\n                    const { firstRow, firstColumn } = this._getFirstCellOfRange(ranges);\n\n                    const treeMatrix = this._dependencyManagerService.getOtherFormulaDependency(unitId, subUnitId, subFormulaDataId);\n                    const firstTreeId = treeMatrix?.getValue(0, 0) || generateRandomDependencyTreeId(this._dependencyManagerService);\n                    const firstFDtree = new FormulaDependencyTree(firstTreeId);\n\n                    for (let i = 0; i < ranges.length; i++) {\n                        const range = ranges[i];\n                        const { startRow, startColumn, endRow, endColumn } = range;\n\n                        for (let r = startRow; r <= endRow; r++) {\n                            for (let c = startColumn; c <= endColumn; c++) {\n                                const x = c - firstColumn;\n                                const y = r - firstRow;\n                                if (x === 0 && y === 0) {\n                                    firstFDtree.node = node;\n                                    firstFDtree.formula = formulaString;\n                                    firstFDtree.unitId = unitId;\n                                    firstFDtree.subUnitId = subUnitId;\n                                    firstFDtree.formulaId = subFormulaDataId;\n                                    firstFDtree.type = FormulaDependencyTreeType.OTHER_FORMULA;\n                                    firstFDtree.isCache = isCache;\n                                    treeList.push(firstFDtree);\n                                    this._dependencyManagerService.addOtherFormulaDependency(unitId, subUnitId, subFormulaDataId, firstFDtree);\n                                    this._dependencyManagerService.addFormulaDependencyByDefinedName(firstFDtree);\n                                    continue;\n                                }\n\n                                const virtual = new FormulaDependencyTreeVirtual();\n                                virtual.treeId = treeMatrix?.getValue(x, y) || generateRandomDependencyTreeId(this._dependencyManagerService);\n\n                                virtual.refTree = firstFDtree;\n                                virtual.refOffsetX = x;\n                                virtual.refOffsetY = y;\n                                virtual.isCache = isCache;\n                                this._dependencyManagerService.addOtherFormulaDependency(unitId, subUnitId, subFormulaDataId, virtual);\n                                this._dependencyManagerService.addFormulaDependencyByDefinedName(virtual);\n                                treeList.push(virtual);\n                            }\n                        }\n                    }\n                    this._dependencyManagerService.addOtherFormulaDependencyMainData(subFormulaDataId);\n                }\n            }\n        }\n    }\n\n    protected _getFirstCellOfRange(ranges: IRange[]) {\n        const range = ranges[0];\n        return {\n            firstRow: range.startRow,\n            firstColumn: range.startColumn,\n        };\n    }\n\n    protected _registerFormulas(formulaDataKeys: string[], formulaData: IFormulaData, unitData: IUnitData, treeList: IFormulaDependencyTree[]) {\n        /**\n         * Register formulas in the sheet.\n         */\n        for (const unitId of formulaDataKeys) {\n            const sheetData = formulaData[unitId];\n            if (sheetData == null) {\n                continue;\n            }\n            const sheetDataKeys = Object.keys(sheetData);\n            for (const sheetId of sheetDataKeys) {\n                const matrixData = new ObjectMatrix(sheetData[sheetId] || {});\n                const sIdCache = new Map<string, FormulaDependencyTree>();\n\n                matrixData.forValue((row, column, formulaDataItem) => {\n                    // const formulaString = formulaDataItem.f;\n                    if (formulaDataItem == null) {\n                        return true;\n                    }\n\n                    const { x = 0, y = 0, si } = formulaDataItem;\n\n                    if (!(x === 0 && y === 0 && si != null)) {\n                        return true;\n                    }\n\n                    const FDtree = this._createFDtree(unitId, sheetId, row, column, unitData, formulaDataItem);\n\n                    const treeId = this._dependencyManagerService.getFormulaDependency(unitId, sheetId, row, column);\n                    if (treeId != null) {\n                        FDtree.treeId = treeId;\n                    } else {\n                        this._dependencyManagerService.addFormulaDependency(unitId, sheetId, row, column, FDtree);\n                        this._dependencyManagerService.addFormulaDependencyByDefinedName(FDtree);\n                    }\n\n                    sIdCache.set(si, FDtree);\n                    treeList.push(FDtree);\n                });\n\n                matrixData.forValue((row, column, formulaDataItem) => {\n                    // const formulaString = formulaDataItem.f;\n                    if (formulaDataItem == null) {\n                        return true;\n                    }\n\n                    const { x = 0, y = 0, si } = formulaDataItem;\n\n                    if (x === 0 && y === 0 && si != null) {\n                        return true;\n                    }\n\n                    let FDtree: IFormulaDependencyTree;\n\n                    if (si && sIdCache.has(si)) {\n                        const cache = sIdCache.get(si)!;\n                        FDtree = this._createVirtualFDtree(cache as FormulaDependencyTree, formulaDataItem);\n                        // FDtree.rangeList = this._moveRangeList(cache, x, y);\n                    } else {\n                        FDtree = this._createFDtree(unitId, sheetId, row, column, unitData, formulaDataItem);\n                    }\n\n                    const treeId = this._dependencyManagerService.getFormulaDependency(unitId, sheetId, row, column);\n                    if (treeId != null) {\n                        FDtree.treeId = treeId;\n                    } else {\n                        this._dependencyManagerService.addFormulaDependency(unitId, sheetId, row, column, FDtree);\n                        this._dependencyManagerService.addFormulaDependencyByDefinedName(FDtree);\n                    }\n\n                    treeList.push(FDtree);\n                });\n\n                sIdCache.clear();\n            }\n        }\n    }\n\n    protected _createFDtree(unitId: string, sheetId: string, row: number, column: number, unitData: IUnitData, formulaDataItem: IFormulaDataItem) {\n        const { f: formulaString, x = 0, y = 0 } = formulaDataItem;\n\n        const FDtree = new FormulaDependencyTree(generateRandomDependencyTreeId(this._dependencyManagerService));\n\n        const sheetItem = unitData[unitId][sheetId];\n\n        const node = generateAstNode(unitId, formulaString, this._lexer, this._astTreeBuilder, this._currentConfigService);\n\n        FDtree.node = node;\n        FDtree.formula = formulaString;\n        FDtree.unitId = unitId;\n        FDtree.subUnitId = sheetId;\n        FDtree.row = row;\n        FDtree.column = column;\n\n        // FDtree.refOffsetX = x;\n        // FDtree.refOffsetY = y;\n\n        FDtree.rowCount = sheetItem.rowCount;\n        FDtree.columnCount = sheetItem.columnCount;\n\n        return FDtree;\n    }\n\n    protected _createVirtualFDtree(tree: FormulaDependencyTree, formulaDataItem: IFormulaDataItem) {\n        const { x = 0, y = 0 } = formulaDataItem;\n        const virtual = new FormulaDependencyTreeVirtual();\n        virtual.treeId = generateRandomDependencyTreeId(this._dependencyManagerService);\n        virtual.refTree = tree;\n        virtual.refOffsetX = x;\n        virtual.refOffsetY = y;\n\n        return virtual;\n    }\n\n    /**\n     * Break down the dirty areas into ranges for subsequent matching.\n     */\n    protected _updateRangeFlatten() {\n        const forceCalculate = this._currentConfigService.isForceCalculate();\n        const dirtyRanges = this._currentConfigService.getDirtyRanges();\n        if (forceCalculate) {\n            return;\n        }\n        this._updateRangeFlattenCache.clear();\n        for (let i = 0; i < dirtyRanges.length; i++) {\n            const gridRange = dirtyRanges[i];\n            const range = gridRange.range;\n            const sheetId = gridRange.sheetId;\n            const unitId = gridRange.unitId;\n\n            this._addFlattenCache(unitId, sheetId, range);\n        }\n    }\n\n    private _addFlattenCache(unitId: string, sheetId: string, range: IRange) {\n        let unitMatrix = this._updateRangeFlattenCache.get(unitId);\n        if (unitMatrix == null) {\n            unitMatrix = new Map<string, IRange[]>();\n            this._updateRangeFlattenCache.set(unitId, unitMatrix);\n        }\n\n        let ranges = unitMatrix.get(sheetId);\n\n        if (ranges == null) {\n            ranges = [];\n            unitMatrix.set(sheetId, ranges);\n        }\n\n        ranges.push(range);\n\n        // let sheetMatrix = unitMatrix.get(sheetId);\n        // if (!sheetMatrix) {\n        //     sheetMatrix = new ObjectMatrix<IRange>();\n        //     unitMatrix.set(sheetId, sheetMatrix);\n        // }\n\n        // // don't use destructuring assignment\n        // const startRow = range.startRow;\n\n        // const startColumn = range.startColumn;\n\n        // const endRow = range.endRow;\n\n        // const endColumn = range.endColumn;\n\n        // // don't use chained calls\n        // for (let r = startRow; r <= endRow; r++) {\n        //     for (let c = startColumn; c <= endColumn; c++) {\n        //         sheetMatrix.setValue(r, c, true);\n        //     }\n        // }\n    }\n\n    private _isPreCalculateNode(node: BaseAstNode) {\n        if (node.nodeType === NodeType.UNION) {\n            return true;\n        }\n\n        if (node.nodeType === NodeType.PREFIX && (node as PrefixNode).getToken() === prefixToken.AT) {\n            return true;\n        }\n\n        if (node.nodeType === NodeType.SUFFIX && (node as SuffixNode).getToken() === suffixToken.POUND) {\n            return true;\n        }\n\n        return false;\n    }\n\n    private _nodeTraversalRef(node: BaseAstNode, result: PreCalculateNodeType[]) {\n        const children = node.getChildren();\n        const childrenCount = children.length;\n        for (let i = 0; i < childrenCount; i++) {\n            const item = children[i];\n            if (this._isPreCalculateNode(item)) {\n                result.push(item as PreCalculateNodeType);\n                if (item.nodeType === NodeType.UNION) {\n                    for (const unionChildItem of item.getChildren()) {\n                        if (unionChildItem.nodeType === NodeType.FUNCTION && (unionChildItem as FunctionNode).isAddress()) {\n                            this._nodeTraversalRef(unionChildItem, result);\n                        }\n                    }\n                }\n                continue;\n            } else if (item.nodeType === NodeType.REFERENCE) {\n                result.push(item as PreCalculateNodeType);\n            }\n            this._nodeTraversalRef(item, result);\n        }\n    }\n\n    private _nodeTraversalReferenceFunction(node: BaseAstNode, result: FunctionNode[]) {\n        const children = node.getChildren();\n        const childrenCount = children.length;\n        for (let i = 0; i < childrenCount; i++) {\n            const item = children[i];\n            if (item.nodeType === NodeType.FUNCTION && (item as FunctionNode).isAddress()) {\n                result.push(item as FunctionNode);\n                continue;\n            }\n            this._nodeTraversalReferenceFunction(item, result);\n        }\n    }\n\n    private async _executeNode(node: PreCalculateNodeType | FunctionNode, refOffsetX = 0, refOffsetY = 0) {\n        let value: BaseReferenceObject;\n        const nodeData = {\n            node,\n            refOffsetX,\n            refOffsetY,\n        };\n        if (this._interpreter.checkAsyncNode(node)) {\n            value = (await this._interpreter.executeAsync(nodeData)) as BaseReferenceObject;\n        } else {\n            value = this._interpreter.execute(nodeData) as BaseReferenceObject;\n        }\n        return value;\n    }\n\n    /**\n     * Calculate the range required for collection in advance,\n     * including references and location functions (such as OFFSET, INDIRECT, INDEX, etc.).\n     * @param node\n     */\n    protected async _getRangeListByNode(nodeData: IExecuteAstNodeData) {\n        // ref function in offset indirect INDEX\n        const preCalculateNodeList: PreCalculateNodeType[] = [];\n\n        const refOffsetX = nodeData.refOffsetX;\n        const refOffsetY = nodeData.refOffsetY;\n        const node = nodeData.node;\n\n        if (node == null) {\n            return [];\n        }\n\n        this._nodeTraversalRef(node, preCalculateNodeList);\n        const rangeList: IUnitRange[] = [];\n\n        for (let i = 0, len = preCalculateNodeList.length; i < len; i++) {\n            const node = preCalculateNodeList[i];\n\n            const value: BaseReferenceObject = await this._executeNode(node, refOffsetX, refOffsetY);\n\n            const gridRange = value.toUnitRange();\n\n            // const token = serializeRangeToRefString({ ...gridRange, sheetName: this._currentConfigService.getSheetName(gridRange.unitId, gridRange.sheetId) });\n\n            rangeList.push(gridRange);\n\n            node.setValue(null);\n        }\n\n        return rangeList;\n    }\n\n    protected _getAddressFunctionNodeList(node: Nullable<BaseAstNode>) {\n        const referenceFunctionList: FunctionNode[] = [];\n\n        if (node == null) {\n            return [];\n        }\n\n        this._nodeTraversalReferenceFunction(node, referenceFunctionList);\n\n        return referenceFunctionList;\n    }\n\n    protected _getTreeNode(tree: IFormulaDependencyTree) {\n        return tree.node!;\n    }\n\n    protected async _buildDirtyRangesByAddressFunction(treeDependencyCache: RTree, tree: IFormulaDependencyTree) {\n        const addressFunctionNodes = tree.addressFunctionNodes;\n\n        if (addressFunctionNodes.length === 0) {\n            return;\n        }\n\n        const refOffsetX = tree.refOffsetX;\n        const refOffsetY = tree.refOffsetY;\n\n        const addressFunctionRangeList = await this._getRangeListByFunctionRefNode(addressFunctionNodes, refOffsetX, refOffsetY);\n\n        tree.addressFunctionNodes = [];\n\n        this._addDependencyTreeByAddressFunction(tree, addressFunctionRangeList);\n\n        const newSearchResults = treeDependencyCache.bulkSearch(addressFunctionRangeList) as Set<number>;\n\n        const preCalculateTreeList = this._buildTreeNodeById(newSearchResults);\n\n        if (preCalculateTreeList.length === 0) {\n            return;\n        }\n\n        await this._calculateAddressFunctionRuntimeData(treeDependencyCache, preCalculateTreeList);\n    }\n\n    private _executedAddressFunctionNodeIds: Set<number> = new Set();\n\n    protected async _calculateListByFunctionRefNode(treeList: IFormulaDependencyTree[]) {\n        const treeDependencyCache = new RTree();\n        for (let i = 0, len = treeList.length; i < len; i++) {\n            const tree = treeList[i];\n\n            treeDependencyCache.insert({\n                unitId: tree.unitId,\n                sheetId: tree.subUnitId,\n                range: {\n                    startRow: tree.row,\n                    startColumn: tree.column,\n                    endRow: tree.row,\n                    endColumn: tree.column,\n                },\n                id: tree.treeId,\n            });\n        }\n\n        this._executedAddressFunctionNodeIds.clear();\n\n        for (let i = 0, len = treeList.length; i < len; i++) {\n            const tree = treeList[i];\n            await this._calculateAddressFunction(treeDependencyCache, tree);\n        }\n    }\n\n    private async _calculateAddressFunction(treeDependencyCache: RTree, tree: IFormulaDependencyTree) {\n        const addressFunctionNodes = tree.addressFunctionNodes;\n\n        if (addressFunctionNodes.length === 0) {\n            return;\n        }\n\n        const refOffsetX = tree.refOffsetX;\n        const refOffsetY = tree.refOffsetY;\n\n        this._runtimeService.setCurrent(\n            tree.row,\n            tree.column,\n            tree.rowCount,\n            tree.columnCount,\n            tree.subUnitId,\n            tree.unitId\n        );\n\n        const dirtyRanges: IUnitRange[] = [];\n        for (let j = 0, len = addressFunctionNodes.length; j < len; j++) {\n            const rangeList = await this._getRangeListByNode({\n                node: addressFunctionNodes[j],\n                refOffsetX,\n                refOffsetY,\n            });\n\n            dirtyRanges.push(...rangeList);\n        }\n\n        const newSearchResults = new Set<number>();\n        this._searchDependencyByAddressFunction(treeDependencyCache, dirtyRanges, newSearchResults);\n\n        const preCalculateTreeList: IFormulaDependencyTree[] = this._buildTreeNodeById(newSearchResults);\n\n        if (preCalculateTreeList.length === 0) {\n            await this._buildDirtyRangesByAddressFunction(treeDependencyCache, tree);\n            return;\n        }\n\n        // const finalTreeList = this._calculateRunList(preCalculateTreeList);\n\n        // for(const tree of finalTreeList){\n        //     tree.resetState();\n        // }\n\n        await this._calculateAddressFunctionRuntimeData(treeDependencyCache, preCalculateTreeList);\n\n        await this._buildDirtyRangesByAddressFunction(treeDependencyCache, tree);\n    }\n\n    private async _calculateAddressFunctionRuntimeData(treeDependencyCache: RTree, preCalculateTreeList: IFormulaDependencyTree[]) {\n        while (preCalculateTreeList.length > 0) {\n            const tree = preCalculateTreeList.pop()!;\n            const node = this._getTreeNode(tree);\n            const nodeData = {\n                node,\n                refOffsetX: tree.refOffsetX,\n                refOffsetY: tree.refOffsetY,\n            };\n\n            await this._calculateAddressFunction(treeDependencyCache, tree);\n\n            this._runtimeService.setCurrent(\n                tree.row,\n                tree.column,\n                tree.rowCount,\n                tree.columnCount,\n                tree.subUnitId,\n                tree.unitId\n            );\n\n            let value: FunctionVariantType;\n            if (this._interpreter.checkAsyncNode(nodeData.node)) {\n                value = await this._interpreter.executeAsync(nodeData);\n            } else {\n                value = this._interpreter.execute(nodeData);\n            }\n\n            if (tree.formulaId != null) {\n                this._runtimeService.setRuntimeOtherData(tree.formulaId, tree.refOffsetX, tree.refOffsetY, value);\n            } else {\n                this._runtimeService.setRuntimeData(value);\n            }\n        }\n    }\n\n    private _buildTreeNodeById(treeIds: Set<number>) {\n        const preCalculateTreeList: IFormulaDependencyTree[] = [];\n        for (const treeId of treeIds) {\n            const tree = this._getTreeById(treeId);\n            if (!tree || this._executedAddressFunctionNodeIds.has(treeId)) {\n                continue;\n            }\n\n            this._executedAddressFunctionNodeIds.add(treeId);\n\n            preCalculateTreeList.push(tree);\n        }\n        return preCalculateTreeList;\n    }\n\n    private _searchDependencyByAddressFunction(treeDependencyCache: RTree, dirtyRanges: IUnitRange[], searchResults: Set<number>) {\n        const newSearchResults = treeDependencyCache.bulkSearch(dirtyRanges) as Set<number>;\n        const addressFunctionNodes = this._dependencyRTreeCacheForAddressFunction.bulkSearch(dirtyRanges) as Set<number>;\n        for (const treeId of addressFunctionNodes) {\n            if (!searchResults.has(treeId)) {\n                searchResults.add(treeId);\n            }\n        }\n\n        const newDirtyRanges: IUnitRange[] = [];\n        for (const treeId of newSearchResults) {\n            const tree = this._getTreeById(treeId);\n            if (tree && !searchResults.has(treeId)) {\n                newDirtyRanges.push(...tree.rangeList);\n\n                searchResults.add(treeId);\n            }\n        }\n\n        if (newDirtyRanges.length > 0) {\n            this._searchDependencyByAddressFunction(treeDependencyCache, newDirtyRanges, searchResults);\n        }\n\n        return searchResults;\n    }\n\n    protected _getTreeById(treeId: number) {\n        return this._dependencyManagerService.getTreeById(treeId);\n    }\n\n    private _addDependencyTreeByAddressFunction(tree: IFormulaDependencyTree, addressFunctionRangeList: IUnitRange[]) {\n        const searchRanges = [];\n        for (let i = 0; i < addressFunctionRangeList.length; i++) {\n            const unitRangeWithNum = addressFunctionRangeList[i];\n            const { unitId, sheetId, range } = unitRangeWithNum;\n\n            searchRanges.push({\n                unitId,\n                sheetId,\n                range,\n                id: tree.treeId,\n            });\n        }\n\n        this._dependencyRTreeCacheForAddressFunction.bulkInsert(searchRanges);\n    }\n\n    /**\n     * Calculate the range required for collection in advance,\n     * including references and location functions (such as OFFSET, INDIRECT, INDEX, etc.).\n     * @param node\n     */\n    protected async _getRangeListByFunctionRefNode(referenceFunctionList: FunctionNode[], refOffsetX: number, refOffsetY: number) {\n        const rangeList: IUnitRange[] = [];\n\n        for (let i = 0, len = referenceFunctionList.length; i < len; i++) {\n            const node = referenceFunctionList[i];\n            const value: BaseReferenceObject = await this._executeNode(node, refOffsetX, refOffsetY);\n\n            const gridRange = value.toUnitRange();\n\n            // const token = serializeRangeToRefString({ ...gridRange, sheetName: this._currentConfigService.getSheetName(gridRange.unitId, gridRange.sheetId) });\n\n            rangeList.push(gridRange);\n\n            node.setValue(null);\n        }\n\n        return rangeList;\n    }\n\n    /**\n     * Build a formula dependency tree based on the dependency relationships.\n     * @param treeList\n     */\n    protected _getUpdateTreeListAndMakeDependency(treeList: IFormulaDependencyTree[]) {\n        const newTreeList: IFormulaDependencyTree[] = [];\n        const existTree = new Set<number>();\n        const forceCalculate = this._currentConfigService.isForceCalculate();\n\n        // const allTree: IFormulaDependencyTree[] = Array.from(this._dependencyTreeCache.values());\n\n        const dirtyRanges = this._currentConfigService.getDirtyRanges();\n        const treeIds = this._dependencyManagerService.searchDependency(dirtyRanges); // RTree Average case is O(logN + k)\n        const addressSearchResults = this._dependencyRTreeCacheForAddressFunction.bulkSearch(dirtyRanges) as Set<number>;\n        for (const addressSearchResult of addressSearchResults) {\n            treeIds.add(addressSearchResult);\n        }\n\n        const allTree: IFormulaDependencyTree[] = this._dependencyManagerService.buildDependencyTree(treeList);\n\n        for (const tree of allTree) {\n            // const tree = allTree[i];\n            const treeId = tree.treeId;\n\n            /**\n             * forceCalculate: Mandatory calculation, adding all formulas to dependencies\n             * tree.dependencyRange: Formula dependent modification range\n             * includeTree: modification range contains formula\n             */\n            if (\n                (\n                    forceCalculate ||\n                    tree.isDirty ||\n                    tree.dependencySheetName(this._currentConfigService.getDirtyNameMap()) || //O(n) n=tree.rangeList.length\n                    (\n                        treeIds.has(treeId)// O(1)\n                        && !tree.isExcludeRange(this._currentConfigService.getExcludedRange()) //worst O(n^2), best O(n)  n^2=tree.rangeList.length*excludedRange.length, excludedRange.length is usually small\n                    )\n                ) && !existTree.has(treeId) //O(1)\n            ) {\n                newTreeList.push(tree);\n                existTree.add(treeId);\n            }\n        }\n        return newTreeList;\n    }\n\n    private _includeTreeFeature(tree: FormulaDependencyTree) {\n        const unitId = tree.unitId;\n        const subUnitId = tree.subUnitId;\n        /**\n         * Perform active dirty detection for the feature.\n         */\n        const featureId = tree.featureId;\n        if (featureId != null) {\n            const featureMap = this._currentConfigService.getDirtyUnitFeatureMap();\n            const state = featureMap?.[unitId]?.[subUnitId]?.[featureId];\n            if (state != null) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _includeOtherFormula(tree: FormulaDependencyTree) {\n        const unitId = tree.unitId;\n        const subUnitId = tree.subUnitId;\n        /**\n         * Specify a specific other formula for flagging a functionality as dirty.\n         */\n        const formulaId = tree.formulaId;\n        if (formulaId != null) {\n            const otherFormulaMap = this._currentConfigService.getDirtyUnitOtherFormulaMap();\n            const state = otherFormulaMap?.[unitId]?.[subUnitId]?.[formulaId];\n            if (state != null) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _detectForcedRecalculationNode(tree: IFormulaDependencyTree, node: Nullable<BaseAstNode>) {\n        if (node == null) {\n            return false;\n        }\n\n        return this._detectForcedRecalculationNodeRecursion(node);\n    }\n\n    private _detectForcedRecalculationNodeRecursion(node: BaseAstNode) {\n        if (node.isForcedCalculateFunction()) {\n            return true;\n        }\n\n        const children = node.getChildren();\n        for (let i = 0, len = children.length; i < len; i++) {\n            const child = children[i];\n            if (this._detectForcedRecalculationNodeRecursion(child)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Determine whether all ranges of the current node exist within the dirty area.\n     * If they are within the dirty area, return true, indicating that this node needs to be calculated.\n     * @param tree\n     */\n    protected _includeTree(tree: IFormulaDependencyTree, node: BaseAstNode) {\n        const unitId = tree.unitId;\n        const subUnitId = tree.subUnitId;\n\n        /**\n         * RAND, RANDBETWEEN, NOW, TODAY are volatile functions that are marked dirty and recalculated every time a calculation occurs.\n         */\n        if (this._detectForcedRecalculationNode(tree, node) === true) {\n            return true;\n        }\n\n        if (this._includeTreeFeature(tree as FormulaDependencyTree) === true) {\n            return true;\n        }\n\n        if (this._includeOtherFormula(tree as FormulaDependencyTree) === true) {\n            return true;\n        }\n\n        if (includeDefinedName(tree, node, this._currentConfigService) === true) {\n            return true;\n        }\n\n        const excludedCell = this._currentConfigService.getExcludedRange()?.[unitId]?.[subUnitId];\n\n        /**\n         * The position of the primary cell in the array formula needs to be excluded when calculating the impact of the array formula on dependencies.\n         * This is because its impact was already considered during the first calculation.\n         */\n        const isExclude = excludedCell?.getValue(tree.row, tree.column) != null;\n\n        if (isExclude) {\n            return false;\n        }\n\n        /**\n         * When a worksheet is inserted or deleted,\n         * the formulas within it need to be calculated.\n         */\n        if (this._currentConfigService.getDirtyNameMap()[unitId]?.[subUnitId] != null) {\n            return true;\n        }\n\n        if (!this._updateRangeFlattenCache.has(unitId)) {\n            return false;\n        }\n\n        const sheetRangeMap = this._updateRangeFlattenCache.get(unitId)!;\n\n        if (!sheetRangeMap.has(subUnitId)) {\n            return false;\n        }\n\n        const ranges = sheetRangeMap.get(subUnitId)!;\n\n        for (const range of ranges) {\n            if (tree.inRangeData(range)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Generate the final formula calculation order array by traversing the dependency tree established via depth-first search.\n     * @param treeList\n     */\n    protected _calculateRunList(treeList: IFormulaDependencyTree[]) {\n        const stack = treeList;\n        const formulaRunList = [];\n        const cacheStack: IFormulaDependencyTree[] = [];\n        while (stack.length > 0) {\n            const tree = stack.pop();\n\n            if (tree === undefined || tree.isSkip()) {\n                continue;\n            }\n\n            if (tree.isAdded()) {\n                formulaRunList.push(tree);\n                // If cacheStack is empty, that is, all parent nodes of the node have been processed, call setSkip() to mark the node as skipped. The premise of this is that the node should have been added to the formulaRunList, that is, the calculation is completed.\n                // Make sure setSkip is called after the node is added to formulaRunList to avoid skipping processing early.\n                tree.setSkip();\n                continue;\n            }\n\n            // It will clear the array.\n            cacheStack.length = 0;\n\n            for (const parentTreeId of tree.parents) {\n                const parentTree = this._dependencyManagerService.getTreeById(parentTreeId);\n                if (!parentTree) {\n                    throw new Error('ParentDependencyTree object is null');\n                }\n                if (parentTree.isAdded() || tree.isSkip()) {\n                    continue;\n                }\n                cacheStack.push(parentTree);\n            }\n\n            const addressSearchResults = this._dependencyRTreeCacheForAddressFunction.bulkSearch(tree.toRTreeItem()) as Set<number>;\n            for (const parentTreeId of addressSearchResults) {\n                const parentTree = this._dependencyManagerService.getTreeById(parentTreeId);\n                if (!parentTree) {\n                    throw new Error('ParentDependencyTree object is null');\n                }\n                if (parentTree.isAdded() || tree.isSkip()) {\n                    continue;\n                }\n                cacheStack.push(parentTree);\n            }\n\n            if (cacheStack.length === 0) {\n                formulaRunList.push(tree);\n                tree.setSkip();\n            } else {\n                tree.setAdded();\n                stack.push(tree, ...cacheStack);\n            }\n        }\n\n        return formulaRunList;\n    }\n}\n"],"mappings":"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","names":["featureMap","_","node"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d87758ad3a1274fe68d0e98731fd8bde9ef475b1"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/controller/config.schema.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/controller/config.schema.ts","statementMap":{"0":{"start":{"line":1,"column":48},"end":{"line":1,"column":71}},"1":{"start":{"line":2,"column":45},"end":{"line":2,"column":46}},"2":{"start":{"line":3,"column":52},"end":{"line":3,"column":75}},"3":{"start":{"line":4,"column":28},"end":{"line":4,"column":68}},"4":{"start":{"line":5,"column":35},"end":{"line":5,"column":37}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/controller/config.schema.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Ctor } from '@univerjs/core';\nimport type { IFunctionNames } from '../basics/function';\nimport type { BaseFunction } from '../functions/base-function';\n\nexport const ENGINE_FORMULA_PLUGIN_CONFIG_KEY = 'engine-formula.config';\n\nexport const DEFAULT_CYCLE_REFERENCE_COUNT = 1;\n\nexport const ENGINE_FORMULA_CYCLE_REFERENCE_COUNT = 'CYCLE_REFERENCE_COUNT';\n\nexport const configSymbol = Symbol(ENGINE_FORMULA_PLUGIN_CONFIG_KEY);\n\nexport interface IUniverEngineFormulaConfig {\n    notExecuteFormula?: boolean;\n    function?: Array<[Ctor<BaseFunction>, IFunctionNames]>;\n\n    /**\n     * The formula calculation quantity interval for waiting for the main thread message in the worker. Each time the formula calculates the `intervalCount` quantity, it will receive a main thread message to support stopping the calculation. Default is 500\n     */\n    intervalCount?: number;\n\n}\n\nexport const defaultPluginConfig: IUniverEngineFormulaConfig = {};\n"],"mappings":"AAoBO,aAAM,mCAAmC;AAEzC,aAAM,gCAAgC;AAEtC,aAAM,uCAAuC;AAE7C,aAAM,eAAe,OAAO,gCAAgC;AAa5D,aAAM,sBAAkD,CAAC;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"12ab62f10527bc58f2915a573c2f7505b9f535b9"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/calculate-formula.service.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/calculate-formula.service.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":34,"column":38},"end":{"line":34,"column":41}},"15":{"start":{"line":35,"column":37},"end":{"line":35,"column":58}},"16":{"start":{"line":36,"column":48},"end":{"line":36,"column":51}},"17":{"start":{"line":37,"column":40},"end":{"line":37,"column":100}},"18":{"start":{"line":38,"column":37},"end":{"line":254,"column":1}},"19":{"start":{"line":40,"column":4},"end":{"line":40,"column":12}},"20":{"start":{"line":41,"column":4},"end":{"line":41,"column":41}},"21":{"start":{"line":42,"column":4},"end":{"line":42,"column":25}},"22":{"start":{"line":43,"column":4},"end":{"line":43,"column":55}},"23":{"start":{"line":44,"column":4},"end":{"line":44,"column":43}},"24":{"start":{"line":45,"column":4},"end":{"line":45,"column":67}},"25":{"start":{"line":46,"column":4},"end":{"line":46,"column":37}},"26":{"start":{"line":47,"column":4},"end":{"line":47,"column":43}},"27":{"start":{"line":49,"column":34},"end":{"line":49,"column":47}},"28":{"start":{"line":50,"column":33},"end":{"line":50,"column":82}},"29":{"start":{"line":51,"column":32},"end":{"line":51,"column":45}},"30":{"start":{"line":52,"column":31},"end":{"line":52,"column":78}},"31":{"start":{"line":54,"column":4},"end":{"line":54,"column":20}},"32":{"start":{"line":55,"column":4},"end":{"line":55,"column":50}},"33":{"start":{"line":56,"column":4},"end":{"line":56,"column":48}},"34":{"start":{"line":57,"column":4},"end":{"line":57,"column":39}},"35":{"start":{"line":58,"column":4},"end":{"line":58,"column":38}},"36":{"start":{"line":59,"column":4},"end":{"line":59,"column":34}},"37":{"start":{"line":60,"column":4},"end":{"line":60,"column":35}},"38":{"start":{"line":66,"column":4},"end":{"line":66,"column":41}},"39":{"start":{"line":76,"column":4},"end":{"line":76,"column":75}},"40":{"start":{"line":79,"column":4},"end":{"line":79,"column":73}},"41":{"start":{"line":82,"column":4},"end":{"line":82,"column":79}},"42":{"start":{"line":83,"column":4},"end":{"line":83,"column":84}},"43":{"start":{"line":84,"column":4},"end":{"line":84,"column":58}},"44":{"start":{"line":85,"column":4},"end":{"line":85,"column":33}},"45":{"start":{"line":86,"column":32},"end":{"line":86,"column":98}},"46":{"start":{"line":87,"column":4},"end":{"line":95,"column":5}},"47":{"start":{"line":87,"column":17},"end":{"line":87,"column":18}},"48":{"start":{"line":88,"column":6},"end":{"line":88,"column":51}},"49":{"start":{"line":89,"column":6},"end":{"line":89,"column":28}},"50":{"start":{"line":90,"column":6},"end":{"line":90,"column":41}},"51":{"start":{"line":91,"column":32},"end":{"line":91,"column":72}},"52":{"start":{"line":92,"column":6},"end":{"line":94,"column":7}},"53":{"start":{"line":93,"column":8},"end":{"line":93,"column":14}},"54":{"start":{"line":96,"column":4},"end":{"line":96,"column":95}},"55":{"start":{"line":97,"column":4},"end":{"line":97,"column":84}},"56":{"start":{"line":98,"column":4},"end":{"line":98,"column":84}},"57":{"start":{"line":99,"column":4},"end":{"line":99,"column":38}},"58":{"start":{"line":100,"column":4},"end":{"line":100,"column":33}},"59":{"start":{"line":103,"column":25},"end":{"line":103,"column":44}},"60":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"61":{"start":{"line":105,"column":6},"end":{"line":105,"column":13}},"62":{"start":{"line":107,"column":55},"end":{"line":107,"column":67}},"63":{"start":{"line":108,"column":42},"end":{"line":111,"column":5}},"64":{"start":{"line":112,"column":4},"end":{"line":114,"column":5}},"65":{"start":{"line":113,"column":6},"end":{"line":113,"column":18}},"66":{"start":{"line":115,"column":4},"end":{"line":115,"column":89}},"67":{"start":{"line":116,"column":4},"end":{"line":116,"column":28}},"68":{"start":{"line":117,"column":4},"end":{"line":117,"column":16}},"69":{"start":{"line":120,"column":24},"end":{"line":120,"column":26}},"70":{"start":{"line":121,"column":25},"end":{"line":121,"column":27}},"71":{"start":{"line":122,"column":4},"end":{"line":142,"column":7}},"72":{"start":{"line":123,"column":37},"end":{"line":123,"column":62}},"73":{"start":{"line":124,"column":6},"end":{"line":126,"column":7}},"74":{"start":{"line":125,"column":8},"end":{"line":125,"column":20}},"75":{"start":{"line":127,"column":6},"end":{"line":141,"column":9}},"76":{"start":{"line":128,"column":26},"end":{"line":128,"column":75}},"77":{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},"78":{"start":{"line":130,"column":10},"end":{"line":130,"column":22}},"79":{"start":{"line":132,"column":28},"end":{"line":132,"column":46}},"80":{"start":{"line":133,"column":8},"end":{"line":136,"column":11}},"81":{"start":{"line":134,"column":10},"end":{"line":134,"column":50}},"82":{"start":{"line":135,"column":10},"end":{"line":135,"column":55}},"83":{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},"84":{"start":{"line":138,"column":10},"end":{"line":138,"column":36}},"85":{"start":{"line":140,"column":8},"end":{"line":140,"column":52}},"86":{"start":{"line":143,"column":4},"end":{"line":160,"column":7}},"87":{"start":{"line":144,"column":25},"end":{"line":144,"column":55}},"88":{"start":{"line":145,"column":6},"end":{"line":159,"column":9}},"89":{"start":{"line":146,"column":39},"end":{"line":146,"column":57}},"90":{"start":{"line":147,"column":8},"end":{"line":149,"column":9}},"91":{"start":{"line":148,"column":10},"end":{"line":148,"column":22}},"92":{"start":{"line":150,"column":8},"end":{"line":158,"column":11}},"93":{"start":{"line":151,"column":25},"end":{"line":151,"column":56}},"94":{"start":{"line":152,"column":10},"end":{"line":154,"column":11}},"95":{"start":{"line":153,"column":12},"end":{"line":153,"column":24}},"96":{"start":{"line":155,"column":10},"end":{"line":157,"column":11}},"97":{"start":{"line":156,"column":12},"end":{"line":156,"column":57}},"98":{"start":{"line":161,"column":4},"end":{"line":161,"column":41}},"99":{"start":{"line":165,"column":4},"end":{"line":169,"column":5}},"100":{"start":{"line":166,"column":6},"end":{"line":166,"column":106}},"101":{"start":{"line":168,"column":6},"end":{"line":168,"column":92}},"102":{"start":{"line":170,"column":4},"end":{"line":170,"column":84}},"103":{"start":{"line":171,"column":21},"end":{"line":171,"column":82}},"104":{"start":{"line":172,"column":24},"end":{"line":172,"column":41}},"105":{"start":{"line":173,"column":4},"end":{"line":179,"column":5}},"106":{"start":{"line":174,"column":6},"end":{"line":174,"column":107}},"107":{"start":{"line":175,"column":6},"end":{"line":175,"column":77}},"108":{"start":{"line":177,"column":6},"end":{"line":177,"column":93}},"109":{"start":{"line":178,"column":6},"end":{"line":178,"column":72}},"110":{"start":{"line":180,"column":4},"end":{"line":180,"column":84}},"111":{"start":{"line":181,"column":23},"end":{"line":181,"column":25}},"112":{"start":{"line":182,"column":19},"end":{"line":182,"column":82}},"113":{"start":{"line":183,"column":26},"end":{"line":183,"column":73}},"114":{"start":{"line":184,"column":22},"end":{"line":184,"column":37}},"115":{"start":{"line":185,"column":4},"end":{"line":236,"column":5}},"116":{"start":{"line":185,"column":17},"end":{"line":185,"column":18}},"117":{"start":{"line":186,"column":19},"end":{"line":186,"column":30}},"118":{"start":{"line":187,"column":23},"end":{"line":187,"column":36}},"119":{"start":{"line":188,"column":27},"end":{"line":188,"column":44}},"120":{"start":{"line":189,"column":6},"end":{"line":210,"column":7}},"121":{"start":{"line":190,"column":8},"end":{"line":193,"column":11}},"122":{"start":{"line":191,"column":32},"end":{"line":191,"column":66}},"123":{"start":{"line":192,"column":10},"end":{"line":192,"column":43}},"124":{"start":{"line":194,"column":8},"end":{"line":202,"column":9}},"125":{"start":{"line":195,"column":10},"end":{"line":197,"column":12}},"126":{"start":{"line":198,"column":10},"end":{"line":198,"column":69}},"127":{"start":{"line":200,"column":10},"end":{"line":200,"column":101}},"128":{"start":{"line":201,"column":10},"end":{"line":201,"column":64}},"129":{"start":{"line":203,"column":8},"end":{"line":203,"column":88}},"130":{"start":{"line":204,"column":8},"end":{"line":209,"column":9}},"131":{"start":{"line":205,"column":10},"end":{"line":205,"column":84}},"132":{"start":{"line":206,"column":10},"end":{"line":206,"column":63}},"133":{"start":{"line":207,"column":10},"end":{"line":207,"column":90}},"134":{"start":{"line":208,"column":10},"end":{"line":208,"column":17}},"135":{"start":{"line":211,"column":6},"end":{"line":218,"column":8}},"136":{"start":{"line":220,"column":6},"end":{"line":235,"column":7}},"137":{"start":{"line":221,"column":49},"end":{"line":221,"column":146}},"138":{"start":{"line":222,"column":8},"end":{"line":222,"column":88}},"139":{"start":{"line":223,"column":8},"end":{"line":223,"column":81}},"140":{"start":{"line":224,"column":13},"end":{"line":235,"column":7}},"141":{"start":{"line":225,"column":8},"end":{"line":229,"column":9}},"142":{"start":{"line":226,"column":10},"end":{"line":226,"column":59}},"143":{"start":{"line":228,"column":10},"end":{"line":228,"column":48}},"144":{"start":{"line":230,"column":8},"end":{"line":234,"column":9}},"145":{"start":{"line":231,"column":10},"end":{"line":231,"column":108}},"146":{"start":{"line":233,"column":10},"end":{"line":233,"column":53}},"147":{"start":{"line":237,"column":4},"end":{"line":237,"column":47}},"148":{"start":{"line":237,"column":37},"end":{"line":237,"column":45}},"149":{"start":{"line":238,"column":4},"end":{"line":238,"column":22}},"150":{"start":{"line":239,"column":4},"end":{"line":243,"column":5}},"151":{"start":{"line":240,"column":6},"end":{"line":240,"column":58}},"152":{"start":{"line":241,"column":11},"end":{"line":243,"column":5}},"153":{"start":{"line":242,"column":6},"end":{"line":242,"column":57}},"154":{"start":{"line":244,"column":4},"end":{"line":244,"column":52}},"155":{"start":{"line":247,"column":22},"end":{"line":247,"column":77}},"156":{"start":{"line":248,"column":4},"end":{"line":250,"column":5}},"157":{"start":{"line":249,"column":6},"end":{"line":249,"column":41}},"158":{"start":{"line":251,"column":20},"end":{"line":251,"column":57}},"159":{"start":{"line":252,"column":4},"end":{"line":252,"column":25}},"160":{"start":{"line":255,"column":0},"end":{"line":263,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":39,"column":2},"end":{"line":39,"column":3}},"loc":{"start":{"line":39,"column":138},"end":{"line":48,"column":3}},"line":39},"4":{"name":"(anonymous_4)","decl":{"start":{"line":53,"column":2},"end":{"line":53,"column":3}},"loc":{"start":{"line":53,"column":12},"end":{"line":61,"column":3}},"line":53},"5":{"name":"(anonymous_5)","decl":{"start":{"line":65,"column":2},"end":{"line":65,"column":3}},"loc":{"start":{"line":65,"column":25},"end":{"line":67,"column":3}},"line":65},"6":{"name":"(anonymous_6)","decl":{"start":{"line":75,"column":2},"end":{"line":75,"column":3}},"loc":{"start":{"line":75,"column":52},"end":{"line":77,"column":3}},"line":75},"7":{"name":"(anonymous_7)","decl":{"start":{"line":78,"column":2},"end":{"line":78,"column":3}},"loc":{"start":{"line":78,"column":50},"end":{"line":80,"column":3}},"line":78},"8":{"name":"(anonymous_8)","decl":{"start":{"line":81,"column":2},"end":{"line":81,"column":3}},"loc":{"start":{"line":81,"column":38},"end":{"line":101,"column":3}},"line":81},"9":{"name":"(anonymous_9)","decl":{"start":{"line":102,"column":2},"end":{"line":102,"column":3}},"loc":{"start":{"line":102,"column":19},"end":{"line":118,"column":3}},"line":102},"10":{"name":"(anonymous_10)","decl":{"start":{"line":119,"column":2},"end":{"line":119,"column":3}},"loc":{"start":{"line":119,"column":85},"end":{"line":162,"column":3}},"line":119},"11":{"name":"(anonymous_11)","decl":{"start":{"line":122,"column":43},"end":{"line":122,"column":44}},"loc":{"start":{"line":122,"column":55},"end":{"line":142,"column":5}},"line":122},"12":{"name":"(anonymous_12)","decl":{"start":{"line":127,"column":50},"end":{"line":127,"column":51}},"loc":{"start":{"line":127,"column":63},"end":{"line":141,"column":7}},"line":127},"13":{"name":"(anonymous_13)","decl":{"start":{"line":133,"column":27},"end":{"line":133,"column":28}},"loc":{"start":{"line":133,"column":51},"end":{"line":136,"column":9}},"line":133},"14":{"name":"(anonymous_14)","decl":{"start":{"line":143,"column":45},"end":{"line":143,"column":46}},"loc":{"start":{"line":143,"column":60},"end":{"line":160,"column":5}},"line":143},"15":{"name":"(anonymous_15)","decl":{"start":{"line":145,"column":38},"end":{"line":145,"column":39}},"loc":{"start":{"line":145,"column":50},"end":{"line":159,"column":7}},"line":145},"16":{"name":"(anonymous_16)","decl":{"start":{"line":150,"column":52},"end":{"line":150,"column":53}},"loc":{"start":{"line":150,"column":65},"end":{"line":158,"column":9}},"line":150},"17":{"name":"(anonymous_17)","decl":{"start":{"line":164,"column":2},"end":{"line":164,"column":3}},"loc":{"start":{"line":164,"column":44},"end":{"line":245,"column":3}},"line":164},"18":{"name":"(anonymous_18)","decl":{"start":{"line":190,"column":26},"end":{"line":190,"column":27}},"loc":{"start":{"line":190,"column":39},"end":{"line":193,"column":9}},"line":190},"19":{"name":"(anonymous_19)","decl":{"start":{"line":237,"column":25},"end":{"line":237,"column":26}},"loc":{"start":{"line":237,"column":37},"end":{"line":237,"column":45}},"line":237},"20":{"name":"(anonymous_20)","decl":{"start":{"line":246,"column":2},"end":{"line":246,"column":3}},"loc":{"start":{"line":246,"column":51},"end":{"line":253,"column":3}},"line":246}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":86,"column":32},"end":{"line":86,"column":98}},"type":"binary-expr","locations":[{"start":{"line":86,"column":32},"end":{"line":86,"column":65}},{"start":{"line":86,"column":69},"end":{"line":86,"column":98}}],"line":86},"8":{"loc":{"start":{"line":92,"column":6},"end":{"line":94,"column":7}},"type":"if","locations":[{"start":{"line":92,"column":6},"end":{"line":94,"column":7}},{"start":{},"end":{}}],"line":92},"9":{"loc":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},{"start":{},"end":{}}],"line":104},"10":{"loc":{"start":{"line":112,"column":4},"end":{"line":114,"column":5}},"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":114,"column":5}},{"start":{},"end":{}}],"line":112},"11":{"loc":{"start":{"line":112,"column":8},"end":{"line":112,"column":55}},"type":"binary-expr","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":27}},{"start":{"line":112,"column":31},"end":{"line":112,"column":55}}],"line":112},"12":{"loc":{"start":{"line":124,"column":6},"end":{"line":126,"column":7}},"type":"if","locations":[{"start":{"line":124,"column":6},"end":{"line":126,"column":7}},{"start":{},"end":{}}],"line":124},"13":{"loc":{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},"type":"if","locations":[{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},{"start":{},"end":{}}],"line":129},"14":{"loc":{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":139,"column":9}},{"start":{},"end":{}}],"line":137},"15":{"loc":{"start":{"line":147,"column":8},"end":{"line":149,"column":9}},"type":"if","locations":[{"start":{"line":147,"column":8},"end":{"line":149,"column":9}},{"start":{},"end":{}}],"line":147},"16":{"loc":{"start":{"line":152,"column":10},"end":{"line":154,"column":11}},"type":"if","locations":[{"start":{"line":152,"column":10},"end":{"line":154,"column":11}},{"start":{},"end":{}}],"line":152},"17":{"loc":{"start":{"line":164,"column":15},"end":{"line":164,"column":42}},"type":"default-arg","locations":[{"start":{"line":164,"column":37},"end":{"line":164,"column":42}}],"line":164},"18":{"loc":{"start":{"line":165,"column":4},"end":{"line":169,"column":5}},"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":169,"column":5}},{"start":{"line":167,"column":11},"end":{"line":169,"column":5}}],"line":165},"19":{"loc":{"start":{"line":173,"column":4},"end":{"line":179,"column":5}},"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":179,"column":5}},{"start":{"line":176,"column":11},"end":{"line":179,"column":5}}],"line":173},"20":{"loc":{"start":{"line":183,"column":26},"end":{"line":183,"column":73}},"type":"binary-expr","locations":[{"start":{"line":183,"column":26},"end":{"line":183,"column":47}},{"start":{"line":183,"column":51},"end":{"line":183,"column":73}}],"line":183},"21":{"loc":{"start":{"line":189,"column":6},"end":{"line":210,"column":7}},"type":"if","locations":[{"start":{"line":189,"column":6},"end":{"line":210,"column":7}},{"start":{},"end":{}}],"line":189},"22":{"loc":{"start":{"line":194,"column":8},"end":{"line":202,"column":9}},"type":"if","locations":[{"start":{"line":194,"column":8},"end":{"line":202,"column":9}},{"start":{"line":199,"column":15},"end":{"line":202,"column":9}}],"line":194},"23":{"loc":{"start":{"line":204,"column":8},"end":{"line":209,"column":9}},"type":"if","locations":[{"start":{"line":204,"column":8},"end":{"line":209,"column":9}},{"start":{},"end":{}}],"line":204},"24":{"loc":{"start":{"line":204,"column":12},"end":{"line":204,"column":94}},"type":"binary-expr","locations":[{"start":{"line":204,"column":12},"end":{"line":204,"column":50}},{"start":{"line":204,"column":54},"end":{"line":204,"column":70}},{"start":{"line":204,"column":74},"end":{"line":204,"column":94}}],"line":204},"25":{"loc":{"start":{"line":220,"column":6},"end":{"line":235,"column":7}},"type":"if","locations":[{"start":{"line":220,"column":6},"end":{"line":235,"column":7}},{"start":{"line":224,"column":13},"end":{"line":235,"column":7}}],"line":220},"26":{"loc":{"start":{"line":220,"column":10},"end":{"line":220,"column":56}},"type":"binary-expr","locations":[{"start":{"line":220,"column":10},"end":{"line":220,"column":30}},{"start":{"line":220,"column":34},"end":{"line":220,"column":56}}],"line":220},"27":{"loc":{"start":{"line":224,"column":13},"end":{"line":235,"column":7}},"type":"if","locations":[{"start":{"line":224,"column":13},"end":{"line":235,"column":7}},{"start":{},"end":{}}],"line":224},"28":{"loc":{"start":{"line":225,"column":8},"end":{"line":229,"column":9}},"type":"if","locations":[{"start":{"line":225,"column":8},"end":{"line":229,"column":9}},{"start":{"line":227,"column":15},"end":{"line":229,"column":9}}],"line":225},"29":{"loc":{"start":{"line":230,"column":8},"end":{"line":234,"column":9}},"type":"if","locations":[{"start":{"line":230,"column":8},"end":{"line":234,"column":9}},{"start":{"line":232,"column":15},"end":{"line":234,"column":9}}],"line":230},"30":{"loc":{"start":{"line":239,"column":4},"end":{"line":243,"column":5}},"type":"if","locations":[{"start":{"line":239,"column":4},"end":{"line":243,"column":5}},{"start":{"line":241,"column":11},"end":{"line":243,"column":5}}],"line":239},"31":{"loc":{"start":{"line":241,"column":11},"end":{"line":243,"column":5}},"type":"if","locations":[{"start":{"line":241,"column":11},"end":{"line":243,"column":5}},{"start":{},"end":{}}],"line":241},"32":{"loc":{"start":{"line":246,"column":27},"end":{"line":246,"column":49}},"type":"default-arg","locations":[{"start":{"line":246,"column":45},"end":{"line":246,"column":49}}],"line":246},"33":{"loc":{"start":{"line":248,"column":4},"end":{"line":250,"column":5}},"type":"if","locations":[{"start":{"line":248,"column":4},"end":{"line":250,"column":5}},{"start":{},"end":{}}],"line":248}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":7,"7":7,"8":1,"9":0,"10":1,"11":1,"12":7,"13":7,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":1},"f":{"0":1,"1":7,"2":7,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"0":[0,1],"1":[0,1],"2":[7,0],"3":[7,7],"4":[0,7],"5":[0,1],"6":[1,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0],"33":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/calculate-formula.service.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IUnitRange } from '@univerjs/core';\nimport type { Observable } from 'rxjs';\nimport type {\n    IArrayFormulaRangeType,\n    IFeatureDirtyRangeType,\n    IFormulaDatasetConfig,\n    IRuntimeUnitDataType,\n    IUnitExcludedCell,\n} from '../basics/common';\n\nimport type { IUniverEngineFormulaConfig } from '../controller/config.schema';\nimport type { LexerNode } from '../engine/analysis/lexer-node';\nimport type { FunctionVariantType } from '../engine/reference-object/base-reference-object';\nimport type { IAllRuntimeData, IExecutionInProgressParams } from './runtime.service';\nimport {\n    createIdentifier,\n    Disposable,\n    IConfigService,\n    Inject,\n    ObjectMatrix,\n    requestImmediateMacroTask,\n} from '@univerjs/core';\nimport { Subject } from 'rxjs';\nimport { ErrorType } from '../basics/error-type';\nimport { CELL_INVERTED_INDEX_CACHE } from '../basics/inverted-index-cache';\nimport { DEFAULT_CYCLE_REFERENCE_COUNT, ENGINE_FORMULA_PLUGIN_CONFIG_KEY } from '../controller/config.schema';\nimport { Lexer } from '../engine/analysis/lexer';\nimport { AstTreeBuilder } from '../engine/analysis/parser';\nimport { ErrorNode } from '../engine/ast-node/base-ast-node';\nimport { IFormulaDependencyGenerator } from '../engine/dependency/formula-dependency';\nimport { Interpreter } from '../engine/interpreter/interpreter';\nimport { FORMULA_REF_TO_ARRAY_CACHE } from '../engine/reference-object/base-reference-object';\nimport { ErrorValueObjectCache } from '../engine/value-object/base-value-object';\nimport { StringValueObjectCache } from '../engine/value-object/primitive-object';\nimport { IFormulaCurrentConfigService } from './current-data.service';\nimport { FormulaExecuteStageType, IFormulaRuntimeService } from './runtime.service';\n\nexport const DEFAULT_INTERVAL_COUNT = 500;\n\nexport const CYCLE_REFERENCE_COUNT = 'cycleReferenceCount';\n\nexport const EVERY_N_FUNCTION_EXECUTION_PAUSE = 100;\n\nexport interface ICalculateFormulaService {\n    executionInProgressListener$: Observable<IExecutionInProgressParams>;\n    executionCompleteListener$: Observable<IAllRuntimeData>;\n\n    setRuntimeFeatureCellData(featureId: string, featureData: IRuntimeUnitDataType): void;\n\n    setRuntimeFeatureRange(featureId: string, featureRange: IFeatureDirtyRangeType): void;\n\n    execute(formulaDatasetConfig: IFormulaDatasetConfig): Promise<void>;\n\n    stopFormulaExecution(): void;\n\n    calculate(formulaString: string, transformSuffix?: boolean): void;\n}\n\nexport const ICalculateFormulaService = createIdentifier<ICalculateFormulaService>('engine-formula.calculate-formula.service');\n\nexport class CalculateFormulaService extends Disposable {\n    protected readonly _executionInProgressListener$ = new Subject<IExecutionInProgressParams>();\n\n    readonly executionInProgressListener$ = this._executionInProgressListener$.asObservable();\n\n    protected readonly _executionCompleteListener$ = new Subject<IAllRuntimeData>();\n\n    readonly executionCompleteListener$ = this._executionCompleteListener$.asObservable();\n\n    constructor(\n        @IConfigService protected readonly _configService: IConfigService,\n        @Inject(Lexer) protected readonly _lexer: Lexer,\n        @IFormulaCurrentConfigService protected readonly _currentConfigService: IFormulaCurrentConfigService,\n        @IFormulaRuntimeService protected readonly _runtimeService: IFormulaRuntimeService,\n        @IFormulaDependencyGenerator protected readonly _formulaDependencyGenerator: IFormulaDependencyGenerator,\n        @Inject(Interpreter) protected readonly _interpreter: Interpreter,\n        @Inject(AstTreeBuilder) protected readonly _astTreeBuilder: AstTreeBuilder\n    ) {\n        super();\n    }\n\n    override dispose() {\n        super.dispose();\n\n        this._executionInProgressListener$.complete();\n        this._executionCompleteListener$.complete();\n        FORMULA_REF_TO_ARRAY_CACHE.clear();\n        CELL_INVERTED_INDEX_CACHE.clear();\n        ErrorValueObjectCache.clear();\n        StringValueObjectCache.clear();\n    }\n\n    /**\n     * Stop the execution of the formula.\n     */\n    stopFormulaExecution() {\n        this._runtimeService.stopExecution();\n    }\n\n    /**\n     * When the feature is loading,\n     * the pre-calculated content needs to be input to the formula engine in advance,\n     * so that the formula can read the correct values.\n     * @param featureId\n     * @param featureData\n     */\n    setRuntimeFeatureCellData(featureId: string, featureData: IRuntimeUnitDataType) {\n        this._runtimeService.setRuntimeFeatureCellData(featureId, featureData);\n    }\n\n    setRuntimeFeatureRange(featureId: string, featureRange: IFeatureDirtyRangeType) {\n        this._runtimeService.setRuntimeFeatureRange(featureId, featureRange);\n    }\n\n    async execute(formulaDatasetConfig: IFormulaDatasetConfig) {\n        this._runtimeService.setFormulaExecuteStage(FormulaExecuteStageType.START);\n        this._executionInProgressListener$.next(this._runtimeService.getRuntimeState());\n\n        this._currentConfigService.load(formulaDatasetConfig);\n\n        this._runtimeService.reset();\n\n        const cycleReferenceCount = (formulaDatasetConfig.maxIteration || DEFAULT_CYCLE_REFERENCE_COUNT) as number;\n\n        for (let i = 0; i < cycleReferenceCount; i++) {\n            this._runtimeService.setFormulaCycleIndex(i);\n            await this._execute();\n\n            FORMULA_REF_TO_ARRAY_CACHE.clear();\n\n            const isCycleDependency = this._runtimeService.isCycleDependency();\n            if (!isCycleDependency) {\n                break;\n            }\n        }\n\n        this._runtimeService.setFormulaExecuteStage(FormulaExecuteStageType.CALCULATION_COMPLETED);\n\n        this._executionInProgressListener$.next(this._runtimeService.getRuntimeState());\n\n        this._executionCompleteListener$.next(this._runtimeService.getAllRuntimeData());\n\n        CELL_INVERTED_INDEX_CACHE.clear();\n\n        this._runtimeService.reset();\n    }\n\n    private async _execute() {\n        const executeState = await this._apply();\n\n        if (executeState == null) {\n            return;\n        }\n\n        const { arrayFormulaRange, runtimeFeatureRange } = executeState;\n\n        const { dirtyRanges, excludedCell } = this._getArrayFormulaDirtyRangeAndExcludedRange(\n            arrayFormulaRange,\n            runtimeFeatureRange\n        );\n\n        if (dirtyRanges == null || dirtyRanges.length === 0) {\n            return true;\n        }\n\n        this._currentConfigService.loadDirtyRangesAndExcludedCell(dirtyRanges, excludedCell);\n\n        await this._apply(true);\n\n        return true;\n    }\n\n    private _getArrayFormulaDirtyRangeAndExcludedRange(\n        arrayFormulaRange: IArrayFormulaRangeType,\n        runtimeFeatureRange: { [featureId: string]: IFeatureDirtyRangeType }\n    ) {\n        const dirtyRanges: IUnitRange[] = [];\n        const excludedCell: IUnitExcludedCell = {};\n        Object.keys(arrayFormulaRange).forEach((unitId) => {\n            const sheetArrayFormulaRange = arrayFormulaRange[unitId];\n\n            if (sheetArrayFormulaRange == null) {\n                return true;\n            }\n\n            Object.keys(sheetArrayFormulaRange).forEach((sheetId) => {\n                const cellValue = new ObjectMatrix(sheetArrayFormulaRange[sheetId]);\n\n                if (cellValue == null) {\n                    return true;\n                }\n\n                const newCellData = new ObjectMatrix<boolean>();\n\n                cellValue.forValue((row, column, range) => {\n                    newCellData.setValue(row, column, true);\n\n                    dirtyRanges.push({ unitId, sheetId, range });\n                });\n\n                if (excludedCell[unitId] == null) {\n                    excludedCell[unitId] = {};\n                }\n\n                excludedCell[unitId]![sheetId] = newCellData;\n            });\n        });\n\n        Object.keys(runtimeFeatureRange).forEach((featureId) => {\n            const arrayRange = runtimeFeatureRange[featureId];\n            Object.keys(arrayRange).forEach((unitId) => {\n                const sheetArrayFormulaRange = arrayRange[unitId];\n\n                if (sheetArrayFormulaRange == null) {\n                    return true;\n                }\n\n                Object.keys(sheetArrayFormulaRange).forEach((sheetId) => {\n                    const ranges = sheetArrayFormulaRange[sheetId];\n\n                    if (ranges == null) {\n                        return true;\n                    }\n\n                    for (const range of ranges) {\n                        dirtyRanges.push({ unitId, sheetId, range });\n                    }\n                });\n            });\n        });\n\n        return { dirtyRanges, excludedCell };\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    protected async _apply(isArrayFormulaState = false) {\n        if (isArrayFormulaState) {\n            this._runtimeService.setFormulaExecuteStage(FormulaExecuteStageType.START_DEPENDENCY_ARRAY_FORMULA);\n        } else {\n            this._runtimeService.setFormulaExecuteStage(FormulaExecuteStageType.START_DEPENDENCY);\n        }\n\n        this._executionInProgressListener$.next(this._runtimeService.getRuntimeState());\n\n        const treeList = (await this._formulaDependencyGenerator.generate()).reverse();\n\n        const interpreter = this._interpreter;\n\n        if (isArrayFormulaState) {\n            this._runtimeService.setFormulaExecuteStage(FormulaExecuteStageType.START_CALCULATION_ARRAY_FORMULA);\n\n            this._runtimeService.setTotalArrayFormulasToCalculate(treeList.length);\n        } else {\n            this._runtimeService.setFormulaExecuteStage(FormulaExecuteStageType.START_CALCULATION);\n\n            this._runtimeService.setTotalFormulasToCalculate(treeList.length);\n        }\n\n        this._executionInProgressListener$.next(this._runtimeService.getRuntimeState());\n\n        let pendingTasks: (() => void)[] = [];\n\n        const config = this._configService.getConfig(ENGINE_FORMULA_PLUGIN_CONFIG_KEY) as IUniverEngineFormulaConfig;\n        const intervalCount = config?.intervalCount || DEFAULT_INTERVAL_COUNT;\n\n        const treeCount = treeList.length;\n        for (let i = 0; i < treeCount; i++) {\n            const tree = treeList[i];\n            const nodeData = tree.nodeData;\n            const getDirtyData = tree.getDirtyData;\n\n            // Execute the await every 100 iterations\n            if (i % intervalCount === 0) {\n            /**\n             * For every functions, execute a setTimeout to wait for external command input.\n             */\n                await new Promise((resolve) => {\n                    const calCancelTask = requestImmediateMacroTask(resolve);\n                    pendingTasks.push(calCancelTask);\n                });\n\n                if (isArrayFormulaState) {\n                    this._runtimeService.setFormulaExecuteStage(\n                        FormulaExecuteStageType.CURRENTLY_CALCULATING_ARRAY_FORMULA\n                    );\n\n                    this._runtimeService.setCompletedArrayFormulasCount(i + 1);\n                } else {\n                    this._runtimeService.setFormulaExecuteStage(FormulaExecuteStageType.CURRENTLY_CALCULATING);\n\n                    this._runtimeService.setCompletedFormulasCount(i + 1);\n                }\n\n                this._executionInProgressListener$.next(this._runtimeService.getRuntimeState());\n\n                if (this._runtimeService.isStopExecution() || (nodeData == null && getDirtyData == null)) {\n                    this._runtimeService.setFormulaExecuteStage(FormulaExecuteStageType.IDLE);\n                    this._runtimeService.markedAsStopFunctionsExecuted();\n                    this._executionCompleteListener$.next(this._runtimeService.getAllRuntimeData());\n                    return;\n                }\n            }\n\n            this._runtimeService.setCurrent(\n                tree.row,\n                tree.column,\n                tree.rowCount,\n                tree.columnCount,\n                tree.subUnitId,\n                tree.unitId\n            );\n\n            let value: FunctionVariantType;\n\n            if (getDirtyData != null && tree.featureId != null) {\n                /**\n                 * Execute the dependencies registered by the feature,\n                 * and return the dirty area marked by the feature,\n                 * so as to allow the formulas depending on the dirty area to continue the calculation.\n                 */\n                const { runtimeCellData, dirtyRanges } = getDirtyData(this._currentConfigService.getDirtyData(), this._runtimeService.getAllRuntimeData());\n\n                this._runtimeService.setRuntimeFeatureCellData(tree.featureId, runtimeCellData);\n\n                this._runtimeService.setRuntimeFeatureRange(tree.featureId, dirtyRanges);\n            } else if (nodeData != null) {\n                if (interpreter.checkAsyncNode(nodeData.node)) {\n                    value = await interpreter.executeAsync(nodeData);\n                } else {\n                    value = interpreter.execute(nodeData);\n                }\n\n                if (tree.formulaId != null) {\n                    this._runtimeService.setRuntimeOtherData(tree.formulaId, tree.refOffsetX, tree.refOffsetY, value);\n                } else {\n                    this._runtimeService.setRuntimeData(value);\n                }\n            }\n        }\n\n        // clear all pending tasks\n        pendingTasks.forEach((cancel) => cancel());\n        pendingTasks = [];\n\n        if (treeCount > 0) {\n            this._runtimeService.markedAsSuccessfullyExecuted();\n        } else if (!isArrayFormulaState) {\n            this._runtimeService.markedAsNoFunctionsExecuted();\n        }\n\n        // treeList.length = 0;\n\n        return this._runtimeService.getAllRuntimeData();\n    }\n\n    calculate(formulaString: string, transformSuffix: boolean = true) {\n        // TODO how to observe @alex\n        // this.getObserver('onBeforeFormulaCalculateObservable')?.notifyObservers(formulaString);\n        const lexerNode = this._lexer.treeBuilder(formulaString, transformSuffix);\n\n        if (Object.values(ErrorType).includes(lexerNode as ErrorType)) {\n            return ErrorNode.create(lexerNode as ErrorType);\n        }\n\n        // this.lexerTreeBuilder.suffixExpressionHandler(lexerNode); // suffix Express, 1+(3*4=4)*5+1 convert to 134*4=5*1++\n\n        // console.log('sequence', this.lexerTreeBuilder.sequenceNodesBuilder(formulaString));\n\n        // this.getObserver('onAfterFormulaLexerObservable')?.notifyObservers(lexerNode);\n\n        // const astTreeBuilder = new AstTreeBuilder();\n\n        const astNode = this._astTreeBuilder.parse(lexerNode as LexerNode);\n\n        // console.log('astNode', astNode?.serialize());\n        astNode?.serialize();\n\n        // const interpreter = Interpreter.create();\n\n        // if (astNode == null) {\n        //     return;\n        // }\n\n        // if (interpreter.checkAsyncNode(astNode)) {\n        //     const resultPromise = interpreter.executeAsync(astNode);\n\n        //     resultPromise.then((value) => {\n        //         console.log('formulaResult', value);\n        //     });\n        // } else {\n        //     console.log(interpreter.execute(astNode));\n        // }\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"289fcf6750cb57c165a030fd6012aa666a4d5cc5"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/super-table.service.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/super-table.service.ts","statementMap":{"0":{"start":{"line":4,"column":30},"end":{"line":4,"column":39}},"1":{"start":{"line":6,"column":36},"end":{"line":6,"column":45}},"2":{"start":{"line":8,"column":4},"end":{"line":8,"column":20}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":27}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":50}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":38}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":32}},"8":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"9":{"start":{"line":23,"column":6},"end":{"line":23,"column":60}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":58}},"11":{"start":{"line":28,"column":4},"end":{"line":28,"column":59}},"12":{"start":{"line":31,"column":34},"end":{"line":31,"column":88}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":2},"end":{"line":7,"column":3}},"loc":{"start":{"line":7,"column":12},"end":{"line":11,"column":3}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":2},"end":{"line":12,"column":3}},"loc":{"start":{"line":12,"column":28},"end":{"line":14,"column":3}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":2},"end":{"line":15,"column":3}},"loc":{"start":{"line":15,"column":22},"end":{"line":17,"column":3}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":2},"end":{"line":18,"column":3}},"loc":{"start":{"line":18,"column":22},"end":{"line":20,"column":3}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":21,"column":2},"end":{"line":21,"column":3}},"loc":{"start":{"line":21,"column":46},"end":{"line":26,"column":3}},"line":21},"5":{"name":"(anonymous_5)","decl":{"start":{"line":27,"column":2},"end":{"line":27,"column":3}},"loc":{"start":{"line":27,"column":55},"end":{"line":29,"column":3}},"line":27}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},{"start":{},"end":{}}],"line":22}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/services/super-table.service.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\nimport type { ISuperTable, TableOptionType } from '../basics/common';\n\nimport { createIdentifier, Disposable } from '@univerjs/core';\n\nexport interface ISuperTableOptionParam {\n    tableOption: string;\n    tableOptionType: TableOptionType;\n}\n\nexport interface ISuperTableService {\n    getTableMap(unitId: string): Nullable<Map<string, ISuperTable>>;\n\n    getTableOptionMap(): Map<string, TableOptionType>;\n\n    registerTable(unitId: string, tableName: string, reference: ISuperTable): void;\n\n    registerTableOptionMap(tableOption: string, tableOptionType: TableOptionType): void;\n\n    remove(unitId: string, tableName: string): void;\n}\n\nexport class SuperTableService extends Disposable implements ISuperTableService {\n    // 18.5.1.2 table (Table)\n    private _tableMap: Map<string, Map<string, ISuperTable>> = new Map();\n\n    // 18.5.1.2 table (Table) for I18N\n    private _tableOptionMap: Map<string, TableOptionType> = new Map();\n\n    override dispose(): void {\n        super.dispose();\n\n        this._tableMap.clear();\n        this._tableOptionMap.clear();\n    }\n\n    remove(unitId: string, tableName: string) {\n        this._tableMap.get(unitId)?.delete(tableName);\n    }\n\n    getTableMap(unitId: string) {\n        return this._tableMap.get(unitId);\n    }\n\n    getTableOptionMap() {\n        return this._tableOptionMap;\n    }\n\n    registerTable(unitId: string, tableName: string, reference: ISuperTable) {\n        if (this._tableMap.get(unitId) == null) {\n            this._tableMap.set(unitId, new Map());\n        }\n        this._tableMap.get(unitId)?.set(tableName, reference);\n    }\n\n    registerTableOptionMap(tableOption: string, tableOptionType: TableOptionType) {\n        this._tableOptionMap.set(tableOption, tableOptionType);\n    }\n}\n\nexport const ISuperTableService = createIdentifier<ISuperTableService>('univer.formula.super-table.service');\n"],"mappings":"AAmBA,SAAS,kBAAkB,kBAAkB;AAmBtC,aAAM,0BAA0B,WAAyC;AAAA;AAAA,EAEpE,YAAmD,oBAAI,IAAI;AAAA;AAAA,EAG3D,kBAAgD,oBAAI,IAAI;AAAA,EAEvD,UAAgB;AACrB,UAAM,QAAQ;AAEd,SAAK,UAAU,MAAM;AACrB,SAAK,gBAAgB,MAAM;AAAA,EAC/B;AAAA,EAEA,OAAO,QAAgB,WAAmB;AACtC,SAAK,UAAU,IAAI,MAAM,GAAG,OAAO,SAAS;AAAA,EAChD;AAAA,EAEA,YAAY,QAAgB;AACxB,WAAO,KAAK,UAAU,IAAI,MAAM;AAAA,EACpC;AAAA,EAEA,oBAAoB;AAChB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,cAAc,QAAgB,WAAmB,WAAwB;AACrE,QAAI,KAAK,UAAU,IAAI,MAAM,KAAK,MAAM;AACpC,WAAK,UAAU,IAAI,QAAQ,oBAAI,IAAI,CAAC;AAAA,IACxC;AACA,SAAK,UAAU,IAAI,MAAM,GAAG,IAAI,WAAW,SAAS;AAAA,EACxD;AAAA,EAEA,uBAAuB,aAAqB,iBAAkC;AAC1E,SAAK,gBAAgB,IAAI,aAAa,eAAe;AAAA,EACzD;AACJ;AAEO,aAAM,qBAAqB,iBAAqC,oCAAoC;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c5525b3b8328ac0c6ff9ecdbfce06fcf0a67037d"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/util.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/util.ts","statementMap":{"0":{"start":{"line":2,"column":2},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":9},"end":{"line":8,"column":3}},"3":{"start":{"line":5,"column":4},"end":{"line":5,"column":49}},"4":{"start":{"line":6,"column":9},"end":{"line":8,"column":3}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":28}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":27}}},"fnMap":{"0":{"name":"getObjectValue","decl":{"start":{"line":1,"column":16},"end":{"line":1,"column":30}},"loc":{"start":{"line":1,"column":39},"end":{"line":10,"column":1}},"line":1}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":2},"end":{"line":8,"column":3}},"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":8,"column":3}},{"start":{"line":4,"column":9},"end":{"line":8,"column":3}}],"line":2},"1":{"loc":{"start":{"line":4,"column":9},"end":{"line":8,"column":3}},"type":"if","locations":[{"start":{"line":4,"column":9},"end":{"line":8,"column":3}},{"start":{"line":6,"column":9},"end":{"line":8,"column":3}}],"line":4},"2":{"loc":{"start":{"line":6,"column":9},"end":{"line":8,"column":3}},"type":"if","locations":[{"start":{"line":6,"column":9},"end":{"line":8,"column":3}},{"start":{},"end":{}}],"line":6}},"s":{"0":23,"1":13,"2":10,"3":0,"4":10,"5":10,"6":0},"f":{"0":23},"b":{"0":[13,10],"1":[0,10],"2":[10,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/util.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BaseReferenceObject, FunctionVariantType } from '../engine/reference-object/base-reference-object';\nimport type { ArrayValueObject } from '../engine/value-object/array-value-object';\nimport type { BaseValueObject, ErrorValueObject } from '../engine/value-object/base-value-object';\n\nexport function getObjectValue(result: FunctionVariantType) {\n    if ((result as ErrorValueObject).isError()) {\n        return (result as ErrorValueObject).getValue();\n    } else if ((result as BaseReferenceObject).isReferenceObject()) {\n        return (result as BaseReferenceObject).toArrayValueObject().toValue();\n    } else if ((result as ArrayValueObject).isArray()) {\n        return (result as ArrayValueObject).toValue();\n    }\n    return (result as BaseValueObject).getValue();\n}\n"],"mappings":"AAoBO,gBAAS,eAAe,QAA6B;AACxD,MAAK,OAA4B,QAAQ,GAAG;AACxC,WAAQ,OAA4B,SAAS;AAAA,EACjD,WAAY,OAA+B,kBAAkB,GAAG;AAC5D,WAAQ,OAA+B,mBAAmB,EAAE,QAAQ;AAAA,EACxE,WAAY,OAA4B,QAAQ,GAAG;AAC/C,WAAQ,OAA4B,QAAQ;AAAA,EAChD;AACA,SAAQ,OAA2B,SAAS;AAChD;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"550a202edd24bd4dd6642c0214e07cf45dd8afe3"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/statistical/function-names.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/statistical/function-names.ts","statementMap":{"0":{"start":{"line":1,"column":56},"end":{"line":116,"column":36}},"1":{"start":{"line":2,"column":2},"end":{"line":2,"column":51}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":53}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":71}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":55}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":57}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":59}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":57}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":55}},"9":{"start":{"line":10,"column":2},"end":{"line":10,"column":59}},"10":{"start":{"line":11,"column":2},"end":{"line":11,"column":71}},"11":{"start":{"line":12,"column":2},"end":{"line":12,"column":57}},"12":{"start":{"line":13,"column":2},"end":{"line":13,"column":59}},"13":{"start":{"line":14,"column":2},"end":{"line":14,"column":65}},"14":{"start":{"line":15,"column":2},"end":{"line":15,"column":57}},"15":{"start":{"line":16,"column":2},"end":{"line":16,"column":63}},"16":{"start":{"line":17,"column":2},"end":{"line":17,"column":59}},"17":{"start":{"line":18,"column":2},"end":{"line":18,"column":69}},"18":{"start":{"line":19,"column":2},"end":{"line":19,"column":63}},"19":{"start":{"line":20,"column":2},"end":{"line":20,"column":51}},"20":{"start":{"line":21,"column":2},"end":{"line":21,"column":49}},"21":{"start":{"line":22,"column":2},"end":{"line":22,"column":51}},"22":{"start":{"line":23,"column":2},"end":{"line":23,"column":59}},"23":{"start":{"line":24,"column":2},"end":{"line":24,"column":53}},"24":{"start":{"line":25,"column":2},"end":{"line":25,"column":55}},"25":{"start":{"line":26,"column":2},"end":{"line":26,"column":63}},"26":{"start":{"line":27,"column":2},"end":{"line":27,"column":63}},"27":{"start":{"line":28,"column":2},"end":{"line":28,"column":49}},"28":{"start":{"line":29,"column":2},"end":{"line":29,"column":59}},"29":{"start":{"line":30,"column":2},"end":{"line":30,"column":51}},"30":{"start":{"line":31,"column":2},"end":{"line":31,"column":57}},"31":{"start":{"line":32,"column":2},"end":{"line":32,"column":49}},"32":{"start":{"line":33,"column":2},"end":{"line":33,"column":55}},"33":{"start":{"line":34,"column":2},"end":{"line":34,"column":51}},"34":{"start":{"line":35,"column":2},"end":{"line":35,"column":51}},"35":{"start":{"line":36,"column":2},"end":{"line":36,"column":57}},"36":{"start":{"line":37,"column":2},"end":{"line":37,"column":55}},"37":{"start":{"line":38,"column":2},"end":{"line":38,"column":63}},"38":{"start":{"line":39,"column":2},"end":{"line":39,"column":79}},"39":{"start":{"line":40,"column":2},"end":{"line":40,"column":87}},"40":{"start":{"line":41,"column":2},"end":{"line":41,"column":73}},"41":{"start":{"line":42,"column":2},"end":{"line":42,"column":69}},"42":{"start":{"line":43,"column":2},"end":{"line":43,"column":57}},"43":{"start":{"line":44,"column":2},"end":{"line":44,"column":49}},"44":{"start":{"line":45,"column":2},"end":{"line":45,"column":59}},"45":{"start":{"line":46,"column":2},"end":{"line":46,"column":57}},"46":{"start":{"line":47,"column":2},"end":{"line":47,"column":53}},"47":{"start":{"line":48,"column":2},"end":{"line":48,"column":69}},"48":{"start":{"line":49,"column":2},"end":{"line":49,"column":49}},"49":{"start":{"line":50,"column":2},"end":{"line":50,"column":53}},"50":{"start":{"line":51,"column":2},"end":{"line":51,"column":51}},"51":{"start":{"line":52,"column":2},"end":{"line":52,"column":53}},"52":{"start":{"line":53,"column":2},"end":{"line":53,"column":63}},"53":{"start":{"line":54,"column":2},"end":{"line":54,"column":57}},"54":{"start":{"line":55,"column":2},"end":{"line":55,"column":47}},"55":{"start":{"line":56,"column":2},"end":{"line":56,"column":49}},"56":{"start":{"line":57,"column":2},"end":{"line":57,"column":51}},"57":{"start":{"line":58,"column":2},"end":{"line":58,"column":51}},"58":{"start":{"line":59,"column":2},"end":{"line":59,"column":63}},"59":{"start":{"line":60,"column":2},"end":{"line":60,"column":61}},"60":{"start":{"line":61,"column":2},"end":{"line":61,"column":65}},"61":{"start":{"line":62,"column":2},"end":{"line":62,"column":45}},"62":{"start":{"line":63,"column":2},"end":{"line":63,"column":47}},"63":{"start":{"line":64,"column":2},"end":{"line":64,"column":51}},"64":{"start":{"line":65,"column":2},"end":{"line":65,"column":51}},"65":{"start":{"line":66,"column":2},"end":{"line":66,"column":45}},"66":{"start":{"line":67,"column":2},"end":{"line":67,"column":47}},"67":{"start":{"line":68,"column":2},"end":{"line":68,"column":51}},"68":{"start":{"line":69,"column":2},"end":{"line":69,"column":57}},"69":{"start":{"line":70,"column":2},"end":{"line":70,"column":57}},"70":{"start":{"line":71,"column":2},"end":{"line":71,"column":65}},"71":{"start":{"line":72,"column":2},"end":{"line":72,"column":57}},"72":{"start":{"line":73,"column":2},"end":{"line":73,"column":55}},"73":{"start":{"line":74,"column":2},"end":{"line":74,"column":61}},"74":{"start":{"line":75,"column":2},"end":{"line":75,"column":59}},"75":{"start":{"line":76,"column":2},"end":{"line":76,"column":53}},"76":{"start":{"line":77,"column":2},"end":{"line":77,"column":67}},"77":{"start":{"line":78,"column":2},"end":{"line":78,"column":67}},"78":{"start":{"line":79,"column":2},"end":{"line":79,"column":69}},"79":{"start":{"line":80,"column":2},"end":{"line":80,"column":69}},"80":{"start":{"line":81,"column":2},"end":{"line":81,"column":51}},"81":{"start":{"line":82,"column":2},"end":{"line":82,"column":63}},"82":{"start":{"line":83,"column":2},"end":{"line":83,"column":45}},"83":{"start":{"line":84,"column":2},"end":{"line":84,"column":63}},"84":{"start":{"line":85,"column":2},"end":{"line":85,"column":47}},"85":{"start":{"line":86,"column":2},"end":{"line":86,"column":63}},"86":{"start":{"line":87,"column":2},"end":{"line":87,"column":63}},"87":{"start":{"line":88,"column":2},"end":{"line":88,"column":55}},"88":{"start":{"line":89,"column":2},"end":{"line":89,"column":53}},"89":{"start":{"line":90,"column":2},"end":{"line":90,"column":45}},"90":{"start":{"line":91,"column":2},"end":{"line":91,"column":47}},"91":{"start":{"line":92,"column":2},"end":{"line":92,"column":51}},"92":{"start":{"line":93,"column":2},"end":{"line":93,"column":49}},"93":{"start":{"line":94,"column":2},"end":{"line":94,"column":49}},"94":{"start":{"line":95,"column":2},"end":{"line":95,"column":61}},"95":{"start":{"line":96,"column":2},"end":{"line":96,"column":53}},"96":{"start":{"line":97,"column":2},"end":{"line":97,"column":53}},"97":{"start":{"line":98,"column":2},"end":{"line":98,"column":51}},"98":{"start":{"line":99,"column":2},"end":{"line":99,"column":53}},"99":{"start":{"line":100,"column":2},"end":{"line":100,"column":49}},"100":{"start":{"line":101,"column":2},"end":{"line":101,"column":51}},"101":{"start":{"line":102,"column":2},"end":{"line":102,"column":57}},"102":{"start":{"line":103,"column":2},"end":{"line":103,"column":57}},"103":{"start":{"line":104,"column":2},"end":{"line":104,"column":49}},"104":{"start":{"line":105,"column":2},"end":{"line":105,"column":55}},"105":{"start":{"line":106,"column":2},"end":{"line":106,"column":51}},"106":{"start":{"line":107,"column":2},"end":{"line":107,"column":49}},"107":{"start":{"line":108,"column":2},"end":{"line":108,"column":55}},"108":{"start":{"line":109,"column":2},"end":{"line":109,"column":49}},"109":{"start":{"line":110,"column":2},"end":{"line":110,"column":49}},"110":{"start":{"line":111,"column":2},"end":{"line":111,"column":47}},"111":{"start":{"line":112,"column":2},"end":{"line":112,"column":49}},"112":{"start":{"line":113,"column":2},"end":{"line":113,"column":63}},"113":{"start":{"line":114,"column":2},"end":{"line":114,"column":51}},"114":{"start":{"line":115,"column":2},"end":{"line":115,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":57},"end":{"line":1,"column":58}},"loc":{"start":{"line":1,"column":90},"end":{"line":116,"column":1}},"line":1}},"branchMap":{"0":{"loc":{"start":{"line":116,"column":3},"end":{"line":116,"column":35}},"type":"binary-expr","locations":[{"start":{"line":116,"column":3},"end":{"line":116,"column":29}},{"start":{"line":116,"column":33},"end":{"line":116,"column":35}}],"line":116}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/statistical/function-names.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum FUNCTION_NAMES_STATISTICAL {\n    AVEDEV = 'AVEDEV',\n    AVERAGE = 'AVERAGE',\n    AVERAGE_WEIGHTED = 'AVERAGE.WEIGHTED',\n    AVERAGEA = 'AVERAGEA',\n    AVERAGEIF = 'AVERAGEIF',\n    AVERAGEIFS = 'AVERAGEIFS',\n    BETA_DIST = 'BETA.DIST',\n    BETA_INV = 'BETA.INV',\n    BINOM_DIST = 'BINOM.DIST',\n    BINOM_DIST_RANGE = 'BINOM.DIST.RANGE',\n    BINOM_INV = 'BINOM.INV',\n    CHISQ_DIST = 'CHISQ.DIST',\n    CHISQ_DIST_RT = 'CHISQ.DIST.RT',\n    CHISQ_INV = 'CHISQ.INV',\n    CHISQ_INV_RT = 'CHISQ.INV.RT',\n    CHISQ_TEST = 'CHISQ.TEST',\n    CONFIDENCE_NORM = 'CONFIDENCE.NORM',\n    CONFIDENCE_T = 'CONFIDENCE.T',\n    CORREL = 'CORREL',\n    COUNT = 'COUNT',\n    COUNTA = 'COUNTA',\n    COUNTBLANK = 'COUNTBLANK',\n    COUNTIF = 'COUNTIF',\n    COUNTIFS = 'COUNTIFS',\n    COVARIANCE_P = 'COVARIANCE.P',\n    COVARIANCE_S = 'COVARIANCE.S',\n    DEVSQ = 'DEVSQ',\n    EXPON_DIST = 'EXPON.DIST',\n    F_DIST = 'F.DIST',\n    F_DIST_RT = 'F.DIST.RT',\n    F_INV = 'F.INV',\n    F_INV_RT = 'F.INV.RT',\n    F_TEST = 'F.TEST',\n    FISHER = 'FISHER',\n    FISHERINV = 'FISHERINV',\n    FORECAST = 'FORECAST',\n    FORECAST_ETS = 'FORECAST.ETS',\n    FORECAST_ETS_CONFINT = 'FORECAST.ETS.CONFINT',\n    FORECAST_ETS_SEASONALITY = 'FORECAST.ETS.SEASONALITY',\n    FORECAST_ETS_STAT = 'FORECAST.ETS.STAT',\n    FORECAST_LINEAR = 'FORECAST.LINEAR',\n    FREQUENCY = 'FREQUENCY',\n    GAMMA = 'GAMMA',\n    GAMMA_DIST = 'GAMMA.DIST',\n    GAMMA_INV = 'GAMMA.INV',\n    GAMMALN = 'GAMMALN',\n    GAMMALN_PRECISE = 'GAMMALN.PRECISE',\n    GAUSS = 'GAUSS',\n    GEOMEAN = 'GEOMEAN',\n    GROWTH = 'GROWTH',\n    HARMEAN = 'HARMEAN',\n    HYPGEOM_DIST = 'HYPGEOM.DIST',\n    INTERCEPT = 'INTERCEPT',\n    KURT = 'KURT',\n    LARGE = 'LARGE',\n    LINEST = 'LINEST',\n    LOGEST = 'LOGEST',\n    LOGNORM_DIST = 'LOGNORM.DIST',\n    LOGNORM_INV = 'LOGNORM.INV',\n    MARGINOFERROR = 'MARGINOFERROR',\n    MAX = 'MAX',\n    MAXA = 'MAXA',\n    MAXIFS = 'MAXIFS',\n    MEDIAN = 'MEDIAN',\n    MIN = 'MIN',\n    MINA = 'MINA',\n    MINIFS = 'MINIFS',\n    MODE_MULT = 'MODE.MULT',\n    MODE_SNGL = 'MODE.SNGL',\n    NEGBINOM_DIST = 'NEGBINOM.DIST',\n    NORM_DIST = 'NORM.DIST',\n    NORM_INV = 'NORM.INV',\n    NORM_S_DIST = 'NORM.S.DIST',\n    NORM_S_INV = 'NORM.S.INV',\n    PEARSON = 'PEARSON',\n    PERCENTILE_EXC = 'PERCENTILE.EXC',\n    PERCENTILE_INC = 'PERCENTILE.INC',\n    PERCENTRANK_EXC = 'PERCENTRANK.EXC',\n    PERCENTRANK_INC = 'PERCENTRANK.INC',\n    PERMUT = 'PERMUT',\n    PERMUTATIONA = 'PERMUTATIONA',\n    PHI = 'PHI',\n    POISSON_DIST = 'POISSON.DIST',\n    PROB = 'PROB',\n    QUARTILE_EXC = 'QUARTILE.EXC',\n    QUARTILE_INC = 'QUARTILE.INC',\n    RANK_AVG = 'RANK.AVG',\n    RANK_EQ = 'RANK.EQ',\n    RSQ = 'RSQ',\n    SKEW = 'SKEW',\n    SKEW_P = 'SKEW.P',\n    SLOPE = 'SLOPE',\n    SMALL = 'SMALL',\n    STANDARDIZE = 'STANDARDIZE',\n    STDEV_P = 'STDEV.P',\n    STDEV_S = 'STDEV.S',\n    STDEVA = 'STDEVA',\n    STDEVPA = 'STDEVPA',\n    STEYX = 'STEYX',\n    T_DIST = 'T.DIST',\n    T_DIST_2T = 'T.DIST.2T',\n    T_DIST_RT = 'T.DIST.RT',\n    T_INV = 'T.INV',\n    T_INV_2T = 'T.INV.2T',\n    T_TEST = 'T.TEST',\n    TREND = 'TREND',\n    TRIMMEAN = 'TRIMMEAN',\n    VAR_P = 'VAR.P',\n    VAR_S = 'VAR.S',\n    VARA = 'VARA',\n    VARPA = 'VARPA',\n    WEIBULL_DIST = 'WEIBULL.DIST',\n    Z_TEST = 'Z.TEST',\n}\n"],"mappings":"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","names":["FUNCTION_NAMES_STATISTICAL"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9f0bb34aa3410e5676ef85fb6be2b34cafd4982e"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/math.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/math.ts","statementMap":{"0":{"start":{"line":2,"column":11},"end":{"line":2,"column":24}},"1":{"start":{"line":3,"column":2},"end":{"line":5,"column":3}},"2":{"start":{"line":4,"column":4},"end":{"line":4,"column":22}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":16}},"4":{"start":{"line":7,"column":2},"end":{"line":10,"column":3}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":17}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":15}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":16}},"8":{"start":{"line":14,"column":12},"end":{"line":14,"column":30}},"9":{"start":{"line":15,"column":15},"end":{"line":15,"column":16}},"10":{"start":{"line":16,"column":2},"end":{"line":22,"column":3}},"11":{"start":{"line":16,"column":15},"end":{"line":16,"column":16}},"12":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"13":{"start":{"line":18,"column":6},"end":{"line":18,"column":12}},"14":{"start":{"line":20,"column":4},"end":{"line":20,"column":24}},"15":{"start":{"line":21,"column":4},"end":{"line":21,"column":16}},"16":{"start":{"line":23,"column":2},"end":{"line":23,"column":16}},"17":{"start":{"line":26,"column":11},"end":{"line":26,"column":24}},"18":{"start":{"line":27,"column":11},"end":{"line":27,"column":24}},"19":{"start":{"line":28,"column":2},"end":{"line":32,"column":3}},"20":{"start":{"line":29,"column":14},"end":{"line":29,"column":16}},"21":{"start":{"line":30,"column":4},"end":{"line":30,"column":17}},"22":{"start":{"line":31,"column":4},"end":{"line":31,"column":11}},"23":{"start":{"line":33,"column":2},"end":{"line":33,"column":12}},"24":{"start":{"line":36,"column":14},"end":{"line":36,"column":32}},"25":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"26":{"start":{"line":38,"column":4},"end":{"line":38,"column":13}},"27":{"start":{"line":40,"column":2},"end":{"line":40,"column":31}},"28":{"start":{"line":43,"column":12},"end":{"line":43,"column":25}},"29":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"30":{"start":{"line":45,"column":4},"end":{"line":45,"column":24}},"31":{"start":{"line":47,"column":2},"end":{"line":49,"column":3}},"32":{"start":{"line":48,"column":4},"end":{"line":48,"column":69}},"33":{"start":{"line":50,"column":12},"end":{"line":50,"column":13}},"34":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"35":{"start":{"line":51,"column":17},"end":{"line":51,"column":18}},"36":{"start":{"line":52,"column":4},"end":{"line":52,"column":95}},"37":{"start":{"line":54,"column":2},"end":{"line":54,"column":13}},"38":{"start":{"line":57,"column":14},"end":{"line":57,"column":38}},"39":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"40":{"start":{"line":59,"column":4},"end":{"line":59,"column":16}},"41":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"42":{"start":{"line":62,"column":4},"end":{"line":62,"column":23}},"43":{"start":{"line":64,"column":19},"end":{"line":64,"column":34}},"44":{"start":{"line":65,"column":24},"end":{"line":65,"column":78}},"45":{"start":{"line":65,"column":46},"end":{"line":65,"column":77}},"46":{"start":{"line":65,"column":65},"end":{"line":65,"column":76}},"47":{"start":{"line":66,"column":2},"end":{"line":66,"column":23}},"48":{"start":{"line":69,"column":2},"end":{"line":69,"column":92}},"49":{"start":{"line":69,"column":33},"end":{"line":69,"column":42}},"50":{"start":{"line":69,"column":58},"end":{"line":69,"column":90}},"51":{"start":{"line":69,"column":80},"end":{"line":69,"column":89}},"52":{"start":{"line":72,"column":12},"end":{"line":72,"column":25}},"53":{"start":{"line":73,"column":14},"end":{"line":73,"column":67}},"54":{"start":{"line":73,"column":46},"end":{"line":73,"column":66}},"55":{"start":{"line":74,"column":2},"end":{"line":79,"column":3}},"56":{"start":{"line":74,"column":15},"end":{"line":74,"column":16}},"57":{"start":{"line":75,"column":4},"end":{"line":78,"column":5}},"58":{"start":{"line":75,"column":17},"end":{"line":75,"column":18}},"59":{"start":{"line":76,"column":19},"end":{"line":76,"column":45}},"60":{"start":{"line":77,"column":6},"end":{"line":77,"column":63}},"61":{"start":{"line":80,"column":2},"end":{"line":80,"column":13}},"62":{"start":{"line":83,"column":2},"end":{"line":85,"column":5}},"63":{"start":{"line":83,"column":30},"end":{"line":85,"column":3}},"64":{"start":{"line":84,"column":21},"end":{"line":84,"column":107}},"65":{"start":{"line":84,"column":60},"end":{"line":84,"column":103}},"66":{"start":{"line":88,"column":2},"end":{"line":88,"column":76}},"67":{"start":{"line":88,"column":40},"end":{"line":88,"column":74}},"68":{"start":{"line":88,"column":60},"end":{"line":88,"column":73}},"69":{"start":{"line":91,"column":56},"end":{"line":91,"column":86}},"70":{"start":{"line":92,"column":2},"end":{"line":94,"column":3}},"71":{"start":{"line":93,"column":4},"end":{"line":93,"column":16}},"72":{"start":{"line":95,"column":2},"end":{"line":95,"column":48}},"73":{"start":{"line":98,"column":27},"end":{"line":98,"column":50}},"74":{"start":{"line":99,"column":18},"end":{"line":99,"column":41}},"75":{"start":{"line":100,"column":18},"end":{"line":100,"column":44}},"76":{"start":{"line":101,"column":18},"end":{"line":101,"column":22}},"77":{"start":{"line":102,"column":27},"end":{"line":102,"column":32}},"78":{"start":{"line":103,"column":19},"end":{"line":103,"column":52}},"79":{"start":{"line":104,"column":22},"end":{"line":104,"column":73}},"80":{"start":{"line":104,"column":67},"end":{"line":104,"column":72}},"81":{"start":{"line":105,"column":2},"end":{"line":141,"column":3}},"82":{"start":{"line":105,"column":15},"end":{"line":105,"column":16}},"83":{"start":{"line":106,"column":4},"end":{"line":112,"column":5}},"84":{"start":{"line":106,"column":17},"end":{"line":106,"column":18}},"85":{"start":{"line":107,"column":18},"end":{"line":107,"column":40}},"86":{"start":{"line":108,"column":6},"end":{"line":110,"column":7}},"87":{"start":{"line":108,"column":19},"end":{"line":108,"column":20}},"88":{"start":{"line":109,"column":8},"end":{"line":109,"column":49}},"89":{"start":{"line":111,"column":6},"end":{"line":111,"column":29}},"90":{"start":{"line":113,"column":19},"end":{"line":113,"column":28}},"91":{"start":{"line":114,"column":19},"end":{"line":114,"column":20}},"92":{"start":{"line":115,"column":4},"end":{"line":126,"column":5}},"93":{"start":{"line":115,"column":17},"end":{"line":115,"column":18}},"94":{"start":{"line":116,"column":18},"end":{"line":116,"column":40}},"95":{"start":{"line":117,"column":6},"end":{"line":119,"column":7}},"96":{"start":{"line":117,"column":19},"end":{"line":117,"column":20}},"97":{"start":{"line":118,"column":8},"end":{"line":118,"column":49}},"98":{"start":{"line":120,"column":6},"end":{"line":120,"column":29}},"99":{"start":{"line":121,"column":23},"end":{"line":121,"column":38}},"100":{"start":{"line":122,"column":6},"end":{"line":125,"column":7}},"101":{"start":{"line":123,"column":8},"end":{"line":123,"column":28}},"102":{"start":{"line":124,"column":8},"end":{"line":124,"column":21}},"103":{"start":{"line":127,"column":4},"end":{"line":130,"column":5}},"104":{"start":{"line":128,"column":6},"end":{"line":128,"column":32}},"105":{"start":{"line":129,"column":6},"end":{"line":129,"column":12}},"106":{"start":{"line":131,"column":4},"end":{"line":136,"column":5}},"107":{"start":{"line":132,"column":6},"end":{"line":132,"column":76}},"108":{"start":{"line":133,"column":6},"end":{"line":133,"column":108}},"109":{"start":{"line":134,"column":6},"end":{"line":134,"column":88}},"110":{"start":{"line":135,"column":6},"end":{"line":135,"column":29}},"111":{"start":{"line":137,"column":25},"end":{"line":137,"column":39}},"112":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"113":{"start":{"line":138,"column":17},"end":{"line":138,"column":22}},"114":{"start":{"line":139,"column":6},"end":{"line":139,"column":37}},"115":{"start":{"line":142,"column":2},"end":{"line":147,"column":4}},"116":{"start":{"line":150,"column":15},"end":{"line":150,"column":29}},"117":{"start":{"line":151,"column":25},"end":{"line":151,"column":52}},"118":{"start":{"line":152,"column":2},"end":{"line":154,"column":3}},"119":{"start":{"line":152,"column":15},"end":{"line":152,"column":16}},"120":{"start":{"line":153,"column":4},"end":{"line":153,"column":29}},"121":{"start":{"line":155,"column":23},"end":{"line":155,"column":50}},"122":{"start":{"line":156,"column":2},"end":{"line":161,"column":3}},"123":{"start":{"line":156,"column":22},"end":{"line":156,"column":23}},"124":{"start":{"line":157,"column":18},"end":{"line":157,"column":35}},"125":{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},"126":{"start":{"line":158,"column":24},"end":{"line":158,"column":25}},"127":{"start":{"line":159,"column":6},"end":{"line":159,"column":73}},"128":{"start":{"line":162,"column":2},"end":{"line":170,"column":3}},"129":{"start":{"line":162,"column":19},"end":{"line":162,"column":20}},"130":{"start":{"line":163,"column":23},"end":{"line":163,"column":42}},"131":{"start":{"line":164,"column":4},"end":{"line":169,"column":5}},"132":{"start":{"line":164,"column":19},"end":{"line":164,"column":28}},"133":{"start":{"line":165,"column":21},"end":{"line":165,"column":44}},"134":{"start":{"line":166,"column":6},"end":{"line":168,"column":7}},"135":{"start":{"line":166,"column":24},"end":{"line":166,"column":25}},"136":{"start":{"line":167,"column":8},"end":{"line":167,"column":65}},"137":{"start":{"line":171,"column":2},"end":{"line":183,"column":3}},"138":{"start":{"line":171,"column":17},"end":{"line":171,"column":25}},"139":{"start":{"line":172,"column":23},"end":{"line":172,"column":40}},"140":{"start":{"line":173,"column":25},"end":{"line":173,"column":46}},"141":{"start":{"line":174,"column":4},"end":{"line":176,"column":5}},"142":{"start":{"line":174,"column":22},"end":{"line":174,"column":23}},"143":{"start":{"line":175,"column":6},"end":{"line":175,"column":41}},"144":{"start":{"line":177,"column":4},"end":{"line":182,"column":5}},"145":{"start":{"line":177,"column":24},"end":{"line":177,"column":25}},"146":{"start":{"line":178,"column":26},"end":{"line":178,"column":52}},"147":{"start":{"line":179,"column":6},"end":{"line":181,"column":7}},"148":{"start":{"line":179,"column":26},"end":{"line":179,"column":27}},"149":{"start":{"line":180,"column":8},"end":{"line":180,"column":79}},"150":{"start":{"line":184,"column":2},"end":{"line":184,"column":22}},"151":{"start":{"line":187,"column":17},"end":{"line":187,"column":19}},"152":{"start":{"line":188,"column":2},"end":{"line":193,"column":3}},"153":{"start":{"line":188,"column":15},"end":{"line":188,"column":16}},"154":{"start":{"line":189,"column":4},"end":{"line":189,"column":19}},"155":{"start":{"line":190,"column":4},"end":{"line":192,"column":5}},"156":{"start":{"line":190,"column":17},"end":{"line":190,"column":18}},"157":{"start":{"line":191,"column":6},"end":{"line":191,"column":35}},"158":{"start":{"line":194,"column":2},"end":{"line":194,"column":16}},"159":{"start":{"line":197,"column":20},"end":{"line":197,"column":40}},"160":{"start":{"line":198,"column":2},"end":{"line":200,"column":3}},"161":{"start":{"line":199,"column":4},"end":{"line":199,"column":16}},"162":{"start":{"line":201,"column":40},"end":{"line":201,"column":49}},"163":{"start":{"line":202,"column":19},"end":{"line":202,"column":43}},"164":{"start":{"line":203,"column":20},"end":{"line":203,"column":101}},"165":{"start":{"line":203,"column":65},"end":{"line":203,"column":100}},"166":{"start":{"line":204,"column":18},"end":{"line":204,"column":89}},"167":{"start":{"line":205,"column":2},"end":{"line":209,"column":3}},"168":{"start":{"line":205,"column":15},"end":{"line":205,"column":16}},"169":{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},"170":{"start":{"line":207,"column":6},"end":{"line":207,"column":39}},"171":{"start":{"line":210,"column":2},"end":{"line":210,"column":70}},"172":{"start":{"line":213,"column":18},"end":{"line":213,"column":41}},"173":{"start":{"line":214,"column":12},"end":{"line":214,"column":26}},"174":{"start":{"line":215,"column":12},"end":{"line":215,"column":29}},"175":{"start":{"line":216,"column":2},"end":{"line":218,"column":3}},"176":{"start":{"line":217,"column":4},"end":{"line":217,"column":16}},"177":{"start":{"line":219,"column":18},"end":{"line":219,"column":38}},"178":{"start":{"line":220,"column":18},"end":{"line":220,"column":38}},"179":{"start":{"line":221,"column":18},"end":{"line":221,"column":71}},"180":{"start":{"line":221,"column":50},"end":{"line":221,"column":70}},"181":{"start":{"line":222,"column":16},"end":{"line":222,"column":30}},"182":{"start":{"line":223,"column":13},"end":{"line":223,"column":14}},"183":{"start":{"line":224,"column":12},"end":{"line":224,"column":13}},"184":{"start":{"line":225,"column":23},"end":{"line":225,"column":24}},"185":{"start":{"line":226,"column":2},"end":{"line":270,"column":3}},"186":{"start":{"line":226,"column":15},"end":{"line":226,"column":16}},"187":{"start":{"line":227,"column":4},"end":{"line":227,"column":22}},"188":{"start":{"line":228,"column":4},"end":{"line":228,"column":57}},"189":{"start":{"line":229,"column":4},"end":{"line":244,"column":5}},"190":{"start":{"line":230,"column":6},"end":{"line":230,"column":15}},"191":{"start":{"line":232,"column":6},"end":{"line":232,"column":28}},"192":{"start":{"line":233,"column":6},"end":{"line":235,"column":7}},"193":{"start":{"line":234,"column":8},"end":{"line":234,"column":21}},"194":{"start":{"line":236,"column":19},"end":{"line":236,"column":45}},"195":{"start":{"line":237,"column":6},"end":{"line":237,"column":28}},"196":{"start":{"line":238,"column":6},"end":{"line":243,"column":7}},"197":{"start":{"line":238,"column":19},"end":{"line":238,"column":24}},"198":{"start":{"line":239,"column":8},"end":{"line":239,"column":61}},"199":{"start":{"line":240,"column":8},"end":{"line":242,"column":9}},"200":{"start":{"line":240,"column":21},"end":{"line":240,"column":22}},"201":{"start":{"line":241,"column":10},"end":{"line":241,"column":54}},"202":{"start":{"line":245,"column":4},"end":{"line":245,"column":22}},"203":{"start":{"line":246,"column":4},"end":{"line":246,"column":61}},"204":{"start":{"line":247,"column":4},"end":{"line":265,"column":5}},"205":{"start":{"line":248,"column":6},"end":{"line":248,"column":15}},"206":{"start":{"line":250,"column":6},"end":{"line":250,"column":28}},"207":{"start":{"line":251,"column":6},"end":{"line":253,"column":7}},"208":{"start":{"line":252,"column":8},"end":{"line":252,"column":21}},"209":{"start":{"line":254,"column":19},"end":{"line":254,"column":49}},"210":{"start":{"line":255,"column":6},"end":{"line":255,"column":32}},"211":{"start":{"line":256,"column":6},"end":{"line":258,"column":7}},"212":{"start":{"line":256,"column":19},"end":{"line":256,"column":24}},"213":{"start":{"line":257,"column":8},"end":{"line":257,"column":42}},"214":{"start":{"line":259,"column":6},"end":{"line":264,"column":7}},"215":{"start":{"line":259,"column":19},"end":{"line":259,"column":24}},"216":{"start":{"line":260,"column":8},"end":{"line":260,"column":65}},"217":{"start":{"line":261,"column":8},"end":{"line":263,"column":9}},"218":{"start":{"line":261,"column":21},"end":{"line":261,"column":26}},"219":{"start":{"line":262,"column":10},"end":{"line":262,"column":44}},"220":{"start":{"line":266,"column":24},"end":{"line":266,"column":67}},"221":{"start":{"line":267,"column":4},"end":{"line":269,"column":5}},"222":{"start":{"line":268,"column":6},"end":{"line":268,"column":35}},"223":{"start":{"line":271,"column":10},"end":{"line":271,"column":11}},"224":{"start":{"line":272,"column":2},"end":{"line":294,"column":3}},"225":{"start":{"line":272,"column":15},"end":{"line":272,"column":20}},"226":{"start":{"line":273,"column":4},"end":{"line":286,"column":5}},"227":{"start":{"line":274,"column":6},"end":{"line":276,"column":7}},"228":{"start":{"line":274,"column":19},"end":{"line":274,"column":20}},"229":{"start":{"line":275,"column":8},"end":{"line":275,"column":67}},"230":{"start":{"line":277,"column":6},"end":{"line":285,"column":7}},"231":{"start":{"line":277,"column":19},"end":{"line":277,"column":20}},"232":{"start":{"line":278,"column":8},"end":{"line":278,"column":16}},"233":{"start":{"line":279,"column":8},"end":{"line":281,"column":9}},"234":{"start":{"line":279,"column":21},"end":{"line":279,"column":22}},"235":{"start":{"line":280,"column":10},"end":{"line":280,"column":47}},"236":{"start":{"line":282,"column":8},"end":{"line":284,"column":9}},"237":{"start":{"line":282,"column":21},"end":{"line":282,"column":22}},"238":{"start":{"line":283,"column":10},"end":{"line":283,"column":47}},"239":{"start":{"line":287,"column":4},"end":{"line":290,"column":5}},"240":{"start":{"line":287,"column":17},"end":{"line":287,"column":18}},"241":{"start":{"line":288,"column":6},"end":{"line":288,"column":24}},"242":{"start":{"line":289,"column":6},"end":{"line":289,"column":24}},"243":{"start":{"line":291,"column":4},"end":{"line":291,"column":22}},"244":{"start":{"line":292,"column":4},"end":{"line":292,"column":22}},"245":{"start":{"line":293,"column":4},"end":{"line":293,"column":10}},"246":{"start":{"line":295,"column":2},"end":{"line":316,"column":3}},"247":{"start":{"line":295,"column":15},"end":{"line":295,"column":20}},"248":{"start":{"line":296,"column":4},"end":{"line":296,"column":22}},"249":{"start":{"line":297,"column":4},"end":{"line":299,"column":5}},"250":{"start":{"line":297,"column":17},"end":{"line":297,"column":22}},"251":{"start":{"line":298,"column":6},"end":{"line":298,"column":24}},"252":{"start":{"line":300,"column":4},"end":{"line":314,"column":5}},"253":{"start":{"line":301,"column":6},"end":{"line":306,"column":7}},"254":{"start":{"line":301,"column":19},"end":{"line":301,"column":24}},"255":{"start":{"line":302,"column":8},"end":{"line":302,"column":65}},"256":{"start":{"line":303,"column":8},"end":{"line":305,"column":9}},"257":{"start":{"line":303,"column":21},"end":{"line":303,"column":22}},"258":{"start":{"line":304,"column":10},"end":{"line":304,"column":72}},"259":{"start":{"line":307,"column":6},"end":{"line":309,"column":7}},"260":{"start":{"line":307,"column":19},"end":{"line":307,"column":20}},"261":{"start":{"line":308,"column":8},"end":{"line":308,"column":30}},"262":{"start":{"line":311,"column":6},"end":{"line":313,"column":7}},"263":{"start":{"line":311,"column":19},"end":{"line":311,"column":20}},"264":{"start":{"line":312,"column":8},"end":{"line":312,"column":26}},"265":{"start":{"line":315,"column":4},"end":{"line":315,"column":23}},"266":{"start":{"line":317,"column":2},"end":{"line":317,"column":28}},"267":{"start":{"line":318,"column":10},"end":{"line":318,"column":11}},"268":{"start":{"line":319,"column":10},"end":{"line":319,"column":11}},"269":{"start":{"line":320,"column":14},"end":{"line":320,"column":15}},"270":{"start":{"line":321,"column":2},"end":{"line":414,"column":3}},"271":{"start":{"line":321,"column":15},"end":{"line":321,"column":20}},"272":{"start":{"line":322,"column":4},"end":{"line":413,"column":5}},"273":{"start":{"line":322,"column":17},"end":{"line":322,"column":18}},"274":{"start":{"line":323,"column":25},"end":{"line":323,"column":30}},"275":{"start":{"line":324,"column":18},"end":{"line":324,"column":19}},"276":{"start":{"line":325,"column":6},"end":{"line":333,"column":7}},"277":{"start":{"line":326,"column":8},"end":{"line":329,"column":9}},"278":{"start":{"line":327,"column":10},"end":{"line":327,"column":30}},"279":{"start":{"line":328,"column":10},"end":{"line":328,"column":16}},"280":{"start":{"line":330,"column":8},"end":{"line":332,"column":9}},"281":{"start":{"line":331,"column":10},"end":{"line":331,"column":16}},"282":{"start":{"line":334,"column":6},"end":{"line":355,"column":7}},"283":{"start":{"line":335,"column":21},"end":{"line":335,"column":22}},"284":{"start":{"line":336,"column":21},"end":{"line":336,"column":22}},"285":{"start":{"line":337,"column":8},"end":{"line":354,"column":9}},"286":{"start":{"line":337,"column":21},"end":{"line":337,"column":26}},"287":{"start":{"line":338,"column":10},"end":{"line":338,"column":34}},"288":{"start":{"line":339,"column":10},"end":{"line":339,"column":25}},"289":{"start":{"line":340,"column":10},"end":{"line":340,"column":31}},"290":{"start":{"line":341,"column":10},"end":{"line":343,"column":11}},"291":{"start":{"line":342,"column":12},"end":{"line":342,"column":18}},"292":{"start":{"line":344,"column":10},"end":{"line":344,"column":42}},"293":{"start":{"line":345,"column":10},"end":{"line":345,"column":29}},"294":{"start":{"line":346,"column":10},"end":{"line":346,"column":29}},"295":{"start":{"line":347,"column":10},"end":{"line":347,"column":30}},"296":{"start":{"line":348,"column":10},"end":{"line":353,"column":11}},"297":{"start":{"line":348,"column":23},"end":{"line":348,"column":24}},"298":{"start":{"line":349,"column":27},"end":{"line":349,"column":48}},"299":{"start":{"line":350,"column":27},"end":{"line":350,"column":40}},"300":{"start":{"line":351,"column":12},"end":{"line":351,"column":70}},"301":{"start":{"line":352,"column":12},"end":{"line":352,"column":63}},"302":{"start":{"line":356,"column":6},"end":{"line":364,"column":7}},"303":{"start":{"line":357,"column":8},"end":{"line":362,"column":9}},"304":{"start":{"line":358,"column":10},"end":{"line":358,"column":35}},"305":{"start":{"line":359,"column":10},"end":{"line":361,"column":11}},"306":{"start":{"line":359,"column":23},"end":{"line":359,"column":24}},"307":{"start":{"line":360,"column":12},"end":{"line":360,"column":43}},"308":{"start":{"line":363,"column":8},"end":{"line":363,"column":14}},"309":{"start":{"line":365,"column":6},"end":{"line":367,"column":7}},"310":{"start":{"line":366,"column":8},"end":{"line":366,"column":20}},"311":{"start":{"line":368,"column":23},"end":{"line":368,"column":37}},"312":{"start":{"line":369,"column":6},"end":{"line":369,"column":174}},"313":{"start":{"line":370,"column":6},"end":{"line":370,"column":38}},"314":{"start":{"line":371,"column":6},"end":{"line":375,"column":7}},"315":{"start":{"line":372,"column":8},"end":{"line":372,"column":140}},"316":{"start":{"line":374,"column":8},"end":{"line":374,"column":140}},"317":{"start":{"line":376,"column":18},"end":{"line":376,"column":19}},"318":{"start":{"line":377,"column":18},"end":{"line":377,"column":19}},"319":{"start":{"line":378,"column":6},"end":{"line":409,"column":7}},"320":{"start":{"line":378,"column":19},"end":{"line":378,"column":28}},"321":{"start":{"line":379,"column":27},"end":{"line":379,"column":37}},"322":{"start":{"line":380,"column":27},"end":{"line":380,"column":37}},"323":{"start":{"line":381,"column":8},"end":{"line":381,"column":33}},"324":{"start":{"line":382,"column":8},"end":{"line":382,"column":30}},"325":{"start":{"line":383,"column":8},"end":{"line":383,"column":40}},"326":{"start":{"line":384,"column":8},"end":{"line":384,"column":31}},"327":{"start":{"line":385,"column":8},"end":{"line":385,"column":26}},"328":{"start":{"line":386,"column":8},"end":{"line":386,"column":26}},"329":{"start":{"line":387,"column":8},"end":{"line":387,"column":54}},"330":{"start":{"line":388,"column":8},"end":{"line":388,"column":33}},"331":{"start":{"line":389,"column":8},"end":{"line":389,"column":66}},"332":{"start":{"line":390,"column":8},"end":{"line":390,"column":30}},"333":{"start":{"line":391,"column":8},"end":{"line":396,"column":9}},"334":{"start":{"line":391,"column":21},"end":{"line":391,"column":22}},"335":{"start":{"line":392,"column":25},"end":{"line":392,"column":42}},"336":{"start":{"line":393,"column":25},"end":{"line":393,"column":38}},"337":{"start":{"line":394,"column":10},"end":{"line":394,"column":62}},"338":{"start":{"line":395,"column":10},"end":{"line":395,"column":59}},"339":{"start":{"line":397,"column":8},"end":{"line":397,"column":40}},"340":{"start":{"line":398,"column":8},"end":{"line":398,"column":31}},"341":{"start":{"line":399,"column":8},"end":{"line":399,"column":26}},"342":{"start":{"line":400,"column":8},"end":{"line":400,"column":26}},"343":{"start":{"line":401,"column":8},"end":{"line":401,"column":56}},"344":{"start":{"line":402,"column":8},"end":{"line":402,"column":66}},"345":{"start":{"line":403,"column":8},"end":{"line":408,"column":9}},"346":{"start":{"line":403,"column":21},"end":{"line":403,"column":22}},"347":{"start":{"line":404,"column":25},"end":{"line":404,"column":42}},"348":{"start":{"line":405,"column":25},"end":{"line":405,"column":38}},"349":{"start":{"line":406,"column":10},"end":{"line":406,"column":62}},"350":{"start":{"line":407,"column":10},"end":{"line":407,"column":59}},"351":{"start":{"line":410,"column":6},"end":{"line":410,"column":25}},"352":{"start":{"line":411,"column":6},"end":{"line":411,"column":21}},"353":{"start":{"line":412,"column":6},"end":{"line":412,"column":30}},"354":{"start":{"line":415,"column":2},"end":{"line":419,"column":3}},"355":{"start":{"line":415,"column":15},"end":{"line":415,"column":16}},"356":{"start":{"line":416,"column":4},"end":{"line":418,"column":5}},"357":{"start":{"line":417,"column":6},"end":{"line":417,"column":21}},"358":{"start":{"line":420,"column":2},"end":{"line":439,"column":3}},"359":{"start":{"line":420,"column":15},"end":{"line":420,"column":16}},"360":{"start":{"line":421,"column":4},"end":{"line":438,"column":5}},"361":{"start":{"line":421,"column":17},"end":{"line":421,"column":22}},"362":{"start":{"line":422,"column":6},"end":{"line":437,"column":7}},"363":{"start":{"line":423,"column":21},"end":{"line":423,"column":31}},"364":{"start":{"line":424,"column":8},"end":{"line":424,"column":32}},"365":{"start":{"line":425,"column":8},"end":{"line":425,"column":26}},"366":{"start":{"line":426,"column":8},"end":{"line":430,"column":9}},"367":{"start":{"line":426,"column":21},"end":{"line":426,"column":22}},"368":{"start":{"line":427,"column":24},"end":{"line":427,"column":37}},"369":{"start":{"line":428,"column":10},"end":{"line":428,"column":40}},"370":{"start":{"line":429,"column":10},"end":{"line":429,"column":32}},"371":{"start":{"line":431,"column":8},"end":{"line":435,"column":9}},"372":{"start":{"line":431,"column":21},"end":{"line":431,"column":22}},"373":{"start":{"line":432,"column":24},"end":{"line":432,"column":37}},"374":{"start":{"line":433,"column":10},"end":{"line":433,"column":40}},"375":{"start":{"line":434,"column":10},"end":{"line":434,"column":32}},"376":{"start":{"line":436,"column":8},"end":{"line":436,"column":14}},"377":{"start":{"line":440,"column":2},"end":{"line":444,"column":4}},"378":{"start":{"line":447,"column":14},"end":{"line":447,"column":15}},"379":{"start":{"line":448,"column":2},"end":{"line":451,"column":3}},"380":{"start":{"line":449,"column":4},"end":{"line":449,"column":18}},"381":{"start":{"line":450,"column":4},"end":{"line":450,"column":54}},"382":{"start":{"line":452,"column":2},"end":{"line":455,"column":3}},"383":{"start":{"line":453,"column":4},"end":{"line":453,"column":18}},"384":{"start":{"line":454,"column":4},"end":{"line":454,"column":54}},"385":{"start":{"line":456,"column":2},"end":{"line":456,"column":11}},"386":{"start":{"line":459,"column":12},"end":{"line":459,"column":13}},"387":{"start":{"line":460,"column":2},"end":{"line":462,"column":3}},"388":{"start":{"line":460,"column":15},"end":{"line":460,"column":23}},"389":{"start":{"line":461,"column":4},"end":{"line":461,"column":45}},"390":{"start":{"line":463,"column":2},"end":{"line":463,"column":13}},"391":{"start":{"line":466,"column":12},"end":{"line":466,"column":13}},"392":{"start":{"line":467,"column":2},"end":{"line":469,"column":3}},"393":{"start":{"line":467,"column":15},"end":{"line":467,"column":23}},"394":{"start":{"line":468,"column":4},"end":{"line":468,"column":45}},"395":{"start":{"line":470,"column":2},"end":{"line":470,"column":13}},"396":{"start":{"line":472,"column":48},"end":{"line":480,"column":2}},"397":{"start":{"line":481,"column":48},"end":{"line":507,"column":2}},"398":{"start":{"line":508,"column":30},"end":{"line":514,"column":1}}},"fnMap":{"0":{"name":"calculateFactorial","decl":{"start":{"line":1,"column":16},"end":{"line":1,"column":34}},"loc":{"start":{"line":1,"column":48},"end":{"line":12,"column":1}},"line":1},"1":{"name":"calculateCombin","decl":{"start":{"line":13,"column":16},"end":{"line":13,"column":31}},"loc":{"start":{"line":13,"column":38},"end":{"line":24,"column":1}},"line":13},"2":{"name":"calculateGcd","decl":{"start":{"line":25,"column":16},"end":{"line":25,"column":28}},"loc":{"start":{"line":25,"column":35},"end":{"line":34,"column":1}},"line":25},"3":{"name":"calculateLcm","decl":{"start":{"line":35,"column":16},"end":{"line":35,"column":28}},"loc":{"start":{"line":35,"column":35},"end":{"line":41,"column":1}},"line":35},"4":{"name":"calculateMdeterm","decl":{"start":{"line":42,"column":16},"end":{"line":42,"column":32}},"loc":{"start":{"line":42,"column":41},"end":{"line":55,"column":1}},"line":42},"5":{"name":"calculateMinverse","decl":{"start":{"line":56,"column":16},"end":{"line":56,"column":33}},"loc":{"start":{"line":56,"column":42},"end":{"line":67,"column":1}},"line":56},"6":{"name":"(anonymous_6)","decl":{"start":{"line":65,"column":37},"end":{"line":65,"column":38}},"loc":{"start":{"line":65,"column":46},"end":{"line":65,"column":77}},"line":65},"7":{"name":"(anonymous_7)","decl":{"start":{"line":65,"column":54},"end":{"line":65,"column":55}},"loc":{"start":{"line":65,"column":65},"end":{"line":65,"column":76}},"line":65},"8":{"name":"minor","decl":{"start":{"line":68,"column":9},"end":{"line":68,"column":14}},"loc":{"start":{"line":68,"column":33},"end":{"line":70,"column":1}},"line":68},"9":{"name":"(anonymous_9)","decl":{"start":{"line":69,"column":23},"end":{"line":69,"column":24}},"loc":{"start":{"line":69,"column":33},"end":{"line":69,"column":42}},"line":69},"10":{"name":"(anonymous_10)","decl":{"start":{"line":69,"column":48},"end":{"line":69,"column":49}},"loc":{"start":{"line":69,"column":58},"end":{"line":69,"column":90}},"line":69},"11":{"name":"(anonymous_11)","decl":{"start":{"line":69,"column":70},"end":{"line":69,"column":71}},"loc":{"start":{"line":69,"column":80},"end":{"line":69,"column":89}},"line":69},"12":{"name":"adjoint","decl":{"start":{"line":71,"column":9},"end":{"line":71,"column":16}},"loc":{"start":{"line":71,"column":25},"end":{"line":81,"column":1}},"line":71},"13":{"name":"(anonymous_13)","decl":{"start":{"line":73,"column":40},"end":{"line":73,"column":41}},"loc":{"start":{"line":73,"column":46},"end":{"line":73,"column":66}},"line":73},"14":{"name":"calculateMmult","decl":{"start":{"line":82,"column":16},"end":{"line":82,"column":30}},"loc":{"start":{"line":82,"column":49},"end":{"line":86,"column":1}},"line":82},"15":{"name":"(anonymous_15)","decl":{"start":{"line":83,"column":21},"end":{"line":83,"column":22}},"loc":{"start":{"line":83,"column":30},"end":{"line":85,"column":3}},"line":83},"16":{"name":"(anonymous_16)","decl":{"start":{"line":84,"column":4},"end":{"line":84,"column":5}},"loc":{"start":{"line":84,"column":21},"end":{"line":84,"column":107}},"line":84},"17":{"name":"(anonymous_17)","decl":{"start":{"line":84,"column":32},"end":{"line":84,"column":33}},"loc":{"start":{"line":84,"column":60},"end":{"line":84,"column":103}},"line":84},"18":{"name":"matrixTranspose","decl":{"start":{"line":87,"column":16},"end":{"line":87,"column":31}},"loc":{"start":{"line":87,"column":40},"end":{"line":89,"column":1}},"line":87},"19":{"name":"(anonymous_19)","decl":{"start":{"line":88,"column":23},"end":{"line":88,"column":24}},"loc":{"start":{"line":88,"column":40},"end":{"line":88,"column":74}},"line":88},"20":{"name":"(anonymous_20)","decl":{"start":{"line":88,"column":51},"end":{"line":88,"column":52}},"loc":{"start":{"line":88,"column":60},"end":{"line":88,"column":73}},"line":88},"21":{"name":"inverseMatrixByLUD","decl":{"start":{"line":90,"column":16},"end":{"line":90,"column":34}},"loc":{"start":{"line":90,"column":43},"end":{"line":96,"column":1}},"line":90},"22":{"name":"performLUDecomposition","decl":{"start":{"line":97,"column":9},"end":{"line":97,"column":31}},"loc":{"start":{"line":97,"column":40},"end":{"line":148,"column":1}},"line":97},"23":{"name":"(anonymous_23)","decl":{"start":{"line":104,"column":53},"end":{"line":104,"column":54}},"loc":{"start":{"line":104,"column":67},"end":{"line":104,"column":72}},"line":104},"24":{"name":"transformMatrix","decl":{"start":{"line":149,"column":9},"end":{"line":149,"column":24}},"loc":{"start":{"line":149,"column":47},"end":{"line":185,"column":1}},"line":149},"25":{"name":"createMatrix","decl":{"start":{"line":186,"column":9},"end":{"line":186,"column":21}},"loc":{"start":{"line":186,"column":48},"end":{"line":195,"column":1}},"line":186},"26":{"name":"inverseMatrixByUSV","decl":{"start":{"line":196,"column":16},"end":{"line":196,"column":34}},"loc":{"start":{"line":196,"column":43},"end":{"line":211,"column":1}},"line":196},"27":{"name":"(anonymous_27)","decl":{"start":{"line":203,"column":59},"end":{"line":203,"column":60}},"loc":{"start":{"line":203,"column":65},"end":{"line":203,"column":100}},"line":203},"28":{"name":"getMatrixUSV","decl":{"start":{"line":212,"column":9},"end":{"line":212,"column":21}},"loc":{"start":{"line":212,"column":30},"end":{"line":445,"column":1}},"line":212},"29":{"name":"(anonymous_29)","decl":{"start":{"line":221,"column":44},"end":{"line":221,"column":45}},"loc":{"start":{"line":221,"column":50},"end":{"line":221,"column":70}},"line":221},"30":{"name":"computeHypotenuse","decl":{"start":{"line":446,"column":9},"end":{"line":446,"column":26}},"loc":{"start":{"line":446,"column":33},"end":{"line":457,"column":1}},"line":446},"31":{"name":"getMatrixSumProductOfRows","decl":{"start":{"line":458,"column":9},"end":{"line":458,"column":34}},"loc":{"start":{"line":458,"column":73},"end":{"line":464,"column":1}},"line":458},"32":{"name":"getMatrixSumProductOfCols","decl":{"start":{"line":465,"column":9},"end":{"line":465,"column":34}},"loc":{"start":{"line":465,"column":73},"end":{"line":471,"column":1}},"line":465}},"branchMap":{"0":{"loc":{"start":{"line":1,"column":38},"end":{"line":1,"column":46}},"type":"default-arg","locations":[{"start":{"line":1,"column":45},"end":{"line":1,"column":46}}],"line":1},"1":{"loc":{"start":{"line":3,"column":2},"end":{"line":5,"column":3}},"type":"if","locations":[{"start":{"line":3,"column":2},"end":{"line":5,"column":3}},{"start":{},"end":{}}],"line":3},"2":{"loc":{"start":{"line":7,"column":9},"end":{"line":7,"column":42}},"type":"binary-expr","locations":[{"start":{"line":7,"column":9},"end":{"line":7,"column":15}},{"start":{"line":7,"column":19},"end":{"line":7,"column":42}}],"line":7},"3":{"loc":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},{"start":{},"end":{}}],"line":17},"4":{"loc":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},{"start":{},"end":{}}],"line":37},"5":{"loc":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},{"start":{},"end":{}}],"line":44},"6":{"loc":{"start":{"line":47,"column":2},"end":{"line":49,"column":3}},"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":49,"column":3}},{"start":{},"end":{}}],"line":47},"7":{"loc":{"start":{"line":52,"column":12},"end":{"line":52,"column":34}},"type":"cond-expr","locations":[{"start":{"line":52,"column":28},"end":{"line":52,"column":29}},{"start":{"line":52,"column":32},"end":{"line":52,"column":34}}],"line":52},"8":{"loc":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},{"start":{},"end":{}}],"line":58},"9":{"loc":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},{"start":{},"end":{}}],"line":61},"10":{"loc":{"start":{"line":76,"column":19},"end":{"line":76,"column":45}},"type":"cond-expr","locations":[{"start":{"line":76,"column":39},"end":{"line":76,"column":40}},{"start":{"line":76,"column":43},"end":{"line":76,"column":45}}],"line":76},"11":{"loc":{"start":{"line":92,"column":2},"end":{"line":94,"column":3}},"type":"if","locations":[{"start":{"line":92,"column":2},"end":{"line":94,"column":3}},{"start":{},"end":{}}],"line":92},"12":{"loc":{"start":{"line":122,"column":6},"end":{"line":125,"column":7}},"type":"if","locations":[{"start":{"line":122,"column":6},"end":{"line":125,"column":7}},{"start":{},"end":{}}],"line":122},"13":{"loc":{"start":{"line":127,"column":4},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":130,"column":5}},{"start":{},"end":{}}],"line":127},"14":{"loc":{"start":{"line":131,"column":4},"end":{"line":136,"column":5}},"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":136,"column":5}},{"start":{},"end":{}}],"line":131},"15":{"loc":{"start":{"line":198,"column":2},"end":{"line":200,"column":3}},"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":200,"column":3}},{"start":{},"end":{}}],"line":198},"16":{"loc":{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},{"start":{},"end":{}}],"line":206},"17":{"loc":{"start":{"line":216,"column":2},"end":{"line":218,"column":3}},"type":"if","locations":[{"start":{"line":216,"column":2},"end":{"line":218,"column":3}},{"start":{},"end":{}}],"line":216},"18":{"loc":{"start":{"line":229,"column":4},"end":{"line":244,"column":5}},"type":"if","locations":[{"start":{"line":229,"column":4},"end":{"line":244,"column":5}},{"start":{"line":231,"column":11},"end":{"line":244,"column":5}}],"line":229},"19":{"loc":{"start":{"line":233,"column":6},"end":{"line":235,"column":7}},"type":"if","locations":[{"start":{"line":233,"column":6},"end":{"line":235,"column":7}},{"start":{},"end":{}}],"line":233},"20":{"loc":{"start":{"line":247,"column":4},"end":{"line":265,"column":5}},"type":"if","locations":[{"start":{"line":247,"column":4},"end":{"line":265,"column":5}},{"start":{"line":249,"column":11},"end":{"line":265,"column":5}}],"line":247},"21":{"loc":{"start":{"line":251,"column":6},"end":{"line":253,"column":7}},"type":"if","locations":[{"start":{"line":251,"column":6},"end":{"line":253,"column":7}},{"start":{},"end":{}}],"line":251},"22":{"loc":{"start":{"line":267,"column":4},"end":{"line":269,"column":5}},"type":"if","locations":[{"start":{"line":267,"column":4},"end":{"line":269,"column":5}},{"start":{},"end":{}}],"line":267},"23":{"loc":{"start":{"line":273,"column":4},"end":{"line":286,"column":5}},"type":"if","locations":[{"start":{"line":273,"column":4},"end":{"line":286,"column":5}},{"start":{},"end":{}}],"line":273},"24":{"loc":{"start":{"line":300,"column":4},"end":{"line":314,"column":5}},"type":"if","locations":[{"start":{"line":300,"column":4},"end":{"line":314,"column":5}},{"start":{"line":310,"column":11},"end":{"line":314,"column":5}}],"line":300},"25":{"loc":{"start":{"line":326,"column":8},"end":{"line":329,"column":9}},"type":"if","locations":[{"start":{"line":326,"column":8},"end":{"line":329,"column":9}},{"start":{},"end":{}}],"line":326},"26":{"loc":{"start":{"line":330,"column":8},"end":{"line":332,"column":9}},"type":"if","locations":[{"start":{"line":330,"column":8},"end":{"line":332,"column":9}},{"start":{},"end":{}}],"line":330},"27":{"loc":{"start":{"line":334,"column":6},"end":{"line":355,"column":7}},"type":"if","locations":[{"start":{"line":334,"column":6},"end":{"line":355,"column":7}},{"start":{},"end":{}}],"line":334},"28":{"loc":{"start":{"line":341,"column":10},"end":{"line":343,"column":11}},"type":"if","locations":[{"start":{"line":341,"column":10},"end":{"line":343,"column":11}},{"start":{},"end":{}}],"line":341},"29":{"loc":{"start":{"line":356,"column":6},"end":{"line":364,"column":7}},"type":"if","locations":[{"start":{"line":356,"column":6},"end":{"line":364,"column":7}},{"start":{},"end":{}}],"line":356},"30":{"loc":{"start":{"line":357,"column":8},"end":{"line":362,"column":9}},"type":"if","locations":[{"start":{"line":357,"column":8},"end":{"line":362,"column":9}},{"start":{},"end":{}}],"line":357},"31":{"loc":{"start":{"line":365,"column":6},"end":{"line":367,"column":7}},"type":"if","locations":[{"start":{"line":365,"column":6},"end":{"line":367,"column":7}},{"start":{},"end":{}}],"line":365},"32":{"loc":{"start":{"line":371,"column":6},"end":{"line":375,"column":7}},"type":"if","locations":[{"start":{"line":371,"column":6},"end":{"line":375,"column":7}},{"start":{"line":373,"column":13},"end":{"line":375,"column":7}}],"line":371},"33":{"loc":{"start":{"line":416,"column":4},"end":{"line":418,"column":5}},"type":"if","locations":[{"start":{"line":416,"column":4},"end":{"line":418,"column":5}},{"start":{},"end":{}}],"line":416},"34":{"loc":{"start":{"line":422,"column":6},"end":{"line":437,"column":7}},"type":"if","locations":[{"start":{"line":422,"column":6},"end":{"line":437,"column":7}},{"start":{},"end":{}}],"line":422},"35":{"loc":{"start":{"line":448,"column":2},"end":{"line":451,"column":3}},"type":"if","locations":[{"start":{"line":448,"column":2},"end":{"line":451,"column":3}},{"start":{},"end":{}}],"line":448},"36":{"loc":{"start":{"line":452,"column":2},"end":{"line":455,"column":3}},"type":"if","locations":[{"start":{"line":452,"column":2},"end":{"line":455,"column":3}},{"start":{},"end":{}}],"line":452}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":13,"63":36,"64":74,"65":250,"66":17,"67":47,"68":132,"69":3,"70":3,"71":2,"72":1,"73":3,"74":3,"75":3,"76":3,"77":3,"78":3,"79":3,"80":8,"81":3,"82":3,"83":8,"84":8,"85":7,"86":7,"87":7,"88":2,"89":7,"90":8,"91":8,"92":8,"93":8,"94":15,"95":15,"96":15,"97":9,"98":15,"99":15,"100":15,"101":11,"102":11,"103":8,"104":2,"105":2,"106":6,"107":3,"108":3,"109":3,"110":3,"111":6,"112":6,"113":6,"114":7,"115":3,"116":1,"117":1,"118":1,"119":1,"120":2,"121":1,"122":1,"123":1,"124":2,"125":2,"126":2,"127":4,"128":1,"129":1,"130":2,"131":2,"132":2,"133":1,"134":1,"135":1,"136":2,"137":1,"138":1,"139":2,"140":2,"141":2,"142":2,"143":4,"144":2,"145":2,"146":1,"147":1,"148":1,"149":2,"150":1,"151":5,"152":5,"153":5,"154":12,"155":12,"156":12,"157":30,"158":5,"159":2,"160":2,"161":0,"162":2,"163":2,"164":2,"165":6,"166":2,"167":2,"168":2,"169":6,"170":4,"171":2,"172":2,"173":2,"174":2,"175":2,"176":0,"177":2,"178":2,"179":2,"180":6,"181":2,"182":2,"183":2,"184":2,"185":2,"186":2,"187":6,"188":6,"189":6,"190":0,"191":6,"192":6,"193":2,"194":6,"195":6,"196":6,"197":6,"198":6,"199":6,"200":6,"201":16,"202":6,"203":6,"204":6,"205":2,"206":4,"207":4,"208":0,"209":4,"210":4,"211":4,"212":4,"213":6,"214":4,"215":4,"216":6,"217":6,"218":6,"219":10,"220":6,"221":6,"222":4,"223":2,"224":2,"225":2,"226":6,"227":4,"228":4,"229":6,"230":4,"231":4,"232":6,"233":6,"234":6,"235":10,"236":6,"237":6,"238":10,"239":6,"240":6,"241":12,"242":12,"243":6,"244":6,"245":6,"246":2,"247":2,"248":6,"249":6,"250":6,"251":6,"252":6,"253":6,"254":6,"255":6,"256":6,"257":6,"258":16,"259":6,"260":6,"261":12,"262":0,"263":0,"264":0,"265":6,"266":2,"267":2,"268":2,"269":2,"270":2,"271":2,"272":6,"273":6,"274":14,"275":14,"276":14,"277":28,"278":12,"279":12,"280":16,"281":2,"282":14,"283":2,"284":2,"285":2,"286":2,"287":2,"288":2,"289":2,"290":2,"291":0,"292":2,"293":2,"294":2,"295":2,"296":2,"297":2,"298":6,"299":6,"300":6,"301":6,"302":14,"303":6,"304":0,"305":0,"306":0,"307":0,"308":6,"309":8,"310":0,"311":8,"312":8,"313":8,"314":8,"315":4,"316":4,"317":8,"318":8,"319":8,"320":8,"321":14,"322":14,"323":14,"324":14,"325":14,"326":14,"327":14,"328":14,"329":14,"330":14,"331":14,"332":14,"333":14,"334":14,"335":42,"336":42,"337":42,"338":42,"339":14,"340":14,"341":14,"342":14,"343":14,"344":14,"345":14,"346":14,"347":42,"348":42,"349":42,"350":42,"351":8,"352":8,"353":8,"354":2,"355":2,"356":6,"357":2,"358":2,"359":2,"360":8,"361":8,"362":10,"363":2,"364":2,"365":2,"366":2,"367":2,"368":6,"369":6,"370":6,"371":2,"372":2,"373":6,"374":6,"375":6,"376":2,"377":2,"378":38,"379":38,"380":28,"381":28,"382":10,"383":10,"384":10,"385":0,"386":18,"387":18,"388":18,"389":38,"390":18,"391":12,"392":12,"393":12,"394":16,"395":12,"396":1,"397":1,"398":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":13,"15":36,"16":74,"17":250,"18":17,"19":47,"20":132,"21":3,"22":3,"23":8,"24":1,"25":5,"26":2,"27":6,"28":2,"29":6,"30":38,"31":18,"32":12},"b":{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[2,1],"12":[11,4],"13":[2,6],"14":[3,3],"15":[0,2],"16":[4,2],"17":[0,2],"18":[0,6],"19":[2,4],"20":[2,4],"21":[0,4],"22":[4,2],"23":[4,2],"24":[6,0],"25":[12,16],"26":[2,14],"27":[2,12],"28":[0,2],"29":[6,8],"30":[0,6],"31":[0,8],"32":[4,4],"33":[2,4],"34":[2,8],"35":[28,10],"36":[10,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/math.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function calculateFactorial(n: number, step: number = 1): number {\n    let _n = Math.floor(n);\n\n    if (n < 0) {\n        return Number.NaN;\n    }\n\n    let result = 1;\n\n    while (_n > 1 && Number.isFinite(result)) {\n        result *= _n;\n        _n -= step;\n    }\n\n    return result;\n}\n\nexport function calculateCombin(n: number, k: number): number {\n    const t = Math.min(n - k, k);\n\n    let result = 1;\n\n    for (let i = 1; i <= t; i++) {\n        if (!Number.isFinite(result)) {\n            break;\n        }\n\n        result *= n - i + 1;\n        result /= i;\n    }\n\n    return result;\n}\n\nexport function calculateGcd(a: number, b: number): number {\n    let _a = Math.floor(a);\n    let _b = Math.floor(b);\n\n    while (_b !== 0) {\n        const t = _b;\n        _b = _a % _b;\n        _a = t;\n    }\n\n    return _a;\n}\n\nexport function calculateLcm(a: number, b: number): number {\n    const den = calculateGcd(a, b);\n\n    if (den === 0) {\n        return 0;\n    }\n\n    return Math.abs(a * b) / den;\n}\n\nexport function calculateMdeterm(matrix: number[][]): number {\n    const n = matrix.length;\n\n    if (n === 1) {\n        return matrix[0][0];\n    }\n\n    if (n === 2) {\n        return matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0];\n    }\n\n    let det = 0;\n\n    for (let col = 0; col < n; col++) {\n        det += ((col % 2 === 0 ? 1 : -1) * matrix[0][col] * calculateMdeterm(minor(matrix, 0, col)));\n    }\n\n    return det;\n}\n\nexport function calculateMinverse(matrix: number[][]): number[][] | null {\n    const det = calculateMdeterm(matrix);\n\n    if (det === 0) {\n        return null; // 矩阵不可逆\n    }\n\n    if (matrix.length === 1) {\n        return [[1 / det]];\n    }\n\n    const adjugate = adjoint(matrix);\n    const inverseMatrix = adjugate.map((row) => row.map((value) => value / det));\n\n    return inverseMatrix;\n}\n\nfunction minor(matrix: number[][], row: number, col: number): number[][] {\n    return matrix\n        .filter((_, r) => r !== row)\n        .map((row) => row.filter((_, c) => c !== col));\n}\n\nfunction adjoint(matrix: number[][]): number[][] {\n    const n = matrix.length;\n    const adj = Array.from({ length: n }, () => new Array(n).fill(0));\n\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < n; j++) {\n            const sign = ((i + j) % 2 === 0 ? 1 : -1);\n            adj[j][i] = sign * calculateMdeterm(minor(matrix, i, j));\n        }\n    }\n\n    return adj;\n}\n\nexport function calculateMmult(matrix1: number[][], matrix2: number[][]): number[][] {\n    return matrix1.map((row) => matrix2[0].map((_, colIndex) =>\n        row.reduce((sum, element, rowIndex) => sum + element * matrix2[rowIndex][colIndex], 0)\n    ));\n}\n\nexport function matrixTranspose(matrix: number[][]): number[][] {\n    return matrix[0].map((_, colIndex) => matrix.map((row) => row[colIndex]));\n}\n\nexport function inverseMatrixByLUD(matrix: number[][]) {\n    const { smallPivotDetected, luMatrix, permutation } = performLUDecomposition(matrix);\n\n    if (smallPivotDetected) {\n        return null;\n    }\n\n    return transformMatrix(luMatrix, permutation);\n}\n\nfunction performLUDecomposition(matrix: number[][]) {\n    const decomposedMatrix = matrixTranspose(matrix);\n    const numRows = decomposedMatrix.length;\n    const numCols = decomposedMatrix[0].length;\n    let isRowSwap = true;\n    let smallPivotDetected = false;\n    const luMatrix = createMatrix(numRows, numCols, 0);\n    const permutation = new Array(numCols).fill(0).map((_, index) => index);\n\n    for (let c = 0; c < numCols; c++) {\n        for (let i = 0; i < c; i++) {\n            let value = decomposedMatrix[i][c];\n\n            for (let k = 0; k < i; k++) {\n                value -= luMatrix[i][k] * luMatrix[k][c];\n            }\n\n            luMatrix[i][c] = value;\n        }\n\n        let maxPivot = -Infinity;\n        let pivotRow = c;\n\n        for (let r = c; r < numRows; r++) {\n            let value = decomposedMatrix[r][c];\n\n            for (let k = 0; k < c; k++) {\n                value -= luMatrix[r][k] * luMatrix[k][c];\n            }\n\n            luMatrix[r][c] = value;\n\n            const absValue = Math.abs(value);\n\n            if (absValue > maxPivot) {\n                maxPivot = absValue;\n                pivotRow = r;\n            }\n        }\n\n        if (Math.abs(luMatrix[pivotRow][c]) < 1e-11) {\n            smallPivotDetected = true;\n            break;\n        }\n\n        if (pivotRow !== c) {\n            [luMatrix[c], luMatrix[pivotRow]] = [luMatrix[pivotRow], luMatrix[c]];\n            [decomposedMatrix[c], decomposedMatrix[pivotRow]] = [decomposedMatrix[pivotRow], decomposedMatrix[c]];\n            [permutation[c], permutation[pivotRow]] = [permutation[pivotRow], permutation[c]];\n            isRowSwap = !isRowSwap;\n        }\n\n        const pivotElement = luMatrix[c][c];\n\n        for (let r = c + 1; r < numRows; r++) {\n            luMatrix[r][c] /= pivotElement;\n        }\n    }\n\n    return {\n        rowSwap: isRowSwap,\n        smallPivotDetected,\n        luMatrix,\n        permutation,\n    };\n}\n\nfunction transformMatrix(inputMatrix: number[][], indices: number[]): number[][] {\n    const size = indices.length;\n    const identityMatrix = createMatrix(size, size, 0);\n\n    for (let i = 0; i < size; i++) {\n        identityMatrix[i][i] = 1;\n    }\n\n    const resultMatrix = createMatrix(size, size, 0);\n\n    for (let rowIndex = 0; rowIndex < size; rowIndex++) {\n        const index = indices[rowIndex];\n        for (let colIndex = 0; colIndex < size; colIndex++) {\n            resultMatrix[rowIndex][colIndex] = identityMatrix[index][colIndex];\n        }\n    }\n\n    for (let pivot = 0; pivot < size; pivot++) {\n        const currentRow = resultMatrix[pivot];\n\n        for (let row = pivot + 1; row < size; row++) {\n            const factor = inputMatrix[row][pivot];\n\n            for (let column = 0; column < size; column++) {\n                resultMatrix[row][column] -= currentRow[column] * factor;\n            }\n        }\n    }\n\n    for (let row = size - 1; row >= 0; row--) {\n        const currentRow = resultMatrix[row];\n        const pivotElement = inputMatrix[row][row];\n\n        for (let column = 0; column < size; column++) {\n            currentRow[column] /= pivotElement;\n        }\n\n        for (let upperRow = 0; upperRow < row; upperRow++) {\n            const upperFactor = inputMatrix[upperRow][row];\n\n            for (let upperCol = 0; upperCol < size; upperCol++) {\n                resultMatrix[upperRow][upperCol] -= currentRow[upperCol] * upperFactor;\n            }\n        }\n    }\n\n    return resultMatrix;\n}\n\nfunction createMatrix(rows: number, cols: number, initialValue: number): number[][] {\n    const matrix: number[][] = [];\n\n    for (let r = 0; r < rows; r++) {\n        matrix[r] = [];\n\n        for (let c = 0; c < cols; c++) {\n            matrix[r].push(initialValue);\n        }\n    }\n\n    return matrix;\n}\n\nexport function inverseMatrixByUSV(matrix: number[][]): number[][] | null {\n    const matrixUSV = getMatrixUSV(matrix);\n\n    if (!matrixUSV) {\n        return null;\n    }\n\n    const { matrixU, matrixS, matrixV } = matrixUSV;\n\n    const matrixUT = matrixTranspose(matrixU);\n    const newMatrix = Array.from({ length: matrixS.length }, () => new Array(matrix[0].length).fill(0));\n    const EPSILON = Math.max(matrix.length, matrix[0].length) * Number.EPSILON * matrixS[0];\n\n    for (let i = 0; i < matrixS.length; i++) {\n        if (Math.abs(matrixS[i]) > EPSILON) {\n            newMatrix[i][i] = 1 / matrixS[i];\n        }\n    }\n\n    return calculateMmult(matrixV, calculateMmult(newMatrix, matrixUT));\n}\n\n// eslint-disable-next-line\nfunction getMatrixUSV(matrix: number[][]) {\n    const matrixU = matrixTranspose(matrix);\n    const m = matrixU.length;\n    const n = matrixU[0].length;\n\n    if (m < n) {\n        return null;\n    }\n\n    const matrixF = new Array(n).fill(0);\n    const matrixS = new Array(n).fill(0);\n    const matrixV = Array.from({ length: n }, () => new Array(n).fill(0));\n\n    let EPSILON = Number.EPSILON;\n    let sqrt = 0;\n    let msp = 0;\n    let maxCoeffecient = 0;\n\n    for (let i = 0; i < n; i++) {\n        matrixF[i] = sqrt;\n        msp = getMatrixSumProductOfRows(matrixU, i, m, i, i);\n\n        if (msp <= 1e-64 / EPSILON) {\n            sqrt = 0;\n        } else {\n            sqrt = Math.sqrt(msp);\n\n            if (matrixU[i][i] >= 0) {\n                sqrt = -sqrt;\n            }\n\n            const temp = matrixU[i][i] * sqrt - msp;\n            matrixU[i][i] -= sqrt;\n\n            for (let j = i + 1; j < n; j++) {\n                msp = getMatrixSumProductOfRows(matrixU, i, m, i, j);\n\n                for (let k = i; k < m; k++) {\n                    matrixU[k][j] += msp / temp * matrixU[k][i];\n                }\n            }\n        }\n\n        matrixS[i] = sqrt;\n\n        msp = getMatrixSumProductOfCols(matrixU, i + 1, n, i, i);\n\n        if (msp <= 1e-64 / EPSILON) {\n            sqrt = 0;\n        } else {\n            sqrt = Math.sqrt(msp);\n\n            if (matrixU[i][i + 1] >= 0) {\n                sqrt = -sqrt;\n            }\n\n            const temp = matrixU[i][i + 1] * sqrt - msp;\n            matrixU[i][i + 1] -= sqrt;\n\n            for (let j = i + 1; j < n; j++) {\n                matrixF[j] = matrixU[i][j] / temp;\n            }\n\n            for (let j = i + 1; j < m; j++) {\n                msp = getMatrixSumProductOfCols(matrixU, i + 1, n, j, i);\n\n                for (let k = i + 1; k < n; k++) {\n                    matrixU[j][k] += msp * matrixF[k];\n                }\n            }\n        }\n\n        const coefficient = Math.abs(matrixS[i]) + Math.abs(matrixF[i]);\n\n        if (coefficient > maxCoeffecient) {\n            maxCoeffecient = coefficient;\n        }\n    }\n\n    let o = 0;\n\n    for (let i = n - 1; i >= 0; i--) {\n        if (sqrt !== 0) {\n            for (let j = o; j < n; j++) {\n                matrixV[j][i] = matrixU[i][j] / (sqrt * matrixU[i][i + 1]);\n            }\n\n            for (let j = o; j < n; j++) {\n                msp = 0;\n\n                for (let k = o; k < n; k++) {\n                    msp += matrixU[i][k] * matrixV[k][j];\n                }\n\n                for (let k = o; k < n; k++) {\n                    matrixV[k][j] += msp * matrixV[k][i];\n                }\n            }\n        }\n\n        for (let j = o; j < n; j++) {\n            matrixV[i][j] = 0;\n            matrixV[j][i] = 0;\n        }\n\n        matrixV[i][i] = 1;\n        sqrt = matrixF[i];\n        o = i;\n    }\n\n    for (let i = n - 1; i >= 0; i--) {\n        sqrt = matrixS[i];\n\n        for (let j = i + 1; j < n; j++) {\n            matrixU[i][j] = 0;\n        }\n\n        if (sqrt !== 0) {\n            for (let j = i + 1; j < n; j++) {\n                msp = getMatrixSumProductOfRows(matrixU, i + 1, m, i, j);\n\n                for (let k = i; k < m; k++) {\n                    matrixU[k][j] += msp / (matrixU[i][i] * sqrt) * matrixU[k][i];\n                }\n            }\n\n            for (let j = i; j < m; j++) {\n                matrixU[j][i] /= sqrt;\n            }\n        } else {\n            for (let j = i; j < m; j++) {\n                matrixU[j][i] = 0;\n            }\n        }\n\n        matrixU[i][i] += 1;\n    }\n\n    EPSILON *= maxCoeffecient;\n\n    let a = 0;\n    let b = 0;\n    let ratio = 0;\n\n    for (let i = n - 1; i >= 0; i--) {\n        for (let S = 0; S < 50; S++) {\n            let isNeedHandle = false;\n            let index = i;\n\n            for (; index >= 0; index--) {\n                if (Math.abs(matrixF[index]) <= EPSILON) {\n                    isNeedHandle = true;\n                    break;\n                }\n\n                if (Math.abs(matrixS[index - 1]) <= EPSILON) {\n                    break;\n                }\n            }\n\n            if (!isNeedHandle) {\n                let temp1 = 0;\n                let temp2 = 1;\n\n                for (let j = index; j < i + 1; j++) {\n                    a = temp2 * matrixF[j];\n                    b = matrixS[j];\n                    matrixF[j] *= temp1;\n\n                    if (Math.abs(a) <= EPSILON) {\n                        break;\n                    }\n\n                    ratio = computeHypotenuse(a, b);\n                    matrixS[j] = ratio;\n                    temp1 = b / ratio;\n                    temp2 = -a / ratio;\n\n                    for (let k = 0; k < m; k++) {\n                        const value1 = matrixU[k][index - 1];\n                        const value2 = matrixU[k][j];\n\n                        matrixU[k][index - 1] = value1 * temp1 + value2 * temp2;\n                        matrixU[k][j] = -value1 * temp2 + value2 * temp1;\n                    }\n                }\n            }\n\n            if (index === i) {\n                if (matrixS[i] < 0) {\n                    matrixS[i] = -matrixS[i];\n\n                    for (let j = 0; j < n; j++) {\n                        matrixV[j][i] = -matrixV[j][i];\n                    }\n                }\n\n                break;\n            }\n\n            if (S >= 49) {\n                return null;\n            }\n\n            let indexValue = matrixS[index];\n\n            a = ((matrixS[i - 1] - matrixS[i]) * (matrixS[i - 1] + matrixS[i]) + (matrixF[i - 1] - matrixF[i]) * (matrixF[i - 1] + matrixF[i])) / (2 * matrixF[i] * matrixS[i - 1]);\n            ratio = computeHypotenuse(a, 1);\n\n            if (a < 0) {\n                a = ((indexValue - matrixS[i]) * (indexValue + matrixS[i]) + matrixF[i] * (matrixS[i - 1] / (a - ratio) - matrixF[i])) / indexValue;\n            } else {\n                a = ((indexValue - matrixS[i]) * (indexValue + matrixS[i]) + matrixF[i] * (matrixS[i - 1] / (a + ratio) - matrixF[i])) / indexValue;\n            }\n\n            let temp1 = 1;\n            let temp2 = 1;\n\n            for (let j = index + 1; j < i + 1; j++) {\n                let matrixFValue = matrixF[j];\n                let matrixSValue = matrixS[j];\n\n                b = temp2 * matrixFValue;\n                matrixFValue *= temp1;\n                ratio = computeHypotenuse(a, b);\n                matrixF[j - 1] = ratio;\n\n                temp1 = a / ratio;\n                temp2 = b / ratio;\n                a = indexValue * temp1 + matrixFValue * temp2;\n                b = matrixSValue * temp2;\n                matrixFValue = -indexValue * temp2 + matrixFValue * temp1;\n                matrixSValue *= temp1;\n\n                for (let k = 0; k < n; k++) {\n                    const value1 = matrixV[k][j - 1];\n                    const value2 = matrixV[k][j];\n\n                    matrixV[k][j - 1] = value1 * temp1 + value2 * temp2;\n                    matrixV[k][j] = -value1 * temp2 + value2 * temp1;\n                }\n\n                ratio = computeHypotenuse(a, b);\n                matrixS[j - 1] = ratio;\n                temp1 = a / ratio;\n                temp2 = b / ratio;\n                a = temp1 * matrixFValue + temp2 * matrixSValue;\n                indexValue = -temp2 * matrixFValue + temp1 * matrixSValue;\n\n                for (let k = 0; k < m; k++) {\n                    const value1 = matrixU[k][j - 1];\n                    const value2 = matrixU[k][j];\n\n                    matrixU[k][j - 1] = value1 * temp1 + value2 * temp2;\n                    matrixU[k][j] = -value1 * temp2 + value2 * temp1;\n                }\n            }\n\n            matrixF[index] = 0;\n            matrixF[i] = a;\n            matrixS[i] = indexValue;\n        }\n    }\n\n    for (let i = 0; i < matrixS.length; i++) {\n        if (matrixS[i] < EPSILON) {\n            matrixS[i] = 0;\n        }\n    }\n\n    for (let i = 0; i < n; i++) {\n        for (let j = i - 1; j >= 0; j--) {\n            if (matrixS[j] < matrixS[i]) {\n                const temp = matrixS[j];\n                matrixS[j] = matrixS[i];\n                matrixS[i] = temp;\n\n                for (let k = 0; k < matrixU.length; k++) {\n                    const temp = matrixU[k][i];\n                    matrixU[k][i] = matrixU[k][j];\n                    matrixU[k][j] = temp;\n                }\n\n                for (let k = 0; k < matrixV.length; k++) {\n                    const temp = matrixV[k][i];\n                    matrixV[k][i] = matrixV[k][j];\n                    matrixV[k][j] = temp;\n                }\n\n                i = j;\n            }\n        }\n    }\n\n    return {\n        matrixU,\n        matrixS,\n        matrixV,\n    };\n}\n\nfunction computeHypotenuse(a: number, b: number): number {\n    let ratio = 0;\n\n    if (Math.abs(a) > Math.abs(b)) {\n        ratio = b / a;\n        return Math.abs(a) * Math.sqrt(1 + ratio * ratio);\n    }\n\n    if (b !== 0) {\n        ratio = a / b;\n        return Math.abs(b) * Math.sqrt(1 + ratio * ratio);\n    }\n\n    return 0;\n}\n\nfunction getMatrixSumProductOfRows(matrix: number[][], startRow: number, endRow: number, col1: number, col2: number): number {\n    let sum = 0;\n\n    for (let i = startRow; i < endRow; i++) {\n        sum += matrix[i][col1] * matrix[i][col2];\n    }\n\n    return sum;\n}\n\nfunction getMatrixSumProductOfCols(matrix: number[][], startCol: number, endCol: number, row1: number, row2: number): number {\n    let sum = 0;\n\n    for (let i = startCol; i < endCol; i++) {\n        sum += matrix[row1][i] * matrix[row2][i];\n    }\n\n    return sum;\n}\n\nexport const romanToArabicMap = new Map<string, number>([\n    ['I', 1],\n    ['V', 5],\n    ['X', 10],\n    ['L', 50],\n    ['C', 100],\n    ['D', 500],\n    ['M', 1000],\n]);\n\nexport const arabicToRomanMap = new Map<number, string>([\n    [1, 'I'],\n    [4, 'IV'],\n    [5, 'V'],\n    [9, 'IX'],\n    [10, 'X'],\n    [40, 'XL'],\n    [45, 'VL'],\n    [49, 'IL'],\n    [50, 'L'],\n    [90, 'XC'],\n    [95, 'VC'],\n    [99, 'IC'],\n    [100, 'C'],\n    [400, 'CD'],\n    [450, 'LD'],\n    [490, 'XD'],\n    [495, 'VD'],\n    [499, 'ID'],\n    [500, 'D'],\n    [900, 'CM'],\n    [950, 'LM'],\n    [990, 'XM'],\n    [995, 'VM'],\n    [999, 'IM'],\n    [1000, 'M'],\n]);\n\n/**\n * form: A number specifying the type of roman numeral you want.\n * The roman numeral style ranges from Classic to Simplified, becoming more concise as the value of form increases\n * 0 Classic\n * 1 More concise\n * 2 More concise\n * 3 More concise\n * 4 Simplified\n */\nexport const romanFormArray: number[][] = [\n    [1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000, 4000],\n    [1, 4, 5, 9, 10, 40, 45, 50, 90, 95, 100, 400, 450, 500, 900, 950, 1000, 4000],\n    [1, 4, 5, 9, 10, 40, 45, 49, 50, 90, 95, 99, 100, 400, 450, 490, 500, 900, 950, 990, 1000, 4000],\n    [1, 4, 5, 9, 10, 40, 45, 49, 50, 90, 95, 99, 100, 400, 450, 490, 495, 500, 900, 950, 990, 995, 1000, 4000],\n    [1, 4, 5, 9, 10, 40, 45, 49, 50, 90, 95, 99, 100, 400, 450, 490, 495, 499, 500, 900, 950, 990, 995, 999, 1000, 4000],\n];\n"],"mappings":"AAgBO,gBAAS,mBAAmB,GAAW,OAAe,GAAW;AACpE,MAAI,KAAK,KAAK,MAAM,CAAC;AAErB,MAAI,IAAI,GAAG;AACP,WAAO,OAAO;AAAA,EAClB;AAEA,MAAI,SAAS;AAEb,SAAO,KAAK,KAAK,OAAO,SAAS,MAAM,GAAG;AACtC,cAAU;AACV,UAAM;AAAA,EACV;AAEA,SAAO;AACX;AAEO,gBAAS,gBAAgB,GAAW,GAAmB;AAC1D,QAAM,IAAI,KAAK,IAAI,IAAI,GAAG,CAAC;AAE3B,MAAI,SAAS;AAEb,WAAS,IAAI,GAAG,KAAK,GAAG,KAAK;AACzB,QAAI,CAAC,OAAO,SAAS,MAAM,GAAG;AAC1B;AAAA,IACJ;AAEA,cAAU,IAAI,IAAI;AAClB,cAAU;AAAA,EACd;AAEA,SAAO;AACX;AAEO,gBAAS,aAAa,GAAW,GAAmB;AACvD,MAAI,KAAK,KAAK,MAAM,CAAC;AACrB,MAAI,KAAK,KAAK,MAAM,CAAC;AAErB,SAAO,OAAO,GAAG;AACb,UAAM,IAAI;AACV,SAAK,KAAK;AACV,SAAK;AAAA,EACT;AAEA,SAAO;AACX;AAEO,gBAAS,aAAa,GAAW,GAAmB;AACvD,QAAM,MAAM,aAAa,GAAG,CAAC;AAE7B,MAAI,QAAQ,GAAG;AACX,WAAO;AAAA,EACX;AAEA,SAAO,KAAK,IAAI,IAAI,CAAC,IAAI;AAC7B;AAEO,gBAAS,iBAAiB,QAA4B;AACzD,QAAM,IAAI,OAAO;AAEjB,MAAI,MAAM,GAAG;AACT,WAAO,OAAO,CAAC,EAAE,CAAC;AAAA,EACtB;AAEA,MAAI,MAAM,GAAG;AACT,WAAO,OAAO,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,EAAE,CAAC;AAAA,EACnE;AAEA,MAAI,MAAM;AAEV,WAAS,MAAM,GAAG,MAAM,GAAG,OAAO;AAC9B,YAAS,MAAM,MAAM,IAAI,IAAI,MAAM,OAAO,CAAC,EAAE,GAAG,IAAI,iBAAiB,MAAM,QAAQ,GAAG,GAAG,CAAC;AAAA,EAC9F;AAEA,SAAO;AACX;AAEO,gBAAS,kBAAkB,QAAuC;AACrE,QAAM,MAAM,iBAAiB,MAAM;AAEnC,MAAI,QAAQ,GAAG;AACX,WAAO;AAAA,EACX;AAEA,MAAI,OAAO,WAAW,GAAG;AACrB,WAAO,CAAC,CAAC,IAAI,GAAG,CAAC;AAAA,EACrB;AAEA,QAAM,WAAW,QAAQ,MAAM;AAC/B,QAAM,gBAAgB,SAAS,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,QAAQ,GAAG,CAAC;AAE3E,SAAO;AACX;AAEA,SAAS,MAAM,QAAoB,KAAa,KAAyB;AACrE,SAAO,OACF,OAAO,CAAC,GAAG,MAAM,MAAM,GAAG,EAC1B,IAAI,CAACA,SAAQA,KAAI,OAAO,CAAC,GAAG,MAAM,MAAM,GAAG,CAAC;AACrD;AAEA,SAAS,QAAQ,QAAgC;AAC7C,QAAM,IAAI,OAAO;AACjB,QAAM,MAAM,MAAM,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;AAEhE,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,YAAM,QAAS,IAAI,KAAK,MAAM,IAAI,IAAI;AACtC,UAAI,CAAC,EAAE,CAAC,IAAI,OAAO,iBAAiB,MAAM,QAAQ,GAAG,CAAC,CAAC;AAAA,IAC3D;AAAA,EACJ;AAEA,SAAO;AACX;AAEO,gBAAS,eAAe,SAAqB,SAAiC;AACjF,SAAO,QAAQ,IAAI,CAAC,QAAQ,QAAQ,CAAC,EAAE;AAAA,IAAI,CAAC,GAAG,aAC3C,IAAI,OAAO,CAAC,KAAK,SAAS,aAAa,MAAM,UAAU,QAAQ,QAAQ,EAAE,QAAQ,GAAG,CAAC;AAAA,EACzF,CAAC;AACL;AAEO,gBAAS,gBAAgB,QAAgC;AAC5D,SAAO,OAAO,CAAC,EAAE,IAAI,CAAC,GAAG,aAAa,OAAO,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC;AAC5E;AAEO,gBAAS,mBAAmB,QAAoB;AACnD,QAAM,EAAE,oBAAoB,UAAU,YAAY,IAAI,uBAAuB,MAAM;AAEnF,MAAI,oBAAoB;AACpB,WAAO;AAAA,EACX;AAEA,SAAO,gBAAgB,UAAU,WAAW;AAChD;AAEA,SAAS,uBAAuB,QAAoB;AAChD,QAAM,mBAAmB,gBAAgB,MAAM;AAC/C,QAAM,UAAU,iBAAiB;AACjC,QAAM,UAAU,iBAAiB,CAAC,EAAE;AACpC,MAAI,YAAY;AAChB,MAAI,qBAAqB;AACzB,QAAM,WAAW,aAAa,SAAS,SAAS,CAAC;AACjD,QAAM,cAAc,IAAI,MAAM,OAAO,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,UAAU,KAAK;AAEtE,WAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAC9B,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,UAAI,QAAQ,iBAAiB,CAAC,EAAE,CAAC;AAEjC,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,iBAAS,SAAS,CAAC,EAAE,CAAC,IAAI,SAAS,CAAC,EAAE,CAAC;AAAA,MAC3C;AAEA,eAAS,CAAC,EAAE,CAAC,IAAI;AAAA,IACrB;AAEA,QAAI,WAAW;AACf,QAAI,WAAW;AAEf,aAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAC9B,UAAI,QAAQ,iBAAiB,CAAC,EAAE,CAAC;AAEjC,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,iBAAS,SAAS,CAAC,EAAE,CAAC,IAAI,SAAS,CAAC,EAAE,CAAC;AAAA,MAC3C;AAEA,eAAS,CAAC,EAAE,CAAC,IAAI;AAEjB,YAAM,WAAW,KAAK,IAAI,KAAK;AAE/B,UAAI,WAAW,UAAU;AACrB,mBAAW;AACX,mBAAW;AAAA,MACf;AAAA,IACJ;AAEA,QAAI,KAAK,IAAI,SAAS,QAAQ,EAAE,CAAC,CAAC,IAAI,OAAO;AACzC,2BAAqB;AACrB;AAAA,IACJ;AAEA,QAAI,aAAa,GAAG;AAChB,OAAC,SAAS,CAAC,GAAG,SAAS,QAAQ,CAAC,IAAI,CAAC,SAAS,QAAQ,GAAG,SAAS,CAAC,CAAC;AACpE,OAAC,iBAAiB,CAAC,GAAG,iBAAiB,QAAQ,CAAC,IAAI,CAAC,iBAAiB,QAAQ,GAAG,iBAAiB,CAAC,CAAC;AACpG,OAAC,YAAY,CAAC,GAAG,YAAY,QAAQ,CAAC,IAAI,CAAC,YAAY,QAAQ,GAAG,YAAY,CAAC,CAAC;AAChF,kBAAY,CAAC;AAAA,IACjB;AAEA,UAAM,eAAe,SAAS,CAAC,EAAE,CAAC;AAElC,aAAS,IAAI,IAAI,GAAG,IAAI,SAAS,KAAK;AAClC,eAAS,CAAC,EAAE,CAAC,KAAK;AAAA,IACtB;AAAA,EACJ;AAEA,SAAO;AAAA,IACH,SAAS;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACJ;AAEA,SAAS,gBAAgB,aAAyB,SAA+B;AAC7E,QAAM,OAAO,QAAQ;AACrB,QAAM,iBAAiB,aAAa,MAAM,MAAM,CAAC;AAEjD,WAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC3B,mBAAe,CAAC,EAAE,CAAC,IAAI;AAAA,EAC3B;AAEA,QAAM,eAAe,aAAa,MAAM,MAAM,CAAC;AAE/C,WAAS,WAAW,GAAG,WAAW,MAAM,YAAY;AAChD,UAAM,QAAQ,QAAQ,QAAQ;AAC9B,aAAS,WAAW,GAAG,WAAW,MAAM,YAAY;AAChD,mBAAa,QAAQ,EAAE,QAAQ,IAAI,eAAe,KAAK,EAAE,QAAQ;AAAA,IACrE;AAAA,EACJ;AAEA,WAAS,QAAQ,GAAG,QAAQ,MAAM,SAAS;AACvC,UAAM,aAAa,aAAa,KAAK;AAErC,aAAS,MAAM,QAAQ,GAAG,MAAM,MAAM,OAAO;AACzC,YAAM,SAAS,YAAY,GAAG,EAAE,KAAK;AAErC,eAAS,SAAS,GAAG,SAAS,MAAM,UAAU;AAC1C,qBAAa,GAAG,EAAE,MAAM,KAAK,WAAW,MAAM,IAAI;AAAA,MACtD;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,MAAM,OAAO,GAAG,OAAO,GAAG,OAAO;AACtC,UAAM,aAAa,aAAa,GAAG;AACnC,UAAM,eAAe,YAAY,GAAG,EAAE,GAAG;AAEzC,aAAS,SAAS,GAAG,SAAS,MAAM,UAAU;AAC1C,iBAAW,MAAM,KAAK;AAAA,IAC1B;AAEA,aAAS,WAAW,GAAG,WAAW,KAAK,YAAY;AAC/C,YAAM,cAAc,YAAY,QAAQ,EAAE,GAAG;AAE7C,eAAS,WAAW,GAAG,WAAW,MAAM,YAAY;AAChD,qBAAa,QAAQ,EAAE,QAAQ,KAAK,WAAW,QAAQ,IAAI;AAAA,MAC/D;AAAA,IACJ;AAAA,EACJ;AAEA,SAAO;AACX;AAEA,SAAS,aAAa,MAAc,MAAc,cAAkC;AAChF,QAAM,SAAqB,CAAC;AAE5B,WAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC3B,WAAO,CAAC,IAAI,CAAC;AAEb,aAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC3B,aAAO,CAAC,EAAE,KAAK,YAAY;AAAA,IAC/B;AAAA,EACJ;AAEA,SAAO;AACX;AAEO,gBAAS,mBAAmB,QAAuC;AACtE,QAAM,YAAY,aAAa,MAAM;AAErC,MAAI,CAAC,WAAW;AACZ,WAAO;AAAA,EACX;AAEA,QAAM,EAAE,SAAS,SAAS,QAAQ,IAAI;AAEtC,QAAM,WAAW,gBAAgB,OAAO;AACxC,QAAM,YAAY,MAAM,KAAK,EAAE,QAAQ,QAAQ,OAAO,GAAG,MAAM,IAAI,MAAM,OAAO,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AAClG,QAAM,UAAU,KAAK,IAAI,OAAO,QAAQ,OAAO,CAAC,EAAE,MAAM,IAAI,OAAO,UAAU,QAAQ,CAAC;AAEtF,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,QAAI,KAAK,IAAI,QAAQ,CAAC,CAAC,IAAI,SAAS;AAChC,gBAAU,CAAC,EAAE,CAAC,IAAI,IAAI,QAAQ,CAAC;AAAA,IACnC;AAAA,EACJ;AAEA,SAAO,eAAe,SAAS,eAAe,WAAW,QAAQ,CAAC;AACtE;AAGA,SAAS,aAAa,QAAoB;AACtC,QAAM,UAAU,gBAAgB,MAAM;AACtC,QAAM,IAAI,QAAQ;AAClB,QAAM,IAAI,QAAQ,CAAC,EAAE;AAErB,MAAI,IAAI,GAAG;AACP,WAAO;AAAA,EACX;AAEA,QAAM,UAAU,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC;AACnC,QAAM,UAAU,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC;AACnC,QAAM,UAAU,MAAM,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;AAEpE,MAAI,UAAU,OAAO;AACrB,MAAI,OAAO;AACX,MAAI,MAAM;AACV,MAAI,iBAAiB;AAErB,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,YAAQ,CAAC,IAAI;AACb,UAAM,0BAA0B,SAAS,GAAG,GAAG,GAAG,CAAC;AAEnD,QAAI,OAAO,QAAQ,SAAS;AACxB,aAAO;AAAA,IACX,OAAO;AACH,aAAO,KAAK,KAAK,GAAG;AAEpB,UAAI,QAAQ,CAAC,EAAE,CAAC,KAAK,GAAG;AACpB,eAAO,CAAC;AAAA,MACZ;AAEA,YAAM,OAAO,QAAQ,CAAC,EAAE,CAAC,IAAI,OAAO;AACpC,cAAQ,CAAC,EAAE,CAAC,KAAK;AAEjB,eAAS,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK;AAC5B,cAAM,0BAA0B,SAAS,GAAG,GAAG,GAAG,CAAC;AAEnD,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,kBAAQ,CAAC,EAAE,CAAC,KAAK,MAAM,OAAO,QAAQ,CAAC,EAAE,CAAC;AAAA,QAC9C;AAAA,MACJ;AAAA,IACJ;AAEA,YAAQ,CAAC,IAAI;AAEb,UAAM,0BAA0B,SAAS,IAAI,GAAG,GAAG,GAAG,CAAC;AAEvD,QAAI,OAAO,QAAQ,SAAS;AACxB,aAAO;AAAA,IACX,OAAO;AACH,aAAO,KAAK,KAAK,GAAG;AAEpB,UAAI,QAAQ,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG;AACxB,eAAO,CAAC;AAAA,MACZ;AAEA,YAAM,OAAO,QAAQ,CAAC,EAAE,IAAI,CAAC,IAAI,OAAO;AACxC,cAAQ,CAAC,EAAE,IAAI,CAAC,KAAK;AAErB,eAAS,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK;AAC5B,gBAAQ,CAAC,IAAI,QAAQ,CAAC,EAAE,CAAC,IAAI;AAAA,MACjC;AAEA,eAAS,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK;AAC5B,cAAM,0BAA0B,SAAS,IAAI,GAAG,GAAG,GAAG,CAAC;AAEvD,iBAAS,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK;AAC5B,kBAAQ,CAAC,EAAE,CAAC,KAAK,MAAM,QAAQ,CAAC;AAAA,QACpC;AAAA,MACJ;AAAA,IACJ;AAEA,UAAM,cAAc,KAAK,IAAI,QAAQ,CAAC,CAAC,IAAI,KAAK,IAAI,QAAQ,CAAC,CAAC;AAE9D,QAAI,cAAc,gBAAgB;AAC9B,uBAAiB;AAAA,IACrB;AAAA,EACJ;AAEA,MAAI,IAAI;AAER,WAAS,IAAI,IAAI,GAAG,KAAK,GAAG,KAAK;AAC7B,QAAI,SAAS,GAAG;AACZ,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,gBAAQ,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,EAAE,CAAC,KAAK,OAAO,QAAQ,CAAC,EAAE,IAAI,CAAC;AAAA,MAC5D;AAEA,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,cAAM;AAEN,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,iBAAO,QAAQ,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,EAAE,CAAC;AAAA,QACvC;AAEA,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,kBAAQ,CAAC,EAAE,CAAC,KAAK,MAAM,QAAQ,CAAC,EAAE,CAAC;AAAA,QACvC;AAAA,MACJ;AAAA,IACJ;AAEA,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,cAAQ,CAAC,EAAE,CAAC,IAAI;AAChB,cAAQ,CAAC,EAAE,CAAC,IAAI;AAAA,IACpB;AAEA,YAAQ,CAAC,EAAE,CAAC,IAAI;AAChB,WAAO,QAAQ,CAAC;AAChB,QAAI;AAAA,EACR;AAEA,WAAS,IAAI,IAAI,GAAG,KAAK,GAAG,KAAK;AAC7B,WAAO,QAAQ,CAAC;AAEhB,aAAS,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK;AAC5B,cAAQ,CAAC,EAAE,CAAC,IAAI;AAAA,IACpB;AAEA,QAAI,SAAS,GAAG;AACZ,eAAS,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK;AAC5B,cAAM,0BAA0B,SAAS,IAAI,GAAG,GAAG,GAAG,CAAC;AAEvD,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,kBAAQ,CAAC,EAAE,CAAC,KAAK,OAAO,QAAQ,CAAC,EAAE,CAAC,IAAI,QAAQ,QAAQ,CAAC,EAAE,CAAC;AAAA,QAChE;AAAA,MACJ;AAEA,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,gBAAQ,CAAC,EAAE,CAAC,KAAK;AAAA,MACrB;AAAA,IACJ,OAAO;AACH,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,gBAAQ,CAAC,EAAE,CAAC,IAAI;AAAA,MACpB;AAAA,IACJ;AAEA,YAAQ,CAAC,EAAE,CAAC,KAAK;AAAA,EACrB;AAEA,aAAW;AAEX,MAAI,IAAI;AACR,MAAI,IAAI;AACR,MAAI,QAAQ;AAEZ,WAAS,IAAI,IAAI,GAAG,KAAK,GAAG,KAAK;AAC7B,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,UAAI,eAAe;AACnB,UAAI,QAAQ;AAEZ,aAAO,SAAS,GAAG,SAAS;AACxB,YAAI,KAAK,IAAI,QAAQ,KAAK,CAAC,KAAK,SAAS;AACrC,yBAAe;AACf;AAAA,QACJ;AAEA,YAAI,KAAK,IAAI,QAAQ,QAAQ,CAAC,CAAC,KAAK,SAAS;AACzC;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,CAAC,cAAc;AACf,YAAIC,SAAQ;AACZ,YAAIC,SAAQ;AAEZ,iBAAS,IAAI,OAAO,IAAI,IAAI,GAAG,KAAK;AAChC,cAAIA,SAAQ,QAAQ,CAAC;AACrB,cAAI,QAAQ,CAAC;AACb,kBAAQ,CAAC,KAAKD;AAEd,cAAI,KAAK,IAAI,CAAC,KAAK,SAAS;AACxB;AAAA,UACJ;AAEA,kBAAQ,kBAAkB,GAAG,CAAC;AAC9B,kBAAQ,CAAC,IAAI;AACb,UAAAA,SAAQ,IAAI;AACZ,UAAAC,SAAQ,CAAC,IAAI;AAEb,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,kBAAM,SAAS,QAAQ,CAAC,EAAE,QAAQ,CAAC;AACnC,kBAAM,SAAS,QAAQ,CAAC,EAAE,CAAC;AAE3B,oBAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,SAASD,SAAQ,SAASC;AAClD,oBAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,SAASA,SAAQ,SAASD;AAAA,UAC/C;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,UAAU,GAAG;AACb,YAAI,QAAQ,CAAC,IAAI,GAAG;AAChB,kBAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;AAEvB,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,oBAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;AAAA,UACjC;AAAA,QACJ;AAEA;AAAA,MACJ;AAEA,UAAI,KAAK,IAAI;AACT,eAAO;AAAA,MACX;AAEA,UAAI,aAAa,QAAQ,KAAK;AAE9B,YAAM,QAAQ,IAAI,CAAC,IAAI,QAAQ,CAAC,MAAM,QAAQ,IAAI,CAAC,IAAI,QAAQ,CAAC,MAAM,QAAQ,IAAI,CAAC,IAAI,QAAQ,CAAC,MAAM,QAAQ,IAAI,CAAC,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,QAAQ,IAAI,CAAC;AACrK,cAAQ,kBAAkB,GAAG,CAAC;AAE9B,UAAI,IAAI,GAAG;AACP,cAAM,aAAa,QAAQ,CAAC,MAAM,aAAa,QAAQ,CAAC,KAAK,QAAQ,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,IAAI,SAAS,QAAQ,CAAC,MAAM;AAAA,MAC7H,OAAO;AACH,cAAM,aAAa,QAAQ,CAAC,MAAM,aAAa,QAAQ,CAAC,KAAK,QAAQ,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,IAAI,SAAS,QAAQ,CAAC,MAAM;AAAA,MAC7H;AAEA,UAAI,QAAQ;AACZ,UAAI,QAAQ;AAEZ,eAAS,IAAI,QAAQ,GAAG,IAAI,IAAI,GAAG,KAAK;AACpC,YAAI,eAAe,QAAQ,CAAC;AAC5B,YAAI,eAAe,QAAQ,CAAC;AAE5B,YAAI,QAAQ;AACZ,wBAAgB;AAChB,gBAAQ,kBAAkB,GAAG,CAAC;AAC9B,gBAAQ,IAAI,CAAC,IAAI;AAEjB,gBAAQ,IAAI;AACZ,gBAAQ,IAAI;AACZ,YAAI,aAAa,QAAQ,eAAe;AACxC,YAAI,eAAe;AACnB,uBAAe,CAAC,aAAa,QAAQ,eAAe;AACpD,wBAAgB;AAEhB,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,gBAAM,SAAS,QAAQ,CAAC,EAAE,IAAI,CAAC;AAC/B,gBAAM,SAAS,QAAQ,CAAC,EAAE,CAAC;AAE3B,kBAAQ,CAAC,EAAE,IAAI,CAAC,IAAI,SAAS,QAAQ,SAAS;AAC9C,kBAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,QAAQ,SAAS;AAAA,QAC/C;AAEA,gBAAQ,kBAAkB,GAAG,CAAC;AAC9B,gBAAQ,IAAI,CAAC,IAAI;AACjB,gBAAQ,IAAI;AACZ,gBAAQ,IAAI;AACZ,YAAI,QAAQ,eAAe,QAAQ;AACnC,qBAAa,CAAC,QAAQ,eAAe,QAAQ;AAE7C,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,gBAAM,SAAS,QAAQ,CAAC,EAAE,IAAI,CAAC;AAC/B,gBAAM,SAAS,QAAQ,CAAC,EAAE,CAAC;AAE3B,kBAAQ,CAAC,EAAE,IAAI,CAAC,IAAI,SAAS,QAAQ,SAAS;AAC9C,kBAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,QAAQ,SAAS;AAAA,QAC/C;AAAA,MACJ;AAEA,cAAQ,KAAK,IAAI;AACjB,cAAQ,CAAC,IAAI;AACb,cAAQ,CAAC,IAAI;AAAA,IACjB;AAAA,EACJ;AAEA,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,QAAI,QAAQ,CAAC,IAAI,SAAS;AACtB,cAAQ,CAAC,IAAI;AAAA,IACjB;AAAA,EACJ;AAEA,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,aAAS,IAAI,IAAI,GAAG,KAAK,GAAG,KAAK;AAC7B,UAAI,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG;AACzB,cAAM,OAAO,QAAQ,CAAC;AACtB,gBAAQ,CAAC,IAAI,QAAQ,CAAC;AACtB,gBAAQ,CAAC,IAAI;AAEb,iBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,gBAAME,QAAO,QAAQ,CAAC,EAAE,CAAC;AACzB,kBAAQ,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,EAAE,CAAC;AAC5B,kBAAQ,CAAC,EAAE,CAAC,IAAIA;AAAA,QACpB;AAEA,iBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,gBAAMA,QAAO,QAAQ,CAAC,EAAE,CAAC;AACzB,kBAAQ,CAAC,EAAE,CAAC,IAAI,QAAQ,CAAC,EAAE,CAAC;AAC5B,kBAAQ,CAAC,EAAE,CAAC,IAAIA;AAAA,QACpB;AAEA,YAAI;AAAA,MACR;AAAA,IACJ;AAAA,EACJ;AAEA,SAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACJ;AAEA,SAAS,kBAAkB,GAAW,GAAmB;AACrD,MAAI,QAAQ;AAEZ,MAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,GAAG;AAC3B,YAAQ,IAAI;AACZ,WAAO,KAAK,IAAI,CAAC,IAAI,KAAK,KAAK,IAAI,QAAQ,KAAK;AAAA,EACpD;AAEA,MAAI,MAAM,GAAG;AACT,YAAQ,IAAI;AACZ,WAAO,KAAK,IAAI,CAAC,IAAI,KAAK,KAAK,IAAI,QAAQ,KAAK;AAAA,EACpD;AAEA,SAAO;AACX;AAEA,SAAS,0BAA0B,QAAoB,UAAkB,QAAgB,MAAc,MAAsB;AACzH,MAAI,MAAM;AAEV,WAAS,IAAI,UAAU,IAAI,QAAQ,KAAK;AACpC,WAAO,OAAO,CAAC,EAAE,IAAI,IAAI,OAAO,CAAC,EAAE,IAAI;AAAA,EAC3C;AAEA,SAAO;AACX;AAEA,SAAS,0BAA0B,QAAoB,UAAkB,QAAgB,MAAc,MAAsB;AACzH,MAAI,MAAM;AAEV,WAAS,IAAI,UAAU,IAAI,QAAQ,KAAK;AACpC,WAAO,OAAO,IAAI,EAAE,CAAC,IAAI,OAAO,IAAI,EAAE,CAAC;AAAA,EAC3C;AAEA,SAAO;AACX;AAEO,aAAM,mBAAmB,oBAAI,IAAoB;AAAA,EACpD,CAAC,KAAK,CAAC;AAAA,EACP,CAAC,KAAK,CAAC;AAAA,EACP,CAAC,KAAK,EAAE;AAAA,EACR,CAAC,KAAK,EAAE;AAAA,EACR,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,GAAI;AACd,CAAC;AAEM,aAAM,mBAAmB,oBAAI,IAAoB;AAAA,EACpD,CAAC,GAAG,GAAG;AAAA,EACP,CAAC,GAAG,IAAI;AAAA,EACR,CAAC,GAAG,GAAG;AAAA,EACP,CAAC,GAAG,IAAI;AAAA,EACR,CAAC,IAAI,GAAG;AAAA,EACR,CAAC,IAAI,IAAI;AAAA,EACT,CAAC,IAAI,IAAI;AAAA,EACT,CAAC,IAAI,IAAI;AAAA,EACT,CAAC,IAAI,GAAG;AAAA,EACR,CAAC,IAAI,IAAI;AAAA,EACT,CAAC,IAAI,IAAI;AAAA,EACT,CAAC,IAAI,IAAI;AAAA,EACT,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,IAAI;AAAA,EACV,CAAC,KAAK,IAAI;AAAA,EACV,CAAC,KAAK,IAAI;AAAA,EACV,CAAC,KAAK,IAAI;AAAA,EACV,CAAC,KAAK,IAAI;AAAA,EACV,CAAC,KAAK,GAAG;AAAA,EACT,CAAC,KAAK,IAAI;AAAA,EACV,CAAC,KAAK,IAAI;AAAA,EACV,CAAC,KAAK,IAAI;AAAA,EACV,CAAC,KAAK,IAAI;AAAA,EACV,CAAC,KAAK,IAAI;AAAA,EACV,CAAC,KAAM,GAAG;AACd,CAAC;AAWM,aAAM,iBAA6B;AAAA,EACtC,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAM,GAAI;AAAA,EAC3D,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,GAAI;AAAA,EAC7E,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,GAAI;AAAA,EAC/F,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,GAAI;AAAA,EACzG,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAM,GAAI;AACvH;","names":["row","temp1","temp2","temp"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4bf52990c3d582d71c99227cd0f30960ba83ca11"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/engineering.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/engineering.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":284,"column":28}},"1":{"start":{"line":3,"column":12},"end":{"line":3,"column":23}},"2":{"start":{"line":5,"column":12},"end":{"line":5,"column":13}},"3":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":18}},"5":{"start":{"line":7,"column":6},"end":{"line":7,"column":25}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":13}},"7":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"8":{"start":{"line":13,"column":6},"end":{"line":13,"column":16}},"9":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"10":{"start":{"line":16,"column":6},"end":{"line":16,"column":16}},"11":{"start":{"line":18,"column":16},"end":{"line":18,"column":21}},"12":{"start":{"line":19,"column":14},"end":{"line":19,"column":16}},"13":{"start":{"line":20,"column":14},"end":{"line":20,"column":16}},"14":{"start":{"line":21,"column":13},"end":{"line":21,"column":15}},"15":{"start":{"line":22,"column":4},"end":{"line":26,"column":5}},"16":{"start":{"line":22,"column":17},"end":{"line":22,"column":18}},"17":{"start":{"line":23,"column":6},"end":{"line":23,"column":38}},"18":{"start":{"line":24,"column":6},"end":{"line":24,"column":16}},"19":{"start":{"line":25,"column":6},"end":{"line":25,"column":15}},"20":{"start":{"line":27,"column":4},"end":{"line":27,"column":14}},"21":{"start":{"line":30,"column":4},"end":{"line":51,"column":6}},"22":{"start":{"line":31,"column":6},"end":{"line":37,"column":7}},"23":{"start":{"line":32,"column":8},"end":{"line":36,"column":9}},"24":{"start":{"line":33,"column":10},"end":{"line":33,"column":54}},"25":{"start":{"line":34,"column":15},"end":{"line":36,"column":9}},"26":{"start":{"line":35,"column":10},"end":{"line":35,"column":28}},"27":{"start":{"line":38,"column":6},"end":{"line":40,"column":7}},"28":{"start":{"line":39,"column":8},"end":{"line":39,"column":26}},"29":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"30":{"start":{"line":42,"column":8},"end":{"line":42,"column":26}},"31":{"start":{"line":44,"column":6},"end":{"line":46,"column":7}},"32":{"start":{"line":45,"column":8},"end":{"line":45,"column":26}},"33":{"start":{"line":47,"column":17},"end":{"line":47,"column":22}},"34":{"start":{"line":48,"column":17},"end":{"line":48,"column":27}},"35":{"start":{"line":49,"column":17},"end":{"line":49,"column":27}},"36":{"start":{"line":50,"column":6},"end":{"line":50,"column":47}},"37":{"start":{"line":53,"column":2},"end":{"line":158,"column":7}},"38":{"start":{"line":54,"column":19},"end":{"line":54,"column":104}},"39":{"start":{"line":55,"column":19},"end":{"line":55,"column":88}},"40":{"start":{"line":56,"column":19},"end":{"line":56,"column":88}},"41":{"start":{"line":57,"column":19},"end":{"line":57,"column":100}},"42":{"start":{"line":59,"column":14},"end":{"line":59,"column":15}},"43":{"start":{"line":60,"column":15},"end":{"line":60,"column":16}},"44":{"start":{"line":61,"column":15},"end":{"line":61,"column":16}},"45":{"start":{"line":62,"column":14},"end":{"line":62,"column":19}},"46":{"start":{"line":63,"column":6},"end":{"line":73,"column":7}},"47":{"start":{"line":64,"column":8},"end":{"line":64,"column":32}},"48":{"start":{"line":65,"column":8},"end":{"line":65,"column":32}},"49":{"start":{"line":66,"column":8},"end":{"line":66,"column":20}},"50":{"start":{"line":68,"column":19},"end":{"line":68,"column":34}},"51":{"start":{"line":69,"column":8},"end":{"line":69,"column":19}},"52":{"start":{"line":70,"column":8},"end":{"line":70,"column":32}},"53":{"start":{"line":71,"column":8},"end":{"line":71,"column":32}},"54":{"start":{"line":72,"column":8},"end":{"line":72,"column":79}},"55":{"start":{"line":74,"column":6},"end":{"line":74,"column":15}},"56":{"start":{"line":76,"column":19},"end":{"line":76,"column":102}},"57":{"start":{"line":77,"column":19},"end":{"line":77,"column":89}},"58":{"start":{"line":78,"column":19},"end":{"line":78,"column":82}},"59":{"start":{"line":79,"column":19},"end":{"line":79,"column":97}},"60":{"start":{"line":81,"column":14},"end":{"line":81,"column":15}},"61":{"start":{"line":82,"column":15},"end":{"line":82,"column":16}},"62":{"start":{"line":83,"column":15},"end":{"line":83,"column":16}},"63":{"start":{"line":84,"column":14},"end":{"line":84,"column":19}},"64":{"start":{"line":85,"column":17},"end":{"line":85,"column":42}},"65":{"start":{"line":86,"column":6},"end":{"line":98,"column":7}},"66":{"start":{"line":87,"column":8},"end":{"line":87,"column":36}},"67":{"start":{"line":88,"column":8},"end":{"line":88,"column":32}},"68":{"start":{"line":89,"column":8},"end":{"line":89,"column":20}},"69":{"start":{"line":91,"column":8},"end":{"line":91,"column":19}},"70":{"start":{"line":92,"column":8},"end":{"line":92,"column":32}},"71":{"start":{"line":93,"column":8},"end":{"line":93,"column":32}},"72":{"start":{"line":94,"column":8},"end":{"line":94,"column":99}},"73":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"74":{"start":{"line":96,"column":10},"end":{"line":96,"column":17}},"75":{"start":{"line":99,"column":6},"end":{"line":99,"column":15}},"76":{"start":{"line":101,"column":4},"end":{"line":157,"column":6}},"77":{"start":{"line":102,"column":17},"end":{"line":102,"column":30}},"78":{"start":{"line":103,"column":6},"end":{"line":105,"column":7}},"79":{"start":{"line":104,"column":8},"end":{"line":104,"column":39}},"80":{"start":{"line":106,"column":6},"end":{"line":108,"column":7}},"81":{"start":{"line":107,"column":8},"end":{"line":107,"column":52}},"82":{"start":{"line":109,"column":6},"end":{"line":111,"column":7}},"83":{"start":{"line":110,"column":8},"end":{"line":110,"column":52}},"84":{"start":{"line":112,"column":6},"end":{"line":114,"column":7}},"85":{"start":{"line":113,"column":8},"end":{"line":113,"column":26}},"86":{"start":{"line":115,"column":6},"end":{"line":117,"column":7}},"87":{"start":{"line":116,"column":8},"end":{"line":116,"column":26}},"88":{"start":{"line":118,"column":6},"end":{"line":120,"column":7}},"89":{"start":{"line":119,"column":8},"end":{"line":119,"column":17}},"90":{"start":{"line":121,"column":16},"end":{"line":121,"column":17}},"91":{"start":{"line":122,"column":6},"end":{"line":155,"column":7}},"92":{"start":{"line":123,"column":8},"end":{"line":123,"column":62}},"93":{"start":{"line":125,"column":18},"end":{"line":125,"column":75}},"94":{"start":{"line":126,"column":19},"end":{"line":126,"column":24}},"95":{"start":{"line":127,"column":18},"end":{"line":127,"column":19}},"96":{"start":{"line":128,"column":18},"end":{"line":128,"column":19}},"97":{"start":{"line":129,"column":17},"end":{"line":129,"column":18}},"98":{"start":{"line":130,"column":18},"end":{"line":130,"column":19}},"99":{"start":{"line":131,"column":20},"end":{"line":131,"column":25}},"100":{"start":{"line":132,"column":8},"end":{"line":152,"column":9}},"101":{"start":{"line":132,"column":21},"end":{"line":132,"column":22}},"102":{"start":{"line":133,"column":10},"end":{"line":133,"column":35}},"103":{"start":{"line":134,"column":10},"end":{"line":134,"column":19}},"104":{"start":{"line":135,"column":10},"end":{"line":135,"column":19}},"105":{"start":{"line":136,"column":10},"end":{"line":141,"column":11}},"106":{"start":{"line":137,"column":12},"end":{"line":137,"column":24}},"107":{"start":{"line":138,"column":12},"end":{"line":138,"column":25}},"108":{"start":{"line":139,"column":12},"end":{"line":139,"column":25}},"109":{"start":{"line":140,"column":12},"end":{"line":140,"column":25}},"110":{"start":{"line":142,"column":10},"end":{"line":144,"column":11}},"111":{"start":{"line":143,"column":12},"end":{"line":143,"column":22}},"112":{"start":{"line":145,"column":10},"end":{"line":145,"column":23}},"113":{"start":{"line":146,"column":10},"end":{"line":148,"column":11}},"114":{"start":{"line":147,"column":12},"end":{"line":147,"column":22}},"115":{"start":{"line":149,"column":10},"end":{"line":151,"column":11}},"116":{"start":{"line":150,"column":12},"end":{"line":150,"column":30}},"117":{"start":{"line":153,"column":8},"end":{"line":153,"column":27}},"118":{"start":{"line":154,"column":8},"end":{"line":154,"column":19}},"119":{"start":{"line":156,"column":6},"end":{"line":156,"column":17}},"120":{"start":{"line":159,"column":2},"end":{"line":205,"column":7}},"121":{"start":{"line":160,"column":19},"end":{"line":160,"column":102}},"122":{"start":{"line":161,"column":19},"end":{"line":161,"column":90}},"123":{"start":{"line":162,"column":19},"end":{"line":162,"column":88}},"124":{"start":{"line":163,"column":19},"end":{"line":163,"column":100}},"125":{"start":{"line":165,"column":14},"end":{"line":165,"column":15}},"126":{"start":{"line":166,"column":15},"end":{"line":166,"column":16}},"127":{"start":{"line":167,"column":15},"end":{"line":167,"column":16}},"128":{"start":{"line":168,"column":14},"end":{"line":168,"column":19}},"129":{"start":{"line":169,"column":17},"end":{"line":169,"column":32}},"130":{"start":{"line":170,"column":6},"end":{"line":179,"column":7}},"131":{"start":{"line":171,"column":8},"end":{"line":171,"column":32}},"132":{"start":{"line":172,"column":8},"end":{"line":172,"column":32}},"133":{"start":{"line":173,"column":8},"end":{"line":173,"column":67}},"134":{"start":{"line":175,"column":8},"end":{"line":175,"column":19}},"135":{"start":{"line":176,"column":8},"end":{"line":176,"column":32}},"136":{"start":{"line":177,"column":8},"end":{"line":177,"column":32}},"137":{"start":{"line":178,"column":8},"end":{"line":178,"column":79}},"138":{"start":{"line":180,"column":6},"end":{"line":180,"column":15}},"139":{"start":{"line":182,"column":19},"end":{"line":182,"column":105}},"140":{"start":{"line":183,"column":19},"end":{"line":183,"column":101}},"141":{"start":{"line":184,"column":19},"end":{"line":184,"column":82}},"142":{"start":{"line":185,"column":19},"end":{"line":185,"column":97}},"143":{"start":{"line":187,"column":14},"end":{"line":187,"column":15}},"144":{"start":{"line":188,"column":15},"end":{"line":188,"column":16}},"145":{"start":{"line":189,"column":15},"end":{"line":189,"column":16}},"146":{"start":{"line":190,"column":14},"end":{"line":190,"column":19}},"147":{"start":{"line":191,"column":17},"end":{"line":191,"column":32}},"148":{"start":{"line":192,"column":6},"end":{"line":201,"column":7}},"149":{"start":{"line":193,"column":8},"end":{"line":193,"column":36}},"150":{"start":{"line":194,"column":8},"end":{"line":194,"column":32}},"151":{"start":{"line":195,"column":8},"end":{"line":195,"column":77}},"152":{"start":{"line":197,"column":8},"end":{"line":197,"column":19}},"153":{"start":{"line":198,"column":8},"end":{"line":198,"column":32}},"154":{"start":{"line":199,"column":8},"end":{"line":199,"column":32}},"155":{"start":{"line":200,"column":8},"end":{"line":200,"column":79}},"156":{"start":{"line":202,"column":6},"end":{"line":202,"column":15}},"157":{"start":{"line":204,"column":4},"end":{"line":204,"column":49}},"158":{"start":{"line":206,"column":2},"end":{"line":264,"column":7}},"159":{"start":{"line":207,"column":17},"end":{"line":207,"column":85}},"160":{"start":{"line":208,"column":17},"end":{"line":208,"column":124}},"161":{"start":{"line":210,"column":6},"end":{"line":212,"column":7}},"162":{"start":{"line":211,"column":8},"end":{"line":211,"column":52}},"163":{"start":{"line":213,"column":6},"end":{"line":213,"column":96}},"164":{"start":{"line":215,"column":17},"end":{"line":215,"column":91}},"165":{"start":{"line":216,"column":17},"end":{"line":216,"column":127}},"166":{"start":{"line":218,"column":6},"end":{"line":220,"column":7}},"167":{"start":{"line":219,"column":8},"end":{"line":219,"column":56}},"168":{"start":{"line":221,"column":6},"end":{"line":221,"column":115}},"169":{"start":{"line":223,"column":4},"end":{"line":263,"column":6}},"170":{"start":{"line":224,"column":17},"end":{"line":224,"column":30}},"171":{"start":{"line":225,"column":6},"end":{"line":227,"column":7}},"172":{"start":{"line":226,"column":8},"end":{"line":226,"column":26}},"173":{"start":{"line":228,"column":6},"end":{"line":230,"column":7}},"174":{"start":{"line":229,"column":8},"end":{"line":229,"column":26}},"175":{"start":{"line":231,"column":6},"end":{"line":233,"column":7}},"176":{"start":{"line":232,"column":8},"end":{"line":232,"column":26}},"177":{"start":{"line":234,"column":6},"end":{"line":236,"column":7}},"178":{"start":{"line":235,"column":8},"end":{"line":235,"column":17}},"179":{"start":{"line":237,"column":6},"end":{"line":239,"column":7}},"180":{"start":{"line":238,"column":8},"end":{"line":238,"column":24}},"181":{"start":{"line":240,"column":16},"end":{"line":240,"column":17}},"182":{"start":{"line":242,"column":18},"end":{"line":242,"column":33}},"183":{"start":{"line":243,"column":16},"end":{"line":243,"column":17}},"184":{"start":{"line":244,"column":15},"end":{"line":244,"column":16}},"185":{"start":{"line":245,"column":16},"end":{"line":245,"column":17}},"186":{"start":{"line":246,"column":16},"end":{"line":246,"column":73}},"187":{"start":{"line":247,"column":6},"end":{"line":260,"column":7}},"188":{"start":{"line":248,"column":8},"end":{"line":248,"column":33}},"189":{"start":{"line":249,"column":8},"end":{"line":249,"column":17}},"190":{"start":{"line":250,"column":8},"end":{"line":250,"column":17}},"191":{"start":{"line":251,"column":8},"end":{"line":255,"column":9}},"192":{"start":{"line":252,"column":10},"end":{"line":252,"column":22}},"193":{"start":{"line":253,"column":10},"end":{"line":253,"column":23}},"194":{"start":{"line":254,"column":10},"end":{"line":254,"column":23}},"195":{"start":{"line":256,"column":8},"end":{"line":256,"column":32}},"196":{"start":{"line":256,"column":22},"end":{"line":256,"column":32}},"197":{"start":{"line":257,"column":8},"end":{"line":259,"column":9}},"198":{"start":{"line":258,"column":10},"end":{"line":258,"column":28}},"199":{"start":{"line":261,"column":6},"end":{"line":261,"column":33}},"200":{"start":{"line":262,"column":6},"end":{"line":262,"column":42}},"201":{"start":{"line":265,"column":2},"end":{"line":283,"column":7}},"202":{"start":{"line":266,"column":17},"end":{"line":266,"column":91}},"203":{"start":{"line":267,"column":17},"end":{"line":267,"column":99}},"204":{"start":{"line":269,"column":6},"end":{"line":271,"column":7}},"205":{"start":{"line":270,"column":8},"end":{"line":270,"column":88}},"206":{"start":{"line":272,"column":6},"end":{"line":272,"column":64}},"207":{"start":{"line":274,"column":17},"end":{"line":274,"column":93}},"208":{"start":{"line":275,"column":17},"end":{"line":275,"column":99}},"209":{"start":{"line":277,"column":6},"end":{"line":279,"column":7}},"210":{"start":{"line":278,"column":8},"end":{"line":278,"column":95}},"211":{"start":{"line":280,"column":6},"end":{"line":280,"column":64}},"212":{"start":{"line":282,"column":4},"end":{"line":282,"column":48}},"213":{"start":{"line":286,"column":2},"end":{"line":286,"column":37}},"214":{"start":{"line":289,"column":2},"end":{"line":289,"column":38}},"215":{"start":{"line":292,"column":2},"end":{"line":292,"column":44}},"216":{"start":{"line":295,"column":2},"end":{"line":297,"column":3}},"217":{"start":{"line":296,"column":4},"end":{"line":296,"column":13}},"218":{"start":{"line":298,"column":14},"end":{"line":328,"column":3}},"219":{"start":{"line":329,"column":11},"end":{"line":329,"column":12}},"220":{"start":{"line":330,"column":14},"end":{"line":330,"column":19}},"221":{"start":{"line":331,"column":2},"end":{"line":334,"column":3}},"222":{"start":{"line":332,"column":4},"end":{"line":332,"column":13}},"223":{"start":{"line":333,"column":4},"end":{"line":333,"column":17}},"224":{"start":{"line":335,"column":12},"end":{"line":335,"column":24}},"225":{"start":{"line":336,"column":13},"end":{"line":336,"column":22}},"226":{"start":{"line":337,"column":10},"end":{"line":337,"column":11}},"227":{"start":{"line":338,"column":11},"end":{"line":338,"column":12}},"228":{"start":{"line":340,"column":2},"end":{"line":344,"column":3}},"229":{"start":{"line":340,"column":15},"end":{"line":340,"column":29}},"230":{"start":{"line":341,"column":4},"end":{"line":341,"column":12}},"231":{"start":{"line":342,"column":4},"end":{"line":342,"column":29}},"232":{"start":{"line":343,"column":4},"end":{"line":343,"column":13}},"233":{"start":{"line":345,"column":14},"end":{"line":345,"column":67}},"234":{"start":{"line":346,"column":2},"end":{"line":346,"column":35}},"235":{"start":{"line":350,"column":2},"end":{"line":350,"column":20}},"236":{"start":{"line":353,"column":2},"end":{"line":355,"column":3}},"237":{"start":{"line":354,"column":4},"end":{"line":354,"column":16}},"238":{"start":{"line":356,"column":2},"end":{"line":358,"column":3}},"239":{"start":{"line":357,"column":4},"end":{"line":357,"column":15}},"240":{"start":{"line":359,"column":13},"end":{"line":359,"column":30}},"241":{"start":{"line":360,"column":15},"end":{"line":360,"column":47}},"242":{"start":{"line":361,"column":10},"end":{"line":361,"column":98}},"243":{"start":{"line":362,"column":2},"end":{"line":365,"column":3}},"244":{"start":{"line":362,"column":15},"end":{"line":362,"column":16}},"245":{"start":{"line":363,"column":16},"end":{"line":363,"column":28}},"246":{"start":{"line":364,"column":4},"end":{"line":364,"column":65}},"247":{"start":{"line":366,"column":2},"end":{"line":366,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":1},"end":{"line":2,"column":2}},"loc":{"start":{"line":2,"column":14},"end":{"line":284,"column":1}},"line":2},"1":{"name":"_horner","decl":{"start":{"line":4,"column":11},"end":{"line":4,"column":18}},"loc":{"start":{"line":4,"column":27},"end":{"line":10,"column":3}},"line":4},"2":{"name":"_bessel_iter","decl":{"start":{"line":11,"column":11},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":28,"column":3}},"line":11},"3":{"name":"_bessel_wrap","decl":{"start":{"line":29,"column":11},"end":{"line":29,"column":23}},"loc":{"start":{"line":29,"column":57},"end":{"line":52,"column":3}},"line":29},"4":{"name":"bessel","decl":{"start":{"line":30,"column":20},"end":{"line":30,"column":26}},"loc":{"start":{"line":30,"column":33},"end":{"line":51,"column":5}},"line":30},"5":{"name":"(anonymous_5)","decl":{"start":{"line":53,"column":37},"end":{"line":53,"column":38}},"loc":{"start":{"line":53,"column":43},"end":{"line":158,"column":3}},"line":53},"6":{"name":"bessel0","decl":{"start":{"line":58,"column":13},"end":{"line":58,"column":20}},"loc":{"start":{"line":58,"column":24},"end":{"line":75,"column":5}},"line":58},"7":{"name":"bessel1","decl":{"start":{"line":80,"column":13},"end":{"line":80,"column":20}},"loc":{"start":{"line":80,"column":24},"end":{"line":100,"column":5}},"line":80},"8":{"name":"besselj2","decl":{"start":{"line":101,"column":20},"end":{"line":101,"column":28}},"loc":{"start":{"line":101,"column":35},"end":{"line":157,"column":5}},"line":101},"9":{"name":"(anonymous_9)","decl":{"start":{"line":159,"column":21},"end":{"line":159,"column":22}},"loc":{"start":{"line":159,"column":27},"end":{"line":205,"column":3}},"line":159},"10":{"name":"bessel0","decl":{"start":{"line":164,"column":13},"end":{"line":164,"column":20}},"loc":{"start":{"line":164,"column":24},"end":{"line":181,"column":5}},"line":164},"11":{"name":"bessel1","decl":{"start":{"line":186,"column":13},"end":{"line":186,"column":20}},"loc":{"start":{"line":186,"column":24},"end":{"line":203,"column":5}},"line":186},"12":{"name":"(anonymous_12)","decl":{"start":{"line":206,"column":37},"end":{"line":206,"column":38}},"loc":{"start":{"line":206,"column":43},"end":{"line":264,"column":3}},"line":206},"13":{"name":"bessel0","decl":{"start":{"line":209,"column":13},"end":{"line":209,"column":20}},"loc":{"start":{"line":209,"column":24},"end":{"line":214,"column":5}},"line":209},"14":{"name":"bessel1","decl":{"start":{"line":217,"column":13},"end":{"line":217,"column":20}},"loc":{"start":{"line":217,"column":24},"end":{"line":222,"column":5}},"line":217},"15":{"name":"besseli2","decl":{"start":{"line":223,"column":20},"end":{"line":223,"column":28}},"loc":{"start":{"line":223,"column":35},"end":{"line":263,"column":5}},"line":223},"16":{"name":"(anonymous_16)","decl":{"start":{"line":265,"column":21},"end":{"line":265,"column":22}},"loc":{"start":{"line":265,"column":27},"end":{"line":283,"column":3}},"line":265},"17":{"name":"bessel0","decl":{"start":{"line":268,"column":13},"end":{"line":268,"column":20}},"loc":{"start":{"line":268,"column":24},"end":{"line":273,"column":5}},"line":268},"18":{"name":"bessel1","decl":{"start":{"line":276,"column":13},"end":{"line":276,"column":20}},"loc":{"start":{"line":276,"column":24},"end":{"line":281,"column":5}},"line":276},"19":{"name":"isValidBinaryNumber","decl":{"start":{"line":285,"column":16},"end":{"line":285,"column":35}},"loc":{"start":{"line":285,"column":44},"end":{"line":287,"column":1}},"line":285},"20":{"name":"isValidOctalNumber","decl":{"start":{"line":288,"column":16},"end":{"line":288,"column":34}},"loc":{"start":{"line":288,"column":43},"end":{"line":290,"column":1}},"line":288},"21":{"name":"isValidHexadecimalNumber","decl":{"start":{"line":291,"column":16},"end":{"line":291,"column":40}},"loc":{"start":{"line":291,"column":49},"end":{"line":293,"column":1}},"line":291},"22":{"name":"erf","decl":{"start":{"line":294,"column":16},"end":{"line":294,"column":19}},"loc":{"start":{"line":294,"column":23},"end":{"line":347,"column":1}},"line":294},"23":{"name":"erfc","decl":{"start":{"line":349,"column":16},"end":{"line":349,"column":20}},"loc":{"start":{"line":349,"column":24},"end":{"line":351,"column":1}},"line":349},"24":{"name":"erfcINV","decl":{"start":{"line":352,"column":16},"end":{"line":352,"column":23}},"loc":{"start":{"line":352,"column":27},"end":{"line":367,"column":1}},"line":352}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},{"start":{},"end":{}}],"line":12},"1":{"loc":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},{"start":{},"end":{}}],"line":15},"2":{"loc":{"start":{"line":31,"column":6},"end":{"line":37,"column":7}},"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":37,"column":7}},{"start":{},"end":{}}],"line":31},"3":{"loc":{"start":{"line":32,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":15},"end":{"line":36,"column":9}}],"line":32},"4":{"loc":{"start":{"line":33,"column":17},"end":{"line":33,"column":53}},"type":"cond-expr","locations":[{"start":{"line":33,"column":33},"end":{"line":33,"column":42}},{"start":{"line":33,"column":45},"end":{"line":33,"column":53}}],"line":33},"5":{"loc":{"start":{"line":34,"column":15},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":15},"end":{"line":36,"column":9}},{"start":{},"end":{}}],"line":34},"6":{"loc":{"start":{"line":38,"column":6},"end":{"line":40,"column":7}},"type":"if","locations":[{"start":{"line":38,"column":6},"end":{"line":40,"column":7}},{"start":{},"end":{}}],"line":38},"7":{"loc":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},{"start":{},"end":{}}],"line":41},"8":{"loc":{"start":{"line":44,"column":6},"end":{"line":46,"column":7}},"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":46,"column":7}},{"start":{},"end":{}}],"line":44},"9":{"loc":{"start":{"line":63,"column":6},"end":{"line":73,"column":7}},"type":"if","locations":[{"start":{"line":63,"column":6},"end":{"line":73,"column":7}},{"start":{"line":67,"column":13},"end":{"line":73,"column":7}}],"line":63},"10":{"loc":{"start":{"line":86,"column":6},"end":{"line":98,"column":7}},"type":"if","locations":[{"start":{"line":86,"column":6},"end":{"line":98,"column":7}},{"start":{"line":90,"column":13},"end":{"line":98,"column":7}}],"line":86},"11":{"loc":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},{"start":{},"end":{}}],"line":95},"12":{"loc":{"start":{"line":103,"column":6},"end":{"line":105,"column":7}},"type":"if","locations":[{"start":{"line":103,"column":6},"end":{"line":105,"column":7}},{"start":{},"end":{}}],"line":103},"13":{"loc":{"start":{"line":104,"column":15},"end":{"line":104,"column":38}},"type":"cond-expr","locations":[{"start":{"line":104,"column":33},"end":{"line":104,"column":34}},{"start":{"line":104,"column":37},"end":{"line":104,"column":38}}],"line":104},"14":{"loc":{"start":{"line":106,"column":6},"end":{"line":108,"column":7}},"type":"if","locations":[{"start":{"line":106,"column":6},"end":{"line":108,"column":7}},{"start":{},"end":{}}],"line":106},"15":{"loc":{"start":{"line":107,"column":16},"end":{"line":107,"column":31}},"type":"cond-expr","locations":[{"start":{"line":107,"column":25},"end":{"line":107,"column":27}},{"start":{"line":107,"column":30},"end":{"line":107,"column":31}}],"line":107},"16":{"loc":{"start":{"line":109,"column":6},"end":{"line":111,"column":7}},"type":"if","locations":[{"start":{"line":109,"column":6},"end":{"line":111,"column":7}},{"start":{},"end":{}}],"line":109},"17":{"loc":{"start":{"line":110,"column":16},"end":{"line":110,"column":31}},"type":"cond-expr","locations":[{"start":{"line":110,"column":25},"end":{"line":110,"column":27}},{"start":{"line":110,"column":30},"end":{"line":110,"column":31}}],"line":110},"18":{"loc":{"start":{"line":112,"column":6},"end":{"line":114,"column":7}},"type":"if","locations":[{"start":{"line":112,"column":6},"end":{"line":114,"column":7}},{"start":{},"end":{}}],"line":112},"19":{"loc":{"start":{"line":115,"column":6},"end":{"line":117,"column":7}},"type":"if","locations":[{"start":{"line":115,"column":6},"end":{"line":117,"column":7}},{"start":{},"end":{}}],"line":115},"20":{"loc":{"start":{"line":118,"column":6},"end":{"line":120,"column":7}},"type":"if","locations":[{"start":{"line":118,"column":6},"end":{"line":120,"column":7}},{"start":{},"end":{}}],"line":118},"21":{"loc":{"start":{"line":122,"column":6},"end":{"line":155,"column":7}},"type":"if","locations":[{"start":{"line":122,"column":6},"end":{"line":155,"column":7}},{"start":{"line":124,"column":13},"end":{"line":155,"column":7}}],"line":122},"22":{"loc":{"start":{"line":136,"column":10},"end":{"line":141,"column":11}},"type":"if","locations":[{"start":{"line":136,"column":10},"end":{"line":141,"column":11}},{"start":{},"end":{}}],"line":136},"23":{"loc":{"start":{"line":142,"column":10},"end":{"line":144,"column":11}},"type":"if","locations":[{"start":{"line":142,"column":10},"end":{"line":144,"column":11}},{"start":{},"end":{}}],"line":142},"24":{"loc":{"start":{"line":146,"column":10},"end":{"line":148,"column":11}},"type":"if","locations":[{"start":{"line":146,"column":10},"end":{"line":148,"column":11}},{"start":{},"end":{}}],"line":146},"25":{"loc":{"start":{"line":149,"column":10},"end":{"line":151,"column":11}},"type":"if","locations":[{"start":{"line":149,"column":10},"end":{"line":151,"column":11}},{"start":{},"end":{}}],"line":149},"26":{"loc":{"start":{"line":149,"column":14},"end":{"line":149,"column":38}},"type":"binary-expr","locations":[{"start":{"line":149,"column":14},"end":{"line":149,"column":25}},{"start":{"line":149,"column":29},"end":{"line":149,"column":38}}],"line":149},"27":{"loc":{"start":{"line":170,"column":6},"end":{"line":179,"column":7}},"type":"if","locations":[{"start":{"line":170,"column":6},"end":{"line":179,"column":7}},{"start":{"line":174,"column":13},"end":{"line":179,"column":7}}],"line":170},"28":{"loc":{"start":{"line":192,"column":6},"end":{"line":201,"column":7}},"type":"if","locations":[{"start":{"line":192,"column":6},"end":{"line":201,"column":7}},{"start":{"line":196,"column":13},"end":{"line":201,"column":7}}],"line":192},"29":{"loc":{"start":{"line":210,"column":6},"end":{"line":212,"column":7}},"type":"if","locations":[{"start":{"line":210,"column":6},"end":{"line":212,"column":7}},{"start":{},"end":{}}],"line":210},"30":{"loc":{"start":{"line":218,"column":6},"end":{"line":220,"column":7}},"type":"if","locations":[{"start":{"line":218,"column":6},"end":{"line":220,"column":7}},{"start":{},"end":{}}],"line":218},"31":{"loc":{"start":{"line":221,"column":14},"end":{"line":221,"column":28}},"type":"cond-expr","locations":[{"start":{"line":221,"column":22},"end":{"line":221,"column":24}},{"start":{"line":221,"column":27},"end":{"line":221,"column":28}}],"line":221},"32":{"loc":{"start":{"line":225,"column":6},"end":{"line":227,"column":7}},"type":"if","locations":[{"start":{"line":225,"column":6},"end":{"line":227,"column":7}},{"start":{},"end":{}}],"line":225},"33":{"loc":{"start":{"line":228,"column":6},"end":{"line":230,"column":7}},"type":"if","locations":[{"start":{"line":228,"column":6},"end":{"line":230,"column":7}},{"start":{},"end":{}}],"line":228},"34":{"loc":{"start":{"line":231,"column":6},"end":{"line":233,"column":7}},"type":"if","locations":[{"start":{"line":231,"column":6},"end":{"line":233,"column":7}},{"start":{},"end":{}}],"line":231},"35":{"loc":{"start":{"line":234,"column":6},"end":{"line":236,"column":7}},"type":"if","locations":[{"start":{"line":234,"column":6},"end":{"line":236,"column":7}},{"start":{},"end":{}}],"line":234},"36":{"loc":{"start":{"line":237,"column":6},"end":{"line":239,"column":7}},"type":"if","locations":[{"start":{"line":237,"column":6},"end":{"line":239,"column":7}},{"start":{},"end":{}}],"line":237},"37":{"loc":{"start":{"line":251,"column":8},"end":{"line":255,"column":9}},"type":"if","locations":[{"start":{"line":251,"column":8},"end":{"line":255,"column":9}},{"start":{},"end":{}}],"line":251},"38":{"loc":{"start":{"line":256,"column":8},"end":{"line":256,"column":32}},"type":"if","locations":[{"start":{"line":256,"column":8},"end":{"line":256,"column":32}},{"start":{},"end":{}}],"line":256},"39":{"loc":{"start":{"line":257,"column":8},"end":{"line":259,"column":9}},"type":"if","locations":[{"start":{"line":257,"column":8},"end":{"line":259,"column":9}},{"start":{},"end":{}}],"line":257},"40":{"loc":{"start":{"line":257,"column":12},"end":{"line":257,"column":36}},"type":"binary-expr","locations":[{"start":{"line":257,"column":12},"end":{"line":257,"column":23}},{"start":{"line":257,"column":27},"end":{"line":257,"column":36}}],"line":257},"41":{"loc":{"start":{"line":262,"column":13},"end":{"line":262,"column":41}},"type":"cond-expr","locations":[{"start":{"line":262,"column":31},"end":{"line":262,"column":35}},{"start":{"line":262,"column":38},"end":{"line":262,"column":41}}],"line":262},"42":{"loc":{"start":{"line":262,"column":13},"end":{"line":262,"column":28}},"type":"binary-expr","locations":[{"start":{"line":262,"column":13},"end":{"line":262,"column":18}},{"start":{"line":262,"column":22},"end":{"line":262,"column":28}}],"line":262},"43":{"loc":{"start":{"line":269,"column":6},"end":{"line":271,"column":7}},"type":"if","locations":[{"start":{"line":269,"column":6},"end":{"line":271,"column":7}},{"start":{},"end":{}}],"line":269},"44":{"loc":{"start":{"line":277,"column":6},"end":{"line":279,"column":7}},"type":"if","locations":[{"start":{"line":277,"column":6},"end":{"line":279,"column":7}},{"start":{},"end":{}}],"line":277},"45":{"loc":{"start":{"line":284,"column":3},"end":{"line":284,"column":26}},"type":"binary-expr","locations":[{"start":{"line":284,"column":3},"end":{"line":284,"column":9}},{"start":{"line":284,"column":14},"end":{"line":284,"column":25}}],"line":284},"46":{"loc":{"start":{"line":295,"column":2},"end":{"line":297,"column":3}},"type":"if","locations":[{"start":{"line":295,"column":2},"end":{"line":297,"column":3}},{"start":{},"end":{}}],"line":295},"47":{"loc":{"start":{"line":331,"column":2},"end":{"line":334,"column":3}},"type":"if","locations":[{"start":{"line":331,"column":2},"end":{"line":334,"column":3}},{"start":{},"end":{}}],"line":331},"48":{"loc":{"start":{"line":346,"column":9},"end":{"line":346,"column":34}},"type":"cond-expr","locations":[{"start":{"line":346,"column":17},"end":{"line":346,"column":24}},{"start":{"line":346,"column":27},"end":{"line":346,"column":34}}],"line":346},"49":{"loc":{"start":{"line":353,"column":2},"end":{"line":355,"column":3}},"type":"if","locations":[{"start":{"line":353,"column":2},"end":{"line":355,"column":3}},{"start":{},"end":{}}],"line":353},"50":{"loc":{"start":{"line":356,"column":2},"end":{"line":358,"column":3}},"type":"if","locations":[{"start":{"line":356,"column":2},"end":{"line":358,"column":3}},{"start":{},"end":{}}],"line":356},"51":{"loc":{"start":{"line":359,"column":13},"end":{"line":359,"column":30}},"type":"cond-expr","locations":[{"start":{"line":359,"column":21},"end":{"line":359,"column":22}},{"start":{"line":359,"column":25},"end":{"line":359,"column":30}}],"line":359},"52":{"loc":{"start":{"line":366,"column":9},"end":{"line":366,"column":23}},"type":"cond-expr","locations":[{"start":{"line":366,"column":17},"end":{"line":366,"column":18}},{"start":{"line":366,"column":21},"end":{"line":366,"column":23}}],"line":366}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":2,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":1,"39":1,"40":1,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":1,"58":1,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":1,"122":1,"123":1,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":1,"140":1,"141":1,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":1,"159":1,"160":1,"161":0,"162":0,"163":0,"164":1,"165":1,"166":0,"167":0,"168":0,"169":1,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":1,"202":1,"203":1,"204":0,"205":0,"206":0,"207":1,"208":1,"209":0,"210":0,"211":0,"212":1,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0},"f":{"0":1,"1":0,"2":0,"3":2,"4":0,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[1,1],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/engineering.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line ts/no-namespace\nexport namespace BESSEL {\n    interface IFunctionType {\n        (x: number): number;\n    }\n\n    const W = 0.636619772;\n\n    function _horner(arr: number[], v: number): number {\n        let z = 0;\n\n        for (let i = 0; i < arr.length; ++i) {\n            z = v * z + arr[i];\n        }\n\n        return z;\n    }\n\n    function _bessel_iter(x: number, n: number, f0: number, f1: number, sign: number): number {\n        if (n === 0) {\n            return f0;\n        }\n\n        if (n === 1) {\n            return f1;\n        }\n\n        const tdx = 2 / x;\n        let _f0 = f0;\n        let _f1 = f1;\n        let f2 = f1;\n\n        for (let o = 1; o < n; ++o) {\n            f2 = _f1 * o * tdx + sign * _f0;\n            _f0 = _f1;\n            _f1 = f2;\n        }\n\n        return f2;\n    }\n\n    function _bessel_wrap(bessel0: IFunctionType, bessel1: IFunctionType, nonzero: number, sign: number) {\n        return function bessel(x: number, n: number): number {\n            if (nonzero) {\n                if (x === 0) {\n                    return nonzero === 1 ? -Infinity : Infinity;\n                } else if (x < 0) {\n                    return Number.NaN;\n                }\n            }\n\n            if (n === 0) {\n                return bessel0(x);\n            }\n\n            if (n === 1) {\n                return bessel1(x);\n            }\n\n            if (n < 0) {\n                return Number.NaN;\n            }\n\n            const _n = n | 0;\n\n            const b0 = bessel0(x);\n            const b1 = bessel1(x);\n\n            return _bessel_iter(x, _n, b0, b1, sign);\n        };\n    }\n\n    export const besselj = (() => {\n        const b0_a1a = [-184.9052456, 77392.33017, -11214424.18, 651619640.7, -13362590354.0, 57568490574.0];\n        const b0_a2a = [1.0, 267.8532712, 59272.64853, 9494680.718, 1029532985.0, 57568490411.0];\n        const b0_a1b = [0.2093887211e-6, -0.2073370639e-5, 0.2734510407e-4, -0.1098628627e-2, 1.0];\n        const b0_a2b = [-0.934935152e-7, 0.7621095161e-6, -0.6911147651e-5, 0.1430488765e-3, -0.1562499995e-1];\n\n        function bessel0(x: number): number {\n            let a = 0;\n            let a1 = 0;\n            let a2 = 0;\n            let y = x * x;\n\n            if (x < 8) {\n                a1 = _horner(b0_a1a, y);\n                a2 = _horner(b0_a2a, y);\n                a = a1 / a2;\n            } else {\n                const xx = x - 0.785398164;\n                y = 64 / y;\n                a1 = _horner(b0_a1b, y);\n                a2 = _horner(b0_a2b, y);\n                a = Math.sqrt(W / x) * (Math.cos(xx) * a1 - Math.sin(xx) * a2 * 8 / x);\n            }\n\n            return a;\n        }\n\n        const b1_a1a = [-30.16036606, 15704.48260, -2972611.439, 242396853.1, -7895059235.0, 72362614232.0];\n        const b1_a2a = [1.0, 376.9991397, 99447.43394, 18583304.74, 2300535178.0, 144725228442.0];\n        const b1_a1b = [-0.240337019e-6, 0.2457520174e-5, -0.3516396496e-4, 0.183105e-2, 1.0];\n        const b1_a2b = [0.105787412e-6, -0.88228987e-6, 0.8449199096e-5, -0.2002690873e-3, 0.04687499995];\n\n        function bessel1(x: number): number {\n            let a = 0;\n            let a1 = 0;\n            let a2 = 0;\n            let y = x * x;\n            const xx = Math.abs(x) - 2.356194491;\n\n            if (Math.abs(x) < 8) {\n                a1 = x * _horner(b1_a1a, y);\n                a2 = _horner(b1_a2a, y);\n                a = a1 / a2;\n            } else {\n                y = 64 / y;\n                a1 = _horner(b1_a1b, y);\n                a2 = _horner(b1_a2b, y);\n                a = Math.sqrt(W / Math.abs(x)) * (Math.cos(xx) * a1 - Math.sin(xx) * a2 * 8 / Math.abs(x));\n\n                if (x < 0) {\n                    a = -a;\n                }\n            }\n\n            return a;\n        }\n\n        return function besselj(x: number, n: number): number {\n            const _n = Math.round(n);\n\n            if (!Number.isFinite(x)) {\n                return Number.isNaN(x) ? x : 0;\n            }\n\n            if (_n < 0) {\n                return ((_n % 2) ? -1 : 1) * besselj(x, -_n);\n            }\n\n            if (x < 0) {\n                return ((_n % 2) ? -1 : 1) * besselj(-x, _n);\n            }\n\n            if (_n === 0) {\n                return bessel0(x);\n            }\n\n            if (_n === 1) {\n                return bessel1(x);\n            }\n\n            if (x === 0) {\n                return 0;\n            }\n\n            let ret = 0.0;\n\n            if (x > _n) {\n                ret = _bessel_iter(x, _n, bessel0(x), bessel1(x), -1);\n            } else {\n                const m = 2 * Math.floor((_n + Math.floor(Math.sqrt(40 * _n))) / 2);\n                let jsum = false;\n                let bjp = 0.0;\n                let sum = 0.0;\n                let bj = 1.0;\n                let bjm = 0.0;\n                const tox = 2 / x;\n\n                for (let j = m; j > 0; j--) {\n                    bjm = j * tox * bj - bjp;\n                    bjp = bj;\n                    bj = bjm;\n\n                    if (Math.abs(bj) > 1e10) {\n                        bj *= 1e-10;\n                        bjp *= 1e-10;\n                        ret *= 1e-10;\n                        sum *= 1e-10;\n                    }\n\n                    if (jsum) {\n                        sum += bj;\n                    }\n\n                    jsum = !jsum;\n\n                    if (j === _n) {\n                        ret = bjp;\n                    }\n\n                    // After more than 100 iterations, the result is 0\n                    if ((m - j) > 100 && ret === 0) {\n                        return Number.NaN;\n                    }\n                }\n\n                sum = 2.0 * sum - bj;\n                ret /= sum;\n            }\n\n            return ret;\n        };\n    })();\n\n    export const bessely = (() => {\n        const b0_a1a = [228.4622733, -86327.92757, 10879881.29, -512359803.6, 7062834065.0, -2957821389.0];\n        const b0_a2a = [1.0, 226.1030244, 47447.26470, 7189466.438, 745249964.8, 40076544269.0];\n        const b0_a1b = [0.2093887211e-6, -0.2073370639e-5, 0.2734510407e-4, -0.1098628627e-2, 1.0];\n        const b0_a2b = [-0.934945152e-7, 0.7621095161e-6, -0.6911147651e-5, 0.1430488765e-3, -0.1562499995e-1];\n\n        function bessel0(x: number): number {\n            let a = 0;\n            let a1 = 0;\n            let a2 = 0;\n            let y = x * x;\n            const xx = x - 0.785398164;\n\n            if (x < 8) {\n                a1 = _horner(b0_a1a, y);\n                a2 = _horner(b0_a2a, y);\n                a = a1 / a2 + W * besselj(x, 0) * Math.log(x);\n            } else {\n                y = 64 / y;\n                a1 = _horner(b0_a1b, y);\n                a2 = _horner(b0_a2b, y);\n                a = Math.sqrt(W / x) * (Math.sin(xx) * a1 + Math.cos(xx) * a2 * 8 / x);\n            }\n\n            return a;\n        }\n\n        const b1_a1a = [0.8511937935e4, -0.4237922726e7, 0.7349264551e9, -0.5153438139e11, 0.1275274390e13, -0.4900604943e13];\n        const b1_a2a = [1, 0.3549632885e3, 0.1020426050e6, 0.2245904002e8, 0.3733650367e10, 0.4244419664e12, 0.2499580570e14];\n        const b1_a1b = [-0.240337019e-6, 0.2457520174e-5, -0.3516396496e-4, 0.183105e-2, 1.0];\n        const b1_a2b = [0.105787412e-6, -0.88228987e-6, 0.8449199096e-5, -0.2002690873e-3, 0.04687499995];\n\n        function bessel1(x: number): number {\n            let a = 0;\n            let a1 = 0;\n            let a2 = 0;\n            let y = x * x;\n            const xx = x - 2.356194491;\n\n            if (x < 8) {\n                a1 = x * _horner(b1_a1a, y);\n                a2 = _horner(b1_a2a, y);\n                a = a1 / a2 + W * (besselj(x, 1) * Math.log(x) - 1 / x);\n            } else {\n                y = 64 / y;\n                a1 = _horner(b1_a1b, y);\n                a2 = _horner(b1_a2b, y);\n                a = Math.sqrt(W / x) * (Math.sin(xx) * a1 + Math.cos(xx) * a2 * 8 / x);\n            }\n\n            return a;\n        }\n\n        return _bessel_wrap(bessel0, bessel1, 1, -1);\n    })();\n\n    export const besseli = (() => {\n        const b0_a = [0.45813e-2, 0.360768e-1, 0.2659732, 1.2067492, 3.0899424, 3.5156229, 1.0];\n        const b0_b = [0.392377e-2, -0.1647633e-1, 0.2635537e-1, -0.2057706e-1, 0.916281e-2, -0.157565e-2, 0.225319e-2, 0.1328592e-1, 0.39894228];\n\n        function bessel0(x: number): number {\n            if (x <= 3.75) {\n                return _horner(b0_a, x * x / (3.75 * 3.75));\n            }\n\n            return Math.exp(Math.abs(x)) / Math.sqrt(Math.abs(x)) * _horner(b0_b, 3.75 / Math.abs(x));\n        }\n\n        const b1_a = [0.32411e-3, 0.301532e-2, 0.2658733e-1, 0.15084934, 0.51498869, 0.87890594, 0.5];\n        const b1_b = [-0.420059e-2, 0.1787654e-1, -0.2895312e-1, 0.2282967e-1, -0.1031555e-1, 0.163801e-2, -0.362018e-2, -0.3988024e-1, 0.39894228];\n\n        function bessel1(x: number): number {\n            if (x < 3.75) {\n                return x * _horner(b1_a, x * x / (3.75 * 3.75));\n            }\n\n            return (x < 0 ? -1 : 1) * Math.exp(Math.abs(x)) / Math.sqrt(Math.abs(x)) * _horner(b1_b, 3.75 / Math.abs(x));\n        }\n\n        return function besseli(x: number, n: number): number {\n            const _n = Math.round(n);\n\n            if (_n === 0) {\n                return bessel0(x);\n            }\n\n            if (_n === 1) {\n                return bessel1(x);\n            }\n\n            if (_n < 0) {\n                return Number.NaN;\n            }\n\n            if (Math.abs(x) === 0) {\n                return 0;\n            }\n\n            if (x === Infinity) {\n                return Infinity;\n            }\n\n            let ret = 0.0;\n            let j;\n            const tox = 2 / Math.abs(x);\n            let bip = 0.0;\n            let bi = 1.0;\n            let bim = 0.0;\n\n            const m = 2 * Math.round((_n + Math.round(Math.sqrt(40 * _n))) / 2);\n\n            for (j = m; j > 0; j--) {\n                bim = j * tox * bi + bip;\n                bip = bi;\n                bi = bim;\n\n                if (Math.abs(bi) > 1e10) {\n                    bi *= 1e-10;\n                    bip *= 1e-10;\n                    ret *= 1e-10;\n                }\n\n                if (j === _n) ret = bip;\n\n                // After more than 100 iterations, the result is 0\n                if ((m - j) > 100 && ret === 0) {\n                    return Number.NaN;\n                }\n            }\n\n            ret *= besseli(x, 0) / bi;\n\n            return x < 0 && (_n % 2) ? -ret : ret;\n        };\n    })();\n\n    export const besselk = (() => {\n        const b0_a = [0.74e-5, 0.10750e-3, 0.262698e-2, 0.3488590e-1, 0.23069756, 0.42278420, -0.57721566];\n        const b0_b = [0.53208e-3, -0.251540e-2, 0.587872e-2, -0.1062446e-1, 0.2189568e-1, -0.7832358e-1, 1.25331414];\n\n        function bessel0(x: number): number {\n            if (x <= 2) {\n                return -Math.log(x / 2) * besseli(x, 0) + _horner(b0_a, x * x / 4);\n            }\n\n            return Math.exp(-x) / Math.sqrt(x) * _horner(b0_b, 2 / x);\n        }\n\n        const b1_a = [-0.4686e-4, -0.110404e-2, -0.1919402e-1, -0.18156897, -0.67278579, 0.15443144, 1.0];\n        const b1_b = [-0.68245e-3, 0.325614e-2, -0.780353e-2, 0.1504268e-1, -0.3655620e-1, 0.23498619, 1.25331414];\n\n        function bessel1(x: number): number {\n            if (x <= 2) {\n                return Math.log(x / 2) * besseli(x, 1) + (1 / x) * _horner(b1_a, x * x / 4);\n            }\n\n            return Math.exp(-x) / Math.sqrt(x) * _horner(b1_b, 2 / x);\n        }\n\n        return _bessel_wrap(bessel0, bessel1, 2, 1);\n    })();\n}\n\nexport function isValidBinaryNumber(number: string): boolean {\n    return /^[01]{1,10}$/.test(number);\n}\n\nexport function isValidOctalNumber(number: string): boolean {\n    return /^[0-7]{1,10}$/.test(number);\n}\n\nexport function isValidHexadecimalNumber(number: string): boolean {\n    return /^[0-9A-Fa-f]{1,10}$/.test(number);\n}\n\nexport function erf(x: number): number {\n    if (x === 0) {\n        return 0;\n    }\n\n    const cof = [\n        -1.3026537197817094,\n        // eslint-disable-next-line no-loss-of-precision\n        6.4196979235649026e-1,\n        1.9476473204185836e-2,\n        -9.561514786808631e-3,\n        -9.46595344482036e-4,\n        3.66839497852761e-4,\n        4.2523324806907e-5,\n        -2.0278578112534e-5,\n        -1.624290004647e-6,\n        1.303655835580e-6,\n        1.5626441722e-8,\n        -8.5238095915e-8,\n        6.529054439e-9,\n        5.059343495e-9,\n        -9.91364156e-10,\n        -2.27365122e-10,\n        9.6467911e-11,\n        2.394038e-12,\n        -6.886027e-12,\n        8.94487e-13,\n        3.13092e-13,\n        -1.12708e-13,\n        3.81e-16,\n        7.106e-15,\n        -1.523e-15,\n        -9.4e-17,\n        1.21e-16,\n        -2.8e-17,\n    ];\n\n    let _x = x;\n    let isNeg = false;\n\n    if (_x < 0) {\n        _x = -_x;\n        isNeg = true;\n    }\n\n    const t = 2 / (2 + _x);\n    const ty = 4 * t - 2;\n\n    let d = 0;\n    let dd = 0;\n    let tmp;\n\n    for (let j = cof.length - 1; j > 0; j--) {\n        tmp = d;\n        d = ty * d - dd + cof[j];\n        dd = tmp;\n    }\n\n    const res = t * Math.exp(-_x * _x + 0.5 * (cof[0] + ty * d) - dd);\n\n    return isNeg ? res - 1 : 1 - res;\n};\n\nexport function erfc(x: number): number {\n    return 1 - erf(x);\n}\n\nexport function erfcINV(p: number): number {\n    if (p >= 2) {\n        return -100;\n    }\n\n    if (p <= 0) {\n        return 100;\n    }\n\n    const _p = (p < 1) ? p : 2 - p;\n    const temp = Math.sqrt(-2 * Math.log(_p / 2));\n\n    let x = -0.70711 * ((2.30753 + temp * 0.27061) / (1 + temp * (0.99229 + temp * 0.04481)) - temp);\n\n    for (let j = 0; j < 2; j++) {\n        const err = erfc(x) - _p;\n\n        x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err); // eslint-disable-line\n    }\n\n    return (p < 1) ? x : -x;\n};\n"],"mappings":"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","names":["BESSEL","besselj","besseli"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"534125f6a5cecfd483edbbeb6b5c0586e916d5bd"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/statistical.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/statistical.ts","statementMap":{"0":{"start":{"line":7,"column":2},"end":{"line":9,"column":3}},"1":{"start":{"line":8,"column":4},"end":{"line":8,"column":13}},"2":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":13}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":48}},"5":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":13}},"7":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"8":{"start":{"line":20,"column":4},"end":{"line":20,"column":13}},"9":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":80}},"11":{"start":{"line":25,"column":2},"end":{"line":25,"column":120}},"12":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"13":{"start":{"line":29,"column":4},"end":{"line":29,"column":13}},"14":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"15":{"start":{"line":32,"column":4},"end":{"line":32,"column":13}},"16":{"start":{"line":34,"column":18},"end":{"line":34,"column":22}},"17":{"start":{"line":36,"column":2},"end":{"line":56,"column":3}},"18":{"start":{"line":37,"column":14},"end":{"line":37,"column":63}},"19":{"start":{"line":38,"column":17},"end":{"line":38,"column":44}},"20":{"start":{"line":39,"column":4},"end":{"line":39,"column":84}},"21":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"22":{"start":{"line":41,"column":6},"end":{"line":41,"column":13}},"23":{"start":{"line":43,"column":18},"end":{"line":43,"column":33}},"24":{"start":{"line":44,"column":18},"end":{"line":44,"column":64}},"25":{"start":{"line":45,"column":18},"end":{"line":45,"column":135}},"26":{"start":{"line":46,"column":4},"end":{"line":46,"column":53}},"27":{"start":{"line":48,"column":18},"end":{"line":48,"column":76}},"28":{"start":{"line":49,"column":18},"end":{"line":49,"column":73}},"29":{"start":{"line":50,"column":18},"end":{"line":50,"column":31}},"30":{"start":{"line":51,"column":4},"end":{"line":55,"column":5}},"31":{"start":{"line":52,"column":6},"end":{"line":52,"column":55}},"32":{"start":{"line":54,"column":6},"end":{"line":54,"column":63}},"33":{"start":{"line":57,"column":20},"end":{"line":57,"column":62}},"34":{"start":{"line":59,"column":2},"end":{"line":76,"column":3}},"35":{"start":{"line":59,"column":15},"end":{"line":59,"column":16}},"36":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"37":{"start":{"line":61,"column":6},"end":{"line":61,"column":15}},"38":{"start":{"line":63,"column":4},"end":{"line":63,"column":65}},"39":{"start":{"line":64,"column":4},"end":{"line":64,"column":87}},"40":{"start":{"line":65,"column":4},"end":{"line":65,"column":18}},"41":{"start":{"line":66,"column":4},"end":{"line":66,"column":87}},"42":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"43":{"start":{"line":68,"column":6},"end":{"line":68,"column":24}},"44":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"45":{"start":{"line":71,"column":6},"end":{"line":71,"column":28}},"46":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"47":{"start":{"line":74,"column":6},"end":{"line":74,"column":12}},"48":{"start":{"line":77,"column":2},"end":{"line":77,"column":11}},"49":{"start":{"line":80,"column":13},"end":{"line":80,"column":149}},"50":{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},"51":{"start":{"line":82,"column":4},"end":{"line":82,"column":62}},"52":{"start":{"line":84,"column":2},"end":{"line":84,"column":67}},"53":{"start":{"line":87,"column":19},"end":{"line":87,"column":22}},"54":{"start":{"line":88,"column":18},"end":{"line":88,"column":22}},"55":{"start":{"line":89,"column":10},"end":{"line":89,"column":46}},"56":{"start":{"line":90,"column":2},"end":{"line":92,"column":3}},"57":{"start":{"line":91,"column":4},"end":{"line":91,"column":16}},"58":{"start":{"line":93,"column":2},"end":{"line":93,"column":12}},"59":{"start":{"line":94,"column":10},"end":{"line":94,"column":11}},"60":{"start":{"line":95,"column":10},"end":{"line":95,"column":11}},"61":{"start":{"line":96,"column":2},"end":{"line":122,"column":3}},"62":{"start":{"line":96,"column":15},"end":{"line":96,"column":16}},"63":{"start":{"line":97,"column":15},"end":{"line":97,"column":75}},"64":{"start":{"line":98,"column":4},"end":{"line":98,"column":21}},"65":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"66":{"start":{"line":100,"column":6},"end":{"line":100,"column":18}},"67":{"start":{"line":102,"column":4},"end":{"line":102,"column":21}},"68":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"69":{"start":{"line":104,"column":6},"end":{"line":104,"column":18}},"70":{"start":{"line":106,"column":4},"end":{"line":106,"column":14}},"71":{"start":{"line":107,"column":4},"end":{"line":107,"column":15}},"72":{"start":{"line":108,"column":4},"end":{"line":108,"column":91}},"73":{"start":{"line":109,"column":4},"end":{"line":109,"column":21}},"74":{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},"75":{"start":{"line":111,"column":6},"end":{"line":111,"column":18}},"76":{"start":{"line":113,"column":4},"end":{"line":113,"column":21}},"77":{"start":{"line":114,"column":4},"end":{"line":116,"column":5}},"78":{"start":{"line":115,"column":6},"end":{"line":115,"column":18}},"79":{"start":{"line":117,"column":4},"end":{"line":117,"column":14}},"80":{"start":{"line":118,"column":4},"end":{"line":118,"column":15}},"81":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"82":{"start":{"line":120,"column":6},"end":{"line":120,"column":12}},"83":{"start":{"line":123,"column":2},"end":{"line":123,"column":11}},"84":{"start":{"line":126,"column":2},"end":{"line":128,"column":3}},"85":{"start":{"line":127,"column":4},"end":{"line":127,"column":63}},"86":{"start":{"line":129,"column":2},"end":{"line":129,"column":58}},"87":{"start":{"line":132,"column":2},"end":{"line":132,"column":64}},"88":{"start":{"line":135,"column":2},"end":{"line":137,"column":3}},"89":{"start":{"line":136,"column":4},"end":{"line":136,"column":13}},"90":{"start":{"line":138,"column":2},"end":{"line":140,"column":3}},"91":{"start":{"line":139,"column":4},"end":{"line":139,"column":13}},"92":{"start":{"line":141,"column":2},"end":{"line":143,"column":3}},"93":{"start":{"line":142,"column":4},"end":{"line":142,"column":22}},"94":{"start":{"line":144,"column":15},"end":{"line":144,"column":16}},"95":{"start":{"line":145,"column":2},"end":{"line":147,"column":3}},"96":{"start":{"line":145,"column":15},"end":{"line":145,"column":16}},"97":{"start":{"line":146,"column":4},"end":{"line":146,"column":50}},"98":{"start":{"line":148,"column":2},"end":{"line":148,"column":16}},"99":{"start":{"line":151,"column":2},"end":{"line":156,"column":3}},"100":{"start":{"line":152,"column":4},"end":{"line":154,"column":5}},"101":{"start":{"line":153,"column":6},"end":{"line":153,"column":15}},"102":{"start":{"line":155,"column":4},"end":{"line":155,"column":13}},"103":{"start":{"line":157,"column":2},"end":{"line":157,"column":91}},"104":{"start":{"line":160,"column":2},"end":{"line":162,"column":3}},"105":{"start":{"line":161,"column":4},"end":{"line":161,"column":13}},"106":{"start":{"line":163,"column":2},"end":{"line":163,"column":44}},"107":{"start":{"line":166,"column":2},"end":{"line":168,"column":3}},"108":{"start":{"line":167,"column":4},"end":{"line":167,"column":13}},"109":{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},"110":{"start":{"line":170,"column":4},"end":{"line":170,"column":15}},"111":{"start":{"line":172,"column":2},"end":{"line":172,"column":119}},"112":{"start":{"line":175,"column":2},"end":{"line":177,"column":3}},"113":{"start":{"line":176,"column":4},"end":{"line":176,"column":13}},"114":{"start":{"line":178,"column":2},"end":{"line":180,"column":3}},"115":{"start":{"line":179,"column":4},"end":{"line":179,"column":20}},"116":{"start":{"line":181,"column":2},"end":{"line":181,"column":61}},"117":{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},"118":{"start":{"line":185,"column":4},"end":{"line":185,"column":13}},"119":{"start":{"line":187,"column":2},"end":{"line":187,"column":117}},"120":{"start":{"line":190,"column":2},"end":{"line":192,"column":3}},"121":{"start":{"line":191,"column":4},"end":{"line":191,"column":13}},"122":{"start":{"line":193,"column":2},"end":{"line":195,"column":3}},"123":{"start":{"line":194,"column":4},"end":{"line":194,"column":20}},"124":{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},"125":{"start":{"line":197,"column":4},"end":{"line":197,"column":13}},"126":{"start":{"line":199,"column":15},"end":{"line":199,"column":65}},"127":{"start":{"line":200,"column":2},"end":{"line":200,"column":61}},"128":{"start":{"line":201,"column":2},"end":{"line":201,"column":39}},"129":{"start":{"line":202,"column":2},"end":{"line":202,"column":86}},"130":{"start":{"line":203,"column":2},"end":{"line":203,"column":16}},"131":{"start":{"line":206,"column":2},"end":{"line":208,"column":3}},"132":{"start":{"line":207,"column":4},"end":{"line":207,"column":13}},"133":{"start":{"line":209,"column":2},"end":{"line":211,"column":3}},"134":{"start":{"line":210,"column":4},"end":{"line":210,"column":20}},"135":{"start":{"line":212,"column":2},"end":{"line":212,"column":104}},"136":{"start":{"line":215,"column":2},"end":{"line":217,"column":3}},"137":{"start":{"line":216,"column":4},"end":{"line":216,"column":13}},"138":{"start":{"line":218,"column":2},"end":{"line":218,"column":35}},"139":{"start":{"line":221,"column":2},"end":{"line":223,"column":3}},"140":{"start":{"line":222,"column":4},"end":{"line":222,"column":13}},"141":{"start":{"line":224,"column":2},"end":{"line":224,"column":40}},"142":{"start":{"line":227,"column":12},"end":{"line":227,"column":26}},"143":{"start":{"line":228,"column":19},"end":{"line":228,"column":20}},"144":{"start":{"line":229,"column":19},"end":{"line":229,"column":20}},"145":{"start":{"line":230,"column":2},"end":{"line":233,"column":3}},"146":{"start":{"line":230,"column":15},"end":{"line":230,"column":16}},"147":{"start":{"line":231,"column":4},"end":{"line":231,"column":29}},"148":{"start":{"line":232,"column":4},"end":{"line":232,"column":29}},"149":{"start":{"line":234,"column":22},"end":{"line":234,"column":36}},"150":{"start":{"line":235,"column":22},"end":{"line":235,"column":36}},"151":{"start":{"line":236,"column":12},"end":{"line":236,"column":13}},"152":{"start":{"line":237,"column":12},"end":{"line":237,"column":13}},"153":{"start":{"line":238,"column":2},"end":{"line":241,"column":3}},"154":{"start":{"line":238,"column":15},"end":{"line":238,"column":16}},"155":{"start":{"line":239,"column":4},"end":{"line":239,"column":67}},"156":{"start":{"line":240,"column":4},"end":{"line":240,"column":43}},"157":{"start":{"line":242,"column":2},"end":{"line":244,"column":3}},"158":{"start":{"line":243,"column":4},"end":{"line":243,"column":20}},"159":{"start":{"line":245,"column":12},"end":{"line":245,"column":21}},"160":{"start":{"line":246,"column":12},"end":{"line":246,"column":41}},"161":{"start":{"line":247,"column":2},"end":{"line":247,"column":19}},"162":{"start":{"line":250,"column":12},"end":{"line":259,"column":3}},"163":{"start":{"line":260,"column":12},"end":{"line":271,"column":3}},"164":{"start":{"line":272,"column":13},"end":{"line":272,"column":14}},"165":{"start":{"line":273,"column":10},"end":{"line":273,"column":11}},"166":{"start":{"line":274,"column":2},"end":{"line":276,"column":3}},"167":{"start":{"line":275,"column":4},"end":{"line":275,"column":20}},"168":{"start":{"line":277,"column":2},"end":{"line":285,"column":3}},"169":{"start":{"line":278,"column":19},"end":{"line":278,"column":33}},"170":{"start":{"line":279,"column":4},"end":{"line":284,"column":5}},"171":{"start":{"line":280,"column":6},"end":{"line":280,"column":72}},"172":{"start":{"line":281,"column":6},"end":{"line":281,"column":16}},"173":{"start":{"line":283,"column":6},"end":{"line":283,"column":22}},"174":{"start":{"line":286,"column":13},"end":{"line":286,"column":14}},"175":{"start":{"line":287,"column":10},"end":{"line":287,"column":11}},"176":{"start":{"line":289,"column":2},"end":{"line":293,"column":3}},"177":{"start":{"line":290,"column":4},"end":{"line":290,"column":12}},"178":{"start":{"line":292,"column":4},"end":{"line":292,"column":35}},"179":{"start":{"line":294,"column":13},"end":{"line":294,"column":14}},"180":{"start":{"line":295,"column":13},"end":{"line":295,"column":14}},"181":{"start":{"line":296,"column":2},"end":{"line":299,"column":3}},"182":{"start":{"line":296,"column":15},"end":{"line":296,"column":16}},"183":{"start":{"line":297,"column":4},"end":{"line":297,"column":29}},"184":{"start":{"line":298,"column":4},"end":{"line":298,"column":27}},"185":{"start":{"line":300,"column":12},"end":{"line":300,"column":27}},"186":{"start":{"line":301,"column":2},"end":{"line":308,"column":3}},"187":{"start":{"line":302,"column":4},"end":{"line":302,"column":14}},"188":{"start":{"line":303,"column":9},"end":{"line":308,"column":3}},"189":{"start":{"line":304,"column":4},"end":{"line":307,"column":5}},"190":{"start":{"line":304,"column":17},"end":{"line":304,"column":18}},"191":{"start":{"line":305,"column":6},"end":{"line":305,"column":15}},"192":{"start":{"line":306,"column":6},"end":{"line":306,"column":10}},"193":{"start":{"line":309,"column":2},"end":{"line":311,"column":3}},"194":{"start":{"line":310,"column":4},"end":{"line":310,"column":21}},"195":{"start":{"line":312,"column":2},"end":{"line":312,"column":13}},"196":{"start":{"line":315,"column":2},"end":{"line":317,"column":3}},"197":{"start":{"line":316,"column":4},"end":{"line":316,"column":13}},"198":{"start":{"line":318,"column":2},"end":{"line":318,"column":38}},"199":{"start":{"line":321,"column":2},"end":{"line":323,"column":3}},"200":{"start":{"line":322,"column":4},"end":{"line":322,"column":13}},"201":{"start":{"line":324,"column":2},"end":{"line":326,"column":3}},"202":{"start":{"line":325,"column":4},"end":{"line":325,"column":20}},"203":{"start":{"line":327,"column":2},"end":{"line":327,"column":98}},"204":{"start":{"line":330,"column":2},"end":{"line":332,"column":3}},"205":{"start":{"line":331,"column":4},"end":{"line":331,"column":13}},"206":{"start":{"line":333,"column":2},"end":{"line":335,"column":3}},"207":{"start":{"line":334,"column":4},"end":{"line":334,"column":20}},"208":{"start":{"line":336,"column":2},"end":{"line":336,"column":55}},"209":{"start":{"line":339,"column":23},"end":{"line":347,"column":3}},"210":{"start":{"line":348,"column":10},"end":{"line":348,"column":11}},"211":{"start":{"line":349,"column":12},"end":{"line":349,"column":19}},"212":{"start":{"line":350,"column":2},"end":{"line":350,"column":35}},"213":{"start":{"line":351,"column":12},"end":{"line":351,"column":29}},"214":{"start":{"line":352,"column":2},"end":{"line":354,"column":3}},"215":{"start":{"line":352,"column":15},"end":{"line":352,"column":16}},"216":{"start":{"line":353,"column":4},"end":{"line":353,"column":33}},"217":{"start":{"line":355,"column":2},"end":{"line":355,"column":55}},"218":{"start":{"line":358,"column":2},"end":{"line":360,"column":3}},"219":{"start":{"line":359,"column":4},"end":{"line":359,"column":22}},"220":{"start":{"line":361,"column":18},"end":{"line":361,"column":23}},"221":{"start":{"line":362,"column":19},"end":{"line":362,"column":72}},"222":{"start":{"line":363,"column":14},"end":{"line":363,"column":24}},"223":{"start":{"line":364,"column":14},"end":{"line":364,"column":50}},"224":{"start":{"line":365,"column":11},"end":{"line":365,"column":12}},"225":{"start":{"line":366,"column":12},"end":{"line":366,"column":17}},"226":{"start":{"line":367,"column":12},"end":{"line":367,"column":15}},"227":{"start":{"line":368,"column":2},"end":{"line":379,"column":3}},"228":{"start":{"line":369,"column":4},"end":{"line":371,"column":5}},"229":{"start":{"line":370,"column":6},"end":{"line":370,"column":15}},"230":{"start":{"line":372,"column":4},"end":{"line":377,"column":5}},"231":{"start":{"line":372,"column":17},"end":{"line":372,"column":18}},"232":{"start":{"line":373,"column":6},"end":{"line":373,"column":29}},"233":{"start":{"line":374,"column":6},"end":{"line":376,"column":7}},"234":{"start":{"line":375,"column":8},"end":{"line":375,"column":14}},"235":{"start":{"line":378,"column":4},"end":{"line":378,"column":21}},"236":{"start":{"line":380,"column":2},"end":{"line":382,"column":3}},"237":{"start":{"line":381,"column":4},"end":{"line":381,"column":13}},"238":{"start":{"line":383,"column":10},"end":{"line":383,"column":19}},"239":{"start":{"line":384,"column":10},"end":{"line":384,"column":21}},"240":{"start":{"line":385,"column":10},"end":{"line":385,"column":15}},"241":{"start":{"line":386,"column":10},"end":{"line":386,"column":11}},"242":{"start":{"line":387,"column":2},"end":{"line":403,"column":3}},"243":{"start":{"line":387,"column":15},"end":{"line":387,"column":16}},"244":{"start":{"line":388,"column":17},"end":{"line":388,"column":29}},"245":{"start":{"line":389,"column":4},"end":{"line":389,"column":11}},"246":{"start":{"line":390,"column":4},"end":{"line":390,"column":21}},"247":{"start":{"line":391,"column":4},"end":{"line":393,"column":5}},"248":{"start":{"line":392,"column":6},"end":{"line":392,"column":18}},"249":{"start":{"line":394,"column":4},"end":{"line":394,"column":21}},"250":{"start":{"line":395,"column":4},"end":{"line":397,"column":5}},"251":{"start":{"line":396,"column":6},"end":{"line":396,"column":18}},"252":{"start":{"line":398,"column":4},"end":{"line":398,"column":14}},"253":{"start":{"line":399,"column":4},"end":{"line":399,"column":15}},"254":{"start":{"line":400,"column":4},"end":{"line":402,"column":5}},"255":{"start":{"line":401,"column":6},"end":{"line":401,"column":12}},"256":{"start":{"line":404,"column":2},"end":{"line":404,"column":21}},"257":{"start":{"line":408,"column":2},"end":{"line":410,"column":3}},"258":{"start":{"line":409,"column":4},"end":{"line":409,"column":13}},"259":{"start":{"line":411,"column":2},"end":{"line":413,"column":3}},"260":{"start":{"line":412,"column":4},"end":{"line":412,"column":49}},"261":{"start":{"line":415,"column":2},"end":{"line":430,"column":3}},"262":{"start":{"line":416,"column":15},"end":{"line":416,"column":34}},"263":{"start":{"line":417,"column":17},"end":{"line":417,"column":45}},"264":{"start":{"line":418,"column":4},"end":{"line":418,"column":84}},"265":{"start":{"line":419,"column":4},"end":{"line":421,"column":5}},"266":{"start":{"line":420,"column":6},"end":{"line":420,"column":13}},"267":{"start":{"line":422,"column":4},"end":{"line":422,"column":76}},"268":{"start":{"line":424,"column":17},"end":{"line":424,"column":43}},"269":{"start":{"line":425,"column":4},"end":{"line":429,"column":5}},"270":{"start":{"line":426,"column":6},"end":{"line":426,"column":32}},"271":{"start":{"line":428,"column":6},"end":{"line":428,"column":52}},"272":{"start":{"line":431,"column":18},"end":{"line":431,"column":22}},"273":{"start":{"line":432,"column":14},"end":{"line":432,"column":24}},"274":{"start":{"line":434,"column":2},"end":{"line":454,"column":3}},"275":{"start":{"line":434,"column":15},"end":{"line":434,"column":16}},"276":{"start":{"line":435,"column":4},"end":{"line":437,"column":5}},"277":{"start":{"line":436,"column":6},"end":{"line":436,"column":15}},"278":{"start":{"line":438,"column":4},"end":{"line":438,"column":32}},"279":{"start":{"line":439,"column":4},"end":{"line":443,"column":5}},"280":{"start":{"line":440,"column":6},"end":{"line":440,"column":129}},"281":{"start":{"line":442,"column":6},"end":{"line":442,"column":53}},"282":{"start":{"line":444,"column":4},"end":{"line":446,"column":5}},"283":{"start":{"line":445,"column":6},"end":{"line":445,"column":73}},"284":{"start":{"line":447,"column":4},"end":{"line":447,"column":11}},"285":{"start":{"line":448,"column":4},"end":{"line":450,"column":5}},"286":{"start":{"line":449,"column":6},"end":{"line":449,"column":24}},"287":{"start":{"line":451,"column":4},"end":{"line":453,"column":5}},"288":{"start":{"line":452,"column":6},"end":{"line":452,"column":12}},"289":{"start":{"line":455,"column":2},"end":{"line":455,"column":11}},"290":{"start":{"line":458,"column":15},"end":{"line":458,"column":16}},"291":{"start":{"line":459,"column":2},"end":{"line":461,"column":3}},"292":{"start":{"line":459,"column":15},"end":{"line":459,"column":16}},"293":{"start":{"line":460,"column":4},"end":{"line":460,"column":44}},"294":{"start":{"line":462,"column":2},"end":{"line":462,"column":16}},"295":{"start":{"line":465,"column":2},"end":{"line":467,"column":3}},"296":{"start":{"line":466,"column":4},"end":{"line":466,"column":13}},"297":{"start":{"line":468,"column":2},"end":{"line":468,"column":87}},"298":{"start":{"line":471,"column":2},"end":{"line":473,"column":3}},"299":{"start":{"line":472,"column":4},"end":{"line":472,"column":13}},"300":{"start":{"line":474,"column":2},"end":{"line":474,"column":90}},"301":{"start":{"line":477,"column":2},"end":{"line":479,"column":3}},"302":{"start":{"line":478,"column":4},"end":{"line":478,"column":13}},"303":{"start":{"line":480,"column":2},"end":{"line":480,"column":148}},"304":{"start":{"line":483,"column":2},"end":{"line":483,"column":61}},"305":{"start":{"line":486,"column":2},"end":{"line":488,"column":3}},"306":{"start":{"line":487,"column":4},"end":{"line":487,"column":13}},"307":{"start":{"line":489,"column":15},"end":{"line":489,"column":16}},"308":{"start":{"line":490,"column":2},"end":{"line":492,"column":3}},"309":{"start":{"line":490,"column":15},"end":{"line":490,"column":16}},"310":{"start":{"line":491,"column":4},"end":{"line":491,"column":55}},"311":{"start":{"line":493,"column":2},"end":{"line":493,"column":16}},"312":{"start":{"line":496,"column":2},"end":{"line":498,"column":3}},"313":{"start":{"line":497,"column":4},"end":{"line":497,"column":13}},"314":{"start":{"line":499,"column":2},"end":{"line":499,"column":119}},"315":{"start":{"line":502,"column":2},"end":{"line":502,"column":80}},"316":{"start":{"line":505,"column":2},"end":{"line":505,"column":124}},"317":{"start":{"line":508,"column":2},"end":{"line":508,"column":77}},"318":{"start":{"line":511,"column":15},"end":{"line":511,"column":16}},"319":{"start":{"line":512,"column":2},"end":{"line":514,"column":3}},"320":{"start":{"line":512,"column":15},"end":{"line":512,"column":16}},"321":{"start":{"line":513,"column":4},"end":{"line":513,"column":34}},"322":{"start":{"line":515,"column":2},"end":{"line":515,"column":16}},"323":{"start":{"line":518,"column":2},"end":{"line":518,"column":61}},"324":{"start":{"line":521,"column":17},"end":{"line":521,"column":102}},"325":{"start":{"line":522,"column":2},"end":{"line":522,"column":37}},"326":{"start":{"line":525,"column":14},"end":{"line":525,"column":66}},"327":{"start":{"line":526,"column":2},"end":{"line":526,"column":79}},"328":{"start":{"line":529,"column":10},"end":{"line":529,"column":84}},"329":{"start":{"line":530,"column":2},"end":{"line":530,"column":42}},"330":{"start":{"line":531,"column":2},"end":{"line":531,"column":36}},"331":{"start":{"line":534,"column":23},"end":{"line":534,"column":25}},"332":{"start":{"line":535,"column":23},"end":{"line":535,"column":25}},"333":{"start":{"line":536,"column":20},"end":{"line":536,"column":24}},"334":{"start":{"line":537,"column":2},"end":{"line":573,"column":3}},"335":{"start":{"line":537,"column":15},"end":{"line":537,"column":16}},"336":{"start":{"line":538,"column":27},"end":{"line":538,"column":60}},"337":{"start":{"line":539,"column":30},"end":{"line":539,"column":51}},"338":{"start":{"line":540,"column":27},"end":{"line":540,"column":60}},"339":{"start":{"line":541,"column":30},"end":{"line":541,"column":51}},"340":{"start":{"line":542,"column":25},"end":{"line":542,"column":98}},"341":{"start":{"line":543,"column":25},"end":{"line":543,"column":98}},"342":{"start":{"line":544,"column":4},"end":{"line":552,"column":5}},"343":{"start":{"line":545,"column":6},"end":{"line":551,"column":8}},"344":{"start":{"line":553,"column":4},"end":{"line":561,"column":5}},"345":{"start":{"line":554,"column":6},"end":{"line":560,"column":8}},"346":{"start":{"line":562,"column":4},"end":{"line":564,"column":5}},"347":{"start":{"line":563,"column":6},"end":{"line":563,"column":15}},"348":{"start":{"line":565,"column":24},"end":{"line":565,"column":47}},"349":{"start":{"line":566,"column":24},"end":{"line":566,"column":47}},"350":{"start":{"line":567,"column":4},"end":{"line":569,"column":5}},"351":{"start":{"line":568,"column":6},"end":{"line":568,"column":15}},"352":{"start":{"line":570,"column":4},"end":{"line":570,"column":36}},"353":{"start":{"line":571,"column":4},"end":{"line":571,"column":36}},"354":{"start":{"line":572,"column":4},"end":{"line":572,"column":24}},"355":{"start":{"line":574,"column":2},"end":{"line":580,"column":4}},"356":{"start":{"line":583,"column":26},"end":{"line":583,"column":71}},"357":{"start":{"line":584,"column":29},"end":{"line":584,"column":77}},"358":{"start":{"line":585,"column":24},"end":{"line":585,"column":39}},"359":{"start":{"line":586,"column":27},"end":{"line":586,"column":45}},"360":{"start":{"line":587,"column":2},"end":{"line":596,"column":3}},"361":{"start":{"line":588,"column":4},"end":{"line":588,"column":68}},"362":{"start":{"line":589,"column":4},"end":{"line":589,"column":74}},"363":{"start":{"line":590,"column":4},"end":{"line":595,"column":5}},"364":{"start":{"line":591,"column":6},"end":{"line":594,"column":8}},"365":{"start":{"line":597,"column":2},"end":{"line":606,"column":3}},"366":{"start":{"line":598,"column":26},"end":{"line":598,"column":67}},"367":{"start":{"line":599,"column":29},"end":{"line":599,"column":73}},"368":{"start":{"line":600,"column":4},"end":{"line":605,"column":5}},"369":{"start":{"line":601,"column":6},"end":{"line":604,"column":8}},"370":{"start":{"line":607,"column":2},"end":{"line":610,"column":4}},"371":{"start":{"line":613,"column":19},"end":{"line":613,"column":60}},"372":{"start":{"line":614,"column":22},"end":{"line":614,"column":66}},"373":{"start":{"line":615,"column":17},"end":{"line":615,"column":19}},"374":{"start":{"line":616,"column":2},"end":{"line":625,"column":3}},"375":{"start":{"line":616,"column":15},"end":{"line":616,"column":16}},"376":{"start":{"line":617,"column":4},"end":{"line":617,"column":19}},"377":{"start":{"line":618,"column":4},"end":{"line":624,"column":5}},"378":{"start":{"line":618,"column":17},"end":{"line":618,"column":18}},"379":{"start":{"line":619,"column":26},"end":{"line":619,"column":67}},"380":{"start":{"line":620,"column":6},"end":{"line":622,"column":7}},"381":{"start":{"line":621,"column":8},"end":{"line":621,"column":56}},"382":{"start":{"line":623,"column":6},"end":{"line":623,"column":46}},"383":{"start":{"line":626,"column":2},"end":{"line":626,"column":16}},"384":{"start":{"line":629,"column":17},"end":{"line":629,"column":19}},"385":{"start":{"line":630,"column":10},"end":{"line":630,"column":11}},"386":{"start":{"line":631,"column":2},"end":{"line":636,"column":3}},"387":{"start":{"line":631,"column":15},"end":{"line":631,"column":16}},"388":{"start":{"line":632,"column":4},"end":{"line":632,"column":19}},"389":{"start":{"line":633,"column":4},"end":{"line":635,"column":5}},"390":{"start":{"line":633,"column":17},"end":{"line":633,"column":18}},"391":{"start":{"line":634,"column":6},"end":{"line":634,"column":26}},"392":{"start":{"line":637,"column":2},"end":{"line":637,"column":16}},"393":{"start":{"line":640,"column":10},"end":{"line":640,"column":23}},"394":{"start":{"line":641,"column":2},"end":{"line":643,"column":3}},"395":{"start":{"line":642,"column":4},"end":{"line":642,"column":54}},"396":{"start":{"line":642,"column":37},"end":{"line":642,"column":52}},"397":{"start":{"line":645,"column":2},"end":{"line":649,"column":3}},"398":{"start":{"line":646,"column":4},"end":{"line":646,"column":82}},"399":{"start":{"line":648,"column":4},"end":{"line":648,"column":83}},"400":{"start":{"line":650,"column":2},"end":{"line":653,"column":3}},"401":{"start":{"line":651,"column":4},"end":{"line":651,"column":28}},"402":{"start":{"line":652,"column":4},"end":{"line":652,"column":36}},"403":{"start":{"line":654,"column":2},"end":{"line":656,"column":3}},"404":{"start":{"line":655,"column":4},"end":{"line":655,"column":14}},"405":{"start":{"line":657,"column":2},"end":{"line":657,"column":33}},"406":{"start":{"line":660,"column":12},"end":{"line":660,"column":32}},"407":{"start":{"line":661,"column":13},"end":{"line":661,"column":14}},"408":{"start":{"line":662,"column":13},"end":{"line":662,"column":14}},"409":{"start":{"line":663,"column":14},"end":{"line":663,"column":15}},"410":{"start":{"line":664,"column":14},"end":{"line":664,"column":15}},"411":{"start":{"line":665,"column":2},"end":{"line":670,"column":3}},"412":{"start":{"line":665,"column":15},"end":{"line":665,"column":16}},"413":{"start":{"line":666,"column":4},"end":{"line":666,"column":29}},"414":{"start":{"line":667,"column":4},"end":{"line":667,"column":29}},"415":{"start":{"line":668,"column":4},"end":{"line":668,"column":49}},"416":{"start":{"line":669,"column":4},"end":{"line":669,"column":49}},"417":{"start":{"line":671,"column":15},"end":{"line":671,"column":38}},"418":{"start":{"line":672,"column":16},"end":{"line":672,"column":48}},"419":{"start":{"line":673,"column":20},"end":{"line":673,"column":57}},"420":{"start":{"line":674,"column":2},"end":{"line":677,"column":4}},"421":{"start":{"line":680,"column":18},"end":{"line":680,"column":38}},"422":{"start":{"line":681,"column":18},"end":{"line":681,"column":36}},"423":{"start":{"line":682,"column":17},"end":{"line":682,"column":31}},"424":{"start":{"line":683,"column":20},"end":{"line":683,"column":37}},"425":{"start":{"line":684,"column":17},"end":{"line":684,"column":48}},"426":{"start":{"line":685,"column":20},"end":{"line":685,"column":47}},"427":{"start":{"line":686,"column":2},"end":{"line":707,"column":3}},"428":{"start":{"line":686,"column":15},"end":{"line":686,"column":16}},"429":{"start":{"line":687,"column":23},"end":{"line":687,"column":33}},"430":{"start":{"line":688,"column":20},"end":{"line":688,"column":21}},"431":{"start":{"line":689,"column":4},"end":{"line":691,"column":5}},"432":{"start":{"line":689,"column":17},"end":{"line":689,"column":18}},"433":{"start":{"line":690,"column":6},"end":{"line":690,"column":38}},"434":{"start":{"line":692,"column":18},"end":{"line":692,"column":82}},"435":{"start":{"line":693,"column":4},"end":{"line":693,"column":25}},"436":{"start":{"line":694,"column":4},"end":{"line":706,"column":5}},"437":{"start":{"line":695,"column":6},"end":{"line":695,"column":29}},"438":{"start":{"line":696,"column":6},"end":{"line":705,"column":7}},"439":{"start":{"line":696,"column":19},"end":{"line":696,"column":24}},"440":{"start":{"line":697,"column":18},"end":{"line":697,"column":19}},"441":{"start":{"line":698,"column":8},"end":{"line":700,"column":9}},"442":{"start":{"line":698,"column":21},"end":{"line":698,"column":22}},"443":{"start":{"line":699,"column":10},"end":{"line":699,"column":47}},"444":{"start":{"line":701,"column":8},"end":{"line":701,"column":37}},"445":{"start":{"line":702,"column":8},"end":{"line":704,"column":9}},"446":{"start":{"line":702,"column":21},"end":{"line":702,"column":22}},"447":{"start":{"line":703,"column":10},"end":{"line":703,"column":47}},"448":{"start":{"line":708,"column":2},"end":{"line":708,"column":28}},"449":{"start":{"line":709,"column":2},"end":{"line":709,"column":34}},"450":{"start":{"line":710,"column":2},"end":{"line":710,"column":45}},"451":{"start":{"line":711,"column":17},"end":{"line":711,"column":44}},"452":{"start":{"line":712,"column":2},"end":{"line":722,"column":3}},"453":{"start":{"line":712,"column":15},"end":{"line":712,"column":16}},"454":{"start":{"line":713,"column":23},"end":{"line":713,"column":33}},"455":{"start":{"line":714,"column":14},"end":{"line":714,"column":15}},"456":{"start":{"line":715,"column":4},"end":{"line":717,"column":5}},"457":{"start":{"line":715,"column":17},"end":{"line":715,"column":18}},"458":{"start":{"line":716,"column":6},"end":{"line":716,"column":40}},"459":{"start":{"line":718,"column":4},"end":{"line":718,"column":40}},"460":{"start":{"line":719,"column":4},"end":{"line":721,"column":5}},"461":{"start":{"line":719,"column":17},"end":{"line":719,"column":18}},"462":{"start":{"line":720,"column":6},"end":{"line":720,"column":40}},"463":{"start":{"line":723,"column":2},"end":{"line":731,"column":3}},"464":{"start":{"line":723,"column":15},"end":{"line":723,"column":35}},"465":{"start":{"line":724,"column":4},"end":{"line":724,"column":31}},"466":{"start":{"line":725,"column":17},"end":{"line":725,"column":27}},"467":{"start":{"line":726,"column":23},"end":{"line":726,"column":33}},"468":{"start":{"line":727,"column":4},"end":{"line":727,"column":21}},"469":{"start":{"line":728,"column":4},"end":{"line":730,"column":5}},"470":{"start":{"line":728,"column":17},"end":{"line":728,"column":18}},"471":{"start":{"line":729,"column":6},"end":{"line":729,"column":41}},"472":{"start":{"line":732,"column":2},"end":{"line":735,"column":4}},"473":{"start":{"line":738,"column":19},"end":{"line":738,"column":76}},"474":{"start":{"line":739,"column":10},"end":{"line":739,"column":23}},"475":{"start":{"line":740,"column":2},"end":{"line":742,"column":3}},"476":{"start":{"line":741,"column":4},"end":{"line":741,"column":72}},"477":{"start":{"line":741,"column":35},"end":{"line":741,"column":70}},"478":{"start":{"line":741,"column":54},"end":{"line":741,"column":69}},"479":{"start":{"line":743,"column":10},"end":{"line":743,"column":23}},"480":{"start":{"line":744,"column":13},"end":{"line":744,"column":24}},"481":{"start":{"line":745,"column":2},"end":{"line":749,"column":3}},"482":{"start":{"line":746,"column":4},"end":{"line":746,"column":27}},"483":{"start":{"line":747,"column":4},"end":{"line":747,"column":27}},"484":{"start":{"line":748,"column":4},"end":{"line":748,"column":33}},"485":{"start":{"line":750,"column":2},"end":{"line":752,"column":3}},"486":{"start":{"line":751,"column":4},"end":{"line":751,"column":36}},"487":{"start":{"line":751,"column":23},"end":{"line":751,"column":34}},"488":{"start":{"line":753,"column":13},"end":{"line":753,"column":31}},"489":{"start":{"line":754,"column":14},"end":{"line":754,"column":35}},"490":{"start":{"line":755,"column":14},"end":{"line":755,"column":35}},"491":{"start":{"line":756,"column":19},"end":{"line":756,"column":42}},"492":{"start":{"line":757,"column":2},"end":{"line":762,"column":3}},"493":{"start":{"line":758,"column":4},"end":{"line":758,"column":41}},"494":{"start":{"line":759,"column":4},"end":{"line":761,"column":5}},"495":{"start":{"line":760,"column":6},"end":{"line":760,"column":51}},"496":{"start":{"line":763,"column":21},"end":{"line":763,"column":52}},"497":{"start":{"line":764,"column":2},"end":{"line":766,"column":3}},"498":{"start":{"line":765,"column":4},"end":{"line":765,"column":27}},"499":{"start":{"line":767,"column":2},"end":{"line":767,"column":47}},"500":{"start":{"line":768,"column":14},"end":{"line":768,"column":35}},"501":{"start":{"line":769,"column":2},"end":{"line":769,"column":28}},"502":{"start":{"line":770,"column":2},"end":{"line":770,"column":28}},"503":{"start":{"line":771,"column":2},"end":{"line":775,"column":3}},"504":{"start":{"line":772,"column":4},"end":{"line":774,"column":5}},"505":{"start":{"line":772,"column":17},"end":{"line":772,"column":18}},"506":{"start":{"line":773,"column":6},"end":{"line":773,"column":56}},"507":{"start":{"line":776,"column":2},"end":{"line":782,"column":4}}},"fnMap":{"0":{"name":"betaCDF","decl":{"start":{"line":6,"column":16},"end":{"line":6,"column":23}},"loc":{"start":{"line":6,"column":40},"end":{"line":14,"column":1}},"line":6},"1":{"name":"betaPDF","decl":{"start":{"line":15,"column":16},"end":{"line":15,"column":23}},"loc":{"start":{"line":15,"column":40},"end":{"line":26,"column":1}},"line":15},"2":{"name":"betaINV","decl":{"start":{"line":27,"column":16},"end":{"line":27,"column":23}},"loc":{"start":{"line":27,"column":50},"end":{"line":78,"column":1}},"line":27},"3":{"name":"incompleteBetaFunction","decl":{"start":{"line":79,"column":9},"end":{"line":79,"column":31}},"loc":{"start":{"line":79,"column":48},"end":{"line":85,"column":1}},"line":79},"4":{"name":"betaContinuedFraction","decl":{"start":{"line":86,"column":9},"end":{"line":86,"column":30}},"loc":{"start":{"line":86,"column":47},"end":{"line":124,"column":1}},"line":86},"5":{"name":"betaFunction","decl":{"start":{"line":125,"column":9},"end":{"line":125,"column":21}},"loc":{"start":{"line":125,"column":35},"end":{"line":130,"column":1}},"line":125},"6":{"name":"betaFunctionNaturalLogarithm","decl":{"start":{"line":131,"column":9},"end":{"line":131,"column":37}},"loc":{"start":{"line":131,"column":51},"end":{"line":133,"column":1}},"line":131},"7":{"name":"binomialCDF","decl":{"start":{"line":134,"column":16},"end":{"line":134,"column":27}},"loc":{"start":{"line":134,"column":52},"end":{"line":149,"column":1}},"line":134},"8":{"name":"binomialPDF","decl":{"start":{"line":150,"column":16},"end":{"line":150,"column":27}},"loc":{"start":{"line":150,"column":52},"end":{"line":158,"column":1}},"line":150},"9":{"name":"chisquareCDF","decl":{"start":{"line":159,"column":16},"end":{"line":159,"column":28}},"loc":{"start":{"line":159,"column":44},"end":{"line":164,"column":1}},"line":159},"10":{"name":"chisquarePDF","decl":{"start":{"line":165,"column":16},"end":{"line":165,"column":28}},"loc":{"start":{"line":165,"column":44},"end":{"line":173,"column":1}},"line":165},"11":{"name":"chisquareINV","decl":{"start":{"line":174,"column":16},"end":{"line":174,"column":28}},"loc":{"start":{"line":174,"column":54},"end":{"line":182,"column":1}},"line":174},"12":{"name":"centralFCDF","decl":{"start":{"line":183,"column":16},"end":{"line":183,"column":27}},"loc":{"start":{"line":183,"column":57},"end":{"line":188,"column":1}},"line":183},"13":{"name":"centralFPDF","decl":{"start":{"line":189,"column":16},"end":{"line":189,"column":27}},"loc":{"start":{"line":189,"column":57},"end":{"line":204,"column":1}},"line":189},"14":{"name":"centralFINV","decl":{"start":{"line":205,"column":16},"end":{"line":205,"column":27}},"loc":{"start":{"line":205,"column":67},"end":{"line":213,"column":1}},"line":205},"15":{"name":"exponentialCDF","decl":{"start":{"line":214,"column":16},"end":{"line":214,"column":30}},"loc":{"start":{"line":214,"column":42},"end":{"line":219,"column":1}},"line":214},"16":{"name":"exponentialPDF","decl":{"start":{"line":220,"column":16},"end":{"line":220,"column":30}},"loc":{"start":{"line":220,"column":42},"end":{"line":225,"column":1}},"line":220},"17":{"name":"forecastLinear","decl":{"start":{"line":226,"column":16},"end":{"line":226,"column":30}},"loc":{"start":{"line":226,"column":52},"end":{"line":248,"column":1}},"line":226},"18":{"name":"gamma","decl":{"start":{"line":249,"column":16},"end":{"line":249,"column":21}},"loc":{"start":{"line":249,"column":25},"end":{"line":313,"column":1}},"line":249},"19":{"name":"gammaCDF","decl":{"start":{"line":314,"column":16},"end":{"line":314,"column":24}},"loc":{"start":{"line":314,"column":41},"end":{"line":319,"column":1}},"line":314},"20":{"name":"gammaPDF","decl":{"start":{"line":320,"column":16},"end":{"line":320,"column":24}},"loc":{"start":{"line":320,"column":41},"end":{"line":328,"column":1}},"line":320},"21":{"name":"gammaINV","decl":{"start":{"line":329,"column":16},"end":{"line":329,"column":24}},"loc":{"start":{"line":329,"column":51},"end":{"line":337,"column":1}},"line":329},"22":{"name":"gammaln","decl":{"start":{"line":338,"column":16},"end":{"line":338,"column":23}},"loc":{"start":{"line":338,"column":27},"end":{"line":356,"column":1}},"line":338},"23":{"name":"lowRegGamma","decl":{"start":{"line":357,"column":9},"end":{"line":357,"column":20}},"loc":{"start":{"line":357,"column":27},"end":{"line":405,"column":1}},"line":357},"24":{"name":"lowRegGammaInverse","decl":{"start":{"line":407,"column":9},"end":{"line":407,"column":27}},"loc":{"start":{"line":407,"column":34},"end":{"line":456,"column":1}},"line":407},"25":{"name":"hypergeometricCDF","decl":{"start":{"line":457,"column":16},"end":{"line":457,"column":33}},"loc":{"start":{"line":457,"column":46},"end":{"line":463,"column":1}},"line":457},"26":{"name":"hypergeometricPDF","decl":{"start":{"line":464,"column":16},"end":{"line":464,"column":33}},"loc":{"start":{"line":464,"column":46},"end":{"line":469,"column":1}},"line":464},"27":{"name":"lognormalCDF","decl":{"start":{"line":470,"column":16},"end":{"line":470,"column":28}},"loc":{"start":{"line":470,"column":51},"end":{"line":475,"column":1}},"line":470},"28":{"name":"lognormalPDF","decl":{"start":{"line":476,"column":16},"end":{"line":476,"column":28}},"loc":{"start":{"line":476,"column":51},"end":{"line":481,"column":1}},"line":476},"29":{"name":"lognormalINV","decl":{"start":{"line":482,"column":16},"end":{"line":482,"column":28}},"loc":{"start":{"line":482,"column":61},"end":{"line":484,"column":1}},"line":482},"30":{"name":"negbinomialCDF","decl":{"start":{"line":485,"column":16},"end":{"line":485,"column":30}},"loc":{"start":{"line":485,"column":63},"end":{"line":494,"column":1}},"line":485},"31":{"name":"negbinomialPDF","decl":{"start":{"line":495,"column":16},"end":{"line":495,"column":30}},"loc":{"start":{"line":495,"column":63},"end":{"line":500,"column":1}},"line":495},"32":{"name":"normalCDF","decl":{"start":{"line":501,"column":16},"end":{"line":501,"column":25}},"loc":{"start":{"line":501,"column":48},"end":{"line":503,"column":1}},"line":501},"33":{"name":"normalPDF","decl":{"start":{"line":504,"column":16},"end":{"line":504,"column":25}},"loc":{"start":{"line":504,"column":48},"end":{"line":506,"column":1}},"line":504},"34":{"name":"normalINV","decl":{"start":{"line":507,"column":16},"end":{"line":507,"column":25}},"loc":{"start":{"line":507,"column":58},"end":{"line":509,"column":1}},"line":507},"35":{"name":"poissonCDF","decl":{"start":{"line":510,"column":16},"end":{"line":510,"column":26}},"loc":{"start":{"line":510,"column":36},"end":{"line":516,"column":1}},"line":510},"36":{"name":"poissonPDF","decl":{"start":{"line":517,"column":16},"end":{"line":517,"column":26}},"loc":{"start":{"line":517,"column":36},"end":{"line":519,"column":1}},"line":517},"37":{"name":"studentTCDF","decl":{"start":{"line":520,"column":16},"end":{"line":520,"column":27}},"loc":{"start":{"line":520,"column":43},"end":{"line":523,"column":1}},"line":520},"38":{"name":"studentTPDF","decl":{"start":{"line":524,"column":16},"end":{"line":524,"column":27}},"loc":{"start":{"line":524,"column":43},"end":{"line":527,"column":1}},"line":524},"39":{"name":"studentTINV","decl":{"start":{"line":528,"column":16},"end":{"line":528,"column":27}},"loc":{"start":{"line":528,"column":53},"end":{"line":532,"column":1}},"line":528},"40":{"name":"getTwoArrayNumberValues","decl":{"start":{"line":533,"column":16},"end":{"line":533,"column":39}},"loc":{"start":{"line":533,"column":101},"end":{"line":581,"column":1}},"line":533},"41":{"name":"checkKnownsArrayDimensions","decl":{"start":{"line":582,"column":16},"end":{"line":582,"column":42}},"loc":{"start":{"line":582,"column":68},"end":{"line":611,"column":1}},"line":582},"42":{"name":"getKnownsArrayValues","decl":{"start":{"line":612,"column":16},"end":{"line":612,"column":36}},"loc":{"start":{"line":612,"column":44},"end":{"line":627,"column":1}},"line":612},"43":{"name":"getSerialNumbersByRowsColumns","decl":{"start":{"line":628,"column":16},"end":{"line":628,"column":45}},"loc":{"start":{"line":628,"column":69},"end":{"line":638,"column":1}},"line":628},"44":{"name":"getSlopeAndIntercept","decl":{"start":{"line":639,"column":16},"end":{"line":639,"column":36}},"loc":{"start":{"line":639,"column":99},"end":{"line":658,"column":1}},"line":639},"45":{"name":"(anonymous_45)","decl":{"start":{"line":642,"column":26},"end":{"line":642,"column":27}},"loc":{"start":{"line":642,"column":37},"end":{"line":642,"column":52}},"line":642},"46":{"name":"getSlopeAndInterceptOfConstbIsTrue","decl":{"start":{"line":659,"column":9},"end":{"line":659,"column":43}},"loc":{"start":{"line":659,"column":74},"end":{"line":678,"column":1}},"line":659},"47":{"name":"getSlopeAndInterceptOfConstbIsFalse","decl":{"start":{"line":679,"column":9},"end":{"line":679,"column":44}},"loc":{"start":{"line":679,"column":75},"end":{"line":736,"column":1}},"line":679},"48":{"name":"getKnownsArrayCoefficients","decl":{"start":{"line":737,"column":16},"end":{"line":737,"column":42}},"loc":{"start":{"line":737,"column":118},"end":{"line":783,"column":1}},"line":737},"49":{"name":"(anonymous_49)","decl":{"start":{"line":741,"column":26},"end":{"line":741,"column":27}},"loc":{"start":{"line":741,"column":35},"end":{"line":741,"column":70}},"line":741},"50":{"name":"(anonymous_50)","decl":{"start":{"line":741,"column":43},"end":{"line":741,"column":44}},"loc":{"start":{"line":741,"column":54},"end":{"line":741,"column":69}},"line":741},"51":{"name":"(anonymous_51)","decl":{"start":{"line":751,"column":14},"end":{"line":751,"column":15}},"loc":{"start":{"line":751,"column":23},"end":{"line":751,"column":34}},"line":751}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":2},"end":{"line":9,"column":3}},"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":9,"column":3}},{"start":{},"end":{}}],"line":7},"1":{"loc":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},{"start":{},"end":{}}],"line":10},"2":{"loc":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},{"start":{},"end":{}}],"line":16},"3":{"loc":{"start":{"line":16,"column":6},"end":{"line":16,"column":22}},"type":"binary-expr","locations":[{"start":{"line":16,"column":6},"end":{"line":16,"column":12}},{"start":{"line":16,"column":16},"end":{"line":16,"column":22}}],"line":16},"4":{"loc":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},{"start":{},"end":{}}],"line":19},"5":{"loc":{"start":{"line":19,"column":6},"end":{"line":19,"column":31}},"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":17}},{"start":{"line":19,"column":21},"end":{"line":19,"column":31}}],"line":19},"6":{"loc":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},{"start":{},"end":{}}],"line":22},"7":{"loc":{"start":{"line":22,"column":6},"end":{"line":22,"column":31}},"type":"binary-expr","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":17}},{"start":{"line":22,"column":21},"end":{"line":22,"column":31}}],"line":22},"8":{"loc":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},{"start":{},"end":{}}],"line":28},"9":{"loc":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},{"start":{},"end":{}}],"line":31},"10":{"loc":{"start":{"line":36,"column":2},"end":{"line":56,"column":3}},"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":56,"column":3}},{"start":{"line":47,"column":9},"end":{"line":56,"column":3}}],"line":36},"11":{"loc":{"start":{"line":36,"column":6},"end":{"line":36,"column":29}},"type":"binary-expr","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":16}},{"start":{"line":36,"column":20},"end":{"line":36,"column":29}}],"line":36},"12":{"loc":{"start":{"line":37,"column":14},"end":{"line":37,"column":63}},"type":"cond-expr","locations":[{"start":{"line":37,"column":34},"end":{"line":37,"column":45}},{"start":{"line":37,"column":48},"end":{"line":37,"column":63}}],"line":37},"13":{"loc":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},{"start":{},"end":{}}],"line":40},"14":{"loc":{"start":{"line":51,"column":4},"end":{"line":55,"column":5}},"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":55,"column":5}},{"start":{"line":53,"column":11},"end":{"line":55,"column":5}}],"line":51},"15":{"loc":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},{"start":{},"end":{}}],"line":60},"16":{"loc":{"start":{"line":60,"column":8},"end":{"line":60,"column":26}},"type":"binary-expr","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":15}},{"start":{"line":60,"column":19},"end":{"line":60,"column":26}}],"line":60},"17":{"loc":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},{"start":{},"end":{}}],"line":67},"18":{"loc":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},{"start":{},"end":{}}],"line":70},"19":{"loc":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},{"start":{},"end":{}}],"line":73},"20":{"loc":{"start":{"line":73,"column":8},"end":{"line":73,"column":42}},"type":"binary-expr","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":33}},{"start":{"line":73,"column":37},"end":{"line":73,"column":42}}],"line":73},"21":{"loc":{"start":{"line":80,"column":13},"end":{"line":80,"column":149}},"type":"cond-expr","locations":[{"start":{"line":80,"column":34},"end":{"line":80,"column":35}},{"start":{"line":80,"column":38},"end":{"line":80,"column":149}}],"line":80},"22":{"loc":{"start":{"line":80,"column":13},"end":{"line":80,"column":31}},"type":"binary-expr","locations":[{"start":{"line":80,"column":13},"end":{"line":80,"column":20}},{"start":{"line":80,"column":24},"end":{"line":80,"column":31}}],"line":80},"23":{"loc":{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},{"start":{},"end":{}}],"line":81},"24":{"loc":{"start":{"line":90,"column":2},"end":{"line":92,"column":3}},"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":92,"column":3}},{"start":{},"end":{}}],"line":90},"25":{"loc":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},{"start":{},"end":{}}],"line":99},"26":{"loc":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},{"start":{},"end":{}}],"line":103},"27":{"loc":{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},{"start":{},"end":{}}],"line":110},"28":{"loc":{"start":{"line":114,"column":4},"end":{"line":116,"column":5}},"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":116,"column":5}},{"start":{},"end":{}}],"line":114},"29":{"loc":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},{"start":{},"end":{}}],"line":119},"30":{"loc":{"start":{"line":126,"column":2},"end":{"line":128,"column":3}},"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":128,"column":3}},{"start":{},"end":{}}],"line":126},"31":{"loc":{"start":{"line":135,"column":2},"end":{"line":137,"column":3}},"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":137,"column":3}},{"start":{},"end":{}}],"line":135},"32":{"loc":{"start":{"line":138,"column":2},"end":{"line":140,"column":3}},"type":"if","locations":[{"start":{"line":138,"column":2},"end":{"line":140,"column":3}},{"start":{},"end":{}}],"line":138},"33":{"loc":{"start":{"line":141,"column":2},"end":{"line":143,"column":3}},"type":"if","locations":[{"start":{"line":141,"column":2},"end":{"line":143,"column":3}},{"start":{},"end":{}}],"line":141},"34":{"loc":{"start":{"line":141,"column":6},"end":{"line":141,"column":55}},"type":"binary-expr","locations":[{"start":{"line":141,"column":6},"end":{"line":141,"column":21}},{"start":{"line":141,"column":25},"end":{"line":141,"column":40}},{"start":{"line":141,"column":44},"end":{"line":141,"column":55}}],"line":141},"35":{"loc":{"start":{"line":151,"column":2},"end":{"line":156,"column":3}},"type":"if","locations":[{"start":{"line":151,"column":2},"end":{"line":156,"column":3}},{"start":{},"end":{}}],"line":151},"36":{"loc":{"start":{"line":151,"column":6},"end":{"line":151,"column":44}},"type":"binary-expr","locations":[{"start":{"line":151,"column":6},"end":{"line":151,"column":23}},{"start":{"line":151,"column":27},"end":{"line":151,"column":44}}],"line":151},"37":{"loc":{"start":{"line":152,"column":4},"end":{"line":154,"column":5}},"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":154,"column":5}},{"start":{},"end":{}}],"line":152},"38":{"loc":{"start":{"line":160,"column":2},"end":{"line":162,"column":3}},"type":"if","locations":[{"start":{"line":160,"column":2},"end":{"line":162,"column":3}},{"start":{},"end":{}}],"line":160},"39":{"loc":{"start":{"line":166,"column":2},"end":{"line":168,"column":3}},"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":168,"column":3}},{"start":{},"end":{}}],"line":166},"40":{"loc":{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},"type":"if","locations":[{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},{"start":{},"end":{}}],"line":169},"41":{"loc":{"start":{"line":169,"column":6},"end":{"line":169,"column":33}},"type":"binary-expr","locations":[{"start":{"line":169,"column":6},"end":{"line":169,"column":13}},{"start":{"line":169,"column":17},"end":{"line":169,"column":33}}],"line":169},"42":{"loc":{"start":{"line":175,"column":2},"end":{"line":177,"column":3}},"type":"if","locations":[{"start":{"line":175,"column":2},"end":{"line":177,"column":3}},{"start":{},"end":{}}],"line":175},"43":{"loc":{"start":{"line":178,"column":2},"end":{"line":180,"column":3}},"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":180,"column":3}},{"start":{},"end":{}}],"line":178},"44":{"loc":{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},{"start":{},"end":{}}],"line":184},"45":{"loc":{"start":{"line":190,"column":2},"end":{"line":192,"column":3}},"type":"if","locations":[{"start":{"line":190,"column":2},"end":{"line":192,"column":3}},{"start":{},"end":{}}],"line":190},"46":{"loc":{"start":{"line":193,"column":2},"end":{"line":195,"column":3}},"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":195,"column":3}},{"start":{},"end":{}}],"line":193},"47":{"loc":{"start":{"line":193,"column":6},"end":{"line":193,"column":32}},"type":"binary-expr","locations":[{"start":{"line":193,"column":6},"end":{"line":193,"column":13}},{"start":{"line":193,"column":17},"end":{"line":193,"column":32}}],"line":193},"48":{"loc":{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},{"start":{},"end":{}}],"line":196},"49":{"loc":{"start":{"line":196,"column":6},"end":{"line":196,"column":34}},"type":"binary-expr","locations":[{"start":{"line":196,"column":6},"end":{"line":196,"column":13}},{"start":{"line":196,"column":17},"end":{"line":196,"column":34}}],"line":196},"50":{"loc":{"start":{"line":206,"column":2},"end":{"line":208,"column":3}},"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":208,"column":3}},{"start":{},"end":{}}],"line":206},"51":{"loc":{"start":{"line":209,"column":2},"end":{"line":211,"column":3}},"type":"if","locations":[{"start":{"line":209,"column":2},"end":{"line":211,"column":3}},{"start":{},"end":{}}],"line":209},"52":{"loc":{"start":{"line":215,"column":2},"end":{"line":217,"column":3}},"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":217,"column":3}},{"start":{},"end":{}}],"line":215},"53":{"loc":{"start":{"line":221,"column":2},"end":{"line":223,"column":3}},"type":"if","locations":[{"start":{"line":221,"column":2},"end":{"line":223,"column":3}},{"start":{},"end":{}}],"line":221},"54":{"loc":{"start":{"line":242,"column":2},"end":{"line":244,"column":3}},"type":"if","locations":[{"start":{"line":242,"column":2},"end":{"line":244,"column":3}},{"start":{},"end":{}}],"line":242},"55":{"loc":{"start":{"line":274,"column":2},"end":{"line":276,"column":3}},"type":"if","locations":[{"start":{"line":274,"column":2},"end":{"line":276,"column":3}},{"start":{},"end":{}}],"line":274},"56":{"loc":{"start":{"line":277,"column":2},"end":{"line":285,"column":3}},"type":"if","locations":[{"start":{"line":277,"column":2},"end":{"line":285,"column":3}},{"start":{},"end":{}}],"line":277},"57":{"loc":{"start":{"line":279,"column":4},"end":{"line":284,"column":5}},"type":"if","locations":[{"start":{"line":279,"column":4},"end":{"line":284,"column":5}},{"start":{"line":282,"column":11},"end":{"line":284,"column":5}}],"line":279},"58":{"loc":{"start":{"line":280,"column":14},"end":{"line":280,"column":31}},"type":"cond-expr","locations":[{"start":{"line":280,"column":25},"end":{"line":280,"column":26}},{"start":{"line":280,"column":29},"end":{"line":280,"column":31}}],"line":280},"59":{"loc":{"start":{"line":289,"column":2},"end":{"line":293,"column":3}},"type":"if","locations":[{"start":{"line":289,"column":2},"end":{"line":293,"column":3}},{"start":{"line":291,"column":9},"end":{"line":293,"column":3}}],"line":289},"60":{"loc":{"start":{"line":301,"column":2},"end":{"line":308,"column":3}},"type":"if","locations":[{"start":{"line":301,"column":2},"end":{"line":308,"column":3}},{"start":{"line":303,"column":9},"end":{"line":308,"column":3}}],"line":301},"61":{"loc":{"start":{"line":303,"column":9},"end":{"line":308,"column":3}},"type":"if","locations":[{"start":{"line":303,"column":9},"end":{"line":308,"column":3}},{"start":{},"end":{}}],"line":303},"62":{"loc":{"start":{"line":309,"column":2},"end":{"line":311,"column":3}},"type":"if","locations":[{"start":{"line":309,"column":2},"end":{"line":311,"column":3}},{"start":{},"end":{}}],"line":309},"63":{"loc":{"start":{"line":315,"column":2},"end":{"line":317,"column":3}},"type":"if","locations":[{"start":{"line":315,"column":2},"end":{"line":317,"column":3}},{"start":{},"end":{}}],"line":315},"64":{"loc":{"start":{"line":321,"column":2},"end":{"line":323,"column":3}},"type":"if","locations":[{"start":{"line":321,"column":2},"end":{"line":323,"column":3}},{"start":{},"end":{}}],"line":321},"65":{"loc":{"start":{"line":324,"column":2},"end":{"line":326,"column":3}},"type":"if","locations":[{"start":{"line":324,"column":2},"end":{"line":326,"column":3}},{"start":{},"end":{}}],"line":324},"66":{"loc":{"start":{"line":324,"column":6},"end":{"line":324,"column":28}},"type":"binary-expr","locations":[{"start":{"line":324,"column":6},"end":{"line":324,"column":13}},{"start":{"line":324,"column":17},"end":{"line":324,"column":28}}],"line":324},"67":{"loc":{"start":{"line":330,"column":2},"end":{"line":332,"column":3}},"type":"if","locations":[{"start":{"line":330,"column":2},"end":{"line":332,"column":3}},{"start":{},"end":{}}],"line":330},"68":{"loc":{"start":{"line":333,"column":2},"end":{"line":335,"column":3}},"type":"if","locations":[{"start":{"line":333,"column":2},"end":{"line":335,"column":3}},{"start":{},"end":{}}],"line":333},"69":{"loc":{"start":{"line":358,"column":2},"end":{"line":360,"column":3}},"type":"if","locations":[{"start":{"line":358,"column":2},"end":{"line":360,"column":3}},{"start":{},"end":{}}],"line":358},"70":{"loc":{"start":{"line":358,"column":6},"end":{"line":358,"column":21}},"type":"binary-expr","locations":[{"start":{"line":358,"column":6},"end":{"line":358,"column":11}},{"start":{"line":358,"column":15},"end":{"line":358,"column":21}}],"line":358},"71":{"loc":{"start":{"line":362,"column":31},"end":{"line":362,"column":49}},"type":"cond-expr","locations":[{"start":{"line":362,"column":40},"end":{"line":362,"column":41}},{"start":{"line":362,"column":44},"end":{"line":362,"column":49}}],"line":362},"72":{"loc":{"start":{"line":368,"column":2},"end":{"line":379,"column":3}},"type":"if","locations":[{"start":{"line":368,"column":2},"end":{"line":379,"column":3}},{"start":{},"end":{}}],"line":368},"73":{"loc":{"start":{"line":369,"column":4},"end":{"line":371,"column":5}},"type":"if","locations":[{"start":{"line":369,"column":4},"end":{"line":371,"column":5}},{"start":{},"end":{}}],"line":369},"74":{"loc":{"start":{"line":374,"column":6},"end":{"line":376,"column":7}},"type":"if","locations":[{"start":{"line":374,"column":6},"end":{"line":376,"column":7}},{"start":{},"end":{}}],"line":374},"75":{"loc":{"start":{"line":380,"column":2},"end":{"line":382,"column":3}},"type":"if","locations":[{"start":{"line":380,"column":2},"end":{"line":382,"column":3}},{"start":{},"end":{}}],"line":380},"76":{"loc":{"start":{"line":391,"column":4},"end":{"line":393,"column":5}},"type":"if","locations":[{"start":{"line":391,"column":4},"end":{"line":393,"column":5}},{"start":{},"end":{}}],"line":391},"77":{"loc":{"start":{"line":395,"column":4},"end":{"line":397,"column":5}},"type":"if","locations":[{"start":{"line":395,"column":4},"end":{"line":397,"column":5}},{"start":{},"end":{}}],"line":395},"78":{"loc":{"start":{"line":400,"column":4},"end":{"line":402,"column":5}},"type":"if","locations":[{"start":{"line":400,"column":4},"end":{"line":402,"column":5}},{"start":{},"end":{}}],"line":400},"79":{"loc":{"start":{"line":408,"column":2},"end":{"line":410,"column":3}},"type":"if","locations":[{"start":{"line":408,"column":2},"end":{"line":410,"column":3}},{"start":{},"end":{}}],"line":408},"80":{"loc":{"start":{"line":411,"column":2},"end":{"line":413,"column":3}},"type":"if","locations":[{"start":{"line":411,"column":2},"end":{"line":413,"column":3}},{"start":{},"end":{}}],"line":411},"81":{"loc":{"start":{"line":415,"column":2},"end":{"line":430,"column":3}},"type":"if","locations":[{"start":{"line":415,"column":2},"end":{"line":430,"column":3}},{"start":{"line":423,"column":9},"end":{"line":430,"column":3}}],"line":415},"82":{"loc":{"start":{"line":416,"column":15},"end":{"line":416,"column":34}},"type":"cond-expr","locations":[{"start":{"line":416,"column":25},"end":{"line":416,"column":26}},{"start":{"line":416,"column":29},"end":{"line":416,"column":34}}],"line":416},"83":{"loc":{"start":{"line":419,"column":4},"end":{"line":421,"column":5}},"type":"if","locations":[{"start":{"line":419,"column":4},"end":{"line":421,"column":5}},{"start":{},"end":{}}],"line":419},"84":{"loc":{"start":{"line":425,"column":4},"end":{"line":429,"column":5}},"type":"if","locations":[{"start":{"line":425,"column":4},"end":{"line":429,"column":5}},{"start":{"line":427,"column":11},"end":{"line":429,"column":5}}],"line":425},"85":{"loc":{"start":{"line":435,"column":4},"end":{"line":437,"column":5}},"type":"if","locations":[{"start":{"line":435,"column":4},"end":{"line":437,"column":5}},{"start":{},"end":{}}],"line":435},"86":{"loc":{"start":{"line":439,"column":4},"end":{"line":443,"column":5}},"type":"if","locations":[{"start":{"line":439,"column":4},"end":{"line":443,"column":5}},{"start":{"line":441,"column":11},"end":{"line":443,"column":5}}],"line":439},"87":{"loc":{"start":{"line":444,"column":4},"end":{"line":446,"column":5}},"type":"if","locations":[{"start":{"line":444,"column":4},"end":{"line":446,"column":5}},{"start":{},"end":{}}],"line":444},"88":{"loc":{"start":{"line":448,"column":4},"end":{"line":450,"column":5}},"type":"if","locations":[{"start":{"line":448,"column":4},"end":{"line":450,"column":5}},{"start":{},"end":{}}],"line":448},"89":{"loc":{"start":{"line":451,"column":4},"end":{"line":453,"column":5}},"type":"if","locations":[{"start":{"line":451,"column":4},"end":{"line":453,"column":5}},{"start":{},"end":{}}],"line":451},"90":{"loc":{"start":{"line":465,"column":2},"end":{"line":467,"column":3}},"type":"if","locations":[{"start":{"line":465,"column":2},"end":{"line":467,"column":3}},{"start":{},"end":{}}],"line":465},"91":{"loc":{"start":{"line":471,"column":2},"end":{"line":473,"column":3}},"type":"if","locations":[{"start":{"line":471,"column":2},"end":{"line":473,"column":3}},{"start":{},"end":{}}],"line":471},"92":{"loc":{"start":{"line":477,"column":2},"end":{"line":479,"column":3}},"type":"if","locations":[{"start":{"line":477,"column":2},"end":{"line":479,"column":3}},{"start":{},"end":{}}],"line":477},"93":{"loc":{"start":{"line":486,"column":2},"end":{"line":488,"column":3}},"type":"if","locations":[{"start":{"line":486,"column":2},"end":{"line":488,"column":3}},{"start":{},"end":{}}],"line":486},"94":{"loc":{"start":{"line":496,"column":2},"end":{"line":498,"column":3}},"type":"if","locations":[{"start":{"line":496,"column":2},"end":{"line":498,"column":3}},{"start":{},"end":{}}],"line":496},"95":{"loc":{"start":{"line":522,"column":9},"end":{"line":522,"column":36}},"type":"cond-expr","locations":[{"start":{"line":522,"column":17},"end":{"line":522,"column":23}},{"start":{"line":522,"column":26},"end":{"line":522,"column":36}}],"line":522},"96":{"loc":{"start":{"line":531,"column":9},"end":{"line":531,"column":35}},"type":"cond-expr","locations":[{"start":{"line":531,"column":29},"end":{"line":531,"column":30}},{"start":{"line":531,"column":33},"end":{"line":531,"column":35}}],"line":531},"97":{"loc":{"start":{"line":542,"column":25},"end":{"line":542,"column":98}},"type":"cond-expr","locations":[{"start":{"line":542,"column":44},"end":{"line":542,"column":89}},{"start":{"line":542,"column":92},"end":{"line":542,"column":98}}],"line":542},"98":{"loc":{"start":{"line":543,"column":25},"end":{"line":543,"column":98}},"type":"cond-expr","locations":[{"start":{"line":543,"column":44},"end":{"line":543,"column":89}},{"start":{"line":543,"column":92},"end":{"line":543,"column":98}}],"line":543},"99":{"loc":{"start":{"line":544,"column":4},"end":{"line":552,"column":5}},"type":"if","locations":[{"start":{"line":544,"column":4},"end":{"line":552,"column":5}},{"start":{},"end":{}}],"line":544},"100":{"loc":{"start":{"line":553,"column":4},"end":{"line":561,"column":5}},"type":"if","locations":[{"start":{"line":553,"column":4},"end":{"line":561,"column":5}},{"start":{},"end":{}}],"line":553},"101":{"loc":{"start":{"line":562,"column":4},"end":{"line":564,"column":5}},"type":"if","locations":[{"start":{"line":562,"column":4},"end":{"line":564,"column":5}},{"start":{},"end":{}}],"line":562},"102":{"loc":{"start":{"line":562,"column":8},"end":{"line":562,"column":110}},"type":"binary-expr","locations":[{"start":{"line":562,"column":8},"end":{"line":562,"column":29}},{"start":{"line":562,"column":33},"end":{"line":562,"column":54}},{"start":{"line":562,"column":58},"end":{"line":562,"column":82}},{"start":{"line":562,"column":86},"end":{"line":562,"column":110}}],"line":562},"103":{"loc":{"start":{"line":567,"column":4},"end":{"line":569,"column":5}},"type":"if","locations":[{"start":{"line":567,"column":4},"end":{"line":569,"column":5}},{"start":{},"end":{}}],"line":567},"104":{"loc":{"start":{"line":567,"column":8},"end":{"line":567,"column":58}},"type":"binary-expr","locations":[{"start":{"line":567,"column":8},"end":{"line":567,"column":31}},{"start":{"line":567,"column":35},"end":{"line":567,"column":58}}],"line":567},"105":{"loc":{"start":{"line":583,"column":26},"end":{"line":583,"column":71}},"type":"cond-expr","locations":[{"start":{"line":583,"column":46},"end":{"line":583,"column":67}},{"start":{"line":583,"column":70},"end":{"line":583,"column":71}}],"line":583},"106":{"loc":{"start":{"line":584,"column":29},"end":{"line":584,"column":77}},"type":"cond-expr","locations":[{"start":{"line":584,"column":49},"end":{"line":584,"column":73}},{"start":{"line":584,"column":76},"end":{"line":584,"column":77}}],"line":584},"107":{"loc":{"start":{"line":587,"column":2},"end":{"line":596,"column":3}},"type":"if","locations":[{"start":{"line":587,"column":2},"end":{"line":596,"column":3}},{"start":{},"end":{}}],"line":587},"108":{"loc":{"start":{"line":587,"column":6},"end":{"line":587,"column":34}},"type":"binary-expr","locations":[{"start":{"line":587,"column":6},"end":{"line":587,"column":13}},{"start":{"line":587,"column":17},"end":{"line":587,"column":34}}],"line":587},"109":{"loc":{"start":{"line":588,"column":22},"end":{"line":588,"column":67}},"type":"cond-expr","locations":[{"start":{"line":588,"column":42},"end":{"line":588,"column":63}},{"start":{"line":588,"column":66},"end":{"line":588,"column":67}}],"line":588},"110":{"loc":{"start":{"line":589,"column":25},"end":{"line":589,"column":73}},"type":"cond-expr","locations":[{"start":{"line":589,"column":45},"end":{"line":589,"column":69}},{"start":{"line":589,"column":72},"end":{"line":589,"column":73}}],"line":589},"111":{"loc":{"start":{"line":590,"column":4},"end":{"line":595,"column":5}},"type":"if","locations":[{"start":{"line":590,"column":4},"end":{"line":595,"column":5}},{"start":{},"end":{}}],"line":590},"112":{"loc":{"start":{"line":590,"column":8},"end":{"line":590,"column":280}},"type":"binary-expr","locations":[{"start":{"line":590,"column":8},"end":{"line":590,"column":29}},{"start":{"line":590,"column":33},"end":{"line":590,"column":74}},{"start":{"line":590,"column":78},"end":{"line":590,"column":102}},{"start":{"line":590,"column":106},"end":{"line":590,"column":141}},{"start":{"line":590,"column":145},"end":{"line":590,"column":166}},{"start":{"line":590,"column":170},"end":{"line":590,"column":194}},{"start":{"line":590,"column":199},"end":{"line":590,"column":234}},{"start":{"line":590,"column":238},"end":{"line":590,"column":279}}],"line":590},"113":{"loc":{"start":{"line":597,"column":2},"end":{"line":606,"column":3}},"type":"if","locations":[{"start":{"line":597,"column":2},"end":{"line":606,"column":3}},{"start":{},"end":{}}],"line":597},"114":{"loc":{"start":{"line":597,"column":6},"end":{"line":597,"column":30}},"type":"binary-expr","locations":[{"start":{"line":597,"column":6},"end":{"line":597,"column":11}},{"start":{"line":597,"column":15},"end":{"line":597,"column":30}}],"line":597},"115":{"loc":{"start":{"line":598,"column":26},"end":{"line":598,"column":67}},"type":"cond-expr","locations":[{"start":{"line":598,"column":44},"end":{"line":598,"column":63}},{"start":{"line":598,"column":66},"end":{"line":598,"column":67}}],"line":598},"116":{"loc":{"start":{"line":599,"column":29},"end":{"line":599,"column":73}},"type":"cond-expr","locations":[{"start":{"line":599,"column":47},"end":{"line":599,"column":69}},{"start":{"line":599,"column":72},"end":{"line":599,"column":73}}],"line":599},"117":{"loc":{"start":{"line":600,"column":4},"end":{"line":605,"column":5}},"type":"if","locations":[{"start":{"line":600,"column":4},"end":{"line":605,"column":5}},{"start":{},"end":{}}],"line":600},"118":{"loc":{"start":{"line":600,"column":8},"end":{"line":600,"column":186}},"type":"binary-expr","locations":[{"start":{"line":600,"column":8},"end":{"line":600,"column":29}},{"start":{"line":600,"column":33},"end":{"line":600,"column":52}},{"start":{"line":600,"column":56},"end":{"line":600,"column":89}},{"start":{"line":600,"column":93},"end":{"line":600,"column":117}},{"start":{"line":600,"column":121},"end":{"line":600,"column":143}},{"start":{"line":600,"column":147},"end":{"line":600,"column":186}}],"line":600},"119":{"loc":{"start":{"line":613,"column":19},"end":{"line":613,"column":60}},"type":"cond-expr","locations":[{"start":{"line":613,"column":37},"end":{"line":613,"column":56}},{"start":{"line":613,"column":59},"end":{"line":613,"column":60}}],"line":613},"120":{"loc":{"start":{"line":614,"column":22},"end":{"line":614,"column":66}},"type":"cond-expr","locations":[{"start":{"line":614,"column":40},"end":{"line":614,"column":62}},{"start":{"line":614,"column":65},"end":{"line":614,"column":66}}],"line":614},"121":{"loc":{"start":{"line":619,"column":26},"end":{"line":619,"column":67}},"type":"cond-expr","locations":[{"start":{"line":619,"column":44},"end":{"line":619,"column":59}},{"start":{"line":619,"column":62},"end":{"line":619,"column":67}}],"line":619},"122":{"loc":{"start":{"line":620,"column":6},"end":{"line":622,"column":7}},"type":"if","locations":[{"start":{"line":620,"column":6},"end":{"line":622,"column":7}},{"start":{},"end":{}}],"line":620},"123":{"loc":{"start":{"line":620,"column":10},"end":{"line":620,"column":108}},"type":"binary-expr","locations":[{"start":{"line":620,"column":10},"end":{"line":620,"column":31}},{"start":{"line":620,"column":35},"end":{"line":620,"column":55}},{"start":{"line":620,"column":59},"end":{"line":620,"column":82}},{"start":{"line":620,"column":86},"end":{"line":620,"column":108}}],"line":620},"124":{"loc":{"start":{"line":641,"column":2},"end":{"line":643,"column":3}},"type":"if","locations":[{"start":{"line":641,"column":2},"end":{"line":643,"column":3}},{"start":{},"end":{}}],"line":641},"125":{"loc":{"start":{"line":645,"column":2},"end":{"line":649,"column":3}},"type":"if","locations":[{"start":{"line":645,"column":2},"end":{"line":649,"column":3}},{"start":{"line":647,"column":9},"end":{"line":649,"column":3}}],"line":645},"126":{"loc":{"start":{"line":650,"column":2},"end":{"line":653,"column":3}},"type":"if","locations":[{"start":{"line":650,"column":2},"end":{"line":653,"column":3}},{"start":{},"end":{}}],"line":650},"127":{"loc":{"start":{"line":654,"column":2},"end":{"line":656,"column":3}},"type":"if","locations":[{"start":{"line":654,"column":2},"end":{"line":656,"column":3}},{"start":{},"end":{}}],"line":654},"128":{"loc":{"start":{"line":654,"column":6},"end":{"line":654,"column":36}},"type":"binary-expr","locations":[{"start":{"line":654,"column":6},"end":{"line":654,"column":25}},{"start":{"line":654,"column":29},"end":{"line":654,"column":36}}],"line":654},"129":{"loc":{"start":{"line":692,"column":18},"end":{"line":692,"column":82}},"type":"cond-expr","locations":[{"start":{"line":692,"column":38},"end":{"line":692,"column":58}},{"start":{"line":692,"column":61},"end":{"line":692,"column":82}}],"line":692},"130":{"loc":{"start":{"line":694,"column":4},"end":{"line":706,"column":5}},"type":"if","locations":[{"start":{"line":694,"column":4},"end":{"line":706,"column":5}},{"start":{},"end":{}}],"line":694},"131":{"loc":{"start":{"line":738,"column":19},"end":{"line":738,"column":76}},"type":"binary-expr","locations":[{"start":{"line":738,"column":19},"end":{"line":738,"column":45}},{"start":{"line":738,"column":49},"end":{"line":738,"column":76}}],"line":738},"132":{"loc":{"start":{"line":740,"column":2},"end":{"line":742,"column":3}},"type":"if","locations":[{"start":{"line":740,"column":2},"end":{"line":742,"column":3}},{"start":{},"end":{}}],"line":740},"133":{"loc":{"start":{"line":745,"column":2},"end":{"line":749,"column":3}},"type":"if","locations":[{"start":{"line":745,"column":2},"end":{"line":749,"column":3}},{"start":{},"end":{}}],"line":745},"134":{"loc":{"start":{"line":750,"column":2},"end":{"line":752,"column":3}},"type":"if","locations":[{"start":{"line":750,"column":2},"end":{"line":752,"column":3}},{"start":{},"end":{}}],"line":750},"135":{"loc":{"start":{"line":757,"column":2},"end":{"line":762,"column":3}},"type":"if","locations":[{"start":{"line":757,"column":2},"end":{"line":762,"column":3}},{"start":{},"end":{}}],"line":757},"136":{"loc":{"start":{"line":759,"column":4},"end":{"line":761,"column":5}},"type":"if","locations":[{"start":{"line":759,"column":4},"end":{"line":761,"column":5}},{"start":{},"end":{}}],"line":759},"137":{"loc":{"start":{"line":764,"column":2},"end":{"line":766,"column":3}},"type":"if","locations":[{"start":{"line":764,"column":2},"end":{"line":766,"column":3}},{"start":{},"end":{}}],"line":764},"138":{"loc":{"start":{"line":771,"column":2},"end":{"line":775,"column":3}},"type":"if","locations":[{"start":{"line":771,"column":2},"end":{"line":775,"column":3}},{"start":{},"end":{}}],"line":771}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":23,"357":23,"358":23,"359":23,"360":23,"361":14,"362":14,"363":14,"364":2,"365":21,"366":10,"367":10,"368":10,"369":1,"370":20,"371":40,"372":40,"373":40,"374":40,"375":40,"376":118,"377":118,"378":118,"379":254,"380":254,"381":6,"382":248,"383":34,"384":5,"385":5,"386":5,"387":5,"388":25,"389":25,"390":25,"391":30,"392":5,"393":8,"394":8,"395":0,"396":0,"397":8,"398":4,"399":4,"400":8,"401":0,"402":0,"403":8,"404":0,"405":8,"406":4,"407":4,"408":4,"409":4,"410":4,"411":4,"412":4,"413":17,"414":17,"415":17,"416":17,"417":4,"418":4,"419":4,"420":4,"421":4,"422":4,"423":4,"424":4,"425":4,"426":4,"427":4,"428":4,"429":4,"430":4,"431":4,"432":4,"433":22,"434":4,"435":4,"436":4,"437":4,"438":4,"439":4,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":4,"449":4,"450":4,"451":4,"452":4,"453":4,"454":4,"455":4,"456":4,"457":4,"458":22,"459":4,"460":4,"461":4,"462":22,"463":4,"464":4,"465":4,"466":4,"467":4,"468":4,"469":4,"470":4,"471":0,"472":4,"473":3,"474":3,"475":3,"476":0,"477":0,"478":0,"479":3,"480":3,"481":3,"482":1,"483":1,"484":1,"485":3,"486":2,"487":8,"488":3,"489":3,"490":3,"491":3,"492":3,"493":2,"494":2,"495":0,"496":3,"497":3,"498":1,"499":3,"500":3,"501":3,"502":3,"503":3,"504":0,"505":0,"506":0,"507":3},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":23,"42":40,"43":5,"44":8,"45":0,"46":4,"47":4,"48":3,"49":0,"50":0,"51":8},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0,0,0],"103":[0,0],"104":[0,0],"105":[22,1],"106":[22,1],"107":[14,9],"108":[23,14],"109":[12,2],"110":[12,2],"111":[2,12],"112":[14,7,13,6,12,6,2,2],"113":[10,11],"114":[21,10],"115":[8,2],"116":[8,2],"117":[1,9],"118":[10,5,1,10,4,3],"119":[36,4],"120":[36,4],"121":[250,4],"122":[6,248],"123":[254,251,250,249],"124":[0,8],"125":[4,4],"126":[0,8],"127":[0,8],"128":[8,1],"129":[0,4],"130":[4,0],"131":[3,1],"132":[0,3],"133":[1,2],"134":[2,1],"135":[2,1],"136":[0,2],"137":[1,2],"138":[0,3]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/statistical.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ArrayValueObject } from '../engine/value-object/array-value-object';\nimport type { BaseValueObject } from '../engine/value-object/base-value-object';\nimport { isRealNum } from '@univerjs/core';\nimport { ErrorValueObject } from '../engine/value-object/base-value-object';\nimport { erf, erfcINV } from './engineering';\nimport { ErrorType } from './error-type';\nimport { calculateCombin, calculateFactorial, calculateMmult, inverseMatrixByLUD, inverseMatrixByUSV, matrixTranspose } from './math';\n\nexport function betaCDF(x: number, alpha: number, beta: number): number {\n    if (x <= 0) {\n        return 0;\n    }\n\n    if (x >= 1) {\n        return 1;\n    }\n\n    return incompleteBetaFunction(x, alpha, beta);\n}\n\nexport function betaPDF(x: number, alpha: number, beta: number): number {\n    if (x <= 0 || x >= 1) {\n        return 0;\n    }\n\n    if (alpha === 1 && beta === 1) {\n        return 1;\n    }\n\n    if (alpha < 512 && beta < 512) {\n        return ((x ** (alpha - 1)) * ((1 - x) ** (beta - 1))) / betaFunction(alpha, beta);\n    }\n\n    return Math.exp((alpha - 1) * Math.log(x) + (beta - 1) * Math.log(1 - x) - betaFunctionNaturalLogarithm(alpha, beta));\n}\n\nexport function betaINV(probability: number, alpha: number, beta: number): number {\n    if (probability <= 0) {\n        return 0;\n    }\n\n    if (probability >= 1) {\n        return 1;\n    }\n\n    const EPSILON = 1e-8;\n    let x;\n\n    if (alpha >= 1 && beta >= 1) {\n        const p = (probability < 0.5) ? probability : 1 - probability;\n        const temp = Math.sqrt(-2 * Math.log(p));\n\n        x = (2.30753 + temp * 0.27061) / (1 + temp * (0.99229 + temp * 0.04481)) - temp;\n\n        if (probability < 0.5) {\n            x = -x;\n        }\n\n        const temp1 = (x * x - 3) / 6;\n        const temp2 = 2 / (1 / (2 * alpha - 1) + 1 / (2 * beta - 1));\n        const temp3 = (x * Math.sqrt(temp1 + temp2) / temp2) - (1 / (2 * beta - 1) - 1 / (2 * alpha - 1)) * (temp1 + 5 / 6 - 2 / (3 * temp2));\n\n        x = alpha / (alpha + beta * Math.exp(2 * temp3));\n    } else {\n        const temp1 = Math.exp(alpha * Math.log(alpha / (alpha + beta))) / alpha;\n        const temp2 = Math.exp(beta * Math.log(beta / (alpha + beta))) / beta;\n        const temp3 = temp1 + temp2;\n\n        if (probability < temp1 / temp3) {\n            x = (alpha * temp3 * probability) ** (1 / alpha);\n        } else {\n            x = 1 - (beta * temp3 * (1 - probability)) ** (1 / beta);\n        }\n    }\n\n    const betalnNeg = -betaFunctionNaturalLogarithm(alpha, beta);\n    let ibeta, t, u;\n\n    for (let j = 0; j < 10; j++) {\n        if (x === 0 || x === 1) {\n            return x;\n        }\n\n        ibeta = incompleteBetaFunction(x, alpha, beta) - probability;\n\n        t = Math.exp((alpha - 1) * Math.log(x) + (beta - 1) * Math.log(1 - x) + betalnNeg);\n        u = ibeta / t;\n        x -= (t = u / (1 - 0.5 * Math.min(1, u * ((alpha - 1) / x - (beta - 1) / (1 - x)))));\n\n        if (x <= 0) {\n            x = 0.5 * (x + t);\n        }\n\n        if (x >= 1) {\n            x = 0.5 * (x + t + 1);\n        }\n\n        if (Math.abs(t) < EPSILON * x && j > 0) {\n            break;\n        }\n    }\n\n    return x;\n}\n\nfunction incompleteBetaFunction(x: number, alpha: number, beta: number): number {\n    const bt = (x === 0 || x === 1)\n        ? 0\n        : Math.exp(gammaln(alpha + beta) - gammaln(alpha) - gammaln(beta) + alpha * Math.log(x) + beta * Math.log(1 - x));\n\n    if (x < (alpha + 1) / (alpha + beta + 2)) {\n        return bt * betaContinuedFraction(x, alpha, beta) / alpha;\n    }\n\n    return 1 - bt * betaContinuedFraction(1 - x, beta, alpha) / beta;\n}\n\nfunction betaContinuedFraction(x: number, alpha: number, beta: number): number {\n    const MAX_ITER = 100;\n    const EPSILON = 1e-8;\n\n    let d = 1 - (alpha + beta) * x / (alpha + 1);\n\n    if (Math.abs(d) < EPSILON) {\n        d = EPSILON;\n    }\n\n    d = 1 / d;\n\n    let c = 1;\n    let h = d;\n\n    for (let m = 1; m <= MAX_ITER; m++) {\n        let temp = m * (beta - m) * x / ((alpha - 1 + m * 2) * (alpha + m * 2));\n\n        d = 1 + temp * d;\n\n        if (Math.abs(d) < EPSILON) {\n            d = EPSILON;\n        }\n\n        c = 1 + temp / c;\n\n        if (Math.abs(c) < EPSILON) {\n            c = EPSILON;\n        }\n\n        d = 1 / d;\n        h *= d * c;\n\n        temp = -(alpha + m) * (alpha + beta + m) * x / ((alpha + m * 2) * (alpha + 1 + m * 2));\n\n        d = 1 + temp * d;\n\n        if (Math.abs(d) < EPSILON) {\n            d = EPSILON;\n        }\n\n        c = 1 + temp / c;\n\n        if (Math.abs(c) < EPSILON) {\n            c = EPSILON;\n        }\n\n        d = 1 / d;\n        h *= d * c;\n\n        if (Math.abs(d * c - 1) < EPSILON) {\n            break;\n        }\n    }\n\n    return h;\n}\n\nfunction betaFunction(alpha: number, beta: number): number {\n    if (alpha + beta > 170) {\n        return Math.exp(betaFunctionNaturalLogarithm(alpha, beta));\n    }\n\n    return gamma(alpha) * gamma(beta) / gamma(alpha + beta);\n}\n\nfunction betaFunctionNaturalLogarithm(alpha: number, beta: number): number {\n    return gammaln(alpha) + gammaln(beta) - gammaln(alpha + beta);\n}\n\nexport function binomialCDF(x: number, trials: number, probability: number): number {\n    if (x < 0) {\n        return 0;\n    }\n\n    if (x >= trials) {\n        return 1;\n    }\n\n    if (probability < 0 || probability > 1 || trials <= 0) {\n        return Number.NaN;\n    }\n\n    let result = 0;\n\n    for (let i = 0; i <= x; i++) {\n        result += binomialPDF(i, trials, probability);\n    }\n\n    return result;\n}\n\nexport function binomialPDF(x: number, trials: number, probability: number): number {\n    if (probability === 0 || probability === 1) {\n        if (trials * probability === x) {\n            return 1;\n        }\n\n        return 0;\n    }\n\n    return calculateCombin(trials, x) * (probability ** x) * ((1 - probability) ** (trials - x));\n}\n\nexport function chisquareCDF(x: number, degFreedom: number): number {\n    if (x <= 0) {\n        return 0;\n    }\n\n    return lowRegGamma(degFreedom / 2, x / 2);\n}\n\nexport function chisquarePDF(x: number, degFreedom: number): number {\n    if (x < 0) {\n        return 0;\n    }\n\n    if (x === 0 && degFreedom === 2) {\n        return 0.5;\n    }\n\n    return Math.exp((degFreedom / 2 - 1) * Math.log(x) - x / 2 - (degFreedom / 2) * Math.log(2) - gammaln(degFreedom / 2));\n}\n\nexport function chisquareINV(probability: number, degFreedom: number): number {\n    if (probability <= 0) {\n        return 0;\n    }\n\n    if (probability >= 1) {\n        return Infinity;\n    }\n\n    return 2 * lowRegGammaInverse(probability, degFreedom / 2);\n}\n\nexport function centralFCDF(x: number, degFreedom1: number, degFreedom2: number): number {\n    if (x < 0) {\n        return 0;\n    }\n\n    return incompleteBetaFunction((degFreedom1 * x) / (degFreedom1 * x + degFreedom2), degFreedom1 / 2, degFreedom2 / 2);\n}\n\nexport function centralFPDF(x: number, degFreedom1: number, degFreedom2: number): number {\n    if (x < 0) {\n        return 0;\n    }\n\n    if (x === 0 && degFreedom1 < 2) {\n        return Infinity;\n    }\n\n    if (x === 0 && degFreedom1 === 2) {\n        return 1;\n    }\n\n    let result = 1 / betaFunction(degFreedom1 / 2, degFreedom2 / 2);\n    result *= (degFreedom1 / degFreedom2) ** (degFreedom1 / 2);\n    result *= x ** ((degFreedom1 / 2) - 1);\n    result *= (1 + (degFreedom1 / degFreedom2) * x) ** (-(degFreedom1 + degFreedom2) / 2);\n\n    return result;\n}\n\nexport function centralFINV(probability: number, degFreedom1: number, degFreedom2: number): number {\n    if (probability <= 0) {\n        return 0;\n    }\n\n    if (probability >= 1) {\n        return Infinity;\n    }\n\n    return degFreedom2 / (degFreedom1 * (1 / betaINV(probability, degFreedom1 / 2, degFreedom2 / 2) - 1));\n}\n\nexport function exponentialCDF(x: number, lambda: number): number {\n    if (x < 0) {\n        return 0;\n    }\n\n    return 1 - Math.exp(-lambda * x);\n}\n\nexport function exponentialPDF(x: number, lambda: number): number {\n    if (x < 0) {\n        return 0;\n    }\n\n    return lambda * Math.exp(-lambda * x);\n}\n\nexport function forecastLinear(x: number, knownYs: number[], knownXs: number[]): number {\n    const n = knownYs.length;\n\n    let knownYsSum = 0;\n    let knownXsSum = 0;\n\n    for (let i = 0; i < n; i++) {\n        knownYsSum += knownYs[i];\n        knownXsSum += knownXs[i];\n    }\n\n    const knownYsMean = knownYsSum / n;\n    const knownXsMean = knownXsSum / n;\n\n    let num = 0;\n    let den = 0;\n\n    for (let i = 0; i < n; i++) {\n        num += (knownYs[i] - knownYsMean) * (knownXs[i] - knownXsMean);\n        den += (knownXs[i] - knownXsMean) ** 2;\n    }\n\n    if (den === 0) {\n        return Infinity;\n    }\n\n    const b = num / den;\n    const a = knownYsMean - b * knownXsMean;\n\n    return a + b * x;\n}\n\nexport function gamma(x: number): number {\n    const p = [\n        -1.716185138865495,\n        24.76565080557592,\n        -379.80425647094563,\n        629.3311553128184,\n        866.9662027904133,\n        -31451.272968848367,\n        -36144.413418691176,\n        66456.14382024054,\n    ];\n    const q = [\n        -30.8402300119739,\n        315.35062697960416,\n        -1015.1563674902192,\n        -3107.771671572311,\n        // eslint-disable-next-line no-loss-of-precision\n        22538.118420980151,\n        // eslint-disable-next-line no-loss-of-precision\n        4755.8462775278811,\n        -134659.9598649693,\n        -115132.2596755535,\n    ];\n\n    let fact = 0;\n    let y = x;\n\n    if (x > 171.6243769536076) {\n        return Infinity;\n    }\n\n    if (y <= 0) {\n        const resMod = y % 1 + 3.6e-16;\n\n        if (resMod) {\n            fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * resMod);\n            y = 1 - y;\n        } else {\n            return Infinity;\n        }\n    }\n\n    const yi = y;\n    let n = 0;\n    let z;\n\n    if (y < 1) {\n        z = y++;\n    } else {\n        z = (y -= n = (y | 0) - 1) - 1;\n    }\n\n    let xnum = 0;\n    let xden = 0;\n\n    for (let i = 0; i < 8; ++i) {\n        xnum = (xnum + p[i]) * z;\n        xden = xden * z + q[i];\n    }\n\n    let res = xnum / xden + 1;\n\n    if (yi < y) {\n        res /= yi;\n    } else if (yi > y) {\n        for (let i = 0; i < n; ++i) {\n            res *= y;\n            y++;\n        }\n    }\n\n    if (fact) {\n        res = fact / res;\n    }\n\n    return res;\n}\n\nexport function gammaCDF(x: number, alpha: number, beta: number): number {\n    if (x <= 0) {\n        return 0;\n    }\n\n    return lowRegGamma(alpha, x / beta);\n}\n\nexport function gammaPDF(x: number, alpha: number, beta: number): number {\n    if (x < 0) {\n        return 0;\n    }\n\n    if (x === 0 && alpha === 1) {\n        return 1 / beta;\n    }\n\n    return Math.exp((alpha - 1) * Math.log(x) - x / beta - gammaln(alpha) - alpha * Math.log(beta));\n}\n\nexport function gammaINV(probability: number, alpha: number, beta: number): number {\n    if (probability <= 0) {\n        return 0;\n    }\n\n    if (probability >= 1) {\n        return Infinity;\n    }\n\n    return beta * lowRegGammaInverse(probability, alpha);\n}\n\nexport function gammaln(x: number): number {\n    const coefficients = [\n        76.18009172947146, -86.50532032941677, 24.01409824083091, // eslint-disable-line\n        -1.231739572450155,\n        0.1208650973866179e-2,\n        -0.5395239384953e-5,\n    ];\n\n    let y = x;\n    let tmp = x + 5.5;\n    tmp -= (x + 0.5) * Math.log(tmp);\n    let ser = 1.000000000190015;\n\n    for (let j = 0; j < 6; j++) {\n        ser += coefficients[j] / ++y;\n    }\n\n    return -tmp + Math.log(2.5066282746310005 * ser / x);  // eslint-disable-line\n}\n\nfunction lowRegGamma(a: number, x: number): number {\n    if (x < 0 || a <= 0) {\n        return Number.NaN;\n    }\n\n    const EPSILON = 1e-30;\n\n    // calculate maximum number of itterations required for a\n    const MAX_ITER = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\n    const aln = gammaln(a);\n    const exp = Math.exp(-x + a * Math.log(x) - aln);\n\n    let _a = a;\n    let sum = 1 / a;\n    let del = sum;\n\n    if (x < a + 1) {\n        if (exp === 0) {\n            return 0;\n        }\n\n        for (let i = 1; i <= MAX_ITER; i++) {\n            sum += del *= x / ++_a;\n\n            if (Math.abs(del) < Math.abs(sum) * EPSILON) {\n                break;\n            }\n        }\n\n        return sum * exp;\n    }\n\n    if (exp === 0) {\n        return 1;\n    }\n\n    let b = x + 1 - a;\n    let c = 1 / EPSILON;\n    let d = 1 / b;\n    let h = d;\n\n    for (let i = 1; i <= MAX_ITER; i++) {\n        const temp = -i * (i - a);\n\n        b += 2;\n        d = temp * d + b;\n\n        if (Math.abs(d) < EPSILON) {\n            d = EPSILON;\n        }\n\n        c = b + temp / c;\n\n        if (Math.abs(c) < EPSILON) {\n            c = EPSILON;\n        }\n\n        d = 1 / d;\n        h *= d * c;\n\n        if (Math.abs(d * c - 1) < EPSILON) {\n            break;\n        }\n    }\n\n    return 1 - h * exp;\n};\n\nfunction lowRegGammaInverse(p: number, a: number): number {\n    if (p <= 0) {\n        return 0;\n    }\n\n    if (p >= 1) {\n        return Math.max(100, a + 100 * Math.sqrt(a));\n    }\n\n    let x;\n\n    if (a > 1) {\n        const _p = (p < 0.5) ? p : 1 - p;\n        const temp = Math.sqrt(-2 * Math.log(_p));\n\n        x = (2.30753 + temp * 0.27061) / (1 + temp * (0.99229 + temp * 0.04481)) - temp;\n\n        if (p < 0.5) {\n            x = -x;\n        }\n\n        x = Math.max(1e-3, a * ((1 - 1 / (9 * a) - x / (3 * Math.sqrt(a))) ** 3));\n    } else {\n        const temp = 1 - a * (0.253 + a * 0.12);\n\n        if (p < temp) {\n            x = (p / temp) ** (1 / a);\n        } else {\n            x = 1 - Math.log(1 - (p - temp) / (1 - temp));\n        }\n    }\n\n    const EPSILON = 1e-8;\n    const aln = gammaln(a);\n\n    let err, t;\n\n    for (let j = 0; j < 12; j++) {\n        if (x <= 0) {\n            return 0;\n        }\n\n        err = lowRegGamma(a, x) - p;\n\n        if (a > 1) {\n            t = Math.exp((a - 1) * (Math.log(a - 1) - 1) - aln) * Math.exp(-(x - (a - 1)) + (a - 1) * (Math.log(x) - Math.log(a - 1)));\n        } else {\n            t = Math.exp(-x + (a - 1) * Math.log(x) - aln);\n        }\n\n        if (t !== 0) {\n            t = (err / t) / (1 - 0.5 * Math.min(1, (err / t) * ((a - 1) / x - 1)));\n        }\n\n        x -= t;\n\n        if (x <= 0) {\n            x = 0.5 * (x + t);\n        }\n\n        if (Math.abs(t) < EPSILON * x) {\n            break;\n        }\n    }\n\n    return x;\n}\n\nexport function hypergeometricCDF(x: number, n: number, M: number, N: number): number {\n    let result = 0;\n\n    for (let i = 0; i <= x; i++) {\n        result += hypergeometricPDF(i, n, M, N);\n    }\n\n    return result;\n}\n\nexport function hypergeometricPDF(x: number, n: number, M: number, N: number): number {\n    if (n - x > N - M) {\n        return 0;\n    }\n\n    return calculateCombin(M, x) * calculateCombin(N - M, n - x) / calculateCombin(N, n);\n}\n\nexport function lognormalCDF(x: number, mean: number, standardDev: number): number {\n    if (x < 0) {\n        return 0;\n    }\n\n    return 0.5 + 0.5 * erf((Math.log(x) - mean) / Math.sqrt(2 * standardDev * standardDev));\n}\n\nexport function lognormalPDF(x: number, mean: number, standardDev: number): number {\n    if (x <= 0) {\n        return 0;\n    }\n\n    return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) - Math.log(standardDev) - ((Math.log(x) - mean) ** 2) / (2 * standardDev * standardDev));\n}\n\nexport function lognormalINV(probability: number, mean: number, standardDev: number): number {\n    return Math.exp(normalINV(probability, mean, standardDev));\n}\n\nexport function negbinomialCDF(numberF: number, numberS: number, probabilityS: number): number {\n    if (numberF < 0) {\n        return 0;\n    }\n\n    let result = 0;\n\n    for (let i = 0; i <= numberF; i++) {\n        result += negbinomialPDF(i, numberS, probabilityS);\n    }\n\n    return result;\n}\n\nexport function negbinomialPDF(numberF: number, numberS: number, probabilityS: number): number {\n    if (numberF < 0) {\n        return 0;\n    }\n\n    return calculateCombin(numberF + numberS - 1, numberS - 1) * (probabilityS ** numberS) * ((1 - probabilityS) ** numberF);\n}\n\nexport function normalCDF(x: number, mean: number, standardDev: number): number {\n    return 0.5 * (1 + erf((x - mean) / Math.sqrt(2 * standardDev * standardDev)));\n}\n\nexport function normalPDF(x: number, mean: number, standardDev: number): number {\n    return Math.exp(-0.5 * Math.log(2 * Math.PI) - Math.log(standardDev) - (x - mean) ** 2 / (2 * standardDev * standardDev));\n}\n\nexport function normalINV(probability: number, mean: number, standardDev: number): number {\n    // eslint-disable-next-line\n    return -1.41421356237309505 * standardDev * erfcINV(2 * probability) + mean;\n}\n\nexport function poissonCDF(x: number, mean: number): number {\n    let result = 0;\n\n    for (let i = 0; i <= x; i++) {\n        result += poissonPDF(i, mean);\n    }\n\n    return result;\n}\n\nexport function poissonPDF(x: number, mean: number): number {\n    return Math.exp(-mean) * (mean ** x) / calculateFactorial(x);\n}\n\nexport function studentTCDF(x: number, degFreedom: number): number {\n    const result = 0.5 * incompleteBetaFunction(degFreedom / (x ** 2 + degFreedom), degFreedom / 2, 0.5);\n\n    return x < 0 ? result : 1 - result;\n}\n\nexport function studentTPDF(x: number, degFreedom: number): number {\n    const pow = (1 + (x ** 2) / degFreedom) ** (-(degFreedom + 1) / 2);\n\n    return 1 / (Math.sqrt(degFreedom) * betaFunction(0.5, degFreedom / 2)) * pow;\n}\n\nexport function studentTINV(probability: number, degFreedom: number): number {\n    let x = betaINV(2 * Math.min(probability, 1 - probability), 0.5 * degFreedom, 0.5);\n    x = Math.sqrt(degFreedom * (1 - x) / x);\n\n    return (probability > 0.5) ? x : -x;\n}\n\nexport function getTwoArrayNumberValues(\n    array1: BaseValueObject,\n    array2: BaseValueObject,\n    count: number,\n    array1ColumnCount: number,\n    array2ColumnCount: number\n) {\n    const array1Values: number[] = [];\n    const array2Values: number[] = [];\n    let noCalculate = true;\n\n    for (let i = 0; i < count; i++) {\n        const array1RowIndex = Math.floor(i / array1ColumnCount);\n        const array1ColumnIndex = i % array1ColumnCount;\n\n        const array2RowIndex = Math.floor(i / array2ColumnCount);\n        const array2ColumnIndex = i % array2ColumnCount;\n\n        const array1Object = array1.isArray() ? (array1 as ArrayValueObject).get(array1RowIndex, array1ColumnIndex) as BaseValueObject : array1;\n        const array2Object = array2.isArray() ? (array2 as ArrayValueObject).get(array2RowIndex, array2ColumnIndex) as BaseValueObject : array2;\n\n        if (array1Object.isError()) {\n            return {\n                isError: true,\n                errorObject: array1Object as ErrorValueObject,\n                array1Values,\n                array2Values,\n                noCalculate,\n            };\n        }\n\n        if (array2Object.isError()) {\n            return {\n                isError: true,\n                errorObject: array2Object as ErrorValueObject,\n                array1Values,\n                array2Values,\n                noCalculate,\n            };\n        }\n\n        if (array1Object.isNull() || array2Object.isNull() || array1Object.isBoolean() || array2Object.isBoolean()) {\n            continue;\n        }\n\n        const array1Value = array1Object.getValue();\n        const array2Value = array2Object.getValue();\n\n        if (!isRealNum(array1Value) || !isRealNum(array2Value)) {\n            continue;\n        }\n\n        array1Values.push(+array1Value);\n        array2Values.push(+array2Value);\n        noCalculate = false;\n    }\n\n    return {\n        isError: false,\n        errorObject: null,\n        array1Values,\n        array2Values,\n        noCalculate,\n    };\n}\n\n// eslint-disable-next-line\nexport function checkKnownsArrayDimensions(knownYs: BaseValueObject, knownXs?: BaseValueObject, newXs?: BaseValueObject) {\n    const knownYsRowCount = knownYs.isArray() ? (knownYs as ArrayValueObject).getRowCount() : 1;\n    const knownYsColumnCount = knownYs.isArray() ? (knownYs as ArrayValueObject).getColumnCount() : 1;\n\n    let knownXsRowCount = knownYsRowCount;\n    let knownXsColumnCount = knownYsColumnCount;\n\n    if (knownXs && !knownXs.isNull()) {\n        knownXsRowCount = knownXs.isArray() ? (knownXs as ArrayValueObject).getRowCount() : 1;\n        knownXsColumnCount = knownXs.isArray() ? (knownXs as ArrayValueObject).getColumnCount() : 1;\n\n        if (\n            (knownYsRowCount === 1 && (knownXsColumnCount !== knownYsColumnCount)) ||\n            (knownYsColumnCount === 1 && knownXsRowCount !== knownYsRowCount) ||\n            (knownYsRowCount !== 1 && knownYsColumnCount !== 1 && (knownXsRowCount !== knownYsRowCount || knownXsColumnCount !== knownYsColumnCount))\n        ) {\n            return {\n                isError: true,\n                errorObject: ErrorValueObject.create(ErrorType.REF),\n            };\n        }\n    }\n\n    if (newXs && !newXs.isNull()) {\n        const newXsRowCount = newXs.isArray() ? (newXs as ArrayValueObject).getRowCount() : 1;\n        const newXsColumnCount = newXs.isArray() ? (newXs as ArrayValueObject).getColumnCount() : 1;\n\n        if (\n            (knownYsRowCount === 1 && knownXsRowCount > 1 && newXsRowCount !== knownXsRowCount) ||\n            (knownYsColumnCount === 1 && knownXsColumnCount > 1 && newXsColumnCount !== knownXsColumnCount)\n        ) {\n            return {\n                isError: true,\n                errorObject: ErrorValueObject.create(ErrorType.REF),\n            };\n        }\n    }\n\n    return {\n        isError: false,\n        errorObject: null,\n    };\n}\n\nexport function getKnownsArrayValues(array: BaseValueObject): number[][] | ErrorValueObject {\n    const rowCount = array.isArray() ? (array as ArrayValueObject).getRowCount() : 1;\n    const columnCount = array.isArray() ? (array as ArrayValueObject).getColumnCount() : 1;\n\n    const values: number[][] = [];\n\n    for (let r = 0; r < rowCount; r++) {\n        values[r] = [];\n\n        for (let c = 0; c < columnCount; c++) {\n            const valueObject = array.isArray() ? (array as ArrayValueObject).get(r, c) as BaseValueObject : array;\n\n            if (valueObject.isError() || valueObject.isNull() || valueObject.isBoolean() || valueObject.isString()) {\n                return ErrorValueObject.create(ErrorType.VALUE);\n            }\n\n            values[r].push(+valueObject.getValue());\n        }\n    }\n\n    return values;\n}\n\nexport function getSerialNumbersByRowsColumns(rowCount: number, columnCount: number): number[][] {\n    const values: number[][] = [];\n\n    let n = 1;\n\n    for (let r = 0; r < rowCount; r++) {\n        values[r] = [];\n\n        for (let c = 0; c < columnCount; c++) {\n            values[r].push(n++);\n        }\n    }\n\n    return values;\n}\n\nexport function getSlopeAndIntercept(knownXsValues: number[], knownYsValues: number[], constb: number, isExponentialTransform: boolean) {\n    let Y = knownYsValues;\n\n    if (isExponentialTransform) {\n        Y = knownYsValues.map((value) => Math.log(value));\n    }\n\n    let slope, intercept;\n\n    if (constb) {\n        ({ slope, intercept } = getSlopeAndInterceptOfConstbIsTrue(knownXsValues, Y));\n    } else {\n        ({ slope, intercept } = getSlopeAndInterceptOfConstbIsFalse(knownXsValues, Y));\n    }\n\n    if (isExponentialTransform) {\n        slope = Math.exp(slope);\n        intercept = Math.exp(intercept);\n    }\n\n    if (Number.isNaN(slope) && !constb) {\n        slope = 0;\n    }\n\n    return { slope, intercept, Y };\n}\n\nfunction getSlopeAndInterceptOfConstbIsTrue(knownXsValues: number[], knownYsValues: number[]) {\n    const n = knownYsValues.length;\n\n    let sumX = 0;\n    let sumY = 0;\n    let sumX2 = 0;\n    let sumXY = 0;\n\n    for (let i = 0; i < n; i++) {\n        sumX += knownXsValues[i];\n        sumY += knownYsValues[i];\n        sumX2 += knownXsValues[i] * knownXsValues[i];\n        sumXY += knownXsValues[i] * knownYsValues[i];\n    }\n\n    const temp = n * sumXY - sumX * sumY;\n    const slope = temp / (n * sumX2 - sumX * sumX);\n    const intercept = 1 / n * sumY - slope * (1 / n) * sumX;\n\n    return {\n        slope,\n        intercept,\n    };\n}\n\nfunction getSlopeAndInterceptOfConstbIsFalse(knownXsValues: number[], knownYsValues: number[]) {\n    const matrixX = [[...knownXsValues]];\n    const matrixY = [...knownYsValues];\n\n    let rowCount = matrixX.length;\n    let columnCount = matrixX[0].length;\n    let minCount = Math.min(rowCount, columnCount);\n    const newMatrix = new Array(minCount).fill(0);\n\n    for (let i = 0; i < minCount; i++) {\n        const matrixXRow = matrixX[i];\n\n        let sumSquare = 0;\n\n        for (let j = 0; j < columnCount; j++) {\n            sumSquare += matrixXRow[j] ** 2;\n        }\n\n        const value = matrixXRow[i] < 0 ? Math.sqrt(sumSquare) : -Math.sqrt(sumSquare);\n\n        newMatrix[i] = value;\n\n        if (value !== 0) {\n            matrixXRow[i] -= value;\n\n            for (let j = i + 1; j < rowCount; j++) {\n                let sum = 0;\n\n                for (let k = i; k < columnCount; k++) {\n                    sum -= matrixX[j][k] * matrixXRow[k];\n                }\n\n                sum /= (value * matrixXRow[i]);\n\n                for (let k = i; k < columnCount; k++) {\n                    matrixX[j][k] -= sum * matrixXRow[k];\n                }\n            }\n        }\n    }\n\n    rowCount = matrixX.length;\n    columnCount = matrixX[0].length;\n    minCount = Math.min(rowCount, columnCount);\n    const result = new Array(rowCount).fill(0);\n\n    for (let i = 0; i < minCount; i++) {\n        const matrixXRow = matrixX[i];\n\n        let sum = 0;\n\n        for (let j = 0; j < columnCount; j++) {\n            sum += matrixY[j] * matrixXRow[j];\n        }\n\n        sum /= (newMatrix[i] * matrixXRow[i]);\n\n        for (let j = 0; j < columnCount; j++) {\n            matrixY[j] += sum * matrixXRow[j];\n        }\n    }\n\n    for (let i = newMatrix.length - 1; i >= 0; i--) {\n        matrixY[i] /= newMatrix[i];\n\n        const temp = matrixY[i];\n        const matrixXRow = matrixX[i];\n\n        result[i] = temp;\n\n        for (let j = 0; j < i; j++) {\n            matrixY[j] -= temp * matrixXRow[j];\n        }\n    }\n\n    return {\n        slope: result[0],\n        intercept: 0,\n    };\n}\n\nexport function getKnownsArrayCoefficients(knownYsValues: number[][], knownXsValues: number[][], newXsValues: number[][], constb: number, isExponentialTransform: boolean) {\n    const isOneRow = knownYsValues.length === 1 && knownYsValues[0].length > 1;\n\n    let Y = knownYsValues;\n\n    if (isExponentialTransform) {\n        Y = knownYsValues.map((row) => row.map((value) => Math.log(value)));\n    }\n\n    let X = knownXsValues;\n    let newX = newXsValues;\n\n    if (isOneRow) {\n        Y = matrixTranspose(Y);\n        X = matrixTranspose(X);\n        newX = matrixTranspose(newX);\n    }\n\n    if (constb) {\n        X = X.map((row) => [...row, 1]);\n    }\n\n    const XT = matrixTranspose(X);\n    const XTX = calculateMmult(XT, X);\n    const XTY = calculateMmult(XT, Y);\n\n    let XTXInverse = inverseMatrixByLUD(XTX);\n\n    if (!XTXInverse) {\n        XTXInverse = inverseMatrixByUSV(XTX);\n\n        if (!XTXInverse) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n    }\n\n    let coefficients = calculateMmult(XTXInverse, XTY);\n\n    if (!constb) {\n        coefficients.push([0]);\n    }\n\n    coefficients = matrixTranspose(coefficients);\n\n    const pop = coefficients[0].pop() as number;\n\n    coefficients[0].reverse();\n    coefficients[0].push(pop);\n\n    if (isExponentialTransform) {\n        for (let i = 0; i < coefficients[0].length; i++) {\n            coefficients[0][i] = Math.exp(coefficients[0][i]);\n        }\n    }\n\n    return {\n        coefficients,\n        Y,\n        X,\n        newX,\n        XTXInverse,\n    };\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"403fa657be258a0a2573f85154a339d8fbda5afa"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/base-function.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/base-function.ts","statementMap":{"0":{"start":{"line":16,"column":4},"end":{"line":16,"column":23}},"1":{"start":{"line":20,"column":9},"end":{"line":20,"column":11}},"2":{"start":{"line":21,"column":12},"end":{"line":21,"column":14}},"3":{"start":{"line":27,"column":14},"end":{"line":27,"column":16}},"4":{"start":{"line":28,"column":17},"end":{"line":28,"column":19}},"5":{"start":{"line":32,"column":22},"end":{"line":32,"column":27}},"6":{"start":{"line":36,"column":25},"end":{"line":36,"column":30}},"7":{"start":{"line":40,"column":16},"end":{"line":40,"column":21}},"8":{"start":{"line":44,"column":20},"end":{"line":44,"column":25}},"9":{"start":{"line":48,"column":26},"end":{"line":48,"column":31}},"10":{"start":{"line":52,"column":29},"end":{"line":52,"column":34}},"11":{"start":{"line":56,"column":14},"end":{"line":56,"column":16}},"12":{"start":{"line":60,"column":14},"end":{"line":60,"column":16}},"13":{"start":{"line":62,"column":4},"end":{"line":62,"column":22}},"14":{"start":{"line":65,"column":4},"end":{"line":65,"column":24}},"15":{"start":{"line":68,"column":4},"end":{"line":68,"column":27}},"16":{"start":{"line":71,"column":4},"end":{"line":71,"column":21}},"17":{"start":{"line":74,"column":4},"end":{"line":74,"column":24}},"18":{"start":{"line":85,"column":20},"end":{"line":85,"column":38}},"19":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"20":{"start":{"line":87,"column":6},"end":{"line":87,"column":18}},"21":{"start":{"line":89,"column":4},"end":{"line":91,"column":12}},"22":{"start":{"line":90,"column":6},"end":{"line":90,"column":33}},"23":{"start":{"line":94,"column":4},"end":{"line":94,"column":38}},"24":{"start":{"line":97,"column":4},"end":{"line":97,"column":24}},"25":{"start":{"line":100,"column":4},"end":{"line":100,"column":26}},"26":{"start":{"line":103,"column":4},"end":{"line":106,"column":6}},"27":{"start":{"line":112,"column":4},"end":{"line":112,"column":34}},"28":{"start":{"line":113,"column":4},"end":{"line":113,"column":38}},"29":{"start":{"line":116,"column":4},"end":{"line":116,"column":47}},"30":{"start":{"line":119,"column":4},"end":{"line":119,"column":30}},"31":{"start":{"line":120,"column":4},"end":{"line":120,"column":36}},"32":{"start":{"line":123,"column":4},"end":{"line":123,"column":17}},"33":{"start":{"line":126,"column":4},"end":{"line":126,"column":17}},"34":{"start":{"line":129,"column":4},"end":{"line":129,"column":17}},"35":{"start":{"line":132,"column":4},"end":{"line":132,"column":26}},"36":{"start":{"line":133,"column":4},"end":{"line":133,"column":32}},"37":{"start":{"line":134,"column":4},"end":{"line":134,"column":20}},"38":{"start":{"line":135,"column":4},"end":{"line":135,"column":26}},"39":{"start":{"line":138,"column":4},"end":{"line":138,"column":16}},"40":{"start":{"line":141,"column":4},"end":{"line":141,"column":52}},"41":{"start":{"line":144,"column":4},"end":{"line":144,"column":87}},"42":{"start":{"line":153,"column":20},"end":{"line":153,"column":28}},"43":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"44":{"start":{"line":155,"column":6},"end":{"line":155,"column":43}},"45":{"start":{"line":157,"column":4},"end":{"line":163,"column":5}},"46":{"start":{"line":158,"column":27},"end":{"line":158,"column":47}},"47":{"start":{"line":159,"column":6},"end":{"line":161,"column":7}},"48":{"start":{"line":160,"column":8},"end":{"line":160,"column":56}},"49":{"start":{"line":162,"column":6},"end":{"line":162,"column":26}},"50":{"start":{"line":164,"column":4},"end":{"line":173,"column":5}},"51":{"start":{"line":165,"column":27},"end":{"line":165,"column":55}},"52":{"start":{"line":166,"column":6},"end":{"line":168,"column":7}},"53":{"start":{"line":167,"column":8},"end":{"line":167,"column":54}},"54":{"start":{"line":169,"column":6},"end":{"line":169,"column":26}},"55":{"start":{"line":170,"column":11},"end":{"line":173,"column":5}},"56":{"start":{"line":171,"column":27},"end":{"line":171,"column":47}},"57":{"start":{"line":172,"column":6},"end":{"line":172,"column":26}},"58":{"start":{"line":174,"column":4},"end":{"line":174,"column":52}},"59":{"start":{"line":189,"column":4},"end":{"line":191,"column":5}},"60":{"start":{"line":190,"column":6},"end":{"line":190,"column":15}},"61":{"start":{"line":192,"column":21},"end":{"line":192,"column":22}},"62":{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},"63":{"start":{"line":194,"column":6},"end":{"line":194,"column":57}},"64":{"start":{"line":196,"column":4},"end":{"line":208,"column":5}},"65":{"start":{"line":197,"column":21},"end":{"line":197,"column":48}},"66":{"start":{"line":198,"column":6},"end":{"line":200,"column":7}},"67":{"start":{"line":199,"column":8},"end":{"line":199,"column":23}},"68":{"start":{"line":201,"column":11},"end":{"line":208,"column":5}},"69":{"start":{"line":202,"column":6},"end":{"line":202,"column":13}},"70":{"start":{"line":203,"column":11},"end":{"line":208,"column":5}},"71":{"start":{"line":204,"column":21},"end":{"line":204,"column":48}},"72":{"start":{"line":205,"column":6},"end":{"line":207,"column":7}},"73":{"start":{"line":206,"column":8},"end":{"line":206,"column":23}},"74":{"start":{"line":209,"column":4},"end":{"line":209,"column":22}},"75":{"start":{"line":217,"column":4},"end":{"line":219,"column":5}},"76":{"start":{"line":218,"column":6},"end":{"line":218,"column":15}},"77":{"start":{"line":220,"column":21},"end":{"line":220,"column":22}},"78":{"start":{"line":221,"column":4},"end":{"line":223,"column":5}},"79":{"start":{"line":222,"column":6},"end":{"line":222,"column":57}},"80":{"start":{"line":224,"column":4},"end":{"line":236,"column":5}},"81":{"start":{"line":225,"column":21},"end":{"line":225,"column":48}},"82":{"start":{"line":226,"column":6},"end":{"line":228,"column":7}},"83":{"start":{"line":227,"column":8},"end":{"line":227,"column":23}},"84":{"start":{"line":229,"column":11},"end":{"line":236,"column":5}},"85":{"start":{"line":230,"column":6},"end":{"line":230,"column":13}},"86":{"start":{"line":231,"column":11},"end":{"line":236,"column":5}},"87":{"start":{"line":232,"column":21},"end":{"line":232,"column":48}},"88":{"start":{"line":233,"column":6},"end":{"line":235,"column":7}},"89":{"start":{"line":234,"column":8},"end":{"line":234,"column":28}},"90":{"start":{"line":237,"column":4},"end":{"line":237,"column":22}},"91":{"start":{"line":240,"column":24},"end":{"line":240,"column":78}},"92":{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},"93":{"start":{"line":242,"column":6},"end":{"line":242,"column":51}},"94":{"start":{"line":245,"column":4},"end":{"line":249,"column":5}},"95":{"start":{"line":246,"column":6},"end":{"line":246,"column":80}},"96":{"start":{"line":248,"column":6},"end":{"line":248,"column":80}},"97":{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},"98":{"start":{"line":251,"column":6},"end":{"line":251,"column":41}},"99":{"start":{"line":253,"column":4},"end":{"line":253,"column":23}},"100":{"start":{"line":256,"column":4},"end":{"line":258,"column":5}},"101":{"start":{"line":257,"column":6},"end":{"line":257,"column":51}},"102":{"start":{"line":259,"column":4},"end":{"line":259,"column":64}},"103":{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},"104":{"start":{"line":263,"column":6},"end":{"line":263,"column":51}},"105":{"start":{"line":265,"column":4},"end":{"line":265,"column":97}},"106":{"start":{"line":268,"column":29},"end":{"line":268,"column":76}},"107":{"start":{"line":269,"column":4},"end":{"line":271,"column":5}},"108":{"start":{"line":270,"column":6},"end":{"line":270,"column":54}},"109":{"start":{"line":272,"column":4},"end":{"line":272,"column":51}},"110":{"start":{"line":275,"column":29},"end":{"line":275,"column":97}},"111":{"start":{"line":276,"column":4},"end":{"line":278,"column":5}},"112":{"start":{"line":277,"column":6},"end":{"line":277,"column":54}},"113":{"start":{"line":279,"column":4},"end":{"line":279,"column":51}},"114":{"start":{"line":282,"column":21},"end":{"line":282,"column":71}},"115":{"start":{"line":283,"column":4},"end":{"line":285,"column":5}},"116":{"start":{"line":284,"column":6},"end":{"line":284,"column":51}},"117":{"start":{"line":286,"column":24},"end":{"line":286,"column":98}},"118":{"start":{"line":287,"column":4},"end":{"line":289,"column":5}},"119":{"start":{"line":288,"column":6},"end":{"line":288,"column":51}},"120":{"start":{"line":290,"column":4},"end":{"line":290,"column":23}},"121":{"start":{"line":293,"column":24},"end":{"line":293,"column":78}},"122":{"start":{"line":294,"column":4},"end":{"line":296,"column":5}},"123":{"start":{"line":295,"column":6},"end":{"line":295,"column":51}},"124":{"start":{"line":297,"column":4},"end":{"line":299,"column":5}},"125":{"start":{"line":298,"column":6},"end":{"line":298,"column":63}},"126":{"start":{"line":300,"column":4},"end":{"line":300,"column":69}},"127":{"start":{"line":303,"column":24},"end":{"line":303,"column":50}},"128":{"start":{"line":305,"column":4},"end":{"line":309,"column":5}},"129":{"start":{"line":306,"column":6},"end":{"line":306,"column":52}},"130":{"start":{"line":308,"column":6},"end":{"line":308,"column":51}},"131":{"start":{"line":310,"column":4},"end":{"line":312,"column":5}},"132":{"start":{"line":311,"column":6},"end":{"line":311,"column":51}},"133":{"start":{"line":313,"column":4},"end":{"line":315,"column":5}},"134":{"start":{"line":314,"column":6},"end":{"line":314,"column":65}},"135":{"start":{"line":316,"column":4},"end":{"line":316,"column":77}},"136":{"start":{"line":319,"column":24},"end":{"line":319,"column":71}},"137":{"start":{"line":321,"column":4},"end":{"line":325,"column":5}},"138":{"start":{"line":322,"column":6},"end":{"line":322,"column":52}},"139":{"start":{"line":324,"column":6},"end":{"line":324,"column":51}},"140":{"start":{"line":326,"column":4},"end":{"line":328,"column":5}},"141":{"start":{"line":327,"column":6},"end":{"line":327,"column":51}},"142":{"start":{"line":329,"column":4},"end":{"line":331,"column":5}},"143":{"start":{"line":330,"column":6},"end":{"line":330,"column":65}},"144":{"start":{"line":332,"column":4},"end":{"line":332,"column":77}},"145":{"start":{"line":335,"column":21},"end":{"line":335,"column":71}},"146":{"start":{"line":336,"column":4},"end":{"line":338,"column":5}},"147":{"start":{"line":337,"column":6},"end":{"line":337,"column":51}},"148":{"start":{"line":339,"column":4},"end":{"line":341,"column":5}},"149":{"start":{"line":340,"column":6},"end":{"line":340,"column":65}},"150":{"start":{"line":342,"column":4},"end":{"line":342,"column":77}},"151":{"start":{"line":345,"column":26},"end":{"line":345,"column":28}},"152":{"start":{"line":346,"column":4},"end":{"line":346,"column":26}},"153":{"start":{"line":347,"column":4},"end":{"line":377,"column":5}},"154":{"start":{"line":347,"column":17},"end":{"line":347,"column":18}},"155":{"start":{"line":348,"column":20},"end":{"line":348,"column":31}},"156":{"start":{"line":349,"column":6},"end":{"line":351,"column":7}},"157":{"start":{"line":350,"column":8},"end":{"line":350,"column":55}},"158":{"start":{"line":352,"column":6},"end":{"line":354,"column":7}},"159":{"start":{"line":353,"column":8},"end":{"line":353,"column":23}},"160":{"start":{"line":355,"column":6},"end":{"line":376,"column":7}},"161":{"start":{"line":357,"column":8},"end":{"line":370,"column":11}},"162":{"start":{"line":358,"column":10},"end":{"line":360,"column":11}},"163":{"start":{"line":359,"column":12},"end":{"line":359,"column":24}},"164":{"start":{"line":361,"column":10},"end":{"line":363,"column":11}},"165":{"start":{"line":362,"column":12},"end":{"line":362,"column":24}},"166":{"start":{"line":364,"column":10},"end":{"line":364,"column":73}},"167":{"start":{"line":365,"column":10},"end":{"line":368,"column":11}},"168":{"start":{"line":366,"column":12},"end":{"line":366,"column":37}},"169":{"start":{"line":367,"column":12},"end":{"line":367,"column":25}},"170":{"start":{"line":369,"column":10},"end":{"line":369,"column":45}},"171":{"start":{"line":371,"column":8},"end":{"line":373,"column":9}},"172":{"start":{"line":372,"column":10},"end":{"line":372,"column":28}},"173":{"start":{"line":375,"column":8},"end":{"line":375,"column":39}},"174":{"start":{"line":378,"column":4},"end":{"line":378,"column":69}},"175":{"start":{"line":381,"column":4},"end":{"line":383,"column":5}},"176":{"start":{"line":382,"column":6},"end":{"line":382,"column":50}},"177":{"start":{"line":384,"column":4},"end":{"line":387,"column":5}},"178":{"start":{"line":385,"column":20},"end":{"line":385,"column":50}},"179":{"start":{"line":386,"column":6},"end":{"line":386,"column":78}},"180":{"start":{"line":388,"column":4},"end":{"line":388,"column":23}},"181":{"start":{"line":391,"column":19},"end":{"line":391,"column":46}},"182":{"start":{"line":392,"column":20},"end":{"line":392,"column":54}},"183":{"start":{"line":393,"column":22},"end":{"line":393,"column":52}},"184":{"start":{"line":394,"column":26},"end":{"line":398,"column":5}},"185":{"start":{"line":399,"column":18},"end":{"line":399,"column":58}},"186":{"start":{"line":401,"column":4},"end":{"line":409,"column":5}},"187":{"start":{"line":402,"column":6},"end":{"line":402,"column":55}},"188":{"start":{"line":403,"column":11},"end":{"line":409,"column":5}},"189":{"start":{"line":404,"column":6},"end":{"line":404,"column":54}},"190":{"start":{"line":405,"column":11},"end":{"line":409,"column":5}},"191":{"start":{"line":406,"column":6},"end":{"line":406,"column":57}},"192":{"start":{"line":408,"column":6},"end":{"line":408,"column":73}},"193":{"start":{"line":410,"column":4},"end":{"line":410,"column":65}},"194":{"start":{"line":413,"column":4},"end":{"line":415,"column":5}},"195":{"start":{"line":414,"column":6},"end":{"line":414,"column":52}},"196":{"start":{"line":416,"column":4},"end":{"line":416,"column":41}},"197":{"start":{"line":417,"column":4},"end":{"line":417,"column":45}},"198":{"start":{"line":418,"column":4},"end":{"line":418,"column":48}},"199":{"start":{"line":419,"column":4},"end":{"line":419,"column":54}},"200":{"start":{"line":420,"column":4},"end":{"line":420,"column":72}},"201":{"start":{"line":421,"column":4},"end":{"line":421,"column":86}},"202":{"start":{"line":422,"column":4},"end":{"line":422,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":2},"end":{"line":15,"column":3}},"loc":{"start":{"line":15,"column":21},"end":{"line":17,"column":3}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":61,"column":2},"end":{"line":61,"column":3}},"loc":{"start":{"line":61,"column":13},"end":{"line":63,"column":3}},"line":61},"2":{"name":"(anonymous_2)","decl":{"start":{"line":64,"column":2},"end":{"line":64,"column":3}},"loc":{"start":{"line":64,"column":15},"end":{"line":66,"column":3}},"line":64},"3":{"name":"(anonymous_3)","decl":{"start":{"line":67,"column":2},"end":{"line":67,"column":3}},"loc":{"start":{"line":67,"column":18},"end":{"line":69,"column":3}},"line":67},"4":{"name":"(anonymous_4)","decl":{"start":{"line":70,"column":2},"end":{"line":70,"column":3}},"loc":{"start":{"line":70,"column":12},"end":{"line":72,"column":3}},"line":70},"5":{"name":"(anonymous_5)","decl":{"start":{"line":73,"column":2},"end":{"line":73,"column":3}},"loc":{"start":{"line":73,"column":15},"end":{"line":75,"column":3}},"line":73},"6":{"name":"(anonymous_6)","decl":{"start":{"line":76,"column":2},"end":{"line":76,"column":3}},"loc":{"start":{"line":76,"column":12},"end":{"line":77,"column":3}},"line":76},"7":{"name":"(anonymous_7)","decl":{"start":{"line":84,"column":2},"end":{"line":84,"column":3}},"loc":{"start":{"line":84,"column":23},"end":{"line":92,"column":3}},"line":84},"8":{"name":"(anonymous_8)","decl":{"start":{"line":89,"column":53},"end":{"line":89,"column":54}},"loc":{"start":{"line":89,"column":64},"end":{"line":91,"column":5}},"line":89},"9":{"name":"(anonymous_9)","decl":{"start":{"line":93,"column":2},"end":{"line":93,"column":3}},"loc":{"start":{"line":93,"column":32},"end":{"line":95,"column":3}},"line":93},"10":{"name":"(anonymous_10)","decl":{"start":{"line":96,"column":2},"end":{"line":96,"column":3}},"loc":{"start":{"line":96,"column":14},"end":{"line":98,"column":3}},"line":96},"11":{"name":"(anonymous_11)","decl":{"start":{"line":99,"column":2},"end":{"line":99,"column":3}},"loc":{"start":{"line":99,"column":20},"end":{"line":101,"column":3}},"line":99},"12":{"name":"(anonymous_12)","decl":{"start":{"line":102,"column":2},"end":{"line":102,"column":3}},"loc":{"start":{"line":102,"column":18},"end":{"line":107,"column":3}},"line":102},"13":{"name":"(anonymous_13)","decl":{"start":{"line":108,"column":2},"end":{"line":108,"column":3}},"loc":{"start":{"line":111,"column":5},"end":{"line":114,"column":3}},"line":111},"14":{"name":"(anonymous_14)","decl":{"start":{"line":115,"column":2},"end":{"line":115,"column":3}},"loc":{"start":{"line":115,"column":41},"end":{"line":117,"column":3}},"line":115},"15":{"name":"(anonymous_15)","decl":{"start":{"line":118,"column":2},"end":{"line":118,"column":3}},"loc":{"start":{"line":118,"column":48},"end":{"line":121,"column":3}},"line":118},"16":{"name":"(anonymous_16)","decl":{"start":{"line":122,"column":2},"end":{"line":122,"column":3}},"loc":{"start":{"line":122,"column":12},"end":{"line":124,"column":3}},"line":122},"17":{"name":"(anonymous_17)","decl":{"start":{"line":125,"column":2},"end":{"line":125,"column":3}},"loc":{"start":{"line":125,"column":14},"end":{"line":127,"column":3}},"line":125},"18":{"name":"(anonymous_18)","decl":{"start":{"line":128,"column":2},"end":{"line":128,"column":3}},"loc":{"start":{"line":128,"column":13},"end":{"line":130,"column":3}},"line":128},"19":{"name":"(anonymous_19)","decl":{"start":{"line":131,"column":2},"end":{"line":131,"column":3}},"loc":{"start":{"line":131,"column":45},"end":{"line":136,"column":3}},"line":131},"20":{"name":"(anonymous_20)","decl":{"start":{"line":137,"column":2},"end":{"line":137,"column":3}},"loc":{"start":{"line":137,"column":26},"end":{"line":139,"column":3}},"line":137},"21":{"name":"(anonymous_21)","decl":{"start":{"line":140,"column":2},"end":{"line":140,"column":3}},"loc":{"start":{"line":140,"column":20},"end":{"line":142,"column":3}},"line":140},"22":{"name":"(anonymous_22)","decl":{"start":{"line":143,"column":2},"end":{"line":143,"column":3}},"loc":{"start":{"line":143,"column":26},"end":{"line":145,"column":3}},"line":143},"23":{"name":"(anonymous_23)","decl":{"start":{"line":152,"column":2},"end":{"line":152,"column":3}},"loc":{"start":{"line":152,"column":47},"end":{"line":175,"column":3}},"line":152},"24":{"name":"(anonymous_24)","decl":{"start":{"line":188,"column":2},"end":{"line":188,"column":3}},"loc":{"start":{"line":188,"column":45},"end":{"line":210,"column":3}},"line":188},"25":{"name":"(anonymous_25)","decl":{"start":{"line":216,"column":2},"end":{"line":216,"column":3}},"loc":{"start":{"line":216,"column":38},"end":{"line":238,"column":3}},"line":216},"26":{"name":"(anonymous_26)","decl":{"start":{"line":239,"column":2},"end":{"line":239,"column":3}},"loc":{"start":{"line":239,"column":71},"end":{"line":254,"column":3}},"line":239},"27":{"name":"(anonymous_27)","decl":{"start":{"line":255,"column":2},"end":{"line":255,"column":3}},"loc":{"start":{"line":255,"column":27},"end":{"line":260,"column":3}},"line":255},"28":{"name":"(anonymous_28)","decl":{"start":{"line":261,"column":2},"end":{"line":261,"column":3}},"loc":{"start":{"line":261,"column":26},"end":{"line":266,"column":3}},"line":261},"29":{"name":"(anonymous_29)","decl":{"start":{"line":267,"column":2},"end":{"line":267,"column":3}},"loc":{"start":{"line":267,"column":63},"end":{"line":273,"column":3}},"line":267},"30":{"name":"(anonymous_30)","decl":{"start":{"line":274,"column":2},"end":{"line":274,"column":3}},"loc":{"start":{"line":274,"column":63},"end":{"line":280,"column":3}},"line":274},"31":{"name":"(anonymous_31)","decl":{"start":{"line":281,"column":2},"end":{"line":281,"column":3}},"loc":{"start":{"line":281,"column":102},"end":{"line":291,"column":3}},"line":281},"32":{"name":"(anonymous_32)","decl":{"start":{"line":292,"column":2},"end":{"line":292,"column":3}},"loc":{"start":{"line":292,"column":87},"end":{"line":301,"column":3}},"line":292},"33":{"name":"(anonymous_33)","decl":{"start":{"line":302,"column":2},"end":{"line":302,"column":3}},"loc":{"start":{"line":302,"column":79},"end":{"line":317,"column":3}},"line":302},"34":{"name":"(anonymous_34)","decl":{"start":{"line":318,"column":2},"end":{"line":318,"column":3}},"loc":{"start":{"line":318,"column":79},"end":{"line":333,"column":3}},"line":318},"35":{"name":"(anonymous_35)","decl":{"start":{"line":334,"column":2},"end":{"line":334,"column":3}},"loc":{"start":{"line":334,"column":118},"end":{"line":343,"column":3}},"line":334},"36":{"name":"(anonymous_36)","decl":{"start":{"line":344,"column":2},"end":{"line":344,"column":3}},"loc":{"start":{"line":344,"column":60},"end":{"line":379,"column":3}},"line":344},"37":{"name":"(anonymous_37)","decl":{"start":{"line":357,"column":25},"end":{"line":357,"column":26}},"loc":{"start":{"line":357,"column":42},"end":{"line":370,"column":9}},"line":357},"38":{"name":"(anonymous_38)","decl":{"start":{"line":380,"column":2},"end":{"line":380,"column":3}},"loc":{"start":{"line":380,"column":46},"end":{"line":389,"column":3}},"line":380},"39":{"name":"(anonymous_39)","decl":{"start":{"line":390,"column":2},"end":{"line":390,"column":3}},"loc":{"start":{"line":390,"column":42},"end":{"line":411,"column":3}},"line":390},"40":{"name":"(anonymous_40)","decl":{"start":{"line":412,"column":2},"end":{"line":412,"column":3}},"loc":{"start":{"line":412,"column":42},"end":{"line":423,"column":3}},"line":412}},"branchMap":{"0":{"loc":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},{"start":{},"end":{}}],"line":86},"1":{"loc":{"start":{"line":144,"column":11},"end":{"line":144,"column":86}},"type":"binary-expr","locations":[{"start":{"line":144,"column":11},"end":{"line":144,"column":38}},{"start":{"line":144,"column":42},"end":{"line":144,"column":65}},{"start":{"line":144,"column":69},"end":{"line":144,"column":86}}],"line":144},"2":{"loc":{"start":{"line":152,"column":29},"end":{"line":152,"column":45}},"type":"default-arg","locations":[{"start":{"line":152,"column":44},"end":{"line":152,"column":45}}],"line":152},"3":{"loc":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},{"start":{},"end":{}}],"line":154},"4":{"loc":{"start":{"line":157,"column":4},"end":{"line":163,"column":5}},"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":163,"column":5}},{"start":{},"end":{}}],"line":157},"5":{"loc":{"start":{"line":159,"column":6},"end":{"line":161,"column":7}},"type":"if","locations":[{"start":{"line":159,"column":6},"end":{"line":161,"column":7}},{"start":{},"end":{}}],"line":159},"6":{"loc":{"start":{"line":164,"column":4},"end":{"line":173,"column":5}},"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":173,"column":5}},{"start":{"line":170,"column":11},"end":{"line":173,"column":5}}],"line":164},"7":{"loc":{"start":{"line":166,"column":6},"end":{"line":168,"column":7}},"type":"if","locations":[{"start":{"line":166,"column":6},"end":{"line":168,"column":7}},{"start":{},"end":{}}],"line":166},"8":{"loc":{"start":{"line":170,"column":11},"end":{"line":173,"column":5}},"type":"if","locations":[{"start":{"line":170,"column":11},"end":{"line":173,"column":5}},{"start":{},"end":{}}],"line":170},"9":{"loc":{"start":{"line":189,"column":4},"end":{"line":191,"column":5}},"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":191,"column":5}},{"start":{},"end":{}}],"line":189},"10":{"loc":{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},{"start":{},"end":{}}],"line":193},"11":{"loc":{"start":{"line":196,"column":4},"end":{"line":208,"column":5}},"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":208,"column":5}},{"start":{"line":201,"column":11},"end":{"line":208,"column":5}}],"line":196},"12":{"loc":{"start":{"line":198,"column":6},"end":{"line":200,"column":7}},"type":"if","locations":[{"start":{"line":198,"column":6},"end":{"line":200,"column":7}},{"start":{},"end":{}}],"line":198},"13":{"loc":{"start":{"line":201,"column":11},"end":{"line":208,"column":5}},"type":"if","locations":[{"start":{"line":201,"column":11},"end":{"line":208,"column":5}},{"start":{"line":203,"column":11},"end":{"line":208,"column":5}}],"line":201},"14":{"loc":{"start":{"line":203,"column":11},"end":{"line":208,"column":5}},"type":"if","locations":[{"start":{"line":203,"column":11},"end":{"line":208,"column":5}},{"start":{},"end":{}}],"line":203},"15":{"loc":{"start":{"line":205,"column":6},"end":{"line":207,"column":7}},"type":"if","locations":[{"start":{"line":205,"column":6},"end":{"line":207,"column":7}},{"start":{},"end":{}}],"line":205},"16":{"loc":{"start":{"line":217,"column":4},"end":{"line":219,"column":5}},"type":"if","locations":[{"start":{"line":217,"column":4},"end":{"line":219,"column":5}},{"start":{},"end":{}}],"line":217},"17":{"loc":{"start":{"line":221,"column":4},"end":{"line":223,"column":5}},"type":"if","locations":[{"start":{"line":221,"column":4},"end":{"line":223,"column":5}},{"start":{},"end":{}}],"line":221},"18":{"loc":{"start":{"line":224,"column":4},"end":{"line":236,"column":5}},"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":236,"column":5}},{"start":{"line":229,"column":11},"end":{"line":236,"column":5}}],"line":224},"19":{"loc":{"start":{"line":226,"column":6},"end":{"line":228,"column":7}},"type":"if","locations":[{"start":{"line":226,"column":6},"end":{"line":228,"column":7}},{"start":{},"end":{}}],"line":226},"20":{"loc":{"start":{"line":229,"column":11},"end":{"line":236,"column":5}},"type":"if","locations":[{"start":{"line":229,"column":11},"end":{"line":236,"column":5}},{"start":{"line":231,"column":11},"end":{"line":236,"column":5}}],"line":229},"21":{"loc":{"start":{"line":231,"column":11},"end":{"line":236,"column":5}},"type":"if","locations":[{"start":{"line":231,"column":11},"end":{"line":236,"column":5}},{"start":{},"end":{}}],"line":231},"22":{"loc":{"start":{"line":233,"column":6},"end":{"line":235,"column":7}},"type":"if","locations":[{"start":{"line":233,"column":6},"end":{"line":235,"column":7}},{"start":{},"end":{}}],"line":233},"23":{"loc":{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},{"start":{},"end":{}}],"line":241},"24":{"loc":{"start":{"line":245,"column":4},"end":{"line":249,"column":5}},"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":249,"column":5}},{"start":{"line":247,"column":11},"end":{"line":249,"column":5}}],"line":245},"25":{"loc":{"start":{"line":246,"column":20},"end":{"line":246,"column":79}},"type":"binary-expr","locations":[{"start":{"line":246,"column":20},"end":{"line":246,"column":51}},{"start":{"line":246,"column":55},"end":{"line":246,"column":79}}],"line":246},"26":{"loc":{"start":{"line":248,"column":20},"end":{"line":248,"column":79}},"type":"binary-expr","locations":[{"start":{"line":248,"column":20},"end":{"line":248,"column":51}},{"start":{"line":248,"column":55},"end":{"line":248,"column":79}}],"line":248},"27":{"loc":{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},{"start":{},"end":{}}],"line":250},"28":{"loc":{"start":{"line":256,"column":4},"end":{"line":258,"column":5}},"type":"if","locations":[{"start":{"line":256,"column":4},"end":{"line":258,"column":5}},{"start":{},"end":{}}],"line":256},"29":{"loc":{"start":{"line":259,"column":11},"end":{"line":259,"column":63}},"type":"binary-expr","locations":[{"start":{"line":259,"column":11},"end":{"line":259,"column":22}},{"start":{"line":259,"column":26},"end":{"line":259,"column":63}}],"line":259},"30":{"loc":{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},{"start":{},"end":{}}],"line":262},"31":{"loc":{"start":{"line":265,"column":11},"end":{"line":265,"column":96}},"type":"binary-expr","locations":[{"start":{"line":265,"column":11},"end":{"line":265,"column":55}},{"start":{"line":265,"column":59},"end":{"line":265,"column":96}}],"line":265},"32":{"loc":{"start":{"line":267,"column":47},"end":{"line":267,"column":61}},"type":"default-arg","locations":[{"start":{"line":267,"column":57},"end":{"line":267,"column":61}}],"line":267},"33":{"loc":{"start":{"line":269,"column":4},"end":{"line":271,"column":5}},"type":"if","locations":[{"start":{"line":269,"column":4},"end":{"line":271,"column":5}},{"start":{},"end":{}}],"line":269},"34":{"loc":{"start":{"line":274,"column":47},"end":{"line":274,"column":61}},"type":"default-arg","locations":[{"start":{"line":274,"column":57},"end":{"line":274,"column":61}}],"line":274},"35":{"loc":{"start":{"line":276,"column":4},"end":{"line":278,"column":5}},"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":278,"column":5}},{"start":{},"end":{}}],"line":276},"36":{"loc":{"start":{"line":281,"column":47},"end":{"line":281,"column":84}},"type":"default-arg","locations":[{"start":{"line":281,"column":60},"end":{"line":281,"column":84}}],"line":281},"37":{"loc":{"start":{"line":281,"column":86},"end":{"line":281,"column":100}},"type":"default-arg","locations":[{"start":{"line":281,"column":95},"end":{"line":281,"column":100}}],"line":281},"38":{"loc":{"start":{"line":283,"column":4},"end":{"line":285,"column":5}},"type":"if","locations":[{"start":{"line":283,"column":4},"end":{"line":285,"column":5}},{"start":{},"end":{}}],"line":283},"39":{"loc":{"start":{"line":286,"column":24},"end":{"line":286,"column":98}},"type":"binary-expr","locations":[{"start":{"line":286,"column":24},"end":{"line":286,"column":70}},{"start":{"line":286,"column":74},"end":{"line":286,"column":98}}],"line":286},"40":{"loc":{"start":{"line":287,"column":4},"end":{"line":289,"column":5}},"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":289,"column":5}},{"start":{},"end":{}}],"line":287},"41":{"loc":{"start":{"line":292,"column":54},"end":{"line":292,"column":62}},"type":"default-arg","locations":[{"start":{"line":292,"column":61},"end":{"line":292,"column":62}}],"line":292},"42":{"loc":{"start":{"line":294,"column":4},"end":{"line":296,"column":5}},"type":"if","locations":[{"start":{"line":294,"column":4},"end":{"line":296,"column":5}},{"start":{},"end":{}}],"line":294},"43":{"loc":{"start":{"line":297,"column":4},"end":{"line":299,"column":5}},"type":"if","locations":[{"start":{"line":297,"column":4},"end":{"line":299,"column":5}},{"start":{},"end":{}}],"line":297},"44":{"loc":{"start":{"line":302,"column":53},"end":{"line":302,"column":67}},"type":"default-arg","locations":[{"start":{"line":302,"column":63},"end":{"line":302,"column":67}}],"line":302},"45":{"loc":{"start":{"line":302,"column":69},"end":{"line":302,"column":77}},"type":"default-arg","locations":[{"start":{"line":302,"column":76},"end":{"line":302,"column":77}}],"line":302},"46":{"loc":{"start":{"line":305,"column":4},"end":{"line":309,"column":5}},"type":"if","locations":[{"start":{"line":305,"column":4},"end":{"line":309,"column":5}},{"start":{"line":307,"column":11},"end":{"line":309,"column":5}}],"line":305},"47":{"loc":{"start":{"line":310,"column":4},"end":{"line":312,"column":5}},"type":"if","locations":[{"start":{"line":310,"column":4},"end":{"line":312,"column":5}},{"start":{},"end":{}}],"line":310},"48":{"loc":{"start":{"line":313,"column":4},"end":{"line":315,"column":5}},"type":"if","locations":[{"start":{"line":313,"column":4},"end":{"line":315,"column":5}},{"start":{},"end":{}}],"line":313},"49":{"loc":{"start":{"line":318,"column":53},"end":{"line":318,"column":67}},"type":"default-arg","locations":[{"start":{"line":318,"column":63},"end":{"line":318,"column":67}}],"line":318},"50":{"loc":{"start":{"line":318,"column":69},"end":{"line":318,"column":77}},"type":"default-arg","locations":[{"start":{"line":318,"column":76},"end":{"line":318,"column":77}}],"line":318},"51":{"loc":{"start":{"line":321,"column":4},"end":{"line":325,"column":5}},"type":"if","locations":[{"start":{"line":321,"column":4},"end":{"line":325,"column":5}},{"start":{"line":323,"column":11},"end":{"line":325,"column":5}}],"line":321},"52":{"loc":{"start":{"line":326,"column":4},"end":{"line":328,"column":5}},"type":"if","locations":[{"start":{"line":326,"column":4},"end":{"line":328,"column":5}},{"start":{},"end":{}}],"line":326},"53":{"loc":{"start":{"line":329,"column":4},"end":{"line":331,"column":5}},"type":"if","locations":[{"start":{"line":329,"column":4},"end":{"line":331,"column":5}},{"start":{},"end":{}}],"line":329},"54":{"loc":{"start":{"line":334,"column":53},"end":{"line":334,"column":90}},"type":"default-arg","locations":[{"start":{"line":334,"column":66},"end":{"line":334,"column":90}}],"line":334},"55":{"loc":{"start":{"line":334,"column":92},"end":{"line":334,"column":106}},"type":"default-arg","locations":[{"start":{"line":334,"column":101},"end":{"line":334,"column":106}}],"line":334},"56":{"loc":{"start":{"line":334,"column":108},"end":{"line":334,"column":116}},"type":"default-arg","locations":[{"start":{"line":334,"column":115},"end":{"line":334,"column":116}}],"line":334},"57":{"loc":{"start":{"line":336,"column":4},"end":{"line":338,"column":5}},"type":"if","locations":[{"start":{"line":336,"column":4},"end":{"line":338,"column":5}},{"start":{},"end":{}}],"line":336},"58":{"loc":{"start":{"line":339,"column":4},"end":{"line":341,"column":5}},"type":"if","locations":[{"start":{"line":339,"column":4},"end":{"line":341,"column":5}},{"start":{},"end":{}}],"line":339},"59":{"loc":{"start":{"line":344,"column":25},"end":{"line":344,"column":58}},"type":"default-arg","locations":[{"start":{"line":344,"column":54},"end":{"line":344,"column":58}}],"line":344},"60":{"loc":{"start":{"line":349,"column":6},"end":{"line":351,"column":7}},"type":"if","locations":[{"start":{"line":349,"column":6},"end":{"line":351,"column":7}},{"start":{},"end":{}}],"line":349},"61":{"loc":{"start":{"line":349,"column":10},"end":{"line":349,"column":71}},"type":"binary-expr","locations":[{"start":{"line":349,"column":10},"end":{"line":349,"column":28}},{"start":{"line":349,"column":32},"end":{"line":349,"column":51}},{"start":{"line":349,"column":55},"end":{"line":349,"column":71}}],"line":349},"62":{"loc":{"start":{"line":352,"column":6},"end":{"line":354,"column":7}},"type":"if","locations":[{"start":{"line":352,"column":6},"end":{"line":354,"column":7}},{"start":{},"end":{}}],"line":352},"63":{"loc":{"start":{"line":355,"column":6},"end":{"line":376,"column":7}},"type":"if","locations":[{"start":{"line":355,"column":6},"end":{"line":376,"column":7}},{"start":{"line":374,"column":13},"end":{"line":376,"column":7}}],"line":355},"64":{"loc":{"start":{"line":358,"column":10},"end":{"line":360,"column":11}},"type":"if","locations":[{"start":{"line":358,"column":10},"end":{"line":360,"column":11}},{"start":{},"end":{}}],"line":358},"65":{"loc":{"start":{"line":358,"column":14},"end":{"line":358,"column":57}},"type":"binary-expr","locations":[{"start":{"line":358,"column":14},"end":{"line":358,"column":33}},{"start":{"line":358,"column":37},"end":{"line":358,"column":57}}],"line":358},"66":{"loc":{"start":{"line":361,"column":10},"end":{"line":363,"column":11}},"type":"if","locations":[{"start":{"line":361,"column":10},"end":{"line":363,"column":11}},{"start":{},"end":{}}],"line":361},"67":{"loc":{"start":{"line":361,"column":14},"end":{"line":361,"column":95}},"type":"binary-expr","locations":[{"start":{"line":361,"column":14},"end":{"line":361,"column":40}},{"start":{"line":361,"column":45},"end":{"line":361,"column":67}},{"start":{"line":361,"column":71},"end":{"line":361,"column":94}}],"line":361},"68":{"loc":{"start":{"line":365,"column":10},"end":{"line":368,"column":11}},"type":"if","locations":[{"start":{"line":365,"column":10},"end":{"line":368,"column":11}},{"start":{},"end":{}}],"line":365},"69":{"loc":{"start":{"line":371,"column":8},"end":{"line":373,"column":9}},"type":"if","locations":[{"start":{"line":371,"column":8},"end":{"line":373,"column":9}},{"start":{},"end":{}}],"line":371},"70":{"loc":{"start":{"line":381,"column":4},"end":{"line":383,"column":5}},"type":"if","locations":[{"start":{"line":381,"column":4},"end":{"line":383,"column":5}},{"start":{},"end":{}}],"line":381},"71":{"loc":{"start":{"line":384,"column":4},"end":{"line":387,"column":5}},"type":"if","locations":[{"start":{"line":384,"column":4},"end":{"line":387,"column":5}},{"start":{},"end":{}}],"line":384},"72":{"loc":{"start":{"line":386,"column":45},"end":{"line":386,"column":76}},"type":"cond-expr","locations":[{"start":{"line":386,"column":67},"end":{"line":386,"column":68}},{"start":{"line":386,"column":71},"end":{"line":386,"column":76}}],"line":386},"73":{"loc":{"start":{"line":392,"column":20},"end":{"line":392,"column":54}},"type":"binary-expr","locations":[{"start":{"line":392,"column":20},"end":{"line":392,"column":48}},{"start":{"line":392,"column":52},"end":{"line":392,"column":54}}],"line":392},"74":{"loc":{"start":{"line":401,"column":4},"end":{"line":409,"column":5}},"type":"if","locations":[{"start":{"line":401,"column":4},"end":{"line":409,"column":5}},{"start":{"line":403,"column":11},"end":{"line":409,"column":5}}],"line":401},"75":{"loc":{"start":{"line":403,"column":11},"end":{"line":409,"column":5}},"type":"if","locations":[{"start":{"line":403,"column":11},"end":{"line":409,"column":5}},{"start":{"line":405,"column":11},"end":{"line":409,"column":5}}],"line":403},"76":{"loc":{"start":{"line":405,"column":11},"end":{"line":409,"column":5}},"type":"if","locations":[{"start":{"line":405,"column":11},"end":{"line":409,"column":5}},{"start":{"line":407,"column":11},"end":{"line":409,"column":5}}],"line":405},"77":{"loc":{"start":{"line":413,"column":4},"end":{"line":415,"column":5}},"type":"if","locations":[{"start":{"line":413,"column":4},"end":{"line":415,"column":5}},{"start":{},"end":{}}],"line":413},"78":{"loc":{"start":{"line":413,"column":8},"end":{"line":413,"column":53}},"type":"binary-expr","locations":[{"start":{"line":413,"column":8},"end":{"line":413,"column":27}},{"start":{"line":413,"column":31},"end":{"line":413,"column":53}}],"line":413}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"0":[0,0],"1":[0,0,0],"2":[0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0],"33":[0,0],"34":[0],"35":[0,0],"36":[0],"37":[0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0],"42":[0,0],"43":[0,0],"44":[0],"45":[0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0],"50":[0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0],"55":[0],"56":[0],"57":[0,0],"58":[0,0],"59":[0],"60":[0,0],"61":[0,0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/base-function.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, LocaleType, Nullable } from '@univerjs/core';\nimport type { IFunctionNames } from '../basics/function';\nimport type { BaseReferenceObject, FunctionVariantType, NodeValueType } from '../engine/reference-object/base-reference-object';\nimport type { ArrayBinarySearchType } from '../engine/utils/compare';\nimport type { ArrayValueObject } from '../engine/value-object/array-value-object';\nimport type { FormulaFunctionResultValueType, FormulaFunctionValueType } from '../engine/value-object/primitive-object';\nimport type { FormulaDataModel } from '../models/formula-data.model';\nimport type { IDefinedNameMapItem } from '../services/defined-names.service';\nimport { ErrorType } from '../basics/error-type';\nimport { regexTestSingeRange, regexTestSingleColumn, regexTestSingleRow } from '../basics/regex';\nimport { compareToken } from '../basics/token';\nimport { CellReferenceObject } from '../engine/reference-object/cell-reference-object';\nimport { ColumnReferenceObject } from '../engine/reference-object/column-reference-object';\nimport { RangeReferenceObject } from '../engine/reference-object/range-reference-object';\nimport { RowReferenceObject } from '../engine/reference-object/row-reference-object';\nimport { createNewArray } from '../engine/utils/array-object';\nimport { ArrayOrderSearchType } from '../engine/utils/compare';\nimport { serializeRangeToRefString } from '../engine/utils/reference';\nimport { convertTonNumber } from '../engine/utils/value-object';\nimport { type BaseValueObject, ErrorValueObject } from '../engine/value-object/base-value-object';\nimport { NullValueObject, NumberValueObject } from '../engine/value-object/primitive-object';\n\nexport class BaseFunction {\n    private _unitId: Nullable<string>;\n    private _subUnitId: Nullable<string>;\n    private _row: number = -1;\n    private _column: number = -1;\n    private _definedNames: Nullable<IDefinedNameMapItem>;\n    private _locale: LocaleType;\n    private _sheetOrder: string[];\n    private _sheetNameMap: { [sheetId: string]: string };\n    protected _formulaDataModel: Nullable<FormulaDataModel>;\n    protected _rowCount: number = -1;\n    protected _columnCount: number = -1;\n\n    /**\n     * Whether the function needs to expand the parameters\n     */\n    needsExpandParams: boolean = false;\n\n    /**\n     * Whether the function needs to pass in reference object\n     */\n    needsReferenceObject: boolean = false;\n\n    /**\n     * Whether the function needs handle locale\n     */\n    needsLocale: boolean = false;\n\n    /**\n     * Whether the function needs sheets info\n     */\n    needsSheetsInfo: boolean = false;\n\n    /**\n     * Whether the function needs function methods in FormulaDataModel\n     */\n    needsFormulaDataModel: boolean = false;\n\n    /**\n     * Whether the function needs the number of rows and columns in the sheet\n     */\n    needsSheetRowColumnCount: boolean = false;\n\n    /**\n     * Minimum number of parameters\n     */\n    minParams: number = -1;\n\n    /**\n     * Maximum number of parameters\n     */\n    maxParams: number = -1;\n\n    constructor(private _name: IFunctionNames) {\n\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get unitId() {\n        return this._unitId;\n    }\n\n    get subUnitId() {\n        return this._subUnitId;\n    }\n\n    get row() {\n        return this._row;\n    }\n\n    get column() {\n        return this._column;\n    }\n\n    dispose() {\n\n    }\n\n    /**\n     * In Excel, to inject a defined name into a function that has positioning capabilities,\n     * such as using the INDIRECT function to reference a named range,\n     * you can write it as follows:\n     * =INDIRECT(\"DefinedName1\")\n     */\n    getDefinedName(name: string) {\n        const nameMap = this._definedNames;\n        if (nameMap == null) {\n            return null;\n        }\n        return Array.from(Object.values(nameMap)).filter((value) => {\n            return value.name === name;\n        })?.[0];\n    }\n\n    setDefinedNames(definedNames: IDefinedNameMapItem) {\n        this._definedNames = definedNames;\n    }\n\n    getLocale() {\n        return this._locale;\n    }\n\n    setLocale(locale: LocaleType) {\n        this._locale = locale;\n    }\n\n    getSheetsInfo() {\n        return {\n            sheetOrder: this._sheetOrder,\n            sheetNameMap: this._sheetNameMap,\n        };\n    }\n\n    setSheetsInfo({\n        sheetOrder,\n        sheetNameMap,\n    }: {\n        sheetOrder: string[];\n        sheetNameMap: { [sheetId: string]: string };\n    }) {\n        this._sheetOrder = sheetOrder;\n        this._sheetNameMap = sheetNameMap;\n    }\n\n    setFormulaDataModel(_formulaDataModel: FormulaDataModel) {\n        this._formulaDataModel = _formulaDataModel;\n    }\n\n    setSheetRowColumnCount(rowCount: number, columnCount: number) {\n        this._rowCount = rowCount;\n        this._columnCount = columnCount;\n    }\n\n    isAsync() {\n        return false;\n    }\n\n    isAddress() {\n        return false;\n    }\n\n    isCustom() {\n        return false;\n    }\n\n    setRefInfo(unitId: string, subUnitId: string, row: number, column: number) {\n        this._unitId = unitId;\n        this._subUnitId = subUnitId;\n        this._row = row;\n        this._column = column;\n    }\n\n    calculateCustom(\n        ...arg: Array<FormulaFunctionValueType>\n    ): FormulaFunctionResultValueType | Promise<FormulaFunctionResultValueType> {\n        return null;\n    }\n\n    calculate(...arg: BaseValueObject[]): NodeValueType {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    checkArrayType(variant: FunctionVariantType) {\n        return variant.isReferenceObject() || (variant.isValueObject() && (variant as BaseValueObject).isArray());\n    }\n\n    /**\n     * Starting with 1\n     * For instance, The column number (starting with 1 for the left-most column of table_array) that contains the return value.\n     * https://support.microsoft.com/en-us/office/vlookup-function-0bbc8083-26fe-4963-8ab8-93a18ad188a1\n     * @param indexNum\n     */\n    getIndexNumValue(indexNum: BaseValueObject, defaultValue = 1) {\n        let _indexNum = indexNum;\n\n        if (_indexNum.isArray()) {\n            _indexNum = (_indexNum as ArrayValueObject).getFirstCell();\n        }\n\n        if (_indexNum.isBoolean()) {\n            const colIndexNumV = _indexNum.getValue() as boolean;\n            if (colIndexNumV === false) {\n                return ErrorValueObject.create(ErrorType.VALUE);\n            }\n\n            return defaultValue;\n        }\n        if (_indexNum.isString()) {\n            const colIndexNumV = Number(_indexNum.getValue() as string);\n            if (Number.isNaN(colIndexNumV)) {\n                return ErrorValueObject.create(ErrorType.REF);\n            }\n            return colIndexNumV;\n        } else if (_indexNum.isNumber()) {\n            const colIndexNumV = _indexNum.getValue() as number;\n            return colIndexNumV;\n        }\n\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    /**\n     * A logical value that specifies 1/TRUE , 0/FALSE, default 1\n     * For instance range_lookup, A logical value that specifies whether you want VLOOKUP to find an approximate or an exact match\n     * Approximate match - 1/TRUE\n     * Exact match - 0/FALSE\n     * https://support.microsoft.com/en-us/office/vlookup-function-0bbc8083-26fe-4963-8ab8-93a18ad188a1\n     * For instance A1, A logical value that specifies what type of reference is contained in the cell ref_text.\n     * If a1 is TRUE or omitted, ref_text is interpreted as an A1-style reference.\n     * If a1 is FALSE, ref_text is interpreted as an R1C1-style reference.\n     * https://support.microsoft.com/zh-cn/office/indirect-%E5%87%BD%E6%95%B0-474b3a3a-8a26-4f44-b491-92b6306fa261\n     * @param logicValueObject\n     */\n    getZeroOrOneByOneDefault(logicValueObject?: BaseValueObject) {\n        if (logicValueObject == null) {\n            return 1;\n        }\n\n        let logicValue = 1;\n\n        if (logicValueObject.isArray()) {\n            logicValueObject = (logicValueObject as ArrayValueObject).getFirstCell();\n        }\n\n        if (logicValueObject.isBoolean()) {\n            const logicV = logicValueObject.getValue() as boolean;\n            if (logicV === false) {\n                logicValue = 0;\n            }\n        } else if (logicValueObject.isString()) {\n            return;\n        } else if (logicValueObject.isNumber()) {\n            const logicV = logicValueObject.getValue() as number;\n            if (logicV === 0) {\n                logicValue = 0;\n            }\n        }\n\n        return logicValue;\n    }\n\n    /**\n     * A logical value that specifies 1/TRUE , 0/FALSE, -1, default 1.\n     * The difference from getZeroOrOneByOneDefault is that we need to get -1\n     * @param logicValueObject\n     */\n    getMatchTypeValue(logicValueObject?: BaseValueObject) {\n        if (logicValueObject == null) {\n            return 1;\n        }\n\n        let logicValue = 1;\n\n        if (logicValueObject.isArray()) {\n            logicValueObject = (logicValueObject as ArrayValueObject).getFirstCell();\n        }\n\n        if (logicValueObject.isBoolean()) {\n            const logicV = logicValueObject.getValue() as boolean;\n            if (logicV === false) {\n                logicValue = 0;\n            }\n        } else if (logicValueObject.isString()) {\n            return;\n        } else if (logicValueObject.isNumber()) {\n            const logicV = logicValueObject.getValue() as number;\n            if (logicV <= 0) {\n                logicValue = logicV;\n            }\n        }\n\n        return logicValue;\n    }\n\n    binarySearch(\n        value: BaseValueObject,\n        searchArray: ArrayValueObject,\n        resultArray: ArrayValueObject,\n        searchType?: ArrayBinarySearchType,\n        matchType?: ArrayOrderSearchType\n    ) {\n        const rowOrColumn = searchArray.binarySearch(value, searchType, matchType);\n\n        if (rowOrColumn == null) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        let resultValue: BaseValueObject;\n\n        if (resultArray.getRowCount() === 1) {\n            resultValue = resultArray.get(0, rowOrColumn) || NullValueObject.create();\n        } else {\n            resultValue = resultArray.get(rowOrColumn, 0) || NullValueObject.create();\n        }\n\n        if (resultValue.isNull()) {\n            // return ErrorValueObject.create(ErrorType.NA);\n            return NumberValueObject.create(0);\n        }\n\n        return resultValue;\n    }\n\n    private _getOneFirstByRaw(array: Nullable<BaseValueObject>[][]) {\n        if (array.length === 0) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        return array[0][0] || ErrorValueObject.create(ErrorType.NA);\n    }\n\n    private _getOneLastByRaw(array: Nullable<BaseValueObject>[][]) {\n        if (array.length === 0) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        return array[array.length - 1][array[0].length - 1] || ErrorValueObject.create(ErrorType.NA);\n    }\n\n    equalSearch(value: BaseValueObject, searchArray: ArrayValueObject, resultArray: ArrayValueObject, isFirst = true) {\n        const resultArrayValue = resultArray.pickRaw(searchArray.isEqual(value) as ArrayValueObject);\n\n        if (isFirst) {\n            return this._getOneFirstByRaw(resultArrayValue);\n        }\n\n        return this._getOneLastByRaw(resultArrayValue);\n    }\n\n    fuzzySearch(value: BaseValueObject, searchArray: ArrayValueObject, resultArray: ArrayValueObject, isFirst = true) {\n        const resultArrayValue = resultArray.pickRaw(searchArray.compare(value, compareToken.EQUALS) as ArrayValueObject);\n\n        if (isFirst) {\n            return this._getOneFirstByRaw(resultArrayValue);\n        }\n\n        return this._getOneLastByRaw(resultArrayValue);\n    }\n\n    orderSearch(\n        value: BaseValueObject,\n        searchArray: ArrayValueObject,\n        resultArray: ArrayValueObject,\n        searchType: ArrayOrderSearchType = ArrayOrderSearchType.MIN,\n        isDesc = false\n    ) {\n        const position = searchArray.orderSearch(value, searchType, isDesc);\n\n        if (position == null) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        const resultValue = resultArray.get(position.row, position.column) || NullValueObject.create();\n\n        if (resultValue.isNull()) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        return resultValue;\n    }\n\n    binarySearchExpand(\n        value: BaseValueObject,\n        searchArray: ArrayValueObject,\n        resultArray: ArrayValueObject,\n        axis = 0,\n        searchType?: ArrayBinarySearchType,\n        matchType?: ArrayOrderSearchType\n    ) {\n        const rowOrColumn = searchArray.binarySearch(value, searchType, matchType);\n\n        if (rowOrColumn == null) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        if (axis === 0) {\n            return resultArray.slice([rowOrColumn, rowOrColumn + 1]);\n        }\n        return resultArray.slice(undefined, [rowOrColumn, rowOrColumn + 1]);\n    }\n\n    equalSearchExpand(\n        value: BaseValueObject,\n        searchArray: ArrayValueObject,\n        resultArray: ArrayValueObject,\n        isFirst = true,\n        axis = 0\n    ) {\n        const matchObject = searchArray.isEqual(value) as ArrayValueObject;\n\n        let position: Nullable<{ row: number; column: number }>;\n\n        if (isFirst) {\n            position = matchObject.getFirstTruePosition();\n        } else {\n            position = matchObject.getLastTruePosition();\n        }\n\n        if (position == null) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        if (axis === 0) {\n            return resultArray.slice([position.row, position.row + 1]);\n        }\n        return resultArray.slice(undefined, [position.column, position.column + 1]);\n    }\n\n    fuzzySearchExpand(\n        value: BaseValueObject,\n        searchArray: ArrayValueObject,\n        resultArray: ArrayValueObject,\n        isFirst = true,\n        axis = 0\n    ) {\n        const matchObject = searchArray.compare(value, compareToken.EQUALS) as ArrayValueObject;\n\n        let position: Nullable<{ row: number; column: number }>;\n\n        if (isFirst) {\n            position = matchObject.getFirstTruePosition();\n        } else {\n            position = matchObject.getLastTruePosition();\n        }\n\n        if (position == null) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        if (axis === 0) {\n            return resultArray.slice([position.row, position.row + 1]);\n        }\n        return resultArray.slice(undefined, [position.column, position.column + 1]);\n    }\n\n    orderSearchExpand(\n        value: BaseValueObject,\n        searchArray: ArrayValueObject,\n        resultArray: ArrayValueObject,\n        searchType: ArrayOrderSearchType = ArrayOrderSearchType.MIN,\n        isDesc = false,\n        axis = 0\n    ) {\n        const position = searchArray.orderSearch(value, searchType, isDesc);\n\n        if (position == null) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        if (axis === 0) {\n            return resultArray.slice([position.row, position.row + 1]);\n        }\n        return resultArray.slice(undefined, [position.column, position.column + 1]);\n    }\n\n    flattenArray(variants: BaseValueObject[], ignoreLogicalValuesAndText: boolean = true): ArrayValueObject | BaseValueObject {\n        const flattenValues: BaseValueObject[][] = [];\n        flattenValues[0] = [];\n\n        for (let i = 0; i < variants.length; i++) {\n            let variant = variants[i];\n\n            if (variant.isString() || variant.isBoolean() || variant.isNull()) {\n                variant = variant.convertToNumberObjectValue();\n            }\n\n            if (variant.isError()) {\n                return variant;\n            }\n\n            if (variant.isArray()) {\n                let errorValue: Nullable<BaseValueObject>;\n\n                (variant as ArrayValueObject).iterator((valueObject) => {\n                    if (valueObject == null || valueObject.isNull()) {\n                        return true;\n                    }\n\n                    if (ignoreLogicalValuesAndText && (valueObject.isString() || valueObject.isBoolean())) {\n                        return true;\n                    }\n\n                    valueObject = this._includingLogicalValuesAndText(valueObject);\n\n                    if (valueObject.isError()) {\n                        errorValue = valueObject;\n                        return false;\n                    }\n\n                    flattenValues[0].push(valueObject);\n                });\n\n                if (errorValue?.isError()) {\n                    return errorValue;\n                }\n            } else {\n                flattenValues[0].push(variant);\n            }\n        }\n\n        return createNewArray(flattenValues, 1, flattenValues[0].length);\n    }\n\n    private _includingLogicalValuesAndText(valueObject: BaseValueObject) {\n        // Including logical values\n        if (valueObject.isBoolean()) {\n            valueObject = convertTonNumber(valueObject);\n        }\n\n        // Including number string\n        if (valueObject.isString()) {\n            const value = Number(valueObject.getValue());\n\n            // Non-text numbers also need to be counted to the sample size\n            valueObject = NumberValueObject.create(Number.isNaN(value) ? 0 : value);\n        }\n\n        return valueObject;\n    }\n\n    createReferenceObject(reference: BaseReferenceObject, range: IRange) {\n        const unitId = reference.getForcedUnitId();\n        const sheetId = reference.getForcedSheetId() || '';\n        const sheetName = reference.getForcedSheetName();\n\n        const gridRangeName = {\n            unitId,\n            sheetName,\n            range,\n        };\n\n        const token = serializeRangeToRefString(gridRangeName);\n\n        let referenceObject: BaseReferenceObject;\n\n        if (regexTestSingeRange(token)) {\n            referenceObject = new CellReferenceObject(token);\n        } else if (regexTestSingleRow(token)) {\n            referenceObject = new RowReferenceObject(token);\n        } else if (regexTestSingleColumn(token)) {\n            referenceObject = new ColumnReferenceObject(token);\n        } else {\n            referenceObject = new RangeReferenceObject(range, sheetId, unitId);\n        }\n\n        return this._setReferenceDefault(reference, referenceObject);\n    }\n\n    private _setReferenceDefault(reference: BaseReferenceObject, object: BaseReferenceObject) {\n        if (this.unitId == null || this.subUnitId == null) {\n            return ErrorValueObject.create(ErrorType.REF);\n        }\n\n        object.setDefaultUnitId(this.unitId);\n        object.setDefaultSheetId(this.subUnitId);\n        object.setUnitData(reference.getUnitData());\n        object.setRuntimeData(reference.getRuntimeData());\n        object.setArrayFormulaCellData(reference.getArrayFormulaCellData());\n        object.setRuntimeArrayFormulaCellData(reference.getRuntimeArrayFormulaCellData());\n\n        return object;\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"88df0951b621bfbadb64c9465898cf8dcecfa7a3"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/statistical/trend/index.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/statistical/trend/index.ts","statementMap":{"0":{"start":{"line":9,"column":14},"end":{"line":9,"column":15}},"1":{"start":{"line":10,"column":14},"end":{"line":10,"column":15}},"2":{"start":{"line":12,"column":37},"end":{"line":12,"column":88}},"3":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"4":{"start":{"line":14,"column":6},"end":{"line":14,"column":25}},"5":{"start":{"line":16,"column":26},"end":{"line":16,"column":55}},"6":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"7":{"start":{"line":18,"column":6},"end":{"line":18,"column":27}},"8":{"start":{"line":20,"column":26},"end":{"line":20,"column":72}},"9":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"10":{"start":{"line":22,"column":6},"end":{"line":22,"column":27}},"11":{"start":{"line":24,"column":24},"end":{"line":24,"column":66}},"12":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"13":{"start":{"line":26,"column":6},"end":{"line":26,"column":25}},"14":{"start":{"line":28,"column":18},"end":{"line":28,"column":59}},"15":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"16":{"start":{"line":30,"column":6},"end":{"line":30,"column":34}},"17":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"18":{"start":{"line":33,"column":6},"end":{"line":33,"column":53}},"19":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"20":{"start":{"line":36,"column":6},"end":{"line":36,"column":21}},"21":{"start":{"line":38,"column":24},"end":{"line":38,"column":43}},"22":{"start":{"line":39,"column":4},"end":{"line":39,"column":83}},"23":{"start":{"line":42,"column":4},"end":{"line":56,"column":5}},"24":{"start":{"line":43,"column":6},"end":{"line":48,"column":7}},"25":{"start":{"line":44,"column":22},"end":{"line":44,"column":78}},"26":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"27":{"start":{"line":46,"column":10},"end":{"line":46,"column":55}},"28":{"start":{"line":49,"column":6},"end":{"line":54,"column":7}},"29":{"start":{"line":50,"column":22},"end":{"line":50,"column":84}},"30":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"31":{"start":{"line":52,"column":10},"end":{"line":52,"column":55}},"32":{"start":{"line":55,"column":6},"end":{"line":55,"column":99}},"33":{"start":{"line":57,"column":4},"end":{"line":57,"column":95}},"34":{"start":{"line":60,"column":21},"end":{"line":60,"column":78}},"35":{"start":{"line":61,"column":26},"end":{"line":61,"column":110}},"36":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"37":{"start":{"line":63,"column":6},"end":{"line":63,"column":27}},"38":{"start":{"line":65,"column":35},"end":{"line":65,"column":48}},"39":{"start":{"line":66,"column":15},"end":{"line":66,"column":37}},"40":{"start":{"line":67,"column":14},"end":{"line":67,"column":37}},"41":{"start":{"line":68,"column":17},"end":{"line":68,"column":19}},"42":{"start":{"line":69,"column":4},"end":{"line":76,"column":5}},"43":{"start":{"line":69,"column":17},"end":{"line":69,"column":18}},"44":{"start":{"line":70,"column":6},"end":{"line":70,"column":21}},"45":{"start":{"line":71,"column":18},"end":{"line":71,"column":19}},"46":{"start":{"line":72,"column":6},"end":{"line":74,"column":7}},"47":{"start":{"line":72,"column":19},"end":{"line":72,"column":25}},"48":{"start":{"line":73,"column":8},"end":{"line":73,"column":58}},"49":{"start":{"line":75,"column":6},"end":{"line":75,"column":28}},"50":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"51":{"start":{"line":78,"column":6},"end":{"line":78,"column":39}},"52":{"start":{"line":80,"column":4},"end":{"line":80,"column":50}},"53":{"start":{"line":83,"column":30},"end":{"line":83,"column":50}},"54":{"start":{"line":84,"column":30},"end":{"line":84,"column":50}},"55":{"start":{"line":85,"column":39},"end":{"line":85,"column":112}},"56":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"57":{"start":{"line":87,"column":6},"end":{"line":87,"column":51}},"58":{"start":{"line":89,"column":19},"end":{"line":91,"column":6}},"59":{"start":{"line":90,"column":6},"end":{"line":90,"column":47}},"60":{"start":{"line":90,"column":32},"end":{"line":90,"column":45}},"61":{"start":{"line":92,"column":4},"end":{"line":92,"column":50}},"62":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"63":{"start":{"line":96,"column":6},"end":{"line":96,"column":90}},"64":{"start":{"line":98,"column":4},"end":{"line":98,"column":41}},"65":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"66":{"start":{"line":102,"column":6},"end":{"line":102,"column":27}},"67":{"start":{"line":104,"column":4},"end":{"line":104,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":2},"end":{"line":11,"column":3}},"loc":{"start":{"line":11,"column":45},"end":{"line":40,"column":3}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":41,"column":2},"end":{"line":41,"column":3}},"loc":{"start":{"line":41,"column":64},"end":{"line":58,"column":3}},"line":41},"2":{"name":"(anonymous_2)","decl":{"start":{"line":59,"column":2},"end":{"line":59,"column":3}},"loc":{"start":{"line":59,"column":83},"end":{"line":81,"column":3}},"line":59},"3":{"name":"(anonymous_3)","decl":{"start":{"line":82,"column":2},"end":{"line":82,"column":3}},"loc":{"start":{"line":82,"column":81},"end":{"line":93,"column":3}},"line":82},"4":{"name":"(anonymous_4)","decl":{"start":{"line":89,"column":35},"end":{"line":89,"column":36}},"loc":{"start":{"line":89,"column":44},"end":{"line":91,"column":5}},"line":89},"5":{"name":"(anonymous_5)","decl":{"start":{"line":90,"column":21},"end":{"line":90,"column":22}},"loc":{"start":{"line":90,"column":32},"end":{"line":90,"column":45}},"line":90},"6":{"name":"(anonymous_6)","decl":{"start":{"line":94,"column":2},"end":{"line":94,"column":3}},"loc":{"start":{"line":94,"column":44},"end":{"line":99,"column":3}},"line":94},"7":{"name":"(anonymous_7)","decl":{"start":{"line":100,"column":2},"end":{"line":100,"column":3}},"loc":{"start":{"line":100,"column":40},"end":{"line":105,"column":3}},"line":100}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},{"start":{},"end":{}}],"line":13},"1":{"loc":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},{"start":{},"end":{}}],"line":17},"2":{"loc":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},{"start":{},"end":{}}],"line":21},"3":{"loc":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},{"start":{},"end":{}}],"line":25},"4":{"loc":{"start":{"line":28,"column":18},"end":{"line":28,"column":59}},"type":"binary-expr","locations":[{"start":{"line":28,"column":18},"end":{"line":28,"column":24}},{"start":{"line":28,"column":28},"end":{"line":28,"column":59}}],"line":28},"5":{"loc":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},{"start":{},"end":{}}],"line":29},"6":{"loc":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},{"start":{},"end":{}}],"line":32},"7":{"loc":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},{"start":{},"end":{}}],"line":35},"8":{"loc":{"start":{"line":42,"column":4},"end":{"line":56,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":56,"column":5}},{"start":{},"end":{}}],"line":42},"9":{"loc":{"start":{"line":42,"column":8},"end":{"line":42,"column":126}},"type":"binary-expr","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":34}},{"start":{"line":42,"column":38},"end":{"line":42,"column":62}},{"start":{"line":42,"column":66},"end":{"line":42,"column":95}},{"start":{"line":42,"column":99},"end":{"line":42,"column":126}}],"line":42},"10":{"loc":{"start":{"line":43,"column":6},"end":{"line":48,"column":7}},"type":"if","locations":[{"start":{"line":43,"column":6},"end":{"line":48,"column":7}},{"start":{},"end":{}}],"line":43},"11":{"loc":{"start":{"line":43,"column":10},"end":{"line":43,"column":64}},"type":"binary-expr","locations":[{"start":{"line":43,"column":10},"end":{"line":43,"column":36}},{"start":{"line":43,"column":40},"end":{"line":43,"column":64}}],"line":43},"12":{"loc":{"start":{"line":44,"column":22},"end":{"line":44,"column":78}},"type":"cond-expr","locations":[{"start":{"line":44,"column":31},"end":{"line":44,"column":55}},{"start":{"line":44,"column":58},"end":{"line":44,"column":78}}],"line":44},"13":{"loc":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},{"start":{},"end":{}}],"line":45},"14":{"loc":{"start":{"line":49,"column":6},"end":{"line":54,"column":7}},"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":54,"column":7}},{"start":{},"end":{}}],"line":49},"15":{"loc":{"start":{"line":49,"column":10},"end":{"line":49,"column":70}},"type":"binary-expr","locations":[{"start":{"line":49,"column":10},"end":{"line":49,"column":39}},{"start":{"line":49,"column":43},"end":{"line":49,"column":70}}],"line":49},"16":{"loc":{"start":{"line":50,"column":22},"end":{"line":50,"column":84}},"type":"cond-expr","locations":[{"start":{"line":50,"column":31},"end":{"line":50,"column":58}},{"start":{"line":50,"column":61},"end":{"line":50,"column":84}}],"line":50},"17":{"loc":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},{"start":{},"end":{}}],"line":51},"18":{"loc":{"start":{"line":60,"column":21},"end":{"line":60,"column":78}},"type":"binary-expr","locations":[{"start":{"line":60,"column":21},"end":{"line":60,"column":47}},{"start":{"line":60,"column":51},"end":{"line":60,"column":78}}],"line":60},"19":{"loc":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},{"start":{},"end":{}}],"line":62},"20":{"loc":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},{"start":{},"end":{}}],"line":77},"21":{"loc":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},{"start":{},"end":{}}],"line":86},"22":{"loc":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},{"start":{},"end":{}}],"line":95},"23":{"loc":{"start":{"line":95,"column":8},"end":{"line":95,"column":36}},"type":"binary-expr","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":16}},{"start":{"line":95,"column":20},"end":{"line":95,"column":36}}],"line":95},"24":{"loc":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},{"start":{},"end":{}}],"line":101},"25":{"loc":{"start":{"line":101,"column":8},"end":{"line":101,"column":32}},"type":"binary-expr","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":14}},{"start":{"line":101,"column":18},"end":{"line":101,"column":32}}],"line":101}},"s":{"0":1,"1":1,"2":23,"3":23,"4":3,"5":20,"6":20,"7":4,"8":16,"9":16,"10":1,"11":15,"12":15,"13":1,"14":14,"15":14,"16":1,"17":14,"18":1,"19":14,"20":1,"21":13,"22":13,"23":13,"24":5,"25":2,"26":2,"27":1,"28":4,"29":3,"30":3,"31":1,"32":3,"33":8,"34":3,"35":3,"36":3,"37":0,"38":3,"39":3,"40":3,"41":3,"42":3,"43":3,"44":29,"45":29,"46":29,"47":29,"48":58,"49":29,"50":3,"51":1,"52":3,"53":8,"54":8,"55":8,"56":8,"57":1,"58":7,"59":32,"60":40,"61":7,"62":16,"63":5,"64":11,"65":15,"66":6,"67":9},"f":{"0":23,"1":13,"2":3,"3":8,"4":32,"5":40,"6":16,"7":15},"b":{"0":[3,20],"1":[4,16],"2":[1,15],"3":[1,14],"4":[14,4],"5":[1,13],"6":[1,13],"7":[1,13],"8":[5,8],"9":[13,5,11,7],"10":[2,3],"11":[5,2],"12":[2,0],"13":[1,1],"14":[3,1],"15":[4,3],"16":[2,1],"17":[1,2],"18":[3,1],"19":[0,3],"20":[1,2],"21":[1,7],"22":[5,11],"23":[16,11],"24":[6,9],"25":[15,9]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/statistical/trend/index.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BaseValueObject } from '../../../engine/value-object/base-value-object';\nimport { ErrorType } from '../../../basics/error-type';\nimport { matrixTranspose } from '../../../basics/math';\nimport { checkKnownsArrayDimensions, getKnownsArrayCoefficients, getKnownsArrayValues, getSerialNumbersByRowsColumns, getSlopeAndIntercept } from '../../../basics/statistical';\nimport { ArrayValueObject } from '../../../engine/value-object/array-value-object';\nimport { ErrorValueObject } from '../../../engine/value-object/base-value-object';\nimport { BooleanValueObject } from '../../../engine/value-object/primitive-object';\nimport { BaseFunction } from '../../base-function';\n\nexport class Trend extends BaseFunction {\n    override minParams = 1;\n\n    override maxParams = 4;\n\n    override calculate(knownYs: BaseValueObject, knownXs?: BaseValueObject, newXs?: BaseValueObject, constb?: BaseValueObject): BaseValueObject {\n        const { isError, errorObject } = checkKnownsArrayDimensions(knownYs, knownXs, newXs);\n\n        if (isError) {\n            return errorObject as ErrorValueObject;\n        }\n\n        const knownYsValues = getKnownsArrayValues(knownYs);\n\n        if (knownYsValues instanceof ErrorValueObject) {\n            return knownYsValues;\n        }\n\n        const knownXsValues = this._getKnownXsValues(knownYsValues, knownXs);\n\n        if (knownXsValues instanceof ErrorValueObject) {\n            return knownXsValues;\n        }\n\n        const newXsValues = this._getNewXsValues(knownXsValues, newXs);\n\n        if (newXsValues instanceof ErrorValueObject) {\n            return newXsValues;\n        }\n\n        let _constb = constb ?? BooleanValueObject.create(true);\n\n        if (_constb.isArray()) {\n            _constb = (_constb as ArrayValueObject).get(0, 0) as BaseValueObject;\n        }\n\n        if (_constb.isString()) {\n            _constb = _constb.convertToNumberObjectValue();\n        }\n\n        if (_constb.isError()) {\n            return _constb;\n        }\n\n        const constbValue = +_constb.getValue();\n\n        return this._getResult(knownYsValues, knownXsValues, newXsValues, constbValue);\n    }\n\n    private _getResult(knownYsValues: number[][], knownXsValues: number[][], newXsValues: number[][], constb: number): BaseValueObject {\n        if ((knownYsValues.length === 1 && knownXsValues.length > 1) || (knownYsValues[0].length === 1 && knownXsValues[0].length > 1)) {\n            if (knownYsValues.length === 1 && knownXsValues.length > 1) {\n                const count = constb ? knownXsValues.length + 1 : knownXsValues.length;\n\n                if (count > knownYsValues[0].length) {\n                    return ErrorValueObject.create(ErrorType.NA);\n                }\n            }\n\n            if (knownYsValues[0].length === 1 && knownXsValues[0].length > 1) {\n                const count = constb ? knownXsValues[0].length + 1 : knownXsValues[0].length;\n\n                if (count > knownYsValues.length) {\n                    return ErrorValueObject.create(ErrorType.NA);\n                }\n            }\n\n            return this._getResultByMultipleVariables(knownYsValues, knownXsValues, newXsValues, constb);\n        }\n\n        return this._getResultBySimpleVariables(knownYsValues, knownXsValues, newXsValues, constb);\n    }\n\n    private _getResultByMultipleVariables(knownYsValues: number[][], knownXsValues: number[][], newXsValues: number[][], constb: number): BaseValueObject {\n        const isOneRow = knownYsValues.length === 1 && knownYsValues[0].length > 1;\n\n        const _coefficients = getKnownsArrayCoefficients(knownYsValues, knownXsValues, newXsValues, constb, false);\n\n        if (_coefficients instanceof ErrorValueObject) {\n            return _coefficients;\n        }\n\n        const { coefficients, newX } = _coefficients;\n\n        const cl = coefficients[0].length;\n        const b = coefficients[0][cl - 1];\n\n        let result: number[][] = [];\n\n        for (let i = 0; i < newX.length; i++) {\n            result[i] = [];\n\n            let value = b;\n\n            for (let j = cl - 2; j >= 0; j--) {\n                value += coefficients[0][cl - 2 - j] * newX[i][j];\n            }\n\n            result[i].push(value);\n        }\n\n        if (isOneRow) {\n            result = matrixTranspose(result);\n        }\n\n        return ArrayValueObject.createByArray(result);\n    }\n\n    private _getResultBySimpleVariables(knownYsValues: number[][], knownXsValues: number[][], newXsValues: number[][], constb: number): BaseValueObject {\n        const knownYsValuesFlat = knownYsValues.flat();\n        const knownXsValuesFlat = knownXsValues.flat();\n\n        const { slope: m, intercept: b } = getSlopeAndIntercept(knownXsValuesFlat, knownYsValuesFlat, constb, false);\n\n        if (Number.isNaN(m)) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        const result = newXsValues.map((row) => {\n            return row.map((value) => m * value + b);\n        });\n\n        return ArrayValueObject.createByArray(result);\n    }\n\n    private _getKnownXsValues(knownYsValues: number[][], knownXs?: BaseValueObject): number[][] | ErrorValueObject {\n        if (!knownXs || knownXs.isNull()) {\n            return getSerialNumbersByRowsColumns(knownYsValues.length, knownYsValues[0].length);\n        }\n\n        return getKnownsArrayValues(knownXs);\n    }\n\n    private _getNewXsValues(knownXsValues: number[][], newXs?: BaseValueObject): number[][] | ErrorValueObject {\n        if (!newXs || newXs.isNull()) {\n            return knownXsValues;\n        }\n\n        return getKnownsArrayValues(newXs);\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9068370fa7289f83b46b830ddb0724465098c815"}}