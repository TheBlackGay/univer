{"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/token.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/token.ts","statementMap":{"0":{"start":{"line":1,"column":43},"end":{"line":15,"column":23}},"1":{"start":{"line":2,"column":2},"end":{"line":2,"column":31}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":32}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":35}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":34}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":38}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":32}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":33}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":37}},"9":{"start":{"line":10,"column":2},"end":{"line":10,"column":39}},"10":{"start":{"line":11,"column":2},"end":{"line":11,"column":49}},"11":{"start":{"line":12,"column":2},"end":{"line":12,"column":36}},"12":{"start":{"line":13,"column":2},"end":{"line":13,"column":46}},"13":{"start":{"line":14,"column":2},"end":{"line":14,"column":24}},"14":{"start":{"line":16,"column":42},"end":{"line":24,"column":22}},"15":{"start":{"line":17,"column":2},"end":{"line":17,"column":32}},"16":{"start":{"line":18,"column":2},"end":{"line":18,"column":36}},"17":{"start":{"line":19,"column":2},"end":{"line":19,"column":38}},"18":{"start":{"line":20,"column":2},"end":{"line":20,"column":48}},"19":{"start":{"line":21,"column":2},"end":{"line":21,"column":35}},"20":{"start":{"line":22,"column":2},"end":{"line":22,"column":45}},"21":{"start":{"line":23,"column":2},"end":{"line":23,"column":23}},"22":{"start":{"line":25,"column":55},"end":{"line":38,"column":2}},"23":{"start":{"line":39,"column":34},"end":{"line":39,"column":73}},"24":{"start":{"line":40,"column":58},"end":{"line":47,"column":2}},"25":{"start":{"line":48,"column":40},"end":{"line":60,"column":20}},"26":{"start":{"line":49,"column":2},"end":{"line":49,"column":36}},"27":{"start":{"line":50,"column":2},"end":{"line":50,"column":37}},"28":{"start":{"line":51,"column":2},"end":{"line":51,"column":29}},"29":{"start":{"line":52,"column":2},"end":{"line":52,"column":40}},"30":{"start":{"line":53,"column":2},"end":{"line":53,"column":40}},"31":{"start":{"line":54,"column":2},"end":{"line":54,"column":35}},"32":{"start":{"line":55,"column":2},"end":{"line":55,"column":36}},"33":{"start":{"line":56,"column":2},"end":{"line":56,"column":29}},"34":{"start":{"line":57,"column":2},"end":{"line":57,"column":43}},"35":{"start":{"line":58,"column":2},"end":{"line":58,"column":44}},"36":{"start":{"line":59,"column":2},"end":{"line":59,"column":21}},"37":{"start":{"line":61,"column":41},"end":{"line":65,"column":21}},"38":{"start":{"line":62,"column":2},"end":{"line":62,"column":35}},"39":{"start":{"line":63,"column":2},"end":{"line":63,"column":30}},"40":{"start":{"line":64,"column":2},"end":{"line":64,"column":22}},"41":{"start":{"line":66,"column":48},"end":{"line":66,"column":96}},"42":{"start":{"line":67,"column":41},"end":{"line":72,"column":21}},"43":{"start":{"line":68,"column":2},"end":{"line":68,"column":27}},"44":{"start":{"line":69,"column":2},"end":{"line":69,"column":30}},"45":{"start":{"line":70,"column":2},"end":{"line":70,"column":29}},"46":{"start":{"line":71,"column":2},"end":{"line":71,"column":22}},"47":{"start":{"line":73,"column":27},"end":{"line":73,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":44},"end":{"line":1,"column":45}},"loc":{"start":{"line":1,"column":64},"end":{"line":15,"column":1}},"line":1},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":43},"end":{"line":16,"column":44}},"loc":{"start":{"line":16,"column":62},"end":{"line":24,"column":1}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":48,"column":41},"end":{"line":48,"column":42}},"loc":{"start":{"line":48,"column":58},"end":{"line":60,"column":1}},"line":48},"3":{"name":"(anonymous_3)","decl":{"start":{"line":61,"column":42},"end":{"line":61,"column":43}},"loc":{"start":{"line":61,"column":60},"end":{"line":65,"column":1}},"line":61},"4":{"name":"(anonymous_4)","decl":{"start":{"line":67,"column":42},"end":{"line":67,"column":43}},"loc":{"start":{"line":67,"column":60},"end":{"line":72,"column":1}},"line":67}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":3},"end":{"line":15,"column":22}},"type":"binary-expr","locations":[{"start":{"line":15,"column":3},"end":{"line":15,"column":16}},{"start":{"line":15,"column":20},"end":{"line":15,"column":22}}],"line":15},"1":{"loc":{"start":{"line":24,"column":3},"end":{"line":24,"column":21}},"type":"binary-expr","locations":[{"start":{"line":24,"column":3},"end":{"line":24,"column":15}},{"start":{"line":24,"column":19},"end":{"line":24,"column":21}}],"line":24},"2":{"loc":{"start":{"line":60,"column":3},"end":{"line":60,"column":19}},"type":"binary-expr","locations":[{"start":{"line":60,"column":3},"end":{"line":60,"column":13}},{"start":{"line":60,"column":17},"end":{"line":60,"column":19}}],"line":60},"3":{"loc":{"start":{"line":65,"column":3},"end":{"line":65,"column":20}},"type":"binary-expr","locations":[{"start":{"line":65,"column":3},"end":{"line":65,"column":14}},{"start":{"line":65,"column":18},"end":{"line":65,"column":20}}],"line":65},"4":{"loc":{"start":{"line":72,"column":3},"end":{"line":72,"column":20}},"type":"binary-expr","locations":[{"start":{"line":72,"column":3},"end":{"line":72,"column":14}},{"start":{"line":72,"column":18},"end":{"line":72,"column":20}}],"line":72}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1},"b":{"0":[1,1],"1":[1,1],"2":[1,1],"3":[1,1],"4":[1,1]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/token.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum operatorToken {\n    PLUS = '+',\n    MINUS = '-',\n    MULTIPLY = '*',\n    DIVIDED = '/',\n    CONCATENATE = '&',\n    POWER = '^',\n    EQUALS = '=',\n    NOT_EQUAL = '<>',\n    GREATER_THAN = '>',\n    GREATER_THAN_OR_EQUAL = '>=',\n    LESS_THAN = '<',\n    LESS_THAN_OR_EQUAL = '<=',\n}\n\nexport enum compareToken {\n    EQUALS = '=',\n    NOT_EQUAL = '<>',\n    GREATER_THAN = '>',\n    GREATER_THAN_OR_EQUAL = '>=',\n    LESS_THAN = '<',\n    LESS_THAN_OR_EQUAL = '<=',\n}\n\nexport const OPERATOR_TOKEN_PRIORITY = new Map([\n    [operatorToken.NOT_EQUAL as string, 4],\n    [operatorToken.LESS_THAN as string, 4],\n    [operatorToken.GREATER_THAN_OR_EQUAL as string, 4],\n    [operatorToken.EQUALS as string, 4],\n    [operatorToken.GREATER_THAN as string, 4],\n    [operatorToken.LESS_THAN_OR_EQUAL as string, 4],\n    [operatorToken.CONCATENATE as string, 3],\n    [operatorToken.PLUS as string, 2],\n    [operatorToken.MINUS as string, 2],\n    [operatorToken.DIVIDED as string, 1],\n    [operatorToken.MULTIPLY as string, 1],\n    [operatorToken.POWER as string, 0],\n]);\n\nexport const OPERATOR_TOKEN_SET = new Set(OPERATOR_TOKEN_PRIORITY.keys());\n\nexport const OPERATOR_TOKEN_COMPARE_SET = new Set([\n    operatorToken.EQUALS as string,\n    operatorToken.NOT_EQUAL,\n    operatorToken.GREATER_THAN,\n    operatorToken.GREATER_THAN_OR_EQUAL,\n    operatorToken.LESS_THAN,\n    operatorToken.LESS_THAN_OR_EQUAL,\n]);\n\nexport enum matchToken {\n    OPEN_BRACKET = '(',\n    CLOSE_BRACKET = ')',\n    COMMA = ',',\n    SINGLE_QUOTATION = \"'\",\n    DOUBLE_QUOTATION = '\"',\n    OPEN_BRACES = '{',\n    CLOSE_BRACES = '}',\n    COLON = ':',\n    OPEN_SQUARE_BRACKET = '[',\n    CLOSE_SQUARE_BRACKET = ']',\n}\n\nexport enum suffixToken {\n    PERCENTAGE = '%',\n    POUND = '#',\n}\n\nexport const SUFFIX_TOKEN_SET = new Set([suffixToken.PERCENTAGE as string, suffixToken.POUND]);\n\nexport enum prefixToken {\n    AT = '@',\n    MINUS = '-',\n    PLUS = '+',\n}\n\nexport const SPACE_TOKEN = ' ';\n"],"mappings":"AAgBO,WAAK,gBAAL,kBAAKA,mBAAL;AACH,EAAAA,eAAA,UAAO;AACP,EAAAA,eAAA,WAAQ;AACR,EAAAA,eAAA,cAAW;AACX,EAAAA,eAAA,aAAU;AACV,EAAAA,eAAA,iBAAc;AACd,EAAAA,eAAA,WAAQ;AACR,EAAAA,eAAA,YAAS;AACT,EAAAA,eAAA,eAAY;AACZ,EAAAA,eAAA,kBAAe;AACf,EAAAA,eAAA,2BAAwB;AACxB,EAAAA,eAAA,eAAY;AACZ,EAAAA,eAAA,wBAAqB;AAZb,SAAAA;AAAA,GAAA;AAeL,WAAK,eAAL,kBAAKC,kBAAL;AACH,EAAAA,cAAA,YAAS;AACT,EAAAA,cAAA,eAAY;AACZ,EAAAA,cAAA,kBAAe;AACf,EAAAA,cAAA,2BAAwB;AACxB,EAAAA,cAAA,eAAY;AACZ,EAAAA,cAAA,wBAAqB;AANb,SAAAA;AAAA,GAAA;AASL,aAAM,0BAA0B,oBAAI,IAAI;AAAA,EAC3C,CAAC,sBAAmC,CAAC;AAAA,EACrC,CAAC,qBAAmC,CAAC;AAAA,EACrC,CAAC,kCAA+C,CAAC;AAAA,EACjD,CAAC,kBAAgC,CAAC;AAAA,EAClC,CAAC,wBAAsC,CAAC;AAAA,EACxC,CAAC,+BAA4C,CAAC;AAAA,EAC9C,CAAC,uBAAqC,CAAC;AAAA,EACvC,CAAC,gBAA8B,CAAC;AAAA,EAChC,CAAC,iBAA+B,CAAC;AAAA,EACjC,CAAC,mBAAiC,CAAC;AAAA,EACnC,CAAC,oBAAkC,CAAC;AAAA,EACpC,CAAC,iBAA+B,CAAC;AACrC,CAAC;AAEM,aAAM,qBAAqB,IAAI,IAAI,wBAAwB,KAAK,CAAC;AAEjE,aAAM,6BAA6B,oBAAI,IAAI;AAAA,EAC9C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AAEM,WAAK,aAAL,kBAAKC,gBAAL;AACH,EAAAA,YAAA,kBAAe;AACf,EAAAA,YAAA,mBAAgB;AAChB,EAAAA,YAAA,WAAQ;AACR,EAAAA,YAAA,sBAAmB;AACnB,EAAAA,YAAA,sBAAmB;AACnB,EAAAA,YAAA,iBAAc;AACd,EAAAA,YAAA,kBAAe;AACf,EAAAA,YAAA,WAAQ;AACR,EAAAA,YAAA,yBAAsB;AACtB,EAAAA,YAAA,0BAAuB;AAVf,SAAAA;AAAA,GAAA;AAaL,WAAK,cAAL,kBAAKC,iBAAL;AACH,EAAAA,aAAA,gBAAa;AACb,EAAAA,aAAA,WAAQ;AAFA,SAAAA;AAAA,GAAA;AAKL,aAAM,mBAAmB,oBAAI,IAAI,CAAC,sBAAkC,eAAiB,CAAC;AAEtF,WAAK,cAAL,kBAAKC,iBAAL;AACH,EAAAA,aAAA,QAAK;AACL,EAAAA,aAAA,WAAQ;AACR,EAAAA,aAAA,UAAO;AAHC,SAAAA;AAAA,GAAA;AAML,aAAM,cAAc;","names":["operatorToken","compareToken","matchToken","suffixToken","prefixToken"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ec3b32bec4eb6c9c5d3bb002b33dc3d2d5223129"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/cache-lru.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/cache-lru.ts","statementMap":{"0":{"start":{"line":5,"column":4},"end":{"line":5,"column":41}},"1":{"start":{"line":8,"column":17},"end":{"line":8,"column":42}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":32}},"3":{"start":{"line":12,"column":17},"end":{"line":12,"column":42}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":33}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":24}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":50}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":45}},"8":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"9":{"start":{"line":26,"column":6},"end":{"line":26,"column":27}},"10":{"start":{"line":28,"column":4},"end":{"line":28,"column":51}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":2},"end":{"line":4,"column":3}},"loc":{"start":{"line":4,"column":26},"end":{"line":6,"column":3}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":2},"end":{"line":7,"column":3}},"loc":{"start":{"line":7,"column":27},"end":{"line":10,"column":3}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":2},"end":{"line":11,"column":3}},"loc":{"start":{"line":11,"column":21},"end":{"line":14,"column":3}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":2},"end":{"line":15,"column":3}},"loc":{"start":{"line":15,"column":10},"end":{"line":17,"column":3}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":18,"column":2},"end":{"line":18,"column":3}},"loc":{"start":{"line":18,"column":24},"end":{"line":20,"column":3}},"line":18},"5":{"name":"(anonymous_5)","decl":{"start":{"line":21,"column":2},"end":{"line":21,"column":3}},"loc":{"start":{"line":21,"column":31},"end":{"line":23,"column":3}},"line":21},"6":{"name":"(anonymous_6)","decl":{"start":{"line":24,"column":2},"end":{"line":24,"column":3}},"loc":{"start":{"line":24,"column":23},"end":{"line":29,"column":3}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},{"start":{},"end":{}}],"line":25}},"s":{"0":2,"1":11,"2":11,"3":250,"4":250,"5":0,"6":0,"7":0,"8":261,"9":261,"10":0},"f":{"0":2,"1":11,"2":250,"3":0,"4":0,"5":0,"6":261},"b":{"0":[261,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/cache-lru.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { hashAlgorithm, LRUMap } from '@univerjs/core';\n\nexport class FormulaAstLRU<T> {\n    private _cache: LRUMap<string, T>;\n\n    constructor(cacheCount: number) {\n        this._cache = new LRUMap<string, T>(cacheCount);\n    }\n\n    set(formulaString: string, node: T) {\n        const hash = this._hash(formulaString);\n        this._cache.set(hash, node);\n    }\n\n    get(formulaString: string) {\n        const hash = this._hash(formulaString);\n        return this._cache.get(hash);\n    }\n\n    clear() {\n        this._cache.clear();\n    }\n\n    delete(formulaString: string) {\n        this._cache.delete(this._hash(formulaString));\n    }\n\n    forEach(callbackfn: (value: T, key: string, map: LRUMap<string, T>) => void, thisArg?: any) {\n        this._cache.forEach(callbackfn, thisArg);\n    }\n\n    private _hash(formulaString: string) {\n        if (formulaString.length <= 64) {\n            return formulaString;\n        }\n        return hashAlgorithm(formulaString).toString();\n    }\n}\n"],"mappings":"AAgBA,SAAS,eAAe,cAAc;AAE/B,aAAM,cAAiB;AAAA,EAClB;AAAA,EAER,YAAY,YAAoB;AAC5B,SAAK,SAAS,IAAI,OAAkB,UAAU;AAAA,EAClD;AAAA,EAEA,IAAI,eAAuB,MAAS;AAChC,UAAM,OAAO,KAAK,MAAM,aAAa;AACrC,SAAK,OAAO,IAAI,MAAM,IAAI;AAAA,EAC9B;AAAA,EAEA,IAAI,eAAuB;AACvB,UAAM,OAAO,KAAK,MAAM,aAAa;AACrC,WAAO,KAAK,OAAO,IAAI,IAAI;AAAA,EAC/B;AAAA,EAEA,QAAQ;AACJ,SAAK,OAAO,MAAM;AAAA,EACtB;AAAA,EAEA,OAAO,eAAuB;AAC1B,SAAK,OAAO,OAAO,KAAK,MAAM,aAAa,CAAC;AAAA,EAChD;AAAA,EAEA,QAAQ,YAAqE,SAAe;AACxF,SAAK,OAAO,QAAQ,YAAY,OAAO;AAAA,EAC3C;AAAA,EAEQ,MAAM,eAAuB;AACjC,QAAI,cAAc,UAAU,IAAI;AAC5B,aAAO;AAAA,IACX;AACA,WAAO,cAAc,aAAa,EAAE,SAAS;AAAA,EACjD;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"662d71155df5d33697d4e4dfdff3112830d7493d"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/numfmt-kit.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/numfmt-kit.ts","statementMap":{"0":{"start":{"line":4,"column":24},"end":{"line":32,"column":1}},"1":{"start":{"line":33,"column":39},"end":{"line":47,"column":26}},"2":{"start":{"line":34,"column":2},"end":{"line":34,"column":66}},"3":{"start":{"line":35,"column":2},"end":{"line":35,"column":64}},"4":{"start":{"line":36,"column":2},"end":{"line":36,"column":68}},"5":{"start":{"line":37,"column":2},"end":{"line":37,"column":72}},"6":{"start":{"line":38,"column":2},"end":{"line":38,"column":60}},"7":{"start":{"line":39,"column":2},"end":{"line":39,"column":60}},"8":{"start":{"line":40,"column":2},"end":{"line":40,"column":72}},"9":{"start":{"line":41,"column":2},"end":{"line":41,"column":68}},"10":{"start":{"line":42,"column":2},"end":{"line":42,"column":72}},"11":{"start":{"line":43,"column":2},"end":{"line":43,"column":60}},"12":{"start":{"line":44,"column":2},"end":{"line":44,"column":67}},"13":{"start":{"line":45,"column":2},"end":{"line":45,"column":65}},"14":{"start":{"line":46,"column":2},"end":{"line":46,"column":27}},"15":{"start":{"line":48,"column":28},"end":{"line":62,"column":1}},"16":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"17":{"start":{"line":65,"column":4},"end":{"line":65,"column":16}},"18":{"start":{"line":67,"column":23},"end":{"line":67,"column":67}},"19":{"start":{"line":68,"column":20},"end":{"line":68,"column":58}},"20":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"21":{"start":{"line":70,"column":4},"end":{"line":70,"column":16}},"22":{"start":{"line":72,"column":21},"end":{"line":72,"column":45}},"23":{"start":{"line":73,"column":18},"end":{"line":73,"column":39}},"24":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"25":{"start":{"line":75,"column":4},"end":{"line":75,"column":16}},"26":{"start":{"line":77,"column":21},"end":{"line":77,"column":42}},"27":{"start":{"line":78,"column":2},"end":{"line":78,"column":35}},"28":{"start":{"line":79,"column":2},"end":{"line":79,"column":14}},"29":{"start":{"line":82,"column":25},"end":{"line":82,"column":56}},"30":{"start":{"line":83,"column":22},"end":{"line":83,"column":50}},"31":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"32":{"start":{"line":85,"column":4},"end":{"line":85,"column":19}},"33":{"start":{"line":87,"column":2},"end":{"line":89,"column":3}},"34":{"start":{"line":88,"column":4},"end":{"line":88,"column":22}},"35":{"start":{"line":90,"column":2},"end":{"line":95,"column":3}},"36":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"37":{"start":{"line":92,"column":6},"end":{"line":92,"column":21}},"38":{"start":{"line":94,"column":4},"end":{"line":94,"column":22}},"39":{"start":{"line":96,"column":2},"end":{"line":101,"column":3}},"40":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"41":{"start":{"line":98,"column":6},"end":{"line":98,"column":21}},"42":{"start":{"line":100,"column":4},"end":{"line":100,"column":22}},"43":{"start":{"line":102,"column":2},"end":{"line":107,"column":3}},"44":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"45":{"start":{"line":104,"column":6},"end":{"line":104,"column":21}},"46":{"start":{"line":106,"column":4},"end":{"line":106,"column":22}},"47":{"start":{"line":108,"column":2},"end":{"line":108,"column":20}},"48":{"start":{"line":110,"column":30},"end":{"line":110,"column":52}},"49":{"start":{"line":112,"column":27},"end":{"line":112,"column":61}},"50":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"51":{"start":{"line":114,"column":4},"end":{"line":114,"column":28}},"52":{"start":{"line":116,"column":15},"end":{"line":116,"column":46}},"53":{"start":{"line":117,"column":2},"end":{"line":117,"column":43}},"54":{"start":{"line":118,"column":2},"end":{"line":118,"column":14}},"55":{"start":{"line":121,"column":2},"end":{"line":121,"column":32}},"56":{"start":{"line":124,"column":2},"end":{"line":126,"column":3}},"57":{"start":{"line":125,"column":4},"end":{"line":125,"column":30}},"58":{"start":{"line":127,"column":15},"end":{"line":127,"column":56}},"59":{"start":{"line":128,"column":2},"end":{"line":128,"column":35}},"60":{"start":{"line":131,"column":2},"end":{"line":131,"column":94}},"61":{"start":{"line":131,"column":42},"end":{"line":131,"column":64}},"62":{"start":{"line":135,"column":2},"end":{"line":139,"column":3}},"63":{"start":{"line":136,"column":4},"end":{"line":136,"column":23}},"64":{"start":{"line":137,"column":9},"end":{"line":139,"column":3}},"65":{"start":{"line":138,"column":4},"end":{"line":138,"column":27}},"66":{"start":{"line":140,"column":30},"end":{"line":140,"column":66}},"67":{"start":{"line":141,"column":26},"end":{"line":141,"column":58}},"68":{"start":{"line":142,"column":2},"end":{"line":147,"column":3}},"69":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"70":{"start":{"line":144,"column":6},"end":{"line":144,"column":16}},"71":{"start":{"line":146,"column":4},"end":{"line":146,"column":23}},"72":{"start":{"line":148,"column":2},"end":{"line":153,"column":3}},"73":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"74":{"start":{"line":150,"column":6},"end":{"line":150,"column":25}},"75":{"start":{"line":152,"column":4},"end":{"line":152,"column":14}},"76":{"start":{"line":154,"column":2},"end":{"line":154,"column":40}},"77":{"start":{"line":156,"column":49},"end":{"line":163,"column":2}},"78":{"start":{"line":165,"column":2},"end":{"line":165,"column":53}},"79":{"start":{"line":168,"column":22},"end":{"line":168,"column":34}},"80":{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},"81":{"start":{"line":170,"column":4},"end":{"line":170,"column":24}},"82":{"start":{"line":172,"column":16},"end":{"line":172,"column":18}},"83":{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},"84":{"start":{"line":174,"column":4},"end":{"line":174,"column":46}},"85":{"start":{"line":176,"column":2},"end":{"line":176,"column":112}},"86":{"start":{"line":179,"column":2},"end":{"line":179,"column":72}},"87":{"start":{"line":181,"column":35},"end":{"line":181,"column":57}},"88":{"start":{"line":183,"column":15},"end":{"line":183,"column":20}},"89":{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},"90":{"start":{"line":185,"column":4},"end":{"line":185,"column":33}},"91":{"start":{"line":187,"column":21},"end":{"line":187,"column":59}},"92":{"start":{"line":188,"column":2},"end":{"line":194,"column":3}},"93":{"start":{"line":189,"column":4},"end":{"line":193,"column":6}},"94":{"start":{"line":195,"column":24},"end":{"line":195,"column":50}},"95":{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},"96":{"start":{"line":197,"column":4},"end":{"line":197,"column":75}},"97":{"start":{"line":199,"column":22},"end":{"line":199,"column":46}},"98":{"start":{"line":200,"column":2},"end":{"line":202,"column":3}},"99":{"start":{"line":201,"column":4},"end":{"line":201,"column":71}},"100":{"start":{"line":203,"column":22},"end":{"line":203,"column":46}},"101":{"start":{"line":204,"column":2},"end":{"line":206,"column":3}},"102":{"start":{"line":205,"column":4},"end":{"line":205,"column":71}},"103":{"start":{"line":207,"column":2},"end":{"line":209,"column":4}},"104":{"start":{"line":212,"column":2},"end":{"line":215,"column":5}},"105":{"start":{"line":216,"column":2},"end":{"line":220,"column":4}},"106":{"start":{"line":223,"column":2},"end":{"line":223,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":33,"column":40},"end":{"line":33,"column":41}},"loc":{"start":{"line":33,"column":63},"end":{"line":47,"column":1}},"line":33},"1":{"name":"handleNumfmtInCell","decl":{"start":{"line":63,"column":16},"end":{"line":63,"column":34}},"loc":{"start":{"line":63,"column":58},"end":{"line":80,"column":1}},"line":63},"2":{"name":"compareNumfmtPriority","decl":{"start":{"line":81,"column":16},"end":{"line":81,"column":37}},"loc":{"start":{"line":81,"column":59},"end":{"line":109,"column":1}},"line":81},"3":{"name":"getNumberFormatType","decl":{"start":{"line":111,"column":9},"end":{"line":111,"column":28}},"loc":{"start":{"line":111,"column":38},"end":{"line":119,"column":1}},"line":111},"4":{"name":"clearNumberFormatTypeCache","decl":{"start":{"line":120,"column":16},"end":{"line":120,"column":42}},"loc":{"start":{"line":120,"column":45},"end":{"line":122,"column":1}},"line":120},"5":{"name":"getNumberFormatTypeRaw","decl":{"start":{"line":123,"column":9},"end":{"line":123,"column":31}},"loc":{"start":{"line":123,"column":41},"end":{"line":129,"column":1}},"line":123},"6":{"name":"isAccounting","decl":{"start":{"line":130,"column":9},"end":{"line":130,"column":21}},"loc":{"start":{"line":130,"column":31},"end":{"line":132,"column":1}},"line":130},"7":{"name":"(anonymous_7)","decl":{"start":{"line":131,"column":32},"end":{"line":131,"column":33}},"loc":{"start":{"line":131,"column":42},"end":{"line":131,"column":64}},"line":131},"8":{"name":"comparePatternPriority","decl":{"start":{"line":134,"column":16},"end":{"line":134,"column":38}},"loc":{"start":{"line":134,"column":79},"end":{"line":155,"column":1}},"line":134},"9":{"name":"getCurrencySymbol","decl":{"start":{"line":164,"column":9},"end":{"line":164,"column":26}},"loc":{"start":{"line":164,"column":35},"end":{"line":166,"column":1}},"line":164},"10":{"name":"getCurrencyFormat","decl":{"start":{"line":167,"column":16},"end":{"line":167,"column":33}},"loc":{"start":{"line":167,"column":60},"end":{"line":177,"column":1}},"line":167},"11":{"name":"applyCurrencyFormat","decl":{"start":{"line":178,"column":16},"end":{"line":178,"column":35}},"loc":{"start":{"line":178,"column":70},"end":{"line":180,"column":1}},"line":178},"12":{"name":"stringIsNumberPattern","decl":{"start":{"line":182,"column":16},"end":{"line":182,"column":37}},"loc":{"start":{"line":182,"column":45},"end":{"line":210,"column":1}},"line":182},"13":{"name":"setNumberPatternCache","decl":{"start":{"line":211,"column":9},"end":{"line":211,"column":30}},"loc":{"start":{"line":211,"column":54},"end":{"line":221,"column":1}},"line":211},"14":{"name":"clearStringToNumberPatternCache","decl":{"start":{"line":222,"column":16},"end":{"line":222,"column":47}},"loc":{"start":{"line":222,"column":50},"end":{"line":224,"column":1}},"line":222}},"branchMap":{"0":{"loc":{"start":{"line":47,"column":3},"end":{"line":47,"column":25}},"type":"binary-expr","locations":[{"start":{"line":47,"column":3},"end":{"line":47,"column":19}},{"start":{"line":47,"column":23},"end":{"line":47,"column":25}}],"line":47},"1":{"loc":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},{"start":{},"end":{}}],"line":64},"2":{"loc":{"start":{"line":64,"column":6},"end":{"line":64,"column":37}},"type":"binary-expr","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":21}},{"start":{"line":64,"column":25},"end":{"line":64,"column":37}}],"line":64},"3":{"loc":{"start":{"line":67,"column":23},"end":{"line":67,"column":67}},"type":"binary-expr","locations":[{"start":{"line":67,"column":23},"end":{"line":67,"column":54}},{"start":{"line":67,"column":58},"end":{"line":67,"column":67}}],"line":67},"4":{"loc":{"start":{"line":68,"column":20},"end":{"line":68,"column":58}},"type":"binary-expr","locations":[{"start":{"line":68,"column":20},"end":{"line":68,"column":48}},{"start":{"line":68,"column":52},"end":{"line":68,"column":58}}],"line":68},"5":{"loc":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},{"start":{},"end":{}}],"line":69},"6":{"loc":{"start":{"line":69,"column":6},"end":{"line":69,"column":116}},"type":"binary-expr","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":26}},{"start":{"line":69,"column":30},"end":{"line":69,"column":47}},{"start":{"line":69,"column":51},"end":{"line":69,"column":83}},{"start":{"line":69,"column":87},"end":{"line":69,"column":116}}],"line":69},"7":{"loc":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},{"start":{},"end":{}}],"line":74},"8":{"loc":{"start":{"line":74,"column":6},"end":{"line":74,"column":43}},"type":"binary-expr","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":24}},{"start":{"line":74,"column":28},"end":{"line":74,"column":43}}],"line":74},"9":{"loc":{"start":{"line":77,"column":21},"end":{"line":77,"column":42}},"type":"binary-expr","locations":[{"start":{"line":77,"column":21},"end":{"line":77,"column":31}},{"start":{"line":77,"column":35},"end":{"line":77,"column":42}}],"line":77},"10":{"loc":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},{"start":{},"end":{}}],"line":84},"11":{"loc":{"start":{"line":87,"column":2},"end":{"line":89,"column":3}},"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":89,"column":3}},{"start":{},"end":{}}],"line":87},"12":{"loc":{"start":{"line":90,"column":2},"end":{"line":95,"column":3}},"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":95,"column":3}},{"start":{},"end":{}}],"line":90},"13":{"loc":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},{"start":{},"end":{}}],"line":91},"14":{"loc":{"start":{"line":96,"column":2},"end":{"line":101,"column":3}},"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":101,"column":3}},{"start":{},"end":{}}],"line":96},"15":{"loc":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},{"start":{},"end":{}}],"line":97},"16":{"loc":{"start":{"line":102,"column":2},"end":{"line":107,"column":3}},"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":107,"column":3}},{"start":{},"end":{}}],"line":102},"17":{"loc":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},{"start":{},"end":{}}],"line":103},"18":{"loc":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},{"start":{},"end":{}}],"line":113},"19":{"loc":{"start":{"line":124,"column":2},"end":{"line":126,"column":3}},"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":126,"column":3}},{"start":{},"end":{}}],"line":124},"20":{"loc":{"start":{"line":127,"column":15},"end":{"line":127,"column":56}},"type":"binary-expr","locations":[{"start":{"line":127,"column":15},"end":{"line":127,"column":43}},{"start":{"line":127,"column":47},"end":{"line":127,"column":56}}],"line":127},"21":{"loc":{"start":{"line":131,"column":9},"end":{"line":131,"column":93}},"type":"binary-expr","locations":[{"start":{"line":131,"column":9},"end":{"line":131,"column":65}},{"start":{"line":131,"column":69},"end":{"line":131,"column":93}}],"line":131},"22":{"loc":{"start":{"line":135,"column":2},"end":{"line":139,"column":3}},"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":139,"column":3}},{"start":{"line":137,"column":9},"end":{"line":139,"column":3}}],"line":135},"23":{"loc":{"start":{"line":137,"column":9},"end":{"line":139,"column":3}},"type":"if","locations":[{"start":{"line":137,"column":9},"end":{"line":139,"column":3}},{"start":{},"end":{}}],"line":137},"24":{"loc":{"start":{"line":142,"column":2},"end":{"line":147,"column":3}},"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":147,"column":3}},{"start":{},"end":{}}],"line":142},"25":{"loc":{"start":{"line":142,"column":6},"end":{"line":142,"column":73}},"type":"binary-expr","locations":[{"start":{"line":142,"column":6},"end":{"line":142,"column":37}},{"start":{"line":142,"column":41},"end":{"line":142,"column":73}}],"line":142},"26":{"loc":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},{"start":{},"end":{}}],"line":143},"27":{"loc":{"start":{"line":143,"column":8},"end":{"line":143,"column":149}},"type":"binary-expr","locations":[{"start":{"line":143,"column":8},"end":{"line":143,"column":33}},{"start":{"line":143,"column":48},"end":{"line":143,"column":69}},{"start":{"line":143,"column":84},"end":{"line":143,"column":110}},{"start":{"line":143,"column":127},"end":{"line":143,"column":149}}],"line":143},"28":{"loc":{"start":{"line":148,"column":2},"end":{"line":153,"column":3}},"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":153,"column":3}},{"start":{},"end":{}}],"line":148},"29":{"loc":{"start":{"line":148,"column":6},"end":{"line":148,"column":79}},"type":"binary-expr","locations":[{"start":{"line":148,"column":6},"end":{"line":148,"column":41}},{"start":{"line":148,"column":45},"end":{"line":148,"column":79}}],"line":148},"30":{"loc":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},{"start":{},"end":{}}],"line":149},"31":{"loc":{"start":{"line":149,"column":8},"end":{"line":149,"column":329}},"type":"binary-expr","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":33}},{"start":{"line":149,"column":54},"end":{"line":149,"column":75}},{"start":{"line":149,"column":96},"end":{"line":149,"column":121}},{"start":{"line":149,"column":140},"end":{"line":149,"column":161}},{"start":{"line":149,"column":180},"end":{"line":149,"column":205}},{"start":{"line":149,"column":226},"end":{"line":149,"column":247}},{"start":{"line":149,"column":268},"end":{"line":149,"column":293}},{"start":{"line":149,"column":308},"end":{"line":149,"column":329}}],"line":149},"32":{"loc":{"start":{"line":154,"column":9},"end":{"line":154,"column":39}},"type":"binary-expr","locations":[{"start":{"line":154,"column":9},"end":{"line":154,"column":24}},{"start":{"line":154,"column":28},"end":{"line":154,"column":39}}],"line":154},"33":{"loc":{"start":{"line":165,"column":9},"end":{"line":165,"column":52}},"type":"binary-expr","locations":[{"start":{"line":165,"column":9},"end":{"line":165,"column":45}},{"start":{"line":165,"column":49},"end":{"line":165,"column":52}}],"line":165},"34":{"loc":{"start":{"line":167,"column":42},"end":{"line":167,"column":58}},"type":"default-arg","locations":[{"start":{"line":167,"column":57},"end":{"line":167,"column":58}}],"line":167},"35":{"loc":{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},"type":"if","locations":[{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},{"start":{},"end":{}}],"line":169},"36":{"loc":{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},{"start":{},"end":{}}],"line":173},"37":{"loc":{"start":{"line":178,"column":52},"end":{"line":178,"column":68}},"type":"default-arg","locations":[{"start":{"line":178,"column":67},"end":{"line":178,"column":68}}],"line":178},"38":{"loc":{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},{"start":{},"end":{}}],"line":184},"39":{"loc":{"start":{"line":184,"column":6},"end":{"line":184,"column":52}},"type":"binary-expr","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":28}},{"start":{"line":184,"column":32},"end":{"line":184,"column":52}}],"line":184},"40":{"loc":{"start":{"line":188,"column":2},"end":{"line":194,"column":3}},"type":"if","locations":[{"start":{"line":188,"column":2},"end":{"line":194,"column":3}},{"start":{},"end":{}}],"line":188},"41":{"loc":{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},{"start":{},"end":{}}],"line":196},"42":{"loc":{"start":{"line":196,"column":6},"end":{"line":196,"column":38}},"type":"binary-expr","locations":[{"start":{"line":196,"column":6},"end":{"line":196,"column":19}},{"start":{"line":196,"column":23},"end":{"line":196,"column":38}}],"line":196},"43":{"loc":{"start":{"line":200,"column":2},"end":{"line":202,"column":3}},"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":202,"column":3}},{"start":{},"end":{}}],"line":200},"44":{"loc":{"start":{"line":200,"column":6},"end":{"line":200,"column":34}},"type":"binary-expr","locations":[{"start":{"line":200,"column":6},"end":{"line":200,"column":17}},{"start":{"line":200,"column":21},"end":{"line":200,"column":34}}],"line":200},"45":{"loc":{"start":{"line":204,"column":2},"end":{"line":206,"column":3}},"type":"if","locations":[{"start":{"line":204,"column":2},"end":{"line":206,"column":3}},{"start":{},"end":{}}],"line":204},"46":{"loc":{"start":{"line":204,"column":6},"end":{"line":204,"column":34}},"type":"binary-expr","locations":[{"start":{"line":204,"column":6},"end":{"line":204,"column":17}},{"start":{"line":204,"column":21},"end":{"line":204,"column":34}}],"line":204}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":117,"30":117,"31":117,"32":0,"33":117,"34":65,"35":52,"36":13,"37":10,"38":3,"39":39,"40":26,"41":24,"42":2,"43":13,"44":13,"45":7,"46":6,"47":0,"48":1,"49":250,"50":250,"51":239,"52":11,"53":11,"54":11,"55":0,"56":11,"57":1,"58":10,"59":10,"60":11,"61":250,"62":10,"63":1,"64":9,"65":1,"66":8,"67":8,"68":8,"69":4,"70":2,"71":2,"72":4,"73":4,"74":0,"75":4,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0},"f":{"0":1,"1":0,"2":117,"3":250,"4":0,"5":11,"6":11,"7":250,"8":10,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"0":[1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,117],"11":[65,52],"12":[13,39],"13":[10,3],"14":[26,13],"15":[24,2],"16":[13,0],"17":[7,6],"18":[239,11],"19":[1,10],"20":[10,0],"21":[11,2],"22":[1,9],"23":[1,8],"24":[4,4],"25":[8,6],"26":[2,2],"27":[4,2,2,0],"28":[4,0],"29":[4,2],"30":[0,4],"31":[4,0,4,0,4,0,4,0],"32":[0,0],"33":[0,0],"34":[0],"35":[0,0],"36":[0,0],"37":[0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/numfmt-kit.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, Nullable, Styles } from '@univerjs/core';\nimport { LocaleType, numfmt } from '@univerjs/core';\nimport { FormulaAstLRU } from '../../basics/cache-lru';\nimport { operatorToken } from '../../basics/token';\n\nconst currencySymbols = [\n    '$',\n    '£',\n    '¥',\n    '¤',\n    '֏',\n    '؋',\n    '৳',\n    '฿',\n    '៛',\n    '₡',\n    '₦',\n    '₩',\n    '₪',\n    '₫',\n    '€',\n    '₭',\n    '₮',\n    '₱',\n    '₲',\n    '₴',\n    '₸',\n    '₹',\n    '₺',\n    '₼',\n    '₽',\n    '₾',\n    '₿',\n];\n\ntype FormatType =\n    | 'currency'\n    | 'date'\n    | 'datetime'\n    | 'error'\n    | 'fraction'\n    | 'general'\n    | 'grouped'\n    | 'number'\n    | 'percent'\n    | 'scientific'\n    | 'text'\n    | 'time';\n\nenum NumberFormatType {\n    General,\n    Number,\n    Currency,\n    Accounting,\n    Date,\n    Time,\n    Percentage,\n    Fraction,\n    Scientific,\n    Text,\n    Special,\n    Custom,\n}\n\n// except error/grouped\nconst NumberFormatTypeMap = {\n    currency: NumberFormatType.Currency,\n    date: NumberFormatType.Date,\n    datetime: NumberFormatType.Time,\n    error: NumberFormatType.Custom,\n    fraction: NumberFormatType.Fraction,\n    general: NumberFormatType.General,\n    grouped: NumberFormatType.Custom,\n    number: NumberFormatType.Number,\n    percent: NumberFormatType.Percentage,\n    scientific: NumberFormatType.Scientific,\n    text: NumberFormatType.Text,\n    time: NumberFormatType.Time,\n    unknown: NumberFormatType.Custom,\n};\n/**\n * Handling number formats in styles\n *\n * @param oldCell\n * @param cell\n */\nexport function handleNumfmtInCell(oldCell: Nullable<ICellData>, cell: Nullable<ICellData>, styles: Styles | undefined) {\n    if (oldCell == null || cell == null) {\n        return cell;\n    }\n\n    const oldCellStyle = styles?.getStyleByCell(oldCell) || oldCell.s;\n    const cellStyle = styles?.getStyleByCell(cell) || cell.s;\n\n    if (oldCellStyle == null || cellStyle == null || typeof oldCellStyle !== 'object' || typeof cellStyle !== 'object') {\n        return cell;\n    }\n\n    const oldPattern = oldCellStyle?.n?.pattern;\n    const pattern = cellStyle?.n?.pattern;\n\n    if (oldPattern == null || pattern == null) {\n        return cell;\n    }\n\n    // The number format calculated by the formula, if the current cell already has a number format, the original format is used, if not, a new one is set.\n    // Why?\n    // Due to the forced calculation mechanism during initialization, if the formula may overwrite the original number format, the number format set for the formula cell may never take effect.\n    const newPattern = oldPattern || pattern;\n\n    cellStyle!.n!.pattern = newPattern;\n\n    return cell;\n}\n\n/**\n * Process the priority of the newly set number format and the original format.\n *\n * Here is the priority of the number format in Excel:\n * ┌─────────────────┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐\n * │                 │ new format                                                                                                                                       │\n * ├─────────────────┼────────────┬────────────┬────────────┬────────────┬──────────┬──────────┬────────────┬──────────┬────────────┬──────────┬────────────┬───────────┤\n * │ Original format │ General    │ Number     │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Special    │ Custom    │\n * ├─────────────────┼────────────┼────────────┼────────────┼────────────┼──────────┼──────────┼────────────┼──────────┼────────────┼──────────┼────────────┼───────────┤\n * │ General         │ General    │ Number     │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Special    │ Custom    │\n * │ Number          │ Number     │ Number     │ Number     │ Number     │ Number   │ Number   │ Number     │ Number   │ Number     │ Number   │ Number     │ Number    │\n * │ Currency        │ Currency   │ Currency   │ Currency   │ Currency   │ Currency │ Currency │ Currency   │ Currency │ Currency   │ Currency │ Currency   │ Currency  │\n * │ Accounting      │ Accounting │ Accounting │ Accounting │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Accounting │ Custom    │\n * │ Date            │ Date       │ Date       │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Date       │ Custom    │\n * │ Time            │ Time       │ Time       │ Time       │ Time       │ Time     │ Time     │ Time       │ Time     │ Time       │ Time     │ Time       │ Time      │\n * │ Percentage      │ Percentage │ Percentage │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Percentage │ Custom    │\n * │ Fraction        │ Fraction   │ Fraction   │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Fraction   │ Custom    │\n * │ Scientific      │ Scientific │ Scientific │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Scientific │ Custom    │\n * │ Text            │ Text       │ Text       │ Text       │ Text       │ Text     │ Text     │ Text       │ Text     │ Text       │ Text     │ Text       │ Text      │\n * │ Special         │ Special    │ Special    │ Special    │ Special    │ Special  │ Special  │ Special    │ Special  │ Special    │ Special  │ Special    │ Special   │\n * │ Custom          │ Custom     │ Custom     │ Currency   │ Accounting │ Date     │ Custom   │ Percentage │ Fraction │ Scientific │ Text     │ Custom     │ Custom    │\n * └─────────────────┴────────────┴────────────┴────────────┴────────────┴──────────┴──────────┴────────────┴──────────┴────────────┴──────────┴────────────┴───────────┘\n *\n * The number formats supported by Univer are different from Excel, so it only processes the parts that are the same as Excel. For different parts, we consider the newly set number format to have a higher priority.\n *\n * In the future, if Univer completely matches Excel, we will implement Excel’s priority rules.\n *\n * @param oldPattern\n * @param pattern\n * @returns\n */\nexport function compareNumfmtPriority(oldPattern: string, pattern: string) {\n    const oldPatternType = getNumberFormatType(oldPattern);\n    const patternType = getNumberFormatType(pattern);\n\n    if (oldPatternType === NumberFormatType.General) {\n        return pattern;\n    }\n\n    if ([NumberFormatType.Number, NumberFormatType.Currency, NumberFormatType.Time, NumberFormatType.Text, NumberFormatType.Special].includes(oldPatternType)) {\n        return oldPattern;\n    }\n\n    if (oldPatternType === NumberFormatType.Accounting) {\n        if ([NumberFormatType.Date, NumberFormatType.Time, NumberFormatType.Percentage, NumberFormatType.Fraction, NumberFormatType.Scientific, NumberFormatType.Text, NumberFormatType.Custom].includes(patternType)) {\n            return pattern;\n        }\n        return oldPattern;\n    }\n\n    if ([NumberFormatType.Date, NumberFormatType.Percentage, NumberFormatType.Fraction, NumberFormatType.Scientific].includes(oldPatternType)) {\n        if ([NumberFormatType.Currency, NumberFormatType.Accounting, NumberFormatType.Date, NumberFormatType.Time, NumberFormatType.Percentage, NumberFormatType.Fraction, NumberFormatType.Scientific, NumberFormatType.Text, NumberFormatType.Custom].includes(patternType)) {\n            return pattern;\n        }\n        return oldPattern;\n    }\n\n    if (oldPatternType === NumberFormatType.Custom) {\n        if ([NumberFormatType.Currency, NumberFormatType.Accounting, NumberFormatType.Date, NumberFormatType.Percentage, NumberFormatType.Fraction, NumberFormatType.Scientific, NumberFormatType.Text].includes(patternType)) {\n            return pattern;\n        }\n        return oldPattern;\n    }\n\n    return oldPattern;\n}\n\nconst numberFormatTypeCache = new FormulaAstLRU<NumberFormatType>(100000);\nfunction getNumberFormatType(pattern: string) {\n    const patternTypeCache = numberFormatTypeCache.get(pattern);\n    if (patternTypeCache !== undefined) {\n        return patternTypeCache;\n    }\n\n    const type = getNumberFormatTypeRaw(pattern);\n    numberFormatTypeCache.set(pattern, type);\n\n    return type;\n}\n\nexport function clearNumberFormatTypeCache() {\n    numberFormatTypeCache.clear();\n}\n\n/**\n * Get the type of the number format\n *\n * @param pattern\n * @returns\n */\nfunction getNumberFormatTypeRaw(pattern: string): NumberFormatType {\n    if (isAccounting(pattern)) {\n        return NumberFormatType.Accounting;\n    }\n\n    const type = numfmt.getInfo(pattern).type as FormatType || 'unknown';\n    return NumberFormatTypeMap[type];\n}\n\nfunction isAccounting(pattern: string) {\n    return !!currencySymbols.find((code) => pattern.includes(code)) && pattern.startsWith('_(');\n};\n\n/**\n * The number format of the formula inherits the number format of the referenced cell, usually taking the format of the cell at the front position, but some formats have higher priority, there are some special cases.\n *\n * e.g.\n * Currency * Currency = General\n * Currency / Currency = General\n *\n * For two cells with the same number format, the calculated result should inherit the following number format\n * ┌─────┬─────────┬──────────┬────────────┬─────────┬─────────┬────────────┬──────────┬────────────┬──────┬─────────┬──────────┐\n * │     │ Number  │ Currency │ Accounting │ Date    │ Time    │ Percentage │ Fraction │ Scientific │ Text │ Special │ Custom   │\n * ├─────┼─────────┼──────────┼────────────┼─────────┼─────────┼────────────┼──────────┼────────────┼──────┼─────────┼──────────┤\n * │  +  │ Number  │ Currency │ Accounting │ General │ Time    │ Percentage │ Fraction │ Scientific │ Text │ Special │ General  │\n * │  -  │ Number  │ Currency │ Accounting │ General │ Time    │ Percentage │ Fraction │ Scientific │ Text │ Special │ General  │\n * │  *  │ General │ General  │ General    │ General │ General │ Percentage │ Fraction │ Scientific │ Text │ General │ General  │\n * │  /  │ General │ General  │ General    │ General │ General │ Percentage │ Fraction │ Scientific │ Text │ General │ General  │\n * └─────┴─────────┴──────────┴────────────┴─────────┴─────────┴────────────┴──────────┴────────────┴──────┴─────────┴──────────┘\n *\n * @param previousPattern\n * @param nextPattern\n */\nexport function comparePatternPriority(previousPattern: string, nextPattern: string, operator: operatorToken) {\n    if (previousPattern === '') {\n        return nextPattern;\n    } else if (nextPattern === '') {\n        return previousPattern;\n    }\n\n    const previousPatternType = getNumberFormatType(previousPattern);\n    const nextPatternType = getNumberFormatType(nextPattern);\n\n    if (operator === operatorToken.PLUS || operator === operatorToken.MINUS) {\n        if ((previousPatternType === NumberFormatType.Date && nextPatternType === NumberFormatType.Date) || (previousPatternType === NumberFormatType.Custom && nextPatternType === NumberFormatType.Custom)) {\n            return '';\n        }\n\n        return nextPattern;\n    }\n\n    if (operator === operatorToken.MULTIPLY || operator === operatorToken.DIVIDED) {\n        if ((previousPatternType === NumberFormatType.Percentage && nextPatternType === NumberFormatType.Percentage) || (previousPatternType === NumberFormatType.Fraction && nextPatternType === NumberFormatType.Fraction) || (previousPatternType === NumberFormatType.Scientific && nextPatternType === NumberFormatType.Scientific) || (previousPatternType === NumberFormatType.Text && nextPatternType === NumberFormatType.Text)) {\n            return nextPattern;\n        }\n\n        return '';\n    }\n\n    return previousPattern || nextPattern;\n}\n\n/**\n * Get the currency symbol based on the locale\n * Now define it here\n * TODO: import from sheet-numfmt currencySymbolMap later\n *\n * @param locale\n * @returns\n */\nconst countryCurrencySymbolMap = new Map<LocaleType, string>([\n    [LocaleType.EN_US, '$'],\n    // [LocaleType.JA_JP, '¥'],\n    [LocaleType.RU_RU, '₽'],\n    [LocaleType.VI_VN, '₫'],\n    [LocaleType.ZH_CN, '¥'],\n    [LocaleType.ZH_TW, 'NT$'],\n]);\n\nfunction getCurrencySymbol(locale: LocaleType): string {\n    return countryCurrencySymbolMap.get(locale) || '$';\n}\n\nexport function getCurrencyFormat(locale: LocaleType, numberDigits: number = 2): string {\n    let _numberDigits = numberDigits;\n\n    if (numberDigits > 127) {\n        _numberDigits = 127;\n    }\n\n    let decimal = '';\n\n    if (_numberDigits > 0) {\n        decimal = `.${'0'.repeat(_numberDigits)}`;\n    }\n\n    return `\"${getCurrencySymbol(locale)}\"#,##0${decimal}_);[Red](\"${getCurrencySymbol(locale)}\"#,##0${decimal})`;\n}\n\nexport function applyCurrencyFormat(locale: LocaleType, number: number, numberDigits: number = 2): string {\n    return numfmt.format(getCurrencyFormat(locale, numberDigits), number);\n}\n\n/**\n * String is number pattern or date or time, for example\n * \"20%\"\n * \"2012-12-12\"\n * \"16:48:00\"\n *\n * @param locale\n * @returns\n */\nconst stringToNumberPatternCache = new FormulaAstLRU<{\n    value: number;\n    pattern: string;\n}>(100000);\n\nexport function stringIsNumberPattern(input: string) {\n    let _input = input;\n\n    if (_input.startsWith('\"') && _input.endsWith('\"')) {\n        _input = _input.slice(1, -1);\n    }\n\n    const cacheValue = stringToNumberPatternCache.get(_input);\n\n    if (cacheValue) {\n        return {\n            isNumberPattern: true,\n            value: cacheValue.value,\n            pattern: cacheValue.pattern,\n        };\n    }\n\n    const numberPattern = numfmt.parseNumber(_input);\n\n    if (numberPattern && numberPattern.z) {\n        return setNumberPatternCache(_input, numberPattern.v as number, numberPattern.z as string);\n    }\n\n    const datePattern = numfmt.parseDate(_input);\n\n    if (datePattern && datePattern.z) {\n        return setNumberPatternCache(_input, datePattern.v as number, datePattern.z as string);\n    }\n\n    const timePattern = numfmt.parseTime(_input);\n\n    if (timePattern && timePattern.z) {\n        return setNumberPatternCache(_input, timePattern.v as number, timePattern.z as string);\n    }\n\n    return {\n        isNumberPattern: false,\n    };\n}\n\nfunction setNumberPatternCache(input: string, value: number, pattern: string) {\n    stringToNumberPatternCache.set(input, {\n        value,\n        pattern,\n    });\n\n    return {\n        isNumberPattern: true,\n        value,\n        pattern,\n    };\n}\n\nexport function clearStringToNumberPatternCache() {\n    stringToNumberPatternCache.clear();\n}\n"],"mappings":"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","names":["NumberFormatType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8a1dedfcede640c3a39eb8ec56095f9731ab9fa6"}}