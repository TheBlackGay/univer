{"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/financial/function-names.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/financial/function-names.ts","statementMap":{"0":{"start":{"line":1,"column":54},"end":{"line":58,"column":34}},"1":{"start":{"line":2,"column":2},"end":{"line":2,"column":51}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":53}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":55}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":53}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":55}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":53}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":57}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":51}},"9":{"start":{"line":10,"column":2},"end":{"line":10,"column":51}},"10":{"start":{"line":11,"column":2},"end":{"line":11,"column":51}},"11":{"start":{"line":12,"column":2},"end":{"line":12,"column":51}},"12":{"start":{"line":13,"column":2},"end":{"line":13,"column":53}},"13":{"start":{"line":14,"column":2},"end":{"line":14,"column":41}},"14":{"start":{"line":15,"column":2},"end":{"line":15,"column":43}},"15":{"start":{"line":16,"column":2},"end":{"line":16,"column":45}},"16":{"start":{"line":17,"column":2},"end":{"line":17,"column":53}},"17":{"start":{"line":18,"column":2},"end":{"line":18,"column":53}},"18":{"start":{"line":19,"column":2},"end":{"line":19,"column":53}},"19":{"start":{"line":20,"column":2},"end":{"line":20,"column":49}},"20":{"start":{"line":21,"column":2},"end":{"line":21,"column":41}},"21":{"start":{"line":22,"column":2},"end":{"line":22,"column":57}},"22":{"start":{"line":23,"column":2},"end":{"line":23,"column":51}},"23":{"start":{"line":24,"column":2},"end":{"line":24,"column":45}},"24":{"start":{"line":25,"column":2},"end":{"line":25,"column":43}},"25":{"start":{"line":26,"column":2},"end":{"line":26,"column":47}},"26":{"start":{"line":27,"column":2},"end":{"line":27,"column":55}},"27":{"start":{"line":28,"column":2},"end":{"line":28,"column":45}},"28":{"start":{"line":29,"column":2},"end":{"line":29,"column":51}},"29":{"start":{"line":30,"column":2},"end":{"line":30,"column":45}},"30":{"start":{"line":31,"column":2},"end":{"line":31,"column":43}},"31":{"start":{"line":32,"column":2},"end":{"line":32,"column":55}},"32":{"start":{"line":33,"column":2},"end":{"line":33,"column":55}},"33":{"start":{"line":34,"column":2},"end":{"line":34,"column":55}},"34":{"start":{"line":35,"column":2},"end":{"line":35,"column":55}},"35":{"start":{"line":36,"column":2},"end":{"line":36,"column":55}},"36":{"start":{"line":37,"column":2},"end":{"line":37,"column":43}},"37":{"start":{"line":38,"column":2},"end":{"line":38,"column":45}},"38":{"start":{"line":39,"column":2},"end":{"line":39,"column":47}},"39":{"start":{"line":40,"column":2},"end":{"line":40,"column":55}},"40":{"start":{"line":41,"column":2},"end":{"line":41,"column":53}},"41":{"start":{"line":42,"column":2},"end":{"line":42,"column":41}},"42":{"start":{"line":43,"column":2},"end":{"line":43,"column":45}},"43":{"start":{"line":44,"column":2},"end":{"line":44,"column":53}},"44":{"start":{"line":45,"column":2},"end":{"line":45,"column":43}},"45":{"start":{"line":46,"column":2},"end":{"line":46,"column":43}},"46":{"start":{"line":47,"column":2},"end":{"line":47,"column":43}},"47":{"start":{"line":48,"column":2},"end":{"line":48,"column":51}},"48":{"start":{"line":49,"column":2},"end":{"line":49,"column":57}},"49":{"start":{"line":50,"column":2},"end":{"line":50,"column":57}},"50":{"start":{"line":51,"column":2},"end":{"line":51,"column":43}},"51":{"start":{"line":52,"column":2},"end":{"line":52,"column":45}},"52":{"start":{"line":53,"column":2},"end":{"line":53,"column":45}},"53":{"start":{"line":54,"column":2},"end":{"line":54,"column":47}},"54":{"start":{"line":55,"column":2},"end":{"line":55,"column":55}},"55":{"start":{"line":56,"column":2},"end":{"line":56,"column":53}},"56":{"start":{"line":57,"column":2},"end":{"line":57,"column":35}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":55},"end":{"line":1,"column":56}},"loc":{"start":{"line":1,"column":86},"end":{"line":58,"column":1}},"line":1}},"branchMap":{"0":{"loc":{"start":{"line":58,"column":3},"end":{"line":58,"column":33}},"type":"binary-expr","locations":[{"start":{"line":58,"column":3},"end":{"line":58,"column":27}},{"start":{"line":58,"column":31},"end":{"line":58,"column":33}}],"line":58}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/financial/function-names.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum FUNCTION_NAMES_FINANCIAL {\n    ACCRINT = 'ACCRINT',\n    ACCRINTM = 'ACCRINTM',\n    AMORDEGRC = 'AMORDEGRC',\n    AMORLINC = 'AMORLINC',\n    COUPDAYBS = 'COUPDAYBS',\n    COUPDAYS = 'COUPDAYS',\n    COUPDAYSNC = 'COUPDAYSNC',\n    COUPNCD = 'COUPNCD',\n    COUPNUM = 'COUPNUM',\n    COUPPCD = 'COUPPCD',\n    CUMIPMT = 'CUMIPMT',\n    CUMPRINC = 'CUMPRINC',\n    DB = 'DB',\n    DDB = 'DDB',\n    DISC = 'DISC',\n    DOLLARDE = 'DOLLARDE',\n    DOLLARFR = 'DOLLARFR',\n    DURATION = 'DURATION',\n    EFFECT = 'EFFECT',\n    FV = 'FV',\n    FVSCHEDULE = 'FVSCHEDULE',\n    INTRATE = 'INTRATE',\n    IPMT = 'IPMT',\n    IRR = 'IRR',\n    ISPMT = 'ISPMT',\n    MDURATION = 'MDURATION',\n    MIRR = 'MIRR',\n    NOMINAL = 'NOMINAL',\n    NPER = 'NPER',\n    NPV = 'NPV',\n    ODDFPRICE = 'ODDFPRICE',\n    ODDFYIELD = 'ODDFYIELD',\n    ODDLPRICE = 'ODDLPRICE',\n    ODDLYIELD = 'ODDLYIELD',\n    PDURATION = 'PDURATION',\n    PMT = 'PMT',\n    PPMT = 'PPMT',\n    PRICE = 'PRICE',\n    PRICEDISC = 'PRICEDISC',\n    PRICEMAT = 'PRICEMAT',\n    PV = 'PV',\n    RATE = 'RATE',\n    RECEIVED = 'RECEIVED',\n    RRI = 'RRI',\n    SLN = 'SLN',\n    SYD = 'SYD',\n    TBILLEQ = 'TBILLEQ',\n    TBILLPRICE = 'TBILLPRICE',\n    TBILLYIELD = 'TBILLYIELD',\n    VDB = 'VDB',\n    XIRR = 'XIRR',\n    XNPV = 'XNPV',\n    YIELD = 'YIELD',\n    YIELDDISC = 'YIELDDISC',\n    YIELDMAT = 'YIELDMAT',\n}\n"],"mappings":"AAgBO,WAAK,2BAAL,kBAAKA,8BAAL;AACH,EAAAA,0BAAA,aAAU;AACV,EAAAA,0BAAA,cAAW;AACX,EAAAA,0BAAA,eAAY;AACZ,EAAAA,0BAAA,cAAW;AACX,EAAAA,0BAAA,eAAY;AACZ,EAAAA,0BAAA,cAAW;AACX,EAAAA,0BAAA,gBAAa;AACb,EAAAA,0BAAA,aAAU;AACV,EAAAA,0BAAA,aAAU;AACV,EAAAA,0BAAA,aAAU;AACV,EAAAA,0BAAA,aAAU;AACV,EAAAA,0BAAA,cAAW;AACX,EAAAA,0BAAA,QAAK;AACL,EAAAA,0BAAA,SAAM;AACN,EAAAA,0BAAA,UAAO;AACP,EAAAA,0BAAA,cAAW;AACX,EAAAA,0BAAA,cAAW;AACX,EAAAA,0BAAA,cAAW;AACX,EAAAA,0BAAA,YAAS;AACT,EAAAA,0BAAA,QAAK;AACL,EAAAA,0BAAA,gBAAa;AACb,EAAAA,0BAAA,aAAU;AACV,EAAAA,0BAAA,UAAO;AACP,EAAAA,0BAAA,SAAM;AACN,EAAAA,0BAAA,WAAQ;AACR,EAAAA,0BAAA,eAAY;AACZ,EAAAA,0BAAA,UAAO;AACP,EAAAA,0BAAA,aAAU;AACV,EAAAA,0BAAA,UAAO;AACP,EAAAA,0BAAA,SAAM;AACN,EAAAA,0BAAA,eAAY;AACZ,EAAAA,0BAAA,eAAY;AACZ,EAAAA,0BAAA,eAAY;AACZ,EAAAA,0BAAA,eAAY;AACZ,EAAAA,0BAAA,eAAY;AACZ,EAAAA,0BAAA,SAAM;AACN,EAAAA,0BAAA,UAAO;AACP,EAAAA,0BAAA,WAAQ;AACR,EAAAA,0BAAA,eAAY;AACZ,EAAAA,0BAAA,cAAW;AACX,EAAAA,0BAAA,QAAK;AACL,EAAAA,0BAAA,UAAO;AACP,EAAAA,0BAAA,cAAW;AACX,EAAAA,0BAAA,SAAM;AACN,EAAAA,0BAAA,SAAM;AACN,EAAAA,0BAAA,SAAM;AACN,EAAAA,0BAAA,aAAU;AACV,EAAAA,0BAAA,gBAAa;AACb,EAAAA,0BAAA,gBAAa;AACb,EAAAA,0BAAA,SAAM;AACN,EAAAA,0BAAA,UAAO;AACP,EAAAA,0BAAA,UAAO;AACP,EAAAA,0BAAA,WAAQ;AACR,EAAAA,0BAAA,eAAY;AACZ,EAAAA,0BAAA,cAAW;AAvDH,SAAAA;AAAA,GAAA;","names":["FUNCTION_NAMES_FINANCIAL"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"78bf508fe4c24fd3ca5b1812550679103d2b100f"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/cache-lru.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/cache-lru.ts","statementMap":{"0":{"start":{"line":5,"column":4},"end":{"line":5,"column":41}},"1":{"start":{"line":8,"column":17},"end":{"line":8,"column":42}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":32}},"3":{"start":{"line":12,"column":17},"end":{"line":12,"column":42}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":33}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":24}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":50}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":45}},"8":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"9":{"start":{"line":26,"column":6},"end":{"line":26,"column":27}},"10":{"start":{"line":28,"column":4},"end":{"line":28,"column":51}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":2},"end":{"line":4,"column":3}},"loc":{"start":{"line":4,"column":26},"end":{"line":6,"column":3}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":2},"end":{"line":7,"column":3}},"loc":{"start":{"line":7,"column":27},"end":{"line":10,"column":3}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":2},"end":{"line":11,"column":3}},"loc":{"start":{"line":11,"column":21},"end":{"line":14,"column":3}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":2},"end":{"line":15,"column":3}},"loc":{"start":{"line":15,"column":10},"end":{"line":17,"column":3}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":18,"column":2},"end":{"line":18,"column":3}},"loc":{"start":{"line":18,"column":24},"end":{"line":20,"column":3}},"line":18},"5":{"name":"(anonymous_5)","decl":{"start":{"line":21,"column":2},"end":{"line":21,"column":3}},"loc":{"start":{"line":21,"column":31},"end":{"line":23,"column":3}},"line":21},"6":{"name":"(anonymous_6)","decl":{"start":{"line":24,"column":2},"end":{"line":24,"column":3}},"loc":{"start":{"line":24,"column":23},"end":{"line":29,"column":3}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},{"start":{},"end":{}}],"line":25}},"s":{"0":6,"1":11,"2":11,"3":63,"4":63,"5":0,"6":0,"7":0,"8":74,"9":74,"10":0},"f":{"0":6,"1":11,"2":63,"3":0,"4":0,"5":0,"6":74},"b":{"0":[74,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/cache-lru.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { hashAlgorithm, LRUMap } from '@univerjs/core';\n\nexport class FormulaAstLRU<T> {\n    private _cache: LRUMap<string, T>;\n\n    constructor(cacheCount: number) {\n        this._cache = new LRUMap<string, T>(cacheCount);\n    }\n\n    set(formulaString: string, node: T) {\n        const hash = this._hash(formulaString);\n        this._cache.set(hash, node);\n    }\n\n    get(formulaString: string) {\n        const hash = this._hash(formulaString);\n        return this._cache.get(hash);\n    }\n\n    clear() {\n        this._cache.clear();\n    }\n\n    delete(formulaString: string) {\n        this._cache.delete(this._hash(formulaString));\n    }\n\n    forEach(callbackfn: (value: T, key: string, map: LRUMap<string, T>) => void, thisArg?: any) {\n        this._cache.forEach(callbackfn, thisArg);\n    }\n\n    private _hash(formulaString: string) {\n        if (formulaString.length <= 64) {\n            return formulaString;\n        }\n        return hashAlgorithm(formulaString).toString();\n    }\n}\n"],"mappings":"AAgBA,SAAS,eAAe,cAAc;AAE/B,aAAM,cAAiB;AAAA,EAClB;AAAA,EAER,YAAY,YAAoB;AAC5B,SAAK,SAAS,IAAI,OAAkB,UAAU;AAAA,EAClD;AAAA,EAEA,IAAI,eAAuB,MAAS;AAChC,UAAM,OAAO,KAAK,MAAM,aAAa;AACrC,SAAK,OAAO,IAAI,MAAM,IAAI;AAAA,EAC9B;AAAA,EAEA,IAAI,eAAuB;AACvB,UAAM,OAAO,KAAK,MAAM,aAAa;AACrC,WAAO,KAAK,OAAO,IAAI,IAAI;AAAA,EAC/B;AAAA,EAEA,QAAQ;AACJ,SAAK,OAAO,MAAM;AAAA,EACtB;AAAA,EAEA,OAAO,eAAuB;AAC1B,SAAK,OAAO,OAAO,KAAK,MAAM,aAAa,CAAC;AAAA,EAChD;AAAA,EAEA,QAAQ,YAAqE,SAAe;AACxF,SAAK,OAAO,QAAQ,YAAY,OAAO;AAAA,EAC3C;AAAA,EAEQ,MAAM,eAAuB;AACjC,QAAI,cAAc,UAAU,IAAI;AAC5B,aAAO;AAAA,IACX;AACA,WAAO,cAAc,aAAa,EAAE,SAAS;AAAA,EACjD;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"662d71155df5d33697d4e4dfdff3112830d7493d"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/common.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/common.ts","statementMap":{"0":{"start":{"line":1,"column":45},"end":{"line":1,"column":63}},"1":{"start":{"line":2,"column":39},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":43},"end":{"line":3,"column":60}},"3":{"start":{"line":4,"column":39},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":42},"end":{"line":9,"column":22}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":35}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":33}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":23}},"8":{"start":{"line":10,"column":48},"end":{"line":14,"column":28}},"9":{"start":{"line":11,"column":2},"end":{"line":11,"column":70}},"10":{"start":{"line":12,"column":2},"end":{"line":12,"column":66}},"11":{"start":{"line":13,"column":2},"end":{"line":13,"column":29}},"12":{"start":{"line":15,"column":45},"end":{"line":21,"column":25}},"13":{"start":{"line":16,"column":2},"end":{"line":16,"column":35}},"14":{"start":{"line":17,"column":2},"end":{"line":17,"column":37}},"15":{"start":{"line":18,"column":2},"end":{"line":18,"column":43}},"16":{"start":{"line":19,"column":2},"end":{"line":19,"column":41}},"17":{"start":{"line":20,"column":2},"end":{"line":20,"column":26}},"18":{"start":{"line":22,"column":45},"end":{"line":26,"column":25}},"19":{"start":{"line":23,"column":2},"end":{"line":23,"column":60}},"20":{"start":{"line":24,"column":2},"end":{"line":24,"column":58}},"21":{"start":{"line":25,"column":2},"end":{"line":25,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":43},"end":{"line":5,"column":44}},"loc":{"start":{"line":5,"column":62},"end":{"line":9,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":49},"end":{"line":10,"column":50}},"loc":{"start":{"line":10,"column":74},"end":{"line":14,"column":1}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":46},"end":{"line":15,"column":47}},"loc":{"start":{"line":15,"column":68},"end":{"line":21,"column":1}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":46},"end":{"line":22,"column":47}},"loc":{"start":{"line":22,"column":68},"end":{"line":26,"column":1}},"line":22}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":3},"end":{"line":9,"column":21}},"type":"binary-expr","locations":[{"start":{"line":9,"column":3},"end":{"line":9,"column":15}},{"start":{"line":9,"column":19},"end":{"line":9,"column":21}}],"line":9},"1":{"loc":{"start":{"line":14,"column":3},"end":{"line":14,"column":27}},"type":"binary-expr","locations":[{"start":{"line":14,"column":3},"end":{"line":14,"column":21}},{"start":{"line":14,"column":25},"end":{"line":14,"column":27}}],"line":14},"2":{"loc":{"start":{"line":21,"column":3},"end":{"line":21,"column":24}},"type":"binary-expr","locations":[{"start":{"line":21,"column":3},"end":{"line":21,"column":18}},{"start":{"line":21,"column":22},"end":{"line":21,"column":24}}],"line":21},"3":{"loc":{"start":{"line":26,"column":3},"end":{"line":26,"column":24}},"type":"binary-expr","locations":[{"start":{"line":26,"column":3},"end":{"line":26,"column":18}},{"start":{"line":26,"column":22},"end":{"line":26,"column":24}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1},"f":{"0":1,"1":1,"2":1,"3":1},"b":{"0":[1,1],"1":[1,1],"2":[1,1],"3":[1,1]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/common.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n    BooleanNumber,\n    ICellData,\n    IColumnData,\n    IObjectArrayPrimitiveType,\n    IObjectMatrixPrimitiveType,\n    IRange,\n    IRowData,\n    IUnitRange,\n    Nullable,\n    ObjectMatrix,\n    Styles,\n} from '@univerjs/core';\n\nexport const ERROR_VALUE_OBJECT_CLASS_TYPE = 'errorValueObject';\n\nexport const ASYNC_OBJECT_CLASS_TYPE = 'asyncObject';\n\nexport const REFERENCE_OBJECT_CLASS_TYPE = 'referenceObject';\n\nexport const VALUE_OBJECT_CLASS_TYPE = 'valueObject';\n\nexport enum BooleanValue {\n    FALSE = 'FALSE',\n    TRUE = 'TRUE',\n}\n\nexport enum AstNodePromiseType {\n    SUCCESS,\n    ERROR,\n}\n\nexport interface ISheetItem {\n    cellData: ObjectMatrix<ICellData>;\n    rowCount: number;\n    columnCount: number;\n    rowData: IObjectArrayPrimitiveType<Partial<IRowData>>;\n    columnData: IObjectArrayPrimitiveType<Partial<IColumnData>>;\n    defaultColumnWidth?: number;\n    defaultRowHeight?: number;\n}\n\nexport interface ISheetData {\n    [sheetId: string]: ISheetItem;\n}\n\n/**\n * The subset of workbook data needs to be assembled into a new reference object when being passed in,\n * and then input through the FormulaCurrentConfigService.\n */\nexport interface IUnitData {\n    [unitId: string]: ISheetData;\n}\n\n/**\n * Style data, numfmt needs to be queried from the style sheet\n */\nexport interface IUnitStylesData {\n    [unitId: string]: Styles;\n}\n\nexport interface IRuntimeUnitDataType {\n    [unitId: string]: Nullable<{ [sheetId: string]: ObjectMatrix<Nullable<ICellData>> }>;\n}\n\nexport interface IRuntimeUnitDataPrimitiveType {\n    [unitId: string]: Nullable<{ [sheetId: string]: IObjectMatrixPrimitiveType<Nullable<ICellData>> }>;\n}\n\nexport interface IRuntimeOtherUnitDataType {\n    [unitId: string]: Nullable<{ [sheetId: string]: Nullable<{ [formulaId: string]: IObjectMatrixPrimitiveType<Nullable<ICellData>[][]> }> }>;\n}\n\nexport interface IUnitSheetNameMap {\n    [unitId: string]: Nullable<{ [sheetName: string]: string }>;\n}\n\nexport interface IUnitSheetIdToNameMap {\n    [unitId: string]: Nullable<{ [sheetId: string]: string }>;\n}\n\nexport interface IDirtyUnitSheetNameMap {\n    [unitId: string]: Nullable<{ [sheetId: string]: string }>;\n}\n\nexport interface IDirtyUnitSheetDefinedNameMap {\n    [unitId: string]: Nullable<{ [name: string]: string }>;\n}\n\nexport interface IDirtyUnitFeatureMap {\n    [unitId: string]: Nullable<{ [sheetId: string]: { [featureId: string]: boolean } }>;\n}\n\nexport interface IDirtyUnitOtherFormulaMap {\n    [unitId: string]: Nullable<{ [sheetId: string]: { [formulaId: string]: boolean } }>;\n}\n\nexport interface IArrayFormulaRangeType {\n    [unitId: string]: Nullable<{ [sheetId: string]: IObjectMatrixPrimitiveType<IRange> }>;\n}\n\nexport interface IFeatureDirtyRangeType {\n    [unitId: string]: Nullable<{ [sheetId: string]: IRange[] }>;\n}\n\nexport interface IArrayFormulaUnitCellType extends IRuntimeUnitDataPrimitiveType {}\n\nexport interface IFormulaData {\n    [unitId: string]: Nullable<{ [sheetId: string]: Nullable<IObjectMatrixPrimitiveType<Nullable<IFormulaDataItem>>> }>;\n}\n\nexport interface IFormulaIdMap {\n    f: string;\n    r: number;\n    c: number;\n}\n\nexport interface IFormulaIdMapData {\n    [unitId: string]: Nullable<{ [subUnitId: string]: Nullable<{ [formulaId: string]: IFormulaIdMap }> }>;\n}\n\nexport interface IOtherFormulaData {\n    [unitId: string]: Nullable<{ [subUnitId: string]: Nullable<{ [formulaId: string]: IOtherFormulaDataItem }> }>;\n}\n/**\n * @f  formulaString, the text string of the formula.\n * @si The formula ID can be utilized in scenarios such as copy-pasting and drag-filling to convert formulas into references, eliminating the need for recreating the formulaString.\n */\nexport interface IFormulaDataItem {\n    f: string; // formulaString\n    x?: number; // Offset from x direction\n    y?: number; // Offset from y direction\n    si?: string; // formulaId,\n    // row: number;\n    // column: number;\n    // sheetId: string;\n}\n\nexport interface IOtherFormulaDataItem {\n    f: string; // formulaString\n    ranges: IRange[];\n}\n\nexport interface ISuperTable {\n    sheetId: string;\n    hasCustomTitle: BooleanNumber;\n    titleMap: Map<string, number>;\n    range: IRange;\n}\n\nexport enum TableOptionType {\n    ALL = '#All',\n    DATA = '#Data',\n    HEADERS = '#Headers',\n    TOTALS = '#Totals',\n}\n\nexport interface IUnitExcludedCell {\n    [unitId: string]: Nullable<{ [sheetId: string]: ObjectMatrix<boolean> }>;\n}\n\nexport interface IUnitRowData {\n    [unitId: string]: Nullable<{ [sheetId: string]: IObjectArrayPrimitiveType<Partial<IRowData>> }>;\n}\n\nexport interface IFormulaDatasetConfig {\n    formulaData: IFormulaData;\n    arrayFormulaCellData: IArrayFormulaUnitCellType;\n    arrayFormulaRange: IArrayFormulaRangeType;\n    forceCalculate: boolean;\n    dirtyRanges: IUnitRange[];\n    dirtyNameMap: IDirtyUnitSheetNameMap;\n    dirtyDefinedNameMap: IDirtyUnitSheetNameMap;\n    dirtyUnitFeatureMap: IDirtyUnitFeatureMap;\n    dirtyUnitOtherFormulaMap: IDirtyUnitOtherFormulaMap;\n    clearDependencyTreeCache?: IUnitSheetIdToNameMap;\n    excludedCell?: IUnitExcludedCell;\n    allUnitData?: IUnitData;\n    unitStylesData?: IUnitStylesData;\n    unitSheetNameMap?: IUnitSheetNameMap;\n    maxIteration?: number;\n    rowData?: IUnitRowData; // Include rows hidden by filters\n}\n\nexport enum ConcatenateType {\n    FRONT,\n    BACK,\n}\n"],"mappings":"AA8BO,aAAM,gCAAgC;AAEtC,aAAM,0BAA0B;AAEhC,aAAM,8BAA8B;AAEpC,aAAM,0BAA0B;AAEhC,WAAK,eAAL,kBAAKA,kBAAL;AACH,EAAAA,cAAA,WAAQ;AACR,EAAAA,cAAA,UAAO;AAFC,SAAAA;AAAA,GAAA;AAKL,WAAK,qBAAL,kBAAKC,wBAAL;AACH,EAAAA,wCAAA;AACA,EAAAA,wCAAA;AAFQ,SAAAA;AAAA,GAAA;AA2HL,WAAK,kBAAL,kBAAKC,qBAAL;AACH,EAAAA,iBAAA,SAAM;AACN,EAAAA,iBAAA,UAAO;AACP,EAAAA,iBAAA,aAAU;AACV,EAAAA,iBAAA,YAAS;AAJD,SAAAA;AAAA,GAAA;AAkCL,WAAK,kBAAL,kBAAKC,qBAAL;AACH,EAAAA,kCAAA;AACA,EAAAA,kCAAA;AAFQ,SAAAA;AAAA,GAAA;","names":["BooleanValue","AstNodePromiseType","TableOptionType","ConcatenateType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b45bbef79875571c3323fa80d087f09f12bf96b5"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/error-type.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/error-type.ts","statementMap":{"0":{"start":{"line":1,"column":39},"end":{"line":15,"column":19}},"1":{"start":{"line":2,"column":2},"end":{"line":2,"column":40}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":32}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":34}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":30}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":28}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":34}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":30}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":34}},"9":{"start":{"line":10,"column":2},"end":{"line":10,"column":32}},"10":{"start":{"line":11,"column":2},"end":{"line":11,"column":34}},"11":{"start":{"line":12,"column":2},"end":{"line":12,"column":42}},"12":{"start":{"line":13,"column":2},"end":{"line":13,"column":32}},"13":{"start":{"line":14,"column":2},"end":{"line":14,"column":20}},"14":{"start":{"line":16,"column":30},"end":{"line":16,"column":63}},"15":{"start":{"line":17,"column":38},"end":{"line":17,"column":105}},"16":{"start":{"line":17,"column":90},"end":{"line":17,"column":102}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":40},"end":{"line":1,"column":41}},"loc":{"start":{"line":1,"column":56},"end":{"line":15,"column":1}},"line":1},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":79},"end":{"line":17,"column":80}},"loc":{"start":{"line":17,"column":90},"end":{"line":17,"column":102}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":3},"end":{"line":15,"column":18}},"type":"binary-expr","locations":[{"start":{"line":15,"column":3},"end":{"line":15,"column":12}},{"start":{"line":15,"column":16},"end":{"line":15,"column":18}}],"line":15}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":12},"f":{"0":1,"1":12},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/error-type.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum ErrorType {\n    /** Division by zero. */\n    DIV_BY_ZERO = '#DIV/0!',\n\n    /** Function error. */\n    NAME = '#NAME?',\n    VALUE = '#VALUE!',\n    NUM = '#NUM!',\n    NA = '#N/A',\n\n    /** Cyclic dependency. */\n    CYCLE = '#CYCLE!',\n\n    /** Wrong reference. */\n    REF = '#REF!',\n\n    /** Array spill error. */\n    SPILL = '#SPILL!',\n\n    /** Calculation error. */\n    CALC = '#CALC!',\n\n    /** Generic error */\n    ERROR = '#ERROR!',\n\n    /** connected to remote */\n    CONNECT = '#GETTING_DATA',\n\n    /** In the case of SUM(B1 C1), */\n    NULL = '#NULL!',\n}\n\nexport const ERROR_TYPE_SET = new Set(Object.values(ErrorType));\n\nexport const ERROR_TYPE_COUNT_ARRAY = [...new Set(Object.values(ErrorType).map((error) => error.length))];\n"],"mappings":"AAgBO,WAAK,YAAL,kBAAKA,eAAL;AAEH,EAAAA,WAAA,iBAAc;AAGd,EAAAA,WAAA,UAAO;AACP,EAAAA,WAAA,WAAQ;AACR,EAAAA,WAAA,SAAM;AACN,EAAAA,WAAA,QAAK;AAGL,EAAAA,WAAA,WAAQ;AAGR,EAAAA,WAAA,SAAM;AAGN,EAAAA,WAAA,WAAQ;AAGR,EAAAA,WAAA,UAAO;AAGP,EAAAA,WAAA,WAAQ;AAGR,EAAAA,WAAA,aAAU;AAGV,EAAAA,WAAA,UAAO;AA7BC,SAAAA;AAAA,GAAA;AAgCL,aAAM,iBAAiB,IAAI,IAAI,OAAO,OAAO,SAAS,CAAC;AAEvD,aAAM,yBAAyB,CAAC,GAAG,IAAI,IAAI,OAAO,OAAO,SAAS,EAAE,IAAI,CAAC,UAAU,MAAM,MAAM,CAAC,CAAC;","names":["ErrorType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5c11820eb7501eb34f92f0ecb1ee7104bee4fbd0"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/object-class-type.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/object-class-type.ts","statementMap":{"0":{"start":{"line":2,"column":12},"end":{"line":2,"column":14}},"1":{"start":{"line":6,"column":4},"end":{"line":6,"column":24}},"2":{"start":{"line":13,"column":4},"end":{"line":13,"column":27}},"3":{"start":{"line":16,"column":4},"end":{"line":16,"column":17}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":17}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":17}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":17}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":17}},"8":{"start":{"line":31,"column":4},"end":{"line":31,"column":17}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":17}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":2},"end":{"line":3,"column":3}},"loc":{"start":{"line":3,"column":12},"end":{"line":4,"column":3}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":5,"column":2},"end":{"line":5,"column":3}},"loc":{"start":{"line":5,"column":15},"end":{"line":7,"column":3}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":2},"end":{"line":12,"column":3}},"loc":{"start":{"line":12,"column":22},"end":{"line":14,"column":3}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":2},"end":{"line":15,"column":3}},"loc":{"start":{"line":15,"column":12},"end":{"line":17,"column":3}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":18,"column":2},"end":{"line":18,"column":3}},"loc":{"start":{"line":18,"column":18},"end":{"line":20,"column":3}},"line":18},"5":{"name":"(anonymous_5)","decl":{"start":{"line":21,"column":2},"end":{"line":21,"column":3}},"loc":{"start":{"line":21,"column":23},"end":{"line":23,"column":3}},"line":21},"6":{"name":"(anonymous_6)","decl":{"start":{"line":24,"column":2},"end":{"line":24,"column":3}},"loc":{"start":{"line":24,"column":22},"end":{"line":26,"column":3}},"line":24},"7":{"name":"(anonymous_7)","decl":{"start":{"line":27,"column":2},"end":{"line":27,"column":3}},"loc":{"start":{"line":27,"column":12},"end":{"line":29,"column":3}},"line":27},"8":{"name":"(anonymous_8)","decl":{"start":{"line":30,"column":2},"end":{"line":30,"column":3}},"loc":{"start":{"line":30,"column":18},"end":{"line":32,"column":3}},"line":30},"9":{"name":"(anonymous_9)","decl":{"start":{"line":33,"column":2},"end":{"line":33,"column":3}},"loc":{"start":{"line":33,"column":22},"end":{"line":35,"column":3}},"line":33}},"branchMap":{},"s":{"0":79,"1":0,"2":1,"3":0,"4":0,"5":0,"6":0,"7":179,"8":0,"9":0},"f":{"0":0,"1":0,"2":1,"3":0,"4":0,"5":0,"6":0,"7":179,"8":0,"9":0},"b":{},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/object-class-type.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ObjectClassType {\n    pattern: string = '';\n\n    dispose() {\n\n    }\n\n    getPattern() {\n        return this.pattern;\n    }\n\n    /**\n     * Only used in NumberValueObject\n     * @param pattern\n     */\n    setPattern(pattern: string) {\n        this.pattern = pattern;\n    }\n\n    isError() {\n        return false;\n    }\n\n    isAsyncObject() {\n        return false;\n    }\n\n    isAsyncArrayObject() {\n        return false;\n    }\n\n    isReferenceObject() {\n        return false;\n    }\n\n    isArray() {\n        return false;\n    }\n\n    isValueObject() {\n        return false;\n    }\n\n    isEqualType(object: ObjectClassType) {\n        return false;\n    }\n}\n"],"mappings":"AAgBO,aAAM,gBAAgB;AAAA,EACzB,UAAkB;AAAA,EAElB,UAAU;AAAA,EAEV;AAAA,EAEA,aAAa;AACT,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,SAAiB;AACxB,SAAK,UAAU;AAAA,EACnB;AAAA,EAEA,UAAU;AACN,WAAO;AAAA,EACX;AAAA,EAEA,gBAAgB;AACZ,WAAO;AAAA,EACX;AAAA,EAEA,qBAAqB;AACjB,WAAO;AAAA,EACX;AAAA,EAEA,oBAAoB;AAChB,WAAO;AAAA,EACX;AAAA,EAEA,UAAU;AACN,WAAO;AAAA,EACX;AAAA,EAEA,gBAAgB;AACZ,WAAO;AAAA,EACX;AAAA,EAEA,YAAY,QAAyB;AACjC,WAAO;AAAA,EACX;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7cc6b5234f74853086235a490790df0629e889f7"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/token.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/token.ts","statementMap":{"0":{"start":{"line":1,"column":43},"end":{"line":15,"column":23}},"1":{"start":{"line":2,"column":2},"end":{"line":2,"column":31}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":32}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":35}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":34}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":38}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":32}},"7":{"start":{"line":8,"column":2},"end":{"line":8,"column":33}},"8":{"start":{"line":9,"column":2},"end":{"line":9,"column":37}},"9":{"start":{"line":10,"column":2},"end":{"line":10,"column":39}},"10":{"start":{"line":11,"column":2},"end":{"line":11,"column":49}},"11":{"start":{"line":12,"column":2},"end":{"line":12,"column":36}},"12":{"start":{"line":13,"column":2},"end":{"line":13,"column":46}},"13":{"start":{"line":14,"column":2},"end":{"line":14,"column":24}},"14":{"start":{"line":16,"column":42},"end":{"line":24,"column":22}},"15":{"start":{"line":17,"column":2},"end":{"line":17,"column":32}},"16":{"start":{"line":18,"column":2},"end":{"line":18,"column":36}},"17":{"start":{"line":19,"column":2},"end":{"line":19,"column":38}},"18":{"start":{"line":20,"column":2},"end":{"line":20,"column":48}},"19":{"start":{"line":21,"column":2},"end":{"line":21,"column":35}},"20":{"start":{"line":22,"column":2},"end":{"line":22,"column":45}},"21":{"start":{"line":23,"column":2},"end":{"line":23,"column":23}},"22":{"start":{"line":25,"column":55},"end":{"line":38,"column":2}},"23":{"start":{"line":39,"column":34},"end":{"line":39,"column":73}},"24":{"start":{"line":40,"column":58},"end":{"line":47,"column":2}},"25":{"start":{"line":48,"column":40},"end":{"line":60,"column":20}},"26":{"start":{"line":49,"column":2},"end":{"line":49,"column":36}},"27":{"start":{"line":50,"column":2},"end":{"line":50,"column":37}},"28":{"start":{"line":51,"column":2},"end":{"line":51,"column":29}},"29":{"start":{"line":52,"column":2},"end":{"line":52,"column":40}},"30":{"start":{"line":53,"column":2},"end":{"line":53,"column":40}},"31":{"start":{"line":54,"column":2},"end":{"line":54,"column":35}},"32":{"start":{"line":55,"column":2},"end":{"line":55,"column":36}},"33":{"start":{"line":56,"column":2},"end":{"line":56,"column":29}},"34":{"start":{"line":57,"column":2},"end":{"line":57,"column":43}},"35":{"start":{"line":58,"column":2},"end":{"line":58,"column":44}},"36":{"start":{"line":59,"column":2},"end":{"line":59,"column":21}},"37":{"start":{"line":61,"column":41},"end":{"line":65,"column":21}},"38":{"start":{"line":62,"column":2},"end":{"line":62,"column":35}},"39":{"start":{"line":63,"column":2},"end":{"line":63,"column":30}},"40":{"start":{"line":64,"column":2},"end":{"line":64,"column":22}},"41":{"start":{"line":66,"column":48},"end":{"line":66,"column":96}},"42":{"start":{"line":67,"column":41},"end":{"line":72,"column":21}},"43":{"start":{"line":68,"column":2},"end":{"line":68,"column":27}},"44":{"start":{"line":69,"column":2},"end":{"line":69,"column":30}},"45":{"start":{"line":70,"column":2},"end":{"line":70,"column":29}},"46":{"start":{"line":71,"column":2},"end":{"line":71,"column":22}},"47":{"start":{"line":73,"column":27},"end":{"line":73,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":1,"column":44},"end":{"line":1,"column":45}},"loc":{"start":{"line":1,"column":64},"end":{"line":15,"column":1}},"line":1},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":43},"end":{"line":16,"column":44}},"loc":{"start":{"line":16,"column":62},"end":{"line":24,"column":1}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":48,"column":41},"end":{"line":48,"column":42}},"loc":{"start":{"line":48,"column":58},"end":{"line":60,"column":1}},"line":48},"3":{"name":"(anonymous_3)","decl":{"start":{"line":61,"column":42},"end":{"line":61,"column":43}},"loc":{"start":{"line":61,"column":60},"end":{"line":65,"column":1}},"line":61},"4":{"name":"(anonymous_4)","decl":{"start":{"line":67,"column":42},"end":{"line":67,"column":43}},"loc":{"start":{"line":67,"column":60},"end":{"line":72,"column":1}},"line":67}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":3},"end":{"line":15,"column":22}},"type":"binary-expr","locations":[{"start":{"line":15,"column":3},"end":{"line":15,"column":16}},{"start":{"line":15,"column":20},"end":{"line":15,"column":22}}],"line":15},"1":{"loc":{"start":{"line":24,"column":3},"end":{"line":24,"column":21}},"type":"binary-expr","locations":[{"start":{"line":24,"column":3},"end":{"line":24,"column":15}},{"start":{"line":24,"column":19},"end":{"line":24,"column":21}}],"line":24},"2":{"loc":{"start":{"line":60,"column":3},"end":{"line":60,"column":19}},"type":"binary-expr","locations":[{"start":{"line":60,"column":3},"end":{"line":60,"column":13}},{"start":{"line":60,"column":17},"end":{"line":60,"column":19}}],"line":60},"3":{"loc":{"start":{"line":65,"column":3},"end":{"line":65,"column":20}},"type":"binary-expr","locations":[{"start":{"line":65,"column":3},"end":{"line":65,"column":14}},{"start":{"line":65,"column":18},"end":{"line":65,"column":20}}],"line":65},"4":{"loc":{"start":{"line":72,"column":3},"end":{"line":72,"column":20}},"type":"binary-expr","locations":[{"start":{"line":72,"column":3},"end":{"line":72,"column":14}},{"start":{"line":72,"column":18},"end":{"line":72,"column":20}}],"line":72}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1},"b":{"0":[1,1],"1":[1,1],"2":[1,1],"3":[1,1],"4":[1,1]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/token.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum operatorToken {\n    PLUS = '+',\n    MINUS = '-',\n    MULTIPLY = '*',\n    DIVIDED = '/',\n    CONCATENATE = '&',\n    POWER = '^',\n    EQUALS = '=',\n    NOT_EQUAL = '<>',\n    GREATER_THAN = '>',\n    GREATER_THAN_OR_EQUAL = '>=',\n    LESS_THAN = '<',\n    LESS_THAN_OR_EQUAL = '<=',\n}\n\nexport enum compareToken {\n    EQUALS = '=',\n    NOT_EQUAL = '<>',\n    GREATER_THAN = '>',\n    GREATER_THAN_OR_EQUAL = '>=',\n    LESS_THAN = '<',\n    LESS_THAN_OR_EQUAL = '<=',\n}\n\nexport const OPERATOR_TOKEN_PRIORITY = new Map([\n    [operatorToken.NOT_EQUAL as string, 4],\n    [operatorToken.LESS_THAN as string, 4],\n    [operatorToken.GREATER_THAN_OR_EQUAL as string, 4],\n    [operatorToken.EQUALS as string, 4],\n    [operatorToken.GREATER_THAN as string, 4],\n    [operatorToken.LESS_THAN_OR_EQUAL as string, 4],\n    [operatorToken.CONCATENATE as string, 3],\n    [operatorToken.PLUS as string, 2],\n    [operatorToken.MINUS as string, 2],\n    [operatorToken.DIVIDED as string, 1],\n    [operatorToken.MULTIPLY as string, 1],\n    [operatorToken.POWER as string, 0],\n]);\n\nexport const OPERATOR_TOKEN_SET = new Set(OPERATOR_TOKEN_PRIORITY.keys());\n\nexport const OPERATOR_TOKEN_COMPARE_SET = new Set([\n    operatorToken.EQUALS as string,\n    operatorToken.NOT_EQUAL,\n    operatorToken.GREATER_THAN,\n    operatorToken.GREATER_THAN_OR_EQUAL,\n    operatorToken.LESS_THAN,\n    operatorToken.LESS_THAN_OR_EQUAL,\n]);\n\nexport enum matchToken {\n    OPEN_BRACKET = '(',\n    CLOSE_BRACKET = ')',\n    COMMA = ',',\n    SINGLE_QUOTATION = \"'\",\n    DOUBLE_QUOTATION = '\"',\n    OPEN_BRACES = '{',\n    CLOSE_BRACES = '}',\n    COLON = ':',\n    OPEN_SQUARE_BRACKET = '[',\n    CLOSE_SQUARE_BRACKET = ']',\n}\n\nexport enum suffixToken {\n    PERCENTAGE = '%',\n    POUND = '#',\n}\n\nexport const SUFFIX_TOKEN_SET = new Set([suffixToken.PERCENTAGE as string, suffixToken.POUND]);\n\nexport enum prefixToken {\n    AT = '@',\n    MINUS = '-',\n    PLUS = '+',\n}\n\nexport const SPACE_TOKEN = ' ';\n"],"mappings":"AAgBO,WAAK,gBAAL,kBAAKA,mBAAL;AACH,EAAAA,eAAA,UAAO;AACP,EAAAA,eAAA,WAAQ;AACR,EAAAA,eAAA,cAAW;AACX,EAAAA,eAAA,aAAU;AACV,EAAAA,eAAA,iBAAc;AACd,EAAAA,eAAA,WAAQ;AACR,EAAAA,eAAA,YAAS;AACT,EAAAA,eAAA,eAAY;AACZ,EAAAA,eAAA,kBAAe;AACf,EAAAA,eAAA,2BAAwB;AACxB,EAAAA,eAAA,eAAY;AACZ,EAAAA,eAAA,wBAAqB;AAZb,SAAAA;AAAA,GAAA;AAeL,WAAK,eAAL,kBAAKC,kBAAL;AACH,EAAAA,cAAA,YAAS;AACT,EAAAA,cAAA,eAAY;AACZ,EAAAA,cAAA,kBAAe;AACf,EAAAA,cAAA,2BAAwB;AACxB,EAAAA,cAAA,eAAY;AACZ,EAAAA,cAAA,wBAAqB;AANb,SAAAA;AAAA,GAAA;AASL,aAAM,0BAA0B,oBAAI,IAAI;AAAA,EAC3C,CAAC,sBAAmC,CAAC;AAAA,EACrC,CAAC,qBAAmC,CAAC;AAAA,EACrC,CAAC,kCAA+C,CAAC;AAAA,EACjD,CAAC,kBAAgC,CAAC;AAAA,EAClC,CAAC,wBAAsC,CAAC;AAAA,EACxC,CAAC,+BAA4C,CAAC;AAAA,EAC9C,CAAC,uBAAqC,CAAC;AAAA,EACvC,CAAC,gBAA8B,CAAC;AAAA,EAChC,CAAC,iBAA+B,CAAC;AAAA,EACjC,CAAC,mBAAiC,CAAC;AAAA,EACnC,CAAC,oBAAkC,CAAC;AAAA,EACpC,CAAC,iBAA+B,CAAC;AACrC,CAAC;AAEM,aAAM,qBAAqB,IAAI,IAAI,wBAAwB,KAAK,CAAC;AAEjE,aAAM,6BAA6B,oBAAI,IAAI;AAAA,EAC9C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AAEM,WAAK,aAAL,kBAAKC,gBAAL;AACH,EAAAA,YAAA,kBAAe;AACf,EAAAA,YAAA,mBAAgB;AAChB,EAAAA,YAAA,WAAQ;AACR,EAAAA,YAAA,sBAAmB;AACnB,EAAAA,YAAA,sBAAmB;AACnB,EAAAA,YAAA,iBAAc;AACd,EAAAA,YAAA,kBAAe;AACf,EAAAA,YAAA,WAAQ;AACR,EAAAA,YAAA,yBAAsB;AACtB,EAAAA,YAAA,0BAAuB;AAVf,SAAAA;AAAA,GAAA;AAaL,WAAK,cAAL,kBAAKC,iBAAL;AACH,EAAAA,aAAA,gBAAa;AACb,EAAAA,aAAA,WAAQ;AAFA,SAAAA;AAAA,GAAA;AAKL,aAAM,mBAAmB,oBAAI,IAAI,CAAC,sBAAkC,eAAiB,CAAC;AAEtF,WAAK,cAAL,kBAAKC,iBAAL;AACH,EAAAA,aAAA,QAAK;AACL,EAAAA,aAAA,WAAQ;AACR,EAAAA,aAAA,UAAO;AAHC,SAAAA;AAAA,GAAA;AAML,aAAM,cAAc;","names":["operatorToken","compareToken","matchToken","suffixToken","prefixToken"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ec3b32bec4eb6c9c5d3bb002b33dc3d2d5223129"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/base-value-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/base-value-object.ts","statementMap":{"0":{"start":{"line":8,"column":4},"end":{"line":8,"column":12}},"1":{"start":{"line":9,"column":4},"end":{"line":9,"column":31}},"2":{"start":{"line":13,"column":4},"end":{"line":13,"column":16}},"3":{"start":{"line":16,"column":4},"end":{"line":25,"column":6}},"4":{"start":{"line":28,"column":4},"end":{"line":28,"column":13}},"5":{"start":{"line":31,"column":4},"end":{"line":31,"column":14}},"6":{"start":{"line":38,"column":4},"end":{"line":38,"column":28}},"7":{"start":{"line":39,"column":4},"end":{"line":39,"column":16}},"8":{"start":{"line":42,"column":4},"end":{"line":42,"column":28}},"9":{"start":{"line":45,"column":4},"end":{"line":45,"column":17}},"10":{"start":{"line":48,"column":4},"end":{"line":48,"column":17}},"11":{"start":{"line":51,"column":4},"end":{"line":51,"column":17}},"12":{"start":{"line":54,"column":4},"end":{"line":54,"column":17}},"13":{"start":{"line":57,"column":4},"end":{"line":57,"column":17}},"14":{"start":{"line":60,"column":4},"end":{"line":60,"column":17}},"15":{"start":{"line":63,"column":4},"end":{"line":63,"column":17}},"16":{"start":{"line":66,"column":4},"end":{"line":66,"column":52}},"17":{"start":{"line":69,"column":4},"end":{"line":69,"column":52}},"18":{"start":{"line":72,"column":4},"end":{"line":72,"column":52}},"19":{"start":{"line":75,"column":4},"end":{"line":75,"column":52}},"20":{"start":{"line":78,"column":4},"end":{"line":78,"column":52}},"21":{"start":{"line":81,"column":4},"end":{"line":81,"column":52}},"22":{"start":{"line":84,"column":4},"end":{"line":84,"column":52}},"23":{"start":{"line":87,"column":4},"end":{"line":87,"column":52}},"24":{"start":{"line":90,"column":4},"end":{"line":90,"column":52}},"25":{"start":{"line":93,"column":4},"end":{"line":93,"column":52}},"26":{"start":{"line":96,"column":4},"end":{"line":96,"column":52}},"27":{"start":{"line":99,"column":4},"end":{"line":99,"column":52}},"28":{"start":{"line":102,"column":4},"end":{"line":102,"column":52}},"29":{"start":{"line":110,"column":4},"end":{"line":110,"column":51}},"30":{"start":{"line":118,"column":4},"end":{"line":118,"column":51}},"31":{"start":{"line":121,"column":4},"end":{"line":121,"column":51}},"32":{"start":{"line":124,"column":4},"end":{"line":124,"column":58}},"33":{"start":{"line":127,"column":4},"end":{"line":127,"column":61}},"34":{"start":{"line":130,"column":4},"end":{"line":130,"column":73}},"35":{"start":{"line":133,"column":4},"end":{"line":133,"column":70}},"36":{"start":{"line":136,"column":4},"end":{"line":136,"column":61}},"37":{"start":{"line":139,"column":4},"end":{"line":139,"column":64}},"38":{"start":{"line":142,"column":4},"end":{"line":142,"column":51}},"39":{"start":{"line":145,"column":4},"end":{"line":145,"column":51}},"40":{"start":{"line":148,"column":4},"end":{"line":148,"column":52}},"41":{"start":{"line":151,"column":4},"end":{"line":151,"column":52}},"42":{"start":{"line":154,"column":4},"end":{"line":154,"column":52}},"43":{"start":{"line":157,"column":4},"end":{"line":157,"column":52}},"44":{"start":{"line":160,"column":4},"end":{"line":160,"column":52}},"45":{"start":{"line":163,"column":4},"end":{"line":163,"column":51}},"46":{"start":{"line":166,"column":23},"end":{"line":166,"column":49}},"47":{"start":{"line":167,"column":4},"end":{"line":186,"column":5}},"48":{"start":{"line":168,"column":6},"end":{"line":172,"column":7}},"49":{"start":{"line":169,"column":8},"end":{"line":169,"column":44}},"50":{"start":{"line":171,"column":8},"end":{"line":171,"column":30}},"51":{"start":{"line":173,"column":11},"end":{"line":186,"column":5}},"52":{"start":{"line":174,"column":6},"end":{"line":178,"column":7}},"53":{"start":{"line":175,"column":8},"end":{"line":175,"column":55}},"54":{"start":{"line":177,"column":8},"end":{"line":177,"column":41}},"55":{"start":{"line":179,"column":11},"end":{"line":186,"column":5}},"56":{"start":{"line":180,"column":28},"end":{"line":180,"column":52}},"57":{"start":{"line":181,"column":6},"end":{"line":185,"column":7}},"58":{"start":{"line":182,"column":8},"end":{"line":182,"column":52}},"59":{"start":{"line":184,"column":8},"end":{"line":184,"column":38}},"60":{"start":{"line":187,"column":4},"end":{"line":187,"column":24}},"61":{"start":{"line":190,"column":4},"end":{"line":190,"column":52}},"62":{"start":{"line":193,"column":4},"end":{"line":193,"column":52}},"63":{"start":{"line":196,"column":4},"end":{"line":196,"column":52}},"64":{"start":{"line":199,"column":4},"end":{"line":199,"column":52}},"65":{"start":{"line":202,"column":4},"end":{"line":202,"column":52}},"66":{"start":{"line":205,"column":4},"end":{"line":205,"column":52}},"67":{"start":{"line":208,"column":4},"end":{"line":208,"column":52}},"68":{"start":{"line":211,"column":4},"end":{"line":211,"column":52}},"69":{"start":{"line":214,"column":4},"end":{"line":214,"column":52}},"70":{"start":{"line":217,"column":4},"end":{"line":217,"column":52}},"71":{"start":{"line":220,"column":4},"end":{"line":220,"column":52}},"72":{"start":{"line":223,"column":4},"end":{"line":223,"column":52}},"73":{"start":{"line":226,"column":4},"end":{"line":226,"column":52}},"74":{"start":{"line":229,"column":4},"end":{"line":229,"column":52}},"75":{"start":{"line":232,"column":4},"end":{"line":232,"column":52}},"76":{"start":{"line":235,"column":4},"end":{"line":235,"column":52}},"77":{"start":{"line":238,"column":4},"end":{"line":238,"column":52}},"78":{"start":{"line":241,"column":4},"end":{"line":241,"column":52}},"79":{"start":{"line":250,"column":4},"end":{"line":250,"column":16}},"80":{"start":{"line":259,"column":4},"end":{"line":259,"column":16}},"81":{"start":{"line":267,"column":4},"end":{"line":267,"column":16}},"82":{"start":{"line":275,"column":4},"end":{"line":275,"column":16}},"83":{"start":{"line":278,"column":4},"end":{"line":278,"column":52}},"84":{"start":{"line":281,"column":4},"end":{"line":281,"column":52}},"85":{"start":{"line":284,"column":4},"end":{"line":284,"column":52}},"86":{"start":{"line":287,"column":4},"end":{"line":287,"column":52}},"87":{"start":{"line":290,"column":4},"end":{"line":290,"column":52}},"88":{"start":{"line":293,"column":4},"end":{"line":293,"column":52}},"89":{"start":{"line":296,"column":4},"end":{"line":296,"column":52}},"90":{"start":{"line":299,"column":4},"end":{"line":299,"column":52}},"91":{"start":{"line":302,"column":4},"end":{"line":302,"column":52}},"92":{"start":{"line":305,"column":4},"end":{"line":305,"column":52}},"93":{"start":{"line":308,"column":4},"end":{"line":308,"column":52}},"94":{"start":{"line":311,"column":4},"end":{"line":311,"column":52}},"95":{"start":{"line":314,"column":30},"end":{"line":314,"column":33}},"96":{"start":{"line":315,"column":37},"end":{"line":315,"column":77}},"97":{"start":{"line":318,"column":4},"end":{"line":318,"column":22}},"98":{"start":{"line":319,"column":4},"end":{"line":319,"column":33}},"99":{"start":{"line":320,"column":4},"end":{"line":320,"column":39}},"100":{"start":{"line":323,"column":16},"end":{"line":323,"column":46}},"101":{"start":{"line":324,"column":19},"end":{"line":324,"column":49}},"102":{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},"103":{"start":{"line":326,"column":6},"end":{"line":326,"column":20}},"104":{"start":{"line":328,"column":21},"end":{"line":328,"column":66}},"105":{"start":{"line":329,"column":4},"end":{"line":329,"column":45}},"106":{"start":{"line":330,"column":4},"end":{"line":330,"column":20}},"107":{"start":{"line":333,"column":4},"end":{"line":333,"column":27}},"108":{"start":{"line":336,"column":4},"end":{"line":336,"column":27}},"109":{"start":{"line":339,"column":4},"end":{"line":339,"column":30}},"110":{"start":{"line":342,"column":4},"end":{"line":344,"column":5}},"111":{"start":{"line":343,"column":6},"end":{"line":343,"column":18}},"112":{"start":{"line":345,"column":4},"end":{"line":345,"column":17}},"113":{"start":{"line":348,"column":4},"end":{"line":348,"column":16}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":2},"end":{"line":7,"column":3}},"loc":{"start":{"line":7,"column":25},"end":{"line":10,"column":3}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":2},"end":{"line":12,"column":3}},"loc":{"start":{"line":12,"column":18},"end":{"line":14,"column":3}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":2},"end":{"line":15,"column":3}},"loc":{"start":{"line":15,"column":16},"end":{"line":26,"column":3}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":2},"end":{"line":27,"column":3}},"loc":{"start":{"line":27,"column":13},"end":{"line":29,"column":3}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":2},"end":{"line":30,"column":3}},"loc":{"start":{"line":30,"column":18},"end":{"line":32,"column":3}},"line":30},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":2},"end":{"line":33,"column":3}},"loc":{"start":{"line":33,"column":18},"end":{"line":34,"column":3}},"line":33},"6":{"name":"(anonymous_6)","decl":{"start":{"line":35,"column":2},"end":{"line":35,"column":3}},"loc":{"start":{"line":35,"column":23},"end":{"line":36,"column":3}},"line":35},"7":{"name":"(anonymous_7)","decl":{"start":{"line":37,"column":2},"end":{"line":37,"column":3}},"loc":{"start":{"line":37,"column":23},"end":{"line":40,"column":3}},"line":37},"8":{"name":"(anonymous_8)","decl":{"start":{"line":41,"column":2},"end":{"line":41,"column":3}},"loc":{"start":{"line":41,"column":18},"end":{"line":43,"column":3}},"line":41},"9":{"name":"(anonymous_9)","decl":{"start":{"line":44,"column":2},"end":{"line":44,"column":3}},"loc":{"start":{"line":44,"column":11},"end":{"line":46,"column":3}},"line":44},"10":{"name":"(anonymous_10)","decl":{"start":{"line":47,"column":2},"end":{"line":47,"column":3}},"loc":{"start":{"line":47,"column":13},"end":{"line":49,"column":3}},"line":47},"11":{"name":"(anonymous_11)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":13},"end":{"line":52,"column":3}},"line":50},"12":{"name":"(anonymous_12)","decl":{"start":{"line":53,"column":2},"end":{"line":53,"column":3}},"loc":{"start":{"line":53,"column":14},"end":{"line":55,"column":3}},"line":53},"13":{"name":"(anonymous_13)","decl":{"start":{"line":56,"column":2},"end":{"line":56,"column":3}},"loc":{"start":{"line":56,"column":13},"end":{"line":58,"column":3}},"line":56},"14":{"name":"(anonymous_14)","decl":{"start":{"line":59,"column":2},"end":{"line":59,"column":3}},"loc":{"start":{"line":59,"column":12},"end":{"line":61,"column":3}},"line":59},"15":{"name":"(anonymous_15)","decl":{"start":{"line":62,"column":2},"end":{"line":62,"column":3}},"loc":{"start":{"line":62,"column":11},"end":{"line":64,"column":3}},"line":62},"16":{"name":"(anonymous_16)","decl":{"start":{"line":65,"column":2},"end":{"line":65,"column":3}},"loc":{"start":{"line":65,"column":8},"end":{"line":67,"column":3}},"line":65},"17":{"name":"(anonymous_17)","decl":{"start":{"line":68,"column":2},"end":{"line":68,"column":3}},"loc":{"start":{"line":68,"column":8},"end":{"line":70,"column":3}},"line":68},"18":{"name":"(anonymous_18)","decl":{"start":{"line":71,"column":2},"end":{"line":71,"column":3}},"loc":{"start":{"line":71,"column":8},"end":{"line":73,"column":3}},"line":71},"19":{"name":"(anonymous_19)","decl":{"start":{"line":74,"column":2},"end":{"line":74,"column":3}},"loc":{"start":{"line":74,"column":10},"end":{"line":76,"column":3}},"line":74},"20":{"name":"(anonymous_20)","decl":{"start":{"line":77,"column":2},"end":{"line":77,"column":3}},"loc":{"start":{"line":77,"column":11},"end":{"line":79,"column":3}},"line":77},"21":{"name":"(anonymous_21)","decl":{"start":{"line":80,"column":2},"end":{"line":80,"column":3}},"loc":{"start":{"line":80,"column":15},"end":{"line":82,"column":3}},"line":80},"22":{"name":"(anonymous_22)","decl":{"start":{"line":83,"column":2},"end":{"line":83,"column":3}},"loc":{"start":{"line":83,"column":16},"end":{"line":85,"column":3}},"line":83},"23":{"name":"(anonymous_23)","decl":{"start":{"line":86,"column":2},"end":{"line":86,"column":3}},"loc":{"start":{"line":86,"column":18},"end":{"line":88,"column":3}},"line":86},"24":{"name":"(anonymous_24)","decl":{"start":{"line":89,"column":2},"end":{"line":89,"column":3}},"loc":{"start":{"line":89,"column":20},"end":{"line":91,"column":3}},"line":89},"25":{"name":"(anonymous_25)","decl":{"start":{"line":92,"column":2},"end":{"line":92,"column":3}},"loc":{"start":{"line":92,"column":21},"end":{"line":94,"column":3}},"line":92},"26":{"name":"(anonymous_26)","decl":{"start":{"line":95,"column":2},"end":{"line":95,"column":3}},"loc":{"start":{"line":95,"column":24},"end":{"line":97,"column":3}},"line":95},"27":{"name":"(anonymous_27)","decl":{"start":{"line":98,"column":2},"end":{"line":98,"column":3}},"loc":{"start":{"line":98,"column":23},"end":{"line":100,"column":3}},"line":98},"28":{"name":"(anonymous_28)","decl":{"start":{"line":101,"column":2},"end":{"line":101,"column":3}},"loc":{"start":{"line":101,"column":19},"end":{"line":103,"column":3}},"line":101},"29":{"name":"(anonymous_29)","decl":{"start":{"line":109,"column":2},"end":{"line":109,"column":3}},"loc":{"start":{"line":109,"column":18},"end":{"line":111,"column":3}},"line":109},"30":{"name":"(anonymous_30)","decl":{"start":{"line":117,"column":2},"end":{"line":117,"column":3}},"loc":{"start":{"line":117,"column":23},"end":{"line":119,"column":3}},"line":117},"31":{"name":"(anonymous_31)","decl":{"start":{"line":120,"column":2},"end":{"line":120,"column":3}},"loc":{"start":{"line":120,"column":58},"end":{"line":122,"column":3}},"line":120},"32":{"name":"(anonymous_32)","decl":{"start":{"line":123,"column":2},"end":{"line":123,"column":3}},"loc":{"start":{"line":123,"column":23},"end":{"line":125,"column":3}},"line":123},"33":{"name":"(anonymous_33)","decl":{"start":{"line":126,"column":2},"end":{"line":126,"column":3}},"loc":{"start":{"line":126,"column":26},"end":{"line":128,"column":3}},"line":126},"34":{"name":"(anonymous_34)","decl":{"start":{"line":129,"column":2},"end":{"line":129,"column":3}},"loc":{"start":{"line":129,"column":36},"end":{"line":131,"column":3}},"line":129},"35":{"name":"(anonymous_35)","decl":{"start":{"line":132,"column":2},"end":{"line":132,"column":3}},"loc":{"start":{"line":132,"column":33},"end":{"line":134,"column":3}},"line":132},"36":{"name":"(anonymous_36)","decl":{"start":{"line":135,"column":2},"end":{"line":135,"column":3}},"loc":{"start":{"line":135,"column":26},"end":{"line":137,"column":3}},"line":135},"37":{"name":"(anonymous_37)","decl":{"start":{"line":138,"column":2},"end":{"line":138,"column":3}},"loc":{"start":{"line":138,"column":29},"end":{"line":140,"column":3}},"line":138},"38":{"name":"(anonymous_38)","decl":{"start":{"line":141,"column":2},"end":{"line":141,"column":3}},"loc":{"start":{"line":141,"column":32},"end":{"line":143,"column":3}},"line":141},"39":{"name":"(anonymous_39)","decl":{"start":{"line":144,"column":2},"end":{"line":144,"column":3}},"loc":{"start":{"line":144,"column":31},"end":{"line":146,"column":3}},"line":144},"40":{"name":"(anonymous_40)","decl":{"start":{"line":147,"column":2},"end":{"line":147,"column":3}},"loc":{"start":{"line":147,"column":16},"end":{"line":149,"column":3}},"line":147},"41":{"name":"(anonymous_41)","decl":{"start":{"line":150,"column":2},"end":{"line":150,"column":3}},"loc":{"start":{"line":150,"column":17},"end":{"line":152,"column":3}},"line":150},"42":{"name":"(anonymous_42)","decl":{"start":{"line":153,"column":2},"end":{"line":153,"column":3}},"loc":{"start":{"line":153,"column":20},"end":{"line":155,"column":3}},"line":153},"43":{"name":"(anonymous_43)","decl":{"start":{"line":156,"column":2},"end":{"line":156,"column":3}},"loc":{"start":{"line":156,"column":19},"end":{"line":158,"column":3}},"line":156},"44":{"name":"(anonymous_44)","decl":{"start":{"line":159,"column":2},"end":{"line":159,"column":3}},"loc":{"start":{"line":159,"column":26},"end":{"line":161,"column":3}},"line":159},"45":{"name":"(anonymous_45)","decl":{"start":{"line":162,"column":2},"end":{"line":162,"column":3}},"loc":{"start":{"line":162,"column":29},"end":{"line":164,"column":3}},"line":162},"46":{"name":"(anonymous_46)","decl":{"start":{"line":165,"column":2},"end":{"line":165,"column":3}},"loc":{"start":{"line":165,"column":62},"end":{"line":188,"column":3}},"line":165},"47":{"name":"(anonymous_47)","decl":{"start":{"line":189,"column":2},"end":{"line":189,"column":3}},"loc":{"start":{"line":189,"column":19},"end":{"line":191,"column":3}},"line":189},"48":{"name":"(anonymous_48)","decl":{"start":{"line":192,"column":2},"end":{"line":192,"column":3}},"loc":{"start":{"line":192,"column":26},"end":{"line":194,"column":3}},"line":192},"49":{"name":"(anonymous_49)","decl":{"start":{"line":195,"column":2},"end":{"line":195,"column":3}},"loc":{"start":{"line":195,"column":9},"end":{"line":197,"column":3}},"line":195},"50":{"name":"(anonymous_50)","decl":{"start":{"line":198,"column":2},"end":{"line":198,"column":3}},"loc":{"start":{"line":198,"column":9},"end":{"line":200,"column":3}},"line":198},"51":{"name":"(anonymous_51)","decl":{"start":{"line":201,"column":2},"end":{"line":201,"column":3}},"loc":{"start":{"line":201,"column":8},"end":{"line":203,"column":3}},"line":201},"52":{"name":"(anonymous_52)","decl":{"start":{"line":204,"column":2},"end":{"line":204,"column":3}},"loc":{"start":{"line":204,"column":9},"end":{"line":206,"column":3}},"line":204},"53":{"name":"(anonymous_53)","decl":{"start":{"line":207,"column":2},"end":{"line":207,"column":3}},"loc":{"start":{"line":207,"column":9},"end":{"line":209,"column":3}},"line":207},"54":{"name":"(anonymous_54)","decl":{"start":{"line":210,"column":2},"end":{"line":210,"column":3}},"loc":{"start":{"line":210,"column":10},"end":{"line":212,"column":3}},"line":210},"55":{"name":"(anonymous_55)","decl":{"start":{"line":213,"column":2},"end":{"line":213,"column":3}},"loc":{"start":{"line":213,"column":8},"end":{"line":215,"column":3}},"line":213},"56":{"name":"(anonymous_56)","decl":{"start":{"line":216,"column":2},"end":{"line":216,"column":3}},"loc":{"start":{"line":216,"column":9},"end":{"line":218,"column":3}},"line":216},"57":{"name":"(anonymous_57)","decl":{"start":{"line":219,"column":2},"end":{"line":219,"column":3}},"loc":{"start":{"line":219,"column":9},"end":{"line":221,"column":3}},"line":219},"58":{"name":"(anonymous_58)","decl":{"start":{"line":222,"column":2},"end":{"line":222,"column":3}},"loc":{"start":{"line":222,"column":10},"end":{"line":224,"column":3}},"line":222},"59":{"name":"(anonymous_59)","decl":{"start":{"line":225,"column":2},"end":{"line":225,"column":3}},"loc":{"start":{"line":225,"column":8},"end":{"line":227,"column":3}},"line":225},"60":{"name":"(anonymous_60)","decl":{"start":{"line":228,"column":2},"end":{"line":228,"column":3}},"loc":{"start":{"line":228,"column":9},"end":{"line":230,"column":3}},"line":228},"61":{"name":"(anonymous_61)","decl":{"start":{"line":231,"column":2},"end":{"line":231,"column":3}},"loc":{"start":{"line":231,"column":9},"end":{"line":233,"column":3}},"line":231},"62":{"name":"(anonymous_62)","decl":{"start":{"line":234,"column":2},"end":{"line":234,"column":3}},"loc":{"start":{"line":234,"column":21},"end":{"line":236,"column":3}},"line":234},"63":{"name":"(anonymous_63)","decl":{"start":{"line":237,"column":2},"end":{"line":237,"column":3}},"loc":{"start":{"line":237,"column":28},"end":{"line":239,"column":3}},"line":237},"64":{"name":"(anonymous_64)","decl":{"start":{"line":240,"column":2},"end":{"line":240,"column":3}},"loc":{"start":{"line":240,"column":10},"end":{"line":242,"column":3}},"line":240},"65":{"name":"(anonymous_65)","decl":{"start":{"line":249,"column":2},"end":{"line":249,"column":3}},"loc":{"start":{"line":249,"column":9},"end":{"line":251,"column":3}},"line":249},"66":{"name":"(anonymous_66)","decl":{"start":{"line":258,"column":2},"end":{"line":258,"column":3}},"loc":{"start":{"line":258,"column":11},"end":{"line":260,"column":3}},"line":258},"67":{"name":"(anonymous_67)","decl":{"start":{"line":266,"column":2},"end":{"line":266,"column":3}},"loc":{"start":{"line":266,"column":8},"end":{"line":268,"column":3}},"line":266},"68":{"name":"(anonymous_68)","decl":{"start":{"line":274,"column":2},"end":{"line":274,"column":3}},"loc":{"start":{"line":274,"column":8},"end":{"line":276,"column":3}},"line":274},"69":{"name":"(anonymous_69)","decl":{"start":{"line":277,"column":2},"end":{"line":277,"column":3}},"loc":{"start":{"line":277,"column":8},"end":{"line":279,"column":3}},"line":277},"70":{"name":"(anonymous_70)","decl":{"start":{"line":280,"column":2},"end":{"line":280,"column":3}},"loc":{"start":{"line":280,"column":10},"end":{"line":282,"column":3}},"line":280},"71":{"name":"(anonymous_71)","decl":{"start":{"line":283,"column":2},"end":{"line":283,"column":3}},"loc":{"start":{"line":283,"column":8},"end":{"line":285,"column":3}},"line":283},"72":{"name":"(anonymous_72)","decl":{"start":{"line":286,"column":2},"end":{"line":286,"column":3}},"loc":{"start":{"line":286,"column":8},"end":{"line":288,"column":3}},"line":286},"73":{"name":"(anonymous_73)","decl":{"start":{"line":289,"column":2},"end":{"line":289,"column":3}},"loc":{"start":{"line":289,"column":21},"end":{"line":291,"column":3}},"line":289},"74":{"name":"(anonymous_74)","decl":{"start":{"line":292,"column":2},"end":{"line":292,"column":3}},"loc":{"start":{"line":292,"column":28},"end":{"line":294,"column":3}},"line":292},"75":{"name":"(anonymous_75)","decl":{"start":{"line":295,"column":2},"end":{"line":295,"column":3}},"loc":{"start":{"line":295,"column":21},"end":{"line":297,"column":3}},"line":295},"76":{"name":"(anonymous_76)","decl":{"start":{"line":298,"column":2},"end":{"line":298,"column":3}},"loc":{"start":{"line":298,"column":28},"end":{"line":300,"column":3}},"line":298},"77":{"name":"(anonymous_77)","decl":{"start":{"line":301,"column":2},"end":{"line":301,"column":3}},"loc":{"start":{"line":301,"column":20},"end":{"line":303,"column":3}},"line":301},"78":{"name":"(anonymous_78)","decl":{"start":{"line":304,"column":2},"end":{"line":304,"column":3}},"loc":{"start":{"line":304,"column":27},"end":{"line":306,"column":3}},"line":304},"79":{"name":"(anonymous_79)","decl":{"start":{"line":307,"column":2},"end":{"line":307,"column":3}},"loc":{"start":{"line":307,"column":31},"end":{"line":309,"column":3}},"line":307},"80":{"name":"(anonymous_80)","decl":{"start":{"line":310,"column":2},"end":{"line":310,"column":3}},"loc":{"start":{"line":310,"column":32},"end":{"line":312,"column":3}},"line":310},"81":{"name":"(anonymous_81)","decl":{"start":{"line":317,"column":2},"end":{"line":317,"column":3}},"loc":{"start":{"line":317,"column":46},"end":{"line":321,"column":3}},"line":317},"82":{"name":"(anonymous_82)","decl":{"start":{"line":322,"column":2},"end":{"line":322,"column":3}},"loc":{"start":{"line":322,"column":46},"end":{"line":331,"column":3}},"line":322},"83":{"name":"(anonymous_83)","decl":{"start":{"line":332,"column":2},"end":{"line":332,"column":3}},"loc":{"start":{"line":332,"column":13},"end":{"line":334,"column":3}},"line":332},"84":{"name":"(anonymous_84)","decl":{"start":{"line":335,"column":2},"end":{"line":335,"column":3}},"loc":{"start":{"line":335,"column":17},"end":{"line":337,"column":3}},"line":335},"85":{"name":"(anonymous_85)","decl":{"start":{"line":338,"column":2},"end":{"line":338,"column":3}},"loc":{"start":{"line":338,"column":20},"end":{"line":340,"column":3}},"line":338},"86":{"name":"(anonymous_86)","decl":{"start":{"line":341,"column":2},"end":{"line":341,"column":3}},"loc":{"start":{"line":341,"column":22},"end":{"line":346,"column":3}},"line":341},"87":{"name":"(anonymous_87)","decl":{"start":{"line":347,"column":2},"end":{"line":347,"column":3}},"loc":{"start":{"line":347,"column":12},"end":{"line":349,"column":3}},"line":347}},"branchMap":{"0":{"loc":{"start":{"line":120,"column":33},"end":{"line":120,"column":56}},"type":"default-arg","locations":[{"start":{"line":120,"column":51},"end":{"line":120,"column":56}}],"line":120},"1":{"loc":{"start":{"line":165,"column":21},"end":{"line":165,"column":60}},"type":"default-arg","locations":[{"start":{"line":165,"column":39},"end":{"line":165,"column":60}}],"line":165},"2":{"loc":{"start":{"line":167,"column":4},"end":{"line":186,"column":5}},"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":186,"column":5}},{"start":{"line":173,"column":11},"end":{"line":186,"column":5}}],"line":167},"3":{"loc":{"start":{"line":168,"column":6},"end":{"line":172,"column":7}},"type":"if","locations":[{"start":{"line":168,"column":6},"end":{"line":172,"column":7}},{"start":{"line":170,"column":13},"end":{"line":172,"column":7}}],"line":168},"4":{"loc":{"start":{"line":173,"column":11},"end":{"line":186,"column":5}},"type":"if","locations":[{"start":{"line":173,"column":11},"end":{"line":186,"column":5}},{"start":{"line":179,"column":11},"end":{"line":186,"column":5}}],"line":173},"5":{"loc":{"start":{"line":174,"column":6},"end":{"line":178,"column":7}},"type":"if","locations":[{"start":{"line":174,"column":6},"end":{"line":178,"column":7}},{"start":{"line":176,"column":13},"end":{"line":178,"column":7}}],"line":174},"6":{"loc":{"start":{"line":179,"column":11},"end":{"line":186,"column":5}},"type":"if","locations":[{"start":{"line":179,"column":11},"end":{"line":186,"column":5}},{"start":{},"end":{}}],"line":179},"7":{"loc":{"start":{"line":180,"column":28},"end":{"line":180,"column":52}},"type":"cond-expr","locations":[{"start":{"line":180,"column":36},"end":{"line":180,"column":42}},{"start":{"line":180,"column":45},"end":{"line":180,"column":52}}],"line":180},"8":{"loc":{"start":{"line":181,"column":6},"end":{"line":185,"column":7}},"type":"if","locations":[{"start":{"line":181,"column":6},"end":{"line":185,"column":7}},{"start":{"line":183,"column":13},"end":{"line":185,"column":7}}],"line":181},"9":{"loc":{"start":{"line":317,"column":26},"end":{"line":317,"column":44}},"type":"default-arg","locations":[{"start":{"line":317,"column":42},"end":{"line":317,"column":44}}],"line":317},"10":{"loc":{"start":{"line":322,"column":27},"end":{"line":322,"column":44}},"type":"default-arg","locations":[{"start":{"line":322,"column":42},"end":{"line":322,"column":44}}],"line":322},"11":{"loc":{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},"type":"if","locations":[{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},{"start":{},"end":{}}],"line":325},"12":{"loc":{"start":{"line":342,"column":4},"end":{"line":344,"column":5}},"type":"if","locations":[{"start":{"line":342,"column":4},"end":{"line":344,"column":5}},{"start":{},"end":{}}],"line":342}},"s":{"0":79,"1":79,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":178,"13":0,"14":608,"15":201,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":1,"97":3,"98":3,"99":3,"100":15,"101":15,"102":15,"103":12,"104":3,"105":3,"106":3,"107":14,"108":0,"109":0,"110":0,"111":0,"112":0,"113":2},"f":{"0":79,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":178,"13":0,"14":608,"15":201,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":3,"82":15,"83":14,"84":0,"85":0,"86":0,"87":2},"b":{"0":[0],"1":[0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0],"10":[15],"11":[12,3],"12":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/base-value-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CustomData, Nullable } from '@univerjs/core';\nimport { FormulaAstLRU } from '../../basics/cache-lru';\nimport { ConcatenateType } from '../../basics/common';\nimport { ErrorType } from '../../basics/error-type';\nimport { ObjectClassType } from '../../basics/object-class-type';\nimport { compareToken } from '../../basics/token';\n\nexport type callbackMapFnType = (currentValue: BaseValueObject, row: number, column: number) => BaseValueObject;\n\nexport interface IArrayValueObject {\n    calculateValueList: Nullable<BaseValueObject>[][];\n    rowCount: number;\n    columnCount: number;\n    unitId: string;\n    sheetId: string;\n    row: number;\n    column: number;\n}\nexport class BaseValueObject extends ObjectClassType {\n    private _customData: CustomData;\n\n    constructor(private _rawValue: string | number | boolean) {\n        super();\n    }\n\n    override isValueObject() {\n        return true;\n    }\n\n    toUnitRange() {\n        return {\n            range: {\n                startColumn: -1,\n                startRow: -1,\n                endRow: -1,\n                endColumn: -1,\n            },\n            sheetId: '',\n            unitId: '',\n        };\n    }\n\n    getValue(): string | number | boolean {\n        /** abstract */\n        return 0;\n    }\n\n    getArrayValue(): Nullable<BaseValueObject>[][] {\n        /** abstract */\n        return [];\n    }\n\n    setValue(value: string | number | boolean) {\n        /** abstract */\n    }\n\n    setArrayValue(value: BaseValueObject[][]) {\n        /** abstract */\n    }\n\n    withCustomData(data: CustomData) {\n        this._customData = data;\n        return this;\n    }\n\n    getCustomData() {\n        return this._customData;\n    }\n\n    isCube() {\n        return false;\n    }\n\n    isString() {\n        return false;\n    }\n\n    isNumber() {\n        return false;\n    }\n\n    isBoolean() {\n        return false;\n    }\n\n    isLambda() {\n        return false;\n    }\n\n    override isError() {\n        return false;\n    }\n\n    isNull() {\n        return false;\n    }\n\n    sum(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    max(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    min(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    count(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    countA(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    countBlank(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    getNegative(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    getReciprocal(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    plus(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    minus(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    multiply(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    divided(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    mod(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    /**\n     * return every value in the array after the callback function, excluding the error value\n     * @param callbackFn\n     * @returns\n     */\n    map(callbackFn: callbackMapFnType): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.NAME);\n    }\n\n    /**\n     * return every value in the array after the callback function\n     * @param callbackFn\n     * @returns\n     */\n    mapValue(callbackFn: callbackMapFnType): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.NAME);\n    }\n\n    compare(valueObject: BaseValueObject, operator: compareToken, isCaseSensitive: boolean = false): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.NAME);\n    }\n\n    isEqual(valueObject: BaseValueObject): BaseValueObject {\n        return this.compare(valueObject as BaseValueObject, compareToken.EQUALS);\n    }\n\n    isNotEqual(valueObject: BaseValueObject): BaseValueObject {\n        return this.compare(valueObject as BaseValueObject, compareToken.NOT_EQUAL);\n    }\n\n    isGreaterThanOrEqual(valueObject: BaseValueObject): BaseValueObject {\n        return this.compare(valueObject as BaseValueObject, compareToken.GREATER_THAN_OR_EQUAL);\n    }\n\n    isLessThanOrEqual(valueObject: BaseValueObject): BaseValueObject {\n        return this.compare(valueObject as BaseValueObject, compareToken.LESS_THAN_OR_EQUAL);\n    }\n\n    isLessThan(valueObject: BaseValueObject): BaseValueObject {\n        return this.compare(valueObject as BaseValueObject, compareToken.LESS_THAN);\n    }\n\n    isGreaterThan(valueObject: BaseValueObject): BaseValueObject {\n        return this.compare(valueObject as BaseValueObject, compareToken.GREATER_THAN);\n    }\n\n    concatenateFront(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.NAME);\n    }\n\n    concatenateBack(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.NAME);\n    }\n\n    plusBy(value: string | number | boolean): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    minusBy(value: string | number | boolean): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    multiplyBy(value: string | number | boolean): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    dividedBy(value: string | number | boolean): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    modInverse(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    compareBy(value: string | number | boolean, operator: compareToken): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.NAME);\n    }\n\n    concatenate(value: string | number | boolean, concatenateType = ConcatenateType.FRONT): string {\n        let currentValue = this.getValue().toString();\n        if (typeof value === 'string') {\n            if (concatenateType === ConcatenateType.FRONT) {\n                currentValue = value + currentValue;\n            } else {\n                currentValue += value;\n            }\n        } else if (typeof value === 'number') {\n            if (concatenateType === ConcatenateType.FRONT) {\n                currentValue = value.toString() + currentValue;\n            } else {\n                currentValue += value.toString();\n            }\n        } else if (typeof value === 'boolean') {\n            const booleanString = value ? 'TRUE' : 'FALSE';\n            if (concatenateType === ConcatenateType.FRONT) {\n                currentValue = booleanString + currentValue;\n            } else {\n                currentValue += booleanString;\n            }\n        }\n\n        return currentValue;\n    }\n\n    pow(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    powInverse(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    sqrt(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    cbrt(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    cos(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    cosh(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    acos(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    acosh(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    sin(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    sinh(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    asin(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    asinh(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    tan(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    tanh(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    atan(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    atan2(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    atan2Inverse(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    atanh(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    /**\n     * Calculate the mean of the entire array.\n     *\n     * reference https://numpy.org/doc/stable/reference/generated/numpy.mean.html#numpy.mean\n     *\n     */\n    mean(): BaseValueObject {\n        /** abstract */\n        return this;\n    }\n\n    /**\n     * Calculate the median of the entire array.\n     *\n     * reference https://numpy.org/doc/stable/reference/generated/numpy.median.html\n     *\n     */\n    median(): BaseValueObject {\n        /** abstract */\n        return this;\n    }\n\n    /**\n     * Calculate the variance of the entire array.\n     *\n     * reference https://numpy.org/doc/stable/reference/generated/numpy.var.html\n     */\n    var(): BaseValueObject {\n        /** abstract */\n        return this;\n    }\n\n    /**\n     * Calculate the standard deviation of the entire array.\n     *\n     * reference https://numpy.org/doc/stable/reference/generated/numpy.std.html\n     */\n    std(): BaseValueObject {\n        /** abstract */\n        return this;\n    }\n\n    log(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    log10(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    exp(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    abs(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    round(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    roundInverse(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    floor(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    floorInverse(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    ceil(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    ceilInverse(valueObject: BaseValueObject): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    convertToNumberObjectValue(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    convertToBooleanObjectValue(): BaseValueObject {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n}\n\nconst Error_CACHE_LRU_COUNT = 1000;\n\nexport const ErrorValueObjectCache = new FormulaAstLRU<ErrorValueObject>(Error_CACHE_LRU_COUNT);\nexport class ErrorValueObject extends BaseValueObject {\n    static create(errorType: ErrorType, errorContent: string = '') {\n        const key = `${errorType}-${errorContent}`;\n        const cached = ErrorValueObjectCache.get(key);\n        if (cached) {\n            return cached;\n        }\n        const instance = new ErrorValueObject(errorType, errorContent);\n        ErrorValueObjectCache.set(key, instance);\n        return instance;\n    }\n\n    constructor(\n        private _errorType: ErrorType,\n        private _errorContent: string = ''\n    ) {\n        super(_errorType);\n    }\n\n    override getValue() {\n        return this._errorType;\n    }\n\n    getErrorType() {\n        return this._errorType;\n    }\n\n    getErrorContent() {\n        return this._errorContent;\n    }\n\n    override isEqualType(object: ObjectClassType) {\n        if ((object as ErrorValueObject).getErrorType() === this.getErrorType()) {\n            return true;\n        }\n        return false;\n    }\n\n    override isError() {\n        return true;\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"99674864e405c9d4eb23b712dc948445ddd6c270"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/date.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/date.ts","statementMap":{"0":{"start":{"line":4,"column":35},"end":{"line":4,"column":49}},"1":{"start":{"line":5,"column":34},"end":{"line":5,"column":52}},"2":{"start":{"line":6,"column":35},"end":{"line":6,"column":45}},"3":{"start":{"line":8,"column":19},"end":{"line":8,"column":49}},"4":{"start":{"line":9,"column":22},"end":{"line":9,"column":53}},"5":{"start":{"line":10,"column":20},"end":{"line":10,"column":81}},"6":{"start":{"line":11,"column":22},"end":{"line":11,"column":74}},"7":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":23}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":39}},"10":{"start":{"line":18,"column":19},"end":{"line":18,"column":58}},"11":{"start":{"line":19,"column":22},"end":{"line":19,"column":62}},"12":{"start":{"line":20,"column":27},"end":{"line":20,"column":62}},"13":{"start":{"line":21,"column":22},"end":{"line":21,"column":58}},"14":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"15":{"start":{"line":23,"column":4},"end":{"line":23,"column":23}},"16":{"start":{"line":25,"column":2},"end":{"line":25,"column":27}},"17":{"start":{"line":28,"column":19},"end":{"line":28,"column":49}},"18":{"start":{"line":29,"column":22},"end":{"line":29,"column":53}},"19":{"start":{"line":30,"column":22},"end":{"line":30,"column":44}},"20":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"21":{"start":{"line":32,"column":4},"end":{"line":32,"column":23}},"22":{"start":{"line":34,"column":21},"end":{"line":34,"column":85}},"23":{"start":{"line":35,"column":2},"end":{"line":35,"column":20}},"24":{"start":{"line":38,"column":19},"end":{"line":38,"column":58}},"25":{"start":{"line":39,"column":22},"end":{"line":39,"column":62}},"26":{"start":{"line":40,"column":22},"end":{"line":40,"column":32}},"27":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"28":{"start":{"line":42,"column":4},"end":{"line":42,"column":23}},"29":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"30":{"start":{"line":45,"column":4},"end":{"line":45,"column":27}},"31":{"start":{"line":47,"column":21},"end":{"line":47,"column":85}},"32":{"start":{"line":48,"column":2},"end":{"line":48,"column":20}},"33":{"start":{"line":51,"column":15},"end":{"line":51,"column":33}},"34":{"start":{"line":52,"column":16},"end":{"line":52,"column":65}},"35":{"start":{"line":53,"column":14},"end":{"line":53,"column":56}},"36":{"start":{"line":54,"column":2},"end":{"line":54,"column":35}},"37":{"start":{"line":57,"column":16},"end":{"line":57,"column":74}},"38":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"39":{"start":{"line":59,"column":4},"end":{"line":59,"column":17}},"40":{"start":{"line":61,"column":28},"end":{"line":61,"column":73}},"41":{"start":{"line":62,"column":39},"end":{"line":62,"column":71}},"42":{"start":{"line":63,"column":2},"end":{"line":65,"column":3}},"43":{"start":{"line":64,"column":4},"end":{"line":64,"column":17}},"44":{"start":{"line":66,"column":15},"end":{"line":66,"column":41}},"45":{"start":{"line":67,"column":16},"end":{"line":67,"column":73}},"46":{"start":{"line":68,"column":14},"end":{"line":68,"column":64}},"47":{"start":{"line":69,"column":31},"end":{"line":69,"column":56}},"48":{"start":{"line":70,"column":21},"end":{"line":70,"column":100}},"49":{"start":{"line":70,"column":71},"end":{"line":70,"column":89}},"50":{"start":{"line":71,"column":2},"end":{"line":71,"column":45}},"51":{"start":{"line":74,"column":2},"end":{"line":74,"column":33}},"52":{"start":{"line":77,"column":2},"end":{"line":77,"column":34}},"53":{"start":{"line":80,"column":2},"end":{"line":80,"column":33}},"54":{"start":{"line":83,"column":2},"end":{"line":83,"column":31}},"55":{"start":{"line":85,"column":25},"end":{"line":114,"column":1}},"56":{"start":{"line":116,"column":2},"end":{"line":118,"column":3}},"57":{"start":{"line":117,"column":4},"end":{"line":117,"column":16}},"58":{"start":{"line":119,"column":2},"end":{"line":121,"column":3}},"59":{"start":{"line":120,"column":4},"end":{"line":120,"column":16}},"60":{"start":{"line":122,"column":2},"end":{"line":122,"column":15}},"61":{"start":{"line":125,"column":2},"end":{"line":127,"column":3}},"62":{"start":{"line":126,"column":4},"end":{"line":126,"column":14}},"63":{"start":{"line":128,"column":2},"end":{"line":140,"column":3}},"64":{"start":{"line":129,"column":19},"end":{"line":129,"column":21}},"65":{"start":{"line":130,"column":4},"end":{"line":138,"column":5}},"66":{"start":{"line":130,"column":17},"end":{"line":130,"column":18}},"67":{"start":{"line":131,"column":6},"end":{"line":137,"column":7}},"68":{"start":{"line":132,"column":8},"end":{"line":136,"column":9}},"69":{"start":{"line":133,"column":10},"end":{"line":133,"column":25}},"70":{"start":{"line":135,"column":10},"end":{"line":135,"column":25}},"71":{"start":{"line":139,"column":4},"end":{"line":139,"column":18}},"72":{"start":{"line":141,"column":2},"end":{"line":141,"column":49}},"73":{"start":{"line":144,"column":23},"end":{"line":144,"column":47}},"74":{"start":{"line":145,"column":16},"end":{"line":145,"column":49}},"75":{"start":{"line":146,"column":14},"end":{"line":146,"column":45}},"76":{"start":{"line":147,"column":28},"end":{"line":147,"column":53}},"77":{"start":{"line":148,"column":20},"end":{"line":148,"column":21}},"78":{"start":{"line":149,"column":19},"end":{"line":149,"column":100}},"79":{"start":{"line":150,"column":2},"end":{"line":160,"column":3}},"80":{"start":{"line":150,"column":15},"end":{"line":150,"column":16}},"81":{"start":{"line":151,"column":36},"end":{"line":151,"column":57}},"82":{"start":{"line":152,"column":4},"end":{"line":154,"column":5}},"83":{"start":{"line":152,"column":67},"end":{"line":152,"column":111}},"84":{"start":{"line":153,"column":6},"end":{"line":153,"column":15}},"85":{"start":{"line":155,"column":20},"end":{"line":155,"column":73}},"86":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"87":{"start":{"line":157,"column":6},"end":{"line":157,"column":15}},"88":{"start":{"line":159,"column":4},"end":{"line":159,"column":18}},"89":{"start":{"line":161,"column":2},"end":{"line":161,"column":51}},"90":{"start":{"line":164,"column":23},"end":{"line":164,"column":47}},"91":{"start":{"line":165,"column":33},"end":{"line":165,"column":66}},"92":{"start":{"line":166,"column":31},"end":{"line":166,"column":53}},"93":{"start":{"line":167,"column":13},"end":{"line":167,"column":34}},"94":{"start":{"line":168,"column":2},"end":{"line":183,"column":3}},"95":{"start":{"line":168,"column":15},"end":{"line":168,"column":16}},"96":{"start":{"line":169,"column":36},"end":{"line":169,"column":109}},"97":{"start":{"line":170,"column":4},"end":{"line":172,"column":5}},"98":{"start":{"line":171,"column":6},"end":{"line":171,"column":52}},"99":{"start":{"line":173,"column":4},"end":{"line":176,"column":5}},"100":{"start":{"line":173,"column":67},"end":{"line":173,"column":111}},"101":{"start":{"line":174,"column":6},"end":{"line":174,"column":13}},"102":{"start":{"line":175,"column":6},"end":{"line":175,"column":15}},"103":{"start":{"line":177,"column":20},"end":{"line":177,"column":73}},"104":{"start":{"line":178,"column":4},"end":{"line":181,"column":5}},"105":{"start":{"line":179,"column":6},"end":{"line":179,"column":13}},"106":{"start":{"line":180,"column":6},"end":{"line":180,"column":15}},"107":{"start":{"line":182,"column":4},"end":{"line":182,"column":53}},"108":{"start":{"line":184,"column":2},"end":{"line":184,"column":32}},"109":{"start":{"line":187,"column":2},"end":{"line":189,"column":3}},"110":{"start":{"line":188,"column":4},"end":{"line":188,"column":30}},"111":{"start":{"line":190,"column":20},"end":{"line":190,"column":49}},"112":{"start":{"line":191,"column":2},"end":{"line":215,"column":3}},"113":{"start":{"line":193,"column":4},"end":{"line":201,"column":5}},"114":{"start":{"line":194,"column":6},"end":{"line":194,"column":56}},"115":{"start":{"line":195,"column":11},"end":{"line":201,"column":5}},"116":{"start":{"line":196,"column":6},"end":{"line":196,"column":56}},"117":{"start":{"line":197,"column":11},"end":{"line":201,"column":5}},"118":{"start":{"line":198,"column":6},"end":{"line":198,"column":30}},"119":{"start":{"line":200,"column":6},"end":{"line":200,"column":54}},"120":{"start":{"line":202,"column":4},"end":{"line":204,"column":5}},"121":{"start":{"line":203,"column":6},"end":{"line":203,"column":51}},"122":{"start":{"line":205,"column":4},"end":{"line":207,"column":5}},"123":{"start":{"line":206,"column":6},"end":{"line":206,"column":52}},"124":{"start":{"line":208,"column":4},"end":{"line":208,"column":23}},"125":{"start":{"line":210,"column":23},"end":{"line":210,"column":53}},"126":{"start":{"line":211,"column":4},"end":{"line":213,"column":5}},"127":{"start":{"line":212,"column":6},"end":{"line":212,"column":52}},"128":{"start":{"line":214,"column":4},"end":{"line":214,"column":22}},"129":{"start":{"line":218,"column":25},"end":{"line":218,"column":60}},"130":{"start":{"line":219,"column":13},"end":{"line":219,"column":48}},"131":{"start":{"line":220,"column":19},"end":{"line":220,"column":100}},"132":{"start":{"line":221,"column":26},"end":{"line":221,"column":67}},"133":{"start":{"line":222,"column":2},"end":{"line":224,"column":3}},"134":{"start":{"line":223,"column":4},"end":{"line":223,"column":48}},"135":{"start":{"line":225,"column":2},"end":{"line":225,"column":93}},"136":{"start":{"line":228,"column":2},"end":{"line":250,"column":3}},"137":{"start":{"line":230,"column":6},"end":{"line":230,"column":71}},"138":{"start":{"line":232,"column":6},"end":{"line":232,"column":73}},"139":{"start":{"line":234,"column":6},"end":{"line":237,"column":8}},"140":{"start":{"line":239,"column":6},"end":{"line":242,"column":8}},"141":{"start":{"line":244,"column":6},"end":{"line":244,"column":75}},"142":{"start":{"line":246,"column":6},"end":{"line":249,"column":8}},"143":{"start":{"line":253,"column":24},"end":{"line":253,"column":64}},"144":{"start":{"line":254,"column":20},"end":{"line":254,"column":85}},"145":{"start":{"line":255,"column":21},"end":{"line":255,"column":84}},"146":{"start":{"line":256,"column":17},"end":{"line":256,"column":75}},"147":{"start":{"line":257,"column":20},"end":{"line":257,"column":58}},"148":{"start":{"line":258,"column":16},"end":{"line":258,"column":77}},"149":{"start":{"line":259,"column":17},"end":{"line":259,"column":76}},"150":{"start":{"line":260,"column":15},"end":{"line":260,"column":69}},"151":{"start":{"line":261,"column":2},"end":{"line":268,"column":3}},"152":{"start":{"line":262,"column":30},"end":{"line":262,"column":74}},"153":{"start":{"line":263,"column":4},"end":{"line":265,"column":5}},"154":{"start":{"line":264,"column":6},"end":{"line":264,"column":20}},"155":{"start":{"line":266,"column":9},"end":{"line":268,"column":3}},"156":{"start":{"line":267,"column":4},"end":{"line":267,"column":18}},"157":{"start":{"line":269,"column":2},"end":{"line":278,"column":3}},"158":{"start":{"line":270,"column":4},"end":{"line":277,"column":5}},"159":{"start":{"line":271,"column":6},"end":{"line":271,"column":63}},"160":{"start":{"line":272,"column":6},"end":{"line":272,"column":45}},"161":{"start":{"line":273,"column":6},"end":{"line":273,"column":47}},"162":{"start":{"line":274,"column":6},"end":{"line":274,"column":40}},"163":{"start":{"line":276,"column":6},"end":{"line":276,"column":18}},"164":{"start":{"line":279,"column":22},"end":{"line":279,"column":49}},"165":{"start":{"line":280,"column":27},"end":{"line":280,"column":99}},"166":{"start":{"line":281,"column":25},"end":{"line":281,"column":92}},"167":{"start":{"line":282,"column":26},"end":{"line":282,"column":133}},"168":{"start":{"line":283,"column":20},"end":{"line":283,"column":95}},"169":{"start":{"line":284,"column":2},"end":{"line":287,"column":4}},"170":{"start":{"line":290,"column":24},"end":{"line":290,"column":64}},"171":{"start":{"line":291,"column":20},"end":{"line":291,"column":85}},"172":{"start":{"line":292,"column":22},"end":{"line":292,"column":60}},"173":{"start":{"line":293,"column":18},"end":{"line":293,"column":79}},"174":{"start":{"line":294,"column":20},"end":{"line":294,"column":73}},"175":{"start":{"line":295,"column":20},"end":{"line":295,"column":53}},"176":{"start":{"line":298,"column":2},"end":{"line":314,"column":3}},"177":{"start":{"line":299,"column":30},"end":{"line":299,"column":63}},"178":{"start":{"line":300,"column":27},"end":{"line":300,"column":64}},"179":{"start":{"line":301,"column":4},"end":{"line":301,"column":71}},"180":{"start":{"line":302,"column":4},"end":{"line":302,"column":65}},"181":{"start":{"line":303,"column":4},"end":{"line":305,"column":5}},"182":{"start":{"line":304,"column":6},"end":{"line":304,"column":41}},"183":{"start":{"line":307,"column":30},"end":{"line":307,"column":65}},"184":{"start":{"line":308,"column":27},"end":{"line":308,"column":62}},"185":{"start":{"line":309,"column":4},"end":{"line":309,"column":71}},"186":{"start":{"line":310,"column":4},"end":{"line":310,"column":65}},"187":{"start":{"line":311,"column":4},"end":{"line":313,"column":5}},"188":{"start":{"line":312,"column":6},"end":{"line":312,"column":41}},"189":{"start":{"line":315,"column":2},"end":{"line":318,"column":4}},"190":{"start":{"line":321,"column":24},"end":{"line":321,"column":64}},"191":{"start":{"line":322,"column":20},"end":{"line":322,"column":85}},"192":{"start":{"line":323,"column":21},"end":{"line":323,"column":84}},"193":{"start":{"line":324,"column":17},"end":{"line":324,"column":75}},"194":{"start":{"line":325,"column":22},"end":{"line":325,"column":60}},"195":{"start":{"line":326,"column":18},"end":{"line":326,"column":79}},"196":{"start":{"line":327,"column":19},"end":{"line":327,"column":78}},"197":{"start":{"line":328,"column":15},"end":{"line":328,"column":69}},"198":{"start":{"line":329,"column":2},"end":{"line":331,"column":3}},"199":{"start":{"line":330,"column":4},"end":{"line":330,"column":18}},"200":{"start":{"line":332,"column":2},"end":{"line":334,"column":3}},"201":{"start":{"line":333,"column":4},"end":{"line":333,"column":16}},"202":{"start":{"line":335,"column":22},"end":{"line":335,"column":49}},"203":{"start":{"line":336,"column":27},"end":{"line":336,"column":99}},"204":{"start":{"line":337,"column":25},"end":{"line":337,"column":92}},"205":{"start":{"line":338,"column":26},"end":{"line":338,"column":133}},"206":{"start":{"line":339,"column":20},"end":{"line":339,"column":95}},"207":{"start":{"line":340,"column":2},"end":{"line":343,"column":4}},"208":{"start":{"line":346,"column":2},"end":{"line":346,"column":64}},"209":{"start":{"line":349,"column":2},"end":{"line":349,"column":81}},"210":{"start":{"line":351,"column":21},"end":{"line":351,"column":69}},"211":{"start":{"line":352,"column":21},"end":{"line":352,"column":69}},"212":{"start":{"line":354,"column":2},"end":{"line":354,"column":70}},"213":{"start":{"line":357,"column":2},"end":{"line":357,"column":42}},"214":{"start":{"line":360,"column":2},"end":{"line":371,"column":3}},"215":{"start":{"line":364,"column":6},"end":{"line":364,"column":17}},"216":{"start":{"line":366,"column":6},"end":{"line":366,"column":81}},"217":{"start":{"line":368,"column":6},"end":{"line":368,"column":17}},"218":{"start":{"line":370,"column":6},"end":{"line":370,"column":16}},"219":{"start":{"line":374,"column":2},"end":{"line":374,"column":45}},"220":{"start":{"line":377,"column":13},"end":{"line":377,"column":34}},"221":{"start":{"line":378,"column":14},"end":{"line":378,"column":32}},"222":{"start":{"line":379,"column":14},"end":{"line":379,"column":31}},"223":{"start":{"line":380,"column":2},"end":{"line":388,"column":3}},"224":{"start":{"line":381,"column":4},"end":{"line":381,"column":23}},"225":{"start":{"line":382,"column":4},"end":{"line":382,"column":50}},"226":{"start":{"line":383,"column":4},"end":{"line":383,"column":33}},"227":{"start":{"line":384,"column":4},"end":{"line":384,"column":31}},"228":{"start":{"line":385,"column":4},"end":{"line":385,"column":49}},"229":{"start":{"line":387,"column":4},"end":{"line":387,"column":50}},"230":{"start":{"line":389,"column":2},"end":{"line":389,"column":14}}},"fnMap":{"0":{"name":"excelDateSerial","decl":{"start":{"line":7,"column":16},"end":{"line":7,"column":31}},"loc":{"start":{"line":7,"column":38},"end":{"line":16,"column":1}},"line":7},"1":{"name":"excelDateTimeSerial","decl":{"start":{"line":17,"column":16},"end":{"line":17,"column":35}},"loc":{"start":{"line":17,"column":42},"end":{"line":26,"column":1}},"line":17},"2":{"name":"excelSerialToDate","decl":{"start":{"line":27,"column":16},"end":{"line":27,"column":33}},"loc":{"start":{"line":27,"column":42},"end":{"line":36,"column":1}},"line":27},"3":{"name":"excelSerialToDateTime","decl":{"start":{"line":37,"column":16},"end":{"line":37,"column":37}},"loc":{"start":{"line":37,"column":46},"end":{"line":49,"column":1}},"line":37},"4":{"name":"formatDateDefault","decl":{"start":{"line":50,"column":16},"end":{"line":50,"column":33}},"loc":{"start":{"line":50,"column":40},"end":{"line":55,"column":1}},"line":50},"5":{"name":"isValidDateStr","decl":{"start":{"line":56,"column":16},"end":{"line":56,"column":30}},"loc":{"start":{"line":56,"column":40},"end":{"line":72,"column":1}},"line":56},"6":{"name":"(anonymous_6)","decl":{"start":{"line":70,"column":64},"end":{"line":70,"column":65}},"loc":{"start":{"line":70,"column":71},"end":{"line":70,"column":89}},"line":70},"7":{"name":"parseFormattedDate","decl":{"start":{"line":73,"column":16},"end":{"line":73,"column":34}},"loc":{"start":{"line":73,"column":42},"end":{"line":75,"column":1}},"line":73},"8":{"name":"parseFormattedValue","decl":{"start":{"line":76,"column":16},"end":{"line":76,"column":35}},"loc":{"start":{"line":76,"column":43},"end":{"line":78,"column":1}},"line":76},"9":{"name":"parseFormattedTime","decl":{"start":{"line":79,"column":16},"end":{"line":79,"column":34}},"loc":{"start":{"line":79,"column":42},"end":{"line":81,"column":1}},"line":79},"10":{"name":"isDate","decl":{"start":{"line":82,"column":16},"end":{"line":82,"column":22}},"loc":{"start":{"line":82,"column":31},"end":{"line":84,"column":1}},"line":82},"11":{"name":"isValidWeekend","decl":{"start":{"line":115,"column":16},"end":{"line":115,"column":30}},"loc":{"start":{"line":115,"column":40},"end":{"line":123,"column":1}},"line":115},"12":{"name":"getWeekendArray","decl":{"start":{"line":124,"column":16},"end":{"line":124,"column":31}},"loc":{"start":{"line":124,"column":41},"end":{"line":142,"column":1}},"line":124},"13":{"name":"countWorkingDays","decl":{"start":{"line":143,"column":16},"end":{"line":143,"column":32}},"loc":{"start":{"line":143,"column":100},"end":{"line":162,"column":1}},"line":143},"14":{"name":"(anonymous_14)","decl":{"start":{"line":152,"column":57},"end":{"line":152,"column":58}},"loc":{"start":{"line":152,"column":67},"end":{"line":152,"column":111}},"line":152},"15":{"name":"getDateSerialNumberByWorkingDays","decl":{"start":{"line":163,"column":16},"end":{"line":163,"column":48}},"loc":{"start":{"line":163,"column":108},"end":{"line":185,"column":1}},"line":163},"16":{"name":"(anonymous_16)","decl":{"start":{"line":173,"column":57},"end":{"line":173,"column":58}},"loc":{"start":{"line":173,"column":67},"end":{"line":173,"column":111}},"line":173},"17":{"name":"getDateSerialNumberByObject","decl":{"start":{"line":186,"column":16},"end":{"line":186,"column":43}},"loc":{"start":{"line":186,"column":64},"end":{"line":216,"column":1}},"line":186},"18":{"name":"getWeekDayByDateSerialNumber","decl":{"start":{"line":217,"column":16},"end":{"line":217,"column":44}},"loc":{"start":{"line":217,"column":63},"end":{"line":226,"column":1}},"line":217},"19":{"name":"getTwoDateDaysByBasis","decl":{"start":{"line":227,"column":16},"end":{"line":227,"column":37}},"loc":{"start":{"line":227,"column":89},"end":{"line":251,"column":1}},"line":227},"20":{"name":"getDaysByNASD","decl":{"start":{"line":252,"column":9},"end":{"line":252,"column":22}},"loc":{"start":{"line":252,"column":67},"end":{"line":288,"column":1}},"line":252},"21":{"name":"getDaysByActual","decl":{"start":{"line":289,"column":9},"end":{"line":289,"column":24}},"loc":{"start":{"line":289,"column":69},"end":{"line":319,"column":1}},"line":289},"22":{"name":"getDaysByEuropean","decl":{"start":{"line":320,"column":9},"end":{"line":320,"column":26}},"loc":{"start":{"line":320,"column":71},"end":{"line":344,"column":1}},"line":320},"23":{"name":"isLeapYear","decl":{"start":{"line":345,"column":16},"end":{"line":345,"column":26}},"loc":{"start":{"line":345,"column":33},"end":{"line":347,"column":1}},"line":345},"24":{"name":"isLeapYear1900","decl":{"start":{"line":348,"column":16},"end":{"line":348,"column":30}},"loc":{"start":{"line":348,"column":37},"end":{"line":350,"column":1}},"line":348},"25":{"name":"getDaysInMonth","decl":{"start":{"line":353,"column":16},"end":{"line":353,"column":30}},"loc":{"start":{"line":353,"column":44},"end":{"line":355,"column":1}},"line":353},"26":{"name":"getDaysInYear","decl":{"start":{"line":356,"column":16},"end":{"line":356,"column":29}},"loc":{"start":{"line":356,"column":36},"end":{"line":358,"column":1}},"line":356},"27":{"name":"getNormalYearDaysByBasis","decl":{"start":{"line":359,"column":16},"end":{"line":359,"column":40}},"loc":{"start":{"line":359,"column":66},"end":{"line":372,"column":1}},"line":359},"28":{"name":"lastDayOfMonth","decl":{"start":{"line":373,"column":16},"end":{"line":373,"column":30}},"loc":{"start":{"line":373,"column":49},"end":{"line":375,"column":1}},"line":373},"29":{"name":"dateAddMonths","decl":{"start":{"line":376,"column":16},"end":{"line":376,"column":29}},"loc":{"start":{"line":376,"column":44},"end":{"line":390,"column":1}},"line":376}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},{"start":{},"end":{}}],"line":12},"1":{"loc":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},{"start":{},"end":{}}],"line":22},"2":{"loc":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},{"start":{},"end":{}}],"line":31},"3":{"loc":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},{"start":{},"end":{}}],"line":41},"4":{"loc":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},{"start":{},"end":{}}],"line":44},"5":{"loc":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},{"start":{},"end":{}}],"line":58},"6":{"loc":{"start":{"line":63,"column":2},"end":{"line":65,"column":3}},"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":65,"column":3}},{"start":{},"end":{}}],"line":63},"7":{"loc":{"start":{"line":116,"column":2},"end":{"line":118,"column":3}},"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":118,"column":3}},{"start":{},"end":{}}],"line":116},"8":{"loc":{"start":{"line":116,"column":6},"end":{"line":116,"column":62}},"type":"binary-expr","locations":[{"start":{"line":116,"column":6},"end":{"line":116,"column":33}},{"start":{"line":116,"column":37},"end":{"line":116,"column":62}}],"line":116},"9":{"loc":{"start":{"line":119,"column":2},"end":{"line":121,"column":3}},"type":"if","locations":[{"start":{"line":119,"column":2},"end":{"line":121,"column":3}},{"start":{},"end":{}}],"line":119},"10":{"loc":{"start":{"line":125,"column":2},"end":{"line":127,"column":3}},"type":"if","locations":[{"start":{"line":125,"column":2},"end":{"line":127,"column":3}},{"start":{},"end":{}}],"line":125},"11":{"loc":{"start":{"line":128,"column":2},"end":{"line":140,"column":3}},"type":"if","locations":[{"start":{"line":128,"column":2},"end":{"line":140,"column":3}},{"start":{},"end":{}}],"line":128},"12":{"loc":{"start":{"line":128,"column":6},"end":{"line":128,"column":62}},"type":"binary-expr","locations":[{"start":{"line":128,"column":6},"end":{"line":128,"column":33}},{"start":{"line":128,"column":37},"end":{"line":128,"column":62}}],"line":128},"13":{"loc":{"start":{"line":131,"column":6},"end":{"line":137,"column":7}},"type":"if","locations":[{"start":{"line":131,"column":6},"end":{"line":137,"column":7}},{"start":{},"end":{}}],"line":131},"14":{"loc":{"start":{"line":132,"column":8},"end":{"line":136,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":136,"column":9}},{"start":{"line":134,"column":15},"end":{"line":136,"column":9}}],"line":132},"15":{"loc":{"start":{"line":141,"column":9},"end":{"line":141,"column":48}},"type":"binary-expr","locations":[{"start":{"line":141,"column":9},"end":{"line":141,"column":42}},{"start":{"line":141,"column":46},"end":{"line":141,"column":48}}],"line":141},"16":{"loc":{"start":{"line":143,"column":77},"end":{"line":143,"column":88}},"type":"default-arg","locations":[{"start":{"line":143,"column":87},"end":{"line":143,"column":88}}],"line":143},"17":{"loc":{"start":{"line":147,"column":28},"end":{"line":147,"column":53}},"type":"cond-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":47}},{"start":{"line":147,"column":50},"end":{"line":147,"column":53}}],"line":147},"18":{"loc":{"start":{"line":152,"column":4},"end":{"line":154,"column":5}},"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":154,"column":5}},{"start":{},"end":{}}],"line":152},"19":{"loc":{"start":{"line":152,"column":8},"end":{"line":152,"column":112}},"type":"binary-expr","locations":[{"start":{"line":152,"column":8},"end":{"line":152,"column":16}},{"start":{"line":152,"column":20},"end":{"line":152,"column":39}},{"start":{"line":152,"column":43},"end":{"line":152,"column":112}}],"line":152},"20":{"loc":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},{"start":{},"end":{}}],"line":156},"21":{"loc":{"start":{"line":161,"column":9},"end":{"line":161,"column":50}},"type":"cond-expr","locations":[{"start":{"line":161,"column":24},"end":{"line":161,"column":35}},{"start":{"line":161,"column":38},"end":{"line":161,"column":50}}],"line":161},"22":{"loc":{"start":{"line":163,"column":85},"end":{"line":163,"column":96}},"type":"default-arg","locations":[{"start":{"line":163,"column":95},"end":{"line":163,"column":96}}],"line":163},"23":{"loc":{"start":{"line":169,"column":36},"end":{"line":169,"column":109}},"type":"cond-expr","locations":[{"start":{"line":169,"column":54},"end":{"line":169,"column":80}},{"start":{"line":169,"column":83},"end":{"line":169,"column":109}}],"line":169},"24":{"loc":{"start":{"line":170,"column":4},"end":{"line":172,"column":5}},"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":172,"column":5}},{"start":{},"end":{}}],"line":170},"25":{"loc":{"start":{"line":173,"column":4},"end":{"line":176,"column":5}},"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":176,"column":5}},{"start":{},"end":{}}],"line":173},"26":{"loc":{"start":{"line":173,"column":8},"end":{"line":173,"column":112}},"type":"binary-expr","locations":[{"start":{"line":173,"column":8},"end":{"line":173,"column":16}},{"start":{"line":173,"column":20},"end":{"line":173,"column":39}},{"start":{"line":173,"column":43},"end":{"line":173,"column":112}}],"line":173},"27":{"loc":{"start":{"line":178,"column":4},"end":{"line":181,"column":5}},"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":181,"column":5}},{"start":{},"end":{}}],"line":178},"28":{"loc":{"start":{"line":187,"column":2},"end":{"line":189,"column":3}},"type":"if","locations":[{"start":{"line":187,"column":2},"end":{"line":189,"column":3}},{"start":{},"end":{}}],"line":187},"29":{"loc":{"start":{"line":191,"column":2},"end":{"line":215,"column":3}},"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":215,"column":3}},{"start":{"line":209,"column":9},"end":{"line":215,"column":3}}],"line":191},"30":{"loc":{"start":{"line":193,"column":4},"end":{"line":201,"column":5}},"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":201,"column":5}},{"start":{"line":195,"column":11},"end":{"line":201,"column":5}}],"line":193},"31":{"loc":{"start":{"line":195,"column":11},"end":{"line":201,"column":5}},"type":"if","locations":[{"start":{"line":195,"column":11},"end":{"line":201,"column":5}},{"start":{"line":197,"column":11},"end":{"line":201,"column":5}}],"line":195},"32":{"loc":{"start":{"line":197,"column":11},"end":{"line":201,"column":5}},"type":"if","locations":[{"start":{"line":197,"column":11},"end":{"line":201,"column":5}},{"start":{"line":199,"column":11},"end":{"line":201,"column":5}}],"line":197},"33":{"loc":{"start":{"line":202,"column":4},"end":{"line":204,"column":5}},"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":204,"column":5}},{"start":{},"end":{}}],"line":202},"34":{"loc":{"start":{"line":205,"column":4},"end":{"line":207,"column":5}},"type":"if","locations":[{"start":{"line":205,"column":4},"end":{"line":207,"column":5}},{"start":{},"end":{}}],"line":205},"35":{"loc":{"start":{"line":205,"column":8},"end":{"line":205,"column":48}},"type":"binary-expr","locations":[{"start":{"line":205,"column":8},"end":{"line":205,"column":23}},{"start":{"line":205,"column":27},"end":{"line":205,"column":48}}],"line":205},"36":{"loc":{"start":{"line":211,"column":4},"end":{"line":213,"column":5}},"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":213,"column":5}},{"start":{},"end":{}}],"line":211},"37":{"loc":{"start":{"line":211,"column":8},"end":{"line":211,"column":46}},"type":"binary-expr","locations":[{"start":{"line":211,"column":8},"end":{"line":211,"column":22}},{"start":{"line":211,"column":26},"end":{"line":211,"column":46}}],"line":211},"38":{"loc":{"start":{"line":222,"column":2},"end":{"line":224,"column":3}},"type":"if","locations":[{"start":{"line":222,"column":2},"end":{"line":224,"column":3}},{"start":{},"end":{}}],"line":222},"39":{"loc":{"start":{"line":222,"column":6},"end":{"line":222,"column":52}},"type":"binary-expr","locations":[{"start":{"line":222,"column":6},"end":{"line":222,"column":21}},{"start":{"line":222,"column":25},"end":{"line":222,"column":52}}],"line":222},"40":{"loc":{"start":{"line":228,"column":2},"end":{"line":250,"column":3}},"type":"switch","locations":[{"start":{"line":229,"column":4},"end":{"line":230,"column":71}},{"start":{"line":231,"column":4},"end":{"line":232,"column":73}},{"start":{"line":233,"column":4},"end":{"line":237,"column":8}},{"start":{"line":238,"column":4},"end":{"line":242,"column":8}},{"start":{"line":243,"column":4},"end":{"line":244,"column":75}},{"start":{"line":245,"column":4},"end":{"line":249,"column":8}}],"line":228},"41":{"loc":{"start":{"line":254,"column":20},"end":{"line":254,"column":85}},"type":"cond-expr","locations":[{"start":{"line":254,"column":48},"end":{"line":254,"column":78}},{"start":{"line":254,"column":81},"end":{"line":254,"column":85}}],"line":254},"42":{"loc":{"start":{"line":255,"column":21},"end":{"line":255,"column":84}},"type":"cond-expr","locations":[{"start":{"line":255,"column":49},"end":{"line":255,"column":80}},{"start":{"line":255,"column":83},"end":{"line":255,"column":84}}],"line":255},"43":{"loc":{"start":{"line":256,"column":17},"end":{"line":256,"column":75}},"type":"cond-expr","locations":[{"start":{"line":256,"column":45},"end":{"line":256,"column":71}},{"start":{"line":256,"column":74},"end":{"line":256,"column":75}}],"line":256},"44":{"loc":{"start":{"line":258,"column":16},"end":{"line":258,"column":77}},"type":"cond-expr","locations":[{"start":{"line":258,"column":42},"end":{"line":258,"column":70}},{"start":{"line":258,"column":73},"end":{"line":258,"column":77}}],"line":258},"45":{"loc":{"start":{"line":259,"column":17},"end":{"line":259,"column":76}},"type":"cond-expr","locations":[{"start":{"line":259,"column":43},"end":{"line":259,"column":72}},{"start":{"line":259,"column":75},"end":{"line":259,"column":76}}],"line":259},"46":{"loc":{"start":{"line":260,"column":15},"end":{"line":260,"column":69}},"type":"cond-expr","locations":[{"start":{"line":260,"column":41},"end":{"line":260,"column":65}},{"start":{"line":260,"column":68},"end":{"line":260,"column":69}}],"line":260},"47":{"loc":{"start":{"line":261,"column":2},"end":{"line":268,"column":3}},"type":"if","locations":[{"start":{"line":261,"column":2},"end":{"line":268,"column":3}},{"start":{"line":266,"column":9},"end":{"line":268,"column":3}}],"line":261},"48":{"loc":{"start":{"line":263,"column":4},"end":{"line":265,"column":5}},"type":"if","locations":[{"start":{"line":263,"column":4},"end":{"line":265,"column":5}},{"start":{},"end":{}}],"line":263},"49":{"loc":{"start":{"line":266,"column":9},"end":{"line":268,"column":3}},"type":"if","locations":[{"start":{"line":266,"column":9},"end":{"line":268,"column":3}},{"start":{},"end":{}}],"line":266},"50":{"loc":{"start":{"line":269,"column":2},"end":{"line":278,"column":3}},"type":"if","locations":[{"start":{"line":269,"column":2},"end":{"line":278,"column":3}},{"start":{},"end":{}}],"line":269},"51":{"loc":{"start":{"line":270,"column":4},"end":{"line":277,"column":5}},"type":"if","locations":[{"start":{"line":270,"column":4},"end":{"line":277,"column":5}},{"start":{"line":275,"column":11},"end":{"line":277,"column":5}}],"line":270},"52":{"loc":{"start":{"line":280,"column":27},"end":{"line":280,"column":99}},"type":"cond-expr","locations":[{"start":{"line":280,"column":74},"end":{"line":280,"column":87}},{"start":{"line":280,"column":90},"end":{"line":280,"column":99}}],"line":280},"53":{"loc":{"start":{"line":281,"column":25},"end":{"line":281,"column":92}},"type":"cond-expr","locations":[{"start":{"line":281,"column":72},"end":{"line":281,"column":78}},{"start":{"line":281,"column":81},"end":{"line":281,"column":92}}],"line":281},"54":{"loc":{"start":{"line":282,"column":27},"end":{"line":282,"column":127}},"type":"cond-expr","locations":[{"start":{"line":282,"column":74},"end":{"line":282,"column":99}},{"start":{"line":282,"column":102},"end":{"line":282,"column":127}}],"line":282},"55":{"loc":{"start":{"line":291,"column":20},"end":{"line":291,"column":85}},"type":"cond-expr","locations":[{"start":{"line":291,"column":48},"end":{"line":291,"column":78}},{"start":{"line":291,"column":81},"end":{"line":291,"column":85}}],"line":291},"56":{"loc":{"start":{"line":293,"column":18},"end":{"line":293,"column":79}},"type":"cond-expr","locations":[{"start":{"line":293,"column":44},"end":{"line":293,"column":72}},{"start":{"line":293,"column":75},"end":{"line":293,"column":79}}],"line":293},"57":{"loc":{"start":{"line":298,"column":2},"end":{"line":314,"column":3}},"type":"if","locations":[{"start":{"line":298,"column":2},"end":{"line":314,"column":3}},{"start":{"line":306,"column":9},"end":{"line":314,"column":3}}],"line":298},"58":{"loc":{"start":{"line":303,"column":4},"end":{"line":305,"column":5}},"type":"if","locations":[{"start":{"line":303,"column":4},"end":{"line":305,"column":5}},{"start":{},"end":{}}],"line":303},"59":{"loc":{"start":{"line":311,"column":4},"end":{"line":313,"column":5}},"type":"if","locations":[{"start":{"line":311,"column":4},"end":{"line":313,"column":5}},{"start":{},"end":{}}],"line":311},"60":{"loc":{"start":{"line":322,"column":20},"end":{"line":322,"column":85}},"type":"cond-expr","locations":[{"start":{"line":322,"column":48},"end":{"line":322,"column":78}},{"start":{"line":322,"column":81},"end":{"line":322,"column":85}}],"line":322},"61":{"loc":{"start":{"line":323,"column":21},"end":{"line":323,"column":84}},"type":"cond-expr","locations":[{"start":{"line":323,"column":49},"end":{"line":323,"column":80}},{"start":{"line":323,"column":83},"end":{"line":323,"column":84}}],"line":323},"62":{"loc":{"start":{"line":324,"column":17},"end":{"line":324,"column":75}},"type":"cond-expr","locations":[{"start":{"line":324,"column":45},"end":{"line":324,"column":71}},{"start":{"line":324,"column":74},"end":{"line":324,"column":75}}],"line":324},"63":{"loc":{"start":{"line":326,"column":18},"end":{"line":326,"column":79}},"type":"cond-expr","locations":[{"start":{"line":326,"column":44},"end":{"line":326,"column":72}},{"start":{"line":326,"column":75},"end":{"line":326,"column":79}}],"line":326},"64":{"loc":{"start":{"line":327,"column":19},"end":{"line":327,"column":78}},"type":"cond-expr","locations":[{"start":{"line":327,"column":45},"end":{"line":327,"column":74}},{"start":{"line":327,"column":77},"end":{"line":327,"column":78}}],"line":327},"65":{"loc":{"start":{"line":328,"column":15},"end":{"line":328,"column":69}},"type":"cond-expr","locations":[{"start":{"line":328,"column":41},"end":{"line":328,"column":65}},{"start":{"line":328,"column":68},"end":{"line":328,"column":69}}],"line":328},"66":{"loc":{"start":{"line":329,"column":2},"end":{"line":331,"column":3}},"type":"if","locations":[{"start":{"line":329,"column":2},"end":{"line":331,"column":3}},{"start":{},"end":{}}],"line":329},"67":{"loc":{"start":{"line":332,"column":2},"end":{"line":334,"column":3}},"type":"if","locations":[{"start":{"line":332,"column":2},"end":{"line":334,"column":3}},{"start":{},"end":{}}],"line":332},"68":{"loc":{"start":{"line":336,"column":27},"end":{"line":336,"column":99}},"type":"cond-expr","locations":[{"start":{"line":336,"column":74},"end":{"line":336,"column":87}},{"start":{"line":336,"column":90},"end":{"line":336,"column":99}}],"line":336},"69":{"loc":{"start":{"line":337,"column":25},"end":{"line":337,"column":92}},"type":"cond-expr","locations":[{"start":{"line":337,"column":72},"end":{"line":337,"column":78}},{"start":{"line":337,"column":81},"end":{"line":337,"column":92}}],"line":337},"70":{"loc":{"start":{"line":338,"column":27},"end":{"line":338,"column":127}},"type":"cond-expr","locations":[{"start":{"line":338,"column":74},"end":{"line":338,"column":99}},{"start":{"line":338,"column":102},"end":{"line":338,"column":127}}],"line":338},"71":{"loc":{"start":{"line":346,"column":9},"end":{"line":346,"column":63}},"type":"binary-expr","locations":[{"start":{"line":346,"column":9},"end":{"line":346,"column":23}},{"start":{"line":346,"column":27},"end":{"line":346,"column":43}},{"start":{"line":346,"column":47},"end":{"line":346,"column":63}}],"line":346},"72":{"loc":{"start":{"line":349,"column":9},"end":{"line":349,"column":80}},"type":"binary-expr","locations":[{"start":{"line":349,"column":9},"end":{"line":349,"column":23}},{"start":{"line":349,"column":27},"end":{"line":349,"column":43}},{"start":{"line":349,"column":47},"end":{"line":349,"column":63}},{"start":{"line":349,"column":67},"end":{"line":349,"column":80}}],"line":349},"73":{"loc":{"start":{"line":354,"column":9},"end":{"line":354,"column":69}},"type":"cond-expr","locations":[{"start":{"line":354,"column":28},"end":{"line":354,"column":47}},{"start":{"line":354,"column":50},"end":{"line":354,"column":69}}],"line":354},"74":{"loc":{"start":{"line":357,"column":9},"end":{"line":357,"column":41}},"type":"cond-expr","locations":[{"start":{"line":357,"column":32},"end":{"line":357,"column":35}},{"start":{"line":357,"column":38},"end":{"line":357,"column":41}}],"line":357},"75":{"loc":{"start":{"line":360,"column":2},"end":{"line":371,"column":3}},"type":"switch","locations":[{"start":{"line":361,"column":4},"end":{"line":361,"column":11}},{"start":{"line":362,"column":4},"end":{"line":362,"column":11}},{"start":{"line":363,"column":4},"end":{"line":364,"column":17}},{"start":{"line":365,"column":4},"end":{"line":366,"column":81}},{"start":{"line":367,"column":4},"end":{"line":368,"column":17}},{"start":{"line":369,"column":4},"end":{"line":370,"column":16}}],"line":360},"76":{"loc":{"start":{"line":380,"column":2},"end":{"line":388,"column":3}},"type":"if","locations":[{"start":{"line":380,"column":2},"end":{"line":388,"column":3}},{"start":{"line":386,"column":9},"end":{"line":388,"column":3}}],"line":380}},"s":{"0":1,"1":1,"2":1,"3":458,"4":458,"5":458,"6":458,"7":458,"8":458,"9":458,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":992,"18":992,"19":992,"20":992,"21":992,"22":992,"23":992,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":136,"52":0,"53":4,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":70,"110":0,"111":70,"112":70,"113":70,"114":66,"115":4,"116":0,"117":4,"118":0,"119":4,"120":66,"121":0,"122":66,"123":0,"124":66,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":344,"137":74,"138":159,"139":37,"140":37,"141":37,"142":0,"143":74,"144":74,"145":74,"146":74,"147":74,"148":74,"149":74,"150":74,"151":74,"152":0,"153":0,"154":0,"155":74,"156":0,"157":74,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":74,"165":74,"166":74,"167":74,"168":74,"169":74,"170":159,"171":159,"172":159,"173":159,"174":159,"175":159,"176":159,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":159,"184":159,"185":159,"186":159,"187":159,"188":0,"189":159,"190":37,"191":37,"192":37,"193":37,"194":37,"195":37,"196":37,"197":37,"198":37,"199":0,"200":37,"201":0,"202":37,"203":37,"204":37,"205":37,"206":37,"207":37,"208":2749,"209":0,"210":1,"211":1,"212":2749,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":2749,"220":2721,"221":2721,"222":2721,"223":2721,"224":0,"225":0,"226":0,"227":0,"228":0,"229":2721,"230":2721},"f":{"0":458,"1":0,"2":992,"3":0,"4":0,"5":0,"6":0,"7":136,"8":0,"9":4,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":70,"18":0,"19":344,"20":74,"21":159,"22":37,"23":2749,"24":0,"25":2749,"26":0,"27":0,"28":2749,"29":2721},"b":{"0":[458,0],"1":[0,0],"2":[992,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,70],"29":[70,0],"30":[66,4],"31":[0,4],"32":[0,4],"33":[0,66],"34":[0,66],"35":[66,66],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[74,159,37,37,37,0],"41":[74,0],"42":[74,0],"43":[74,0],"44":[74,0],"45":[74,0],"46":[74,0],"47":[0,74],"48":[0,0],"49":[0,74],"50":[0,74],"51":[0,0],"52":[74,0],"53":[74,0],"54":[74,0],"55":[159,0],"56":[159,0],"57":[0,159],"58":[0,0],"59":[0,159],"60":[37,0],"61":[37,0],"62":[37,0],"63":[37,0],"64":[37,0],"65":[37,0],"66":[0,37],"67":[0,37],"68":[37,0],"69":[37,0],"70":[37,0],"71":[2749,721,2028],"72":[0,0,0,0],"73":[721,2028],"74":[0,0],"75":[0,0,0,0,0,0],"76":[0,2721]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/date.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BaseValueObject } from '../engine/value-object/base-value-object';\nimport { isRealNum, numfmt } from '@univerjs/core';\nimport { ErrorValueObject } from '../engine/value-object/base-value-object';\nimport { ErrorType } from './error-type';\n\nexport const DEFAULT_DATE_FORMAT = 'yyyy/mm/dd;@';\nexport const DEFAULT_NOW_FORMAT = 'yyyy/mm/dd hh:mm';\nexport const DEFAULT_TIME_FORMAT = 'h:mm A/P';\n\n/**\n * Excel stores dates as sequential serial numbers so they can be used in calculations. By default, January 1, 1900 is serial number 1, and January 1, 2008 is serial number 39448 because it is 39,447 days after January 1, 1900.\n *\n * Excel has a leap year error in 1900. February 29, 1900 is considered a legal date. In fact, there is no February 29 in 1900.\n * 1900.2.28 Date Serial 59\n * 1900.2.29 Date Serial 61\n * 1900.3.1 Date Serial 61\n * 1901.1.1 Date Serial 367\n * @param date\n * @returns\n */\nexport function excelDateSerial(date: Date): number {\n    const baseDate = new Date(Date.UTC(1900, 0, 1)); // January 1, 1900, UTC\n    const leapDayDate = new Date(Date.UTC(1900, 1, 28)); // February 28, 1900, UTC\n    const dateInUTC = Date.UTC(date.getFullYear(), date.getMonth(), date.getDate());\n\n    // Calculate the difference in days between the base date and the input date\n    let dayDifference = (dateInUTC - baseDate.getTime()) / (1000 * 3600 * 24);\n\n    // If the date is later than February 28, 1900, the day difference needs to be adjusted to account for Excel errors\n    if (dateInUTC > leapDayDate.getTime()) {\n        dayDifference += 1;\n    }\n\n    return Math.floor(dayDifference) + 1; // Excel serial number starts from 1\n}\n\n/**\n * Time serial number with date\n * @param date\n * @returns\n */\nexport function excelDateTimeSerial(date: Date): number {\n    const baseDate = new Date(Date.UTC(1900, 0, 1, 0, 0, 0)); // January 1, 1900, UTC at midnight\n    const leapDayDate = new Date(Date.UTC(1900, 1, 28, 0, 0, 0)); // February 28, 1900, UTC at midnight\n\n    // Calculate the difference in milliseconds between the input date and the base date\n    const diffMilliseconds = date.getTime() - baseDate.getTime();\n    let dayDifference = diffMilliseconds / (1000 * 3600 * 24);\n\n    // Adjusting for the Excel leap year bug\n    if (date > leapDayDate) {\n        dayDifference += 1;\n    }\n\n    return dayDifference + 1; // Excel serial number starts from 1\n}\n\nexport function excelSerialToDate(serial: number): Date {\n    const baseDate = new Date(Date.UTC(1900, 0, 1)); // January 1, 1900, UTC\n    const leapDayDate = new Date(Date.UTC(1900, 1, 28)); // February 28, 1900, UTC\n\n    let dayDifference = Math.floor(serial) - 1; // Adjust for Excel serial number starting from 1\n\n    // If the serial number corresponds to a date later than February 28, 1900, adjust the day difference\n    if (dayDifference > (leapDayDate.getTime() - baseDate.getTime()) / (1000 * 3600 * 24)) {\n        dayDifference -= 1;\n    }\n\n    const resultDate = new Date(baseDate.getTime() + dayDifference * (1000 * 3600 * 24));\n    return resultDate;\n}\n\nexport function excelSerialToDateTime(serial: number): Date {\n    const baseDate = new Date(Date.UTC(1900, 0, 1, 0, 0, 0)); // January 1, 1900, UTC\n    const leapDayDate = new Date(Date.UTC(1900, 1, 28, 0, 0, 0)); // February 28, 1900, UTC\n\n    let dayDifference = serial - 1; // Adjust for Excel serial number starting from 1\n\n    // If the serial number corresponds to a date later than February 28, 1900, adjust the day difference\n    if (dayDifference > (leapDayDate.getTime() - baseDate.getTime()) / (1000 * 3600 * 24)) {\n        dayDifference -= 1;\n    }\n\n    if (dayDifference < 0) {\n        dayDifference = serial;\n    }\n\n    const resultDate = new Date(baseDate.getTime() + dayDifference * (1000 * 3600 * 24));\n    return resultDate;\n}\n\nexport function formatDateDefault(date: Date): string {\n    // Get the year from the date object\n    const year: number = date.getFullYear();\n\n    // Get the month from the date object and add 1 (since getMonth() returns 0-11)\n    // Convert it to a string and pad with zero if necessary to ensure two digits\n    const month: string = (date.getMonth() + 1).toString().padStart(2, '0');\n\n    // Get the day from the date object\n    // Convert it to a string and pad with zero if necessary to ensure two digits\n    const day: string = date.getDate().toString().padStart(2, '0');\n\n    // Concatenate year, month, and day with '/' as separator to form yyyy/mm/dd format\n    return `${year}/${month}/${day}`;\n}\n\n/**\n * Validate date string\n *\n * TODO @Dushusir: Internationalization and more format support, can be reused when editing and saving cells, like \"2020年1月1日\"\n * @param dateStr\n * @returns\n */\nexport function isValidDateStr(dateStr: string): boolean {\n    // Regular expression to validate date format\n    const regex = /^\\d{4}[-/](0?[1-9]|1[012])[-/](0?[1-9]|[12][0-9]|3[01])$/;\n\n    // Check if the date format is correct\n    if (!regex.test(dateStr)) {\n        return false;\n    }\n    // Convert date string to local time format\n    const normalizedDateStr = dateStr.replace(/-/g, '/').replace(/T.+/, '');\n    const dateWithTime = new Date(`${normalizedDateStr}`);\n\n    // Check if the date is valid\n    if (Number.isNaN(dateWithTime.getTime())) {\n        return false;\n    }\n\n    // Convert the parsed date back to the same format as the original date string for comparison\n    const year = dateWithTime.getFullYear();\n    const month = (dateWithTime.getMonth() + 1).toString().padStart(2, '0');\n    const day = dateWithTime.getDate().toString().padStart(2, '0');\n    const reconstructedDateStr = `${year}-${month}-${day}`;\n\n    const dateStrPad = dateStr.replace(/\\//g, '-').split('-').map((v) => v.padStart(2, '0')).join('-');\n\n    return dateStrPad === reconstructedDateStr;\n}\n\nexport function parseFormattedDate(value: string) {\n    return numfmt.parseDate(value);\n}\n\nexport function parseFormattedValue(value: string) {\n    return numfmt.parseValue(value);\n}\n\nexport function parseFormattedTime(value: string) {\n    return numfmt.parseTime(value);\n}\n\nexport function isDate(format: string) {\n    return numfmt.isDate(format);\n}\n\n// Weekend is a weekend number or string that specifies when weekends occur.\nconst weekendNumberMap: {\n    [index: number]: number[];\n} = {\n    1: [6, 0], // Saturday, Sunday\n    2: [0, 1], // Sunday, Monday\n    3: [1, 2], // Monday, Tuesday\n    4: [2, 3], // Tuesday, Wednesday\n    5: [3, 4], // Wednesday, Thursday\n    6: [4, 5], // Thursday, Friday\n    7: [5, 6], // Friday, Saturday\n    11: [0], // Sunday only\n    12: [1], // Monday only\n    13: [2], // Tuesday only\n    14: [3], // Wednesday only\n    15: [4], // Thursday only\n    16: [5], // Friday only\n    17: [6], // Saturday only\n};\n\nexport function isValidWeekend(weekend: number | string): boolean {\n    // Weekend string values are seven characters long and each character in the string represents a day of the week, starting with Monday.\n    if (typeof weekend === 'string' && /^[0|1]{7}/.test(weekend)) {\n        return true;\n    }\n\n    if (weekendNumberMap[Number(weekend)]) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getWeekendArray(weekend: number | string): number[] {\n    if (!isValidWeekend(weekend)) {\n        return [];\n    }\n\n    if (typeof weekend === 'string' && /^[0|1]{7}/.test(weekend)) {\n        // 1 represents a non-workday and 0 represents a workday. Only the characters 1 and 0 are permitted in the string. Using 1111111 will always return 0.\n        const result = [];\n\n        for (let i = 1; i <= weekend.length; i++) {\n            if (`${weekend[i - 1]}` === '1') {\n                if (i === weekend.length) {\n                    result.push(0);\n                } else {\n                    result.push(i);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    return weekendNumberMap[Number(weekend)] || [];\n}\n\nexport function countWorkingDays(startDateSerialNumber: number, endDateSerialNumber: number, weekend: number | string = 1, holidays?: number[]): number {\n    const weekendArray = getWeekendArray(weekend);\n\n    const start = Math.floor(startDateSerialNumber);\n    const end = Math.floor(endDateSerialNumber);\n    const startSerialNumber = end > start ? start : end;\n\n    let workingDays = 0;\n\n    const daysDiff = Math.abs(Math.floor(endDateSerialNumber) - Math.floor(startDateSerialNumber)) + 1;\n\n    for (let i = 0; i < daysDiff; i++) {\n        const currentDateSerialNumber = startSerialNumber + i;\n\n        if (holidays && holidays.length > 0 && holidays.some((item) => Math.floor(item) === currentDateSerialNumber)) {\n            continue;\n        }\n\n        const weekDay = getWeekDayByDateSerialNumber(currentDateSerialNumber);\n\n        if (weekendArray.includes(weekDay)) {\n            continue;\n        }\n\n        workingDays++;\n    }\n\n    return end >= start ? workingDays : -workingDays;\n}\n\nexport function getDateSerialNumberByWorkingDays(startDateSerialNumber: number, workingDays: number, weekend: number | string = 1, holidays?: number[]): (number | ErrorValueObject) {\n    const weekendArray = getWeekendArray(weekend);\n\n    const _startDateSerialNumber = Math.floor(startDateSerialNumber);\n    let targetDateSerialNumber = _startDateSerialNumber;\n\n    let days = Math.abs(workingDays);\n\n    for (let i = 1; i <= days; i++) {\n        const currentDateSerialNumber = workingDays < 0 ? _startDateSerialNumber - i : _startDateSerialNumber + i;\n\n        if (currentDateSerialNumber < 0) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        if (holidays && holidays.length > 0 && holidays.some((item) => Math.floor(item) === currentDateSerialNumber)) {\n            days++;\n            continue;\n        }\n\n        const weekDay = getWeekDayByDateSerialNumber(currentDateSerialNumber);\n\n        if (weekendArray.includes(weekDay)) {\n            days++;\n            continue;\n        }\n\n        targetDateSerialNumber = currentDateSerialNumber;\n    }\n\n    return targetDateSerialNumber;\n}\n\nexport function getDateSerialNumberByObject(serialNumberObject: BaseValueObject): (ErrorValueObject | number) {\n    if (serialNumberObject.isError()) {\n        return serialNumberObject as ErrorValueObject;\n    }\n\n    const dateValue = serialNumberObject.getValue();\n\n    if (serialNumberObject.isString()) {\n        let dateSerial;\n\n        if (parseFormattedDate(`${dateValue}`)) {\n            dateSerial = parseFormattedDate(`${dateValue}`).v;\n        } else if (parseFormattedTime(`${dateValue}`)) {\n            dateSerial = parseFormattedTime(`${dateValue}`).v;\n        } else if (isRealNum(dateValue)) {\n            dateSerial = +dateValue;\n        } else {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        if (dateSerial instanceof Date) {\n            dateSerial = excelDateTimeSerial(dateSerial);\n        }\n\n        if (+dateSerial < 0 || +dateSerial > 2958465) { // 2958465 = 9999/12/31\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return +dateSerial;\n    } else {\n        const dateSerial = +serialNumberObject.getValue();\n\n        if (dateSerial < 0 || dateSerial > 2958465) { // 2958465 = 9999/12/31\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return dateSerial;\n    }\n}\n\nexport function getWeekDayByDateSerialNumber(dateSerialNumber: number): number {\n    // special date 1900-02-29(serialNumber = 60)\n    const isDate19000229 = Math.floor(dateSerialNumber) === 60;\n\n    let date = excelSerialToDate(dateSerialNumber);\n\n    const dateTime = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate())).getTime();\n    const leapDayDateTime = new Date(Date.UTC(1900, 1, 28)).getTime(); // February 28, 1900, UTC\n\n    if (!isDate19000229 && dateTime <= leapDayDateTime) {\n        date = new Date(dateTime - 24 * 3600 * 1000);\n    }\n\n    return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate())).getUTCDay();\n}\n\ninterface ITwoDateDaysType {\n    days: number;\n    yearDays: number;\n}\n\nexport function getTwoDateDaysByBasis(startDateSerialNumber: number, endDateSerialNumber: number, basis: number): ITwoDateDaysType {\n    switch (basis) {\n        case 0:\n            // U.S. (NASD) method 30/360.\n            return getDaysByNASD(startDateSerialNumber, endDateSerialNumber);\n        case 1:\n            // Actual/actual\n            return getDaysByActual(startDateSerialNumber, endDateSerialNumber);\n        case 2:\n            // Actual/360\n            return {\n                days: Math.abs(endDateSerialNumber - startDateSerialNumber),\n                yearDays: 360,\n            };\n        case 3:\n            // Actual/365\n            return {\n                days: Math.abs(endDateSerialNumber - startDateSerialNumber),\n                yearDays: 365,\n            };\n        case 4:\n            // European method 30/360.\n            return getDaysByEuropean(startDateSerialNumber, endDateSerialNumber);\n        default:\n            return {\n                days: Math.abs(endDateSerialNumber - startDateSerialNumber),\n                yearDays: 365,\n            };\n    }\n}\n\nfunction getDaysByNASD(startDateSerialNumber: number, endDateSerialNumber: number): ITwoDateDaysType {\n    const startDateDate = excelSerialToDate(startDateSerialNumber);\n    const startYear = startDateSerialNumber > 0 ? startDateDate.getUTCFullYear() : 1900;\n    const startMonth = startDateSerialNumber > 0 ? startDateDate.getUTCMonth() + 1 : 1;\n    let startDay = startDateSerialNumber > 0 ? startDateDate.getUTCDate() : 0;\n\n    let endDateDate = excelSerialToDate(endDateSerialNumber);\n    let endYear = endDateSerialNumber > 0 ? endDateDate.getUTCFullYear() : 1900;\n    let endMonth = endDateSerialNumber > 0 ? endDateDate.getUTCMonth() + 1 : 1;\n    let endDay = endDateSerialNumber > 0 ? endDateDate.getUTCDate() : 0;\n\n    // If the starting date is the last day of a month, it becomes equal to the 30th day of the same month.\n    // If the ending date is the last day of a month and the starting date is earlier than the 30th day of a month, the ending date becomes equal to the 1st day of the next month; otherwise the ending date becomes equal to the 30th day of the same month.\n    if (startMonth === 2) {\n        const startDateAfterDay = excelSerialToDate(startDateSerialNumber + 1);\n\n        if (startDateAfterDay.getUTCMonth() + 1 === 3) {\n            startDay = 30;\n        }\n    } else if (startDay === 31) {\n        startDay = 30;\n    }\n\n    if (endDay === 31) {\n        if (startDay < 30) {\n            endDateDate = excelSerialToDate(endDateSerialNumber + 1);\n            endYear = endDateDate.getUTCFullYear();\n            endMonth = endDateDate.getUTCMonth() + 1;\n            endDay = endDateDate.getUTCDate();\n        } else {\n            endDay = 30;\n        }\n    }\n\n    const daysInYears = (endYear - startYear) * 360;\n    const daysInStartMonth = endDateSerialNumber >= startDateSerialNumber ? 30 - startDay : -startDay;\n    const daysInEndMonth = endDateSerialNumber >= startDateSerialNumber ? endDay : endDay - 30;\n    const daysInMidMonths = (endDateSerialNumber >= startDateSerialNumber ? (endMonth - startMonth - 1) : (endMonth - startMonth + 1)) * 30;\n    const totalDays = Math.abs(daysInYears + daysInStartMonth + daysInEndMonth + daysInMidMonths);\n\n    return {\n        days: totalDays,\n        yearDays: 360,\n    };\n}\n\nfunction getDaysByActual(startDateSerialNumber: number, endDateSerialNumber: number): ITwoDateDaysType {\n    const startDateDate = excelSerialToDate(startDateSerialNumber);\n    const startYear = startDateSerialNumber > 0 ? startDateDate.getUTCFullYear() : 1900;\n\n    const endDateDate = excelSerialToDate(endDateSerialNumber);\n    const endYear = endDateSerialNumber > 0 ? endDateDate.getUTCFullYear() : 1900;\n\n    const totalDays = Math.abs(endDateSerialNumber - startDateSerialNumber);\n    const totalYear = Math.abs(endYear - startYear) + 1;\n\n    let startYearFirstDaySerialNumber;\n    let endYearLastDaySerialNumber;\n\n    if (endYear < startYear) {\n        const startYearFirstDay = new Date(Date.UTC(endYear, 0, 1));\n        const endYearLastDay = new Date(Date.UTC(startYear, 11, 31));\n\n        startYearFirstDaySerialNumber = excelDateSerial(startYearFirstDay);\n        endYearLastDaySerialNumber = excelDateSerial(endYearLastDay);\n\n        if (endYear === 1900) { // Special handle. excel 1900 days = 365, 1900/12/31 SerialNumber = 366. so start add 1\n            startYearFirstDaySerialNumber += 1;\n        }\n    } else {\n        const startYearFirstDay = new Date(Date.UTC(startYear, 0, 1));\n        const endYearLastDay = new Date(Date.UTC(endYear, 11, 31));\n\n        startYearFirstDaySerialNumber = excelDateSerial(startYearFirstDay);\n        endYearLastDaySerialNumber = excelDateSerial(endYearLastDay);\n\n        if (startYear === 1900) { // Special handle. excel 1900 days = 365, 1900/12/31 SerialNumber = 366. so start add 1\n            startYearFirstDaySerialNumber += 1;\n        }\n    }\n\n    return {\n        days: totalDays,\n        yearDays: (endYearLastDaySerialNumber - startYearFirstDaySerialNumber + 1) / totalYear,\n    };\n}\n\nfunction getDaysByEuropean(startDateSerialNumber: number, endDateSerialNumber: number): ITwoDateDaysType {\n    const startDateDate = excelSerialToDate(startDateSerialNumber);\n    const startYear = startDateSerialNumber > 0 ? startDateDate.getUTCFullYear() : 1900;\n    const startMonth = startDateSerialNumber > 0 ? startDateDate.getUTCMonth() + 1 : 1;\n    let startDay = startDateSerialNumber > 0 ? startDateDate.getUTCDate() : 0;\n\n    const endDateDate = excelSerialToDate(endDateSerialNumber);\n    const endYear = endDateSerialNumber > 0 ? endDateDate.getUTCFullYear() : 1900;\n    const endMonth = endDateSerialNumber > 0 ? endDateDate.getUTCMonth() + 1 : 1;\n    let endDay = endDateSerialNumber > 0 ? endDateDate.getUTCDate() : 0;\n\n    // Starting dates and ending dates that occur on the 31st day of a month become equal to the 30th day of the same month.\n    if (startDay === 31) {\n        startDay = 30;\n    }\n\n    if (endDay === 31) {\n        endDay = 30;\n    }\n\n    const daysInYears = (endYear - startYear) * 360;\n    const daysInStartMonth = endDateSerialNumber >= startDateSerialNumber ? 30 - startDay : -startDay;\n    const daysInEndMonth = endDateSerialNumber >= startDateSerialNumber ? endDay : endDay - 30;\n    const daysInMidMonths = (endDateSerialNumber >= startDateSerialNumber ? (endMonth - startMonth - 1) : (endMonth - startMonth + 1)) * 30;\n    const totalDays = Math.abs(daysInYears + daysInStartMonth + daysInEndMonth + daysInMidMonths);\n\n    return {\n        days: totalDays,\n        yearDays: 360,\n    };\n}\n\nexport function isLeapYear(year: number): boolean {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\nexport function isLeapYear1900(year: number): boolean {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0 || year === 1900;\n}\n\nconst daysInMonthL = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst daysInMonthR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n// month is 0 based\nexport function getDaysInMonth(year: number, month: number): number {\n    return isLeapYear(year) ? daysInMonthL[month] : daysInMonthR[month];\n}\n\nexport function getDaysInYear(year: number): number {\n    return isLeapYear1900(year) ? 366 : 365;\n}\n\nexport function getNormalYearDaysByBasis(dateSerialNumber: number, basis: number): number {\n    switch (basis) {\n        case 0:\n        case 2:\n        case 4:\n            return 360;\n        case 1:\n            return getDaysInYear(excelSerialToDate(dateSerialNumber).getUTCFullYear());\n        case 3:\n            return 365;\n        default:\n            return -1;\n    }\n}\n\nexport function lastDayOfMonth(year: number, month: number, day: number): boolean {\n    return getDaysInMonth(year, month) === day;\n}\n\nexport function dateAddMonths(date: Date, months: number): Date {\n    let year = date.getUTCFullYear();\n    let month = date.getUTCMonth();\n    const day = date.getUTCDate();\n\n    if (lastDayOfMonth(year, month, day)) {\n        date.setUTCDate(1);\n        date.setUTCMonth(date.getUTCMonth() + months);\n\n        year = date.getUTCFullYear();\n        month = date.getUTCMonth();\n        date.setUTCDate(getDaysInMonth(year, month));\n    } else {\n        date.setUTCMonth(date.getUTCMonth() + months);\n    }\n\n    return date;\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d4dea70260e7baaed56420facbc1dc6d8b681251"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/financial.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/financial.ts","statementMap":{"0":{"start":{"line":5,"column":31},"end":{"line":5,"column":104}},"1":{"start":{"line":6,"column":19},"end":{"line":6,"column":93}},"2":{"start":{"line":7,"column":2},"end":{"line":7,"column":14}},"3":{"start":{"line":11,"column":2},"end":{"line":25,"column":3}},"4":{"start":{"line":12,"column":45},"end":{"line":12,"column":118}},"5":{"start":{"line":13,"column":19},"end":{"line":13,"column":70}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":55}},"7":{"start":{"line":15,"column":44},"end":{"line":15,"column":69}},"8":{"start":{"line":16,"column":4},"end":{"line":20,"column":5}},"9":{"start":{"line":17,"column":6},"end":{"line":17,"column":19}},"10":{"start":{"line":19,"column":6},"end":{"line":19,"column":82}},"11":{"start":{"line":21,"column":9},"end":{"line":25,"column":3}},"12":{"start":{"line":22,"column":4},"end":{"line":22,"column":29}},"13":{"start":{"line":24,"column":4},"end":{"line":24,"column":29}},"14":{"start":{"line":26,"column":2},"end":{"line":26,"column":16}},"15":{"start":{"line":29,"column":25},"end":{"line":29,"column":66}},"16":{"start":{"line":30,"column":17},"end":{"line":30,"column":56}},"17":{"start":{"line":31,"column":2},"end":{"line":31,"column":59}},"18":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"19":{"start":{"line":33,"column":4},"end":{"line":33,"column":59}},"20":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"21":{"start":{"line":36,"column":4},"end":{"line":36,"column":56}},"22":{"start":{"line":38,"column":2},"end":{"line":38,"column":53}},"23":{"start":{"line":39,"column":31},"end":{"line":39,"column":56}},"24":{"start":{"line":40,"column":2},"end":{"line":40,"column":30}},"25":{"start":{"line":43,"column":15},"end":{"line":43,"column":16}},"26":{"start":{"line":44,"column":25},"end":{"line":44,"column":66}},"27":{"start":{"line":45,"column":17},"end":{"line":45,"column":56}},"28":{"start":{"line":46,"column":2},"end":{"line":49,"column":3}},"29":{"start":{"line":47,"column":4},"end":{"line":47,"column":56}},"30":{"start":{"line":48,"column":4},"end":{"line":48,"column":13}},"31":{"start":{"line":50,"column":2},"end":{"line":50,"column":16}},"32":{"start":{"line":53,"column":25},"end":{"line":53,"column":66}},"33":{"start":{"line":54,"column":17},"end":{"line":54,"column":56}},"34":{"start":{"line":55,"column":2},"end":{"line":55,"column":59}},"35":{"start":{"line":56,"column":2},"end":{"line":58,"column":3}},"36":{"start":{"line":57,"column":4},"end":{"line":57,"column":59}},"37":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"38":{"start":{"line":60,"column":4},"end":{"line":60,"column":56}},"39":{"start":{"line":62,"column":31},"end":{"line":62,"column":56}},"40":{"start":{"line":63,"column":2},"end":{"line":63,"column":30}},"41":{"start":{"line":66,"column":20},"end":{"line":66,"column":102}},"42":{"start":{"line":67,"column":19},"end":{"line":67,"column":100}},"43":{"start":{"line":68,"column":18},"end":{"line":68,"column":91}},"44":{"start":{"line":69,"column":23},"end":{"line":69,"column":60}},"45":{"start":{"line":70,"column":15},"end":{"line":70,"column":34}},"46":{"start":{"line":71,"column":18},"end":{"line":71,"column":42}},"47":{"start":{"line":72,"column":17},"end":{"line":72,"column":18}},"48":{"start":{"line":73,"column":12},"end":{"line":73,"column":13}},"49":{"start":{"line":74,"column":2},"end":{"line":79,"column":3}},"50":{"start":{"line":74,"column":15},"end":{"line":74,"column":16}},"51":{"start":{"line":75,"column":19},"end":{"line":75,"column":35}},"52":{"start":{"line":76,"column":17},"end":{"line":76,"column":41}},"53":{"start":{"line":77,"column":4},"end":{"line":77,"column":30}},"54":{"start":{"line":78,"column":4},"end":{"line":78,"column":16}},"55":{"start":{"line":80,"column":16},"end":{"line":80,"column":38}},"56":{"start":{"line":81,"column":14},"end":{"line":81,"column":33}},"57":{"start":{"line":82,"column":2},"end":{"line":82,"column":26}},"58":{"start":{"line":83,"column":2},"end":{"line":83,"column":13}},"59":{"start":{"line":84,"column":2},"end":{"line":84,"column":36}},"60":{"start":{"line":88,"column":2},"end":{"line":93,"column":3}},"61":{"start":{"line":89,"column":4},"end":{"line":89,"column":30}},"62":{"start":{"line":91,"column":17},"end":{"line":91,"column":35}},"63":{"start":{"line":92,"column":4},"end":{"line":92,"column":147}},"64":{"start":{"line":94,"column":2},"end":{"line":94,"column":17}},"65":{"start":{"line":98,"column":2},"end":{"line":106,"column":3}},"66":{"start":{"line":99,"column":4},"end":{"line":99,"column":29}},"67":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"68":{"start":{"line":102,"column":6},"end":{"line":102,"column":24}},"69":{"start":{"line":104,"column":17},"end":{"line":104,"column":35}},"70":{"start":{"line":105,"column":4},"end":{"line":105,"column":113}},"71":{"start":{"line":107,"column":2},"end":{"line":107,"column":17}},"72":{"start":{"line":110,"column":18},"end":{"line":110,"column":56}},"73":{"start":{"line":111,"column":17},"end":{"line":111,"column":162}},"74":{"start":{"line":112,"column":2},"end":{"line":112,"column":23}},"75":{"start":{"line":115,"column":12},"end":{"line":115,"column":13}},"76":{"start":{"line":116,"column":2},"end":{"line":118,"column":3}},"77":{"start":{"line":116,"column":15},"end":{"line":116,"column":16}},"78":{"start":{"line":117,"column":4},"end":{"line":117,"column":43}},"79":{"start":{"line":119,"column":2},"end":{"line":119,"column":13}},"80":{"start":{"line":122,"column":14},"end":{"line":122,"column":87}},"81":{"start":{"line":123,"column":12},"end":{"line":123,"column":96}},"82":{"start":{"line":124,"column":2},"end":{"line":151,"column":3}},"83":{"start":{"line":125,"column":4},"end":{"line":137,"column":6}},"84":{"start":{"line":139,"column":4},"end":{"line":150,"column":6}},"85":{"start":{"line":154,"column":15},"end":{"line":154,"column":16}},"86":{"start":{"line":155,"column":12},"end":{"line":155,"column":85}},"87":{"start":{"line":156,"column":14},"end":{"line":156,"column":92}},"88":{"start":{"line":157,"column":2},"end":{"line":157,"column":68}},"89":{"start":{"line":158,"column":2},"end":{"line":158,"column":82}},"90":{"start":{"line":159,"column":2},"end":{"line":161,"column":3}},"91":{"start":{"line":159,"column":15},"end":{"line":159,"column":16}},"92":{"start":{"line":160,"column":4},"end":{"line":160,"column":82}},"93":{"start":{"line":162,"column":12},"end":{"line":162,"column":84}},"94":{"start":{"line":163,"column":2},"end":{"line":163,"column":43}},"95":{"start":{"line":164,"column":2},"end":{"line":164,"column":16}},"96":{"start":{"line":167,"column":15},"end":{"line":167,"column":16}},"97":{"start":{"line":168,"column":12},"end":{"line":168,"column":86}},"98":{"start":{"line":169,"column":13},"end":{"line":169,"column":100}},"99":{"start":{"line":171,"column":2},"end":{"line":178,"column":3}},"100":{"start":{"line":172,"column":20},"end":{"line":172,"column":96}},"101":{"start":{"line":173,"column":4},"end":{"line":173,"column":73}},"102":{"start":{"line":175,"column":20},"end":{"line":175,"column":96}},"103":{"start":{"line":176,"column":21},"end":{"line":176,"column":82}},"104":{"start":{"line":177,"column":4},"end":{"line":177,"column":19}},"105":{"start":{"line":179,"column":2},"end":{"line":179,"column":69}},"106":{"start":{"line":180,"column":13},"end":{"line":180,"column":84}},"107":{"start":{"line":181,"column":19},"end":{"line":181,"column":42}},"108":{"start":{"line":182,"column":21},"end":{"line":182,"column":22}},"109":{"start":{"line":183,"column":20},"end":{"line":183,"column":21}},"110":{"start":{"line":184,"column":2},"end":{"line":194,"column":3}},"111":{"start":{"line":184,"column":19},"end":{"line":184,"column":21}},"112":{"start":{"line":185,"column":24},"end":{"line":185,"column":87}},"113":{"start":{"line":186,"column":16},"end":{"line":186,"column":88}},"114":{"start":{"line":187,"column":16},"end":{"line":187,"column":94}},"115":{"start":{"line":188,"column":4},"end":{"line":188,"column":30}},"116":{"start":{"line":189,"column":22},"end":{"line":189,"column":87}},"117":{"start":{"line":190,"column":20},"end":{"line":190,"column":93}},"118":{"start":{"line":191,"column":15},"end":{"line":191,"column":64}},"119":{"start":{"line":192,"column":4},"end":{"line":192,"column":28}},"120":{"start":{"line":193,"column":4},"end":{"line":193,"column":29}},"121":{"start":{"line":195,"column":2},"end":{"line":195,"column":92}},"122":{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},"123":{"start":{"line":196,"column":15},"end":{"line":196,"column":16}},"124":{"start":{"line":197,"column":4},"end":{"line":197,"column":83}},"125":{"start":{"line":199,"column":2},"end":{"line":199,"column":49}},"126":{"start":{"line":200,"column":2},"end":{"line":200,"column":16}},"127":{"start":{"line":203,"column":19},"end":{"line":203,"column":91}},"128":{"start":{"line":204,"column":2},"end":{"line":204,"column":64}},"129":{"start":{"line":207,"column":16},"end":{"line":207,"column":52}},"130":{"start":{"line":208,"column":20},"end":{"line":208,"column":42}},"131":{"start":{"line":209,"column":21},"end":{"line":209,"column":40}},"132":{"start":{"line":210,"column":19},"end":{"line":210,"column":37}},"133":{"start":{"line":211,"column":30},"end":{"line":211,"column":77}},"134":{"start":{"line":212,"column":16},"end":{"line":212,"column":52}},"135":{"start":{"line":213,"column":20},"end":{"line":213,"column":42}},"136":{"start":{"line":214,"column":21},"end":{"line":214,"column":40}},"137":{"start":{"line":215,"column":19},"end":{"line":215,"column":37}},"138":{"start":{"line":216,"column":30},"end":{"line":216,"column":77}},"139":{"start":{"line":217,"column":2},"end":{"line":219,"column":3}},"140":{"start":{"line":218,"column":4},"end":{"line":218,"column":17}},"141":{"start":{"line":220,"column":17},"end":{"line":220,"column":83}},"142":{"start":{"line":221,"column":2},"end":{"line":223,"column":3}},"143":{"start":{"line":222,"column":4},"end":{"line":222,"column":17}},"144":{"start":{"line":224,"column":2},"end":{"line":224,"column":14}},"145":{"start":{"line":227,"column":18},"end":{"line":227,"column":83}},"146":{"start":{"line":228,"column":2},"end":{"line":228,"column":22}},"147":{"start":{"line":231,"column":13},"end":{"line":231,"column":44}},"148":{"start":{"line":232,"column":2},"end":{"line":232,"column":37}},"149":{"start":{"line":233,"column":2},"end":{"line":238,"column":3}},"150":{"start":{"line":234,"column":17},"end":{"line":234,"column":38}},"151":{"start":{"line":235,"column":18},"end":{"line":235,"column":36}},"152":{"start":{"line":236,"column":24},"end":{"line":236,"column":51}},"153":{"start":{"line":237,"column":4},"end":{"line":237,"column":33}},"154":{"start":{"line":239,"column":2},"end":{"line":239,"column":31}},"155":{"start":{"line":242,"column":20},"end":{"line":242,"column":60}},"156":{"start":{"line":243,"column":18},"end":{"line":243,"column":56}},"157":{"start":{"line":244,"column":24},"end":{"line":244,"column":50}},"158":{"start":{"line":245,"column":25},"end":{"line":245,"column":48}},"159":{"start":{"line":246,"column":23},"end":{"line":246,"column":45}},"160":{"start":{"line":247,"column":22},"end":{"line":247,"column":46}},"161":{"start":{"line":248,"column":23},"end":{"line":248,"column":44}},"162":{"start":{"line":249,"column":21},"end":{"line":249,"column":41}},"163":{"start":{"line":250,"column":25},"end":{"line":250,"column":84}},"164":{"start":{"line":251,"column":21},"end":{"line":251,"column":218}},"165":{"start":{"line":252,"column":30},"end":{"line":252,"column":93}},"166":{"start":{"line":253,"column":16},"end":{"line":253,"column":81}},"167":{"start":{"line":254,"column":30},"end":{"line":254,"column":98}},"168":{"start":{"line":255,"column":2},"end":{"line":258,"column":3}},"169":{"start":{"line":256,"column":4},"end":{"line":256,"column":99}},"170":{"start":{"line":257,"column":4},"end":{"line":257,"column":14}},"171":{"start":{"line":259,"column":2},"end":{"line":259,"column":17}},"172":{"start":{"line":262,"column":16},"end":{"line":262,"column":20}},"173":{"start":{"line":263,"column":17},"end":{"line":263,"column":26}},"174":{"start":{"line":264,"column":14},"end":{"line":264,"column":17}},"175":{"start":{"line":265,"column":12},"end":{"line":265,"column":13}},"176":{"start":{"line":266,"column":12},"end":{"line":266,"column":13}},"177":{"start":{"line":267,"column":10},"end":{"line":267,"column":15}},"178":{"start":{"line":269,"column":2},"end":{"line":275,"column":3}},"179":{"start":{"line":270,"column":16},"end":{"line":270,"column":62}},"180":{"start":{"line":271,"column":4},"end":{"line":271,"column":28}},"181":{"start":{"line":272,"column":4},"end":{"line":272,"column":10}},"182":{"start":{"line":273,"column":4},"end":{"line":273,"column":27}},"183":{"start":{"line":274,"column":4},"end":{"line":274,"column":11}},"184":{"start":{"line":276,"column":2},"end":{"line":278,"column":3}},"185":{"start":{"line":277,"column":4},"end":{"line":277,"column":46}},"186":{"start":{"line":279,"column":2},"end":{"line":279,"column":11}},"187":{"start":{"line":282,"column":16},"end":{"line":282,"column":20}},"188":{"start":{"line":283,"column":14},"end":{"line":283,"column":16}},"189":{"start":{"line":284,"column":14},"end":{"line":284,"column":30}},"190":{"start":{"line":285,"column":14},"end":{"line":285,"column":16}},"191":{"start":{"line":286,"column":15},"end":{"line":286,"column":18}},"192":{"start":{"line":287,"column":12},"end":{"line":287,"column":60}},"193":{"start":{"line":288,"column":13},"end":{"line":288,"column":61}},"194":{"start":{"line":291,"column":20},"end":{"line":291,"column":21}},"195":{"start":{"line":292,"column":2},"end":{"line":294,"column":3}},"196":{"start":{"line":293,"column":4},"end":{"line":293,"column":50}},"197":{"start":{"line":295,"column":2},"end":{"line":311,"column":3}},"198":{"start":{"line":295,"column":15},"end":{"line":295,"column":16}},"199":{"start":{"line":296,"column":4},"end":{"line":296,"column":44}},"200":{"start":{"line":297,"column":4},"end":{"line":297,"column":44}},"201":{"start":{"line":298,"column":14},"end":{"line":298,"column":27}},"202":{"start":{"line":299,"column":14},"end":{"line":299,"column":25}},"203":{"start":{"line":300,"column":4},"end":{"line":307,"column":5}},"204":{"start":{"line":301,"column":6},"end":{"line":301,"column":12}},"205":{"start":{"line":302,"column":11},"end":{"line":307,"column":5}},"206":{"start":{"line":303,"column":6},"end":{"line":303,"column":44}},"207":{"start":{"line":304,"column":6},"end":{"line":304,"column":43}},"208":{"start":{"line":306,"column":6},"end":{"line":306,"column":52}},"209":{"start":{"line":308,"column":4},"end":{"line":310,"column":5}},"210":{"start":{"line":309,"column":6},"end":{"line":309,"column":52}},"211":{"start":{"line":312,"column":2},"end":{"line":312,"column":18}},"212":{"start":{"line":313,"column":2},"end":{"line":313,"column":14}},"213":{"start":{"line":314,"column":16},"end":{"line":314,"column":29}},"214":{"start":{"line":315,"column":16},"end":{"line":315,"column":27}},"215":{"start":{"line":318,"column":2},"end":{"line":320,"column":3}},"216":{"start":{"line":319,"column":4},"end":{"line":319,"column":50}},"217":{"start":{"line":321,"column":2},"end":{"line":323,"column":3}},"218":{"start":{"line":322,"column":4},"end":{"line":322,"column":50}},"219":{"start":{"line":324,"column":2},"end":{"line":334,"column":55}},"220":{"start":{"line":325,"column":4},"end":{"line":325,"column":38}},"221":{"start":{"line":326,"column":4},"end":{"line":326,"column":20}},"222":{"start":{"line":327,"column":4},"end":{"line":331,"column":5}},"223":{"start":{"line":328,"column":6},"end":{"line":328,"column":16}},"224":{"start":{"line":330,"column":6},"end":{"line":330,"column":18}},"225":{"start":{"line":332,"column":4},"end":{"line":332,"column":28}},"226":{"start":{"line":333,"column":4},"end":{"line":333,"column":18}},"227":{"start":{"line":335,"column":2},"end":{"line":335,"column":12}},"228":{"start":{"line":338,"column":12},"end":{"line":338,"column":85}},"229":{"start":{"line":339,"column":12},"end":{"line":339,"column":93}},"230":{"start":{"line":340,"column":12},"end":{"line":340,"column":94}},"231":{"start":{"line":341,"column":2},"end":{"line":347,"column":3}},"232":{"start":{"line":342,"column":16},"end":{"line":342,"column":21}},"233":{"start":{"line":343,"column":15},"end":{"line":343,"column":50}},"234":{"start":{"line":344,"column":15},"end":{"line":344,"column":44}},"235":{"start":{"line":345,"column":15},"end":{"line":345,"column":45}},"236":{"start":{"line":346,"column":4},"end":{"line":346,"column":24}},"237":{"start":{"line":348,"column":14},"end":{"line":348,"column":19}},"238":{"start":{"line":349,"column":15},"end":{"line":349,"column":70}},"239":{"start":{"line":350,"column":2},"end":{"line":352,"column":3}},"240":{"start":{"line":350,"column":15},"end":{"line":350,"column":16}},"241":{"start":{"line":351,"column":4},"end":{"line":351,"column":82}},"242":{"start":{"line":353,"column":2},"end":{"line":353,"column":43}},"243":{"start":{"line":354,"column":2},"end":{"line":354,"column":16}},"244":{"start":{"line":357,"column":16},"end":{"line":357,"column":17}},"245":{"start":{"line":358,"column":12},"end":{"line":358,"column":25}},"246":{"start":{"line":359,"column":2},"end":{"line":364,"column":3}},"247":{"start":{"line":360,"column":4},"end":{"line":360,"column":12}},"248":{"start":{"line":361,"column":4},"end":{"line":361,"column":38}},"249":{"start":{"line":363,"column":4},"end":{"line":363,"column":47}},"250":{"start":{"line":365,"column":18},"end":{"line":365,"column":44}},"251":{"start":{"line":366,"column":15},"end":{"line":366,"column":16}},"252":{"start":{"line":367,"column":2},"end":{"line":371,"column":3}},"253":{"start":{"line":368,"column":4},"end":{"line":368,"column":31}},"254":{"start":{"line":370,"column":4},"end":{"line":370,"column":31}},"255":{"start":{"line":372,"column":2},"end":{"line":374,"column":3}},"256":{"start":{"line":373,"column":4},"end":{"line":373,"column":15}},"257":{"start":{"line":375,"column":2},"end":{"line":375,"column":16}}},"fnMap":{"0":{"name":"calculateCoupdaybs","decl":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"loc":{"start":{"line":4,"column":99},"end":{"line":8,"column":1}},"line":4},"1":{"name":"calculateCoupdays","decl":{"start":{"line":9,"column":16},"end":{"line":9,"column":33}},"loc":{"start":{"line":9,"column":98},"end":{"line":27,"column":1}},"line":9},"2":{"name":"calculateCoupncd","decl":{"start":{"line":28,"column":16},"end":{"line":28,"column":32}},"loc":{"start":{"line":28,"column":90},"end":{"line":41,"column":1}},"line":28},"3":{"name":"calculateCoupnum","decl":{"start":{"line":42,"column":16},"end":{"line":42,"column":32}},"loc":{"start":{"line":42,"column":90},"end":{"line":51,"column":1}},"line":42},"4":{"name":"calculateCouppcd","decl":{"start":{"line":52,"column":16},"end":{"line":52,"column":32}},"loc":{"start":{"line":52,"column":90},"end":{"line":64,"column":1}},"line":52},"5":{"name":"calculateDuration","decl":{"start":{"line":65,"column":16},"end":{"line":65,"column":33}},"loc":{"start":{"line":65,"column":111},"end":{"line":85,"column":1}},"line":65},"6":{"name":"calculatePMT","decl":{"start":{"line":86,"column":16},"end":{"line":86,"column":28}},"loc":{"start":{"line":86,"column":55},"end":{"line":95,"column":1}},"line":86},"7":{"name":"calculateFV","decl":{"start":{"line":96,"column":16},"end":{"line":96,"column":27}},"loc":{"start":{"line":96,"column":55},"end":{"line":108,"column":1}},"line":96},"8":{"name":"calculateIPMT","decl":{"start":{"line":109,"column":16},"end":{"line":109,"column":29}},"loc":{"start":{"line":109,"column":61},"end":{"line":113,"column":1}},"line":109},"9":{"name":"calculateNpv","decl":{"start":{"line":114,"column":16},"end":{"line":114,"column":28}},"loc":{"start":{"line":114,"column":43},"end":{"line":120,"column":1}},"line":114},"10":{"name":"calculateOddFPrice","decl":{"start":{"line":121,"column":16},"end":{"line":121,"column":34}},"loc":{"start":{"line":121,"column":166},"end":{"line":152,"column":1}},"line":121},"11":{"name":"calculateOddShortFirstCoupon","decl":{"start":{"line":153,"column":9},"end":{"line":153,"column":37}},"loc":{"start":{"line":153,"column":177},"end":{"line":165,"column":1}},"line":153},"12":{"name":"calculateOddLongFirstCoupon","decl":{"start":{"line":166,"column":9},"end":{"line":166,"column":36}},"loc":{"start":{"line":166,"column":171},"end":{"line":201,"column":1}},"line":166},"13":{"name":"getPositiveDaysBetween","decl":{"start":{"line":202,"column":9},"end":{"line":202,"column":31}},"loc":{"start":{"line":202,"column":83},"end":{"line":205,"column":1}},"line":202},"14":{"name":"validDaysBetweenIsWholeFrequencyByTwoDate","decl":{"start":{"line":206,"column":16},"end":{"line":206,"column":57}},"loc":{"start":{"line":206,"column":107},"end":{"line":225,"column":1}},"line":206},"15":{"name":"validCouppcdIsGte0ByTwoDate","decl":{"start":{"line":226,"column":16},"end":{"line":226,"column":43}},"loc":{"start":{"line":226,"column":93},"end":{"line":229,"column":1}},"line":226},"16":{"name":"getDateSerialNumberByMonths","decl":{"start":{"line":230,"column":16},"end":{"line":230,"column":43}},"loc":{"start":{"line":230,"column":81},"end":{"line":240,"column":1}},"line":230},"17":{"name":"getCouponsNumber","decl":{"start":{"line":241,"column":9},"end":{"line":241,"column":25}},"loc":{"start":{"line":241,"column":93},"end":{"line":260,"column":1}},"line":241},"18":{"name":"getResultByGuessIterF","decl":{"start":{"line":261,"column":16},"end":{"line":261,"column":37}},"loc":{"start":{"line":261,"column":52},"end":{"line":280,"column":1}},"line":261},"19":{"name":"guessIsNaNorInfinity","decl":{"start":{"line":281,"column":9},"end":{"line":281,"column":29}},"loc":{"start":{"line":281,"column":44},"end":{"line":336,"column":1}},"line":281},"20":{"name":"calculatePrice","decl":{"start":{"line":337,"column":16},"end":{"line":337,"column":30}},"loc":{"start":{"line":337,"column":118},"end":{"line":355,"column":1}},"line":337},"21":{"name":"calculateDDB","decl":{"start":{"line":356,"column":16},"end":{"line":356,"column":28}},"loc":{"start":{"line":356,"column":66},"end":{"line":376,"column":1}},"line":356}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":2},"end":{"line":25,"column":3}},"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":25,"column":3}},{"start":{"line":21,"column":9},"end":{"line":25,"column":3}}],"line":11},"1":{"loc":{"start":{"line":16,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":20,"column":5}},{"start":{"line":18,"column":11},"end":{"line":20,"column":5}}],"line":16},"2":{"loc":{"start":{"line":16,"column":8},"end":{"line":16,"column":63}},"type":"binary-expr","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":44}},{"start":{"line":16,"column":48},"end":{"line":16,"column":63}}],"line":16},"3":{"loc":{"start":{"line":21,"column":9},"end":{"line":25,"column":3}},"type":"if","locations":[{"start":{"line":21,"column":9},"end":{"line":25,"column":3}},{"start":{"line":23,"column":9},"end":{"line":25,"column":3}}],"line":21},"4":{"loc":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},{"start":{},"end":{}}],"line":32},"5":{"loc":{"start":{"line":56,"column":2},"end":{"line":58,"column":3}},"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":58,"column":3}},{"start":{},"end":{}}],"line":56},"6":{"loc":{"start":{"line":88,"column":2},"end":{"line":93,"column":3}},"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":93,"column":3}},{"start":{"line":90,"column":9},"end":{"line":93,"column":3}}],"line":88},"7":{"loc":{"start":{"line":92,"column":13},"end":{"line":92,"column":146}},"type":"cond-expr","locations":[{"start":{"line":92,"column":26},"end":{"line":92,"column":92}},{"start":{"line":92,"column":95},"end":{"line":92,"column":146}}],"line":92},"8":{"loc":{"start":{"line":98,"column":2},"end":{"line":106,"column":3}},"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":106,"column":3}},{"start":{"line":100,"column":9},"end":{"line":106,"column":3}}],"line":98},"9":{"loc":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},{"start":{},"end":{}}],"line":101},"10":{"loc":{"start":{"line":101,"column":8},"end":{"line":101,"column":33}},"type":"binary-expr","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":19}},{"start":{"line":101,"column":23},"end":{"line":101,"column":33}}],"line":101},"11":{"loc":{"start":{"line":105,"column":13},"end":{"line":105,"column":112}},"type":"cond-expr","locations":[{"start":{"line":105,"column":26},"end":{"line":105,"column":74}},{"start":{"line":105,"column":77},"end":{"line":105,"column":112}}],"line":105},"12":{"loc":{"start":{"line":111,"column":17},"end":{"line":111,"column":162}},"type":"cond-expr","locations":[{"start":{"line":111,"column":29},"end":{"line":111,"column":49}},{"start":{"line":111,"column":52},"end":{"line":111,"column":162}}],"line":111},"13":{"loc":{"start":{"line":111,"column":29},"end":{"line":111,"column":49}},"type":"cond-expr","locations":[{"start":{"line":111,"column":42},"end":{"line":111,"column":43}},{"start":{"line":111,"column":46},"end":{"line":111,"column":49}}],"line":111},"14":{"loc":{"start":{"line":111,"column":52},"end":{"line":111,"column":162}},"type":"cond-expr","locations":[{"start":{"line":111,"column":65},"end":{"line":111,"column":117}},{"start":{"line":111,"column":120},"end":{"line":111,"column":162}}],"line":111},"15":{"loc":{"start":{"line":124,"column":2},"end":{"line":151,"column":3}},"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":151,"column":3}},{"start":{"line":138,"column":9},"end":{"line":151,"column":3}}],"line":124},"16":{"loc":{"start":{"line":171,"column":2},"end":{"line":178,"column":3}},"type":"if","locations":[{"start":{"line":171,"column":2},"end":{"line":178,"column":3}},{"start":{"line":174,"column":9},"end":{"line":178,"column":3}}],"line":171},"17":{"loc":{"start":{"line":171,"column":6},"end":{"line":171,"column":32}},"type":"binary-expr","locations":[{"start":{"line":171,"column":6},"end":{"line":171,"column":17}},{"start":{"line":171,"column":21},"end":{"line":171,"column":32}}],"line":171},"18":{"loc":{"start":{"line":186,"column":16},"end":{"line":186,"column":88}},"type":"cond-expr","locations":[{"start":{"line":186,"column":30},"end":{"line":186,"column":84}},{"start":{"line":186,"column":87},"end":{"line":186,"column":88}}],"line":186},"19":{"loc":{"start":{"line":187,"column":16},"end":{"line":187,"column":94}},"type":"cond-expr","locations":[{"start":{"line":187,"column":28},"end":{"line":187,"column":31}},{"start":{"line":187,"column":34},"end":{"line":187,"column":94}}],"line":187},"20":{"loc":{"start":{"line":189,"column":22},"end":{"line":189,"column":87}},"type":"cond-expr","locations":[{"start":{"line":189,"column":56},"end":{"line":189,"column":73}},{"start":{"line":189,"column":76},"end":{"line":189,"column":87}}],"line":189},"21":{"loc":{"start":{"line":190,"column":20},"end":{"line":190,"column":93}},"type":"cond-expr","locations":[{"start":{"line":190,"column":58},"end":{"line":190,"column":80}},{"start":{"line":190,"column":83},"end":{"line":190,"column":93}}],"line":190},"22":{"loc":{"start":{"line":204,"column":9},"end":{"line":204,"column":63}},"type":"cond-expr","locations":[{"start":{"line":204,"column":55},"end":{"line":204,"column":59}},{"start":{"line":204,"column":62},"end":{"line":204,"column":63}}],"line":204},"23":{"loc":{"start":{"line":217,"column":2},"end":{"line":219,"column":3}},"type":"if","locations":[{"start":{"line":217,"column":2},"end":{"line":219,"column":3}},{"start":{},"end":{}}],"line":217},"24":{"loc":{"start":{"line":217,"column":6},"end":{"line":217,"column":76}},"type":"binary-expr","locations":[{"start":{"line":217,"column":6},"end":{"line":217,"column":27}},{"start":{"line":217,"column":31},"end":{"line":217,"column":76}}],"line":217},"25":{"loc":{"start":{"line":217,"column":33},"end":{"line":217,"column":75}},"type":"binary-expr","locations":[{"start":{"line":217,"column":33},"end":{"line":217,"column":52}},{"start":{"line":217,"column":56},"end":{"line":217,"column":75}}],"line":217},"26":{"loc":{"start":{"line":221,"column":2},"end":{"line":223,"column":3}},"type":"if","locations":[{"start":{"line":221,"column":2},"end":{"line":223,"column":3}},{"start":{},"end":{}}],"line":221},"27":{"loc":{"start":{"line":233,"column":2},"end":{"line":238,"column":3}},"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":238,"column":3}},{"start":{},"end":{}}],"line":233},"28":{"loc":{"start":{"line":251,"column":21},"end":{"line":251,"column":218}},"type":"cond-expr","locations":[{"start":{"line":251,"column":148},"end":{"line":251,"column":201}},{"start":{"line":251,"column":204},"end":{"line":251,"column":218}}],"line":251},"29":{"loc":{"start":{"line":251,"column":21},"end":{"line":251,"column":145}},"type":"binary-expr","locations":[{"start":{"line":251,"column":21},"end":{"line":251,"column":36}},{"start":{"line":251,"column":40},"end":{"line":251,"column":60}},{"start":{"line":251,"column":64},"end":{"line":251,"column":81}},{"start":{"line":251,"column":85},"end":{"line":251,"column":145}}],"line":251},"30":{"loc":{"start":{"line":255,"column":11},"end":{"line":255,"column":115}},"type":"cond-expr","locations":[{"start":{"line":255,"column":24},"end":{"line":255,"column":68}},{"start":{"line":255,"column":71},"end":{"line":255,"column":115}}],"line":255},"31":{"loc":{"start":{"line":269,"column":9},"end":{"line":269,"column":33}},"type":"binary-expr","locations":[{"start":{"line":269,"column":9},"end":{"line":269,"column":20}},{"start":{"line":269,"column":24},"end":{"line":269,"column":33}}],"line":269},"32":{"loc":{"start":{"line":276,"column":2},"end":{"line":278,"column":3}},"type":"if","locations":[{"start":{"line":276,"column":2},"end":{"line":278,"column":3}},{"start":{},"end":{}}],"line":276},"33":{"loc":{"start":{"line":276,"column":6},"end":{"line":276,"column":64}},"type":"binary-expr","locations":[{"start":{"line":276,"column":6},"end":{"line":276,"column":21}},{"start":{"line":276,"column":25},"end":{"line":276,"column":49}},{"start":{"line":276,"column":53},"end":{"line":276,"column":64}}],"line":276},"34":{"loc":{"start":{"line":287,"column":12},"end":{"line":287,"column":60}},"type":"cond-expr","locations":[{"start":{"line":287,"column":34},"end":{"line":287,"column":45}},{"start":{"line":287,"column":48},"end":{"line":287,"column":60}}],"line":287},"35":{"loc":{"start":{"line":288,"column":13},"end":{"line":288,"column":61}},"type":"cond-expr","locations":[{"start":{"line":288,"column":35},"end":{"line":288,"column":46}},{"start":{"line":288,"column":49},"end":{"line":288,"column":61}}],"line":288},"36":{"loc":{"start":{"line":292,"column":2},"end":{"line":294,"column":3}},"type":"if","locations":[{"start":{"line":292,"column":2},"end":{"line":294,"column":3}},{"start":{},"end":{}}],"line":292},"37":{"loc":{"start":{"line":292,"column":6},"end":{"line":292,"column":34}},"type":"binary-expr","locations":[{"start":{"line":292,"column":6},"end":{"line":292,"column":18}},{"start":{"line":292,"column":22},"end":{"line":292,"column":34}}],"line":292},"38":{"loc":{"start":{"line":296,"column":13},"end":{"line":296,"column":43}},"type":"cond-expr","locations":[{"start":{"line":296,"column":26},"end":{"line":296,"column":37}},{"start":{"line":296,"column":40},"end":{"line":296,"column":43}}],"line":296},"39":{"loc":{"start":{"line":297,"column":11},"end":{"line":297,"column":43}},"type":"cond-expr","locations":[{"start":{"line":297,"column":25},"end":{"line":297,"column":36}},{"start":{"line":297,"column":39},"end":{"line":297,"column":43}}],"line":297},"40":{"loc":{"start":{"line":300,"column":4},"end":{"line":307,"column":5}},"type":"if","locations":[{"start":{"line":300,"column":4},"end":{"line":307,"column":5}},{"start":{"line":302,"column":11},"end":{"line":307,"column":5}}],"line":300},"41":{"loc":{"start":{"line":302,"column":11},"end":{"line":307,"column":5}},"type":"if","locations":[{"start":{"line":302,"column":11},"end":{"line":307,"column":5}},{"start":{"line":305,"column":11},"end":{"line":307,"column":5}}],"line":302},"42":{"loc":{"start":{"line":308,"column":4},"end":{"line":310,"column":5}},"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":310,"column":5}},{"start":{},"end":{}}],"line":308},"43":{"loc":{"start":{"line":318,"column":2},"end":{"line":320,"column":3}},"type":"if","locations":[{"start":{"line":318,"column":2},"end":{"line":320,"column":3}},{"start":{},"end":{}}],"line":318},"44":{"loc":{"start":{"line":321,"column":2},"end":{"line":323,"column":3}},"type":"if","locations":[{"start":{"line":321,"column":2},"end":{"line":323,"column":3}},{"start":{},"end":{}}],"line":321},"45":{"loc":{"start":{"line":327,"column":4},"end":{"line":331,"column":5}},"type":"if","locations":[{"start":{"line":327,"column":4},"end":{"line":331,"column":5}},{"start":{"line":329,"column":11},"end":{"line":331,"column":5}}],"line":327},"46":{"loc":{"start":{"line":334,"column":11},"end":{"line":334,"column":53}},"type":"binary-expr","locations":[{"start":{"line":334,"column":11},"end":{"line":334,"column":32}},{"start":{"line":334,"column":36},"end":{"line":334,"column":53}}],"line":334},"47":{"loc":{"start":{"line":341,"column":2},"end":{"line":347,"column":3}},"type":"if","locations":[{"start":{"line":341,"column":2},"end":{"line":347,"column":3}},{"start":{},"end":{}}],"line":341},"48":{"loc":{"start":{"line":359,"column":2},"end":{"line":364,"column":3}},"type":"if","locations":[{"start":{"line":359,"column":2},"end":{"line":364,"column":3}},{"start":{"line":362,"column":9},"end":{"line":364,"column":3}}],"line":359},"49":{"loc":{"start":{"line":361,"column":14},"end":{"line":361,"column":37}},"type":"cond-expr","locations":[{"start":{"line":361,"column":29},"end":{"line":361,"column":33}},{"start":{"line":361,"column":36},"end":{"line":361,"column":37}}],"line":361},"50":{"loc":{"start":{"line":367,"column":2},"end":{"line":371,"column":3}},"type":"if","locations":[{"start":{"line":367,"column":2},"end":{"line":371,"column":3}},{"start":{"line":369,"column":9},"end":{"line":371,"column":3}}],"line":367},"51":{"loc":{"start":{"line":372,"column":2},"end":{"line":374,"column":3}},"type":"if","locations":[{"start":{"line":372,"column":2},"end":{"line":374,"column":3}},{"start":{},"end":{}}],"line":372}},"s":{"0":0,"1":0,"2":0,"3":96,"4":36,"5":36,"6":36,"7":36,"8":36,"9":0,"10":36,"11":60,"12":12,"13":48,"14":96,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":108,"26":108,"27":108,"28":108,"29":2556,"30":2556,"31":108,"32":56,"33":56,"34":56,"35":56,"36":56,"37":56,"38":81,"39":56,"40":56,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":96,"81":96,"82":96,"83":84,"84":12,"85":84,"86":84,"87":84,"88":84,"89":84,"90":84,"91":84,"92":1872,"93":84,"94":84,"95":84,"96":12,"97":12,"98":12,"99":12,"100":0,"101":0,"102":12,"103":12,"104":12,"105":12,"106":12,"107":12,"108":12,"109":12,"110":12,"111":12,"112":24,"113":24,"114":24,"115":24,"116":24,"117":24,"118":24,"119":24,"120":24,"121":12,"122":12,"123":12,"124":576,"125":12,"126":12,"127":324,"128":324,"129":8,"130":8,"131":8,"132":8,"133":8,"134":8,"135":8,"136":8,"137":8,"138":8,"139":8,"140":0,"141":8,"142":8,"143":0,"144":8,"145":8,"146":8,"147":48,"148":48,"149":48,"150":0,"151":0,"152":0,"153":0,"154":48,"155":12,"156":12,"157":12,"158":12,"159":12,"160":12,"161":12,"162":12,"163":12,"164":12,"165":12,"166":12,"167":12,"168":12,"169":0,"170":0,"171":12,"172":8,"173":8,"174":8,"175":8,"176":8,"177":8,"178":8,"179":32,"180":32,"181":32,"182":32,"183":32,"184":8,"185":0,"186":8,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0},"f":{"0":0,"1":96,"2":0,"3":108,"4":56,"5":0,"6":0,"7":0,"8":0,"9":0,"10":96,"11":84,"12":12,"13":324,"14":8,"15":8,"16":48,"17":12,"18":8,"19":0,"20":0,"21":0},"b":{"0":[36,60],"1":[0,36],"2":[36,0],"3":[12,48],"4":[0,0],"5":[56,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[84,12],"16":[0,12],"17":[12,12],"18":[24,0],"19":[12,12],"20":[12,12],"21":[24,0],"22":[312,12],"23":[0,8],"24":[8,0],"25":[0,0],"26":[0,8],"27":[0,48],"28":[0,12],"29":[12,12,12,0],"30":[12,0],"31":[40,32],"32":[0,8],"33":[8,8,8],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/financial.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorValueObject } from '../engine/value-object/base-value-object';\nimport { dateAddMonths, excelDateSerial, excelSerialToDate, getDaysInMonth, getTwoDateDaysByBasis, lastDayOfMonth } from './date';\nimport { ErrorType } from './error-type';\n\nexport function calculateCoupdaybs(settlementSerialNumber: number, maturitySerialNumber: number, frequency: number, basis: number): number {\n    const coupDateSerialNumber = calculateCouppcd(settlementSerialNumber, maturitySerialNumber, frequency);\n\n    const { days } = getTwoDateDaysByBasis(coupDateSerialNumber, settlementSerialNumber, basis);\n\n    return days;\n}\n\nexport function calculateCoupdays(settlementSerialNumber: number, maturitySerialNumber: number, frequency: number, basis: number): number {\n    let result;\n\n    if (basis === 1) {\n        const beforeSettlementDateSerialNumber = calculateCouppcd(settlementSerialNumber, maturitySerialNumber, frequency);\n\n        let coupDate = excelSerialToDate(beforeSettlementDateSerialNumber);\n        coupDate = dateAddMonths(coupDate, 12 / frequency);\n\n        const afterSettlementDateSerialNumber = excelDateSerial(coupDate);\n\n        // special handle for excel\n        if (beforeSettlementDateSerialNumber < 0 && frequency === 1) {\n            result = 365;\n        } else {\n            result = afterSettlementDateSerialNumber - beforeSettlementDateSerialNumber;\n        }\n    } else if (basis === 3) {\n        result = 365 / frequency;\n    } else {\n        result = 360 / frequency;\n    }\n\n    return result;\n}\n\nexport function calculateCoupncd(settlementSerialNumber: number, maturitySerialNumber: number, frequency: number): number {\n    const settlementDate = excelSerialToDate(settlementSerialNumber);\n    let coupDate = excelSerialToDate(maturitySerialNumber);\n\n    coupDate.setUTCFullYear(settlementDate.getUTCFullYear());\n\n    if (coupDate < settlementDate) {\n        coupDate.setUTCFullYear(coupDate.getUTCFullYear() + 1);\n    }\n\n    while (coupDate > settlementDate) {\n        coupDate = dateAddMonths(coupDate, -12 / frequency);\n    }\n\n    coupDate = dateAddMonths(coupDate, 12 / frequency);\n\n    const coupDateSerialNumber = excelDateSerial(coupDate);\n\n    return coupDateSerialNumber;\n}\n\nexport function calculateCoupnum(settlementSerialNumber: number, maturitySerialNumber: number, frequency: number): number {\n    let result = 0;\n\n    const settlementDate = excelSerialToDate(settlementSerialNumber);\n    let coupDate = excelSerialToDate(maturitySerialNumber);\n\n    while (coupDate > settlementDate) {\n        coupDate = dateAddMonths(coupDate, -12 / frequency);\n        result++;\n    }\n\n    return result;\n}\n\nexport function calculateCouppcd(settlementSerialNumber: number, maturitySerialNumber: number, frequency: number): number {\n    const settlementDate = excelSerialToDate(settlementSerialNumber);\n    let coupDate = excelSerialToDate(maturitySerialNumber);\n\n    coupDate.setUTCFullYear(settlementDate.getUTCFullYear());\n\n    if (coupDate < settlementDate) {\n        coupDate.setUTCFullYear(coupDate.getUTCFullYear() + 1);\n    }\n\n    while (coupDate > settlementDate) {\n        coupDate = dateAddMonths(coupDate, -12 / frequency);\n    }\n\n    const coupDateSerialNumber = excelDateSerial(coupDate);\n\n    return coupDateSerialNumber;\n}\n\nexport function calculateDuration(settlementSerialNumber: number, maturitySerialNumber: number, coupon: number, yld: number, frequency: number, basis: number): number {\n    const coupdaybs = calculateCoupdaybs(settlementSerialNumber, maturitySerialNumber, frequency, basis);\n    const coupdays = calculateCoupdays(settlementSerialNumber, maturitySerialNumber, frequency, basis);\n    const coupnum = calculateCoupnum(settlementSerialNumber, maturitySerialNumber, frequency);\n\n    const coupdaysDiff = (coupdays - coupdaybs) / coupdays - 1;\n    const _yld = yld / frequency + 1;\n    const _coupon = coupon * 100 / frequency;\n\n    let duration = 0;\n    let den = 0;\n\n    for (let i = 1; i <= coupnum; i++) {\n        const index = i + coupdaysDiff;\n        const num = _coupon / (_yld ** index);\n\n        duration += index * num;\n        den += num;\n    }\n\n    const index = coupnum + coupdaysDiff;\n    const num = 100 / (_yld ** index);\n\n    duration += index * num;\n    den += num;\n\n    return duration / den / frequency;\n}\n\nexport function calculatePMT(rate: number, nper: number, pv: number, fv: number, type: number): number {\n    // type = 0  Payment at the end of the period\n    // type = 1  Payment at the beginning of the period\n    let result: number;\n\n    if (rate === 0) {\n        result = (pv + fv) / nper;\n    } else {\n        const term = (1 + rate) ** nper;\n\n        result = type === 1\n            ? ((fv * rate) / (term - 1) + (pv * rate) / (1 - 1 / term)) / (1 + rate)\n            : (fv * rate) / (term - 1) + (pv * rate) / (1 - 1 / term);\n    }\n\n    return -result;\n}\n\nexport function calculateFV(rate: number, nper: number, pmt: number, pv: number, type: number): number {\n    // type = 0  Payment at the end of the period\n    // type = 1  Payment at the beginning of the period\n    let result: number;\n\n    if (rate === 0) {\n        result = pv + pmt * nper;\n    } else {\n        if (rate === -1 && nper === 0) {\n            return Number.NaN;\n        }\n\n        const term = (1 + rate) ** nper;\n\n        result = type === 1\n            ? pv * term + (pmt * (1 + rate) * (term - 1)) / rate\n            : pv * term + (pmt * (term - 1)) / rate;\n    }\n\n    return -result;\n}\n\nexport function calculateIPMT(rate: number, per: number, nper: number, pv: number, fv: number, type: number): number {\n    // type = 0  Payment at the end of the period\n    // type = 1  Payment at the beginning of the period\n    const payment = calculatePMT(rate, nper, pv, fv, type);\n\n    const result = per === 1\n        ? (type === 1 ? 0 : -pv)\n        : (type === 1 ? calculateFV(rate, per - 2, payment, pv, 1) - payment : calculateFV(rate, per - 1, payment, pv, 0));\n\n    return result * rate;\n}\n\nexport function calculateNpv(rate: number, values: number[]): number {\n    let res = 0;\n\n    for (let i = 1; i <= values.length; i++) {\n        res += values[i - 1] / ((1 + rate) ** i);\n    }\n\n    return res;\n}\n\nexport function calculateOddFPrice(\n    settlementSerialNumber: number,\n    maturitySerialNumber: number,\n    issueSerialNumber: number,\n    firstCouponSerialNumber: number,\n    rate: number,\n    yld: number,\n    redemption: number,\n    frequency: number,\n    basis: number\n): number {\n    // DFC = number of days from the beginning of the odd first coupon to the first coupon date.\n    const DFC = getPositiveDaysBetween(issueSerialNumber, firstCouponSerialNumber, basis);\n\n    // E = number of days in the coupon period.\n    const E = calculateCoupdays(settlementSerialNumber, firstCouponSerialNumber, frequency, basis);\n\n    if (DFC < E) {\n        return calculateOddShortFirstCoupon(\n            settlementSerialNumber,\n            maturitySerialNumber,\n            issueSerialNumber,\n            firstCouponSerialNumber,\n            rate,\n            yld,\n            redemption,\n            frequency,\n            basis,\n            DFC,\n            E\n        );\n    } else {\n        return calculateOddLongFirstCoupon(\n            settlementSerialNumber,\n            maturitySerialNumber,\n            issueSerialNumber,\n            firstCouponSerialNumber,\n            rate,\n            yld,\n            redemption,\n            frequency,\n            basis,\n            E\n        );\n    }\n}\n\nfunction calculateOddShortFirstCoupon(\n    settlementSerialNumber: number,\n    maturitySerialNumber: number,\n    issueSerialNumber: number,\n    firstCouponSerialNumber: number,\n    rate: number,\n    yld: number,\n    redemption: number,\n    frequency: number,\n    basis: number,\n    DFC: number,\n    E: number\n): number {\n    // calculate method from\n    // https://support.microsoft.com/en-us/office/oddfprice-function-d7d664a8-34df-4233-8d2b-922bcf6a69e1\n    // Odd short first coupon:\n    let result = 0;\n\n    // N = number of coupons payable between the settlement date and the redemption date. (If this number contains a fraction, it is raised to the next whole number.)\n    const N = calculateCoupnum(settlementSerialNumber, maturitySerialNumber, frequency);\n\n    // DSC = number of days from the settlement to the next coupon date.\n    const DSC = getPositiveDaysBetween(settlementSerialNumber, firstCouponSerialNumber, basis);\n\n    result += redemption / ((1 + yld / frequency) ** (N - 1 + DSC / E));\n\n    result += (100 * rate / frequency * DFC / E) / ((1 + yld / frequency) ** (DSC / E));\n\n    for (let k = 2; k <= N; k++) {\n        result += (100 * rate / frequency) / ((1 + yld / frequency) ** (k - 1 + DSC / E));\n    }\n\n    // A = number of days from the beginning of the coupon period to the settlement date (accrued days).\n    const A = getPositiveDaysBetween(issueSerialNumber, settlementSerialNumber, basis);\n\n    result -= 100 * rate / frequency * A / E;\n\n    return result;\n}\n\nfunction calculateOddLongFirstCoupon(\n    settlementSerialNumber: number,\n    maturitySerialNumber: number,\n    issueSerialNumber: number,\n    firstCouponSerialNumber: number,\n    rate: number,\n    yld: number,\n    redemption: number,\n    frequency: number,\n    basis: number,\n    E: number\n): number {\n    // calculate method from\n    // https://support.microsoft.com/en-us/office/oddfprice-function-d7d664a8-34df-4233-8d2b-922bcf6a69e1\n    // Odd long first coupon:\n    let result = 0;\n\n    // N = number of coupons payable between the first real coupon date and redemption date. (If this number contains a fraction, it is raised to the next whole number.)\n    const N = calculateCoupnum(firstCouponSerialNumber, maturitySerialNumber, frequency);\n\n    // Nq = number of whole quasi-coupon periods between settlement date and first coupon.\n    const Nq = getCouponsNumber(firstCouponSerialNumber, settlementSerialNumber, 12 / frequency, true);\n\n    // DSC = number of days from the settlement to the next coupon date.\n    let DSC;\n\n    if (basis === 2 || basis === 3) {\n        const coupncd = calculateCoupncd(settlementSerialNumber, firstCouponSerialNumber, frequency);\n        DSC = getPositiveDaysBetween(settlementSerialNumber, coupncd, basis);\n    } else {\n        const couppcd = calculateCouppcd(settlementSerialNumber, firstCouponSerialNumber, frequency);\n        const { days } = getTwoDateDaysByBasis(couppcd, settlementSerialNumber, basis);\n        DSC = E - days;\n    }\n\n    result += redemption / ((1 + yld / frequency) ** (N + Nq + DSC / E));\n\n    // NC = number of quasi-coupon periods that fit in odd period. (If this number contains a fraction, it is raised to the next whole number.)\n    const NC = calculateCoupnum(issueSerialNumber, firstCouponSerialNumber, frequency);\n\n    let lateCoupon = firstCouponSerialNumber;\n    let DCiDivNLiSum = 0;\n    let AiDivNLiSum = 0;\n\n    for (let index = NC; index >= 1; index--) {\n        const earlyCoupon = getDateSerialNumberByMonths(lateCoupon, -12 / frequency, false);\n        const NLi = basis === 1 ? getPositiveDaysBetween(earlyCoupon, lateCoupon, basis) : E;\n        const DCi = index > 1 ? NLi : getPositiveDaysBetween(issueSerialNumber, lateCoupon, basis);\n\n        DCiDivNLiSum += DCi / NLi;\n\n        const startDate = issueSerialNumber > earlyCoupon ? issueSerialNumber : earlyCoupon;\n        const endDate = settlementSerialNumber < lateCoupon ? settlementSerialNumber : lateCoupon;\n        const Ai = getPositiveDaysBetween(startDate, endDate, basis);\n\n        AiDivNLiSum += Ai / NLi;\n\n        lateCoupon = earlyCoupon;\n    }\n\n    result += (100 * rate / frequency * DCiDivNLiSum) / ((1 + yld / frequency) ** (Nq + DSC / E));\n\n    for (let k = 1; k <= N; k++) {\n        result += (100 * rate / frequency) / ((1 + yld / frequency) ** (k + Nq + DSC / E));\n    }\n\n    result -= 100 * rate / frequency * AiDivNLiSum;\n\n    return result;\n}\n\nfunction getPositiveDaysBetween(startDateSerialNumber: number, endDateSerialNumber: number, basis: number): number {\n    const { days } = getTwoDateDaysByBasis(startDateSerialNumber, endDateSerialNumber, basis);\n\n    return startDateSerialNumber < endDateSerialNumber ? days : 0;\n}\n\nexport function validDaysBetweenIsWholeFrequencyByTwoDate(date1SerialNumber: number, date2SerialNumber: number, frequency: number): boolean {\n    const date1 = excelSerialToDate(date1SerialNumber);\n    const date1Year = date1.getUTCFullYear();\n    const date1Month = date1.getUTCMonth();\n    const date1Day = date1.getUTCDate();\n    const date1LastDayOfMonth = lastDayOfMonth(date1Year, date1Month, date1Day);\n\n    const date2 = excelSerialToDate(date2SerialNumber);\n    const date2Year = date2.getUTCFullYear();\n    const date2Month = date2.getUTCMonth();\n    const date2Day = date2.getUTCDate();\n    const date2LastDayOfMonth = lastDayOfMonth(date2Year, date2Month, date2Day);\n\n    if (date1Day !== date2Day && !(date1LastDayOfMonth && date2LastDayOfMonth)) {\n        return false;\n    }\n\n    const months = Math.abs((date2Year - date1Year) * 12 + (date2Month - date1Month));\n\n    if (months % (12 / frequency) !== 0) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function validCouppcdIsGte0ByTwoDate(date1SerialNumber: number, date2SerialNumber: number, frequency: number): boolean {\n    const couppcd = calculateCouppcd(date1SerialNumber, date2SerialNumber, frequency);\n    return couppcd >= 0;\n}\n\nexport function getDateSerialNumberByMonths(serialNumber: number, months: number, returnLastDay: boolean): number {\n    let date = excelSerialToDate(serialNumber);\n    date = dateAddMonths(date, months);\n\n    if (returnLastDay) {\n        const year = date.getUTCFullYear();\n        const month = date.getUTCMonth();\n        const daysInMonth = getDaysInMonth(year, month);\n        date.setUTCDate(daysInMonth);\n    }\n\n    return excelDateSerial(date);\n}\n\nfunction getCouponsNumber(startDateSerialNumber: number, endDateSerialNumber: number, months: number, isWholeNumber: boolean): number {\n    const startDate = excelSerialToDate(startDateSerialNumber);\n    const endDate = excelSerialToDate(endDateSerialNumber);\n\n    const startDateYear = startDate.getUTCFullYear();\n    const startDateMonth = startDate.getUTCMonth();\n    const startDateDay = startDate.getUTCDate();\n\n    const endDateYear = endDate.getUTCFullYear();\n    const endDateMonth = endDate.getUTCMonth();\n    const endDateDay = endDate.getUTCDate();\n\n    const endOfMonthTemp = lastDayOfMonth(startDateYear, startDateMonth, startDateDay);\n    const endOfMonth = (!endOfMonthTemp && startDateMonth !== 1 && startDateDay > 28 && startDateDay < getDaysInMonth(startDateYear, startDateMonth))\n        ? lastDayOfMonth(endDateYear, endDateMonth, endDateDay)\n        : endOfMonthTemp;\n\n    const newDateSerialNumber = getDateSerialNumberByMonths(endDateSerialNumber, 0, endOfMonth);\n\n    let coupons = (+isWholeNumber - 0) + +(endDateSerialNumber < newDateSerialNumber);\n    let frontDateSerialNumber = getDateSerialNumberByMonths(newDateSerialNumber, months, endOfMonth);\n\n    while (!(months > 0 ? frontDateSerialNumber >= endDateSerialNumber : frontDateSerialNumber <= endDateSerialNumber)) {\n        frontDateSerialNumber = getDateSerialNumberByMonths(frontDateSerialNumber, months, endOfMonth);\n        coupons++;\n    }\n\n    return coupons;\n}\n\ninterface IIterFFunctionType {\n    (x: number): number;\n}\n\nexport function getResultByGuessIterF(guess: number, iterF: IIterFFunctionType): number | ErrorValueObject {\n    const g_Eps = 1e-7;\n    const g_Eps2 = g_Eps * 2;\n    const nIM = 500;\n\n    let eps = 1;\n    let nMC = 0;\n    let x = guess;\n    let xN;\n\n    while (eps > g_Eps && nMC < nIM) {\n        const den = (iterF(x + g_Eps) - iterF(x - g_Eps)) / g_Eps2;\n        xN = x - iterF(x) / den;\n        nMC++;\n        eps = Math.abs(xN - x);\n        x = xN;\n    }\n\n    if (Number.isNaN(x) || Infinity === Math.abs(x) || nMC === nIM) {\n        return guessIsNaNorInfinity(guess, iterF);\n    }\n\n    return x;\n}\n\nfunction guessIsNaNorInfinity(guess: number, iterF: IIterFFunctionType): number | ErrorValueObject {\n    const g_Eps = 1e-7;\n    const nIM = 60;\n\n    const max = Number.MAX_VALUE;\n    const min = -1;\n    const step = 1.6;\n\n    let low = guess - 0.01 <= min ? min + g_Eps : guess - 0.01;\n    let high = guess + 0.01 >= max ? max - g_Eps : guess + 0.01;\n    let xBegin;\n    let xEnd;\n    let currentIter = 0;\n\n    if (guess <= min || guess >= max) {\n        return ErrorValueObject.create(ErrorType.NUM);\n    }\n\n    for (let i = 0; i < nIM; i++) {\n        xBegin = low <= min ? min + g_Eps : low;\n        xEnd = high >= max ? max - g_Eps : high;\n\n        const x = iterF(xBegin);\n        const y = iterF(xEnd);\n\n        if (x * y <= 0) {\n            break;\n        } else if (x * y > 0) {\n            low = (xBegin + step * (xBegin - xEnd));\n            high = (xEnd + step * (xEnd - xBegin));\n        } else {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        if (i === nIM - 1) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n    }\n\n    xBegin = xBegin as number;\n    xEnd = xEnd as number;\n\n    let fXbegin = iterF(xBegin);\n    const fXend = iterF(xEnd);\n    let fXi;\n    let xI;\n\n    if (Math.abs(fXbegin) < g_Eps) {\n        return ErrorValueObject.create(ErrorType.NUM);\n    }\n\n    if (Math.abs(fXend) < g_Eps) {\n        return ErrorValueObject.create(ErrorType.NUM);\n    }\n\n    do {\n        xI = xBegin + (xEnd - xBegin) / 2;\n        fXi = iterF(xI);\n\n        if (fXbegin * fXi < 0) {\n            xEnd = xI;\n        } else {\n            xBegin = xI;\n        }\n\n        fXbegin = iterF(xBegin);\n        currentIter++;\n    } while (Math.abs(fXi) > g_Eps && currentIter < nIM);\n\n    return xI;\n}\n\nexport function calculatePrice(\n    settlementSerialNumber: number,\n    maturitySerialNumber: number,\n    rate: number,\n    yld: number,\n    redemption: number,\n    frequency: number,\n    basis: number\n): number {\n    // N is the number of coupons payable between the settlement date and redemption date\n    const N = calculateCoupnum(settlementSerialNumber, maturitySerialNumber, frequency);\n\n    // E = number of days in coupon period in which the settlement date falls.\n    const E = calculateCoupdays(settlementSerialNumber, maturitySerialNumber, frequency, basis);\n\n    // A = number of days from beginning of coupon period to settlement date.\n    const A = calculateCoupdaybs(settlementSerialNumber, maturitySerialNumber, frequency, basis);\n\n    if (N === 1) {\n        const DSR = E - A;\n        const T1 = 100 * rate / frequency + redemption;\n        const T2 = yld / frequency * DSR / E + 1;\n        const T3 = 100 * rate / frequency * A / E;\n\n        return T1 / T2 - T3;\n    }\n\n    const DSC = E - A;\n\n    let result = redemption / ((1 + yld / frequency) ** (N - 1 + DSC / E));\n\n    for (let k = 1; k <= N; k++) {\n        result += (100 * rate / frequency) / ((1 + yld / frequency) ** (k - 1 + DSC / E));\n    }\n\n    result -= 100 * rate / frequency * A / E;\n\n    return result;\n}\n\nexport function calculateDDB(cost: number, salvage: number, life: number, period: number, factor: number): number {\n    let oldCost = 0;\n    let fdl = factor / life;\n\n    if (fdl >= 1) {\n        fdl = 1;\n        oldCost = period === 1 ? cost : 0;\n    } else {\n        oldCost = cost * ((1 - fdl) ** (period - 1));\n    }\n\n    const newCost = cost * ((1 - fdl) ** period);\n\n    let result = 0;\n\n    if (newCost < salvage) {\n        result = oldCost - salvage;\n    } else {\n        result = oldCost - newCost;\n    }\n\n    if (result < 0) {\n        result = 0;\n    }\n\n    return result;\n}\n"],"mappings":"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","names":["index","num"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a4fd8cc645e28b1c23977c28848f322687dc01cd"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/check-variant-error.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/check-variant-error.ts","statementMap":{"0":{"start":{"line":4,"column":17},"end":{"line":4,"column":24}},"1":{"start":{"line":5,"column":2},"end":{"line":12,"column":3}},"2":{"start":{"line":6,"column":21},"end":{"line":6,"column":42}},"3":{"start":{"line":7,"column":24},"end":{"line":7,"column":48}},"4":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"5":{"start":{"line":9,"column":6},"end":{"line":9,"column":54}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":33}},"7":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":20}},"9":{"start":{"line":16,"column":2},"end":{"line":16,"column":18}},"10":{"start":{"line":19,"column":2},"end":{"line":28,"column":3}},"11":{"start":{"line":19,"column":15},"end":{"line":19,"column":16}},"12":{"start":{"line":20,"column":20},"end":{"line":20,"column":57}},"13":{"start":{"line":21,"column":4},"end":{"line":26,"column":5}},"14":{"start":{"line":22,"column":6},"end":{"line":25,"column":8}},"15":{"start":{"line":27,"column":4},"end":{"line":27,"column":26}},"16":{"start":{"line":29,"column":2},"end":{"line":32,"column":4}},"17":{"start":{"line":35,"column":2},"end":{"line":50,"column":3}},"18":{"start":{"line":35,"column":15},"end":{"line":35,"column":16}},"19":{"start":{"line":36,"column":20},"end":{"line":36,"column":57}},"20":{"start":{"line":37,"column":4},"end":{"line":42,"column":5}},"21":{"start":{"line":38,"column":6},"end":{"line":41,"column":8}},"22":{"start":{"line":43,"column":4},"end":{"line":48,"column":5}},"23":{"start":{"line":44,"column":6},"end":{"line":47,"column":8}},"24":{"start":{"line":49,"column":4},"end":{"line":49,"column":26}},"25":{"start":{"line":51,"column":2},"end":{"line":54,"column":4}},"26":{"start":{"line":57,"column":2},"end":{"line":85,"column":3}},"27":{"start":{"line":57,"column":15},"end":{"line":57,"column":16}},"28":{"start":{"line":58,"column":18},"end":{"line":58,"column":29}},"29":{"start":{"line":59,"column":4},"end":{"line":64,"column":5}},"30":{"start":{"line":60,"column":6},"end":{"line":63,"column":8}},"31":{"start":{"line":65,"column":4},"end":{"line":70,"column":5}},"32":{"start":{"line":66,"column":6},"end":{"line":69,"column":8}},"33":{"start":{"line":71,"column":4},"end":{"line":71,"column":52}},"34":{"start":{"line":72,"column":4},"end":{"line":77,"column":5}},"35":{"start":{"line":73,"column":6},"end":{"line":76,"column":8}},"36":{"start":{"line":78,"column":4},"end":{"line":83,"column":5}},"37":{"start":{"line":79,"column":6},"end":{"line":82,"column":8}},"38":{"start":{"line":84,"column":4},"end":{"line":84,"column":26}},"39":{"start":{"line":86,"column":2},"end":{"line":89,"column":4}},"40":{"start":{"line":92,"column":2},"end":{"line":104,"column":3}},"41":{"start":{"line":92,"column":15},"end":{"line":92,"column":16}},"42":{"start":{"line":93,"column":18},"end":{"line":93,"column":29}},"43":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"44":{"start":{"line":95,"column":6},"end":{"line":95,"column":53}},"45":{"start":{"line":97,"column":4},"end":{"line":102,"column":5}},"46":{"start":{"line":98,"column":6},"end":{"line":101,"column":8}},"47":{"start":{"line":103,"column":4},"end":{"line":103,"column":26}},"48":{"start":{"line":105,"column":2},"end":{"line":108,"column":4}}},"fnMap":{"0":{"name":"checkVariantErrorIsArray","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":40}},"loc":{"start":{"line":3,"column":50},"end":{"line":17,"column":1}},"line":3},"1":{"name":"checkVariantsErrorIsArray","decl":{"start":{"line":18,"column":16},"end":{"line":18,"column":41}},"loc":{"start":{"line":18,"column":55},"end":{"line":33,"column":1}},"line":18},"2":{"name":"checkVariantsErrorIsArrayOrBoolean","decl":{"start":{"line":34,"column":16},"end":{"line":34,"column":50}},"loc":{"start":{"line":34,"column":64},"end":{"line":55,"column":1}},"line":34},"3":{"name":"checkVariantsErrorIsNullorArrayOrBoolean","decl":{"start":{"line":56,"column":16},"end":{"line":56,"column":56}},"loc":{"start":{"line":56,"column":70},"end":{"line":90,"column":1}},"line":56},"4":{"name":"checkVariantsErrorIsStringToNumber","decl":{"start":{"line":91,"column":16},"end":{"line":91,"column":50}},"loc":{"start":{"line":91,"column":64},"end":{"line":109,"column":1}},"line":91}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":2},"end":{"line":12,"column":3}},"type":"if","locations":[{"start":{"line":5,"column":2},"end":{"line":12,"column":3}},{"start":{},"end":{}}],"line":5},"1":{"loc":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},{"start":{},"end":{}}],"line":8},"2":{"loc":{"start":{"line":8,"column":8},"end":{"line":8,"column":39}},"type":"binary-expr","locations":[{"start":{"line":8,"column":8},"end":{"line":8,"column":20}},{"start":{"line":8,"column":24},"end":{"line":8,"column":39}}],"line":8},"3":{"loc":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},{"start":{},"end":{}}],"line":13},"4":{"loc":{"start":{"line":21,"column":4},"end":{"line":26,"column":5}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":26,"column":5}},{"start":{},"end":{}}],"line":21},"5":{"loc":{"start":{"line":37,"column":4},"end":{"line":42,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":42,"column":5}},{"start":{},"end":{}}],"line":37},"6":{"loc":{"start":{"line":43,"column":4},"end":{"line":48,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":48,"column":5}},{"start":{},"end":{}}],"line":43},"7":{"loc":{"start":{"line":59,"column":4},"end":{"line":64,"column":5}},"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":64,"column":5}},{"start":{},"end":{}}],"line":59},"8":{"loc":{"start":{"line":65,"column":4},"end":{"line":70,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":70,"column":5}},{"start":{},"end":{}}],"line":65},"9":{"loc":{"start":{"line":72,"column":4},"end":{"line":77,"column":5}},"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":77,"column":5}},{"start":{},"end":{}}],"line":72},"10":{"loc":{"start":{"line":78,"column":4},"end":{"line":83,"column":5}},"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":83,"column":5}},{"start":{},"end":{}}],"line":78},"11":{"loc":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},{"start":{},"end":{}}],"line":94},"12":{"loc":{"start":{"line":97,"column":4},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":102,"column":5}},{"start":{},"end":{}}],"line":97}},"s":{"0":180,"1":180,"2":1,"3":1,"4":1,"5":1,"6":0,"7":179,"8":0,"9":179,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":22,"27":22,"28":181,"29":181,"30":1,"31":180,"32":0,"33":180,"34":180,"35":1,"36":179,"37":1,"38":178,"39":19,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0},"f":{"0":180,"1":0,"2":0,"3":22,"4":0},"b":{"0":[1,179],"1":[1,0],"2":[1,1],"3":[0,179],"4":[0,0],"5":[0,0],"6":[0,0],"7":[1,180],"8":[0,180],"9":[1,179],"10":[1,178],"11":[0,0],"12":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/check-variant-error.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ArrayValueObject } from '../value-object/array-value-object';\nimport { ErrorType } from '../../basics/error-type';\nimport { type BaseValueObject, ErrorValueObject } from '../value-object/base-value-object';\n\nexport function checkVariantErrorIsArray(variant: BaseValueObject): BaseValueObject {\n    let _variant = variant;\n\n    if (variant.isArray()) {\n        const rowCount = (variant as ArrayValueObject).getRowCount();\n        const columnCount = (variant as ArrayValueObject).getColumnCount();\n\n        if (rowCount > 1 || columnCount > 1) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        _variant = (variant as ArrayValueObject).get(0, 0) as BaseValueObject;\n    }\n\n    if (_variant.isError()) {\n        return _variant;\n    }\n\n    return _variant;\n}\n\nexport function checkVariantsErrorIsArray(...variants: BaseValueObject[]) {\n    for (let i = 0; i < variants.length; i++) {\n        const variant = checkVariantErrorIsArray(variants[i]);\n\n        if (variant.isError()) {\n            return {\n                isError: true,\n                errorObject: variant,\n            };\n        }\n\n        variants[i] = variant;\n    }\n\n    return {\n        isError: false,\n        variants,\n    };\n}\n\nexport function checkVariantsErrorIsArrayOrBoolean(...variants: BaseValueObject[]) {\n    for (let i = 0; i < variants.length; i++) {\n        const variant = checkVariantErrorIsArray(variants[i]);\n\n        if (variant.isError()) {\n            return {\n                isError: true,\n                errorObject: variant,\n            };\n        }\n\n        if (variant.isBoolean()) {\n            return {\n                isError: true,\n                errorObject: ErrorValueObject.create(ErrorType.VALUE),\n            };\n        }\n\n        variants[i] = variant;\n    }\n\n    return {\n        isError: false,\n        variants,\n    };\n}\n\n// All variants cannot be null.\nexport function checkVariantsErrorIsNullorArrayOrBoolean(...variants: BaseValueObject[]) {\n    for (let i = 0; i < variants.length; i++) {\n        let variant = variants[i];\n\n        if (variant.isError()) {\n            return {\n                isError: true,\n                errorObject: variant,\n            };\n        }\n\n        if (variant.isNull()) {\n            return {\n                isError: true,\n                errorObject: ErrorValueObject.create(ErrorType.NA),\n            };\n        }\n\n        variant = checkVariantErrorIsArray(variants[i]);\n\n        if (variant.isError()) {\n            return {\n                isError: true,\n                errorObject: variant,\n            };\n        }\n\n        if (variant.isBoolean()) {\n            return {\n                isError: true,\n                errorObject: ErrorValueObject.create(ErrorType.VALUE),\n            };\n        }\n\n        variants[i] = variant;\n    }\n\n    return {\n        isError: false,\n        variants,\n    };\n}\n\nexport function checkVariantsErrorIsStringToNumber(...variants: BaseValueObject[]) {\n    for (let i = 0; i < variants.length; i++) {\n        let variant = variants[i];\n\n        if (variant.isString()) {\n            variant = variant.convertToNumberObjectValue();\n        }\n\n        if (variant.isError()) {\n            return {\n                isError: true,\n                errorObject: variant,\n            };\n        }\n\n        variants[i] = variant;\n    }\n\n    return {\n        isError: false,\n        variants,\n    };\n}\n"],"mappings":"AAiBA,SAAS,iBAAiB;AAC1B,SAA+B,wBAAwB;AAEhD,gBAAS,yBAAyB,SAA2C;AAChF,MAAI,WAAW;AAEf,MAAI,QAAQ,QAAQ,GAAG;AACnB,UAAM,WAAY,QAA6B,YAAY;AAC3D,UAAM,cAAe,QAA6B,eAAe;AAEjE,QAAI,WAAW,KAAK,cAAc,GAAG;AACjC,aAAO,iBAAiB,OAAO,UAAU,KAAK;AAAA,IAClD;AAEA,eAAY,QAA6B,IAAI,GAAG,CAAC;AAAA,EACrD;AAEA,MAAI,SAAS,QAAQ,GAAG;AACpB,WAAO;AAAA,EACX;AAEA,SAAO;AACX;AAEO,gBAAS,6BAA6B,UAA6B;AACtE,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,UAAM,UAAU,yBAAyB,SAAS,CAAC,CAAC;AAEpD,QAAI,QAAQ,QAAQ,GAAG;AACnB,aAAO;AAAA,QACH,SAAS;AAAA,QACT,aAAa;AAAA,MACjB;AAAA,IACJ;AAEA,aAAS,CAAC,IAAI;AAAA,EAClB;AAEA,SAAO;AAAA,IACH,SAAS;AAAA,IACT;AAAA,EACJ;AACJ;AAEO,gBAAS,sCAAsC,UAA6B;AAC/E,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,UAAM,UAAU,yBAAyB,SAAS,CAAC,CAAC;AAEpD,QAAI,QAAQ,QAAQ,GAAG;AACnB,aAAO;AAAA,QACH,SAAS;AAAA,QACT,aAAa;AAAA,MACjB;AAAA,IACJ;AAEA,QAAI,QAAQ,UAAU,GAAG;AACrB,aAAO;AAAA,QACH,SAAS;AAAA,QACT,aAAa,iBAAiB,OAAO,UAAU,KAAK;AAAA,MACxD;AAAA,IACJ;AAEA,aAAS,CAAC,IAAI;AAAA,EAClB;AAEA,SAAO;AAAA,IACH,SAAS;AAAA,IACT;AAAA,EACJ;AACJ;AAGO,gBAAS,4CAA4C,UAA6B;AACrF,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,QAAI,UAAU,SAAS,CAAC;AAExB,QAAI,QAAQ,QAAQ,GAAG;AACnB,aAAO;AAAA,QACH,SAAS;AAAA,QACT,aAAa;AAAA,MACjB;AAAA,IACJ;AAEA,QAAI,QAAQ,OAAO,GAAG;AAClB,aAAO;AAAA,QACH,SAAS;AAAA,QACT,aAAa,iBAAiB,OAAO,UAAU,EAAE;AAAA,MACrD;AAAA,IACJ;AAEA,cAAU,yBAAyB,SAAS,CAAC,CAAC;AAE9C,QAAI,QAAQ,QAAQ,GAAG;AACnB,aAAO;AAAA,QACH,SAAS;AAAA,QACT,aAAa;AAAA,MACjB;AAAA,IACJ;AAEA,QAAI,QAAQ,UAAU,GAAG;AACrB,aAAO;AAAA,QACH,SAAS;AAAA,QACT,aAAa,iBAAiB,OAAO,UAAU,KAAK;AAAA,MACxD;AAAA,IACJ;AAEA,aAAS,CAAC,IAAI;AAAA,EAClB;AAEA,SAAO;AAAA,IACH,SAAS;AAAA,IACT;AAAA,EACJ;AACJ;AAEO,gBAAS,sCAAsC,UAA6B;AAC/E,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,QAAI,UAAU,SAAS,CAAC;AAExB,QAAI,QAAQ,SAAS,GAAG;AACpB,gBAAU,QAAQ,2BAA2B;AAAA,IACjD;AAEA,QAAI,QAAQ,QAAQ,GAAG;AACnB,aAAO;AAAA,QACH,SAAS;AAAA,QACT,aAAa;AAAA,MACjB;AAAA,IACJ;AAEA,aAAS,CAAC,IAAI;AAAA,EAClB;AAEA,SAAO;AAAA,IACH,SAAS;AAAA,IACT;AAAA,EACJ;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"055858b8c2b562817462a55694cbeddf1bc744a6"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/calculate.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/calculate.ts","statementMap":{"0":{"start":{"line":4,"column":2},"end":{"line":23,"column":3}},"1":{"start":{"line":6,"column":6},"end":{"line":6,"column":35}},"2":{"start":{"line":7,"column":6},"end":{"line":7,"column":12}},"3":{"start":{"line":9,"column":6},"end":{"line":9,"column":38}},"4":{"start":{"line":10,"column":6},"end":{"line":10,"column":12}},"5":{"start":{"line":12,"column":6},"end":{"line":12,"column":47}},"6":{"start":{"line":13,"column":6},"end":{"line":13,"column":12}},"7":{"start":{"line":15,"column":6},"end":{"line":15,"column":41}},"8":{"start":{"line":16,"column":6},"end":{"line":16,"column":12}},"9":{"start":{"line":18,"column":6},"end":{"line":18,"column":50}},"10":{"start":{"line":19,"column":6},"end":{"line":19,"column":12}},"11":{"start":{"line":21,"column":6},"end":{"line":21,"column":38}},"12":{"start":{"line":22,"column":6},"end":{"line":22,"column":12}},"13":{"start":{"line":24,"column":2},"end":{"line":24,"column":16}}},"fnMap":{"0":{"name":"reverseCompareOperator","decl":{"start":{"line":2,"column":16},"end":{"line":2,"column":38}},"loc":{"start":{"line":2,"column":49},"end":{"line":25,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":2},"end":{"line":23,"column":3}},"type":"switch","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":12}},{"start":{"line":8,"column":4},"end":{"line":10,"column":12}},{"start":{"line":11,"column":4},"end":{"line":13,"column":12}},{"start":{"line":14,"column":4},"end":{"line":16,"column":12}},{"start":{"line":17,"column":4},"end":{"line":19,"column":12}},{"start":{"line":20,"column":4},"end":{"line":22,"column":12}}],"line":4}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"f":{"0":0},"b":{"0":[0,0,0,0,0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/calculate.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { compareToken } from './token';\n\nexport function reverseCompareOperator(operator: compareToken): compareToken {\n    let result: compareToken;\n    switch (operator) {\n        case compareToken.EQUALS:\n            result = compareToken.EQUALS;\n            break;\n        case compareToken.GREATER_THAN:\n            result = compareToken.LESS_THAN;\n            break;\n        case compareToken.GREATER_THAN_OR_EQUAL:\n            result = compareToken.LESS_THAN_OR_EQUAL;\n            break;\n        case compareToken.LESS_THAN:\n            result = compareToken.GREATER_THAN;\n            break;\n        case compareToken.LESS_THAN_OR_EQUAL:\n            result = compareToken.GREATER_THAN_OR_EQUAL;\n            break;\n        case compareToken.NOT_EQUAL:\n            result = compareToken.NOT_EQUAL;\n            break;\n    }\n    return result;\n}\n"],"mappings":"AAgBA,SAAS,oBAAoB;AAEtB,gBAAS,uBAAuB,UAAsC;AACzE,MAAI;AACJ,UAAQ,UAAU;AAAA,IACd,KAAK,aAAa;AACd,eAAS,aAAa;AACtB;AAAA,IACJ,KAAK,aAAa;AACd,eAAS,aAAa;AACtB;AAAA,IACJ,KAAK,aAAa;AACd,eAAS,aAAa;AACtB;AAAA,IACJ,KAAK,aAAa;AACd,eAAS,aAAa;AACtB;AAAA,IACJ,KAAK,aAAa;AACd,eAAS,aAAa;AACtB;AAAA,IACJ,KAAK,aAAa;AACd,eAAS,aAAa;AACtB;AAAA,EACR;AACA,SAAO;AACX;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ac6106bb926586db8d7a182a9929a05c843ba661"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/compare.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/compare.ts","statementMap":{"0":{"start":{"line":2,"column":51},"end":{"line":6,"column":31}},"1":{"start":{"line":3,"column":2},"end":{"line":3,"column":68}},"2":{"start":{"line":4,"column":2},"end":{"line":4,"column":68}},"3":{"start":{"line":5,"column":2},"end":{"line":5,"column":32}},"4":{"start":{"line":7,"column":50},"end":{"line":12,"column":30}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":72}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":66}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":66}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":31}},"9":{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":65}},"11":{"start":{"line":17,"column":2},"end":{"line":19,"column":4}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":30}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":56}},"14":{"start":{"line":25,"column":18},"end":{"line":36,"column":4}},"15":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"16":{"start":{"line":27,"column":6},"end":{"line":27,"column":39}},"17":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"18":{"start":{"line":30,"column":6},"end":{"line":30,"column":18}},"19":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"20":{"start":{"line":33,"column":6},"end":{"line":33,"column":17}},"21":{"start":{"line":35,"column":4},"end":{"line":35,"column":17}},"22":{"start":{"line":37,"column":16},"end":{"line":37,"column":42}},"23":{"start":{"line":38,"column":2},"end":{"line":38,"column":34}},"24":{"start":{"line":41,"column":2},"end":{"line":46,"column":5}},"25":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"26":{"start":{"line":43,"column":6},"end":{"line":43,"column":32}},"27":{"start":{"line":45,"column":4},"end":{"line":45,"column":15}},"28":{"start":{"line":49,"column":15},"end":{"line":49,"column":20}},"29":{"start":{"line":50,"column":2},"end":{"line":67,"column":3}},"30":{"start":{"line":52,"column":6},"end":{"line":52,"column":52}},"31":{"start":{"line":53,"column":6},"end":{"line":53,"column":12}},"32":{"start":{"line":55,"column":6},"end":{"line":55,"column":53}},"33":{"start":{"line":56,"column":6},"end":{"line":56,"column":12}},"34":{"start":{"line":59,"column":6},"end":{"line":59,"column":93}},"35":{"start":{"line":60,"column":6},"end":{"line":60,"column":12}},"36":{"start":{"line":63,"column":6},"end":{"line":63,"column":53}},"37":{"start":{"line":64,"column":6},"end":{"line":64,"column":12}},"38":{"start":{"line":66,"column":6},"end":{"line":66,"column":12}},"39":{"start":{"line":68,"column":2},"end":{"line":68,"column":16}},"40":{"start":{"line":71,"column":2},"end":{"line":71,"column":50}},"41":{"start":{"line":74,"column":2},"end":{"line":83,"column":3}},"42":{"start":{"line":76,"column":6},"end":{"line":76,"column":25}},"43":{"start":{"line":78,"column":6},"end":{"line":78,"column":28}},"44":{"start":{"line":80,"column":6},"end":{"line":80,"column":25}},"45":{"start":{"line":82,"column":6},"end":{"line":82,"column":28}},"46":{"start":{"line":86,"column":2},"end":{"line":86,"column":60}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":52},"end":{"line":2,"column":53}},"loc":{"start":{"line":2,"column":80},"end":{"line":6,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":51},"end":{"line":7,"column":52}},"loc":{"start":{"line":7,"column":78},"end":{"line":12,"column":1}},"line":7},"2":{"name":"getCompare","decl":{"start":{"line":13,"column":16},"end":{"line":13,"column":26}},"loc":{"start":{"line":13,"column":29},"end":{"line":20,"column":1}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":10}},"loc":{"start":{"line":17,"column":19},"end":{"line":19,"column":3}},"line":17},"4":{"name":"isWildcard","decl":{"start":{"line":21,"column":16},"end":{"line":21,"column":26}},"loc":{"start":{"line":21,"column":32},"end":{"line":23,"column":1}},"line":21},"5":{"name":"isMatchWildcard","decl":{"start":{"line":24,"column":16},"end":{"line":24,"column":31}},"loc":{"start":{"line":24,"column":53},"end":{"line":39,"column":1}},"line":24},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":57},"end":{"line":25,"column":58}},"loc":{"start":{"line":25,"column":68},"end":{"line":36,"column":3}},"line":25},"7":{"name":"replaceWildcard","decl":{"start":{"line":40,"column":16},"end":{"line":40,"column":31}},"loc":{"start":{"line":40,"column":39},"end":{"line":47,"column":1}},"line":40},"8":{"name":"(anonymous_8)","decl":{"start":{"line":41,"column":34},"end":{"line":41,"column":35}},"loc":{"start":{"line":41,"column":45},"end":{"line":46,"column":3}},"line":41},"9":{"name":"compareWithWildcard","decl":{"start":{"line":48,"column":16},"end":{"line":48,"column":35}},"loc":{"start":{"line":48,"column":67},"end":{"line":69,"column":1}},"line":48},"10":{"name":"escapeRegExp","decl":{"start":{"line":70,"column":16},"end":{"line":70,"column":28}},"loc":{"start":{"line":70,"column":34},"end":{"line":72,"column":1}},"line":70},"11":{"name":"getMatchModeValue","decl":{"start":{"line":73,"column":16},"end":{"line":73,"column":33}},"loc":{"start":{"line":73,"column":50},"end":{"line":84,"column":1}},"line":73},"12":{"name":"getSearchModeValue","decl":{"start":{"line":85,"column":16},"end":{"line":85,"column":34}},"loc":{"start":{"line":85,"column":52},"end":{"line":87,"column":1}},"line":85}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":3},"end":{"line":6,"column":30}},"type":"binary-expr","locations":[{"start":{"line":6,"column":3},"end":{"line":6,"column":24}},{"start":{"line":6,"column":28},"end":{"line":6,"column":30}}],"line":6},"1":{"loc":{"start":{"line":12,"column":3},"end":{"line":12,"column":29}},"type":"binary-expr","locations":[{"start":{"line":12,"column":3},"end":{"line":12,"column":23}},{"start":{"line":12,"column":27},"end":{"line":12,"column":29}}],"line":12},"2":{"loc":{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},{"start":{},"end":{}}],"line":14},"3":{"loc":{"start":{"line":14,"column":6},"end":{"line":14,"column":27}},"type":"binary-expr","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":10}},{"start":{"line":14,"column":14},"end":{"line":14,"column":27}}],"line":14},"4":{"loc":{"start":{"line":22,"column":9},"end":{"line":22,"column":55}},"type":"binary-expr","locations":[{"start":{"line":22,"column":9},"end":{"line":22,"column":30}},{"start":{"line":22,"column":34},"end":{"line":22,"column":55}}],"line":22},"5":{"loc":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},{"start":{},"end":{}}],"line":26},"6":{"loc":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},{"start":{},"end":{}}],"line":29},"7":{"loc":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},{"start":{},"end":{}}],"line":32},"8":{"loc":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},{"start":{},"end":{}}],"line":42},"9":{"loc":{"start":{"line":50,"column":2},"end":{"line":67,"column":3}},"type":"switch","locations":[{"start":{"line":51,"column":4},"end":{"line":53,"column":12}},{"start":{"line":54,"column":4},"end":{"line":56,"column":12}},{"start":{"line":57,"column":4},"end":{"line":57,"column":35}},{"start":{"line":58,"column":4},"end":{"line":60,"column":12}},{"start":{"line":61,"column":4},"end":{"line":61,"column":32}},{"start":{"line":62,"column":4},"end":{"line":64,"column":12}},{"start":{"line":65,"column":4},"end":{"line":66,"column":12}}],"line":50},"10":{"loc":{"start":{"line":59,"column":15},"end":{"line":59,"column":92}},"type":"binary-expr","locations":[{"start":{"line":59,"column":15},"end":{"line":59,"column":51}},{"start":{"line":59,"column":55},"end":{"line":59,"column":92}}],"line":59},"11":{"loc":{"start":{"line":74,"column":2},"end":{"line":83,"column":3}},"type":"switch","locations":[{"start":{"line":75,"column":4},"end":{"line":76,"column":25}},{"start":{"line":77,"column":4},"end":{"line":78,"column":28}},{"start":{"line":79,"column":4},"end":{"line":80,"column":25}},{"start":{"line":81,"column":4},"end":{"line":82,"column":28}}],"line":74},"12":{"loc":{"start":{"line":86,"column":9},"end":{"line":86,"column":49}},"type":"cond-expr","locations":[{"start":{"line":86,"column":34},"end":{"line":86,"column":35}},{"start":{"line":86,"column":48},"end":{"line":86,"column":49}}],"line":86}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},"f":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"0":[1,1],"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0,0,0,0],"10":[0,0],"11":[0,0,0,0],"12":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/compare.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { compareToken } from '../../basics/token';\n\n/**\n * For SearchType\n */\nexport enum ArrayBinarySearchType {\n    MIN, // Ascending order\n    MAX, // Descending order\n}\n\n/**\n * For MatchType\n */\nexport enum ArrayOrderSearchType {\n    NORMAL, // Exact match.\n    MIN, // Exact match. If none found, return the next smaller item.\n    MAX, // Exact match. If none found, return the next larger item.\n}\n\nexport function getCompare() {\n    if (Intl && Intl.Collator) {\n        return new Intl.Collator(undefined, { numeric: false }).compare;\n    }\n\n    return (a: string, b: string): number => {\n        return a.localeCompare(b);\n    };\n}\n\nexport function isWildcard(str: string) {\n    return str.indexOf('*') > -1 || str.indexOf('?') > -1;\n}\n\nexport function isMatchWildcard(currentValue: string, value: string) {\n    const pattern = escapeRegExp(value).replace(/~?[*?]/g, (match) => {\n        if (match.startsWith('~')) {\n            return `\\\\${match.substring(1)}`;\n        }\n        if (match === '*') {\n            return '.*';\n        }\n        if (match === '?') {\n            return '.';\n        }\n        return match;\n    });\n    const regex = new RegExp(`^${pattern}$`);\n    return regex.test(currentValue);\n}\n\nexport function replaceWildcard(value: string) {\n    return value.replace(/~?[*?]/g, (match) => {\n        if (match.startsWith('~')) {\n            return match.substring(1);\n        }\n        return ' ';\n    });\n}\n\nexport function compareWithWildcard(currentValue: string, value: string, operator: compareToken) {\n    let result = false;\n\n    switch (operator) {\n        case compareToken.EQUALS:\n            result = isMatchWildcard(currentValue, value);\n            break;\n        case compareToken.NOT_EQUAL:\n            result = !isMatchWildcard(currentValue, value);\n            break;\n        case compareToken.GREATER_THAN:\n        case compareToken.GREATER_THAN_OR_EQUAL:\n            result = isMatchWildcard(currentValue, value) || currentValue > replaceWildcard(value);\n\n            break;\n\n        case compareToken.LESS_THAN:\n        case compareToken.LESS_THAN_OR_EQUAL:\n            result = currentValue < replaceWildcard(value);\n            break;\n\n        default:\n            break;\n    }\n\n    return result;\n}\n\nexport function escapeRegExp(str: string) {\n    return str.replace(/[.+^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nexport function getMatchModeValue(matchModeValue: number) {\n    switch (matchModeValue) {\n        case 1:\n            return ArrayOrderSearchType.MAX;\n        case 0:\n            return ArrayOrderSearchType.NORMAL;\n        case -1:\n            return ArrayOrderSearchType.MIN;\n        default:\n            return ArrayOrderSearchType.NORMAL;\n    }\n}\n\nexport function getSearchModeValue(searchModeValue: number) {\n    return searchModeValue === -2 ? ArrayBinarySearchType.MAX : ArrayBinarySearchType.MIN;\n}\n"],"mappings":"AAgBA,SAAS,oBAAoB;AAKtB,WAAK,wBAAL,kBAAKA,2BAAL;AACH,EAAAA,8CAAA;AACA,EAAAA,8CAAA;AAFQ,SAAAA;AAAA,GAAA;AAQL,WAAK,uBAAL,kBAAKC,0BAAL;AACH,EAAAA,4CAAA;AACA,EAAAA,4CAAA;AACA,EAAAA,4CAAA;AAHQ,SAAAA;AAAA,GAAA;AAML,gBAAS,aAAa;AACzB,MAAI,QAAQ,KAAK,UAAU;AACvB,WAAO,IAAI,KAAK,SAAS,QAAW,EAAE,SAAS,MAAM,CAAC,EAAE;AAAA,EAC5D;AAEA,SAAO,CAAC,GAAW,MAAsB;AACrC,WAAO,EAAE,cAAc,CAAC;AAAA,EAC5B;AACJ;AAEO,gBAAS,WAAW,KAAa;AACpC,SAAO,IAAI,QAAQ,GAAG,IAAI,MAAM,IAAI,QAAQ,GAAG,IAAI;AACvD;AAEO,gBAAS,gBAAgB,cAAsB,OAAe;AACjE,QAAM,UAAU,aAAa,KAAK,EAAE,QAAQ,WAAW,CAAC,UAAU;AAC9D,QAAI,MAAM,WAAW,GAAG,GAAG;AACvB,aAAO,KAAK,MAAM,UAAU,CAAC,CAAC;AAAA,IAClC;AACA,QAAI,UAAU,KAAK;AACf,aAAO;AAAA,IACX;AACA,QAAI,UAAU,KAAK;AACf,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX,CAAC;AACD,QAAM,QAAQ,IAAI,OAAO,IAAI,OAAO,GAAG;AACvC,SAAO,MAAM,KAAK,YAAY;AAClC;AAEO,gBAAS,gBAAgB,OAAe;AAC3C,SAAO,MAAM,QAAQ,WAAW,CAAC,UAAU;AACvC,QAAI,MAAM,WAAW,GAAG,GAAG;AACvB,aAAO,MAAM,UAAU,CAAC;AAAA,IAC5B;AACA,WAAO;AAAA,EACX,CAAC;AACL;AAEO,gBAAS,oBAAoB,cAAsB,OAAe,UAAwB;AAC7F,MAAI,SAAS;AAEb,UAAQ,UAAU;AAAA,IACd,KAAK,aAAa;AACd,eAAS,gBAAgB,cAAc,KAAK;AAC5C;AAAA,IACJ,KAAK,aAAa;AACd,eAAS,CAAC,gBAAgB,cAAc,KAAK;AAC7C;AAAA,IACJ,KAAK,aAAa;AAAA,IAClB,KAAK,aAAa;AACd,eAAS,gBAAgB,cAAc,KAAK,KAAK,eAAe,gBAAgB,KAAK;AAErF;AAAA,IAEJ,KAAK,aAAa;AAAA,IAClB,KAAK,aAAa;AACd,eAAS,eAAe,gBAAgB,KAAK;AAC7C;AAAA,IAEJ;AACI;AAAA,EACR;AAEA,SAAO;AACX;AAEO,gBAAS,aAAa,KAAa;AACtC,SAAO,IAAI,QAAQ,qBAAqB,MAAM;AAClD;AAEO,gBAAS,kBAAkB,gBAAwB;AACtD,UAAQ,gBAAgB;AAAA,IACpB,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,IACX;AACI,aAAO;AAAA,EACf;AACJ;AAEO,gBAAS,mBAAmB,iBAAyB;AACxD,SAAO,oBAAoB,KAAK,cAA4B;AAChE;","names":["ArrayBinarySearchType","ArrayOrderSearchType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5b16382b2517b57a89ed38f7995172e14baa77e6"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/math-kit.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/math-kit.ts","statementMap":{"0":{"start":{"line":3,"column":17},"end":{"line":3,"column":22}},"1":{"start":{"line":4,"column":2},"end":{"line":6,"column":3}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":18}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":42}},"4":{"start":{"line":10,"column":17},"end":{"line":10,"column":22}},"5":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":18}},"7":{"start":{"line":14,"column":2},"end":{"line":14,"column":42}},"8":{"start":{"line":17,"column":17},"end":{"line":17,"column":22}},"9":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"11":{"start":{"line":21,"column":2},"end":{"line":21,"column":42}},"12":{"start":{"line":24,"column":17},"end":{"line":24,"column":22}},"13":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"14":{"start":{"line":26,"column":4},"end":{"line":26,"column":18}},"15":{"start":{"line":28,"column":2},"end":{"line":28,"column":42}},"16":{"start":{"line":31,"column":17},"end":{"line":31,"column":44}},"17":{"start":{"line":32,"column":18},"end":{"line":32,"column":43}},"18":{"start":{"line":33,"column":2},"end":{"line":33,"column":63}},"19":{"start":{"line":36,"column":17},"end":{"line":36,"column":44}},"20":{"start":{"line":37,"column":18},"end":{"line":37,"column":43}},"21":{"start":{"line":38,"column":2},"end":{"line":38,"column":63}},"22":{"start":{"line":41,"column":17},"end":{"line":41,"column":44}},"23":{"start":{"line":42,"column":18},"end":{"line":42,"column":43}},"24":{"start":{"line":43,"column":2},"end":{"line":43,"column":62}},"25":{"start":{"line":46,"column":2},"end":{"line":46,"column":72}},"26":{"start":{"line":49,"column":2},"end":{"line":49,"column":53}},"27":{"start":{"line":52,"column":2},"end":{"line":52,"column":26}},"28":{"start":{"line":55,"column":2},"end":{"line":55,"column":25}},"29":{"start":{"line":58,"column":2},"end":{"line":58,"column":17}},"30":{"start":{"line":61,"column":2},"end":{"line":61,"column":15}},"31":{"start":{"line":64,"column":2},"end":{"line":64,"column":16}},"32":{"start":{"line":67,"column":2},"end":{"line":67,"column":15}},"33":{"start":{"line":70,"column":2},"end":{"line":70,"column":16}},"34":{"start":{"line":73,"column":2},"end":{"line":73,"column":55}},"35":{"start":{"line":76,"column":2},"end":{"line":76,"column":44}},"36":{"start":{"line":79,"column":22},"end":{"line":79,"column":43}},"37":{"start":{"line":80,"column":2},"end":{"line":80,"column":83}},"38":{"start":{"line":83,"column":2},"end":{"line":83,"column":31}}},"fnMap":{"0":{"name":"plus","decl":{"start":{"line":2,"column":16},"end":{"line":2,"column":20}},"loc":{"start":{"line":2,"column":27},"end":{"line":8,"column":1}},"line":2},"1":{"name":"minus","decl":{"start":{"line":9,"column":16},"end":{"line":9,"column":21}},"loc":{"start":{"line":9,"column":28},"end":{"line":15,"column":1}},"line":9},"2":{"name":"multiply","decl":{"start":{"line":16,"column":16},"end":{"line":16,"column":24}},"loc":{"start":{"line":16,"column":31},"end":{"line":22,"column":1}},"line":16},"3":{"name":"divide","decl":{"start":{"line":23,"column":16},"end":{"line":23,"column":22}},"loc":{"start":{"line":23,"column":29},"end":{"line":29,"column":1}},"line":23},"4":{"name":"round","decl":{"start":{"line":30,"column":16},"end":{"line":30,"column":21}},"loc":{"start":{"line":30,"column":39},"end":{"line":34,"column":1}},"line":30},"5":{"name":"floor","decl":{"start":{"line":35,"column":16},"end":{"line":35,"column":21}},"loc":{"start":{"line":35,"column":39},"end":{"line":39,"column":1}},"line":35},"6":{"name":"ceil","decl":{"start":{"line":40,"column":16},"end":{"line":40,"column":20}},"loc":{"start":{"line":40,"column":38},"end":{"line":44,"column":1}},"line":40},"7":{"name":"baseEpsilon","decl":{"start":{"line":45,"column":16},"end":{"line":45,"column":27}},"loc":{"start":{"line":45,"column":42},"end":{"line":47,"column":1}},"line":45},"8":{"name":"mod","decl":{"start":{"line":48,"column":16},"end":{"line":48,"column":19}},"loc":{"start":{"line":48,"column":35},"end":{"line":50,"column":1}},"line":48},"9":{"name":"pow","decl":{"start":{"line":51,"column":16},"end":{"line":51,"column":19}},"loc":{"start":{"line":51,"column":36},"end":{"line":53,"column":1}},"line":51},"10":{"name":"sqrt","decl":{"start":{"line":54,"column":16},"end":{"line":54,"column":20}},"loc":{"start":{"line":54,"column":27},"end":{"line":56,"column":1}},"line":54},"11":{"name":"equals","decl":{"start":{"line":57,"column":16},"end":{"line":57,"column":22}},"loc":{"start":{"line":57,"column":29},"end":{"line":59,"column":1}},"line":57},"12":{"name":"greaterThan","decl":{"start":{"line":60,"column":16},"end":{"line":60,"column":27}},"loc":{"start":{"line":60,"column":34},"end":{"line":62,"column":1}},"line":60},"13":{"name":"greaterThanOrEquals","decl":{"start":{"line":63,"column":16},"end":{"line":63,"column":35}},"loc":{"start":{"line":63,"column":42},"end":{"line":65,"column":1}},"line":63},"14":{"name":"lessThan","decl":{"start":{"line":66,"column":16},"end":{"line":66,"column":24}},"loc":{"start":{"line":66,"column":31},"end":{"line":68,"column":1}},"line":66},"15":{"name":"lessThanOrEquals","decl":{"start":{"line":69,"column":16},"end":{"line":69,"column":32}},"loc":{"start":{"line":69,"column":39},"end":{"line":71,"column":1}},"line":69},"16":{"name":"strip","decl":{"start":{"line":72,"column":16},"end":{"line":72,"column":21}},"loc":{"start":{"line":72,"column":43},"end":{"line":74,"column":1}},"line":72},"17":{"name":"withinErrorMargin","decl":{"start":{"line":75,"column":16},"end":{"line":75,"column":33}},"loc":{"start":{"line":75,"column":75},"end":{"line":77,"column":1}},"line":75},"18":{"name":"stripErrorMargin","decl":{"start":{"line":78,"column":16},"end":{"line":78,"column":32}},"loc":{"start":{"line":78,"column":73},"end":{"line":81,"column":1}},"line":78},"19":{"name":"getFractionalPart","decl":{"start":{"line":82,"column":16},"end":{"line":82,"column":33}},"loc":{"start":{"line":82,"column":39},"end":{"line":84,"column":1}},"line":82}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":2},"end":{"line":6,"column":3}},"type":"if","locations":[{"start":{"line":4,"column":2},"end":{"line":6,"column":3}},{"start":{},"end":{}}],"line":4},"1":{"loc":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},{"start":{},"end":{}}],"line":11},"2":{"loc":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},{"start":{},"end":{}}],"line":18},"3":{"loc":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},{"start":{},"end":{}}],"line":25},"4":{"loc":{"start":{"line":72,"column":27},"end":{"line":72,"column":41}},"type":"default-arg","locations":[{"start":{"line":72,"column":39},"end":{"line":72,"column":41}}],"line":72},"5":{"loc":{"start":{"line":75,"column":47},"end":{"line":75,"column":73}},"type":"default-arg","locations":[{"start":{"line":75,"column":59},"end":{"line":75,"column":73}}],"line":75},"6":{"loc":{"start":{"line":78,"column":38},"end":{"line":78,"column":52}},"type":"default-arg","locations":[{"start":{"line":78,"column":50},"end":{"line":78,"column":52}}],"line":78},"7":{"loc":{"start":{"line":78,"column":54},"end":{"line":78,"column":71}},"type":"default-arg","locations":[{"start":{"line":78,"column":66},"end":{"line":78,"column":71}}],"line":78},"8":{"loc":{"start":{"line":80,"column":9},"end":{"line":80,"column":82}},"type":"cond-expr","locations":[{"start":{"line":80,"column":58},"end":{"line":80,"column":69}},{"start":{"line":80,"column":72},"end":{"line":80,"column":82}}],"line":80}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0],"5":[0],"6":[0],"7":[0],"8":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/math-kit.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Since Excel follows the IEEE 754 specification, it only handles precision issues when displaying cells. For example, =0.1+0.2, the stored value in XML is 0.30000000000000004, and the displayed value is 0.3. The accuracy of the calculation process does not need to be considered. We only focus on the accuracy of the calculation results. Any result is processed within 15 digits.\n\n Reference https://en.wikipedia.org/wiki/Numeric_precision_in_Microsoft_Excel\n */\n\nimport Decimal from 'decimal.js';\n\nexport function plus(a: number, b: number): number {\n    const result = a + b;\n    if (Number.isSafeInteger(result)) {\n        return result;\n    }\n    return new Decimal(a).add(b).toNumber();\n}\n\nexport function minus(a: number, b: number): number {\n    const result = a - b;\n    if (Number.isSafeInteger(result)) {\n        return result;\n    }\n    return new Decimal(a).sub(b).toNumber();\n}\n\nexport function multiply(a: number, b: number): number {\n    const result = a * b;\n    if (Number.isSafeInteger(result)) {\n        return result;\n    }\n    return new Decimal(a).mul(b).toNumber();\n}\n\nexport function divide(a: number, b: number): number {\n    const result = a / b;\n    if (Number.isSafeInteger(result)) {\n        return result;\n    }\n    return new Decimal(a).div(b).toNumber();\n}\n/**\n * Rounds a number to a specified number of decimal places.\n * @param base The number to round.\n * @param precision The number of decimal places to round to.\n * @returns The rounded number.\n */\nexport function round(base: number, precision: number): number {\n    const factor = 10 ** Math.trunc(precision);\n    const epsilon = baseEpsilon(base, factor);\n    return Math.round(multiply(base, factor) + epsilon) / factor;\n}\n\n/**\n * Rounds down a number to a specified number of decimal places.\n * @param base The number to round down.\n * @param precision The number of decimal places to round down to.\n * @returns The floored number.\n */\nexport function floor(base: number, precision: number): number {\n    const factor = 10 ** Math.trunc(precision);\n    const epsilon = baseEpsilon(base, factor);\n    return Math.floor(multiply(base, factor) + epsilon) / factor;\n}\n\n/**\n * Rounds up a number to a specified number of decimal places.\n * @param base The number to round up.\n * @param precision The number of decimal places to round up to.\n * @returns The ceiled number.\n */\nexport function ceil(base: number, precision: number): number {\n    const factor = 10 ** Math.trunc(precision);\n    const epsilon = baseEpsilon(base, factor);\n    return Math.ceil(multiply(base, factor) - epsilon) / factor;\n}\n\nexport function baseEpsilon(base: number, factor: number) {\n    return Number.EPSILON * Math.max(1, Math.abs(multiply(base, factor)));\n}\n\n/**\n * Returns the remainder of division of two numbers.\n * @param base The dividend.\n * @param divisor The divisor.\n * @returns The remainder.\n */\nexport function mod(base: number, divisor: number): number {\n    return base - divisor * Math.floor(base / divisor);\n}\n\n/**\n * Raises a base number to the power of the exponent.\n *\n * @param base The base number.\n * @param exponent The exponent.\n * @returns The result of base raised to the power of exponent.\n */\nexport function pow(base: number, exponent: number): number {\n    return base ** exponent;\n}\n\n/**\n * Calculates the square root of a number.\n * @param base The number to take the square root of.\n * @returns The square root of base.\n */\nexport function sqrt(base: number): number {\n    return Math.sqrt(base);\n}\n\n/**\n * Compares two numbers for equality.\n * @param a The first number.\n * @param b The second number.\n * @returns True if numbers are equal, false otherwise.\n */\nexport function equals(a: number, b: number): boolean {\n    return a === b;\n}\n\n/**\n * Checks if the first number is greater than the second number.\n * @param a The first number.\n * @param b The second number.\n * @returns True if a is greater than b, false otherwise.\n */\nexport function greaterThan(a: number, b: number): boolean {\n    return a > b;\n}\n\n/**\n * Checks if the first number is greater than or equal to the second number.\n * @param a The first number.\n * @param b The second number.\n * @returns True if a is greater than or equal to b, false otherwise.\n */\nexport function greaterThanOrEquals(a: number, b: number): boolean {\n    return a >= b;\n}\n\n/**\n * Checks if the first number is less than the second number.\n * @param a The first number.\n * @param b The second number.\n * @returns True if a is less than b, false otherwise.\n */\nexport function lessThan(a: number, b: number): boolean {\n    return a < b;\n}\n\n/**\n * Checks if the first number is less than or equal to the second number.\n * @param a The first number.\n * @param b The second number.\n * @returns True if a is less than or equal to b, false otherwise.\n */\nexport function lessThanOrEquals(a: number, b: number): boolean {\n    return a <= b;\n}\n\n/**\n * Complete the number to the specified accuracy and solve the accuracy error,\n *\n * e.g. strip(0.30000000000000004,15) => 0.3\n *\n * Why precision is 15?\n *\n * Excel only saves 15 digits\n *\n  reference: https://stackoverflow.com/questions/1458633/how-to-deal-with-floating-point-number-precision-in-javascript\n * @param num\n * @param precision\n * @returns\n */\nexport function strip(num: number, precision = 15) {\n    return Number.parseFloat(num.toPrecision(precision));\n}\n\n/**\n * Set an error range for floating-point calculations. If the error is less than Number.EPSILON, we can consider the result reliable.\n * @param left\n * @param right\n * @returns\n */\nexport function withinErrorMargin(left: number, right: number, tolerance = Number.EPSILON) {\n    return Math.abs(left - right) < tolerance;\n}\n\n/**\n * Tolerance for the results of accuracy issues to tolerate certain errors\n *\n * Why is precision 12?\n   This is an empirical choice. Generally, choosing 12 can solve most of the 0001 and 0009 problems. e.g. floor(5,1.23) = 0.0800000000000001\n\n   why is tolerance 1e-10?\n   Since the value of Number.EPSILON is too small to be applicable to all floating-point precision processing, for most application scenarios, the error range of 1e-10 can tolerate common floating-point errors.\n   For example, =30.2 - 30 displayed as 0.2 in Excel\n * @param num\n * @param precision\n * @param tolerance\n * @returns\n */\nexport function stripErrorMargin(num: number, precision = 12, tolerance = 1e-10) {\n    const stripResult = strip(num, precision);\n    return withinErrorMargin(num, stripResult, tolerance) ? stripResult : strip(num);\n}\n\n/**\n * Get the fractional part of the number\n * @param num\n * @returns\n */\nexport function getFractionalPart(num: number): number {\n    return num - Math.trunc(num);\n}\n"],"mappings":"AAsBA,OAAO,aAAa;AAEb,gBAAS,KAAK,GAAW,GAAmB;AAC/C,QAAM,SAAS,IAAI;AACnB,MAAI,OAAO,cAAc,MAAM,GAAG;AAC9B,WAAO;AAAA,EACX;AACA,SAAO,IAAI,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAC1C;AAEO,gBAAS,MAAM,GAAW,GAAmB;AAChD,QAAM,SAAS,IAAI;AACnB,MAAI,OAAO,cAAc,MAAM,GAAG;AAC9B,WAAO;AAAA,EACX;AACA,SAAO,IAAI,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAC1C;AAEO,gBAAS,SAAS,GAAW,GAAmB;AACnD,QAAM,SAAS,IAAI;AACnB,MAAI,OAAO,cAAc,MAAM,GAAG;AAC9B,WAAO;AAAA,EACX;AACA,SAAO,IAAI,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAC1C;AAEO,gBAAS,OAAO,GAAW,GAAmB;AACjD,QAAM,SAAS,IAAI;AACnB,MAAI,OAAO,cAAc,MAAM,GAAG;AAC9B,WAAO;AAAA,EACX;AACA,SAAO,IAAI,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAC1C;AAOO,gBAAS,MAAM,MAAc,WAA2B;AAC3D,QAAM,SAAS,MAAM,KAAK,MAAM,SAAS;AACzC,QAAM,UAAU,YAAY,MAAM,MAAM;AACxC,SAAO,KAAK,MAAM,SAAS,MAAM,MAAM,IAAI,OAAO,IAAI;AAC1D;AAQO,gBAAS,MAAM,MAAc,WAA2B;AAC3D,QAAM,SAAS,MAAM,KAAK,MAAM,SAAS;AACzC,QAAM,UAAU,YAAY,MAAM,MAAM;AACxC,SAAO,KAAK,MAAM,SAAS,MAAM,MAAM,IAAI,OAAO,IAAI;AAC1D;AAQO,gBAAS,KAAK,MAAc,WAA2B;AAC1D,QAAM,SAAS,MAAM,KAAK,MAAM,SAAS;AACzC,QAAM,UAAU,YAAY,MAAM,MAAM;AACxC,SAAO,KAAK,KAAK,SAAS,MAAM,MAAM,IAAI,OAAO,IAAI;AACzD;AAEO,gBAAS,YAAY,MAAc,QAAgB;AACtD,SAAO,OAAO,UAAU,KAAK,IAAI,GAAG,KAAK,IAAI,SAAS,MAAM,MAAM,CAAC,CAAC;AACxE;AAQO,gBAAS,IAAI,MAAc,SAAyB;AACvD,SAAO,OAAO,UAAU,KAAK,MAAM,OAAO,OAAO;AACrD;AASO,gBAAS,IAAI,MAAc,UAA0B;AACxD,SAAO,QAAQ;AACnB;AAOO,gBAAS,KAAK,MAAsB;AACvC,SAAO,KAAK,KAAK,IAAI;AACzB;AAQO,gBAAS,OAAO,GAAW,GAAoB;AAClD,SAAO,MAAM;AACjB;AAQO,gBAAS,YAAY,GAAW,GAAoB;AACvD,SAAO,IAAI;AACf;AAQO,gBAAS,oBAAoB,GAAW,GAAoB;AAC/D,SAAO,KAAK;AAChB;AAQO,gBAAS,SAAS,GAAW,GAAoB;AACpD,SAAO,IAAI;AACf;AAQO,gBAAS,iBAAiB,GAAW,GAAoB;AAC5D,SAAO,KAAK;AAChB;AAgBO,gBAAS,MAAM,KAAa,YAAY,IAAI;AAC/C,SAAO,OAAO,WAAW,IAAI,YAAY,SAAS,CAAC;AACvD;AAQO,gBAAS,kBAAkB,MAAc,OAAe,YAAY,OAAO,SAAS;AACvF,SAAO,KAAK,IAAI,OAAO,KAAK,IAAI;AACpC;AAgBO,gBAAS,iBAAiB,KAAa,YAAY,IAAI,YAAY,OAAO;AAC7E,QAAM,cAAc,MAAM,KAAK,SAAS;AACxC,SAAO,kBAAkB,KAAK,aAAa,SAAS,IAAI,cAAc,MAAM,GAAG;AACnF;AAOO,gBAAS,kBAAkB,KAAqB;AACnD,SAAO,MAAM,KAAK,MAAM,GAAG;AAC/B;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"170edf1d7e59e35248b6755cf625fa5892e2ccde"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/numfmt-kit.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/numfmt-kit.ts","statementMap":{"0":{"start":{"line":4,"column":24},"end":{"line":32,"column":1}},"1":{"start":{"line":33,"column":39},"end":{"line":47,"column":26}},"2":{"start":{"line":34,"column":2},"end":{"line":34,"column":66}},"3":{"start":{"line":35,"column":2},"end":{"line":35,"column":64}},"4":{"start":{"line":36,"column":2},"end":{"line":36,"column":68}},"5":{"start":{"line":37,"column":2},"end":{"line":37,"column":72}},"6":{"start":{"line":38,"column":2},"end":{"line":38,"column":60}},"7":{"start":{"line":39,"column":2},"end":{"line":39,"column":60}},"8":{"start":{"line":40,"column":2},"end":{"line":40,"column":72}},"9":{"start":{"line":41,"column":2},"end":{"line":41,"column":68}},"10":{"start":{"line":42,"column":2},"end":{"line":42,"column":72}},"11":{"start":{"line":43,"column":2},"end":{"line":43,"column":60}},"12":{"start":{"line":44,"column":2},"end":{"line":44,"column":67}},"13":{"start":{"line":45,"column":2},"end":{"line":45,"column":65}},"14":{"start":{"line":46,"column":2},"end":{"line":46,"column":27}},"15":{"start":{"line":48,"column":28},"end":{"line":62,"column":1}},"16":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"17":{"start":{"line":65,"column":4},"end":{"line":65,"column":16}},"18":{"start":{"line":67,"column":23},"end":{"line":67,"column":67}},"19":{"start":{"line":68,"column":20},"end":{"line":68,"column":58}},"20":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"21":{"start":{"line":70,"column":4},"end":{"line":70,"column":16}},"22":{"start":{"line":72,"column":21},"end":{"line":72,"column":45}},"23":{"start":{"line":73,"column":18},"end":{"line":73,"column":39}},"24":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"25":{"start":{"line":75,"column":4},"end":{"line":75,"column":16}},"26":{"start":{"line":77,"column":21},"end":{"line":77,"column":42}},"27":{"start":{"line":78,"column":2},"end":{"line":78,"column":35}},"28":{"start":{"line":79,"column":2},"end":{"line":79,"column":14}},"29":{"start":{"line":82,"column":25},"end":{"line":82,"column":56}},"30":{"start":{"line":83,"column":22},"end":{"line":83,"column":50}},"31":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"32":{"start":{"line":85,"column":4},"end":{"line":85,"column":19}},"33":{"start":{"line":87,"column":2},"end":{"line":89,"column":3}},"34":{"start":{"line":88,"column":4},"end":{"line":88,"column":22}},"35":{"start":{"line":90,"column":2},"end":{"line":95,"column":3}},"36":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"37":{"start":{"line":92,"column":6},"end":{"line":92,"column":21}},"38":{"start":{"line":94,"column":4},"end":{"line":94,"column":22}},"39":{"start":{"line":96,"column":2},"end":{"line":101,"column":3}},"40":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"41":{"start":{"line":98,"column":6},"end":{"line":98,"column":21}},"42":{"start":{"line":100,"column":4},"end":{"line":100,"column":22}},"43":{"start":{"line":102,"column":2},"end":{"line":107,"column":3}},"44":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"45":{"start":{"line":104,"column":6},"end":{"line":104,"column":21}},"46":{"start":{"line":106,"column":4},"end":{"line":106,"column":22}},"47":{"start":{"line":108,"column":2},"end":{"line":108,"column":20}},"48":{"start":{"line":110,"column":30},"end":{"line":110,"column":52}},"49":{"start":{"line":112,"column":27},"end":{"line":112,"column":61}},"50":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"51":{"start":{"line":114,"column":4},"end":{"line":114,"column":28}},"52":{"start":{"line":116,"column":15},"end":{"line":116,"column":46}},"53":{"start":{"line":117,"column":2},"end":{"line":117,"column":43}},"54":{"start":{"line":118,"column":2},"end":{"line":118,"column":14}},"55":{"start":{"line":121,"column":2},"end":{"line":121,"column":32}},"56":{"start":{"line":124,"column":2},"end":{"line":126,"column":3}},"57":{"start":{"line":125,"column":4},"end":{"line":125,"column":30}},"58":{"start":{"line":127,"column":15},"end":{"line":127,"column":56}},"59":{"start":{"line":128,"column":2},"end":{"line":128,"column":35}},"60":{"start":{"line":131,"column":2},"end":{"line":131,"column":94}},"61":{"start":{"line":131,"column":42},"end":{"line":131,"column":64}},"62":{"start":{"line":135,"column":2},"end":{"line":139,"column":3}},"63":{"start":{"line":136,"column":4},"end":{"line":136,"column":23}},"64":{"start":{"line":137,"column":9},"end":{"line":139,"column":3}},"65":{"start":{"line":138,"column":4},"end":{"line":138,"column":27}},"66":{"start":{"line":140,"column":30},"end":{"line":140,"column":66}},"67":{"start":{"line":141,"column":26},"end":{"line":141,"column":58}},"68":{"start":{"line":142,"column":2},"end":{"line":147,"column":3}},"69":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"70":{"start":{"line":144,"column":6},"end":{"line":144,"column":16}},"71":{"start":{"line":146,"column":4},"end":{"line":146,"column":23}},"72":{"start":{"line":148,"column":2},"end":{"line":153,"column":3}},"73":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"74":{"start":{"line":150,"column":6},"end":{"line":150,"column":25}},"75":{"start":{"line":152,"column":4},"end":{"line":152,"column":14}},"76":{"start":{"line":154,"column":2},"end":{"line":154,"column":40}},"77":{"start":{"line":156,"column":49},"end":{"line":163,"column":2}},"78":{"start":{"line":165,"column":2},"end":{"line":165,"column":53}},"79":{"start":{"line":168,"column":22},"end":{"line":168,"column":34}},"80":{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},"81":{"start":{"line":170,"column":4},"end":{"line":170,"column":24}},"82":{"start":{"line":172,"column":16},"end":{"line":172,"column":18}},"83":{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},"84":{"start":{"line":174,"column":4},"end":{"line":174,"column":46}},"85":{"start":{"line":176,"column":2},"end":{"line":176,"column":112}},"86":{"start":{"line":179,"column":2},"end":{"line":179,"column":72}},"87":{"start":{"line":181,"column":35},"end":{"line":181,"column":57}},"88":{"start":{"line":183,"column":15},"end":{"line":183,"column":20}},"89":{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},"90":{"start":{"line":185,"column":4},"end":{"line":185,"column":33}},"91":{"start":{"line":187,"column":21},"end":{"line":187,"column":59}},"92":{"start":{"line":188,"column":2},"end":{"line":194,"column":3}},"93":{"start":{"line":189,"column":4},"end":{"line":193,"column":6}},"94":{"start":{"line":195,"column":24},"end":{"line":195,"column":50}},"95":{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},"96":{"start":{"line":197,"column":4},"end":{"line":197,"column":75}},"97":{"start":{"line":199,"column":22},"end":{"line":199,"column":46}},"98":{"start":{"line":200,"column":2},"end":{"line":202,"column":3}},"99":{"start":{"line":201,"column":4},"end":{"line":201,"column":71}},"100":{"start":{"line":203,"column":22},"end":{"line":203,"column":46}},"101":{"start":{"line":204,"column":2},"end":{"line":206,"column":3}},"102":{"start":{"line":205,"column":4},"end":{"line":205,"column":71}},"103":{"start":{"line":207,"column":2},"end":{"line":209,"column":4}},"104":{"start":{"line":212,"column":2},"end":{"line":215,"column":5}},"105":{"start":{"line":216,"column":2},"end":{"line":220,"column":4}},"106":{"start":{"line":223,"column":2},"end":{"line":223,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":33,"column":40},"end":{"line":33,"column":41}},"loc":{"start":{"line":33,"column":63},"end":{"line":47,"column":1}},"line":33},"1":{"name":"handleNumfmtInCell","decl":{"start":{"line":63,"column":16},"end":{"line":63,"column":34}},"loc":{"start":{"line":63,"column":58},"end":{"line":80,"column":1}},"line":63},"2":{"name":"compareNumfmtPriority","decl":{"start":{"line":81,"column":16},"end":{"line":81,"column":37}},"loc":{"start":{"line":81,"column":59},"end":{"line":109,"column":1}},"line":81},"3":{"name":"getNumberFormatType","decl":{"start":{"line":111,"column":9},"end":{"line":111,"column":28}},"loc":{"start":{"line":111,"column":38},"end":{"line":119,"column":1}},"line":111},"4":{"name":"clearNumberFormatTypeCache","decl":{"start":{"line":120,"column":16},"end":{"line":120,"column":42}},"loc":{"start":{"line":120,"column":45},"end":{"line":122,"column":1}},"line":120},"5":{"name":"getNumberFormatTypeRaw","decl":{"start":{"line":123,"column":9},"end":{"line":123,"column":31}},"loc":{"start":{"line":123,"column":41},"end":{"line":129,"column":1}},"line":123},"6":{"name":"isAccounting","decl":{"start":{"line":130,"column":9},"end":{"line":130,"column":21}},"loc":{"start":{"line":130,"column":31},"end":{"line":132,"column":1}},"line":130},"7":{"name":"(anonymous_7)","decl":{"start":{"line":131,"column":32},"end":{"line":131,"column":33}},"loc":{"start":{"line":131,"column":42},"end":{"line":131,"column":64}},"line":131},"8":{"name":"comparePatternPriority","decl":{"start":{"line":134,"column":16},"end":{"line":134,"column":38}},"loc":{"start":{"line":134,"column":79},"end":{"line":155,"column":1}},"line":134},"9":{"name":"getCurrencySymbol","decl":{"start":{"line":164,"column":9},"end":{"line":164,"column":26}},"loc":{"start":{"line":164,"column":35},"end":{"line":166,"column":1}},"line":164},"10":{"name":"getCurrencyFormat","decl":{"start":{"line":167,"column":16},"end":{"line":167,"column":33}},"loc":{"start":{"line":167,"column":60},"end":{"line":177,"column":1}},"line":167},"11":{"name":"applyCurrencyFormat","decl":{"start":{"line":178,"column":16},"end":{"line":178,"column":35}},"loc":{"start":{"line":178,"column":70},"end":{"line":180,"column":1}},"line":178},"12":{"name":"stringIsNumberPattern","decl":{"start":{"line":182,"column":16},"end":{"line":182,"column":37}},"loc":{"start":{"line":182,"column":45},"end":{"line":210,"column":1}},"line":182},"13":{"name":"setNumberPatternCache","decl":{"start":{"line":211,"column":9},"end":{"line":211,"column":30}},"loc":{"start":{"line":211,"column":54},"end":{"line":221,"column":1}},"line":211},"14":{"name":"clearStringToNumberPatternCache","decl":{"start":{"line":222,"column":16},"end":{"line":222,"column":47}},"loc":{"start":{"line":222,"column":50},"end":{"line":224,"column":1}},"line":222}},"branchMap":{"0":{"loc":{"start":{"line":47,"column":3},"end":{"line":47,"column":25}},"type":"binary-expr","locations":[{"start":{"line":47,"column":3},"end":{"line":47,"column":19}},{"start":{"line":47,"column":23},"end":{"line":47,"column":25}}],"line":47},"1":{"loc":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},{"start":{},"end":{}}],"line":64},"2":{"loc":{"start":{"line":64,"column":6},"end":{"line":64,"column":37}},"type":"binary-expr","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":21}},{"start":{"line":64,"column":25},"end":{"line":64,"column":37}}],"line":64},"3":{"loc":{"start":{"line":67,"column":23},"end":{"line":67,"column":67}},"type":"binary-expr","locations":[{"start":{"line":67,"column":23},"end":{"line":67,"column":54}},{"start":{"line":67,"column":58},"end":{"line":67,"column":67}}],"line":67},"4":{"loc":{"start":{"line":68,"column":20},"end":{"line":68,"column":58}},"type":"binary-expr","locations":[{"start":{"line":68,"column":20},"end":{"line":68,"column":48}},{"start":{"line":68,"column":52},"end":{"line":68,"column":58}}],"line":68},"5":{"loc":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},{"start":{},"end":{}}],"line":69},"6":{"loc":{"start":{"line":69,"column":6},"end":{"line":69,"column":116}},"type":"binary-expr","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":26}},{"start":{"line":69,"column":30},"end":{"line":69,"column":47}},{"start":{"line":69,"column":51},"end":{"line":69,"column":83}},{"start":{"line":69,"column":87},"end":{"line":69,"column":116}}],"line":69},"7":{"loc":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},{"start":{},"end":{}}],"line":74},"8":{"loc":{"start":{"line":74,"column":6},"end":{"line":74,"column":43}},"type":"binary-expr","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":24}},{"start":{"line":74,"column":28},"end":{"line":74,"column":43}}],"line":74},"9":{"loc":{"start":{"line":77,"column":21},"end":{"line":77,"column":42}},"type":"binary-expr","locations":[{"start":{"line":77,"column":21},"end":{"line":77,"column":31}},{"start":{"line":77,"column":35},"end":{"line":77,"column":42}}],"line":77},"10":{"loc":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},{"start":{},"end":{}}],"line":84},"11":{"loc":{"start":{"line":87,"column":2},"end":{"line":89,"column":3}},"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":89,"column":3}},{"start":{},"end":{}}],"line":87},"12":{"loc":{"start":{"line":90,"column":2},"end":{"line":95,"column":3}},"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":95,"column":3}},{"start":{},"end":{}}],"line":90},"13":{"loc":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},{"start":{},"end":{}}],"line":91},"14":{"loc":{"start":{"line":96,"column":2},"end":{"line":101,"column":3}},"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":101,"column":3}},{"start":{},"end":{}}],"line":96},"15":{"loc":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},{"start":{},"end":{}}],"line":97},"16":{"loc":{"start":{"line":102,"column":2},"end":{"line":107,"column":3}},"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":107,"column":3}},{"start":{},"end":{}}],"line":102},"17":{"loc":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},{"start":{},"end":{}}],"line":103},"18":{"loc":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},{"start":{},"end":{}}],"line":113},"19":{"loc":{"start":{"line":124,"column":2},"end":{"line":126,"column":3}},"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":126,"column":3}},{"start":{},"end":{}}],"line":124},"20":{"loc":{"start":{"line":127,"column":15},"end":{"line":127,"column":56}},"type":"binary-expr","locations":[{"start":{"line":127,"column":15},"end":{"line":127,"column":43}},{"start":{"line":127,"column":47},"end":{"line":127,"column":56}}],"line":127},"21":{"loc":{"start":{"line":131,"column":9},"end":{"line":131,"column":93}},"type":"binary-expr","locations":[{"start":{"line":131,"column":9},"end":{"line":131,"column":65}},{"start":{"line":131,"column":69},"end":{"line":131,"column":93}}],"line":131},"22":{"loc":{"start":{"line":135,"column":2},"end":{"line":139,"column":3}},"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":139,"column":3}},{"start":{"line":137,"column":9},"end":{"line":139,"column":3}}],"line":135},"23":{"loc":{"start":{"line":137,"column":9},"end":{"line":139,"column":3}},"type":"if","locations":[{"start":{"line":137,"column":9},"end":{"line":139,"column":3}},{"start":{},"end":{}}],"line":137},"24":{"loc":{"start":{"line":142,"column":2},"end":{"line":147,"column":3}},"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":147,"column":3}},{"start":{},"end":{}}],"line":142},"25":{"loc":{"start":{"line":142,"column":6},"end":{"line":142,"column":73}},"type":"binary-expr","locations":[{"start":{"line":142,"column":6},"end":{"line":142,"column":37}},{"start":{"line":142,"column":41},"end":{"line":142,"column":73}}],"line":142},"26":{"loc":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},{"start":{},"end":{}}],"line":143},"27":{"loc":{"start":{"line":143,"column":8},"end":{"line":143,"column":149}},"type":"binary-expr","locations":[{"start":{"line":143,"column":8},"end":{"line":143,"column":33}},{"start":{"line":143,"column":48},"end":{"line":143,"column":69}},{"start":{"line":143,"column":84},"end":{"line":143,"column":110}},{"start":{"line":143,"column":127},"end":{"line":143,"column":149}}],"line":143},"28":{"loc":{"start":{"line":148,"column":2},"end":{"line":153,"column":3}},"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":153,"column":3}},{"start":{},"end":{}}],"line":148},"29":{"loc":{"start":{"line":148,"column":6},"end":{"line":148,"column":79}},"type":"binary-expr","locations":[{"start":{"line":148,"column":6},"end":{"line":148,"column":41}},{"start":{"line":148,"column":45},"end":{"line":148,"column":79}}],"line":148},"30":{"loc":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},{"start":{},"end":{}}],"line":149},"31":{"loc":{"start":{"line":149,"column":8},"end":{"line":149,"column":329}},"type":"binary-expr","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":33}},{"start":{"line":149,"column":54},"end":{"line":149,"column":75}},{"start":{"line":149,"column":96},"end":{"line":149,"column":121}},{"start":{"line":149,"column":140},"end":{"line":149,"column":161}},{"start":{"line":149,"column":180},"end":{"line":149,"column":205}},{"start":{"line":149,"column":226},"end":{"line":149,"column":247}},{"start":{"line":149,"column":268},"end":{"line":149,"column":293}},{"start":{"line":149,"column":308},"end":{"line":149,"column":329}}],"line":149},"32":{"loc":{"start":{"line":154,"column":9},"end":{"line":154,"column":39}},"type":"binary-expr","locations":[{"start":{"line":154,"column":9},"end":{"line":154,"column":24}},{"start":{"line":154,"column":28},"end":{"line":154,"column":39}}],"line":154},"33":{"loc":{"start":{"line":165,"column":9},"end":{"line":165,"column":52}},"type":"binary-expr","locations":[{"start":{"line":165,"column":9},"end":{"line":165,"column":45}},{"start":{"line":165,"column":49},"end":{"line":165,"column":52}}],"line":165},"34":{"loc":{"start":{"line":167,"column":42},"end":{"line":167,"column":58}},"type":"default-arg","locations":[{"start":{"line":167,"column":57},"end":{"line":167,"column":58}}],"line":167},"35":{"loc":{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},"type":"if","locations":[{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},{"start":{},"end":{}}],"line":169},"36":{"loc":{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},{"start":{},"end":{}}],"line":173},"37":{"loc":{"start":{"line":178,"column":52},"end":{"line":178,"column":68}},"type":"default-arg","locations":[{"start":{"line":178,"column":67},"end":{"line":178,"column":68}}],"line":178},"38":{"loc":{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},{"start":{},"end":{}}],"line":184},"39":{"loc":{"start":{"line":184,"column":6},"end":{"line":184,"column":52}},"type":"binary-expr","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":28}},{"start":{"line":184,"column":32},"end":{"line":184,"column":52}}],"line":184},"40":{"loc":{"start":{"line":188,"column":2},"end":{"line":194,"column":3}},"type":"if","locations":[{"start":{"line":188,"column":2},"end":{"line":194,"column":3}},{"start":{},"end":{}}],"line":188},"41":{"loc":{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},{"start":{},"end":{}}],"line":196},"42":{"loc":{"start":{"line":196,"column":6},"end":{"line":196,"column":38}},"type":"binary-expr","locations":[{"start":{"line":196,"column":6},"end":{"line":196,"column":19}},{"start":{"line":196,"column":23},"end":{"line":196,"column":38}}],"line":196},"43":{"loc":{"start":{"line":200,"column":2},"end":{"line":202,"column":3}},"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":202,"column":3}},{"start":{},"end":{}}],"line":200},"44":{"loc":{"start":{"line":200,"column":6},"end":{"line":200,"column":34}},"type":"binary-expr","locations":[{"start":{"line":200,"column":6},"end":{"line":200,"column":17}},{"start":{"line":200,"column":21},"end":{"line":200,"column":34}}],"line":200},"45":{"loc":{"start":{"line":204,"column":2},"end":{"line":206,"column":3}},"type":"if","locations":[{"start":{"line":204,"column":2},"end":{"line":206,"column":3}},{"start":{},"end":{}}],"line":204},"46":{"loc":{"start":{"line":204,"column":6},"end":{"line":204,"column":34}},"type":"binary-expr","locations":[{"start":{"line":204,"column":6},"end":{"line":204,"column":17}},{"start":{"line":204,"column":21},"end":{"line":204,"column":34}}],"line":204}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":2,"89":2,"90":0,"91":2,"92":2,"93":0,"94":2,"95":2,"96":0,"97":2,"98":2,"99":1,"100":1,"101":1,"102":0,"103":1,"104":1,"105":1,"106":0},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":2,"13":1,"14":0},"b":{"0":[1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0,0,0,0,0,0],"32":[0,0],"33":[0,0],"34":[0],"35":[0,0],"36":[0,0],"37":[0],"38":[0,2],"39":[2,0],"40":[0,2],"41":[0,2],"42":[2,0],"43":[1,1],"44":[2,1],"45":[0,1],"46":[1,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/numfmt-kit.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, Nullable, Styles } from '@univerjs/core';\nimport { LocaleType, numfmt } from '@univerjs/core';\nimport { FormulaAstLRU } from '../../basics/cache-lru';\nimport { operatorToken } from '../../basics/token';\n\nconst currencySymbols = [\n    '$',\n    '£',\n    '¥',\n    '¤',\n    '֏',\n    '؋',\n    '৳',\n    '฿',\n    '៛',\n    '₡',\n    '₦',\n    '₩',\n    '₪',\n    '₫',\n    '€',\n    '₭',\n    '₮',\n    '₱',\n    '₲',\n    '₴',\n    '₸',\n    '₹',\n    '₺',\n    '₼',\n    '₽',\n    '₾',\n    '₿',\n];\n\ntype FormatType =\n    | 'currency'\n    | 'date'\n    | 'datetime'\n    | 'error'\n    | 'fraction'\n    | 'general'\n    | 'grouped'\n    | 'number'\n    | 'percent'\n    | 'scientific'\n    | 'text'\n    | 'time';\n\nenum NumberFormatType {\n    General,\n    Number,\n    Currency,\n    Accounting,\n    Date,\n    Time,\n    Percentage,\n    Fraction,\n    Scientific,\n    Text,\n    Special,\n    Custom,\n}\n\n// except error/grouped\nconst NumberFormatTypeMap = {\n    currency: NumberFormatType.Currency,\n    date: NumberFormatType.Date,\n    datetime: NumberFormatType.Time,\n    error: NumberFormatType.Custom,\n    fraction: NumberFormatType.Fraction,\n    general: NumberFormatType.General,\n    grouped: NumberFormatType.Custom,\n    number: NumberFormatType.Number,\n    percent: NumberFormatType.Percentage,\n    scientific: NumberFormatType.Scientific,\n    text: NumberFormatType.Text,\n    time: NumberFormatType.Time,\n    unknown: NumberFormatType.Custom,\n};\n/**\n * Handling number formats in styles\n *\n * @param oldCell\n * @param cell\n */\nexport function handleNumfmtInCell(oldCell: Nullable<ICellData>, cell: Nullable<ICellData>, styles: Styles | undefined) {\n    if (oldCell == null || cell == null) {\n        return cell;\n    }\n\n    const oldCellStyle = styles?.getStyleByCell(oldCell) || oldCell.s;\n    const cellStyle = styles?.getStyleByCell(cell) || cell.s;\n\n    if (oldCellStyle == null || cellStyle == null || typeof oldCellStyle !== 'object' || typeof cellStyle !== 'object') {\n        return cell;\n    }\n\n    const oldPattern = oldCellStyle?.n?.pattern;\n    const pattern = cellStyle?.n?.pattern;\n\n    if (oldPattern == null || pattern == null) {\n        return cell;\n    }\n\n    // The number format calculated by the formula, if the current cell already has a number format, the original format is used, if not, a new one is set.\n    // Why?\n    // Due to the forced calculation mechanism during initialization, if the formula may overwrite the original number format, the number format set for the formula cell may never take effect.\n    const newPattern = oldPattern || pattern;\n\n    cellStyle!.n!.pattern = newPattern;\n\n    return cell;\n}\n\n/**\n * Process the priority of the newly set number format and the original format.\n *\n * Here is the priority of the number format in Excel:\n * ┌─────────────────┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐\n * │                 │ new format                                                                                                                                       │\n * ├─────────────────┼────────────┬────────────┬────────────┬────────────┬──────────┬──────────┬────────────┬──────────┬────────────┬──────────┬────────────┬───────────┤\n * │ Original format │ General    │ Number     │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Special    │ Custom    │\n * ├─────────────────┼────────────┼────────────┼────────────┼────────────┼──────────┼──────────┼────────────┼──────────┼────────────┼──────────┼────────────┼───────────┤\n * │ General         │ General    │ Number     │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Special    │ Custom    │\n * │ Number          │ Number     │ Number     │ Number     │ Number     │ Number   │ Number   │ Number     │ Number   │ Number     │ Number   │ Number     │ Number    │\n * │ Currency        │ Currency   │ Currency   │ Currency   │ Currency   │ Currency │ Currency │ Currency   │ Currency │ Currency   │ Currency │ Currency   │ Currency  │\n * │ Accounting      │ Accounting │ Accounting │ Accounting │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Accounting │ Custom    │\n * │ Date            │ Date       │ Date       │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Date       │ Custom    │\n * │ Time            │ Time       │ Time       │ Time       │ Time       │ Time     │ Time     │ Time       │ Time     │ Time       │ Time     │ Time       │ Time      │\n * │ Percentage      │ Percentage │ Percentage │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Percentage │ Custom    │\n * │ Fraction        │ Fraction   │ Fraction   │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Fraction   │ Custom    │\n * │ Scientific      │ Scientific │ Scientific │ Currency   │ Accounting │ Date     │ Time     │ Percentage │ Fraction │ Scientific │ Text     │ Scientific │ Custom    │\n * │ Text            │ Text       │ Text       │ Text       │ Text       │ Text     │ Text     │ Text       │ Text     │ Text       │ Text     │ Text       │ Text      │\n * │ Special         │ Special    │ Special    │ Special    │ Special    │ Special  │ Special  │ Special    │ Special  │ Special    │ Special  │ Special    │ Special   │\n * │ Custom          │ Custom     │ Custom     │ Currency   │ Accounting │ Date     │ Custom   │ Percentage │ Fraction │ Scientific │ Text     │ Custom     │ Custom    │\n * └─────────────────┴────────────┴────────────┴────────────┴────────────┴──────────┴──────────┴────────────┴──────────┴────────────┴──────────┴────────────┴───────────┘\n *\n * The number formats supported by Univer are different from Excel, so it only processes the parts that are the same as Excel. For different parts, we consider the newly set number format to have a higher priority.\n *\n * In the future, if Univer completely matches Excel, we will implement Excel’s priority rules.\n *\n * @param oldPattern\n * @param pattern\n * @returns\n */\nexport function compareNumfmtPriority(oldPattern: string, pattern: string) {\n    const oldPatternType = getNumberFormatType(oldPattern);\n    const patternType = getNumberFormatType(pattern);\n\n    if (oldPatternType === NumberFormatType.General) {\n        return pattern;\n    }\n\n    if ([NumberFormatType.Number, NumberFormatType.Currency, NumberFormatType.Time, NumberFormatType.Text, NumberFormatType.Special].includes(oldPatternType)) {\n        return oldPattern;\n    }\n\n    if (oldPatternType === NumberFormatType.Accounting) {\n        if ([NumberFormatType.Date, NumberFormatType.Time, NumberFormatType.Percentage, NumberFormatType.Fraction, NumberFormatType.Scientific, NumberFormatType.Text, NumberFormatType.Custom].includes(patternType)) {\n            return pattern;\n        }\n        return oldPattern;\n    }\n\n    if ([NumberFormatType.Date, NumberFormatType.Percentage, NumberFormatType.Fraction, NumberFormatType.Scientific].includes(oldPatternType)) {\n        if ([NumberFormatType.Currency, NumberFormatType.Accounting, NumberFormatType.Date, NumberFormatType.Time, NumberFormatType.Percentage, NumberFormatType.Fraction, NumberFormatType.Scientific, NumberFormatType.Text, NumberFormatType.Custom].includes(patternType)) {\n            return pattern;\n        }\n        return oldPattern;\n    }\n\n    if (oldPatternType === NumberFormatType.Custom) {\n        if ([NumberFormatType.Currency, NumberFormatType.Accounting, NumberFormatType.Date, NumberFormatType.Percentage, NumberFormatType.Fraction, NumberFormatType.Scientific, NumberFormatType.Text].includes(patternType)) {\n            return pattern;\n        }\n        return oldPattern;\n    }\n\n    return oldPattern;\n}\n\nconst numberFormatTypeCache = new FormulaAstLRU<NumberFormatType>(100000);\nfunction getNumberFormatType(pattern: string) {\n    const patternTypeCache = numberFormatTypeCache.get(pattern);\n    if (patternTypeCache !== undefined) {\n        return patternTypeCache;\n    }\n\n    const type = getNumberFormatTypeRaw(pattern);\n    numberFormatTypeCache.set(pattern, type);\n\n    return type;\n}\n\nexport function clearNumberFormatTypeCache() {\n    numberFormatTypeCache.clear();\n}\n\n/**\n * Get the type of the number format\n *\n * @param pattern\n * @returns\n */\nfunction getNumberFormatTypeRaw(pattern: string): NumberFormatType {\n    if (isAccounting(pattern)) {\n        return NumberFormatType.Accounting;\n    }\n\n    const type = numfmt.getInfo(pattern).type as FormatType || 'unknown';\n    return NumberFormatTypeMap[type];\n}\n\nfunction isAccounting(pattern: string) {\n    return !!currencySymbols.find((code) => pattern.includes(code)) && pattern.startsWith('_(');\n};\n\n/**\n * The number format of the formula inherits the number format of the referenced cell, usually taking the format of the cell at the front position, but some formats have higher priority, there are some special cases.\n *\n * e.g.\n * Currency * Currency = General\n * Currency / Currency = General\n *\n * For two cells with the same number format, the calculated result should inherit the following number format\n * ┌─────┬─────────┬──────────┬────────────┬─────────┬─────────┬────────────┬──────────┬────────────┬──────┬─────────┬──────────┐\n * │     │ Number  │ Currency │ Accounting │ Date    │ Time    │ Percentage │ Fraction │ Scientific │ Text │ Special │ Custom   │\n * ├─────┼─────────┼──────────┼────────────┼─────────┼─────────┼────────────┼──────────┼────────────┼──────┼─────────┼──────────┤\n * │  +  │ Number  │ Currency │ Accounting │ General │ Time    │ Percentage │ Fraction │ Scientific │ Text │ Special │ General  │\n * │  -  │ Number  │ Currency │ Accounting │ General │ Time    │ Percentage │ Fraction │ Scientific │ Text │ Special │ General  │\n * │  *  │ General │ General  │ General    │ General │ General │ Percentage │ Fraction │ Scientific │ Text │ General │ General  │\n * │  /  │ General │ General  │ General    │ General │ General │ Percentage │ Fraction │ Scientific │ Text │ General │ General  │\n * └─────┴─────────┴──────────┴────────────┴─────────┴─────────┴────────────┴──────────┴────────────┴──────┴─────────┴──────────┘\n *\n * @param previousPattern\n * @param nextPattern\n */\nexport function comparePatternPriority(previousPattern: string, nextPattern: string, operator: operatorToken) {\n    if (previousPattern === '') {\n        return nextPattern;\n    } else if (nextPattern === '') {\n        return previousPattern;\n    }\n\n    const previousPatternType = getNumberFormatType(previousPattern);\n    const nextPatternType = getNumberFormatType(nextPattern);\n\n    if (operator === operatorToken.PLUS || operator === operatorToken.MINUS) {\n        if ((previousPatternType === NumberFormatType.Date && nextPatternType === NumberFormatType.Date) || (previousPatternType === NumberFormatType.Custom && nextPatternType === NumberFormatType.Custom)) {\n            return '';\n        }\n\n        return nextPattern;\n    }\n\n    if (operator === operatorToken.MULTIPLY || operator === operatorToken.DIVIDED) {\n        if ((previousPatternType === NumberFormatType.Percentage && nextPatternType === NumberFormatType.Percentage) || (previousPatternType === NumberFormatType.Fraction && nextPatternType === NumberFormatType.Fraction) || (previousPatternType === NumberFormatType.Scientific && nextPatternType === NumberFormatType.Scientific) || (previousPatternType === NumberFormatType.Text && nextPatternType === NumberFormatType.Text)) {\n            return nextPattern;\n        }\n\n        return '';\n    }\n\n    return previousPattern || nextPattern;\n}\n\n/**\n * Get the currency symbol based on the locale\n * Now define it here\n * TODO: import from sheet-numfmt currencySymbolMap later\n *\n * @param locale\n * @returns\n */\nconst countryCurrencySymbolMap = new Map<LocaleType, string>([\n    [LocaleType.EN_US, '$'],\n    // [LocaleType.JA_JP, '¥'],\n    [LocaleType.RU_RU, '₽'],\n    [LocaleType.VI_VN, '₫'],\n    [LocaleType.ZH_CN, '¥'],\n    [LocaleType.ZH_TW, 'NT$'],\n]);\n\nfunction getCurrencySymbol(locale: LocaleType): string {\n    return countryCurrencySymbolMap.get(locale) || '$';\n}\n\nexport function getCurrencyFormat(locale: LocaleType, numberDigits: number = 2): string {\n    let _numberDigits = numberDigits;\n\n    if (numberDigits > 127) {\n        _numberDigits = 127;\n    }\n\n    let decimal = '';\n\n    if (_numberDigits > 0) {\n        decimal = `.${'0'.repeat(_numberDigits)}`;\n    }\n\n    return `\"${getCurrencySymbol(locale)}\"#,##0${decimal}_);[Red](\"${getCurrencySymbol(locale)}\"#,##0${decimal})`;\n}\n\nexport function applyCurrencyFormat(locale: LocaleType, number: number, numberDigits: number = 2): string {\n    return numfmt.format(getCurrencyFormat(locale, numberDigits), number);\n}\n\n/**\n * String is number pattern or date or time, for example\n * \"20%\"\n * \"2012-12-12\"\n * \"16:48:00\"\n *\n * @param locale\n * @returns\n */\nconst stringToNumberPatternCache = new FormulaAstLRU<{\n    value: number;\n    pattern: string;\n}>(100000);\n\nexport function stringIsNumberPattern(input: string) {\n    let _input = input;\n\n    if (_input.startsWith('\"') && _input.endsWith('\"')) {\n        _input = _input.slice(1, -1);\n    }\n\n    const cacheValue = stringToNumberPatternCache.get(_input);\n\n    if (cacheValue) {\n        return {\n            isNumberPattern: true,\n            value: cacheValue.value,\n            pattern: cacheValue.pattern,\n        };\n    }\n\n    const numberPattern = numfmt.parseNumber(_input);\n\n    if (numberPattern && numberPattern.z) {\n        return setNumberPatternCache(_input, numberPattern.v as number, numberPattern.z as string);\n    }\n\n    const datePattern = numfmt.parseDate(_input);\n\n    if (datePattern && datePattern.z) {\n        return setNumberPatternCache(_input, datePattern.v as number, datePattern.z as string);\n    }\n\n    const timePattern = numfmt.parseTime(_input);\n\n    if (timePattern && timePattern.z) {\n        return setNumberPatternCache(_input, timePattern.v as number, timePattern.z as string);\n    }\n\n    return {\n        isNumberPattern: false,\n    };\n}\n\nfunction setNumberPatternCache(input: string, value: number, pattern: string) {\n    stringToNumberPatternCache.set(input, {\n        value,\n        pattern,\n    });\n\n    return {\n        isNumberPattern: true,\n        value,\n        pattern,\n    };\n}\n\nexport function clearStringToNumberPatternCache() {\n    stringToNumberPatternCache.clear();\n}\n"],"mappings":"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","names":["NumberFormatType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8a1dedfcede640c3a39eb8ec56095f9731ab9fa6"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/primitive-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/primitive-object.ts","statementMap":{"0":{"start":{"line":14,"column":4},"end":{"line":14,"column":62}},"1":{"start":{"line":15,"column":4},"end":{"line":15,"column":26}},"2":{"start":{"line":18,"column":4},"end":{"line":18,"column":16}},"3":{"start":{"line":21,"column":4},"end":{"line":21,"column":57}},"4":{"start":{"line":24,"column":4},"end":{"line":24,"column":58}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":61}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":60}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":56}},"8":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"9":{"start":{"line":37,"column":6},"end":{"line":37,"column":73}},"10":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"11":{"start":{"line":40,"column":6},"end":{"line":40,"column":77}},"12":{"start":{"line":42,"column":4},"end":{"line":42,"column":70}},"13":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"14":{"start":{"line":46,"column":6},"end":{"line":46,"column":71}},"15":{"start":{"line":48,"column":4},"end":{"line":48,"column":101}},"16":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"17":{"start":{"line":52,"column":6},"end":{"line":52,"column":72}},"18":{"start":{"line":54,"column":4},"end":{"line":54,"column":100}},"19":{"start":{"line":57,"column":4},"end":{"line":57,"column":53}},"20":{"start":{"line":60,"column":4},"end":{"line":60,"column":54}},"21":{"start":{"line":63,"column":4},"end":{"line":63,"column":57}},"22":{"start":{"line":66,"column":4},"end":{"line":66,"column":56}},"23":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"24":{"start":{"line":70,"column":6},"end":{"line":70,"column":69}},"25":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"26":{"start":{"line":73,"column":6},"end":{"line":73,"column":73}},"27":{"start":{"line":75,"column":4},"end":{"line":75,"column":66}},"28":{"start":{"line":78,"column":4},"end":{"line":78,"column":56}},"29":{"start":{"line":81,"column":4},"end":{"line":81,"column":46}},"30":{"start":{"line":84,"column":4},"end":{"line":84,"column":46}},"31":{"start":{"line":87,"column":4},"end":{"line":87,"column":45}},"32":{"start":{"line":90,"column":4},"end":{"line":90,"column":46}},"33":{"start":{"line":93,"column":4},"end":{"line":93,"column":46}},"34":{"start":{"line":96,"column":4},"end":{"line":96,"column":47}},"35":{"start":{"line":99,"column":4},"end":{"line":99,"column":45}},"36":{"start":{"line":102,"column":4},"end":{"line":102,"column":46}},"37":{"start":{"line":105,"column":4},"end":{"line":105,"column":46}},"38":{"start":{"line":108,"column":4},"end":{"line":108,"column":47}},"39":{"start":{"line":111,"column":4},"end":{"line":111,"column":45}},"40":{"start":{"line":114,"column":4},"end":{"line":114,"column":46}},"41":{"start":{"line":117,"column":4},"end":{"line":117,"column":46}},"42":{"start":{"line":120,"column":4},"end":{"line":120,"column":58}},"43":{"start":{"line":123,"column":4},"end":{"line":123,"column":47}},"44":{"start":{"line":126,"column":4},"end":{"line":126,"column":50}},"45":{"start":{"line":129,"column":4},"end":{"line":129,"column":50}},"46":{"start":{"line":132,"column":4},"end":{"line":132,"column":45}},"47":{"start":{"line":135,"column":4},"end":{"line":135,"column":45}},"48":{"start":{"line":138,"column":4},"end":{"line":138,"column":58}},"49":{"start":{"line":141,"column":4},"end":{"line":141,"column":58}},"50":{"start":{"line":144,"column":4},"end":{"line":144,"column":57}},"51":{"start":{"line":147,"column":4},"end":{"line":147,"column":39}},"52":{"start":{"line":150,"column":4},"end":{"line":150,"column":44}},"53":{"start":{"line":154,"column":11},"end":{"line":154,"column":16}},"54":{"start":{"line":158,"column":4},"end":{"line":161,"column":5}},"55":{"start":{"line":159,"column":6},"end":{"line":159,"column":78}},"56":{"start":{"line":160,"column":6},"end":{"line":160,"column":32}},"57":{"start":{"line":162,"column":4},"end":{"line":162,"column":79}},"58":{"start":{"line":163,"column":4},"end":{"line":163,"column":31}},"59":{"start":{"line":166,"column":4},"end":{"line":166,"column":20}},"60":{"start":{"line":167,"column":4},"end":{"line":167,"column":27}},"61":{"start":{"line":170,"column":4},"end":{"line":170,"column":23}},"62":{"start":{"line":173,"column":4},"end":{"line":173,"column":16}},"63":{"start":{"line":176,"column":25},"end":{"line":176,"column":40}},"64":{"start":{"line":177,"column":17},"end":{"line":177,"column":18}},"65":{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},"66":{"start":{"line":179,"column":6},"end":{"line":179,"column":17}},"67":{"start":{"line":181,"column":4},"end":{"line":181,"column":45}},"68":{"start":{"line":184,"column":25},"end":{"line":184,"column":40}},"69":{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},"70":{"start":{"line":186,"column":6},"end":{"line":186,"column":41}},"71":{"start":{"line":188,"column":4},"end":{"line":188,"column":58}},"72":{"start":{"line":191,"column":4},"end":{"line":191,"column":53}},"73":{"start":{"line":194,"column":4},"end":{"line":194,"column":54}},"74":{"start":{"line":197,"column":4},"end":{"line":197,"column":57}},"75":{"start":{"line":200,"column":4},"end":{"line":200,"column":56}},"76":{"start":{"line":203,"column":4},"end":{"line":203,"column":52}},"77":{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},"78":{"start":{"line":207,"column":6},"end":{"line":207,"column":73}},"79":{"start":{"line":209,"column":4},"end":{"line":211,"column":5}},"80":{"start":{"line":210,"column":6},"end":{"line":210,"column":68}},"81":{"start":{"line":212,"column":4},"end":{"line":212,"column":60}},"82":{"start":{"line":215,"column":17},"end":{"line":215,"column":22}},"83":{"start":{"line":216,"column":4},"end":{"line":221,"column":5}},"84":{"start":{"line":217,"column":6},"end":{"line":217,"column":45}},"85":{"start":{"line":218,"column":11},"end":{"line":221,"column":5}},"86":{"start":{"line":219,"column":28},"end":{"line":219,"column":67}},"87":{"start":{"line":220,"column":6},"end":{"line":220,"column":70}},"88":{"start":{"line":222,"column":4},"end":{"line":222,"column":45}},"89":{"start":{"line":225,"column":4},"end":{"line":234,"column":5}},"90":{"start":{"line":228,"column":8},"end":{"line":228,"column":20}},"91":{"start":{"line":233,"column":8},"end":{"line":233,"column":21}},"92":{"start":{"line":237,"column":4},"end":{"line":237,"column":65}},"93":{"start":{"line":240,"column":4},"end":{"line":240,"column":64}},"94":{"start":{"line":243,"column":25},"end":{"line":243,"column":40}},"95":{"start":{"line":244,"column":17},"end":{"line":244,"column":18}},"96":{"start":{"line":245,"column":4},"end":{"line":247,"column":5}},"97":{"start":{"line":246,"column":6},"end":{"line":246,"column":17}},"98":{"start":{"line":248,"column":4},"end":{"line":248,"column":44}},"99":{"start":{"line":251,"column":4},"end":{"line":251,"column":52}},"100":{"start":{"line":254,"column":4},"end":{"line":254,"column":42}},"101":{"start":{"line":257,"column":4},"end":{"line":257,"column":42}},"102":{"start":{"line":260,"column":4},"end":{"line":260,"column":41}},"103":{"start":{"line":263,"column":4},"end":{"line":263,"column":42}},"104":{"start":{"line":266,"column":4},"end":{"line":266,"column":42}},"105":{"start":{"line":269,"column":4},"end":{"line":269,"column":43}},"106":{"start":{"line":272,"column":4},"end":{"line":272,"column":41}},"107":{"start":{"line":275,"column":4},"end":{"line":275,"column":42}},"108":{"start":{"line":278,"column":4},"end":{"line":278,"column":42}},"109":{"start":{"line":281,"column":4},"end":{"line":281,"column":43}},"110":{"start":{"line":284,"column":4},"end":{"line":284,"column":41}},"111":{"start":{"line":287,"column":4},"end":{"line":287,"column":42}},"112":{"start":{"line":290,"column":4},"end":{"line":290,"column":42}},"113":{"start":{"line":293,"column":4},"end":{"line":293,"column":54}},"114":{"start":{"line":296,"column":4},"end":{"line":296,"column":43}},"115":{"start":{"line":299,"column":4},"end":{"line":299,"column":41}},"116":{"start":{"line":302,"column":4},"end":{"line":302,"column":43}},"117":{"start":{"line":305,"column":4},"end":{"line":305,"column":41}},"118":{"start":{"line":308,"column":4},"end":{"line":308,"column":41}},"119":{"start":{"line":311,"column":4},"end":{"line":311,"column":54}},"120":{"start":{"line":314,"column":4},"end":{"line":314,"column":54}},"121":{"start":{"line":317,"column":4},"end":{"line":317,"column":53}},"122":{"start":{"line":320,"column":4},"end":{"line":320,"column":62}},"123":{"start":{"line":323,"column":4},"end":{"line":323,"column":16}},"124":{"start":{"line":327,"column":11},"end":{"line":327,"column":12}},"125":{"start":{"line":329,"column":21},"end":{"line":329,"column":49}},"126":{"start":{"line":330,"column":4},"end":{"line":332,"column":5}},"127":{"start":{"line":331,"column":6},"end":{"line":331,"column":35}},"128":{"start":{"line":333,"column":4},"end":{"line":333,"column":20}},"129":{"start":{"line":336,"column":4},"end":{"line":336,"column":20}},"130":{"start":{"line":337,"column":4},"end":{"line":337,"column":35}},"131":{"start":{"line":340,"column":4},"end":{"line":340,"column":23}},"132":{"start":{"line":343,"column":4},"end":{"line":343,"column":24}},"133":{"start":{"line":346,"column":4},"end":{"line":346,"column":16}},"134":{"start":{"line":349,"column":4},"end":{"line":349,"column":51}},"135":{"start":{"line":352,"column":4},"end":{"line":352,"column":53}},"136":{"start":{"line":355,"column":4},"end":{"line":357,"column":5}},"137":{"start":{"line":356,"column":6},"end":{"line":356,"column":36}},"138":{"start":{"line":358,"column":17},"end":{"line":358,"column":52}},"139":{"start":{"line":359,"column":4},"end":{"line":361,"column":5}},"140":{"start":{"line":360,"column":6},"end":{"line":360,"column":20}},"141":{"start":{"line":362,"column":20},"end":{"line":362,"column":107}},"142":{"start":{"line":363,"column":4},"end":{"line":363,"column":74}},"143":{"start":{"line":364,"column":4},"end":{"line":364,"column":18}},"144":{"start":{"line":367,"column":4},"end":{"line":367,"column":29}},"145":{"start":{"line":370,"column":4},"end":{"line":376,"column":5}},"146":{"start":{"line":371,"column":16},"end":{"line":371,"column":41}},"147":{"start":{"line":372,"column":6},"end":{"line":374,"column":7}},"148":{"start":{"line":373,"column":8},"end":{"line":373,"column":17}},"149":{"start":{"line":375,"column":6},"end":{"line":375,"column":26}},"150":{"start":{"line":377,"column":17},"end":{"line":377,"column":53}},"151":{"start":{"line":378,"column":4},"end":{"line":380,"column":5}},"152":{"start":{"line":379,"column":6},"end":{"line":379,"column":20}},"153":{"start":{"line":381,"column":20},"end":{"line":381,"column":108}},"154":{"start":{"line":382,"column":4},"end":{"line":382,"column":74}},"155":{"start":{"line":383,"column":4},"end":{"line":383,"column":18}},"156":{"start":{"line":386,"column":4},"end":{"line":388,"column":5}},"157":{"start":{"line":387,"column":6},"end":{"line":387,"column":40}},"158":{"start":{"line":389,"column":17},"end":{"line":389,"column":56}},"159":{"start":{"line":390,"column":4},"end":{"line":392,"column":5}},"160":{"start":{"line":391,"column":6},"end":{"line":391,"column":20}},"161":{"start":{"line":393,"column":20},"end":{"line":393,"column":111}},"162":{"start":{"line":394,"column":4},"end":{"line":394,"column":74}},"163":{"start":{"line":395,"column":4},"end":{"line":395,"column":18}},"164":{"start":{"line":398,"column":4},"end":{"line":404,"column":5}},"165":{"start":{"line":399,"column":16},"end":{"line":399,"column":43}},"166":{"start":{"line":400,"column":6},"end":{"line":402,"column":7}},"167":{"start":{"line":401,"column":8},"end":{"line":401,"column":17}},"168":{"start":{"line":403,"column":6},"end":{"line":403,"column":30}},"169":{"start":{"line":405,"column":17},"end":{"line":405,"column":55}},"170":{"start":{"line":406,"column":4},"end":{"line":408,"column":5}},"171":{"start":{"line":407,"column":6},"end":{"line":407,"column":20}},"172":{"start":{"line":409,"column":20},"end":{"line":409,"column":110}},"173":{"start":{"line":410,"column":4},"end":{"line":410,"column":74}},"174":{"start":{"line":411,"column":4},"end":{"line":411,"column":18}},"175":{"start":{"line":414,"column":4},"end":{"line":416,"column":5}},"176":{"start":{"line":415,"column":6},"end":{"line":415,"column":42}},"177":{"start":{"line":417,"column":25},"end":{"line":417,"column":40}},"178":{"start":{"line":418,"column":18},"end":{"line":418,"column":40}},"179":{"start":{"line":419,"column":4},"end":{"line":421,"column":5}},"180":{"start":{"line":420,"column":6},"end":{"line":420,"column":60}},"181":{"start":{"line":422,"column":4},"end":{"line":424,"column":5}},"182":{"start":{"line":423,"column":6},"end":{"line":423,"column":54}},"183":{"start":{"line":425,"column":4},"end":{"line":440,"column":5}},"184":{"start":{"line":426,"column":6},"end":{"line":428,"column":7}},"185":{"start":{"line":427,"column":8},"end":{"line":427,"column":62}},"186":{"start":{"line":429,"column":6},"end":{"line":431,"column":7}},"187":{"start":{"line":430,"column":8},"end":{"line":430,"column":54}},"188":{"start":{"line":432,"column":6},"end":{"line":434,"column":7}},"189":{"start":{"line":433,"column":8},"end":{"line":433,"column":54}},"190":{"start":{"line":435,"column":21},"end":{"line":435,"column":45}},"191":{"start":{"line":436,"column":6},"end":{"line":438,"column":7}},"192":{"start":{"line":437,"column":8},"end":{"line":437,"column":54}},"193":{"start":{"line":439,"column":6},"end":{"line":439,"column":46}},"194":{"start":{"line":441,"column":4},"end":{"line":447,"column":5}},"195":{"start":{"line":442,"column":27},"end":{"line":442,"column":40}},"196":{"start":{"line":443,"column":6},"end":{"line":445,"column":7}},"197":{"start":{"line":444,"column":8},"end":{"line":444,"column":62}},"198":{"start":{"line":446,"column":6},"end":{"line":446,"column":71}},"199":{"start":{"line":448,"column":4},"end":{"line":448,"column":16}},"200":{"start":{"line":451,"column":4},"end":{"line":453,"column":5}},"201":{"start":{"line":452,"column":6},"end":{"line":452,"column":47}},"202":{"start":{"line":454,"column":4},"end":{"line":454,"column":101}},"203":{"start":{"line":457,"column":4},"end":{"line":459,"column":5}},"204":{"start":{"line":458,"column":6},"end":{"line":458,"column":48}},"205":{"start":{"line":460,"column":4},"end":{"line":460,"column":100}},"206":{"start":{"line":463,"column":4},"end":{"line":465,"column":5}},"207":{"start":{"line":464,"column":6},"end":{"line":464,"column":73}},"208":{"start":{"line":466,"column":4},"end":{"line":466,"column":60}},"209":{"start":{"line":469,"column":25},"end":{"line":469,"column":41}},"210":{"start":{"line":470,"column":19},"end":{"line":470,"column":25}},"211":{"start":{"line":471,"column":4},"end":{"line":473,"column":5}},"212":{"start":{"line":472,"column":6},"end":{"line":472,"column":54}},"213":{"start":{"line":474,"column":4},"end":{"line":476,"column":5}},"214":{"start":{"line":475,"column":6},"end":{"line":475,"column":52}},"215":{"start":{"line":477,"column":19},"end":{"line":477,"column":45}},"216":{"start":{"line":478,"column":4},"end":{"line":480,"column":5}},"217":{"start":{"line":479,"column":6},"end":{"line":479,"column":52}},"218":{"start":{"line":481,"column":4},"end":{"line":481,"column":44}},"219":{"start":{"line":484,"column":25},"end":{"line":484,"column":41}},"220":{"start":{"line":485,"column":19},"end":{"line":485,"column":25}},"221":{"start":{"line":486,"column":4},"end":{"line":488,"column":5}},"222":{"start":{"line":487,"column":6},"end":{"line":487,"column":54}},"223":{"start":{"line":489,"column":4},"end":{"line":491,"column":5}},"224":{"start":{"line":490,"column":6},"end":{"line":490,"column":52}},"225":{"start":{"line":492,"column":19},"end":{"line":492,"column":46}},"226":{"start":{"line":493,"column":4},"end":{"line":495,"column":5}},"227":{"start":{"line":494,"column":6},"end":{"line":494,"column":52}},"228":{"start":{"line":496,"column":4},"end":{"line":496,"column":44}},"229":{"start":{"line":499,"column":25},"end":{"line":499,"column":41}},"230":{"start":{"line":500,"column":19},"end":{"line":500,"column":25}},"231":{"start":{"line":501,"column":4},"end":{"line":503,"column":5}},"232":{"start":{"line":502,"column":6},"end":{"line":502,"column":54}},"233":{"start":{"line":504,"column":4},"end":{"line":506,"column":5}},"234":{"start":{"line":505,"column":6},"end":{"line":505,"column":52}},"235":{"start":{"line":507,"column":19},"end":{"line":507,"column":49}},"236":{"start":{"line":508,"column":4},"end":{"line":510,"column":5}},"237":{"start":{"line":509,"column":6},"end":{"line":509,"column":52}},"238":{"start":{"line":511,"column":4},"end":{"line":511,"column":44}},"239":{"start":{"line":514,"column":25},"end":{"line":514,"column":41}},"240":{"start":{"line":515,"column":19},"end":{"line":515,"column":25}},"241":{"start":{"line":516,"column":4},"end":{"line":518,"column":5}},"242":{"start":{"line":517,"column":6},"end":{"line":517,"column":54}},"243":{"start":{"line":519,"column":4},"end":{"line":521,"column":5}},"244":{"start":{"line":520,"column":6},"end":{"line":520,"column":52}},"245":{"start":{"line":522,"column":4},"end":{"line":524,"column":5}},"246":{"start":{"line":523,"column":6},"end":{"line":523,"column":60}},"247":{"start":{"line":525,"column":19},"end":{"line":525,"column":47}},"248":{"start":{"line":526,"column":4},"end":{"line":528,"column":5}},"249":{"start":{"line":527,"column":6},"end":{"line":527,"column":52}},"250":{"start":{"line":529,"column":4},"end":{"line":529,"column":44}},"251":{"start":{"line":532,"column":25},"end":{"line":532,"column":40}},"252":{"start":{"line":533,"column":17},"end":{"line":533,"column":22}},"253":{"start":{"line":534,"column":4},"end":{"line":540,"column":5}},"254":{"start":{"line":535,"column":6},"end":{"line":535,"column":45}},"255":{"start":{"line":536,"column":11},"end":{"line":540,"column":5}},"256":{"start":{"line":537,"column":6},"end":{"line":537,"column":66}},"257":{"start":{"line":538,"column":11},"end":{"line":540,"column":5}},"258":{"start":{"line":539,"column":6},"end":{"line":539,"column":46}},"259":{"start":{"line":541,"column":4},"end":{"line":541,"column":45}},"260":{"start":{"line":544,"column":4},"end":{"line":553,"column":5}},"261":{"start":{"line":548,"column":8},"end":{"line":548,"column":21}},"262":{"start":{"line":552,"column":8},"end":{"line":552,"column":20}},"263":{"start":{"line":556,"column":4},"end":{"line":560,"column":5}},"264":{"start":{"line":557,"column":6},"end":{"line":557,"column":66}},"265":{"start":{"line":559,"column":6},"end":{"line":559,"column":70}},"266":{"start":{"line":563,"column":4},"end":{"line":576,"column":5}},"267":{"start":{"line":565,"column":8},"end":{"line":565,"column":43}},"268":{"start":{"line":567,"column":8},"end":{"line":567,"column":48}},"269":{"start":{"line":569,"column":8},"end":{"line":569,"column":56}},"270":{"start":{"line":571,"column":8},"end":{"line":571,"column":45}},"271":{"start":{"line":573,"column":8},"end":{"line":573,"column":53}},"272":{"start":{"line":575,"column":8},"end":{"line":575,"column":44}},"273":{"start":{"line":579,"column":4},"end":{"line":588,"column":5}},"274":{"start":{"line":583,"column":8},"end":{"line":583,"column":21}},"275":{"start":{"line":587,"column":8},"end":{"line":587,"column":20}},"276":{"start":{"line":591,"column":4},"end":{"line":593,"column":5}},"277":{"start":{"line":592,"column":6},"end":{"line":592,"column":42}},"278":{"start":{"line":594,"column":4},"end":{"line":596,"column":5}},"279":{"start":{"line":595,"column":6},"end":{"line":595,"column":18}},"280":{"start":{"line":597,"column":25},"end":{"line":597,"column":40}},"281":{"start":{"line":598,"column":23},"end":{"line":598,"column":34}},"282":{"start":{"line":599,"column":4},"end":{"line":601,"column":5}},"283":{"start":{"line":600,"column":6},"end":{"line":600,"column":62}},"284":{"start":{"line":602,"column":4},"end":{"line":604,"column":5}},"285":{"start":{"line":603,"column":6},"end":{"line":603,"column":26}},"286":{"start":{"line":605,"column":18},"end":{"line":605,"column":42}},"287":{"start":{"line":606,"column":4},"end":{"line":608,"column":5}},"288":{"start":{"line":607,"column":6},"end":{"line":607,"column":54}},"289":{"start":{"line":609,"column":4},"end":{"line":611,"column":5}},"290":{"start":{"line":610,"column":6},"end":{"line":610,"column":52}},"291":{"start":{"line":612,"column":4},"end":{"line":620,"column":5}},"292":{"start":{"line":613,"column":6},"end":{"line":615,"column":7}},"293":{"start":{"line":614,"column":8},"end":{"line":614,"column":62}},"294":{"start":{"line":616,"column":6},"end":{"line":618,"column":7}},"295":{"start":{"line":617,"column":8},"end":{"line":617,"column":54}},"296":{"start":{"line":619,"column":6},"end":{"line":619,"column":41}},"297":{"start":{"line":621,"column":19},"end":{"line":621,"column":43}},"298":{"start":{"line":622,"column":4},"end":{"line":624,"column":5}},"299":{"start":{"line":623,"column":6},"end":{"line":623,"column":52}},"300":{"start":{"line":625,"column":4},"end":{"line":625,"column":44}},"301":{"start":{"line":628,"column":25},"end":{"line":628,"column":40}},"302":{"start":{"line":629,"column":4},"end":{"line":631,"column":5}},"303":{"start":{"line":630,"column":6},"end":{"line":630,"column":52}},"304":{"start":{"line":632,"column":19},"end":{"line":632,"column":37}},"305":{"start":{"line":633,"column":4},"end":{"line":635,"column":5}},"306":{"start":{"line":634,"column":6},"end":{"line":634,"column":52}},"307":{"start":{"line":636,"column":4},"end":{"line":636,"column":44}},"308":{"start":{"line":639,"column":25},"end":{"line":639,"column":40}},"309":{"start":{"line":640,"column":4},"end":{"line":642,"column":5}},"310":{"start":{"line":641,"column":6},"end":{"line":641,"column":52}},"311":{"start":{"line":643,"column":19},"end":{"line":643,"column":42}},"312":{"start":{"line":644,"column":4},"end":{"line":646,"column":5}},"313":{"start":{"line":645,"column":6},"end":{"line":645,"column":52}},"314":{"start":{"line":647,"column":4},"end":{"line":647,"column":44}},"315":{"start":{"line":650,"column":25},"end":{"line":650,"column":40}},"316":{"start":{"line":651,"column":4},"end":{"line":653,"column":5}},"317":{"start":{"line":652,"column":6},"end":{"line":652,"column":52}},"318":{"start":{"line":654,"column":19},"end":{"line":654,"column":41}},"319":{"start":{"line":655,"column":4},"end":{"line":657,"column":5}},"320":{"start":{"line":656,"column":6},"end":{"line":656,"column":52}},"321":{"start":{"line":658,"column":4},"end":{"line":658,"column":44}},"322":{"start":{"line":661,"column":25},"end":{"line":661,"column":40}},"323":{"start":{"line":662,"column":4},"end":{"line":664,"column":5}},"324":{"start":{"line":663,"column":6},"end":{"line":663,"column":52}},"325":{"start":{"line":665,"column":19},"end":{"line":665,"column":42}},"326":{"start":{"line":666,"column":4},"end":{"line":668,"column":5}},"327":{"start":{"line":667,"column":6},"end":{"line":667,"column":52}},"328":{"start":{"line":669,"column":4},"end":{"line":669,"column":44}},"329":{"start":{"line":672,"column":25},"end":{"line":672,"column":40}},"330":{"start":{"line":673,"column":4},"end":{"line":675,"column":5}},"331":{"start":{"line":674,"column":6},"end":{"line":674,"column":52}},"332":{"start":{"line":676,"column":19},"end":{"line":676,"column":42}},"333":{"start":{"line":677,"column":4},"end":{"line":679,"column":5}},"334":{"start":{"line":678,"column":6},"end":{"line":678,"column":52}},"335":{"start":{"line":680,"column":4},"end":{"line":680,"column":44}},"336":{"start":{"line":683,"column":25},"end":{"line":683,"column":40}},"337":{"start":{"line":684,"column":4},"end":{"line":686,"column":5}},"338":{"start":{"line":685,"column":6},"end":{"line":685,"column":52}},"339":{"start":{"line":687,"column":19},"end":{"line":687,"column":43}},"340":{"start":{"line":688,"column":4},"end":{"line":690,"column":5}},"341":{"start":{"line":689,"column":6},"end":{"line":689,"column":52}},"342":{"start":{"line":691,"column":4},"end":{"line":691,"column":44}},"343":{"start":{"line":694,"column":25},"end":{"line":694,"column":40}},"344":{"start":{"line":695,"column":4},"end":{"line":697,"column":5}},"345":{"start":{"line":696,"column":6},"end":{"line":696,"column":52}},"346":{"start":{"line":698,"column":19},"end":{"line":698,"column":41}},"347":{"start":{"line":699,"column":4},"end":{"line":701,"column":5}},"348":{"start":{"line":700,"column":6},"end":{"line":700,"column":52}},"349":{"start":{"line":702,"column":4},"end":{"line":702,"column":44}},"350":{"start":{"line":705,"column":25},"end":{"line":705,"column":40}},"351":{"start":{"line":706,"column":4},"end":{"line":708,"column":5}},"352":{"start":{"line":707,"column":6},"end":{"line":707,"column":52}},"353":{"start":{"line":709,"column":19},"end":{"line":709,"column":42}},"354":{"start":{"line":710,"column":4},"end":{"line":712,"column":5}},"355":{"start":{"line":711,"column":6},"end":{"line":711,"column":52}},"356":{"start":{"line":713,"column":4},"end":{"line":713,"column":44}},"357":{"start":{"line":716,"column":25},"end":{"line":716,"column":40}},"358":{"start":{"line":717,"column":4},"end":{"line":719,"column":5}},"359":{"start":{"line":718,"column":6},"end":{"line":718,"column":52}},"360":{"start":{"line":720,"column":19},"end":{"line":720,"column":42}},"361":{"start":{"line":721,"column":4},"end":{"line":723,"column":5}},"362":{"start":{"line":722,"column":6},"end":{"line":722,"column":52}},"363":{"start":{"line":724,"column":4},"end":{"line":724,"column":44}},"364":{"start":{"line":727,"column":25},"end":{"line":727,"column":40}},"365":{"start":{"line":728,"column":4},"end":{"line":730,"column":5}},"366":{"start":{"line":729,"column":6},"end":{"line":729,"column":52}},"367":{"start":{"line":731,"column":19},"end":{"line":731,"column":43}},"368":{"start":{"line":732,"column":4},"end":{"line":734,"column":5}},"369":{"start":{"line":733,"column":6},"end":{"line":733,"column":52}},"370":{"start":{"line":735,"column":4},"end":{"line":735,"column":44}},"371":{"start":{"line":738,"column":25},"end":{"line":738,"column":40}},"372":{"start":{"line":739,"column":4},"end":{"line":741,"column":5}},"373":{"start":{"line":740,"column":6},"end":{"line":740,"column":52}},"374":{"start":{"line":742,"column":19},"end":{"line":742,"column":41}},"375":{"start":{"line":743,"column":4},"end":{"line":745,"column":5}},"376":{"start":{"line":744,"column":6},"end":{"line":744,"column":52}},"377":{"start":{"line":746,"column":4},"end":{"line":746,"column":44}},"378":{"start":{"line":749,"column":25},"end":{"line":749,"column":40}},"379":{"start":{"line":750,"column":4},"end":{"line":752,"column":5}},"380":{"start":{"line":751,"column":6},"end":{"line":751,"column":52}},"381":{"start":{"line":753,"column":19},"end":{"line":753,"column":42}},"382":{"start":{"line":754,"column":4},"end":{"line":756,"column":5}},"383":{"start":{"line":755,"column":6},"end":{"line":755,"column":52}},"384":{"start":{"line":757,"column":4},"end":{"line":757,"column":44}},"385":{"start":{"line":760,"column":25},"end":{"line":760,"column":40}},"386":{"start":{"line":761,"column":4},"end":{"line":763,"column":5}},"387":{"start":{"line":762,"column":6},"end":{"line":762,"column":52}},"388":{"start":{"line":764,"column":19},"end":{"line":764,"column":42}},"389":{"start":{"line":765,"column":4},"end":{"line":767,"column":5}},"390":{"start":{"line":766,"column":6},"end":{"line":766,"column":52}},"391":{"start":{"line":768,"column":4},"end":{"line":768,"column":44}},"392":{"start":{"line":771,"column":4},"end":{"line":773,"column":5}},"393":{"start":{"line":772,"column":6},"end":{"line":772,"column":44}},"394":{"start":{"line":774,"column":25},"end":{"line":774,"column":40}},"395":{"start":{"line":775,"column":18},"end":{"line":775,"column":40}},"396":{"start":{"line":776,"column":4},"end":{"line":778,"column":5}},"397":{"start":{"line":777,"column":6},"end":{"line":777,"column":54}},"398":{"start":{"line":779,"column":4},"end":{"line":791,"column":5}},"399":{"start":{"line":780,"column":6},"end":{"line":782,"column":7}},"400":{"start":{"line":781,"column":8},"end":{"line":781,"column":54}},"401":{"start":{"line":783,"column":6},"end":{"line":785,"column":7}},"402":{"start":{"line":784,"column":8},"end":{"line":784,"column":62}},"403":{"start":{"line":786,"column":21},"end":{"line":786,"column":52}},"404":{"start":{"line":787,"column":6},"end":{"line":789,"column":7}},"405":{"start":{"line":788,"column":8},"end":{"line":788,"column":54}},"406":{"start":{"line":790,"column":6},"end":{"line":790,"column":46}},"407":{"start":{"line":792,"column":4},"end":{"line":794,"column":5}},"408":{"start":{"line":793,"column":6},"end":{"line":793,"column":79}},"409":{"start":{"line":795,"column":4},"end":{"line":795,"column":16}},"410":{"start":{"line":798,"column":25},"end":{"line":798,"column":40}},"411":{"start":{"line":799,"column":4},"end":{"line":801,"column":5}},"412":{"start":{"line":800,"column":6},"end":{"line":800,"column":52}},"413":{"start":{"line":802,"column":19},"end":{"line":802,"column":43}},"414":{"start":{"line":803,"column":4},"end":{"line":805,"column":5}},"415":{"start":{"line":804,"column":6},"end":{"line":804,"column":52}},"416":{"start":{"line":806,"column":4},"end":{"line":806,"column":44}},"417":{"start":{"line":809,"column":25},"end":{"line":809,"column":40}},"418":{"start":{"line":810,"column":4},"end":{"line":812,"column":5}},"419":{"start":{"line":811,"column":6},"end":{"line":811,"column":52}},"420":{"start":{"line":813,"column":4},"end":{"line":815,"column":5}},"421":{"start":{"line":814,"column":6},"end":{"line":814,"column":52}},"422":{"start":{"line":816,"column":19},"end":{"line":816,"column":41}},"423":{"start":{"line":817,"column":4},"end":{"line":819,"column":5}},"424":{"start":{"line":818,"column":6},"end":{"line":818,"column":52}},"425":{"start":{"line":820,"column":4},"end":{"line":820,"column":44}},"426":{"start":{"line":823,"column":25},"end":{"line":823,"column":40}},"427":{"start":{"line":824,"column":4},"end":{"line":826,"column":5}},"428":{"start":{"line":825,"column":6},"end":{"line":825,"column":52}},"429":{"start":{"line":827,"column":4},"end":{"line":829,"column":5}},"430":{"start":{"line":828,"column":6},"end":{"line":828,"column":52}},"431":{"start":{"line":830,"column":19},"end":{"line":830,"column":43}},"432":{"start":{"line":831,"column":4},"end":{"line":833,"column":5}},"433":{"start":{"line":832,"column":6},"end":{"line":832,"column":52}},"434":{"start":{"line":834,"column":4},"end":{"line":834,"column":44}},"435":{"start":{"line":837,"column":25},"end":{"line":837,"column":40}},"436":{"start":{"line":838,"column":4},"end":{"line":840,"column":5}},"437":{"start":{"line":839,"column":6},"end":{"line":839,"column":52}},"438":{"start":{"line":841,"column":19},"end":{"line":841,"column":41}},"439":{"start":{"line":842,"column":4},"end":{"line":844,"column":5}},"440":{"start":{"line":843,"column":6},"end":{"line":843,"column":52}},"441":{"start":{"line":845,"column":4},"end":{"line":845,"column":44}},"442":{"start":{"line":848,"column":25},"end":{"line":848,"column":40}},"443":{"start":{"line":849,"column":4},"end":{"line":851,"column":5}},"444":{"start":{"line":850,"column":6},"end":{"line":850,"column":52}},"445":{"start":{"line":852,"column":19},"end":{"line":852,"column":41}},"446":{"start":{"line":853,"column":4},"end":{"line":855,"column":5}},"447":{"start":{"line":854,"column":6},"end":{"line":854,"column":52}},"448":{"start":{"line":856,"column":4},"end":{"line":856,"column":44}},"449":{"start":{"line":859,"column":4},"end":{"line":861,"column":5}},"450":{"start":{"line":860,"column":6},"end":{"line":860,"column":44}},"451":{"start":{"line":862,"column":25},"end":{"line":862,"column":40}},"452":{"start":{"line":863,"column":18},"end":{"line":863,"column":40}},"453":{"start":{"line":864,"column":4},"end":{"line":866,"column":5}},"454":{"start":{"line":865,"column":6},"end":{"line":865,"column":54}},"455":{"start":{"line":867,"column":4},"end":{"line":876,"column":5}},"456":{"start":{"line":868,"column":6},"end":{"line":870,"column":7}},"457":{"start":{"line":869,"column":8},"end":{"line":869,"column":54}},"458":{"start":{"line":871,"column":21},"end":{"line":871,"column":106}},"459":{"start":{"line":872,"column":6},"end":{"line":874,"column":7}},"460":{"start":{"line":873,"column":8},"end":{"line":873,"column":54}},"461":{"start":{"line":875,"column":6},"end":{"line":875,"column":46}},"462":{"start":{"line":877,"column":4},"end":{"line":879,"column":5}},"463":{"start":{"line":878,"column":6},"end":{"line":878,"column":74}},"464":{"start":{"line":880,"column":4},"end":{"line":880,"column":16}},"465":{"start":{"line":883,"column":4},"end":{"line":885,"column":5}},"466":{"start":{"line":884,"column":6},"end":{"line":884,"column":44}},"467":{"start":{"line":886,"column":25},"end":{"line":886,"column":40}},"468":{"start":{"line":887,"column":18},"end":{"line":887,"column":40}},"469":{"start":{"line":888,"column":4},"end":{"line":890,"column":5}},"470":{"start":{"line":889,"column":6},"end":{"line":889,"column":54}},"471":{"start":{"line":891,"column":4},"end":{"line":900,"column":5}},"472":{"start":{"line":892,"column":6},"end":{"line":894,"column":7}},"473":{"start":{"line":893,"column":8},"end":{"line":893,"column":54}},"474":{"start":{"line":895,"column":21},"end":{"line":895,"column":106}},"475":{"start":{"line":896,"column":6},"end":{"line":898,"column":7}},"476":{"start":{"line":897,"column":8},"end":{"line":897,"column":54}},"477":{"start":{"line":899,"column":6},"end":{"line":899,"column":46}},"478":{"start":{"line":901,"column":4},"end":{"line":903,"column":5}},"479":{"start":{"line":902,"column":6},"end":{"line":902,"column":74}},"480":{"start":{"line":904,"column":4},"end":{"line":904,"column":16}},"481":{"start":{"line":907,"column":4},"end":{"line":909,"column":5}},"482":{"start":{"line":908,"column":6},"end":{"line":908,"column":43}},"483":{"start":{"line":910,"column":25},"end":{"line":910,"column":40}},"484":{"start":{"line":911,"column":18},"end":{"line":911,"column":40}},"485":{"start":{"line":912,"column":4},"end":{"line":914,"column":5}},"486":{"start":{"line":913,"column":6},"end":{"line":913,"column":54}},"487":{"start":{"line":915,"column":4},"end":{"line":924,"column":5}},"488":{"start":{"line":916,"column":6},"end":{"line":918,"column":7}},"489":{"start":{"line":917,"column":8},"end":{"line":917,"column":54}},"490":{"start":{"line":919,"column":21},"end":{"line":919,"column":104}},"491":{"start":{"line":920,"column":6},"end":{"line":922,"column":7}},"492":{"start":{"line":921,"column":8},"end":{"line":921,"column":54}},"493":{"start":{"line":923,"column":6},"end":{"line":923,"column":46}},"494":{"start":{"line":925,"column":4},"end":{"line":927,"column":5}},"495":{"start":{"line":926,"column":6},"end":{"line":926,"column":73}},"496":{"start":{"line":928,"column":4},"end":{"line":928,"column":16}},"497":{"start":{"line":931,"column":4},"end":{"line":931,"column":16}},"498":{"start":{"line":934,"column":4},"end":{"line":934,"column":52}},"499":{"start":{"line":937,"column":17},"end":{"line":937,"column":22}},"500":{"start":{"line":938,"column":4},"end":{"line":957,"column":5}},"501":{"start":{"line":940,"column":8},"end":{"line":940,"column":40}},"502":{"start":{"line":941,"column":8},"end":{"line":941,"column":14}},"503":{"start":{"line":943,"column":8},"end":{"line":943,"column":38}},"504":{"start":{"line":944,"column":8},"end":{"line":944,"column":14}},"505":{"start":{"line":946,"column":8},"end":{"line":946,"column":39}},"506":{"start":{"line":947,"column":8},"end":{"line":947,"column":14}},"507":{"start":{"line":949,"column":8},"end":{"line":949,"column":38}},"508":{"start":{"line":950,"column":8},"end":{"line":950,"column":14}},"509":{"start":{"line":952,"column":8},"end":{"line":952,"column":39}},"510":{"start":{"line":953,"column":8},"end":{"line":953,"column":14}},"511":{"start":{"line":955,"column":8},"end":{"line":955,"column":40}},"512":{"start":{"line":956,"column":8},"end":{"line":956,"column":14}},"513":{"start":{"line":958,"column":4},"end":{"line":958,"column":18}},"514":{"start":{"line":961,"column":31},"end":{"line":961,"column":34}},"515":{"start":{"line":962,"column":38},"end":{"line":962,"column":79}},"516":{"start":{"line":966,"column":19},"end":{"line":966,"column":52}},"517":{"start":{"line":967,"column":4},"end":{"line":969,"column":5}},"518":{"start":{"line":968,"column":6},"end":{"line":968,"column":20}},"519":{"start":{"line":970,"column":21},"end":{"line":970,"column":49}},"520":{"start":{"line":971,"column":4},"end":{"line":971,"column":48}},"521":{"start":{"line":972,"column":4},"end":{"line":972,"column":20}},"522":{"start":{"line":975,"column":4},"end":{"line":975,"column":20}},"523":{"start":{"line":976,"column":4},"end":{"line":976,"column":27}},"524":{"start":{"line":979,"column":4},"end":{"line":979,"column":23}},"525":{"start":{"line":982,"column":4},"end":{"line":982,"column":16}},"526":{"start":{"line":985,"column":4},"end":{"line":987,"column":5}},"527":{"start":{"line":986,"column":6},"end":{"line":986,"column":47}},"528":{"start":{"line":988,"column":4},"end":{"line":988,"column":101}},"529":{"start":{"line":991,"column":4},"end":{"line":993,"column":5}},"530":{"start":{"line":992,"column":6},"end":{"line":992,"column":48}},"531":{"start":{"line":994,"column":4},"end":{"line":994,"column":100}},"532":{"start":{"line":997,"column":4},"end":{"line":997,"column":63}},"533":{"start":{"line":1000,"column":4},"end":{"line":1000,"column":64}},"534":{"start":{"line":1003,"column":4},"end":{"line":1003,"column":67}},"535":{"start":{"line":1006,"column":4},"end":{"line":1006,"column":66}},"536":{"start":{"line":1009,"column":4},"end":{"line":1011,"column":5}},"537":{"start":{"line":1010,"column":6},"end":{"line":1010,"column":90}},"538":{"start":{"line":1012,"column":4},"end":{"line":1012,"column":77}},"539":{"start":{"line":1015,"column":23},"end":{"line":1015,"column":38}},"540":{"start":{"line":1016,"column":17},"end":{"line":1016,"column":22}},"541":{"start":{"line":1017,"column":4},"end":{"line":1031,"column":5}},"542":{"start":{"line":1018,"column":19},"end":{"line":1018,"column":24}},"543":{"start":{"line":1019,"column":6},"end":{"line":1022,"column":7}},"544":{"start":{"line":1020,"column":8},"end":{"line":1020,"column":56}},"545":{"start":{"line":1021,"column":8},"end":{"line":1021,"column":44}},"546":{"start":{"line":1023,"column":6},"end":{"line":1025,"column":7}},"547":{"start":{"line":1024,"column":8},"end":{"line":1024,"column":53}},"548":{"start":{"line":1026,"column":6},"end":{"line":1026,"column":67}},"549":{"start":{"line":1027,"column":11},"end":{"line":1031,"column":5}},"550":{"start":{"line":1028,"column":6},"end":{"line":1028,"column":45}},"551":{"start":{"line":1029,"column":11},"end":{"line":1031,"column":5}},"552":{"start":{"line":1030,"column":6},"end":{"line":1030,"column":46}},"553":{"start":{"line":1032,"column":4},"end":{"line":1032,"column":45}},"554":{"start":{"line":1035,"column":4},"end":{"line":1048,"column":5}},"555":{"start":{"line":1037,"column":8},"end":{"line":1037,"column":38}},"556":{"start":{"line":1039,"column":8},"end":{"line":1039,"column":36}},"557":{"start":{"line":1041,"column":8},"end":{"line":1041,"column":37}},"558":{"start":{"line":1043,"column":8},"end":{"line":1043,"column":36}},"559":{"start":{"line":1045,"column":8},"end":{"line":1045,"column":37}},"560":{"start":{"line":1047,"column":8},"end":{"line":1047,"column":38}},"561":{"start":{"line":1051,"column":4},"end":{"line":1060,"column":5}},"562":{"start":{"line":1055,"column":8},"end":{"line":1055,"column":20}},"563":{"start":{"line":1059,"column":8},"end":{"line":1059,"column":21}},"564":{"start":{"line":1063,"column":4},"end":{"line":1072,"column":5}},"565":{"start":{"line":1067,"column":8},"end":{"line":1067,"column":21}},"566":{"start":{"line":1071,"column":8},"end":{"line":1071,"column":20}},"567":{"start":{"line":1075,"column":4},"end":{"line":1075,"column":62}},"568":{"start":{"line":1078,"column":4},"end":{"line":1078,"column":43}},"569":{"start":{"line":1081,"column":25},"end":{"line":1081,"column":60}},"570":{"start":{"line":1082,"column":19},"end":{"line":1082,"column":69}},"571":{"start":{"line":1083,"column":4},"end":{"line":1083,"column":45}},"572":{"start":{"line":1087,"column":2},"end":{"line":1089,"column":3}},"573":{"start":{"line":1088,"column":4},"end":{"line":1088,"column":47}},"574":{"start":{"line":1090,"column":14},"end":{"line":1090,"column":19}},"575":{"start":{"line":1091,"column":2},"end":{"line":1104,"column":3}},"576":{"start":{"line":1092,"column":26},"end":{"line":1092,"column":54}},"577":{"start":{"line":1093,"column":4},"end":{"line":1097,"column":5}},"578":{"start":{"line":1094,"column":6},"end":{"line":1094,"column":19}},"579":{"start":{"line":1095,"column":11},"end":{"line":1097,"column":5}},"580":{"start":{"line":1096,"column":6},"end":{"line":1096,"column":20}},"581":{"start":{"line":1099,"column":4},"end":{"line":1103,"column":5}},"582":{"start":{"line":1100,"column":6},"end":{"line":1100,"column":19}},"583":{"start":{"line":1102,"column":6},"end":{"line":1102,"column":20}},"584":{"start":{"line":1105,"column":2},"end":{"line":1105,"column":42}},"585":{"start":{"line":1108,"column":14},"end":{"line":1108,"column":33}},"586":{"start":{"line":1109,"column":2},"end":{"line":1112,"column":3}},"587":{"start":{"line":1110,"column":4},"end":{"line":1110,"column":31}},"588":{"start":{"line":1111,"column":4},"end":{"line":1111,"column":38}},"589":{"start":{"line":1113,"column":2},"end":{"line":1113,"column":41}},"590":{"start":{"line":1116,"column":2},"end":{"line":1129,"column":3}},"591":{"start":{"line":1117,"column":17},"end":{"line":1117,"column":18}},"592":{"start":{"line":1118,"column":4},"end":{"line":1120,"column":5}},"593":{"start":{"line":1119,"column":6},"end":{"line":1119,"column":17}},"594":{"start":{"line":1121,"column":4},"end":{"line":1121,"column":53}},"595":{"start":{"line":1122,"column":9},"end":{"line":1129,"column":3}},"596":{"start":{"line":1123,"column":4},"end":{"line":1125,"column":5}},"597":{"start":{"line":1124,"column":6},"end":{"line":1124,"column":52}},"598":{"start":{"line":1126,"column":4},"end":{"line":1126,"column":55}},"599":{"start":{"line":1127,"column":9},"end":{"line":1129,"column":3}},"600":{"start":{"line":1128,"column":4},"end":{"line":1128,"column":63}},"601":{"start":{"line":1130,"column":2},"end":{"line":1130,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":2},"end":{"line":13,"column":3}},"loc":{"start":{"line":13,"column":18},"end":{"line":16,"column":3}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":2},"end":{"line":17,"column":3}},"loc":{"start":{"line":17,"column":11},"end":{"line":19,"column":3}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":2},"end":{"line":20,"column":3}},"loc":{"start":{"line":20,"column":20},"end":{"line":22,"column":3}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":2},"end":{"line":23,"column":3}},"loc":{"start":{"line":23,"column":21},"end":{"line":25,"column":3}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":2},"end":{"line":26,"column":3}},"loc":{"start":{"line":26,"column":24},"end":{"line":28,"column":3}},"line":26},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":2},"end":{"line":29,"column":3}},"loc":{"start":{"line":29,"column":23},"end":{"line":31,"column":3}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":32,"column":2},"end":{"line":32,"column":3}},"loc":{"start":{"line":32,"column":19},"end":{"line":34,"column":3}},"line":32},"7":{"name":"(anonymous_7)","decl":{"start":{"line":35,"column":2},"end":{"line":35,"column":3}},"loc":{"start":{"line":35,"column":33},"end":{"line":43,"column":3}},"line":35},"8":{"name":"(anonymous_8)","decl":{"start":{"line":44,"column":2},"end":{"line":44,"column":3}},"loc":{"start":{"line":44,"column":32},"end":{"line":49,"column":3}},"line":44},"9":{"name":"(anonymous_9)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":31},"end":{"line":55,"column":3}},"line":50},"10":{"name":"(anonymous_10)","decl":{"start":{"line":56,"column":2},"end":{"line":56,"column":3}},"loc":{"start":{"line":56,"column":16},"end":{"line":58,"column":3}},"line":56},"11":{"name":"(anonymous_11)","decl":{"start":{"line":59,"column":2},"end":{"line":59,"column":3}},"loc":{"start":{"line":59,"column":17},"end":{"line":61,"column":3}},"line":59},"12":{"name":"(anonymous_12)","decl":{"start":{"line":62,"column":2},"end":{"line":62,"column":3}},"loc":{"start":{"line":62,"column":20},"end":{"line":64,"column":3}},"line":62},"13":{"name":"(anonymous_13)","decl":{"start":{"line":65,"column":2},"end":{"line":65,"column":3}},"loc":{"start":{"line":65,"column":19},"end":{"line":67,"column":3}},"line":65},"14":{"name":"(anonymous_14)","decl":{"start":{"line":68,"column":2},"end":{"line":68,"column":3}},"loc":{"start":{"line":68,"column":29},"end":{"line":76,"column":3}},"line":68},"15":{"name":"(anonymous_15)","decl":{"start":{"line":77,"column":2},"end":{"line":77,"column":3}},"loc":{"start":{"line":77,"column":19},"end":{"line":79,"column":3}},"line":77},"16":{"name":"(anonymous_16)","decl":{"start":{"line":80,"column":2},"end":{"line":80,"column":3}},"loc":{"start":{"line":80,"column":9},"end":{"line":82,"column":3}},"line":80},"17":{"name":"(anonymous_17)","decl":{"start":{"line":83,"column":2},"end":{"line":83,"column":3}},"loc":{"start":{"line":83,"column":9},"end":{"line":85,"column":3}},"line":83},"18":{"name":"(anonymous_18)","decl":{"start":{"line":86,"column":2},"end":{"line":86,"column":3}},"loc":{"start":{"line":86,"column":8},"end":{"line":88,"column":3}},"line":86},"19":{"name":"(anonymous_19)","decl":{"start":{"line":89,"column":2},"end":{"line":89,"column":3}},"loc":{"start":{"line":89,"column":9},"end":{"line":91,"column":3}},"line":89},"20":{"name":"(anonymous_20)","decl":{"start":{"line":92,"column":2},"end":{"line":92,"column":3}},"loc":{"start":{"line":92,"column":9},"end":{"line":94,"column":3}},"line":92},"21":{"name":"(anonymous_21)","decl":{"start":{"line":95,"column":2},"end":{"line":95,"column":3}},"loc":{"start":{"line":95,"column":10},"end":{"line":97,"column":3}},"line":95},"22":{"name":"(anonymous_22)","decl":{"start":{"line":98,"column":2},"end":{"line":98,"column":3}},"loc":{"start":{"line":98,"column":8},"end":{"line":100,"column":3}},"line":98},"23":{"name":"(anonymous_23)","decl":{"start":{"line":101,"column":2},"end":{"line":101,"column":3}},"loc":{"start":{"line":101,"column":9},"end":{"line":103,"column":3}},"line":101},"24":{"name":"(anonymous_24)","decl":{"start":{"line":104,"column":2},"end":{"line":104,"column":3}},"loc":{"start":{"line":104,"column":9},"end":{"line":106,"column":3}},"line":104},"25":{"name":"(anonymous_25)","decl":{"start":{"line":107,"column":2},"end":{"line":107,"column":3}},"loc":{"start":{"line":107,"column":10},"end":{"line":109,"column":3}},"line":107},"26":{"name":"(anonymous_26)","decl":{"start":{"line":110,"column":2},"end":{"line":110,"column":3}},"loc":{"start":{"line":110,"column":8},"end":{"line":112,"column":3}},"line":110},"27":{"name":"(anonymous_27)","decl":{"start":{"line":113,"column":2},"end":{"line":113,"column":3}},"loc":{"start":{"line":113,"column":9},"end":{"line":115,"column":3}},"line":113},"28":{"name":"(anonymous_28)","decl":{"start":{"line":116,"column":2},"end":{"line":116,"column":3}},"loc":{"start":{"line":116,"column":9},"end":{"line":118,"column":3}},"line":116},"29":{"name":"(anonymous_29)","decl":{"start":{"line":119,"column":2},"end":{"line":119,"column":3}},"loc":{"start":{"line":119,"column":21},"end":{"line":121,"column":3}},"line":119},"30":{"name":"(anonymous_30)","decl":{"start":{"line":122,"column":2},"end":{"line":122,"column":3}},"loc":{"start":{"line":122,"column":10},"end":{"line":124,"column":3}},"line":122},"31":{"name":"(anonymous_31)","decl":{"start":{"line":125,"column":2},"end":{"line":125,"column":3}},"loc":{"start":{"line":125,"column":8},"end":{"line":127,"column":3}},"line":125},"32":{"name":"(anonymous_32)","decl":{"start":{"line":128,"column":2},"end":{"line":128,"column":3}},"loc":{"start":{"line":128,"column":10},"end":{"line":130,"column":3}},"line":128},"33":{"name":"(anonymous_33)","decl":{"start":{"line":131,"column":2},"end":{"line":131,"column":3}},"loc":{"start":{"line":131,"column":8},"end":{"line":133,"column":3}},"line":131},"34":{"name":"(anonymous_34)","decl":{"start":{"line":134,"column":2},"end":{"line":134,"column":3}},"loc":{"start":{"line":134,"column":8},"end":{"line":136,"column":3}},"line":134},"35":{"name":"(anonymous_35)","decl":{"start":{"line":137,"column":2},"end":{"line":137,"column":3}},"loc":{"start":{"line":137,"column":21},"end":{"line":139,"column":3}},"line":137},"36":{"name":"(anonymous_36)","decl":{"start":{"line":140,"column":2},"end":{"line":140,"column":3}},"loc":{"start":{"line":140,"column":21},"end":{"line":142,"column":3}},"line":140},"37":{"name":"(anonymous_37)","decl":{"start":{"line":143,"column":2},"end":{"line":143,"column":3}},"loc":{"start":{"line":143,"column":20},"end":{"line":145,"column":3}},"line":143},"38":{"name":"(anonymous_38)","decl":{"start":{"line":146,"column":2},"end":{"line":146,"column":3}},"loc":{"start":{"line":146,"column":31},"end":{"line":148,"column":3}},"line":146},"39":{"name":"(anonymous_39)","decl":{"start":{"line":149,"column":2},"end":{"line":149,"column":3}},"loc":{"start":{"line":149,"column":32},"end":{"line":151,"column":3}},"line":149},"40":{"name":"(anonymous_40)","decl":{"start":{"line":157,"column":2},"end":{"line":157,"column":3}},"loc":{"start":{"line":157,"column":23},"end":{"line":164,"column":3}},"line":157},"41":{"name":"(anonymous_41)","decl":{"start":{"line":165,"column":2},"end":{"line":165,"column":3}},"loc":{"start":{"line":165,"column":24},"end":{"line":168,"column":3}},"line":165},"42":{"name":"(anonymous_42)","decl":{"start":{"line":169,"column":2},"end":{"line":169,"column":3}},"loc":{"start":{"line":169,"column":13},"end":{"line":171,"column":3}},"line":169},"43":{"name":"(anonymous_43)","decl":{"start":{"line":172,"column":2},"end":{"line":172,"column":3}},"loc":{"start":{"line":172,"column":14},"end":{"line":174,"column":3}},"line":172},"44":{"name":"(anonymous_44)","decl":{"start":{"line":175,"column":2},"end":{"line":175,"column":3}},"loc":{"start":{"line":175,"column":16},"end":{"line":182,"column":3}},"line":175},"45":{"name":"(anonymous_45)","decl":{"start":{"line":183,"column":2},"end":{"line":183,"column":3}},"loc":{"start":{"line":183,"column":18},"end":{"line":189,"column":3}},"line":183},"46":{"name":"(anonymous_46)","decl":{"start":{"line":190,"column":2},"end":{"line":190,"column":3}},"loc":{"start":{"line":190,"column":20},"end":{"line":192,"column":3}},"line":190},"47":{"name":"(anonymous_47)","decl":{"start":{"line":193,"column":2},"end":{"line":193,"column":3}},"loc":{"start":{"line":193,"column":21},"end":{"line":195,"column":3}},"line":193},"48":{"name":"(anonymous_48)","decl":{"start":{"line":196,"column":2},"end":{"line":196,"column":3}},"loc":{"start":{"line":196,"column":24},"end":{"line":198,"column":3}},"line":196},"49":{"name":"(anonymous_49)","decl":{"start":{"line":199,"column":2},"end":{"line":199,"column":3}},"loc":{"start":{"line":199,"column":23},"end":{"line":201,"column":3}},"line":199},"50":{"name":"(anonymous_50)","decl":{"start":{"line":202,"column":2},"end":{"line":202,"column":3}},"loc":{"start":{"line":202,"column":19},"end":{"line":204,"column":3}},"line":202},"51":{"name":"(anonymous_51)","decl":{"start":{"line":205,"column":2},"end":{"line":205,"column":3}},"loc":{"start":{"line":205,"column":33},"end":{"line":213,"column":3}},"line":205},"52":{"name":"(anonymous_52)","decl":{"start":{"line":214,"column":2},"end":{"line":214,"column":3}},"loc":{"start":{"line":214,"column":29},"end":{"line":223,"column":3}},"line":214},"53":{"name":"(anonymous_53)","decl":{"start":{"line":224,"column":2},"end":{"line":224,"column":3}},"loc":{"start":{"line":224,"column":27},"end":{"line":235,"column":3}},"line":224},"54":{"name":"(anonymous_54)","decl":{"start":{"line":236,"column":2},"end":{"line":236,"column":3}},"loc":{"start":{"line":236,"column":32},"end":{"line":238,"column":3}},"line":236},"55":{"name":"(anonymous_55)","decl":{"start":{"line":239,"column":2},"end":{"line":239,"column":3}},"loc":{"start":{"line":239,"column":31},"end":{"line":241,"column":3}},"line":239},"56":{"name":"(anonymous_56)","decl":{"start":{"line":242,"column":2},"end":{"line":242,"column":3}},"loc":{"start":{"line":242,"column":21},"end":{"line":249,"column":3}},"line":242},"57":{"name":"(anonymous_57)","decl":{"start":{"line":250,"column":2},"end":{"line":250,"column":3}},"loc":{"start":{"line":250,"column":19},"end":{"line":252,"column":3}},"line":250},"58":{"name":"(anonymous_58)","decl":{"start":{"line":253,"column":2},"end":{"line":253,"column":3}},"loc":{"start":{"line":253,"column":9},"end":{"line":255,"column":3}},"line":253},"59":{"name":"(anonymous_59)","decl":{"start":{"line":256,"column":2},"end":{"line":256,"column":3}},"loc":{"start":{"line":256,"column":9},"end":{"line":258,"column":3}},"line":256},"60":{"name":"(anonymous_60)","decl":{"start":{"line":259,"column":2},"end":{"line":259,"column":3}},"loc":{"start":{"line":259,"column":8},"end":{"line":261,"column":3}},"line":259},"61":{"name":"(anonymous_61)","decl":{"start":{"line":262,"column":2},"end":{"line":262,"column":3}},"loc":{"start":{"line":262,"column":9},"end":{"line":264,"column":3}},"line":262},"62":{"name":"(anonymous_62)","decl":{"start":{"line":265,"column":2},"end":{"line":265,"column":3}},"loc":{"start":{"line":265,"column":9},"end":{"line":267,"column":3}},"line":265},"63":{"name":"(anonymous_63)","decl":{"start":{"line":268,"column":2},"end":{"line":268,"column":3}},"loc":{"start":{"line":268,"column":10},"end":{"line":270,"column":3}},"line":268},"64":{"name":"(anonymous_64)","decl":{"start":{"line":271,"column":2},"end":{"line":271,"column":3}},"loc":{"start":{"line":271,"column":8},"end":{"line":273,"column":3}},"line":271},"65":{"name":"(anonymous_65)","decl":{"start":{"line":274,"column":2},"end":{"line":274,"column":3}},"loc":{"start":{"line":274,"column":9},"end":{"line":276,"column":3}},"line":274},"66":{"name":"(anonymous_66)","decl":{"start":{"line":277,"column":2},"end":{"line":277,"column":3}},"loc":{"start":{"line":277,"column":9},"end":{"line":279,"column":3}},"line":277},"67":{"name":"(anonymous_67)","decl":{"start":{"line":280,"column":2},"end":{"line":280,"column":3}},"loc":{"start":{"line":280,"column":10},"end":{"line":282,"column":3}},"line":280},"68":{"name":"(anonymous_68)","decl":{"start":{"line":283,"column":2},"end":{"line":283,"column":3}},"loc":{"start":{"line":283,"column":8},"end":{"line":285,"column":3}},"line":283},"69":{"name":"(anonymous_69)","decl":{"start":{"line":286,"column":2},"end":{"line":286,"column":3}},"loc":{"start":{"line":286,"column":9},"end":{"line":288,"column":3}},"line":286},"70":{"name":"(anonymous_70)","decl":{"start":{"line":289,"column":2},"end":{"line":289,"column":3}},"loc":{"start":{"line":289,"column":9},"end":{"line":291,"column":3}},"line":289},"71":{"name":"(anonymous_71)","decl":{"start":{"line":292,"column":2},"end":{"line":292,"column":3}},"loc":{"start":{"line":292,"column":21},"end":{"line":294,"column":3}},"line":292},"72":{"name":"(anonymous_72)","decl":{"start":{"line":295,"column":2},"end":{"line":295,"column":3}},"loc":{"start":{"line":295,"column":10},"end":{"line":297,"column":3}},"line":295},"73":{"name":"(anonymous_73)","decl":{"start":{"line":298,"column":2},"end":{"line":298,"column":3}},"loc":{"start":{"line":298,"column":8},"end":{"line":300,"column":3}},"line":298},"74":{"name":"(anonymous_74)","decl":{"start":{"line":301,"column":2},"end":{"line":301,"column":3}},"loc":{"start":{"line":301,"column":10},"end":{"line":303,"column":3}},"line":301},"75":{"name":"(anonymous_75)","decl":{"start":{"line":304,"column":2},"end":{"line":304,"column":3}},"loc":{"start":{"line":304,"column":8},"end":{"line":306,"column":3}},"line":304},"76":{"name":"(anonymous_76)","decl":{"start":{"line":307,"column":2},"end":{"line":307,"column":3}},"loc":{"start":{"line":307,"column":8},"end":{"line":309,"column":3}},"line":307},"77":{"name":"(anonymous_77)","decl":{"start":{"line":310,"column":2},"end":{"line":310,"column":3}},"loc":{"start":{"line":310,"column":21},"end":{"line":312,"column":3}},"line":310},"78":{"name":"(anonymous_78)","decl":{"start":{"line":313,"column":2},"end":{"line":313,"column":3}},"loc":{"start":{"line":313,"column":21},"end":{"line":315,"column":3}},"line":313},"79":{"name":"(anonymous_79)","decl":{"start":{"line":316,"column":2},"end":{"line":316,"column":3}},"loc":{"start":{"line":316,"column":20},"end":{"line":318,"column":3}},"line":316},"80":{"name":"(anonymous_80)","decl":{"start":{"line":319,"column":2},"end":{"line":319,"column":3}},"loc":{"start":{"line":319,"column":31},"end":{"line":321,"column":3}},"line":319},"81":{"name":"(anonymous_81)","decl":{"start":{"line":322,"column":2},"end":{"line":322,"column":3}},"loc":{"start":{"line":322,"column":32},"end":{"line":324,"column":3}},"line":322},"82":{"name":"(anonymous_82)","decl":{"start":{"line":328,"column":2},"end":{"line":328,"column":3}},"loc":{"start":{"line":328,"column":37},"end":{"line":334,"column":3}},"line":328},"83":{"name":"(anonymous_83)","decl":{"start":{"line":335,"column":2},"end":{"line":335,"column":3}},"loc":{"start":{"line":335,"column":24},"end":{"line":338,"column":3}},"line":335},"84":{"name":"(anonymous_84)","decl":{"start":{"line":339,"column":2},"end":{"line":339,"column":3}},"loc":{"start":{"line":339,"column":13},"end":{"line":341,"column":3}},"line":339},"85":{"name":"(anonymous_85)","decl":{"start":{"line":342,"column":2},"end":{"line":342,"column":3}},"loc":{"start":{"line":342,"column":18},"end":{"line":344,"column":3}},"line":342},"86":{"name":"(anonymous_86)","decl":{"start":{"line":345,"column":2},"end":{"line":345,"column":3}},"loc":{"start":{"line":345,"column":13},"end":{"line":347,"column":3}},"line":345},"87":{"name":"(anonymous_87)","decl":{"start":{"line":348,"column":2},"end":{"line":348,"column":3}},"loc":{"start":{"line":348,"column":16},"end":{"line":350,"column":3}},"line":348},"88":{"name":"(anonymous_88)","decl":{"start":{"line":351,"column":2},"end":{"line":351,"column":3}},"loc":{"start":{"line":351,"column":18},"end":{"line":353,"column":3}},"line":351},"89":{"name":"(anonymous_89)","decl":{"start":{"line":354,"column":2},"end":{"line":354,"column":3}},"loc":{"start":{"line":354,"column":20},"end":{"line":365,"column":3}},"line":354},"90":{"name":"(anonymous_90)","decl":{"start":{"line":366,"column":2},"end":{"line":366,"column":3}},"loc":{"start":{"line":366,"column":14},"end":{"line":368,"column":3}},"line":366},"91":{"name":"(anonymous_91)","decl":{"start":{"line":369,"column":2},"end":{"line":369,"column":3}},"loc":{"start":{"line":369,"column":21},"end":{"line":384,"column":3}},"line":369},"92":{"name":"(anonymous_92)","decl":{"start":{"line":385,"column":2},"end":{"line":385,"column":3}},"loc":{"start":{"line":385,"column":24},"end":{"line":396,"column":3}},"line":385},"93":{"name":"(anonymous_93)","decl":{"start":{"line":397,"column":2},"end":{"line":397,"column":3}},"loc":{"start":{"line":397,"column":23},"end":{"line":412,"column":3}},"line":397},"94":{"name":"(anonymous_94)","decl":{"start":{"line":413,"column":2},"end":{"line":413,"column":3}},"loc":{"start":{"line":413,"column":19},"end":{"line":449,"column":3}},"line":413},"95":{"name":"(anonymous_95)","decl":{"start":{"line":450,"column":2},"end":{"line":450,"column":3}},"loc":{"start":{"line":450,"column":32},"end":{"line":455,"column":3}},"line":450},"96":{"name":"(anonymous_96)","decl":{"start":{"line":456,"column":2},"end":{"line":456,"column":3}},"loc":{"start":{"line":456,"column":31},"end":{"line":461,"column":3}},"line":456},"97":{"name":"(anonymous_97)","decl":{"start":{"line":462,"column":2},"end":{"line":462,"column":3}},"loc":{"start":{"line":462,"column":33},"end":{"line":467,"column":3}},"line":462},"98":{"name":"(anonymous_98)","decl":{"start":{"line":468,"column":2},"end":{"line":468,"column":3}},"loc":{"start":{"line":468,"column":16},"end":{"line":482,"column":3}},"line":468},"99":{"name":"(anonymous_99)","decl":{"start":{"line":483,"column":2},"end":{"line":483,"column":3}},"loc":{"start":{"line":483,"column":17},"end":{"line":497,"column":3}},"line":483},"100":{"name":"(anonymous_100)","decl":{"start":{"line":498,"column":2},"end":{"line":498,"column":3}},"loc":{"start":{"line":498,"column":20},"end":{"line":512,"column":3}},"line":498},"101":{"name":"(anonymous_101)","decl":{"start":{"line":513,"column":2},"end":{"line":513,"column":3}},"loc":{"start":{"line":513,"column":19},"end":{"line":530,"column":3}},"line":513},"102":{"name":"(anonymous_102)","decl":{"start":{"line":531,"column":2},"end":{"line":531,"column":3}},"loc":{"start":{"line":531,"column":29},"end":{"line":542,"column":3}},"line":531},"103":{"name":"(anonymous_103)","decl":{"start":{"line":543,"column":2},"end":{"line":543,"column":3}},"loc":{"start":{"line":543,"column":27},"end":{"line":554,"column":3}},"line":543},"104":{"name":"(anonymous_104)","decl":{"start":{"line":555,"column":2},"end":{"line":555,"column":3}},"loc":{"start":{"line":555,"column":48},"end":{"line":561,"column":3}},"line":555},"105":{"name":"(anonymous_105)","decl":{"start":{"line":562,"column":2},"end":{"line":562,"column":3}},"loc":{"start":{"line":562,"column":54},"end":{"line":577,"column":3}},"line":562},"106":{"name":"(anonymous_106)","decl":{"start":{"line":578,"column":2},"end":{"line":578,"column":3}},"loc":{"start":{"line":578,"column":28},"end":{"line":589,"column":3}},"line":578},"107":{"name":"(anonymous_107)","decl":{"start":{"line":590,"column":2},"end":{"line":590,"column":3}},"loc":{"start":{"line":590,"column":19},"end":{"line":626,"column":3}},"line":590},"108":{"name":"(anonymous_108)","decl":{"start":{"line":627,"column":2},"end":{"line":627,"column":3}},"loc":{"start":{"line":627,"column":9},"end":{"line":637,"column":3}},"line":627},"109":{"name":"(anonymous_109)","decl":{"start":{"line":638,"column":2},"end":{"line":638,"column":3}},"loc":{"start":{"line":638,"column":9},"end":{"line":648,"column":3}},"line":638},"110":{"name":"(anonymous_110)","decl":{"start":{"line":649,"column":2},"end":{"line":649,"column":3}},"loc":{"start":{"line":649,"column":8},"end":{"line":659,"column":3}},"line":649},"111":{"name":"(anonymous_111)","decl":{"start":{"line":660,"column":2},"end":{"line":660,"column":3}},"loc":{"start":{"line":660,"column":9},"end":{"line":670,"column":3}},"line":660},"112":{"name":"(anonymous_112)","decl":{"start":{"line":671,"column":2},"end":{"line":671,"column":3}},"loc":{"start":{"line":671,"column":9},"end":{"line":681,"column":3}},"line":671},"113":{"name":"(anonymous_113)","decl":{"start":{"line":682,"column":2},"end":{"line":682,"column":3}},"loc":{"start":{"line":682,"column":10},"end":{"line":692,"column":3}},"line":682},"114":{"name":"(anonymous_114)","decl":{"start":{"line":693,"column":2},"end":{"line":693,"column":3}},"loc":{"start":{"line":693,"column":8},"end":{"line":703,"column":3}},"line":693},"115":{"name":"(anonymous_115)","decl":{"start":{"line":704,"column":2},"end":{"line":704,"column":3}},"loc":{"start":{"line":704,"column":9},"end":{"line":714,"column":3}},"line":704},"116":{"name":"(anonymous_116)","decl":{"start":{"line":715,"column":2},"end":{"line":715,"column":3}},"loc":{"start":{"line":715,"column":9},"end":{"line":725,"column":3}},"line":715},"117":{"name":"(anonymous_117)","decl":{"start":{"line":726,"column":2},"end":{"line":726,"column":3}},"loc":{"start":{"line":726,"column":10},"end":{"line":736,"column":3}},"line":726},"118":{"name":"(anonymous_118)","decl":{"start":{"line":737,"column":2},"end":{"line":737,"column":3}},"loc":{"start":{"line":737,"column":8},"end":{"line":747,"column":3}},"line":737},"119":{"name":"(anonymous_119)","decl":{"start":{"line":748,"column":2},"end":{"line":748,"column":3}},"loc":{"start":{"line":748,"column":9},"end":{"line":758,"column":3}},"line":748},"120":{"name":"(anonymous_120)","decl":{"start":{"line":759,"column":2},"end":{"line":759,"column":3}},"loc":{"start":{"line":759,"column":9},"end":{"line":769,"column":3}},"line":759},"121":{"name":"(anonymous_121)","decl":{"start":{"line":770,"column":2},"end":{"line":770,"column":3}},"loc":{"start":{"line":770,"column":21},"end":{"line":796,"column":3}},"line":770},"122":{"name":"(anonymous_122)","decl":{"start":{"line":797,"column":2},"end":{"line":797,"column":3}},"loc":{"start":{"line":797,"column":10},"end":{"line":807,"column":3}},"line":797},"123":{"name":"(anonymous_123)","decl":{"start":{"line":808,"column":2},"end":{"line":808,"column":3}},"loc":{"start":{"line":808,"column":8},"end":{"line":821,"column":3}},"line":808},"124":{"name":"(anonymous_124)","decl":{"start":{"line":822,"column":2},"end":{"line":822,"column":3}},"loc":{"start":{"line":822,"column":10},"end":{"line":835,"column":3}},"line":822},"125":{"name":"(anonymous_125)","decl":{"start":{"line":836,"column":2},"end":{"line":836,"column":3}},"loc":{"start":{"line":836,"column":8},"end":{"line":846,"column":3}},"line":836},"126":{"name":"(anonymous_126)","decl":{"start":{"line":847,"column":2},"end":{"line":847,"column":3}},"loc":{"start":{"line":847,"column":8},"end":{"line":857,"column":3}},"line":847},"127":{"name":"(anonymous_127)","decl":{"start":{"line":858,"column":2},"end":{"line":858,"column":3}},"loc":{"start":{"line":858,"column":21},"end":{"line":881,"column":3}},"line":858},"128":{"name":"(anonymous_128)","decl":{"start":{"line":882,"column":2},"end":{"line":882,"column":3}},"loc":{"start":{"line":882,"column":21},"end":{"line":905,"column":3}},"line":882},"129":{"name":"(anonymous_129)","decl":{"start":{"line":906,"column":2},"end":{"line":906,"column":3}},"loc":{"start":{"line":906,"column":20},"end":{"line":929,"column":3}},"line":906},"130":{"name":"(anonymous_130)","decl":{"start":{"line":930,"column":2},"end":{"line":930,"column":3}},"loc":{"start":{"line":930,"column":31},"end":{"line":932,"column":3}},"line":930},"131":{"name":"(anonymous_131)","decl":{"start":{"line":933,"column":2},"end":{"line":933,"column":3}},"loc":{"start":{"line":933,"column":32},"end":{"line":935,"column":3}},"line":933},"132":{"name":"(anonymous_132)","decl":{"start":{"line":936,"column":2},"end":{"line":936,"column":3}},"loc":{"start":{"line":936,"column":50},"end":{"line":959,"column":3}},"line":936},"133":{"name":"(anonymous_133)","decl":{"start":{"line":965,"column":2},"end":{"line":965,"column":3}},"loc":{"start":{"line":965,"column":23},"end":{"line":973,"column":3}},"line":965},"134":{"name":"(anonymous_134)","decl":{"start":{"line":974,"column":2},"end":{"line":974,"column":3}},"loc":{"start":{"line":974,"column":24},"end":{"line":977,"column":3}},"line":974},"135":{"name":"(anonymous_135)","decl":{"start":{"line":978,"column":2},"end":{"line":978,"column":3}},"loc":{"start":{"line":978,"column":13},"end":{"line":980,"column":3}},"line":978},"136":{"name":"(anonymous_136)","decl":{"start":{"line":981,"column":2},"end":{"line":981,"column":3}},"loc":{"start":{"line":981,"column":13},"end":{"line":983,"column":3}},"line":981},"137":{"name":"(anonymous_137)","decl":{"start":{"line":984,"column":2},"end":{"line":984,"column":3}},"loc":{"start":{"line":984,"column":32},"end":{"line":989,"column":3}},"line":984},"138":{"name":"(anonymous_138)","decl":{"start":{"line":990,"column":2},"end":{"line":990,"column":3}},"loc":{"start":{"line":990,"column":31},"end":{"line":995,"column":3}},"line":990},"139":{"name":"(anonymous_139)","decl":{"start":{"line":996,"column":2},"end":{"line":996,"column":3}},"loc":{"start":{"line":996,"column":20},"end":{"line":998,"column":3}},"line":996},"140":{"name":"(anonymous_140)","decl":{"start":{"line":999,"column":2},"end":{"line":999,"column":3}},"loc":{"start":{"line":999,"column":21},"end":{"line":1001,"column":3}},"line":999},"141":{"name":"(anonymous_141)","decl":{"start":{"line":1002,"column":2},"end":{"line":1002,"column":3}},"loc":{"start":{"line":1002,"column":24},"end":{"line":1004,"column":3}},"line":1002},"142":{"name":"(anonymous_142)","decl":{"start":{"line":1005,"column":2},"end":{"line":1005,"column":3}},"loc":{"start":{"line":1005,"column":23},"end":{"line":1007,"column":3}},"line":1005},"143":{"name":"(anonymous_143)","decl":{"start":{"line":1008,"column":2},"end":{"line":1008,"column":3}},"loc":{"start":{"line":1008,"column":50},"end":{"line":1013,"column":3}},"line":1008},"144":{"name":"(anonymous_144)","decl":{"start":{"line":1014,"column":2},"end":{"line":1014,"column":3}},"loc":{"start":{"line":1014,"column":54},"end":{"line":1033,"column":3}},"line":1014},"145":{"name":"(anonymous_145)","decl":{"start":{"line":1034,"column":2},"end":{"line":1034,"column":3}},"loc":{"start":{"line":1034,"column":48},"end":{"line":1049,"column":3}},"line":1034},"146":{"name":"(anonymous_146)","decl":{"start":{"line":1050,"column":2},"end":{"line":1050,"column":3}},"loc":{"start":{"line":1050,"column":27},"end":{"line":1061,"column":3}},"line":1050},"147":{"name":"(anonymous_147)","decl":{"start":{"line":1062,"column":2},"end":{"line":1062,"column":3}},"loc":{"start":{"line":1062,"column":28},"end":{"line":1073,"column":3}},"line":1062},"148":{"name":"(anonymous_148)","decl":{"start":{"line":1074,"column":2},"end":{"line":1074,"column":3}},"loc":{"start":{"line":1074,"column":31},"end":{"line":1076,"column":3}},"line":1074},"149":{"name":"(anonymous_149)","decl":{"start":{"line":1077,"column":2},"end":{"line":1077,"column":3}},"loc":{"start":{"line":1077,"column":32},"end":{"line":1079,"column":3}},"line":1077},"150":{"name":"(anonymous_150)","decl":{"start":{"line":1080,"column":2},"end":{"line":1080,"column":3}},"loc":{"start":{"line":1080,"column":34},"end":{"line":1084,"column":3}},"line":1080},"151":{"name":"createBooleanValueObjectByRawValue","decl":{"start":{"line":1086,"column":16},"end":{"line":1086,"column":50}},"loc":{"start":{"line":1086,"column":61},"end":{"line":1106,"column":1}},"line":1086},"152":{"name":"createStringValueObjectByRawValue","decl":{"start":{"line":1107,"column":16},"end":{"line":1107,"column":49}},"loc":{"start":{"line":1107,"column":60},"end":{"line":1114,"column":1}},"line":1107},"153":{"name":"createNumberValueObjectByRawValue","decl":{"start":{"line":1115,"column":16},"end":{"line":1115,"column":49}},"loc":{"start":{"line":1115,"column":74},"end":{"line":1131,"column":1}},"line":1115}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":61}},"type":"binary-expr","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":35}},{"start":{"line":14,"column":39},"end":{"line":14,"column":61}}],"line":14},"1":{"loc":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},{"start":{},"end":{}}],"line":36},"2":{"loc":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},{"start":{},"end":{}}],"line":39},"3":{"loc":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},{"start":{},"end":{}}],"line":45},"4":{"loc":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},{"start":{},"end":{}}],"line":51},"5":{"loc":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},{"start":{},"end":{}}],"line":69},"6":{"loc":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},{"start":{},"end":{}}],"line":72},"7":{"loc":{"start":{"line":158,"column":4},"end":{"line":161,"column":5}},"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":161,"column":5}},{"start":{},"end":{}}],"line":158},"8":{"loc":{"start":{"line":159,"column":27},"end":{"line":159,"column":77}},"type":"binary-expr","locations":[{"start":{"line":159,"column":27},"end":{"line":159,"column":45}},{"start":{"line":159,"column":49},"end":{"line":159,"column":77}}],"line":159},"9":{"loc":{"start":{"line":162,"column":26},"end":{"line":162,"column":78}},"type":"binary-expr","locations":[{"start":{"line":162,"column":26},"end":{"line":162,"column":45}},{"start":{"line":162,"column":49},"end":{"line":162,"column":78}}],"line":162},"10":{"loc":{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},{"start":{},"end":{}}],"line":178},"11":{"loc":{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},{"start":{},"end":{}}],"line":185},"12":{"loc":{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},{"start":{},"end":{}}],"line":206},"13":{"loc":{"start":{"line":209,"column":4},"end":{"line":211,"column":5}},"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":211,"column":5}},{"start":{},"end":{}}],"line":209},"14":{"loc":{"start":{"line":216,"column":4},"end":{"line":221,"column":5}},"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":221,"column":5}},{"start":{"line":218,"column":11},"end":{"line":221,"column":5}}],"line":216},"15":{"loc":{"start":{"line":216,"column":8},"end":{"line":216,"column":62}},"type":"binary-expr","locations":[{"start":{"line":216,"column":8},"end":{"line":216,"column":33}},{"start":{"line":216,"column":37},"end":{"line":216,"column":62}}],"line":216},"16":{"loc":{"start":{"line":218,"column":11},"end":{"line":221,"column":5}},"type":"if","locations":[{"start":{"line":218,"column":11},"end":{"line":221,"column":5}},{"start":{},"end":{}}],"line":218},"17":{"loc":{"start":{"line":219,"column":53},"end":{"line":219,"column":66}},"type":"cond-expr","locations":[{"start":{"line":219,"column":61},"end":{"line":219,"column":62}},{"start":{"line":219,"column":65},"end":{"line":219,"column":66}}],"line":219},"18":{"loc":{"start":{"line":225,"column":4},"end":{"line":234,"column":5}},"type":"switch","locations":[{"start":{"line":226,"column":6},"end":{"line":226,"column":37}},{"start":{"line":227,"column":6},"end":{"line":228,"column":20}},{"start":{"line":229,"column":6},"end":{"line":229,"column":31}},{"start":{"line":230,"column":6},"end":{"line":230,"column":34}},{"start":{"line":231,"column":6},"end":{"line":231,"column":43}},{"start":{"line":232,"column":6},"end":{"line":233,"column":21}}],"line":225},"19":{"loc":{"start":{"line":245,"column":4},"end":{"line":247,"column":5}},"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":247,"column":5}},{"start":{},"end":{}}],"line":245},"20":{"loc":{"start":{"line":328,"column":23},"end":{"line":328,"column":35}},"type":"default-arg","locations":[{"start":{"line":328,"column":33},"end":{"line":328,"column":35}}],"line":328},"21":{"loc":{"start":{"line":330,"column":4},"end":{"line":332,"column":5}},"type":"if","locations":[{"start":{"line":330,"column":4},"end":{"line":332,"column":5}},{"start":{},"end":{}}],"line":330},"22":{"loc":{"start":{"line":355,"column":4},"end":{"line":357,"column":5}},"type":"if","locations":[{"start":{"line":355,"column":4},"end":{"line":357,"column":5}},{"start":{},"end":{}}],"line":355},"23":{"loc":{"start":{"line":359,"column":4},"end":{"line":361,"column":5}},"type":"if","locations":[{"start":{"line":359,"column":4},"end":{"line":361,"column":5}},{"start":{},"end":{}}],"line":359},"24":{"loc":{"start":{"line":370,"column":4},"end":{"line":376,"column":5}},"type":"if","locations":[{"start":{"line":370,"column":4},"end":{"line":376,"column":5}},{"start":{},"end":{}}],"line":370},"25":{"loc":{"start":{"line":372,"column":6},"end":{"line":374,"column":7}},"type":"if","locations":[{"start":{"line":372,"column":6},"end":{"line":374,"column":7}},{"start":{},"end":{}}],"line":372},"26":{"loc":{"start":{"line":378,"column":4},"end":{"line":380,"column":5}},"type":"if","locations":[{"start":{"line":378,"column":4},"end":{"line":380,"column":5}},{"start":{},"end":{}}],"line":378},"27":{"loc":{"start":{"line":386,"column":4},"end":{"line":388,"column":5}},"type":"if","locations":[{"start":{"line":386,"column":4},"end":{"line":388,"column":5}},{"start":{},"end":{}}],"line":386},"28":{"loc":{"start":{"line":390,"column":4},"end":{"line":392,"column":5}},"type":"if","locations":[{"start":{"line":390,"column":4},"end":{"line":392,"column":5}},{"start":{},"end":{}}],"line":390},"29":{"loc":{"start":{"line":398,"column":4},"end":{"line":404,"column":5}},"type":"if","locations":[{"start":{"line":398,"column":4},"end":{"line":404,"column":5}},{"start":{},"end":{}}],"line":398},"30":{"loc":{"start":{"line":400,"column":6},"end":{"line":402,"column":7}},"type":"if","locations":[{"start":{"line":400,"column":6},"end":{"line":402,"column":7}},{"start":{},"end":{}}],"line":400},"31":{"loc":{"start":{"line":406,"column":4},"end":{"line":408,"column":5}},"type":"if","locations":[{"start":{"line":406,"column":4},"end":{"line":408,"column":5}},{"start":{},"end":{}}],"line":406},"32":{"loc":{"start":{"line":414,"column":4},"end":{"line":416,"column":5}},"type":"if","locations":[{"start":{"line":414,"column":4},"end":{"line":416,"column":5}},{"start":{},"end":{}}],"line":414},"33":{"loc":{"start":{"line":419,"column":4},"end":{"line":421,"column":5}},"type":"if","locations":[{"start":{"line":419,"column":4},"end":{"line":421,"column":5}},{"start":{},"end":{}}],"line":419},"34":{"loc":{"start":{"line":422,"column":4},"end":{"line":424,"column":5}},"type":"if","locations":[{"start":{"line":422,"column":4},"end":{"line":424,"column":5}},{"start":{},"end":{}}],"line":422},"35":{"loc":{"start":{"line":425,"column":4},"end":{"line":440,"column":5}},"type":"if","locations":[{"start":{"line":425,"column":4},"end":{"line":440,"column":5}},{"start":{},"end":{}}],"line":425},"36":{"loc":{"start":{"line":426,"column":6},"end":{"line":428,"column":7}},"type":"if","locations":[{"start":{"line":426,"column":6},"end":{"line":428,"column":7}},{"start":{},"end":{}}],"line":426},"37":{"loc":{"start":{"line":429,"column":6},"end":{"line":431,"column":7}},"type":"if","locations":[{"start":{"line":429,"column":6},"end":{"line":431,"column":7}},{"start":{},"end":{}}],"line":429},"38":{"loc":{"start":{"line":429,"column":10},"end":{"line":429,"column":67}},"type":"binary-expr","locations":[{"start":{"line":429,"column":10},"end":{"line":429,"column":40}},{"start":{"line":429,"column":44},"end":{"line":429,"column":67}}],"line":429},"39":{"loc":{"start":{"line":432,"column":6},"end":{"line":434,"column":7}},"type":"if","locations":[{"start":{"line":432,"column":6},"end":{"line":434,"column":7}},{"start":{},"end":{}}],"line":432},"40":{"loc":{"start":{"line":436,"column":6},"end":{"line":438,"column":7}},"type":"if","locations":[{"start":{"line":436,"column":6},"end":{"line":438,"column":7}},{"start":{},"end":{}}],"line":436},"41":{"loc":{"start":{"line":441,"column":4},"end":{"line":447,"column":5}},"type":"if","locations":[{"start":{"line":441,"column":4},"end":{"line":447,"column":5}},{"start":{},"end":{}}],"line":441},"42":{"loc":{"start":{"line":442,"column":27},"end":{"line":442,"column":40}},"type":"cond-expr","locations":[{"start":{"line":442,"column":35},"end":{"line":442,"column":36}},{"start":{"line":442,"column":39},"end":{"line":442,"column":40}}],"line":442},"43":{"loc":{"start":{"line":443,"column":6},"end":{"line":445,"column":7}},"type":"if","locations":[{"start":{"line":443,"column":6},"end":{"line":445,"column":7}},{"start":{},"end":{}}],"line":443},"44":{"loc":{"start":{"line":451,"column":4},"end":{"line":453,"column":5}},"type":"if","locations":[{"start":{"line":451,"column":4},"end":{"line":453,"column":5}},{"start":{},"end":{}}],"line":451},"45":{"loc":{"start":{"line":457,"column":4},"end":{"line":459,"column":5}},"type":"if","locations":[{"start":{"line":457,"column":4},"end":{"line":459,"column":5}},{"start":{},"end":{}}],"line":457},"46":{"loc":{"start":{"line":463,"column":4},"end":{"line":465,"column":5}},"type":"if","locations":[{"start":{"line":463,"column":4},"end":{"line":465,"column":5}},{"start":{},"end":{}}],"line":463},"47":{"loc":{"start":{"line":471,"column":4},"end":{"line":473,"column":5}},"type":"if","locations":[{"start":{"line":471,"column":4},"end":{"line":473,"column":5}},{"start":{},"end":{}}],"line":471},"48":{"loc":{"start":{"line":471,"column":8},"end":{"line":471,"column":58}},"type":"binary-expr","locations":[{"start":{"line":471,"column":8},"end":{"line":471,"column":34}},{"start":{"line":471,"column":38},"end":{"line":471,"column":58}}],"line":471},"49":{"loc":{"start":{"line":474,"column":4},"end":{"line":476,"column":5}},"type":"if","locations":[{"start":{"line":474,"column":4},"end":{"line":476,"column":5}},{"start":{},"end":{}}],"line":474},"50":{"loc":{"start":{"line":474,"column":8},"end":{"line":474,"column":66}},"type":"binary-expr","locations":[{"start":{"line":474,"column":8},"end":{"line":474,"column":38}},{"start":{"line":474,"column":42},"end":{"line":474,"column":66}}],"line":474},"51":{"loc":{"start":{"line":478,"column":4},"end":{"line":480,"column":5}},"type":"if","locations":[{"start":{"line":478,"column":4},"end":{"line":480,"column":5}},{"start":{},"end":{}}],"line":478},"52":{"loc":{"start":{"line":486,"column":4},"end":{"line":488,"column":5}},"type":"if","locations":[{"start":{"line":486,"column":4},"end":{"line":488,"column":5}},{"start":{},"end":{}}],"line":486},"53":{"loc":{"start":{"line":486,"column":8},"end":{"line":486,"column":58}},"type":"binary-expr","locations":[{"start":{"line":486,"column":8},"end":{"line":486,"column":34}},{"start":{"line":486,"column":38},"end":{"line":486,"column":58}}],"line":486},"54":{"loc":{"start":{"line":489,"column":4},"end":{"line":491,"column":5}},"type":"if","locations":[{"start":{"line":489,"column":4},"end":{"line":491,"column":5}},{"start":{},"end":{}}],"line":489},"55":{"loc":{"start":{"line":489,"column":8},"end":{"line":489,"column":66}},"type":"binary-expr","locations":[{"start":{"line":489,"column":8},"end":{"line":489,"column":38}},{"start":{"line":489,"column":42},"end":{"line":489,"column":66}}],"line":489},"56":{"loc":{"start":{"line":493,"column":4},"end":{"line":495,"column":5}},"type":"if","locations":[{"start":{"line":493,"column":4},"end":{"line":495,"column":5}},{"start":{},"end":{}}],"line":493},"57":{"loc":{"start":{"line":501,"column":4},"end":{"line":503,"column":5}},"type":"if","locations":[{"start":{"line":501,"column":4},"end":{"line":503,"column":5}},{"start":{},"end":{}}],"line":501},"58":{"loc":{"start":{"line":501,"column":8},"end":{"line":501,"column":58}},"type":"binary-expr","locations":[{"start":{"line":501,"column":8},"end":{"line":501,"column":34}},{"start":{"line":501,"column":38},"end":{"line":501,"column":58}}],"line":501},"59":{"loc":{"start":{"line":504,"column":4},"end":{"line":506,"column":5}},"type":"if","locations":[{"start":{"line":504,"column":4},"end":{"line":506,"column":5}},{"start":{},"end":{}}],"line":504},"60":{"loc":{"start":{"line":504,"column":8},"end":{"line":504,"column":66}},"type":"binary-expr","locations":[{"start":{"line":504,"column":8},"end":{"line":504,"column":38}},{"start":{"line":504,"column":42},"end":{"line":504,"column":66}}],"line":504},"61":{"loc":{"start":{"line":508,"column":4},"end":{"line":510,"column":5}},"type":"if","locations":[{"start":{"line":508,"column":4},"end":{"line":510,"column":5}},{"start":{},"end":{}}],"line":508},"62":{"loc":{"start":{"line":516,"column":4},"end":{"line":518,"column":5}},"type":"if","locations":[{"start":{"line":516,"column":4},"end":{"line":518,"column":5}},{"start":{},"end":{}}],"line":516},"63":{"loc":{"start":{"line":516,"column":8},"end":{"line":516,"column":58}},"type":"binary-expr","locations":[{"start":{"line":516,"column":8},"end":{"line":516,"column":34}},{"start":{"line":516,"column":38},"end":{"line":516,"column":58}}],"line":516},"64":{"loc":{"start":{"line":519,"column":4},"end":{"line":521,"column":5}},"type":"if","locations":[{"start":{"line":519,"column":4},"end":{"line":521,"column":5}},{"start":{},"end":{}}],"line":519},"65":{"loc":{"start":{"line":519,"column":8},"end":{"line":519,"column":66}},"type":"binary-expr","locations":[{"start":{"line":519,"column":8},"end":{"line":519,"column":38}},{"start":{"line":519,"column":42},"end":{"line":519,"column":66}}],"line":519},"66":{"loc":{"start":{"line":522,"column":4},"end":{"line":524,"column":5}},"type":"if","locations":[{"start":{"line":522,"column":4},"end":{"line":524,"column":5}},{"start":{},"end":{}}],"line":522},"67":{"loc":{"start":{"line":526,"column":4},"end":{"line":528,"column":5}},"type":"if","locations":[{"start":{"line":526,"column":4},"end":{"line":528,"column":5}},{"start":{},"end":{}}],"line":526},"68":{"loc":{"start":{"line":534,"column":4},"end":{"line":540,"column":5}},"type":"if","locations":[{"start":{"line":534,"column":4},"end":{"line":540,"column":5}},{"start":{"line":536,"column":11},"end":{"line":540,"column":5}}],"line":534},"69":{"loc":{"start":{"line":536,"column":11},"end":{"line":540,"column":5}},"type":"if","locations":[{"start":{"line":536,"column":11},"end":{"line":540,"column":5}},{"start":{"line":538,"column":11},"end":{"line":540,"column":5}}],"line":536},"70":{"loc":{"start":{"line":538,"column":11},"end":{"line":540,"column":5}},"type":"if","locations":[{"start":{"line":538,"column":11},"end":{"line":540,"column":5}},{"start":{},"end":{}}],"line":538},"71":{"loc":{"start":{"line":544,"column":4},"end":{"line":553,"column":5}},"type":"switch","locations":[{"start":{"line":545,"column":6},"end":{"line":545,"column":31}},{"start":{"line":546,"column":6},"end":{"line":546,"column":37}},{"start":{"line":547,"column":6},"end":{"line":548,"column":21}},{"start":{"line":549,"column":6},"end":{"line":549,"column":34}},{"start":{"line":550,"column":6},"end":{"line":550,"column":43}},{"start":{"line":551,"column":6},"end":{"line":552,"column":20}}],"line":544},"72":{"loc":{"start":{"line":556,"column":4},"end":{"line":560,"column":5}},"type":"if","locations":[{"start":{"line":556,"column":4},"end":{"line":560,"column":5}},{"start":{"line":558,"column":11},"end":{"line":560,"column":5}}],"line":556},"73":{"loc":{"start":{"line":556,"column":8},"end":{"line":556,"column":65}},"type":"binary-expr","locations":[{"start":{"line":556,"column":8},"end":{"line":556,"column":38}},{"start":{"line":556,"column":42},"end":{"line":556,"column":65}}],"line":556},"74":{"loc":{"start":{"line":563,"column":4},"end":{"line":576,"column":5}},"type":"switch","locations":[{"start":{"line":564,"column":6},"end":{"line":565,"column":43}},{"start":{"line":566,"column":6},"end":{"line":567,"column":48}},{"start":{"line":568,"column":6},"end":{"line":569,"column":56}},{"start":{"line":570,"column":6},"end":{"line":571,"column":45}},{"start":{"line":572,"column":6},"end":{"line":573,"column":53}},{"start":{"line":574,"column":6},"end":{"line":575,"column":44}}],"line":563},"75":{"loc":{"start":{"line":579,"column":4},"end":{"line":588,"column":5}},"type":"switch","locations":[{"start":{"line":580,"column":6},"end":{"line":580,"column":31}},{"start":{"line":581,"column":6},"end":{"line":581,"column":37}},{"start":{"line":582,"column":6},"end":{"line":583,"column":21}},{"start":{"line":584,"column":6},"end":{"line":584,"column":34}},{"start":{"line":585,"column":6},"end":{"line":585,"column":43}},{"start":{"line":586,"column":6},"end":{"line":587,"column":20}}],"line":579},"76":{"loc":{"start":{"line":591,"column":4},"end":{"line":593,"column":5}},"type":"if","locations":[{"start":{"line":591,"column":4},"end":{"line":593,"column":5}},{"start":{},"end":{}}],"line":591},"77":{"loc":{"start":{"line":594,"column":4},"end":{"line":596,"column":5}},"type":"if","locations":[{"start":{"line":594,"column":4},"end":{"line":596,"column":5}},{"start":{},"end":{}}],"line":594},"78":{"loc":{"start":{"line":599,"column":4},"end":{"line":601,"column":5}},"type":"if","locations":[{"start":{"line":599,"column":4},"end":{"line":601,"column":5}},{"start":{},"end":{}}],"line":599},"79":{"loc":{"start":{"line":602,"column":4},"end":{"line":604,"column":5}},"type":"if","locations":[{"start":{"line":602,"column":4},"end":{"line":604,"column":5}},{"start":{},"end":{}}],"line":602},"80":{"loc":{"start":{"line":606,"column":4},"end":{"line":608,"column":5}},"type":"if","locations":[{"start":{"line":606,"column":4},"end":{"line":608,"column":5}},{"start":{},"end":{}}],"line":606},"81":{"loc":{"start":{"line":609,"column":4},"end":{"line":611,"column":5}},"type":"if","locations":[{"start":{"line":609,"column":4},"end":{"line":611,"column":5}},{"start":{},"end":{}}],"line":609},"82":{"loc":{"start":{"line":609,"column":8},"end":{"line":609,"column":65}},"type":"binary-expr","locations":[{"start":{"line":609,"column":8},"end":{"line":609,"column":38}},{"start":{"line":609,"column":42},"end":{"line":609,"column":65}}],"line":609},"83":{"loc":{"start":{"line":612,"column":4},"end":{"line":620,"column":5}},"type":"if","locations":[{"start":{"line":612,"column":4},"end":{"line":620,"column":5}},{"start":{},"end":{}}],"line":612},"84":{"loc":{"start":{"line":613,"column":6},"end":{"line":615,"column":7}},"type":"if","locations":[{"start":{"line":613,"column":6},"end":{"line":615,"column":7}},{"start":{},"end":{}}],"line":613},"85":{"loc":{"start":{"line":616,"column":6},"end":{"line":618,"column":7}},"type":"if","locations":[{"start":{"line":616,"column":6},"end":{"line":618,"column":7}},{"start":{},"end":{}}],"line":616},"86":{"loc":{"start":{"line":622,"column":4},"end":{"line":624,"column":5}},"type":"if","locations":[{"start":{"line":622,"column":4},"end":{"line":624,"column":5}},{"start":{},"end":{}}],"line":622},"87":{"loc":{"start":{"line":629,"column":4},"end":{"line":631,"column":5}},"type":"if","locations":[{"start":{"line":629,"column":4},"end":{"line":631,"column":5}},{"start":{},"end":{}}],"line":629},"88":{"loc":{"start":{"line":633,"column":4},"end":{"line":635,"column":5}},"type":"if","locations":[{"start":{"line":633,"column":4},"end":{"line":635,"column":5}},{"start":{},"end":{}}],"line":633},"89":{"loc":{"start":{"line":640,"column":4},"end":{"line":642,"column":5}},"type":"if","locations":[{"start":{"line":640,"column":4},"end":{"line":642,"column":5}},{"start":{},"end":{}}],"line":640},"90":{"loc":{"start":{"line":644,"column":4},"end":{"line":646,"column":5}},"type":"if","locations":[{"start":{"line":644,"column":4},"end":{"line":646,"column":5}},{"start":{},"end":{}}],"line":644},"91":{"loc":{"start":{"line":651,"column":4},"end":{"line":653,"column":5}},"type":"if","locations":[{"start":{"line":651,"column":4},"end":{"line":653,"column":5}},{"start":{},"end":{}}],"line":651},"92":{"loc":{"start":{"line":655,"column":4},"end":{"line":657,"column":5}},"type":"if","locations":[{"start":{"line":655,"column":4},"end":{"line":657,"column":5}},{"start":{},"end":{}}],"line":655},"93":{"loc":{"start":{"line":662,"column":4},"end":{"line":664,"column":5}},"type":"if","locations":[{"start":{"line":662,"column":4},"end":{"line":664,"column":5}},{"start":{},"end":{}}],"line":662},"94":{"loc":{"start":{"line":666,"column":4},"end":{"line":668,"column":5}},"type":"if","locations":[{"start":{"line":666,"column":4},"end":{"line":668,"column":5}},{"start":{},"end":{}}],"line":666},"95":{"loc":{"start":{"line":673,"column":4},"end":{"line":675,"column":5}},"type":"if","locations":[{"start":{"line":673,"column":4},"end":{"line":675,"column":5}},{"start":{},"end":{}}],"line":673},"96":{"loc":{"start":{"line":677,"column":4},"end":{"line":679,"column":5}},"type":"if","locations":[{"start":{"line":677,"column":4},"end":{"line":679,"column":5}},{"start":{},"end":{}}],"line":677},"97":{"loc":{"start":{"line":684,"column":4},"end":{"line":686,"column":5}},"type":"if","locations":[{"start":{"line":684,"column":4},"end":{"line":686,"column":5}},{"start":{},"end":{}}],"line":684},"98":{"loc":{"start":{"line":688,"column":4},"end":{"line":690,"column":5}},"type":"if","locations":[{"start":{"line":688,"column":4},"end":{"line":690,"column":5}},{"start":{},"end":{}}],"line":688},"99":{"loc":{"start":{"line":695,"column":4},"end":{"line":697,"column":5}},"type":"if","locations":[{"start":{"line":695,"column":4},"end":{"line":697,"column":5}},{"start":{},"end":{}}],"line":695},"100":{"loc":{"start":{"line":699,"column":4},"end":{"line":701,"column":5}},"type":"if","locations":[{"start":{"line":699,"column":4},"end":{"line":701,"column":5}},{"start":{},"end":{}}],"line":699},"101":{"loc":{"start":{"line":706,"column":4},"end":{"line":708,"column":5}},"type":"if","locations":[{"start":{"line":706,"column":4},"end":{"line":708,"column":5}},{"start":{},"end":{}}],"line":706},"102":{"loc":{"start":{"line":710,"column":4},"end":{"line":712,"column":5}},"type":"if","locations":[{"start":{"line":710,"column":4},"end":{"line":712,"column":5}},{"start":{},"end":{}}],"line":710},"103":{"loc":{"start":{"line":717,"column":4},"end":{"line":719,"column":5}},"type":"if","locations":[{"start":{"line":717,"column":4},"end":{"line":719,"column":5}},{"start":{},"end":{}}],"line":717},"104":{"loc":{"start":{"line":721,"column":4},"end":{"line":723,"column":5}},"type":"if","locations":[{"start":{"line":721,"column":4},"end":{"line":723,"column":5}},{"start":{},"end":{}}],"line":721},"105":{"loc":{"start":{"line":728,"column":4},"end":{"line":730,"column":5}},"type":"if","locations":[{"start":{"line":728,"column":4},"end":{"line":730,"column":5}},{"start":{},"end":{}}],"line":728},"106":{"loc":{"start":{"line":732,"column":4},"end":{"line":734,"column":5}},"type":"if","locations":[{"start":{"line":732,"column":4},"end":{"line":734,"column":5}},{"start":{},"end":{}}],"line":732},"107":{"loc":{"start":{"line":739,"column":4},"end":{"line":741,"column":5}},"type":"if","locations":[{"start":{"line":739,"column":4},"end":{"line":741,"column":5}},{"start":{},"end":{}}],"line":739},"108":{"loc":{"start":{"line":743,"column":4},"end":{"line":745,"column":5}},"type":"if","locations":[{"start":{"line":743,"column":4},"end":{"line":745,"column":5}},{"start":{},"end":{}}],"line":743},"109":{"loc":{"start":{"line":750,"column":4},"end":{"line":752,"column":5}},"type":"if","locations":[{"start":{"line":750,"column":4},"end":{"line":752,"column":5}},{"start":{},"end":{}}],"line":750},"110":{"loc":{"start":{"line":754,"column":4},"end":{"line":756,"column":5}},"type":"if","locations":[{"start":{"line":754,"column":4},"end":{"line":756,"column":5}},{"start":{},"end":{}}],"line":754},"111":{"loc":{"start":{"line":761,"column":4},"end":{"line":763,"column":5}},"type":"if","locations":[{"start":{"line":761,"column":4},"end":{"line":763,"column":5}},{"start":{},"end":{}}],"line":761},"112":{"loc":{"start":{"line":765,"column":4},"end":{"line":767,"column":5}},"type":"if","locations":[{"start":{"line":765,"column":4},"end":{"line":767,"column":5}},{"start":{},"end":{}}],"line":765},"113":{"loc":{"start":{"line":771,"column":4},"end":{"line":773,"column":5}},"type":"if","locations":[{"start":{"line":771,"column":4},"end":{"line":773,"column":5}},{"start":{},"end":{}}],"line":771},"114":{"loc":{"start":{"line":776,"column":4},"end":{"line":778,"column":5}},"type":"if","locations":[{"start":{"line":776,"column":4},"end":{"line":778,"column":5}},{"start":{},"end":{}}],"line":776},"115":{"loc":{"start":{"line":779,"column":4},"end":{"line":791,"column":5}},"type":"if","locations":[{"start":{"line":779,"column":4},"end":{"line":791,"column":5}},{"start":{},"end":{}}],"line":779},"116":{"loc":{"start":{"line":780,"column":6},"end":{"line":782,"column":7}},"type":"if","locations":[{"start":{"line":780,"column":6},"end":{"line":782,"column":7}},{"start":{},"end":{}}],"line":780},"117":{"loc":{"start":{"line":780,"column":10},"end":{"line":780,"column":67}},"type":"binary-expr","locations":[{"start":{"line":780,"column":10},"end":{"line":780,"column":40}},{"start":{"line":780,"column":44},"end":{"line":780,"column":67}}],"line":780},"118":{"loc":{"start":{"line":783,"column":6},"end":{"line":785,"column":7}},"type":"if","locations":[{"start":{"line":783,"column":6},"end":{"line":785,"column":7}},{"start":{},"end":{}}],"line":783},"119":{"loc":{"start":{"line":783,"column":10},"end":{"line":783,"column":43}},"type":"binary-expr","locations":[{"start":{"line":783,"column":10},"end":{"line":783,"column":28}},{"start":{"line":783,"column":32},"end":{"line":783,"column":43}}],"line":783},"120":{"loc":{"start":{"line":787,"column":6},"end":{"line":789,"column":7}},"type":"if","locations":[{"start":{"line":787,"column":6},"end":{"line":789,"column":7}},{"start":{},"end":{}}],"line":787},"121":{"loc":{"start":{"line":792,"column":4},"end":{"line":794,"column":5}},"type":"if","locations":[{"start":{"line":792,"column":4},"end":{"line":794,"column":5}},{"start":{},"end":{}}],"line":792},"122":{"loc":{"start":{"line":793,"column":63},"end":{"line":793,"column":76}},"type":"cond-expr","locations":[{"start":{"line":793,"column":71},"end":{"line":793,"column":72}},{"start":{"line":793,"column":75},"end":{"line":793,"column":76}}],"line":793},"123":{"loc":{"start":{"line":799,"column":4},"end":{"line":801,"column":5}},"type":"if","locations":[{"start":{"line":799,"column":4},"end":{"line":801,"column":5}},{"start":{},"end":{}}],"line":799},"124":{"loc":{"start":{"line":803,"column":4},"end":{"line":805,"column":5}},"type":"if","locations":[{"start":{"line":803,"column":4},"end":{"line":805,"column":5}},{"start":{},"end":{}}],"line":803},"125":{"loc":{"start":{"line":810,"column":4},"end":{"line":812,"column":5}},"type":"if","locations":[{"start":{"line":810,"column":4},"end":{"line":812,"column":5}},{"start":{},"end":{}}],"line":810},"126":{"loc":{"start":{"line":810,"column":8},"end":{"line":810,"column":61}},"type":"binary-expr","locations":[{"start":{"line":810,"column":8},"end":{"line":810,"column":40}},{"start":{"line":810,"column":44},"end":{"line":810,"column":61}}],"line":810},"127":{"loc":{"start":{"line":813,"column":4},"end":{"line":815,"column":5}},"type":"if","locations":[{"start":{"line":813,"column":4},"end":{"line":815,"column":5}},{"start":{},"end":{}}],"line":813},"128":{"loc":{"start":{"line":817,"column":4},"end":{"line":819,"column":5}},"type":"if","locations":[{"start":{"line":817,"column":4},"end":{"line":819,"column":5}},{"start":{},"end":{}}],"line":817},"129":{"loc":{"start":{"line":824,"column":4},"end":{"line":826,"column":5}},"type":"if","locations":[{"start":{"line":824,"column":4},"end":{"line":826,"column":5}},{"start":{},"end":{}}],"line":824},"130":{"loc":{"start":{"line":824,"column":8},"end":{"line":824,"column":61}},"type":"binary-expr","locations":[{"start":{"line":824,"column":8},"end":{"line":824,"column":40}},{"start":{"line":824,"column":44},"end":{"line":824,"column":61}}],"line":824},"131":{"loc":{"start":{"line":827,"column":4},"end":{"line":829,"column":5}},"type":"if","locations":[{"start":{"line":827,"column":4},"end":{"line":829,"column":5}},{"start":{},"end":{}}],"line":827},"132":{"loc":{"start":{"line":831,"column":4},"end":{"line":833,"column":5}},"type":"if","locations":[{"start":{"line":831,"column":4},"end":{"line":833,"column":5}},{"start":{},"end":{}}],"line":831},"133":{"loc":{"start":{"line":838,"column":4},"end":{"line":840,"column":5}},"type":"if","locations":[{"start":{"line":838,"column":4},"end":{"line":840,"column":5}},{"start":{},"end":{}}],"line":838},"134":{"loc":{"start":{"line":842,"column":4},"end":{"line":844,"column":5}},"type":"if","locations":[{"start":{"line":842,"column":4},"end":{"line":844,"column":5}},{"start":{},"end":{}}],"line":842},"135":{"loc":{"start":{"line":849,"column":4},"end":{"line":851,"column":5}},"type":"if","locations":[{"start":{"line":849,"column":4},"end":{"line":851,"column":5}},{"start":{},"end":{}}],"line":849},"136":{"loc":{"start":{"line":853,"column":4},"end":{"line":855,"column":5}},"type":"if","locations":[{"start":{"line":853,"column":4},"end":{"line":855,"column":5}},{"start":{},"end":{}}],"line":853},"137":{"loc":{"start":{"line":859,"column":4},"end":{"line":861,"column":5}},"type":"if","locations":[{"start":{"line":859,"column":4},"end":{"line":861,"column":5}},{"start":{},"end":{}}],"line":859},"138":{"loc":{"start":{"line":864,"column":4},"end":{"line":866,"column":5}},"type":"if","locations":[{"start":{"line":864,"column":4},"end":{"line":866,"column":5}},{"start":{},"end":{}}],"line":864},"139":{"loc":{"start":{"line":867,"column":4},"end":{"line":876,"column":5}},"type":"if","locations":[{"start":{"line":867,"column":4},"end":{"line":876,"column":5}},{"start":{},"end":{}}],"line":867},"140":{"loc":{"start":{"line":868,"column":6},"end":{"line":870,"column":7}},"type":"if","locations":[{"start":{"line":868,"column":6},"end":{"line":870,"column":7}},{"start":{},"end":{}}],"line":868},"141":{"loc":{"start":{"line":868,"column":10},"end":{"line":868,"column":67}},"type":"binary-expr","locations":[{"start":{"line":868,"column":10},"end":{"line":868,"column":40}},{"start":{"line":868,"column":44},"end":{"line":868,"column":67}}],"line":868},"142":{"loc":{"start":{"line":871,"column":21},"end":{"line":871,"column":106}},"type":"cond-expr","locations":[{"start":{"line":871,"column":40},"end":{"line":871,"column":77}},{"start":{"line":871,"column":80},"end":{"line":871,"column":106}}],"line":871},"143":{"loc":{"start":{"line":872,"column":6},"end":{"line":874,"column":7}},"type":"if","locations":[{"start":{"line":872,"column":6},"end":{"line":874,"column":7}},{"start":{},"end":{}}],"line":872},"144":{"loc":{"start":{"line":877,"column":4},"end":{"line":879,"column":5}},"type":"if","locations":[{"start":{"line":877,"column":4},"end":{"line":879,"column":5}},{"start":{},"end":{}}],"line":877},"145":{"loc":{"start":{"line":878,"column":58},"end":{"line":878,"column":71}},"type":"cond-expr","locations":[{"start":{"line":878,"column":66},"end":{"line":878,"column":67}},{"start":{"line":878,"column":70},"end":{"line":878,"column":71}}],"line":878},"146":{"loc":{"start":{"line":883,"column":4},"end":{"line":885,"column":5}},"type":"if","locations":[{"start":{"line":883,"column":4},"end":{"line":885,"column":5}},{"start":{},"end":{}}],"line":883},"147":{"loc":{"start":{"line":888,"column":4},"end":{"line":890,"column":5}},"type":"if","locations":[{"start":{"line":888,"column":4},"end":{"line":890,"column":5}},{"start":{},"end":{}}],"line":888},"148":{"loc":{"start":{"line":891,"column":4},"end":{"line":900,"column":5}},"type":"if","locations":[{"start":{"line":891,"column":4},"end":{"line":900,"column":5}},{"start":{},"end":{}}],"line":891},"149":{"loc":{"start":{"line":892,"column":6},"end":{"line":894,"column":7}},"type":"if","locations":[{"start":{"line":892,"column":6},"end":{"line":894,"column":7}},{"start":{},"end":{}}],"line":892},"150":{"loc":{"start":{"line":892,"column":10},"end":{"line":892,"column":67}},"type":"binary-expr","locations":[{"start":{"line":892,"column":10},"end":{"line":892,"column":40}},{"start":{"line":892,"column":44},"end":{"line":892,"column":67}}],"line":892},"151":{"loc":{"start":{"line":895,"column":21},"end":{"line":895,"column":106}},"type":"cond-expr","locations":[{"start":{"line":895,"column":40},"end":{"line":895,"column":77}},{"start":{"line":895,"column":80},"end":{"line":895,"column":106}}],"line":895},"152":{"loc":{"start":{"line":896,"column":6},"end":{"line":898,"column":7}},"type":"if","locations":[{"start":{"line":896,"column":6},"end":{"line":898,"column":7}},{"start":{},"end":{}}],"line":896},"153":{"loc":{"start":{"line":901,"column":4},"end":{"line":903,"column":5}},"type":"if","locations":[{"start":{"line":901,"column":4},"end":{"line":903,"column":5}},{"start":{},"end":{}}],"line":901},"154":{"loc":{"start":{"line":902,"column":58},"end":{"line":902,"column":71}},"type":"cond-expr","locations":[{"start":{"line":902,"column":66},"end":{"line":902,"column":67}},{"start":{"line":902,"column":70},"end":{"line":902,"column":71}}],"line":902},"155":{"loc":{"start":{"line":907,"column":4},"end":{"line":909,"column":5}},"type":"if","locations":[{"start":{"line":907,"column":4},"end":{"line":909,"column":5}},{"start":{},"end":{}}],"line":907},"156":{"loc":{"start":{"line":912,"column":4},"end":{"line":914,"column":5}},"type":"if","locations":[{"start":{"line":912,"column":4},"end":{"line":914,"column":5}},{"start":{},"end":{}}],"line":912},"157":{"loc":{"start":{"line":915,"column":4},"end":{"line":924,"column":5}},"type":"if","locations":[{"start":{"line":915,"column":4},"end":{"line":924,"column":5}},{"start":{},"end":{}}],"line":915},"158":{"loc":{"start":{"line":916,"column":6},"end":{"line":918,"column":7}},"type":"if","locations":[{"start":{"line":916,"column":6},"end":{"line":918,"column":7}},{"start":{},"end":{}}],"line":916},"159":{"loc":{"start":{"line":916,"column":10},"end":{"line":916,"column":67}},"type":"binary-expr","locations":[{"start":{"line":916,"column":10},"end":{"line":916,"column":40}},{"start":{"line":916,"column":44},"end":{"line":916,"column":67}}],"line":916},"160":{"loc":{"start":{"line":919,"column":21},"end":{"line":919,"column":104}},"type":"cond-expr","locations":[{"start":{"line":919,"column":40},"end":{"line":919,"column":76}},{"start":{"line":919,"column":79},"end":{"line":919,"column":104}}],"line":919},"161":{"loc":{"start":{"line":920,"column":6},"end":{"line":922,"column":7}},"type":"if","locations":[{"start":{"line":920,"column":6},"end":{"line":922,"column":7}},{"start":{},"end":{}}],"line":920},"162":{"loc":{"start":{"line":925,"column":4},"end":{"line":927,"column":5}},"type":"if","locations":[{"start":{"line":925,"column":4},"end":{"line":927,"column":5}},{"start":{},"end":{}}],"line":925},"163":{"loc":{"start":{"line":926,"column":57},"end":{"line":926,"column":70}},"type":"cond-expr","locations":[{"start":{"line":926,"column":65},"end":{"line":926,"column":66}},{"start":{"line":926,"column":69},"end":{"line":926,"column":70}}],"line":926},"164":{"loc":{"start":{"line":938,"column":4},"end":{"line":957,"column":5}},"type":"switch","locations":[{"start":{"line":939,"column":6},"end":{"line":941,"column":14}},{"start":{"line":942,"column":6},"end":{"line":944,"column":14}},{"start":{"line":945,"column":6},"end":{"line":947,"column":14}},{"start":{"line":948,"column":6},"end":{"line":950,"column":14}},{"start":{"line":951,"column":6},"end":{"line":953,"column":14}},{"start":{"line":954,"column":6},"end":{"line":956,"column":14}}],"line":938},"165":{"loc":{"start":{"line":967,"column":4},"end":{"line":969,"column":5}},"type":"if","locations":[{"start":{"line":967,"column":4},"end":{"line":969,"column":5}},{"start":{},"end":{}}],"line":967},"166":{"loc":{"start":{"line":985,"column":4},"end":{"line":987,"column":5}},"type":"if","locations":[{"start":{"line":985,"column":4},"end":{"line":987,"column":5}},{"start":{},"end":{}}],"line":985},"167":{"loc":{"start":{"line":991,"column":4},"end":{"line":993,"column":5}},"type":"if","locations":[{"start":{"line":991,"column":4},"end":{"line":993,"column":5}},{"start":{},"end":{}}],"line":991},"168":{"loc":{"start":{"line":1009,"column":4},"end":{"line":1011,"column":5}},"type":"if","locations":[{"start":{"line":1009,"column":4},"end":{"line":1011,"column":5}},{"start":{},"end":{}}],"line":1009},"169":{"loc":{"start":{"line":1014,"column":29},"end":{"line":1014,"column":52}},"type":"default-arg","locations":[{"start":{"line":1014,"column":47},"end":{"line":1014,"column":52}}],"line":1014},"170":{"loc":{"start":{"line":1017,"column":4},"end":{"line":1031,"column":5}},"type":"if","locations":[{"start":{"line":1017,"column":4},"end":{"line":1031,"column":5}},{"start":{"line":1027,"column":11},"end":{"line":1031,"column":5}}],"line":1017},"171":{"loc":{"start":{"line":1019,"column":6},"end":{"line":1022,"column":7}},"type":"if","locations":[{"start":{"line":1019,"column":6},"end":{"line":1022,"column":7}},{"start":{},"end":{}}],"line":1019},"172":{"loc":{"start":{"line":1023,"column":6},"end":{"line":1025,"column":7}},"type":"if","locations":[{"start":{"line":1023,"column":6},"end":{"line":1025,"column":7}},{"start":{},"end":{}}],"line":1023},"173":{"loc":{"start":{"line":1027,"column":11},"end":{"line":1031,"column":5}},"type":"if","locations":[{"start":{"line":1027,"column":11},"end":{"line":1031,"column":5}},{"start":{"line":1029,"column":11},"end":{"line":1031,"column":5}}],"line":1027},"174":{"loc":{"start":{"line":1029,"column":11},"end":{"line":1031,"column":5}},"type":"if","locations":[{"start":{"line":1029,"column":11},"end":{"line":1031,"column":5}},{"start":{},"end":{}}],"line":1029},"175":{"loc":{"start":{"line":1035,"column":4},"end":{"line":1048,"column":5}},"type":"switch","locations":[{"start":{"line":1036,"column":6},"end":{"line":1037,"column":38}},{"start":{"line":1038,"column":6},"end":{"line":1039,"column":36}},{"start":{"line":1040,"column":6},"end":{"line":1041,"column":37}},{"start":{"line":1042,"column":6},"end":{"line":1043,"column":36}},{"start":{"line":1044,"column":6},"end":{"line":1045,"column":37}},{"start":{"line":1046,"column":6},"end":{"line":1047,"column":38}}],"line":1035},"176":{"loc":{"start":{"line":1051,"column":4},"end":{"line":1060,"column":5}},"type":"switch","locations":[{"start":{"line":1052,"column":6},"end":{"line":1052,"column":34}},{"start":{"line":1053,"column":6},"end":{"line":1053,"column":37}},{"start":{"line":1054,"column":6},"end":{"line":1055,"column":20}},{"start":{"line":1056,"column":6},"end":{"line":1056,"column":31}},{"start":{"line":1057,"column":6},"end":{"line":1057,"column":34}},{"start":{"line":1058,"column":6},"end":{"line":1059,"column":21}}],"line":1051},"177":{"loc":{"start":{"line":1063,"column":4},"end":{"line":1072,"column":5}},"type":"switch","locations":[{"start":{"line":1064,"column":6},"end":{"line":1064,"column":31}},{"start":{"line":1065,"column":6},"end":{"line":1065,"column":37}},{"start":{"line":1066,"column":6},"end":{"line":1067,"column":21}},{"start":{"line":1068,"column":6},"end":{"line":1068,"column":34}},{"start":{"line":1069,"column":6},"end":{"line":1069,"column":43}},{"start":{"line":1070,"column":6},"end":{"line":1071,"column":20}}],"line":1063},"178":{"loc":{"start":{"line":1087,"column":2},"end":{"line":1089,"column":3}},"type":"if","locations":[{"start":{"line":1087,"column":2},"end":{"line":1089,"column":3}},{"start":{},"end":{}}],"line":1087},"179":{"loc":{"start":{"line":1091,"column":2},"end":{"line":1104,"column":3}},"type":"if","locations":[{"start":{"line":1091,"column":2},"end":{"line":1104,"column":3}},{"start":{"line":1098,"column":9},"end":{"line":1104,"column":3}}],"line":1091},"180":{"loc":{"start":{"line":1093,"column":4},"end":{"line":1097,"column":5}},"type":"if","locations":[{"start":{"line":1093,"column":4},"end":{"line":1097,"column":5}},{"start":{"line":1095,"column":11},"end":{"line":1097,"column":5}}],"line":1093},"181":{"loc":{"start":{"line":1095,"column":11},"end":{"line":1097,"column":5}},"type":"if","locations":[{"start":{"line":1095,"column":11},"end":{"line":1097,"column":5}},{"start":{},"end":{}}],"line":1095},"182":{"loc":{"start":{"line":1099,"column":4},"end":{"line":1103,"column":5}},"type":"if","locations":[{"start":{"line":1099,"column":4},"end":{"line":1103,"column":5}},{"start":{"line":1101,"column":11},"end":{"line":1103,"column":5}}],"line":1099},"183":{"loc":{"start":{"line":1109,"column":2},"end":{"line":1112,"column":3}},"type":"if","locations":[{"start":{"line":1109,"column":2},"end":{"line":1112,"column":3}},{"start":{},"end":{}}],"line":1109},"184":{"loc":{"start":{"line":1109,"column":6},"end":{"line":1109,"column":71}},"type":"binary-expr","locations":[{"start":{"line":1109,"column":6},"end":{"line":1109,"column":29}},{"start":{"line":1109,"column":33},"end":{"line":1109,"column":71}}],"line":1109},"185":{"loc":{"start":{"line":1115,"column":60},"end":{"line":1115,"column":72}},"type":"default-arg","locations":[{"start":{"line":1115,"column":70},"end":{"line":1115,"column":72}}],"line":1115},"186":{"loc":{"start":{"line":1116,"column":2},"end":{"line":1129,"column":3}},"type":"if","locations":[{"start":{"line":1116,"column":2},"end":{"line":1129,"column":3}},{"start":{"line":1122,"column":9},"end":{"line":1129,"column":3}}],"line":1116},"187":{"loc":{"start":{"line":1118,"column":4},"end":{"line":1120,"column":5}},"type":"if","locations":[{"start":{"line":1118,"column":4},"end":{"line":1120,"column":5}},{"start":{},"end":{}}],"line":1118},"188":{"loc":{"start":{"line":1122,"column":9},"end":{"line":1129,"column":3}},"type":"if","locations":[{"start":{"line":1122,"column":9},"end":{"line":1129,"column":3}},{"start":{"line":1127,"column":9},"end":{"line":1129,"column":3}}],"line":1122},"189":{"loc":{"start":{"line":1123,"column":4},"end":{"line":1125,"column":5}},"type":"if","locations":[{"start":{"line":1123,"column":4},"end":{"line":1125,"column":5}},{"start":{},"end":{}}],"line":1123},"190":{"loc":{"start":{"line":1127,"column":9},"end":{"line":1129,"column":3}},"type":"if","locations":[{"start":{"line":1127,"column":9},"end":{"line":1129,"column":3}},{"start":{},"end":{}}],"line":1127}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":2,"54":3,"55":2,"56":2,"57":1,"58":1,"59":2,"60":2,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":65,"125":65,"126":65,"127":1,"128":65,"129":65,"130":65,"131":82,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":1,"515":1,"516":46,"517":46,"518":39,"519":7,"520":7,"521":7,"522":7,"523":7,"524":71,"525":70,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":1,"586":1,"587":0,"588":0,"589":1,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0},"f":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":3,"41":2,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":65,"83":65,"84":82,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":46,"134":7,"135":71,"136":70,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":1,"153":0},"b":{"0":[1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[2,1],"8":[2,1],"9":[1,1],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0,0,0],"19":[0,0],"20":[64],"21":[1,64],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0,0,0,0,0],"72":[0,0],"73":[0,0],"74":[0,0,0,0,0,0],"75":[0,0,0,0,0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0,0,0,0,0],"165":[39,7],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0,0,0,0,0],"176":[0,0,0,0,0,0],"177":[0,0,0,0,0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,1],"184":[1,0],"185":[0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/primitive-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isRealNum } from '@univerjs/core';\nimport { FormulaAstLRU } from '../../basics/cache-lru';\nimport { reverseCompareOperator } from '../../basics/calculate';\nimport { BooleanValue, ConcatenateType } from '../../basics/common';\nimport { ErrorType } from '../../basics/error-type';\nimport { compareToken, operatorToken } from '../../basics/token';\nimport { compareWithWildcard, isWildcard } from '../utils/compare';\nimport { ceil, divide, equals, floor, greaterThan, greaterThanOrEquals, lessThan, lessThanOrEquals, minus, mod, multiply, plus, pow, round, sqrt } from '../utils/math-kit';\nimport { comparePatternPriority } from '../utils/numfmt-kit';\nimport { BaseValueObject, ErrorValueObject } from './base-value-object';\n\nexport type PrimitiveValueType = string | boolean | number | null;\n\nexport type FormulaFunctionValueType = PrimitiveValueType | PrimitiveValueType[][] | BaseValueObject;\nexport type FormulaFunctionResultValueType = PrimitiveValueType | PrimitiveValueType[][];\n\nexport class NullValueObject extends BaseValueObject {\n    private static _instance: NullValueObject;\n\n    static create() {\n        this._instance = this._instance || new NullValueObject(0);\n        return this._instance;\n    }\n\n    override isNull(): boolean {\n        return true;\n    }\n\n    override plus(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).plus(valueObject);\n    }\n\n    override minus(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).minus(valueObject);\n    }\n\n    override multiply(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).multiply(valueObject);\n    }\n\n    override divided(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).divided(valueObject);\n    }\n\n    override mod(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).mod(valueObject);\n    }\n\n    override compare(valueObject: BaseValueObject, operator: compareToken): BaseValueObject {\n        if (valueObject.isString()) {\n            return StringValueObject.create('').compare(valueObject, operator);\n        }\n        if (valueObject.isBoolean()) {\n            return BooleanValueObject.create(false).compare(valueObject, operator);\n        }\n        return NumberValueObject.create(0).compare(valueObject, operator);\n    }\n\n    override concatenateFront(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.concatenateBack(StringValueObject.create(''));\n        }\n        return StringValueObject.create(this.concatenate(valueObject.getValue(), ConcatenateType.FRONT));\n    }\n\n    override concatenateBack(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.concatenateFront(StringValueObject.create(''));\n        }\n        return StringValueObject.create(this.concatenate(valueObject.getValue(), ConcatenateType.BACK));\n    }\n\n    override plusBy(value: string | number | boolean): BaseValueObject {\n        return NumberValueObject.create(0).plusBy(value);\n    }\n\n    override minusBy(value: string | number | boolean): BaseValueObject {\n        return NumberValueObject.create(0).minusBy(value);\n    }\n\n    override multiplyBy(value: string | number | boolean): BaseValueObject {\n        return NumberValueObject.create(0).multiplyBy(value);\n    }\n\n    override dividedBy(value: string | number | boolean): BaseValueObject {\n        return NumberValueObject.create(0).dividedBy(value);\n    }\n\n    override compareBy(value: string | number | boolean, operator: compareToken): BaseValueObject {\n        if (typeof value === 'string') {\n            return StringValueObject.create('').compareBy(value, operator);\n        }\n        if (typeof value === 'boolean') {\n            return BooleanValueObject.create(false).compareBy(value, operator);\n        }\n        return NumberValueObject.create(0).compareBy(value, operator);\n    }\n\n    override pow(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).pow(valueObject);\n    }\n\n    override sqrt(): BaseValueObject {\n        return NumberValueObject.create(0).sqrt();\n    }\n\n    override cbrt(): BaseValueObject {\n        return NumberValueObject.create(0).cbrt();\n    }\n\n    override cos(): BaseValueObject {\n        return NumberValueObject.create(0).cos();\n    }\n\n    override cosh(): BaseValueObject {\n        return NumberValueObject.create(0).cosh();\n    }\n\n    override acos(): BaseValueObject {\n        return NumberValueObject.create(0).acos();\n    }\n\n    override acosh(): BaseValueObject {\n        return NumberValueObject.create(0).acosh();\n    }\n\n    override sin(): BaseValueObject {\n        return NumberValueObject.create(0).sin();\n    }\n\n    override sinh(): BaseValueObject {\n        return NumberValueObject.create(0).sinh();\n    }\n\n    override asin(): BaseValueObject {\n        return NumberValueObject.create(0).asin();\n    }\n\n    override asinh(): BaseValueObject {\n        return NumberValueObject.create(0).asinh();\n    }\n\n    override tan(): BaseValueObject {\n        return NumberValueObject.create(0).tan();\n    }\n\n    override tanh(): BaseValueObject {\n        return NumberValueObject.create(0).tanh();\n    }\n\n    override atan(): BaseValueObject {\n        return NumberValueObject.create(0).atan();\n    }\n\n    override atan2(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).atan2(valueObject);\n    }\n\n    override atanh(): BaseValueObject {\n        return NumberValueObject.create(0).atanh();\n    }\n\n    override log(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.NUM);\n    }\n\n    override log10(): BaseValueObject {\n        return ErrorValueObject.create(ErrorType.NUM);\n    }\n\n    override exp(): BaseValueObject {\n        return NumberValueObject.create(0).exp();\n    }\n\n    override abs(): BaseValueObject {\n        return NumberValueObject.create(0).abs();\n    }\n\n    override round(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).round(valueObject);\n    }\n\n    override floor(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).floor(valueObject);\n    }\n\n    override ceil(valueObject: BaseValueObject): BaseValueObject {\n        return NumberValueObject.create(0).ceil(valueObject);\n    }\n\n    override convertToNumberObjectValue() {\n        return NumberValueObject.create(0);\n    }\n\n    override convertToBooleanObjectValue() {\n        return BooleanValueObject.create(false);\n    }\n}\n\nexport class BooleanValueObject extends BaseValueObject {\n    private _value: boolean = false;\n\n    private static _instanceTrue: BooleanValueObject;\n\n    private static _instanceFalse: BooleanValueObject;\n\n    static create(value: boolean) {\n        if (value) {\n            this._instanceTrue = this._instanceTrue || new BooleanValueObject(true);\n            return this._instanceTrue;\n        }\n        this._instanceFalse = this._instanceFalse || new BooleanValueObject(false);\n        return this._instanceFalse;\n    }\n\n    constructor(rawValue: boolean) {\n        super(rawValue);\n\n        this._value = rawValue;\n    }\n\n    override getValue() {\n        return this._value;\n    }\n\n    override isBoolean() {\n        return true;\n    }\n\n    override getNegative(): BaseValueObject {\n        const currentValue = this.getValue();\n        let result = 0;\n        if (currentValue) {\n            result = 1;\n        }\n        return NumberValueObject.create(-result);\n    }\n\n    override getReciprocal(): BaseValueObject {\n        const currentValue = this.getValue();\n        if (currentValue) {\n            return NumberValueObject.create(1);\n        }\n        return ErrorValueObject.create(ErrorType.DIV_BY_ZERO);\n    }\n\n    override plus(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().plus(valueObject);\n    }\n\n    override minus(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().minus(valueObject);\n    }\n\n    override multiply(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().multiply(valueObject);\n    }\n\n    override divided(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().divided(valueObject);\n    }\n\n    override mod(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().mod(valueObject);\n    }\n\n    override compare(valueObject: BaseValueObject, operator: compareToken): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.compare(this, reverseCompareOperator(operator));\n        }\n\n        if (valueObject.isNull()) {\n            return this._convertToNumber().compare(valueObject, operator);\n        }\n        return this.compareBy(valueObject.getValue(), operator);\n    }\n\n    override compareBy(value: string | number | boolean, operator: compareToken): BaseValueObject {\n        let result = false;\n        // FALSE > 0 and FALSE > \"Univer\" get TRUE\n        if (typeof value === 'string' || typeof value === 'number') {\n            result = this._compareString(operator);\n        } else if (typeof value === 'boolean') {\n            const booleanNumber = NumberValueObject.create(value ? 1 : 0);\n            return this._convertToNumber().compare(booleanNumber, operator);\n        }\n\n        return BooleanValueObject.create(result);\n    }\n\n    private _compareString(operator: compareToken): boolean {\n        switch (operator) {\n            case compareToken.GREATER_THAN:\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                return true;\n            case compareToken.EQUALS:\n            case compareToken.LESS_THAN:\n            case compareToken.LESS_THAN_OR_EQUAL:\n            case compareToken.NOT_EQUAL:\n                return false;\n        }\n    }\n\n    override concatenateFront(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().concatenateFront(valueObject);\n    }\n\n    override concatenateBack(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().concatenateBack(valueObject);\n    }\n\n    private _convertToNumber() {\n        const currentValue = this.getValue();\n        let result = 0;\n        if (currentValue) {\n            result = 1;\n        }\n        return NumberValueObject.create(result);\n    }\n\n    override pow(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().pow(valueObject);\n    }\n\n    override sqrt(): BaseValueObject {\n        return this._convertToNumber().sqrt();\n    }\n\n    override cbrt(): BaseValueObject {\n        return this._convertToNumber().cbrt();\n    }\n\n    override cos(): BaseValueObject {\n        return this._convertToNumber().cos();\n    }\n\n    override cosh(): BaseValueObject {\n        return this._convertToNumber().cosh();\n    }\n\n    override acos(): BaseValueObject {\n        return this._convertToNumber().acos();\n    }\n\n    override acosh(): BaseValueObject {\n        return this._convertToNumber().acosh();\n    }\n\n    override sin(): BaseValueObject {\n        return this._convertToNumber().sin();\n    }\n\n    override sinh(): BaseValueObject {\n        return this._convertToNumber().sinh();\n    }\n\n    override asin(): BaseValueObject {\n        return this._convertToNumber().asin();\n    }\n\n    override asinh(): BaseValueObject {\n        return this._convertToNumber().asinh();\n    }\n\n    override tan(): BaseValueObject {\n        return this._convertToNumber().tan();\n    }\n\n    override tanh(): BaseValueObject {\n        return this._convertToNumber().tanh();\n    }\n\n    override atan(): BaseValueObject {\n        return this._convertToNumber().atan();\n    }\n\n    override atan2(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().atan2(valueObject);\n    }\n\n    override atanh(): BaseValueObject {\n        return this._convertToNumber().atanh();\n    }\n\n    override log(): BaseValueObject {\n        return this._convertToNumber().log();\n    }\n\n    override log10(): BaseValueObject {\n        return this._convertToNumber().log10();\n    }\n\n    override exp(): BaseValueObject {\n        return this._convertToNumber().exp();\n    }\n\n    override abs(): BaseValueObject {\n        return this._convertToNumber().abs();\n    }\n\n    override round(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().round(valueObject);\n    }\n\n    override floor(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().floor(valueObject);\n    }\n\n    override ceil(valueObject: BaseValueObject): BaseValueObject {\n        return this._convertToNumber().ceil(valueObject);\n    }\n\n    override convertToNumberObjectValue() {\n        return createNumberValueObjectByRawValue(this.getValue());\n    }\n\n    override convertToBooleanObjectValue() {\n        return this;\n    }\n}\n\nexport class NumberValueObject extends BaseValueObject {\n    private _value: number = 0;\n\n    static create(value: number, pattern: string = '') {\n        const instance = new NumberValueObject(value);\n        if (pattern) {\n            instance.setPattern(pattern);\n        }\n\n        return instance;\n    }\n\n    constructor(rawValue: number) {\n        super(rawValue);\n\n        this._value = Number(rawValue);\n    }\n\n    override getValue() {\n        return this._value;\n    }\n\n    override setValue(value: number) {\n        this._value = value;\n    }\n\n    override isNumber() {\n        return true;\n    }\n\n    override getNegative(): BaseValueObject {\n        return NumberValueObject.create(0).minus(this);\n    }\n\n    override getReciprocal(): BaseValueObject {\n        return NumberValueObject.create(1).divided(this);\n    }\n\n    override plus(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.plus(this);\n        }\n\n        let object = this.plusBy(valueObject.getValue());\n\n        // = 1 + #NAME? gets #NAME?, = 1 + #VALUE! gets #VALUE!\n        if (object.isError()) {\n            return object;\n        }\n\n        // Set number format\n        const pattern = comparePatternPriority(this.getPattern(), valueObject.getPattern(), operatorToken.PLUS);\n        object = NumberValueObject.create(Number(object.getValue()), pattern);\n\n        return object;\n    }\n\n    equalZero() {\n        return this._value === 0;\n    }\n\n    override minus(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            const o = valueObject.getNegative();\n            if (o.isError()) {\n                return o;\n            }\n            return (o as BaseValueObject).plus(this);\n        }\n        let object = this.minusBy(valueObject.getValue());\n\n        // = 1 - #NAME? gets #NAME?, = 1 - #VALUE! gets #VALUE!\n        if (object.isError()) {\n            return object;\n        }\n\n        // Set number format\n        const pattern = comparePatternPriority(this.getPattern(), valueObject.getPattern(), operatorToken.MINUS);\n        object = NumberValueObject.create(Number(object.getValue()), pattern);\n\n        return object;\n    }\n\n    override multiply(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.multiply(this);\n        }\n        let object = this.multiplyBy(valueObject.getValue());\n\n        // = 1 * #NAME? gets #NAME?, = 1 * #VALUE! gets #VALUE!\n        if (object.isError()) {\n            return object;\n        }\n\n        // Set number format\n        const pattern = comparePatternPriority(this.getPattern(), valueObject.getPattern(), operatorToken.MULTIPLY);\n        object = NumberValueObject.create(Number(object.getValue()), pattern);\n\n        return object;\n    }\n\n    override divided(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            const o = valueObject.getReciprocal();\n            if (o.isError()) {\n                return o;\n            }\n            return (o as BaseValueObject).multiply(this);\n        }\n        let object = this.dividedBy(valueObject.getValue());\n\n        // = 1 / #NAME? gets #NAME?, = 1 / #VALUE! gets #VALUE!\n        if (object.isError()) {\n            return object;\n        }\n\n        // Set number format\n        const pattern = comparePatternPriority(this.getPattern(), valueObject.getPattern(), operatorToken.DIVIDED);\n        object = NumberValueObject.create(Number(object.getValue()), pattern);\n\n        return object;\n    }\n\n    override mod(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.modInverse(this);\n        }\n\n        const currentValue = this.getValue();\n        const value = valueObject.getValue();\n\n        if (valueObject.isNull()) {\n            return ErrorValueObject.create(ErrorType.DIV_BY_ZERO);\n        }\n\n        if (typeof value === 'string') {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n        if (typeof value === 'number') {\n            if (value === 0) {\n                return ErrorValueObject.create(ErrorType.DIV_BY_ZERO);\n            }\n\n            if (!Number.isFinite(currentValue) || !Number.isFinite(value)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            // Parameters in MOD caused an out of range error. Namely, the error occurs when the following is true: (divisor * 1125900000000) is less than or equal to dividend.\n            if (Math.abs(value) * 1125900000000 <= Math.abs(currentValue)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            const result = mod(currentValue, value);\n\n            if (!Number.isFinite(result)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            return NumberValueObject.create(result);\n        }\n        if (typeof value === 'boolean') {\n            const booleanValue = value ? 1 : 0;\n\n            if (booleanValue === 0) {\n                return ErrorValueObject.create(ErrorType.DIV_BY_ZERO);\n            }\n\n            return NumberValueObject.create(mod(currentValue, booleanValue));\n        }\n\n        return this;\n    }\n\n    override concatenateFront(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.concatenateBack(this);\n        }\n        return StringValueObject.create(this.concatenate(valueObject.getValue(), ConcatenateType.FRONT));\n    }\n\n    override concatenateBack(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.concatenateFront(this);\n        }\n        return StringValueObject.create(this.concatenate(valueObject.getValue(), ConcatenateType.BACK));\n    }\n\n    override compare(valueObject: BaseValueObject, operator: compareToken): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.compare(this, reverseCompareOperator(operator));\n        }\n        return this.compareBy(valueObject.getValue(), operator);\n    }\n\n    override plusBy(value: string | number | boolean): BaseValueObject {\n        const currentValue = +this.getValue();\n        const _value = +value;\n\n        if (Number.isNaN(currentValue) || Number.isNaN(_value)) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        if (!Number.isFinite(currentValue) || !Number.isFinite(_value)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = plus(currentValue, _value);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override minusBy(value: string | number | boolean): BaseValueObject {\n        const currentValue = +this.getValue();\n        const _value = +value;\n\n        if (Number.isNaN(currentValue) || Number.isNaN(_value)) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        if (!Number.isFinite(currentValue) || !Number.isFinite(_value)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = minus(currentValue, _value);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override multiplyBy(value: string | number | boolean): BaseValueObject {\n        const currentValue = +this.getValue();\n        const _value = +value;\n\n        if (Number.isNaN(currentValue) || Number.isNaN(_value)) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        if (!Number.isFinite(currentValue) || !Number.isFinite(_value)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = multiply(currentValue, _value);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override dividedBy(value: string | number | boolean): BaseValueObject {\n        const currentValue = +this.getValue();\n        const _value = +value;\n\n        if (Number.isNaN(currentValue) || Number.isNaN(_value)) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        if (!Number.isFinite(currentValue) || !Number.isFinite(_value)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        if (_value === 0) {\n            return ErrorValueObject.create(ErrorType.DIV_BY_ZERO);\n        }\n\n        const result = divide(currentValue, _value);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override compareBy(value: string | number | boolean, operator: compareToken): BaseValueObject {\n        const currentValue = this.getValue();\n        let result = false;\n\n        if (typeof value === 'string') {\n            result = this._compareString(operator);\n        } else if (typeof value === 'number') {\n            result = this._compareNumber(currentValue, value, operator);\n        } else if (typeof value === 'boolean') {\n            result = this._compareBoolean(operator);\n        }\n\n        return BooleanValueObject.create(result);\n    }\n\n    private _compareString(operator: compareToken): boolean {\n        switch (operator) {\n            case compareToken.EQUALS:\n            case compareToken.GREATER_THAN:\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                return false;\n            case compareToken.LESS_THAN:\n            case compareToken.LESS_THAN_OR_EQUAL:\n            case compareToken.NOT_EQUAL:\n                return true;\n        }\n    }\n\n    private _compareNumber(currentValue: number, value: number, operator: compareToken): boolean {\n        if (!Number.isFinite(currentValue) || !Number.isFinite(value)) {\n            return this._compareInfinity(currentValue, value, operator);\n        } else {\n            return this._compareFiniteNumber(currentValue, value, operator);\n        }\n    }\n\n    private _compareFiniteNumber(currentValue: number, value: number, operator: compareToken): boolean {\n        switch (operator) {\n            case compareToken.EQUALS:\n                return equals(currentValue, value);\n            case compareToken.GREATER_THAN:\n                return greaterThan(currentValue, value);\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                return greaterThanOrEquals(currentValue, value);\n            case compareToken.LESS_THAN:\n                return lessThan(currentValue, value);\n            case compareToken.LESS_THAN_OR_EQUAL:\n                return lessThanOrEquals(currentValue, value);\n            case compareToken.NOT_EQUAL:\n                return !equals(currentValue, value);\n        }\n    }\n\n    private _compareBoolean(operator: compareToken): boolean {\n        switch (operator) {\n            case compareToken.EQUALS:\n            case compareToken.GREATER_THAN:\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                return false;\n            case compareToken.LESS_THAN:\n            case compareToken.LESS_THAN_OR_EQUAL:\n            case compareToken.NOT_EQUAL:\n                return true;\n        }\n    }\n\n    override pow(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.powInverse(this);\n        }\n\n        if (this.isError()) {\n            return this;\n        }\n\n        const currentValue = this.getValue();\n\n        let _valueObject = valueObject;\n\n        if (valueObject.isString()) {\n            _valueObject = valueObject.convertToNumberObjectValue();\n        }\n\n        if (_valueObject.isError()) {\n            return _valueObject;\n        }\n\n        const value = +_valueObject.getValue();\n\n        if (Number.isNaN(value)) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        if (!Number.isFinite(currentValue) || !Number.isFinite(value)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        if (currentValue === 0) {\n            if (value < 0) {\n                return ErrorValueObject.create(ErrorType.DIV_BY_ZERO);\n            }\n\n            if (value === 0) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            return NumberValueObject.create(0);\n        }\n\n        const result = pow(currentValue, value);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override sqrt(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = sqrt(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override cbrt(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.cbrt(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override cos(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.cos(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override cosh(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.cosh(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override acos(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.acos(currentValue);\n\n        if (Number.isNaN(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override acosh(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.acosh(currentValue);\n\n        if (Number.isNaN(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override sin(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.sin(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override sinh(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.sinh(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override asin(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.asin(currentValue);\n\n        if (Number.isNaN(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override asinh(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.asinh(currentValue);\n\n        if (Number.isNaN(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override tan(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.tan(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override tanh(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.tanh(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override atan(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.atan(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override atan2(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.atan2Inverse(this);\n        }\n\n        const currentValue = this.getValue();\n        const value = valueObject.getValue();\n\n        if (typeof value === 'string') {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n        if (typeof value === 'number') {\n            if (!Number.isFinite(currentValue) || !Number.isFinite(value)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            // ATAN2(y, x) calculates the angle of the point (x, y) relative to the positive x-axis. When x and y are both 0, the point is actually the origin itself, and there is no concept of the angle \"starting from\" the origin to the origin.\n            if (currentValue === 0 && value === 0) {\n                return ErrorValueObject.create(ErrorType.DIV_BY_ZERO);\n            }\n\n            const result = Math.atan2(currentValue, value);\n\n            if (!Number.isFinite(result)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            return NumberValueObject.create(result);\n        }\n        if (typeof value === 'boolean') {\n            return NumberValueObject.create(Math.atan2(currentValue, value ? 1 : 0));\n        }\n\n        return this;\n    }\n\n    override atanh(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.atanh(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override log(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (typeof currentValue === 'number' && currentValue <= 0) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.log(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override log10(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (typeof currentValue === 'number' && currentValue <= 0) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.log10(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override exp(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.exp(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override abs(): BaseValueObject {\n        const currentValue = this.getValue();\n\n        if (!Number.isFinite(currentValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        const result = Math.abs(currentValue);\n\n        if (!Number.isFinite(result)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return NumberValueObject.create(result);\n    }\n\n    override round(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.roundInverse(this);\n        }\n\n        const currentValue = this.getValue();\n        const value = valueObject.getValue();\n\n        if (typeof value === 'string') {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n        if (typeof value === 'number') {\n            if (!Number.isFinite(currentValue) || !Number.isFinite(value)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            // for excel negative special handle\n            const result = currentValue < 0 ? -round(Math.abs(currentValue), value) : round(currentValue, value);\n\n            if (!Number.isFinite(result)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            return NumberValueObject.create(result);\n        }\n        if (typeof value === 'boolean') {\n            return NumberValueObject.create(round(currentValue, value ? 1 : 0));\n        }\n\n        return this;\n    }\n\n    override floor(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.floorInverse(this);\n        }\n\n        const currentValue = this.getValue();\n        const value = valueObject.getValue();\n\n        if (typeof value === 'string') {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n        if (typeof value === 'number') {\n            if (!Number.isFinite(currentValue) || !Number.isFinite(value)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            // for excel negative special handle\n            const result = currentValue < 0 ? -floor(Math.abs(currentValue), value) : floor(currentValue, value);\n\n            if (!Number.isFinite(result)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            return NumberValueObject.create(result);\n        }\n        if (typeof value === 'boolean') {\n            return NumberValueObject.create(floor(currentValue, value ? 1 : 0));\n        }\n\n        return this;\n    }\n\n    override ceil(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.ceilInverse(this);\n        }\n\n        const currentValue = this.getValue();\n        const value = valueObject.getValue();\n\n        if (typeof value === 'string') {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n        if (typeof value === 'number') {\n            if (!Number.isFinite(currentValue) || !Number.isFinite(value)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            // for excel negative special handle\n            const result = currentValue < 0 ? -ceil(Math.abs(currentValue), value) : ceil(currentValue, value);\n\n            if (!Number.isFinite(result)) {\n                return ErrorValueObject.create(ErrorType.NUM);\n            }\n\n            return NumberValueObject.create(result);\n        }\n        if (typeof value === 'boolean') {\n            return NumberValueObject.create(ceil(currentValue, value ? 1 : 0));\n        }\n\n        return this;\n    }\n\n    override convertToNumberObjectValue() {\n        return this;\n    }\n\n    override convertToBooleanObjectValue() {\n        return createBooleanValueObjectByRawValue(true);\n    }\n\n    private _compareInfinity(currentValue: number, value: number, operator: compareToken) {\n        let result = false;\n        switch (operator) {\n            case compareToken.EQUALS:\n                result = currentValue === value;\n                break;\n            case compareToken.GREATER_THAN:\n                result = currentValue > value;\n                break;\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                result = currentValue >= value;\n                break;\n            case compareToken.LESS_THAN:\n                result = currentValue < value;\n                break;\n            case compareToken.LESS_THAN_OR_EQUAL:\n                result = currentValue <= value;\n                break;\n            case compareToken.NOT_EQUAL:\n                result = currentValue !== value;\n                break;\n        }\n\n        return result;\n    }\n}\n\nconst STRING_CACHE_LRU_COUNT = 100000;\n\nexport const StringValueObjectCache = new FormulaAstLRU<StringValueObject>(STRING_CACHE_LRU_COUNT);\nexport class StringValueObject extends BaseValueObject {\n    private _value: string;\n\n    static create(value: string) {\n        const cached = StringValueObjectCache.get(value);\n        if (cached) {\n            return cached;\n        }\n        const instance = new StringValueObject(value);\n        StringValueObjectCache.set(value, instance);\n        return instance;\n    }\n\n    constructor(rawValue: string) {\n        super(rawValue);\n        this._value = rawValue;\n    }\n\n    override getValue() {\n        return this._value;\n    }\n\n    override isString() {\n        return true;\n    }\n\n    override concatenateFront(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.concatenateBack(this);\n        }\n        return StringValueObject.create(this.concatenate(valueObject.getValue(), ConcatenateType.FRONT));\n    }\n\n    override concatenateBack(valueObject: BaseValueObject): BaseValueObject {\n        if (valueObject.isArray()) {\n            return valueObject.concatenateFront(this);\n        }\n        return StringValueObject.create(this.concatenate(valueObject.getValue(), ConcatenateType.BACK));\n    }\n\n    override plus(valueObject: BaseValueObject): BaseValueObject {\n        return this.convertToNumberObjectValue().plus(valueObject);\n    }\n\n    override minus(valueObject: BaseValueObject): BaseValueObject {\n        return this.convertToNumberObjectValue().minus(valueObject);\n    }\n\n    override multiply(valueObject: BaseValueObject): BaseValueObject {\n        return this.convertToNumberObjectValue().multiply(valueObject);\n    }\n\n    override divided(valueObject: BaseValueObject): BaseValueObject {\n        return this.convertToNumberObjectValue().divided(valueObject);\n    }\n\n    override compare(valueObject: BaseValueObject, operator: compareToken, isCaseSensitive?: boolean): BaseValueObject {\n        if (valueObject.isArray()) {\n            // const o = valueObject.getReciprocal();\n            // if (o.isError()) {\n            //     return o;\n            // }\n            return valueObject.compare(this, reverseCompareOperator(operator), isCaseSensitive);\n        }\n        return this.compareBy(valueObject.getValue(), operator, isCaseSensitive);\n    }\n\n    override compareBy(value: string | number | boolean, operator: compareToken, isCaseSensitive: boolean = false): BaseValueObject {\n        let currentValue = this.getValue();\n        let result = false;\n\n        if (typeof value === 'string') {\n            // Case sensitivity needs to be considered, most functions are case-insensitive, like VLOOKUP/HLOOKUP/XLOOKUP/MATCH/COUNTIF/COUNTIFS/SUMIF/SUMIFS/SEARCH/FIND(in SUBSTITUTE)\n            // A few functions are case-sensitive, like EXACT/FIND/FINDB/REPLACE/REPLACEB/MIDB\n            let _value = value;\n\n            if (!isCaseSensitive) {\n                currentValue = currentValue.toLocaleLowerCase();\n                _value = _value.toLocaleLowerCase();\n            }\n\n            if (isWildcard(_value)) {\n                return this._checkWildcard(_value, operator);\n            }\n\n            result = this._compareString(currentValue, _value, operator);\n        } else if (typeof value === 'number') {\n            result = this._compareNumber(operator);\n        } else if (typeof value === 'boolean') {\n            result = this._compareBoolean(operator);\n        }\n\n        return BooleanValueObject.create(result);\n    }\n\n    private _compareString(currentValue: string, value: string, operator: compareToken): boolean {\n        switch (operator) {\n            case compareToken.EQUALS:\n                return currentValue === value;\n            case compareToken.GREATER_THAN:\n                return currentValue > value;\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                return currentValue >= value;\n            case compareToken.LESS_THAN:\n                return currentValue < value;\n            case compareToken.LESS_THAN_OR_EQUAL:\n                return currentValue <= value;\n            case compareToken.NOT_EQUAL:\n                return currentValue !== value;\n        }\n    }\n\n    private _compareNumber(operator: compareToken): boolean {\n        switch (operator) {\n            case compareToken.NOT_EQUAL:\n            case compareToken.GREATER_THAN:\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                return true;\n            case compareToken.EQUALS:\n            case compareToken.LESS_THAN:\n            case compareToken.LESS_THAN_OR_EQUAL:\n                return false;\n        }\n    }\n\n    private _compareBoolean(operator: compareToken): boolean {\n        switch (operator) {\n            case compareToken.EQUALS:\n            case compareToken.GREATER_THAN:\n            case compareToken.GREATER_THAN_OR_EQUAL:\n                return false;\n            case compareToken.LESS_THAN:\n            case compareToken.LESS_THAN_OR_EQUAL:\n            case compareToken.NOT_EQUAL:\n                return true;\n        }\n    }\n\n    override convertToNumberObjectValue() {\n        return createNumberValueObjectByRawValue(this.getValue());\n    }\n\n    override convertToBooleanObjectValue() {\n        return BooleanValueObject.create(true);\n    }\n\n    private _checkWildcard(value: string, operator: compareToken) {\n        const currentValue = this.getValue().toLocaleLowerCase();\n        const result = compareWithWildcard(currentValue, value, operator);\n\n        return BooleanValueObject.create(result);\n    }\n}\n\nexport function createBooleanValueObjectByRawValue(rawValue: string | number | boolean) {\n    if (typeof rawValue === 'boolean') {\n        return BooleanValueObject.create(rawValue);\n    }\n    let value = false;\n    if (typeof rawValue === 'string') {\n        const rawValueUpper = rawValue.toLocaleUpperCase();\n        if (rawValueUpper === BooleanValue.TRUE) {\n            value = true;\n        } else if (rawValueUpper === BooleanValue.FALSE) {\n            value = false;\n        }\n    } else {\n        if (rawValue === 1) {\n            value = true;\n        } else {\n            value = false;\n        }\n    }\n    return BooleanValueObject.create(value);\n}\n\nexport function createStringValueObjectByRawValue(rawValue: string | number | boolean) {\n    let value = rawValue.toString();\n\n    if (value.charAt(0) === '\"' && value.charAt(value.length - 1) === '\"') {\n        value = value.slice(1, -1);\n        value = value.replace(/\"\"/g, '\"');\n    }\n\n    return StringValueObject.create(value);\n}\n\nexport function createNumberValueObjectByRawValue(rawValue: string | number | boolean, pattern: string = '') {\n    if (typeof rawValue === 'boolean') {\n        let result = 0;\n        if (rawValue) {\n            result = 1;\n        }\n        return NumberValueObject.create(result, pattern);\n    } else if (typeof rawValue === 'number') {\n        if (!Number.isFinite(rawValue)) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n        return NumberValueObject.create(rawValue, pattern);\n    } else if (isRealNum(rawValue)) {\n        return NumberValueObject.create(Number(rawValue), pattern);\n    }\n    return ErrorValueObject.create(ErrorType.VALUE);\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f8368968207c0b7c6d5bfb642a584cf28d05aec3"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/regex.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/regex.ts","statementMap":{"0":{"start":{"line":2,"column":31},"end":{"line":2,"column":65}},"1":{"start":{"line":3,"column":44},"end":{"line":3,"column":71}},"2":{"start":{"line":4,"column":32},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":31},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":28},"end":{"line":6,"column":41}},"5":{"start":{"line":7,"column":21},"end":{"line":7,"column":32}},"6":{"start":{"line":8,"column":18},"end":{"line":8,"column":31}},"7":{"start":{"line":9,"column":42},"end":{"line":9,"column":91}},"8":{"start":{"line":10,"column":41},"end":{"line":10,"column":112}},"9":{"start":{"line":11,"column":46},"end":{"line":11,"column":170}},"10":{"start":{"line":12,"column":59},"end":{"line":12,"column":101}},"11":{"start":{"line":13,"column":44},"end":{"line":13,"column":133}},"12":{"start":{"line":14,"column":57},"end":{"line":14,"column":97}},"13":{"start":{"line":15,"column":35},"end":{"line":15,"column":149}},"14":{"start":{"line":16,"column":48},"end":{"line":16,"column":79}},"15":{"start":{"line":17,"column":38},"end":{"line":17,"column":158}},"16":{"start":{"line":18,"column":51},"end":{"line":18,"column":85}},"17":{"start":{"line":19,"column":42},"end":{"line":19,"column":113}},"18":{"start":{"line":20,"column":55},"end":{"line":20,"column":93}},"19":{"start":{"line":21,"column":45},"end":{"line":21,"column":119}},"20":{"start":{"line":22,"column":58},"end":{"line":22,"column":99}},"21":{"start":{"line":23,"column":25},"end":{"line":23,"column":93}},"22":{"start":{"line":24,"column":26},"end":{"line":24,"column":48}},"23":{"start":{"line":25,"column":28},"end":{"line":25,"column":46}},"24":{"start":{"line":26,"column":36},"end":{"line":26,"column":97}},"25":{"start":{"line":27,"column":48},"end":{"line":27,"column":92}},"26":{"start":{"line":28,"column":51},"end":{"line":28,"column":169}},"27":{"start":{"line":29,"column":53},"end":{"line":29,"column":217}},"28":{"start":{"line":30,"column":40},"end":{"line":30,"column":47}},"29":{"start":{"line":31,"column":53},"end":{"line":31,"column":94}},"30":{"start":{"line":32,"column":33},"end":{"line":32,"column":40}},"31":{"start":{"line":33,"column":46},"end":{"line":33,"column":80}},"32":{"start":{"line":35,"column":2},"end":{"line":35,"column":58}},"33":{"start":{"line":36,"column":2},"end":{"line":36,"column":63}},"34":{"start":{"line":39,"column":2},"end":{"line":39,"column":60}},"35":{"start":{"line":40,"column":2},"end":{"line":40,"column":65}},"36":{"start":{"line":43,"column":2},"end":{"line":43,"column":49}},"37":{"start":{"line":44,"column":2},"end":{"line":44,"column":54}},"38":{"start":{"line":47,"column":2},"end":{"line":47,"column":52}},"39":{"start":{"line":48,"column":2},"end":{"line":48,"column":57}},"40":{"start":{"line":51,"column":2},"end":{"line":51,"column":56}},"41":{"start":{"line":52,"column":2},"end":{"line":52,"column":61}},"42":{"start":{"line":55,"column":2},"end":{"line":55,"column":59}},"43":{"start":{"line":56,"column":2},"end":{"line":56,"column":64}},"44":{"start":{"line":59,"column":2},"end":{"line":59,"column":54}},"45":{"start":{"line":60,"column":2},"end":{"line":60,"column":59}},"46":{"start":{"line":63,"column":2},"end":{"line":63,"column":47}},"47":{"start":{"line":64,"column":2},"end":{"line":64,"column":52}},"48":{"start":{"line":67,"column":2},"end":{"line":67,"column":134}}},"fnMap":{"0":{"name":"regexTestSingeRange","decl":{"start":{"line":34,"column":16},"end":{"line":34,"column":35}},"loc":{"start":{"line":34,"column":43},"end":{"line":37,"column":1}},"line":34},"1":{"name":"regexTestMultipleRange","decl":{"start":{"line":38,"column":16},"end":{"line":38,"column":38}},"loc":{"start":{"line":38,"column":46},"end":{"line":41,"column":1}},"line":38},"2":{"name":"regexTestRow","decl":{"start":{"line":42,"column":16},"end":{"line":42,"column":28}},"loc":{"start":{"line":42,"column":36},"end":{"line":45,"column":1}},"line":42},"3":{"name":"regexTestColumn","decl":{"start":{"line":46,"column":16},"end":{"line":46,"column":31}},"loc":{"start":{"line":46,"column":39},"end":{"line":49,"column":1}},"line":46},"4":{"name":"regexTestSingleRow","decl":{"start":{"line":50,"column":16},"end":{"line":50,"column":34}},"loc":{"start":{"line":50,"column":42},"end":{"line":53,"column":1}},"line":50},"5":{"name":"regexTestSingleColumn","decl":{"start":{"line":54,"column":16},"end":{"line":54,"column":37}},"loc":{"start":{"line":54,"column":45},"end":{"line":57,"column":1}},"line":54},"6":{"name":"regexTestSuperTableColumn","decl":{"start":{"line":58,"column":16},"end":{"line":58,"column":41}},"loc":{"start":{"line":58,"column":49},"end":{"line":61,"column":1}},"line":58},"7":{"name":"regexTestArrayValue","decl":{"start":{"line":62,"column":16},"end":{"line":62,"column":35}},"loc":{"start":{"line":62,"column":43},"end":{"line":65,"column":1}},"line":62},"8":{"name":"isReferenceString","decl":{"start":{"line":66,"column":16},"end":{"line":66,"column":33}},"loc":{"start":{"line":66,"column":45},"end":{"line":68,"column":1}},"line":66}},"branchMap":{"0":{"loc":{"start":{"line":67,"column":9},"end":{"line":67,"column":133}},"type":"binary-expr","locations":[{"start":{"line":67,"column":9},"end":{"line":67,"column":39}},{"start":{"line":67,"column":43},"end":{"line":67,"column":76}},{"start":{"line":67,"column":80},"end":{"line":67,"column":103}},{"start":{"line":67,"column":107},"end":{"line":67,"column":133}}],"line":67}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":1,"48":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0},"b":{"0":[0,0,0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/regex.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { prefixToken, suffixToken } from './token';\n\n// export const UNIT_NAME_REGEX = '\\'?\\\\[((?![\\\\/?:\"<>|*\\\\\\\\]).)*\\\\]';\n// export const UNIT_NAME_REGEX = '\\'?\\\\[((?![\\\\/?:\"<>|*\\\\\\\\]).)*?\\\\]';\n// export const UNIT_NAME_REGEX = '\\\\[((?![\\\\/?:\"<>|*\\\\\\\\]).)*?\\\\]';\n\nexport const UNIT_NAME_REGEX = '\\\\[([^\\\\[\\\\]\\\\/?:\"<>|*\\\\\\\\]+)\\\\]'; // '[Book-1.xlsx]Sheet1'!$A$4 gets [Book-1.xlsx] as unitId\n\nexport const UNIT_NAME_REGEX_PRECOMPILING = new RegExp(UNIT_NAME_REGEX);\n\nexport const SHEET_NAME_REGEX = '((?![\\\\[\\\\]\\\\/?*\\\\\\\\]).)*!';\n\nexport const ABSOLUTE_SYMBOL = '$';\n\nexport const RANGE_SYMBOL = '\\\\s*?:\\\\s*?';\n\n// Column numbers range from A to Z, and row numbers start at 1\nconst COLUMN_REGEX = '[A-Za-z]+';\nconst ROW_REGEX = '[1-9][0-9]*';\n\nexport const UNIT_NAME_SHEET_NAME_REGEX = `'?(${UNIT_NAME_REGEX})?(${SHEET_NAME_REGEX})?'?`;\n\nexport const SIMPLE_SINGLE_RANGE_REGEX = `\\\\${ABSOLUTE_SYMBOL}?${COLUMN_REGEX}\\\\${ABSOLUTE_SYMBOL}?${ROW_REGEX}`;\n\nexport const REFERENCE_MULTIPLE_RANGE_REGEX = `^(${prefixToken.AT})?${UNIT_NAME_SHEET_NAME_REGEX}${SIMPLE_SINGLE_RANGE_REGEX}${RANGE_SYMBOL}${SIMPLE_SINGLE_RANGE_REGEX}$`;\n\nexport const REFERENCE_MULTIPLE_RANGE_REGEX_PRECOMPILING = new RegExp(REFERENCE_MULTIPLE_RANGE_REGEX);\n\nexport const REFERENCE_SINGLE_RANGE_REGEX = `^${UNIT_NAME_SHEET_NAME_REGEX}\\\\s*?${SIMPLE_SINGLE_RANGE_REGEX}(${suffixToken.POUND})?$`;\n\nexport const REFERENCE_SINGLE_RANGE_REGEX_PRECOMPILING = new RegExp(REFERENCE_SINGLE_RANGE_REGEX);\n\nexport const REFERENCE_REGEX_ROW = `^${UNIT_NAME_SHEET_NAME_REGEX}\\\\${ABSOLUTE_SYMBOL}?${ROW_REGEX}${RANGE_SYMBOL}\\\\${ABSOLUTE_SYMBOL}?${ROW_REGEX}$`;\n\nexport const REFERENCE_REGEX_ROW_PRECOMPILING = new RegExp(REFERENCE_REGEX_ROW);\n\nexport const REFERENCE_REGEX_COLUMN = `^${UNIT_NAME_SHEET_NAME_REGEX}\\\\${ABSOLUTE_SYMBOL}?${COLUMN_REGEX}${RANGE_SYMBOL}\\\\${ABSOLUTE_SYMBOL}?${COLUMN_REGEX}$`;\n\nexport const REFERENCE_REGEX_COLUMN_PRECOMPILING = new RegExp(REFERENCE_REGEX_COLUMN);\n\nexport const REFERENCE_REGEX_SINGLE_ROW = `^${UNIT_NAME_SHEET_NAME_REGEX}\\\\s*?\\\\${ABSOLUTE_SYMBOL}?${ROW_REGEX}$`;\n\nexport const REFERENCE_REGEX_SINGLE_ROW_PRECOMPILING = new RegExp(REFERENCE_REGEX_SINGLE_ROW);\n\nexport const REFERENCE_REGEX_SINGLE_COLUMN = `^${UNIT_NAME_SHEET_NAME_REGEX}\\\\s*?\\\\${ABSOLUTE_SYMBOL}?${COLUMN_REGEX}$`;\n\nexport const REFERENCE_REGEX_SINGLE_COLUMN_PRECOMPILING = new RegExp(REFERENCE_REGEX_SINGLE_COLUMN);\n\nconst TABLE_NAME_REGEX = '((?![~!@#$%^&*()_+<>?:,./;’，。、‘：“《》？~！@#￥%……（）【】\\\\[\\\\]\\\\/\\\\\\\\]).)+';\n\nconst TABLE_TITLE_REGEX = '\\\\[#.+\\\\]\\\\s*?,\\\\s*?';\n\nconst TABLE_CONTENT_REGEX = '\\\\[((?<!#).)*\\\\]';\n\nconst TABLE_MULTIPLE_COLUMN_REGEX = `${TABLE_CONTENT_REGEX}${RANGE_SYMBOL}${TABLE_CONTENT_REGEX}`;\n\nexport const REFERENCE_TABLE_ALL_COLUMN_REGEX = `^(${UNIT_NAME_REGEX})?${TABLE_NAME_REGEX}$`;\n\nexport const REFERENCE_TABLE_SINGLE_COLUMN_REGEX = `^(${UNIT_NAME_REGEX})?${TABLE_NAME_REGEX}(${TABLE_CONTENT_REGEX}|\\\\[${TABLE_TITLE_REGEX}${TABLE_CONTENT_REGEX}\\\\])+$`; // =Table1[Column1] | =Table1[[#Title],[Column1]]\n\nexport const REFERENCE_TABLE_MULTIPLE_COLUMN_REGEX = `^(${UNIT_NAME_REGEX})?${TABLE_NAME_REGEX}(\\\\[${TABLE_MULTIPLE_COLUMN_REGEX}\\\\])?$|^${TABLE_NAME_REGEX}(\\\\[${TABLE_TITLE_REGEX}${TABLE_MULTIPLE_COLUMN_REGEX}\\\\])?$`; // =Table1[[#Title],[Column1]:[Column2]] | =Table1[[Column1]:[Column2]]\n\nexport const SUPER_TABLE_COLUMN_REGEX = '[.*?]';\n\nexport const SUPER_TABLE_COLUMN_REGEX_PRECOMPILING = new RegExp(SUPER_TABLE_COLUMN_REGEX, 'g');\n\nexport const ARRAY_VALUE_REGEX = '{.*?}';\n\nexport const ARRAY_VALUE_REGEX_PRECOMPILING = new RegExp(ARRAY_VALUE_REGEX, 'g');\n\nexport function regexTestSingeRange(token: string): boolean {\n    REFERENCE_SINGLE_RANGE_REGEX_PRECOMPILING.lastIndex = 0;\n    return REFERENCE_SINGLE_RANGE_REGEX_PRECOMPILING.test(token);\n}\n\nexport function regexTestMultipleRange(token: string): boolean {\n    REFERENCE_MULTIPLE_RANGE_REGEX_PRECOMPILING.lastIndex = 0;\n    return REFERENCE_MULTIPLE_RANGE_REGEX_PRECOMPILING.test(token);\n}\n\nexport function regexTestRow(token: string): boolean {\n    REFERENCE_REGEX_ROW_PRECOMPILING.lastIndex = 0;\n    return REFERENCE_REGEX_ROW_PRECOMPILING.test(token);\n}\n\nexport function regexTestColumn(token: string): boolean {\n    REFERENCE_REGEX_COLUMN_PRECOMPILING.lastIndex = 0;\n    return REFERENCE_REGEX_COLUMN_PRECOMPILING.test(token);\n}\n\nexport function regexTestSingleRow(token: string): boolean {\n    REFERENCE_REGEX_SINGLE_ROW_PRECOMPILING.lastIndex = 0;\n    return REFERENCE_REGEX_SINGLE_ROW_PRECOMPILING.test(token);\n}\n\nexport function regexTestSingleColumn(token: string): boolean {\n    REFERENCE_REGEX_SINGLE_COLUMN_PRECOMPILING.lastIndex = 0;\n    return REFERENCE_REGEX_SINGLE_COLUMN_PRECOMPILING.test(token);\n}\n\nexport function regexTestSuperTableColumn(token: string): boolean {\n    SUPER_TABLE_COLUMN_REGEX_PRECOMPILING.lastIndex = 0;\n    return SUPER_TABLE_COLUMN_REGEX_PRECOMPILING.test(token);\n}\n\nexport function regexTestArrayValue(token: string): boolean {\n    ARRAY_VALUE_REGEX_PRECOMPILING.lastIndex = 0;\n    return ARRAY_VALUE_REGEX_PRECOMPILING.test(token);\n}\n\nexport function isReferenceString(refString: string) {\n    return (\n        regexTestSingeRange(refString) ||\n        regexTestMultipleRange(refString) ||\n        regexTestRow(refString) ||\n        regexTestColumn(refString)\n    );\n}\n"],"mappings":"AAgBA,SAAS,aAAa,mBAAmB;AAMlC,aAAM,kBAAkB;AAExB,aAAM,+BAA+B,IAAI,OAAO,eAAe;AAE/D,aAAM,mBAAmB;AAEzB,aAAM,kBAAkB;AAExB,aAAM,eAAe;AAG5B,MAAM,eAAe;AACrB,MAAM,YAAY;AAEX,aAAM,6BAA6B,MAAM,eAAe,MAAM,gBAAgB;AAE9E,aAAM,4BAA4B,KAAK,eAAe,IAAI,YAAY,KAAK,eAAe,IAAI,SAAS;AAEvG,aAAM,iCAAiC,KAAK,YAAY,EAAE,KAAK,0BAA0B,GAAG,yBAAyB,GAAG,YAAY,GAAG,yBAAyB;AAEhK,aAAM,8CAA8C,IAAI,OAAO,8BAA8B;AAE7F,aAAM,+BAA+B,IAAI,0BAA0B,QAAQ,yBAAyB,IAAI,YAAY,KAAK;AAEzH,aAAM,4CAA4C,IAAI,OAAO,4BAA4B;AAEzF,aAAM,sBAAsB,IAAI,0BAA0B,KAAK,eAAe,IAAI,SAAS,GAAG,YAAY,KAAK,eAAe,IAAI,SAAS;AAE3I,aAAM,mCAAmC,IAAI,OAAO,mBAAmB;AAEvE,aAAM,yBAAyB,IAAI,0BAA0B,KAAK,eAAe,IAAI,YAAY,GAAG,YAAY,KAAK,eAAe,IAAI,YAAY;AAEpJ,aAAM,sCAAsC,IAAI,OAAO,sBAAsB;AAE7E,aAAM,6BAA6B,IAAI,0BAA0B,UAAU,eAAe,IAAI,SAAS;AAEvG,aAAM,0CAA0C,IAAI,OAAO,0BAA0B;AAErF,aAAM,gCAAgC,IAAI,0BAA0B,UAAU,eAAe,IAAI,YAAY;AAE7G,aAAM,6CAA6C,IAAI,OAAO,6BAA6B;AAElG,MAAM,mBAAmB;AAEzB,MAAM,oBAAoB;AAE1B,MAAM,sBAAsB;AAE5B,MAAM,8BAA8B,GAAG,mBAAmB,GAAG,YAAY,GAAG,mBAAmB;AAExF,aAAM,mCAAmC,KAAK,eAAe,KAAK,gBAAgB;AAElF,aAAM,sCAAsC,KAAK,eAAe,KAAK,gBAAgB,IAAI,mBAAmB,OAAO,iBAAiB,GAAG,mBAAmB;AAE1J,aAAM,wCAAwC,KAAK,eAAe,KAAK,gBAAgB,OAAO,2BAA2B,WAAW,gBAAgB,OAAO,iBAAiB,GAAG,2BAA2B;AAE1M,aAAM,2BAA2B;AAEjC,aAAM,wCAAwC,IAAI,OAAO,0BAA0B,GAAG;AAEtF,aAAM,oBAAoB;AAE1B,aAAM,iCAAiC,IAAI,OAAO,mBAAmB,GAAG;AAExE,gBAAS,oBAAoB,OAAwB;AACxD,4CAA0C,YAAY;AACtD,SAAO,0CAA0C,KAAK,KAAK;AAC/D;AAEO,gBAAS,uBAAuB,OAAwB;AAC3D,8CAA4C,YAAY;AACxD,SAAO,4CAA4C,KAAK,KAAK;AACjE;AAEO,gBAAS,aAAa,OAAwB;AACjD,mCAAiC,YAAY;AAC7C,SAAO,iCAAiC,KAAK,KAAK;AACtD;AAEO,gBAAS,gBAAgB,OAAwB;AACpD,sCAAoC,YAAY;AAChD,SAAO,oCAAoC,KAAK,KAAK;AACzD;AAEO,gBAAS,mBAAmB,OAAwB;AACvD,0CAAwC,YAAY;AACpD,SAAO,wCAAwC,KAAK,KAAK;AAC7D;AAEO,gBAAS,sBAAsB,OAAwB;AAC1D,6CAA2C,YAAY;AACvD,SAAO,2CAA2C,KAAK,KAAK;AAChE;AAEO,gBAAS,0BAA0B,OAAwB;AAC9D,wCAAsC,YAAY;AAClD,SAAO,sCAAsC,KAAK,KAAK;AAC3D;AAEO,gBAAS,oBAAoB,OAAwB;AACxD,iCAA+B,YAAY;AAC3C,SAAO,+BAA+B,KAAK,KAAK;AACpD;AAEO,gBAAS,kBAAkB,WAAmB;AACjD,SACI,oBAAoB,SAAS,KAC7B,uBAAuB,SAAS,KAChC,aAAa,SAAS,KACtB,gBAAgB,SAAS;AAEjC;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dd7593723ab97e958c533cc9df673dd7e0af8263"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/match-token.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/match-token.ts","statementMap":{"0":{"start":{"line":2,"column":36},"end":{"line":8,"column":1}},"1":{"start":{"line":10,"column":2},"end":{"line":10,"column":44}},"2":{"start":{"line":13,"column":2},"end":{"line":17,"column":3}},"3":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"4":{"start":{"line":15,"column":6},"end":{"line":15,"column":18}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":15}},"6":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":56}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":19}},"9":{"start":{"line":27,"column":2},"end":{"line":27,"column":204}},"10":{"start":{"line":29,"column":58},"end":{"line":47,"column":2}},"11":{"start":{"line":49,"column":2},"end":{"line":49,"column":47}},"12":{"start":{"line":51,"column":69},"end":{"line":71,"column":2}},"13":{"start":{"line":73,"column":2},"end":{"line":73,"column":58}}},"fnMap":{"0":{"name":"isFormulaLexerToken","decl":{"start":{"line":9,"column":16},"end":{"line":9,"column":35}},"loc":{"start":{"line":9,"column":41},"end":{"line":11,"column":1}},"line":9},"1":{"name":"includeFormulaLexerToken","decl":{"start":{"line":12,"column":16},"end":{"line":12,"column":40}},"loc":{"start":{"line":12,"column":46},"end":{"line":19,"column":1}},"line":12},"2":{"name":"normalizeSheetName","decl":{"start":{"line":20,"column":16},"end":{"line":20,"column":34}},"loc":{"start":{"line":20,"column":46},"end":{"line":25,"column":1}},"line":20},"3":{"name":"matchRefDrawToken","decl":{"start":{"line":26,"column":16},"end":{"line":26,"column":33}},"loc":{"start":{"line":26,"column":40},"end":{"line":28,"column":1}},"line":26},"4":{"name":"isTokenCannotBeAtEnd","decl":{"start":{"line":48,"column":16},"end":{"line":48,"column":36}},"loc":{"start":{"line":48,"column":44},"end":{"line":50,"column":1}},"line":48},"5":{"name":"isTokenCannotPrecedeSuffixToken","decl":{"start":{"line":72,"column":16},"end":{"line":72,"column":47}},"loc":{"start":{"line":72,"column":55},"end":{"line":74,"column":1}},"line":72}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},{"start":{},"end":{}}],"line":14},"1":{"loc":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},{"start":{},"end":{}}],"line":21},"2":{"loc":{"start":{"line":21,"column":6},"end":{"line":21,"column":69}},"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":26}},{"start":{"line":21,"column":30},"end":{"line":21,"column":69}}],"line":21},"3":{"loc":{"start":{"line":27,"column":9},"end":{"line":27,"column":203}},"type":"binary-expr","locations":[{"start":{"line":27,"column":9},"end":{"line":27,"column":34}},{"start":{"line":27,"column":38},"end":{"line":27,"column":70}},{"start":{"line":27,"column":74},"end":{"line":27,"column":107}},{"start":{"line":27,"column":111},"end":{"line":27,"column":147}},{"start":{"line":27,"column":151},"end":{"line":27,"column":187}},{"start":{"line":27,"column":191},"end":{"line":27,"column":203}}],"line":27}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":1,"13":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0,0,0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/match-token.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { compareToken, matchToken, operatorToken, prefixToken, suffixToken } from './token';\n\nexport const FORMULA_LEXER_TOKENS = [\n    ...Object.values(compareToken),\n    ...Object.values(operatorToken),\n    ...Object.values(matchToken),\n    ...Object.values(suffixToken),\n    ...Object.values(prefixToken),\n];\n\nexport function isFormulaLexerToken(str: string) {\n    return FORMULA_LEXER_TOKENS.includes(str as compareToken);\n}\n\nexport function includeFormulaLexerToken(str: string) {\n    for (const token of FORMULA_LEXER_TOKENS) {\n        if (str.indexOf(token) > -1) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function normalizeSheetName(sheetName: string) {\n    if (sheetName[0] === \"'\" && sheetName[sheetName.length - 1] === \"'\") {\n        return sheetName.substring(1, sheetName.length - 1);\n    }\n    return sheetName;\n}\n\n/**\n * Determine whether the character is a token keyword for the formula engine.\n * @param char\n */\nexport function matchRefDrawToken(char: string) {\n    return (\n        (isFormulaLexerToken(char) &&\n                char !== matchToken.CLOSE_BRACES &&\n                char !== matchToken.CLOSE_BRACKET &&\n                char !== matchToken.SINGLE_QUOTATION &&\n                char !== matchToken.DOUBLE_QUOTATION) ||\n            char === ' '\n    );\n}\n\nexport const TOKEN_CANNOT_BE_AT_END_SET = new Set<string>([\n    operatorToken.PLUS,\n    operatorToken.MINUS,\n    operatorToken.MULTIPLY,\n    operatorToken.DIVIDED,\n    operatorToken.CONCATENATE,\n    operatorToken.POWER,\n    operatorToken.EQUALS,\n    operatorToken.NOT_EQUAL,\n    operatorToken.GREATER_THAN,\n    operatorToken.GREATER_THAN_OR_EQUAL,\n    operatorToken.LESS_THAN,\n    operatorToken.LESS_THAN_OR_EQUAL,\n    matchToken.OPEN_BRACKET,\n    matchToken.COMMA,\n    matchToken.COLON,\n    matchToken.OPEN_BRACES,\n    matchToken.OPEN_SQUARE_BRACKET,\n]);\n\nexport function isTokenCannotBeAtEnd(token: string): boolean {\n    return TOKEN_CANNOT_BE_AT_END_SET.has(token);\n}\n\nexport const TOKEN_CANNOT_PRECEDE_SUFFIX_TOKEN_SET = new Set<string>([\n    operatorToken.PLUS,\n    operatorToken.MINUS,\n    operatorToken.MULTIPLY,\n    operatorToken.DIVIDED,\n    operatorToken.CONCATENATE,\n    operatorToken.POWER,\n    operatorToken.EQUALS,\n    operatorToken.NOT_EQUAL,\n    operatorToken.GREATER_THAN,\n    operatorToken.GREATER_THAN_OR_EQUAL,\n    operatorToken.LESS_THAN,\n    operatorToken.LESS_THAN_OR_EQUAL,\n\n    matchToken.OPEN_BRACKET,\n    matchToken.COMMA,\n    matchToken.COLON,\n    matchToken.OPEN_BRACES,\n    matchToken.OPEN_SQUARE_BRACKET,\n\n    suffixToken.PERCENTAGE,\n    suffixToken.POUND,\n]);\n\nexport function isTokenCannotPrecedeSuffixToken(token: string): boolean {\n    return TOKEN_CANNOT_PRECEDE_SUFFIX_TOKEN_SET.has(token);\n}\n"],"mappings":"AAgBA,SAAS,cAAc,YAAY,eAAe,aAAa,mBAAmB;AAE3E,aAAM,uBAAuB;AAAA,EAChC,GAAG,OAAO,OAAO,YAAY;AAAA,EAC7B,GAAG,OAAO,OAAO,aAAa;AAAA,EAC9B,GAAG,OAAO,OAAO,UAAU;AAAA,EAC3B,GAAG,OAAO,OAAO,WAAW;AAAA,EAC5B,GAAG,OAAO,OAAO,WAAW;AAChC;AAEO,gBAAS,oBAAoB,KAAa;AAC7C,SAAO,qBAAqB,SAAS,GAAmB;AAC5D;AAEO,gBAAS,yBAAyB,KAAa;AAClD,aAAW,SAAS,sBAAsB;AACtC,QAAI,IAAI,QAAQ,KAAK,IAAI,IAAI;AACzB,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,SAAO;AACX;AAEO,gBAAS,mBAAmB,WAAmB;AAClD,MAAI,UAAU,CAAC,MAAM,OAAO,UAAU,UAAU,SAAS,CAAC,MAAM,KAAK;AACjE,WAAO,UAAU,UAAU,GAAG,UAAU,SAAS,CAAC;AAAA,EACtD;AACA,SAAO;AACX;AAMO,gBAAS,kBAAkB,MAAc;AAC5C,SACK,oBAAoB,IAAI,KACjB,SAAS,WAAW,gBACpB,SAAS,WAAW,iBACpB,SAAS,WAAW,oBACpB,SAAS,WAAW,oBACxB,SAAS;AAErB;AAEO,aAAM,6BAA6B,oBAAI,IAAY;AAAA,EACtD,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AACf,CAAC;AAEM,gBAAS,qBAAqB,OAAwB;AACzD,SAAO,2BAA2B,IAAI,KAAK;AAC/C;AAEO,aAAM,wCAAwC,oBAAI,IAAY;AAAA,EACjE,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EACd,cAAc;AAAA,EAEd,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EAEX,YAAY;AAAA,EACZ,YAAY;AAChB,CAAC;AAEM,gBAAS,gCAAgC,OAAwB;AACpE,SAAO,sCAAsC,IAAI,KAAK;AAC1D;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b0888d8b8dfa87fc0ce630099aecf39526199c2c"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/reference.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/reference.ts","statementMap":{"0":{"start":{"line":5,"column":19},"end":{"line":5,"column":28}},"1":{"start":{"line":6,"column":22},"end":{"line":6,"column":34}},"2":{"start":{"line":8,"column":25},"end":{"line":8,"column":51}},"3":{"start":{"line":9,"column":21},"end":{"line":9,"column":49}},"4":{"start":{"line":10,"column":22},"end":{"line":10,"column":50}},"5":{"start":{"line":11,"column":2},"end":{"line":14,"column":3}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":29}},"7":{"start":{"line":13,"column":4},"end":{"line":13,"column":25}},"8":{"start":{"line":15,"column":2},"end":{"line":17,"column":3}},"9":{"start":{"line":16,"column":4},"end":{"line":16,"column":31}},"10":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"11":{"start":{"line":19,"column":4},"end":{"line":19,"column":34}},"12":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":31}},"14":{"start":{"line":24,"column":2},"end":{"line":24,"column":30}},"15":{"start":{"line":27,"column":21},"end":{"line":27,"column":41}},"16":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"17":{"start":{"line":29,"column":4},"end":{"line":29,"column":50}},"18":{"start":{"line":31,"column":19},"end":{"line":31,"column":39}},"19":{"start":{"line":32,"column":2},"end":{"line":37,"column":3}},"20":{"start":{"line":33,"column":4},"end":{"line":36,"column":6}},"21":{"start":{"line":38,"column":2},"end":{"line":38,"column":83}},"22":{"start":{"line":41,"column":26},"end":{"line":41,"column":28}},"23":{"start":{"line":42,"column":29},"end":{"line":42,"column":31}},"24":{"start":{"line":43,"column":2},"end":{"line":50,"column":3}},"25":{"start":{"line":44,"column":4},"end":{"line":44,"column":28}},"26":{"start":{"line":45,"column":9},"end":{"line":50,"column":3}},"27":{"start":{"line":46,"column":4},"end":{"line":46,"column":31}},"28":{"start":{"line":47,"column":9},"end":{"line":50,"column":3}},"29":{"start":{"line":48,"column":4},"end":{"line":48,"column":28}},"30":{"start":{"line":49,"column":4},"end":{"line":49,"column":31}},"31":{"start":{"line":51,"column":2},"end":{"line":54,"column":4}},"32":{"start":{"line":65,"column":6},"end":{"line":65,"column":11}},"33":{"start":{"line":66,"column":16},"end":{"line":66,"column":55}},"34":{"start":{"line":67,"column":14},"end":{"line":67,"column":51}},"35":{"start":{"line":68,"column":2},"end":{"line":72,"column":3}},"36":{"start":{"line":69,"column":22},"end":{"line":69,"column":65}},"37":{"start":{"line":70,"column":20},"end":{"line":70,"column":59}},"38":{"start":{"line":71,"column":4},"end":{"line":71,"column":37}},"39":{"start":{"line":73,"column":2},"end":{"line":77,"column":3}},"40":{"start":{"line":74,"column":22},"end":{"line":74,"column":84}},"41":{"start":{"line":75,"column":20},"end":{"line":75,"column":78}},"42":{"start":{"line":76,"column":4},"end":{"line":76,"column":37}},"43":{"start":{"line":78,"column":19},"end":{"line":78,"column":122}},"44":{"start":{"line":79,"column":17},"end":{"line":79,"column":112}},"45":{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},"46":{"start":{"line":81,"column":4},"end":{"line":81,"column":20}},"47":{"start":{"line":83,"column":2},"end":{"line":83,"column":33}},"48":{"start":{"line":86,"column":2},"end":{"line":86,"column":69}},"49":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"50":{"start":{"line":90,"column":4},"end":{"line":90,"column":94}},"51":{"start":{"line":92,"column":2},"end":{"line":92,"column":58}},"52":{"start":{"line":95,"column":39},"end":{"line":95,"column":52}},"53":{"start":{"line":96,"column":2},"end":{"line":98,"column":3}},"54":{"start":{"line":97,"column":4},"end":{"line":97,"column":67}},"55":{"start":{"line":99,"column":2},"end":{"line":101,"column":3}},"56":{"start":{"line":100,"column":4},"end":{"line":100,"column":53}},"57":{"start":{"line":102,"column":2},"end":{"line":102,"column":31}},"58":{"start":{"line":105,"column":14},"end":{"line":105,"column":66}},"59":{"start":{"line":106,"column":17},"end":{"line":106,"column":67}},"60":{"start":{"line":107,"column":26},"end":{"line":107,"column":69}},"61":{"start":{"line":108,"column":2},"end":{"line":112,"column":4}},"62":{"start":{"line":115,"column":22},"end":{"line":115,"column":66}},"63":{"start":{"line":116,"column":15},"end":{"line":116,"column":17}},"64":{"start":{"line":117,"column":2},"end":{"line":121,"column":3}},"65":{"start":{"line":118,"column":4},"end":{"line":118,"column":35}},"66":{"start":{"line":119,"column":4},"end":{"line":119,"column":66}},"67":{"start":{"line":120,"column":4},"end":{"line":120,"column":68}},"68":{"start":{"line":122,"column":25},"end":{"line":122,"column":47}},"69":{"start":{"line":123,"column":18},"end":{"line":123,"column":20}},"70":{"start":{"line":124,"column":16},"end":{"line":124,"column":18}},"71":{"start":{"line":125,"column":2},"end":{"line":134,"column":3}},"72":{"start":{"line":126,"column":4},"end":{"line":126,"column":55}},"73":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"74":{"start":{"line":128,"column":6},"end":{"line":128,"column":63}},"75":{"start":{"line":130,"column":4},"end":{"line":130,"column":44}},"76":{"start":{"line":131,"column":4},"end":{"line":131,"column":54}},"77":{"start":{"line":133,"column":4},"end":{"line":133,"column":24}},"78":{"start":{"line":135,"column":2},"end":{"line":139,"column":4}},"79":{"start":{"line":142,"column":41},"end":{"line":142,"column":71}},"80":{"start":{"line":143,"column":21},"end":{"line":143,"column":41}},"81":{"start":{"line":144,"column":2},"end":{"line":162,"column":3}},"82":{"start":{"line":145,"column":17},"end":{"line":145,"column":47}},"83":{"start":{"line":146,"column":16},"end":{"line":146,"column":24}},"84":{"start":{"line":147,"column":19},"end":{"line":147,"column":30}},"85":{"start":{"line":148,"column":28},"end":{"line":148,"column":48}},"86":{"start":{"line":149,"column":18},"end":{"line":156,"column":5}},"87":{"start":{"line":157,"column":4},"end":{"line":161,"column":6}},"88":{"start":{"line":163,"column":25},"end":{"line":163,"column":57}},"89":{"start":{"line":164,"column":23},"end":{"line":164,"column":56}},"90":{"start":{"line":165,"column":20},"end":{"line":165,"column":57}},"91":{"start":{"line":166,"column":18},"end":{"line":166,"column":53}},"92":{"start":{"line":167,"column":19},"end":{"line":167,"column":76}},"93":{"start":{"line":168,"column":22},"end":{"line":168,"column":91}},"94":{"start":{"line":169,"column":17},"end":{"line":169,"column":74}},"95":{"start":{"line":170,"column":20},"end":{"line":170,"column":89}},"96":{"start":{"line":171,"column":18},"end":{"line":171,"column":35}},"97":{"start":{"line":172,"column":2},"end":{"line":176,"column":3}},"98":{"start":{"line":173,"column":4},"end":{"line":173,"column":34}},"99":{"start":{"line":174,"column":9},"end":{"line":176,"column":3}},"100":{"start":{"line":175,"column":4},"end":{"line":175,"column":31}},"101":{"start":{"line":177,"column":2},"end":{"line":189,"column":4}},"102":{"start":{"line":191,"column":30},"end":{"line":191,"column":39}},"103":{"start":{"line":193,"column":28},"end":{"line":193,"column":61}},"104":{"start":{"line":194,"column":2},"end":{"line":196,"column":3}},"105":{"start":{"line":195,"column":4},"end":{"line":195,"column":17}},"106":{"start":{"line":197,"column":2},"end":{"line":199,"column":3}},"107":{"start":{"line":198,"column":4},"end":{"line":198,"column":17}},"108":{"start":{"line":200,"column":20},"end":{"line":200,"column":64}},"109":{"start":{"line":201,"column":2},"end":{"line":203,"column":3}},"110":{"start":{"line":202,"column":4},"end":{"line":202,"column":17}},"111":{"start":{"line":204,"column":2},"end":{"line":204,"column":14}},"112":{"start":{"line":207,"column":21},"end":{"line":207,"column":23}},"113":{"start":{"line":208,"column":20},"end":{"line":208,"column":25}},"114":{"start":{"line":209,"column":2},"end":{"line":219,"column":3}},"115":{"start":{"line":209,"column":15},"end":{"line":209,"column":16}},"116":{"start":{"line":209,"column":24},"end":{"line":209,"column":36}},"117":{"start":{"line":210,"column":17},"end":{"line":210,"column":25}},"118":{"start":{"line":211,"column":4},"end":{"line":218,"column":5}},"119":{"start":{"line":212,"column":6},"end":{"line":212,"column":28}},"120":{"start":{"line":213,"column":11},"end":{"line":218,"column":5}},"121":{"start":{"line":214,"column":6},"end":{"line":214,"column":15}},"122":{"start":{"line":216,"column":6},"end":{"line":216,"column":28}},"123":{"start":{"line":217,"column":6},"end":{"line":217,"column":25}},"124":{"start":{"line":220,"column":2},"end":{"line":220,"column":29}},"125":{"start":{"line":223,"column":21},"end":{"line":223,"column":48}},"126":{"start":{"line":224,"column":2},"end":{"line":226,"column":3}},"127":{"start":{"line":225,"column":4},"end":{"line":225,"column":14}},"128":{"start":{"line":227,"column":17},"end":{"line":227,"column":46}},"129":{"start":{"line":228,"column":2},"end":{"line":230,"column":3}},"130":{"start":{"line":229,"column":4},"end":{"line":229,"column":14}},"131":{"start":{"line":231,"column":17},"end":{"line":239,"column":4}},"132":{"start":{"line":232,"column":22},"end":{"line":232,"column":52}},"133":{"start":{"line":233,"column":4},"end":{"line":238,"column":6}},"134":{"start":{"line":240,"column":2},"end":{"line":240,"column":16}},"135":{"start":{"line":243,"column":21},"end":{"line":243,"column":48}},"136":{"start":{"line":244,"column":2},"end":{"line":246,"column":5}},"137":{"start":{"line":245,"column":4},"end":{"line":245,"column":67}},"138":{"start":{"line":249,"column":2},"end":{"line":251,"column":3}},"139":{"start":{"line":250,"column":4},"end":{"line":250,"column":17}},"140":{"start":{"line":252,"column":2},"end":{"line":254,"column":3}},"141":{"start":{"line":253,"column":4},"end":{"line":253,"column":16}},"142":{"start":{"line":255,"column":2},"end":{"line":257,"column":3}},"143":{"start":{"line":256,"column":4},"end":{"line":256,"column":16}},"144":{"start":{"line":258,"column":2},"end":{"line":260,"column":3}},"145":{"start":{"line":259,"column":4},"end":{"line":259,"column":16}},"146":{"start":{"line":261,"column":2},"end":{"line":263,"column":3}},"147":{"start":{"line":262,"column":4},"end":{"line":262,"column":16}},"148":{"start":{"line":264,"column":2},"end":{"line":264,"column":15}},"149":{"start":{"line":267,"column":2},"end":{"line":267,"column":65}},"150":{"start":{"line":270,"column":2},"end":{"line":270,"column":34}},"151":{"start":{"line":273,"column":2},"end":{"line":273,"column":34}},"152":{"start":{"line":276,"column":16},"end":{"line":276,"column":45}},"153":{"start":{"line":277,"column":2},"end":{"line":277,"column":64}},"154":{"start":{"line":280,"column":2},"end":{"line":280,"column":77}},"155":{"start":{"line":283,"column":2},"end":{"line":283,"column":63}}},"fnMap":{"0":{"name":"getAbsoluteRefTypeWithSingleString","decl":{"start":{"line":7,"column":16},"end":{"line":7,"column":50}},"loc":{"start":{"line":7,"column":68},"end":{"line":25,"column":1}},"line":7},"1":{"name":"getAbsoluteRefTypeWitString","decl":{"start":{"line":26,"column":16},"end":{"line":26,"column":43}},"loc":{"start":{"line":26,"column":55},"end":{"line":39,"column":1}},"line":26},"2":{"name":"_getAbsoluteToken","decl":{"start":{"line":40,"column":9},"end":{"line":40,"column":26}},"loc":{"start":{"line":40,"column":67},"end":{"line":55,"column":1}},"line":40},"3":{"name":"serializeRange","decl":{"start":{"line":56,"column":16},"end":{"line":56,"column":30}},"loc":{"start":{"line":56,"column":38},"end":{"line":84,"column":1}},"line":56},"4":{"name":"serializeRangeWithSheet","decl":{"start":{"line":85,"column":16},"end":{"line":85,"column":39}},"loc":{"start":{"line":85,"column":58},"end":{"line":87,"column":1}},"line":85},"5":{"name":"serializeRangeWithSpreadsheet","decl":{"start":{"line":88,"column":16},"end":{"line":88,"column":45}},"loc":{"start":{"line":88,"column":70},"end":{"line":93,"column":1}},"line":88},"6":{"name":"serializeRangeToRefString","decl":{"start":{"line":94,"column":16},"end":{"line":94,"column":41}},"loc":{"start":{"line":94,"column":57},"end":{"line":103,"column":1}},"line":94},"7":{"name":"singleReferenceToGrid","decl":{"start":{"line":104,"column":16},"end":{"line":104,"column":37}},"loc":{"start":{"line":104,"column":47},"end":{"line":113,"column":1}},"line":104},"8":{"name":"handleRefStringInfo","decl":{"start":{"line":114,"column":16},"end":{"line":114,"column":35}},"loc":{"start":{"line":114,"column":47},"end":{"line":140,"column":1}},"line":114},"9":{"name":"deserializeRangeWithSheet","decl":{"start":{"line":141,"column":16},"end":{"line":141,"column":41}},"loc":{"start":{"line":141,"column":53},"end":{"line":190,"column":1}},"line":141},"10":{"name":"isReferenceStringWithEffectiveColumn","decl":{"start":{"line":192,"column":16},"end":{"line":192,"column":52}},"loc":{"start":{"line":192,"column":64},"end":{"line":205,"column":1}},"line":192},"11":{"name":"replaceRefPrefixString","decl":{"start":{"line":206,"column":16},"end":{"line":206,"column":38}},"loc":{"start":{"line":206,"column":46},"end":{"line":221,"column":1}},"line":206},"12":{"name":"getRangeWithRefsString","decl":{"start":{"line":222,"column":16},"end":{"line":222,"column":38}},"loc":{"start":{"line":222,"column":68},"end":{"line":241,"column":1}},"line":222},"13":{"name":"(anonymous_13)","decl":{"start":{"line":231,"column":32},"end":{"line":231,"column":33}},"loc":{"start":{"line":231,"column":41},"end":{"line":239,"column":3}},"line":231},"14":{"name":"isReferenceStrings","decl":{"start":{"line":242,"column":16},"end":{"line":242,"column":34}},"loc":{"start":{"line":242,"column":46},"end":{"line":247,"column":1}},"line":242},"15":{"name":"(anonymous_15)","decl":{"start":{"line":244,"column":26},"end":{"line":244,"column":27}},"loc":{"start":{"line":244,"column":42},"end":{"line":246,"column":3}},"line":244},"16":{"name":"needsQuoting","decl":{"start":{"line":248,"column":16},"end":{"line":248,"column":28}},"loc":{"start":{"line":248,"column":35},"end":{"line":265,"column":1}},"line":248},"17":{"name":"addQuotesBothSides","decl":{"start":{"line":266,"column":16},"end":{"line":266,"column":34}},"loc":{"start":{"line":266,"column":41},"end":{"line":268,"column":1}},"line":266},"18":{"name":"quoteSheetName","decl":{"start":{"line":269,"column":9},"end":{"line":269,"column":23}},"loc":{"start":{"line":269,"column":30},"end":{"line":271,"column":1}},"line":269},"19":{"name":"unquoteSheetName","decl":{"start":{"line":272,"column":9},"end":{"line":272,"column":25}},"loc":{"start":{"line":272,"column":32},"end":{"line":274,"column":1}},"line":272},"20":{"name":"isA1Notation","decl":{"start":{"line":275,"column":9},"end":{"line":275,"column":21}},"loc":{"start":{"line":275,"column":28},"end":{"line":278,"column":1}},"line":275},"21":{"name":"isR1C1Notation","decl":{"start":{"line":279,"column":9},"end":{"line":279,"column":23}},"loc":{"start":{"line":279,"column":30},"end":{"line":281,"column":1}},"line":279},"22":{"name":"startsWithNonAlphabetic","decl":{"start":{"line":282,"column":9},"end":{"line":282,"column":32}},"loc":{"start":{"line":282,"column":39},"end":{"line":284,"column":1}},"line":282}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":2},"end":{"line":14,"column":3}},"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":14,"column":3}},{"start":{},"end":{}}],"line":11},"1":{"loc":{"start":{"line":11,"column":6},"end":{"line":11,"column":76}},"type":"binary-expr","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":38}},{"start":{"line":11,"column":42},"end":{"line":11,"column":58}},{"start":{"line":11,"column":62},"end":{"line":11,"column":76}}],"line":11},"2":{"loc":{"start":{"line":15,"column":2},"end":{"line":17,"column":3}},"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":17,"column":3}},{"start":{},"end":{}}],"line":15},"3":{"loc":{"start":{"line":15,"column":6},"end":{"line":15,"column":39}},"type":"binary-expr","locations":[{"start":{"line":15,"column":6},"end":{"line":15,"column":22}},{"start":{"line":15,"column":26},"end":{"line":15,"column":39}}],"line":15},"4":{"loc":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},{"start":{},"end":{}}],"line":18},"5":{"loc":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},{"start":{},"end":{}}],"line":21},"6":{"loc":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},{"start":{},"end":{}}],"line":28},"7":{"loc":{"start":{"line":32,"column":2},"end":{"line":37,"column":3}},"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":37,"column":3}},{"start":{},"end":{}}],"line":32},"8":{"loc":{"start":{"line":40,"column":27},"end":{"line":40,"column":65}},"type":"default-arg","locations":[{"start":{"line":40,"column":45},"end":{"line":40,"column":65}}],"line":40},"9":{"loc":{"start":{"line":43,"column":2},"end":{"line":50,"column":3}},"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":50,"column":3}},{"start":{"line":45,"column":9},"end":{"line":50,"column":3}}],"line":43},"10":{"loc":{"start":{"line":45,"column":9},"end":{"line":50,"column":3}},"type":"if","locations":[{"start":{"line":45,"column":9},"end":{"line":50,"column":3}},{"start":{"line":47,"column":9},"end":{"line":50,"column":3}}],"line":45},"11":{"loc":{"start":{"line":47,"column":9},"end":{"line":50,"column":3}},"type":"if","locations":[{"start":{"line":47,"column":9},"end":{"line":50,"column":3}},{"start":{},"end":{}}],"line":47},"12":{"loc":{"start":{"line":64,"column":4},"end":{"line":64,"column":33}},"type":"default-arg","locations":[{"start":{"line":64,"column":16},"end":{"line":64,"column":33}}],"line":64},"13":{"loc":{"start":{"line":68,"column":2},"end":{"line":72,"column":3}},"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":72,"column":3}},{"start":{},"end":{}}],"line":68},"14":{"loc":{"start":{"line":68,"column":6},"end":{"line":68,"column":66}},"type":"binary-expr","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":34}},{"start":{"line":68,"column":38},"end":{"line":68,"column":66}}],"line":68},"15":{"loc":{"start":{"line":73,"column":2},"end":{"line":77,"column":3}},"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":77,"column":3}},{"start":{},"end":{}}],"line":73},"16":{"loc":{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},{"start":{},"end":{}}],"line":80},"17":{"loc":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},{"start":{},"end":{}}],"line":89},"18":{"loc":{"start":{"line":89,"column":6},"end":{"line":89,"column":51}},"type":"binary-expr","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":24}},{"start":{"line":89,"column":28},"end":{"line":89,"column":51}}],"line":89},"19":{"loc":{"start":{"line":96,"column":2},"end":{"line":98,"column":3}},"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":98,"column":3}},{"start":{},"end":{}}],"line":96},"20":{"loc":{"start":{"line":96,"column":6},"end":{"line":96,"column":86}},"type":"binary-expr","locations":[{"start":{"line":96,"column":6},"end":{"line":96,"column":20}},{"start":{"line":96,"column":24},"end":{"line":96,"column":41}},{"start":{"line":96,"column":45},"end":{"line":96,"column":62}},{"start":{"line":96,"column":66},"end":{"line":96,"column":86}}],"line":96},"21":{"loc":{"start":{"line":99,"column":2},"end":{"line":101,"column":3}},"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":101,"column":3}},{"start":{},"end":{}}],"line":99},"22":{"loc":{"start":{"line":99,"column":6},"end":{"line":99,"column":47}},"type":"binary-expr","locations":[{"start":{"line":99,"column":6},"end":{"line":99,"column":23}},{"start":{"line":99,"column":27},"end":{"line":99,"column":47}}],"line":99},"23":{"loc":{"start":{"line":117,"column":2},"end":{"line":121,"column":3}},"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":121,"column":3}},{"start":{},"end":{}}],"line":117},"24":{"loc":{"start":{"line":125,"column":2},"end":{"line":134,"column":3}},"type":"if","locations":[{"start":{"line":125,"column":2},"end":{"line":134,"column":3}},{"start":{"line":132,"column":9},"end":{"line":134,"column":3}}],"line":125},"25":{"loc":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},{"start":{},"end":{}}],"line":127},"26":{"loc":{"start":{"line":127,"column":8},"end":{"line":127,"column":71}},"type":"binary-expr","locations":[{"start":{"line":127,"column":8},"end":{"line":127,"column":28}},{"start":{"line":127,"column":32},"end":{"line":127,"column":71}}],"line":127},"27":{"loc":{"start":{"line":144,"column":2},"end":{"line":162,"column":3}},"type":"if","locations":[{"start":{"line":144,"column":2},"end":{"line":162,"column":3}},{"start":{},"end":{}}],"line":144},"28":{"loc":{"start":{"line":167,"column":19},"end":{"line":167,"column":76}},"type":"cond-expr","locations":[{"start":{"line":167,"column":49},"end":{"line":167,"column":60}},{"start":{"line":167,"column":63},"end":{"line":167,"column":76}}],"line":167},"29":{"loc":{"start":{"line":168,"column":22},"end":{"line":168,"column":91}},"type":"cond-expr","locations":[{"start":{"line":168,"column":58},"end":{"line":168,"column":72}},{"start":{"line":168,"column":75},"end":{"line":168,"column":91}}],"line":168},"30":{"loc":{"start":{"line":169,"column":17},"end":{"line":169,"column":74}},"type":"cond-expr","locations":[{"start":{"line":169,"column":47},"end":{"line":169,"column":60}},{"start":{"line":169,"column":63},"end":{"line":169,"column":74}}],"line":169},"31":{"loc":{"start":{"line":170,"column":20},"end":{"line":170,"column":89}},"type":"cond-expr","locations":[{"start":{"line":170,"column":56},"end":{"line":170,"column":72}},{"start":{"line":170,"column":75},"end":{"line":170,"column":89}}],"line":170},"32":{"loc":{"start":{"line":172,"column":2},"end":{"line":176,"column":3}},"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":176,"column":3}},{"start":{"line":174,"column":9},"end":{"line":176,"column":3}}],"line":172},"33":{"loc":{"start":{"line":172,"column":6},"end":{"line":172,"column":52}},"type":"binary-expr","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":28}},{"start":{"line":172,"column":32},"end":{"line":172,"column":52}}],"line":172},"34":{"loc":{"start":{"line":174,"column":9},"end":{"line":176,"column":3}},"type":"if","locations":[{"start":{"line":174,"column":9},"end":{"line":176,"column":3}},{"start":{},"end":{}}],"line":174},"35":{"loc":{"start":{"line":174,"column":13},"end":{"line":174,"column":65}},"type":"binary-expr","locations":[{"start":{"line":174,"column":13},"end":{"line":174,"column":38}},{"start":{"line":174,"column":42},"end":{"line":174,"column":65}}],"line":174},"36":{"loc":{"start":{"line":194,"column":2},"end":{"line":196,"column":3}},"type":"if","locations":[{"start":{"line":194,"column":2},"end":{"line":196,"column":3}},{"start":{},"end":{}}],"line":194},"37":{"loc":{"start":{"line":197,"column":2},"end":{"line":199,"column":3}},"type":"if","locations":[{"start":{"line":197,"column":2},"end":{"line":199,"column":3}},{"start":{},"end":{}}],"line":197},"38":{"loc":{"start":{"line":201,"column":2},"end":{"line":203,"column":3}},"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":203,"column":3}},{"start":{},"end":{}}],"line":201},"39":{"loc":{"start":{"line":211,"column":4},"end":{"line":218,"column":5}},"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":218,"column":5}},{"start":{"line":213,"column":11},"end":{"line":218,"column":5}}],"line":211},"40":{"loc":{"start":{"line":211,"column":8},"end":{"line":211,"column":44}},"type":"binary-expr","locations":[{"start":{"line":211,"column":8},"end":{"line":211,"column":28}},{"start":{"line":211,"column":32},"end":{"line":211,"column":44}}],"line":211},"41":{"loc":{"start":{"line":213,"column":11},"end":{"line":218,"column":5}},"type":"if","locations":[{"start":{"line":213,"column":11},"end":{"line":218,"column":5}},{"start":{"line":215,"column":11},"end":{"line":218,"column":5}}],"line":213},"42":{"loc":{"start":{"line":213,"column":15},"end":{"line":213,"column":115}},"type":"binary-expr","locations":[{"start":{"line":213,"column":15},"end":{"line":213,"column":27}},{"start":{"line":213,"column":32},"end":{"line":213,"column":55}},{"start":{"line":213,"column":59},"end":{"line":213,"column":85}},{"start":{"line":213,"column":89},"end":{"line":213,"column":114}}],"line":213},"43":{"loc":{"start":{"line":223,"column":21},"end":{"line":223,"column":48}},"type":"binary-expr","locations":[{"start":{"line":223,"column":21},"end":{"line":223,"column":42}},{"start":{"line":223,"column":46},"end":{"line":223,"column":48}}],"line":223},"44":{"loc":{"start":{"line":224,"column":2},"end":{"line":226,"column":3}},"type":"if","locations":[{"start":{"line":224,"column":2},"end":{"line":226,"column":3}},{"start":{},"end":{}}],"line":224},"45":{"loc":{"start":{"line":224,"column":6},"end":{"line":224,"column":49}},"type":"binary-expr","locations":[{"start":{"line":224,"column":6},"end":{"line":224,"column":22}},{"start":{"line":224,"column":26},"end":{"line":224,"column":49}}],"line":224},"46":{"loc":{"start":{"line":228,"column":2},"end":{"line":230,"column":3}},"type":"if","locations":[{"start":{"line":228,"column":2},"end":{"line":230,"column":3}},{"start":{},"end":{}}],"line":228},"47":{"loc":{"start":{"line":243,"column":21},"end":{"line":243,"column":48}},"type":"binary-expr","locations":[{"start":{"line":243,"column":21},"end":{"line":243,"column":42}},{"start":{"line":243,"column":46},"end":{"line":243,"column":48}}],"line":243},"48":{"loc":{"start":{"line":249,"column":2},"end":{"line":251,"column":3}},"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":251,"column":3}},{"start":{},"end":{}}],"line":249},"49":{"loc":{"start":{"line":252,"column":2},"end":{"line":254,"column":3}},"type":"if","locations":[{"start":{"line":252,"column":2},"end":{"line":254,"column":3}},{"start":{},"end":{}}],"line":252},"50":{"loc":{"start":{"line":255,"column":2},"end":{"line":257,"column":3}},"type":"if","locations":[{"start":{"line":255,"column":2},"end":{"line":257,"column":3}},{"start":{},"end":{}}],"line":255},"51":{"loc":{"start":{"line":255,"column":6},"end":{"line":255,"column":48}},"type":"binary-expr","locations":[{"start":{"line":255,"column":6},"end":{"line":255,"column":24}},{"start":{"line":255,"column":28},"end":{"line":255,"column":48}}],"line":255},"52":{"loc":{"start":{"line":258,"column":2},"end":{"line":260,"column":3}},"type":"if","locations":[{"start":{"line":258,"column":2},"end":{"line":260,"column":3}},{"start":{},"end":{}}],"line":258},"53":{"loc":{"start":{"line":261,"column":2},"end":{"line":263,"column":3}},"type":"if","locations":[{"start":{"line":261,"column":2},"end":{"line":263,"column":3}},{"start":{},"end":{}}],"line":261},"54":{"loc":{"start":{"line":267,"column":9},"end":{"line":267,"column":64}},"type":"cond-expr","locations":[{"start":{"line":267,"column":30},"end":{"line":267,"column":57}},{"start":{"line":267,"column":60},"end":{"line":267,"column":64}}],"line":267},"55":{"loc":{"start":{"line":277,"column":9},"end":{"line":277,"column":63}},"type":"binary-expr","locations":[{"start":{"line":277,"column":9},"end":{"line":277,"column":45}},{"start":{"line":277,"column":49},"end":{"line":277,"column":63}}],"line":277}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"0":[0,0],"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0,0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/reference.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, IUnitRangeName, IUnitRangeWithName } from '@univerjs/core';\nimport { AbsoluteRefType, RANGE_TYPE, Tools } from '@univerjs/core';\n\nimport { includeFormulaLexerToken } from '../../basics/match-token';\nimport { isReferenceString, UNIT_NAME_REGEX_PRECOMPILING } from '../../basics/regex';\nimport { prefixToken, SPACE_TOKEN } from '../../basics/token';\n\nconst $ROW_REGEX = /[^0-9]/g;\nconst $COLUMN_REGEX = /[^A-Za-z]/g;\n\nexport interface IAbsoluteRefTypeForRange {\n    startAbsoluteRefType: AbsoluteRefType;\n    endAbsoluteRefType?: AbsoluteRefType;\n}\n\n/**\n *\n * @param singleRefString for example A1 or B10,  not A1:B10\n */\nexport function getAbsoluteRefTypeWithSingleString(singleRefString: string) {\n    let isColumnAbsolute = singleRefString[0] === '$';\n    const remainChar = singleRefString.substring(1);\n\n    let isRowAbsolute = remainChar.indexOf('$') > -1;\n\n    if (Tools.isStringNumber(remainChar) && isColumnAbsolute && !isRowAbsolute) {\n        isColumnAbsolute = false;\n        isRowAbsolute = true;\n    }\n\n    if (isColumnAbsolute && isRowAbsolute) {\n        return AbsoluteRefType.ALL;\n    }\n    if (isColumnAbsolute) {\n        return AbsoluteRefType.COLUMN;\n    }\n    if (isRowAbsolute) {\n        return AbsoluteRefType.ROW;\n    }\n\n    return AbsoluteRefType.NONE;\n}\n\n/**\n *\n * @param refString for example A1:B10\n */\nexport function getAbsoluteRefTypeWitString(refString: string): IAbsoluteRefTypeForRange {\n    const sheetArray = refString.split('!');\n\n    if (sheetArray.length > 1) {\n        refString = sheetArray[sheetArray.length - 1];\n    }\n\n    const refArray = refString.split(':');\n\n    if (refArray.length > 1) {\n        return {\n            startAbsoluteRefType: getAbsoluteRefTypeWithSingleString(refArray[0]),\n            endAbsoluteRefType: getAbsoluteRefTypeWithSingleString(refArray[1]),\n        };\n    }\n\n    return { startAbsoluteRefType: getAbsoluteRefTypeWithSingleString(refArray[0]) };\n}\n\nfunction _getAbsoluteToken(absoluteRefType = AbsoluteRefType.NONE) {\n    let rowAbsoluteString = '';\n\n    let columnAbsoluteString = '';\n\n    if (absoluteRefType === AbsoluteRefType.ROW) {\n        rowAbsoluteString = '$';\n    } else if (absoluteRefType === AbsoluteRefType.COLUMN) {\n        columnAbsoluteString = '$';\n    } else if (absoluteRefType === AbsoluteRefType.ALL) {\n        rowAbsoluteString = '$';\n        columnAbsoluteString = '$';\n    }\n\n    return {\n        rowAbsoluteString,\n        columnAbsoluteString,\n    };\n}\n\n/**\n * Serialize an `IRange` into a string.\n * @param range The `IRange` to be serialized\n */\nexport function serializeRange(range: IRange): string {\n    const {\n        startColumn,\n        startRow,\n        endColumn,\n        endRow,\n        startAbsoluteRefType,\n        endAbsoluteRefType,\n        rangeType = RANGE_TYPE.NORMAL,\n    } = range;\n\n    const start = _getAbsoluteToken(startAbsoluteRefType);\n\n    const end = _getAbsoluteToken(endAbsoluteRefType);\n\n    if (rangeType === RANGE_TYPE.ROW || rangeType === RANGE_TYPE.ALL) {\n        const startStr = `${start.rowAbsoluteString}${startRow + 1}`;\n\n        const endStr = `${end.rowAbsoluteString}${endRow + 1}`;\n\n        return `${startStr}:${endStr}`;\n    }\n    if (rangeType === RANGE_TYPE.COLUMN) {\n        const startStr = `${start.columnAbsoluteString}${Tools.chatAtABC(startColumn)}`;\n\n        const endStr = `${end.columnAbsoluteString}${Tools.chatAtABC(endColumn)}`;\n\n        return `${startStr}:${endStr}`;\n    }\n\n    const startStr = `${start.columnAbsoluteString}${Tools.chatAtABC(startColumn)}${start.rowAbsoluteString}${\n        startRow + 1\n    }`;\n\n    const endStr = `${end.columnAbsoluteString}${Tools.chatAtABC(endColumn)}${end.rowAbsoluteString}${endRow + 1}`;\n\n    if (startStr === endStr) {\n        return startStr;\n    }\n\n    return `${startStr}:${endStr}`;\n}\n\n/**\n * Serialize an `IRange` and a sheetID into a string.\n * @param sheetName\n * @param range\n */\nexport function serializeRangeWithSheet(sheetName: string, range: IRange): string {\n    return `${addQuotesBothSides(sheetName)}!${serializeRange(range)}`;\n}\n\n/**\n * Serialize an `IRange` and a sheetID into a string.\n * @param unit unitId or unitName\n * @param sheetName\n * @param range\n */\nexport function serializeRangeWithSpreadsheet(unit: string, sheetName: string, range: IRange): string {\n    if (needsQuoting(unit) || needsQuoting(sheetName)) {\n        return `'[${quoteSheetName(unit)}]${quoteSheetName(sheetName)}'!${serializeRange(range)}`;\n    }\n\n    return `[${unit}]${sheetName}!${serializeRange(range)}`;\n}\n\nexport function serializeRangeToRefString(gridRangeName: IUnitRangeName) {\n    const { unitId, sheetName, range } = gridRangeName;\n\n    if (unitId != null && unitId.length > 0 && sheetName != null && sheetName.length > 0) {\n        return serializeRangeWithSpreadsheet(unitId, sheetName, range);\n    }\n\n    if (sheetName != null && sheetName.length > 0) {\n        return serializeRangeWithSheet(sheetName, range);\n    }\n\n    return serializeRange(range);\n}\n\nexport function singleReferenceToGrid(refBody: string) {\n    const row = Number.parseInt(refBody.replace($ROW_REGEX, '')) - 1;\n    const column = Tools.ABCatNum(refBody.replace($COLUMN_REGEX, ''));\n\n    const absoluteRefType = getAbsoluteRefTypeWithSingleString(refBody);\n\n    return {\n        row,\n        column,\n        absoluteRefType,\n    };\n}\n\nexport function handleRefStringInfo(refString: string) {\n    const unitIdMatch = UNIT_NAME_REGEX_PRECOMPILING.exec(refString);\n    let unitId = '';\n\n    if (unitIdMatch != null) {\n        unitId = unitIdMatch[0].trim();\n        unitId = unquoteSheetName(unitId.slice(1, unitId.length - 1));\n        refString = refString.replace(UNIT_NAME_REGEX_PRECOMPILING, '');\n    }\n\n    const sheetNameIndex = refString.indexOf('!');\n    let sheetName: string = '';\n    let refBody: string = '';\n    if (sheetNameIndex > -1) {\n        sheetName = refString.substring(0, sheetNameIndex);\n        if (sheetName[0] === \"'\" && sheetName[sheetName.length - 1] === \"'\") {\n            sheetName = sheetName.substring(1, sheetName.length - 1);\n        }\n\n        sheetName = unquoteSheetName(sheetName);\n        refBody = refString.substring(sheetNameIndex + 1);\n    } else {\n        refBody = refString;\n    }\n\n    return {\n        refBody,\n        sheetName,\n        unitId,\n    };\n}\n\nexport function deserializeRangeWithSheet(refString: string): IUnitRangeName {\n    const { refBody, sheetName, unitId } = handleRefStringInfo(refString);\n\n    const colonIndex = refBody.indexOf(':');\n\n    if (colonIndex === -1) {\n        const grid = singleReferenceToGrid(refBody);\n        const row = grid.row;\n        const column = grid.column;\n        const absoluteRefType = grid.absoluteRefType;\n        const range: IRange = {\n            startRow: row,\n            startColumn: column,\n            endRow: row,\n            endColumn: column,\n            startAbsoluteRefType: absoluteRefType,\n            endAbsoluteRefType: absoluteRefType,\n        };\n\n        return {\n            unitId,\n            sheetName,\n            range,\n        };\n    }\n\n    const refStartString = refBody.substring(0, colonIndex);\n    const refEndString = refBody.substring(colonIndex + 1);\n\n    const startGrid = singleReferenceToGrid(refStartString);\n\n    const endGrid = singleReferenceToGrid(refEndString);\n\n    // range A1:B10 === B10:A1\n    const startRow = startGrid.row > endGrid.row ? endGrid.row : startGrid.row;\n    const startColumn = startGrid.column > endGrid.column ? endGrid.column : startGrid.column;\n    const endRow = startGrid.row > endGrid.row ? startGrid.row : endGrid.row;\n    const endColumn = startGrid.column > endGrid.column ? startGrid.column : endGrid.column;\n\n    let rangeType = RANGE_TYPE.NORMAL;\n    if (Number.isNaN(startRow) && Number.isNaN(endRow)) {\n        rangeType = RANGE_TYPE.COLUMN;\n    } else if (Number.isNaN(startColumn) && Number.isNaN(endColumn)) {\n        rangeType = RANGE_TYPE.ROW;\n    }\n\n    return {\n        unitId,\n        sheetName,\n        range: {\n            startRow,\n            startColumn,\n            endRow,\n            endColumn,\n\n            startAbsoluteRefType: startGrid.absoluteRefType,\n\n            endAbsoluteRefType: endGrid.absoluteRefType,\n\n            rangeType,\n        },\n    };\n}\n\n/**\n * LOG10 is a formula, google sheet support it on Log10:L\n * EXCEL support it on Log10:Log10\n */\nconst EXCEPTION_REF_STRINGS = ['LOG10'];\n\nexport function isReferenceStringWithEffectiveColumn(refString: string) {\n    const noPrefixRefString = replaceRefPrefixString(refString);\n\n    if (!isReferenceString(noPrefixRefString)) {\n        return false;\n    }\n\n    if (EXCEPTION_REF_STRINGS.includes(noPrefixRefString.toUpperCase().trim())) {\n        return false;\n    }\n\n    const { range } = deserializeRangeWithSheet(noPrefixRefString);\n\n    /**\n     * As of the latest information I have, which is up to the end of 2023,\n     * the maximum limit for columns in Excel is 16,384.\n     * This standard applies to Excel 2007 and later versions,\n     * where each worksheet can support columns ranging from A to XFD.\n     * Therefore, the symbol for the maximum column is XFD.\n     */\n    if (range.endColumn >= 16384) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceRefPrefixString(token: string) {\n    const tokenArray = [];\n    let isNotPreFix = false;\n    for (let i = 0, len = token.length; i < len; i++) {\n        const char = token[i];\n        if (char === SPACE_TOKEN && !isNotPreFix) {\n            tokenArray.push(char);\n        } else if (!isNotPreFix && (char === prefixToken.AT || char === prefixToken.MINUS || char === prefixToken.PLUS)) {\n            continue;\n        } else {\n            tokenArray.push(char);\n            isNotPreFix = true;\n        }\n    }\n    return tokenArray.join('');\n}\n\n/**\n * implement getSheetIdByName\n * function getSheetIdByName(name: string) {\n        return univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)?.getSheetBySheetName(name)?.getSheetId() || '';\n    }\n */\nexport function getRangeWithRefsString(refString: string, getSheetIdByName: (name: string) => string): IUnitRangeWithName[] {\n    const valueArray = refString?.split(',') || [];\n\n    if (refString === '' || valueArray.length === 0) {\n        return [];\n    }\n\n    const result = isReferenceStrings(refString);\n\n    if (!result) {\n        return [];\n    }\n\n    const ranges = valueArray.map((ref) => {\n        const unitRange = deserializeRangeWithSheet(ref);\n        return {\n            unitId: unitRange.unitId,\n            sheetId: getSheetIdByName(unitRange.sheetName),\n            range: unitRange.range,\n            sheetName: unitRange.sheetName,\n        };\n    });\n\n    return ranges;\n}\n\nexport function isReferenceStrings(refString: string) {\n    const valueArray = refString?.split(',') || [];\n    return valueArray.every((refString) => {\n        return isReferenceStringWithEffectiveColumn(refString.trim());\n    });\n}\n\n/**\n * Determine whether the sheet name needs to be wrapped in quotes\n * Excel will quote the worksheet name if any of the following is true:\n *  - It contains any space or punctuation characters, such as  ()$,;-{}\"'（）【】“”‘’%… and many more\n *  - It is a valid cell reference in A1 notation, e.g. B1048576 is quoted\n *  - It is a valid cell reference in R1C1 notation, e.g. RC, RC2, R5C, R-4C, RC-8, R, C\n *  - It starts with a non-letter, e.g. 99, 1.5, 12a, 💩a\n *  - Excel will not quote worksheet names if they only contain non-punctuation, non-letter characters in non-initial positions. For example, a💩 remains unquoted.*\n *  In addition, if a worksheet name contains single quotes, these will be doubled up within the name itself. For example, the sheet name a'b'c becomes 'a''b''c'.\n *\n *  reference https://stackoverflow.com/questions/41677779/when-does-excel-surround-sheet-names-with-single-quotes-in-workbook-xml-or-othe\n *\n * @param name Sheet name\n * @returns Result\n */\nexport function needsQuoting(name: string) {\n    if (name.length === 0) {\n        return false;\n    }\n\n    if (includeFormulaLexerToken(name)) {\n        return true;\n    }\n\n    // Check if the name is a valid cell reference in A1 or R1C1 notation\n    if (isA1Notation(name) || isR1C1Notation(name)) {\n        return true;\n    }\n\n    // Check if the name starts with a non-letter\n    if (startsWithNonAlphabetic(name)) {\n        return true;\n    }\n\n    // Check for spaces, punctuation and special characters\n\n    if (/[\\s!$%^&*()+\\-=\\[\\]{};':\"\\\\|,.<>\\/?（）]/.test(name)) {\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Add quotes to the sheet name\n */\nexport function addQuotesBothSides(name: string) {\n    return needsQuoting(name) ? `'${quoteSheetName(name)}'` : name;\n}\n\n/**\n * Add a single quote before the single quote\n * @param name\n * @returns Quoted name\n */\nfunction quoteSheetName(name: string) {\n    return name.replace(/'/g, \"''\");\n}\n\n/**\n * Replace double single quotes with single quotes\n * @param name\n * @returns Unquoted name\n */\nfunction unquoteSheetName(name: string) {\n    return name.replace(/''/g, \"'\");\n}\n\nfunction isA1Notation(name: string) {\n    const match = name.match(/[1-9][0-9]{0,6}/);\n    // Excel has a limit on the number of rows and columns: targetRow > 1048576 || targetColumn > 16384, Univer has no limit\n    return /^[A-Z]+[1-9][0-9]{0,6}$/.test(name) && match !== null;\n}\n\nfunction isR1C1Notation(name: string) {\n    return /^(R(-?[0-9]+)?C(-?[0-9]+)?|C(-?[0-9]+)?|R(-?[0-9]+)?)$/.test(name);\n}\n\nfunction startsWithNonAlphabetic(name: string) {\n    // Check if the first character is not a letter (including non-English characters)\n    return !/^\\p{Letter}/u.test(name.charAt(0));\n}\n"],"mappings":"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","names":["startStr","endStr","refString"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2530ac062811e9380eb31e8fe41302ea8e2bc104"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/reference-cache.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/reference-cache.ts","statementMap":{"0":{"start":{"line":3,"column":30},"end":{"line":3,"column":52}},"1":{"start":{"line":5,"column":19},"end":{"line":5,"column":55}},"2":{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},"3":{"start":{"line":7,"column":4},"end":{"line":7,"column":20}},"4":{"start":{"line":9,"column":17},"end":{"line":9,"column":53}},"5":{"start":{"line":10,"column":2},"end":{"line":10,"column":47}},"6":{"start":{"line":11,"column":2},"end":{"line":11,"column":46}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":32}}},"fnMap":{"0":{"name":"deserializeRangeWithSheetWithCache","decl":{"start":{"line":4,"column":16},"end":{"line":4,"column":50}},"loc":{"start":{"line":4,"column":62},"end":{"line":13,"column":1}},"line":4},"1":{"name":"clearReferenceToRangeCache","decl":{"start":{"line":14,"column":16},"end":{"line":14,"column":42}},"loc":{"start":{"line":14,"column":45},"end":{"line":16,"column":1}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},{"start":{},"end":{}}],"line":6}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"f":{"0":0,"1":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/reference-cache.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IUnitRangeName } from '@univerjs/core';\nimport { FormulaAstLRU } from '../../basics/cache-lru';\nimport { deserializeRangeWithSheet } from './reference';\n\nconst referenceToRangeCache = new FormulaAstLRU<IUnitRangeName>(100000);\nexport function deserializeRangeWithSheetWithCache(refString: string): IUnitRangeName {\n    const refCache = referenceToRangeCache.get(refString);\n    if (refCache) {\n        return refCache;\n    }\n\n    const result = deserializeRangeWithSheet(refString);\n\n    referenceToRangeCache.set(refString, result);\n\n    return deserializeRangeWithSheet(refString); ;\n}\n\nexport function clearReferenceToRangeCache() {\n    referenceToRangeCache.clear();\n}\n"],"mappings":"AAiBA,SAAS,qBAAqB;AAC9B,SAAS,iCAAiC;AAE1C,MAAM,wBAAwB,IAAI,cAA8B,GAAM;AAC/D,gBAAS,mCAAmC,WAAmC;AAClF,QAAM,WAAW,sBAAsB,IAAI,SAAS;AACpD,MAAI,UAAU;AACV,WAAO;AAAA,EACX;AAEA,QAAM,SAAS,0BAA0B,SAAS;AAElD,wBAAsB,IAAI,WAAW,MAAM;AAE3C,SAAO,0BAA0B,SAAS;AAAG;AACjD;AAEO,gBAAS,6BAA6B;AACzC,wBAAsB,MAAM;AAChC;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"073d228c379098520908b47fa0b7293bf8856d4f"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/is-null-cell.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/is-null-cell.ts","statementMap":{"0":{"start":{"line":2,"column":2},"end":{"line":4,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":16}},"2":{"start":{"line":5,"column":26},"end":{"line":5,"column":30}},"3":{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"5":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":17}},"7":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":17}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":14}}},"fnMap":{"0":{"name":"isNullCellForFormula","decl":{"start":{"line":1,"column":16},"end":{"line":1,"column":36}},"loc":{"start":{"line":1,"column":43},"end":{"line":16,"column":1}},"line":1}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":2},"end":{"line":4,"column":3}},"type":"if","locations":[{"start":{"line":2,"column":2},"end":{"line":4,"column":3}},{"start":{},"end":{}}],"line":2},"1":{"loc":{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},{"start":{},"end":{}}],"line":6},"2":{"loc":{"start":{"line":6,"column":8},"end":{"line":6,"column":60}},"type":"binary-expr","locations":[{"start":{"line":6,"column":8},"end":{"line":6,"column":17}},{"start":{"line":6,"column":21},"end":{"line":6,"column":42}},{"start":{"line":6,"column":46},"end":{"line":6,"column":60}}],"line":6},"3":{"loc":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},{"start":{},"end":{}}],"line":9},"4":{"loc":{"start":{"line":9,"column":6},"end":{"line":9,"column":62}},"type":"binary-expr","locations":[{"start":{"line":9,"column":6},"end":{"line":9,"column":15}},{"start":{"line":9,"column":19},"end":{"line":9,"column":31}},{"start":{"line":9,"column":35},"end":{"line":9,"column":45}},{"start":{"line":9,"column":49},"end":{"line":9,"column":62}}],"line":9},"5":{"loc":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},{"start":{},"end":{}}],"line":12}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0,0,0],"5":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/is-null-cell.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, Nullable } from '@univerjs/core';\n\n/**\n * Examine if a cell is empty (null) in the formula-related modules. This is not\n * interchangable with {@link isNullCell} from the core package, because for\n * formulas, \"custom\" field is meaningless.\n */\nexport function isNullCellForFormula(cell: Nullable<ICellData>) {\n    if (cell == null) {\n        return true;\n    }\n\n    const { v, f, si, p } = cell;\n\n    if (!(v == null || (typeof v === 'string' && v.length === 0))) {\n        return false;\n    }\n\n    if ((f != null && f.length > 0) || (si != null && si.length > 0)) {\n        return false;\n    }\n\n    if (p != null) {\n        return false;\n    }\n\n    return true;\n}\n"],"mappings":"AAuBO,gBAAS,qBAAqB,MAA2B;AAC5D,MAAI,QAAQ,MAAM;AACd,WAAO;AAAA,EACX;AAEA,QAAM,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI;AAExB,MAAI,EAAE,KAAK,QAAS,OAAO,MAAM,YAAY,EAAE,WAAW,IAAK;AAC3D,WAAO;AAAA,EACX;AAEA,MAAK,KAAK,QAAQ,EAAE,SAAS,KAAO,MAAM,QAAQ,GAAG,SAAS,GAAI;AAC9D,WAAO;AAAA,EACX;AAEA,MAAI,KAAK,MAAM;AACX,WAAO;AAAA,EACX;AAEA,SAAO;AACX;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b230c74fb8bae24725461ff4b911f9e2f22d30b3"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/cell.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/cell.ts","statementMap":{"0":{"start":{"line":3,"column":2},"end":{"line":5,"column":3}},"1":{"start":{"line":4,"column":4},"end":{"line":4,"column":13}},"2":{"start":{"line":6,"column":2},"end":{"line":14,"column":3}},"3":{"start":{"line":7,"column":17},"end":{"line":7,"column":29}},"4":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"5":{"start":{"line":9,"column":6},"end":{"line":9,"column":15}},"6":{"start":{"line":11,"column":17},"end":{"line":11,"column":32}},"7":{"start":{"line":12,"column":26},"end":{"line":12,"column":69}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":25}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":22}}},"fnMap":{"0":{"name":"getCellValue","decl":{"start":{"line":2,"column":16},"end":{"line":2,"column":28}},"loc":{"start":{"line":2,"column":35},"end":{"line":16,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":2},"end":{"line":5,"column":3}},"type":"if","locations":[{"start":{"line":3,"column":2},"end":{"line":5,"column":3}},{"start":{},"end":{}}],"line":3},"1":{"loc":{"start":{"line":6,"column":2},"end":{"line":14,"column":3}},"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":14,"column":3}},{"start":{},"end":{}}],"line":6},"2":{"loc":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},{"start":{},"end":{}}],"line":8},"3":{"loc":{"start":{"line":15,"column":9},"end":{"line":15,"column":21}},"type":"binary-expr","locations":[{"start":{"line":15,"column":9},"end":{"line":15,"column":16}},{"start":{"line":15,"column":20},"end":{"line":15,"column":21}}],"line":15}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/cell.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BuildTextUtils } from '@univerjs/core';\nimport type { ICellData, Nullable } from '@univerjs/core';\n\nexport function getCellValue(cell: Nullable<ICellData>) {\n    if (cell === null) {\n        return 0;\n    }\n\n    if (cell?.p) {\n        const body = cell?.p.body;\n\n        if (body == null) {\n            return 0;\n        }\n\n        const data = body.dataStream;\n        const newDataStream = BuildTextUtils.transform.getPlainText(data);\n\n        return newDataStream;\n    }\n\n    return cell?.v || 0;\n}\n"],"mappings":"AAgBA,SAAS,sBAAsB;AAGxB,gBAAS,aAAa,MAA2B;AACpD,MAAI,SAAS,MAAM;AACf,WAAO;AAAA,EACX;AAEA,MAAI,MAAM,GAAG;AACT,UAAM,OAAO,MAAM,EAAE;AAErB,QAAI,QAAQ,MAAM;AACd,aAAO;AAAA,IACX;AAEA,UAAM,OAAO,KAAK;AAClB,UAAM,gBAAgB,eAAe,UAAU,aAAa,IAAI;AAEhE,WAAO;AAAA,EACX;AAEA,SAAO,MAAM,KAAK;AACtB;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4f4066bcccea7514560f60770ca911efbc22f1cf"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/get-runtime-feature-cell.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/get-runtime-feature-cell.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":2,"column":57}},"1":{"start":{"line":3,"column":2},"end":{"line":14,"column":3}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"5":{"start":{"line":7,"column":6},"end":{"line":7,"column":15}},"6":{"start":{"line":9,"column":18},"end":{"line":9,"column":48}},"7":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"8":{"start":{"line":11,"column":6},"end":{"line":11,"column":15}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":17}}},"fnMap":{"0":{"name":"getRuntimeFeatureCell","decl":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"loc":{"start":{"line":1,"column":92},"end":{"line":15,"column":1}},"line":1}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},{"start":{},"end":{}}],"line":6},"1":{"loc":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},{"start":{},"end":{}}],"line":10}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"f":{"0":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/get-runtime-feature-cell.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRuntimeUnitDataType } from '../../basics/common';\n\nexport function getRuntimeFeatureCell(row: number, column: number, sheetId: string, unitId: string, runtimeFeatureCellData: { [featureId: string]: IRuntimeUnitDataType }) {\n    const featureKeys = Object.keys(runtimeFeatureCellData);\n\n    for (const featureId of featureKeys) {\n        const data = runtimeFeatureCellData[featureId];\n        const CellData = data?.[unitId]?.[sheetId];\n        if (CellData == null) {\n            continue;\n        }\n\n        const value = CellData.getValue(row, column);\n\n        if (value == null) {\n            continue;\n        }\n\n        return value;\n    }\n}\n"],"mappings":"AAkBO,gBAAS,sBAAsB,KAAa,QAAgB,SAAiB,QAAgB,wBAAuE;AACvK,QAAM,cAAc,OAAO,KAAK,sBAAsB;AAEtD,aAAW,aAAa,aAAa;AACjC,UAAM,OAAO,uBAAuB,SAAS;AAC7C,UAAM,WAAW,OAAO,MAAM,IAAI,OAAO;AACzC,QAAI,YAAY,MAAM;AAClB;AAAA,IACJ;AAEA,UAAM,QAAQ,SAAS,SAAS,KAAK,MAAM;AAE3C,QAAI,SAAS,MAAM;AACf;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"064dc5a5c0a81606219b380fa9d019a1e8d28eb4"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/inverted-index-cache.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/inverted-index-cache.ts","statementMap":{"0":{"start":{"line":15,"column":27},"end":{"line":15,"column":36}},"1":{"start":{"line":16,"column":43},"end":{"line":16,"column":52}},"2":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"3":{"start":{"line":19,"column":6},"end":{"line":19,"column":13}},"4":{"start":{"line":21,"column":18},"end":{"line":21,"column":41}},"5":{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},"6":{"start":{"line":23,"column":6},"end":{"line":23,"column":42}},"7":{"start":{"line":24,"column":6},"end":{"line":24,"column":39}},"8":{"start":{"line":26,"column":19},"end":{"line":26,"column":39}},"9":{"start":{"line":27,"column":4},"end":{"line":30,"column":5}},"10":{"start":{"line":28,"column":6},"end":{"line":28,"column":43}},"11":{"start":{"line":29,"column":6},"end":{"line":29,"column":37}},"12":{"start":{"line":31,"column":20},"end":{"line":31,"column":40}},"13":{"start":{"line":32,"column":4},"end":{"line":35,"column":5}},"14":{"start":{"line":33,"column":6},"end":{"line":33,"column":44}},"15":{"start":{"line":34,"column":6},"end":{"line":34,"column":38}},"16":{"start":{"line":36,"column":19},"end":{"line":36,"column":39}},"17":{"start":{"line":37,"column":4},"end":{"line":40,"column":5}},"18":{"start":{"line":38,"column":6},"end":{"line":38,"column":43}},"19":{"start":{"line":39,"column":6},"end":{"line":39,"column":37}},"20":{"start":{"line":41,"column":4},"end":{"line":41,"column":22}},"21":{"start":{"line":44,"column":4},"end":{"line":44,"column":62}},"22":{"start":{"line":47,"column":17},"end":{"line":47,"column":79}},"23":{"start":{"line":48,"column":4},"end":{"line":48,"column":109}},"24":{"start":{"line":48,"column":45},"end":{"line":48,"column":107}},"25":{"start":{"line":48,"column":80},"end":{"line":48,"column":106}},"26":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"27":{"start":{"line":52,"column":6},"end":{"line":52,"column":13}},"28":{"start":{"line":54,"column":18},"end":{"line":54,"column":57}},"29":{"start":{"line":55,"column":4},"end":{"line":58,"column":5}},"30":{"start":{"line":56,"column":6},"end":{"line":56,"column":42}},"31":{"start":{"line":57,"column":6},"end":{"line":57,"column":55}},"32":{"start":{"line":59,"column":19},"end":{"line":59,"column":39}},"33":{"start":{"line":60,"column":4},"end":{"line":63,"column":5}},"34":{"start":{"line":61,"column":6},"end":{"line":61,"column":43}},"35":{"start":{"line":62,"column":6},"end":{"line":62,"column":37}},"36":{"start":{"line":64,"column":20},"end":{"line":64,"column":40}},"37":{"start":{"line":65,"column":4},"end":{"line":70,"column":5}},"38":{"start":{"line":66,"column":6},"end":{"line":66,"column":37}},"39":{"start":{"line":67,"column":6},"end":{"line":67,"column":43}},"40":{"start":{"line":68,"column":6},"end":{"line":68,"column":38}},"41":{"start":{"line":69,"column":6},"end":{"line":69,"column":13}},"42":{"start":{"line":71,"column":4},"end":{"line":71,"column":57}},"43":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"44":{"start":{"line":75,"column":6},"end":{"line":75,"column":19}},"45":{"start":{"line":77,"column":22},"end":{"line":77,"column":88}},"46":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"47":{"start":{"line":79,"column":6},"end":{"line":79,"column":18}},"48":{"start":{"line":81,"column":19},"end":{"line":81,"column":47}},"49":{"start":{"line":82,"column":4},"end":{"line":82,"column":31}},"50":{"start":{"line":85,"column":22},"end":{"line":85,"column":88}},"51":{"start":{"line":86,"column":4},"end":{"line":91,"column":5}},"52":{"start":{"line":87,"column":6},"end":{"line":90,"column":8}},"53":{"start":{"line":92,"column":19},"end":{"line":92,"column":65}},"54":{"start":{"line":93,"column":4},"end":{"line":98,"column":5}},"55":{"start":{"line":94,"column":6},"end":{"line":97,"column":8}},"56":{"start":{"line":99,"column":4},"end":{"line":99,"column":39}},"57":{"start":{"line":99,"column":26},"end":{"line":99,"column":37}},"58":{"start":{"line":100,"column":24},"end":{"line":100,"column":26}},"59":{"start":{"line":101,"column":27},"end":{"line":101,"column":29}},"60":{"start":{"line":102,"column":25},"end":{"line":102,"column":38}},"61":{"start":{"line":103,"column":4},"end":{"line":128,"column":5}},"62":{"start":{"line":103,"column":17},"end":{"line":103,"column":18}},"63":{"start":{"line":104,"column":27},"end":{"line":104,"column":36}},"64":{"start":{"line":105,"column":6},"end":{"line":127,"column":7}},"65":{"start":{"line":106,"column":8},"end":{"line":109,"column":9}},"66":{"start":{"line":107,"column":10},"end":{"line":107,"column":58}},"67":{"start":{"line":108,"column":10},"end":{"line":108,"column":16}},"68":{"start":{"line":110,"column":8},"end":{"line":110,"column":48}},"69":{"start":{"line":111,"column":8},"end":{"line":111,"column":33}},"70":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"71":{"start":{"line":113,"column":10},"end":{"line":113,"column":61}},"72":{"start":{"line":116,"column":8},"end":{"line":124,"column":9}},"73":{"start":{"line":117,"column":10},"end":{"line":117,"column":41}},"74":{"start":{"line":118,"column":10},"end":{"line":118,"column":59}},"75":{"start":{"line":119,"column":10},"end":{"line":119,"column":35}},"76":{"start":{"line":120,"column":10},"end":{"line":122,"column":11}},"77":{"start":{"line":121,"column":12},"end":{"line":121,"column":63}},"78":{"start":{"line":123,"column":10},"end":{"line":123,"column":19}},"79":{"start":{"line":125,"column":8},"end":{"line":125,"column":47}},"80":{"start":{"line":126,"column":8},"end":{"line":126,"column":57}},"81":{"start":{"line":129,"column":4},"end":{"line":132,"column":6}},"82":{"start":{"line":135,"column":4},"end":{"line":135,"column":24}},"83":{"start":{"line":136,"column":4},"end":{"line":136,"column":40}},"84":{"start":{"line":139,"column":17},"end":{"line":139,"column":53}},"85":{"start":{"line":140,"column":4},"end":{"line":147,"column":5}},"86":{"start":{"line":141,"column":28},"end":{"line":141,"column":77}},"87":{"start":{"line":142,"column":6},"end":{"line":142,"column":47}},"88":{"start":{"line":143,"column":6},"end":{"line":146,"column":7}},"89":{"start":{"line":144,"column":8},"end":{"line":144,"column":45}},"90":{"start":{"line":145,"column":8},"end":{"line":145,"column":15}},"91":{"start":{"line":148,"column":14},"end":{"line":148,"column":22}},"92":{"start":{"line":149,"column":14},"end":{"line":149,"column":20}},"93":{"start":{"line":150,"column":4},"end":{"line":154,"column":5}},"94":{"start":{"line":151,"column":6},"end":{"line":151,"column":39}},"95":{"start":{"line":152,"column":6},"end":{"line":152,"column":39}},"96":{"start":{"line":153,"column":6},"end":{"line":153,"column":33}},"97":{"start":{"line":155,"column":4},"end":{"line":155,"column":33}},"98":{"start":{"line":158,"column":41},"end":{"line":158,"column":65}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":2},"end":{"line":17,"column":3}},"loc":{"start":{"line":17,"column":43},"end":{"line":42,"column":3}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":43,"column":2},"end":{"line":43,"column":3}},"loc":{"start":{"line":43,"column":49},"end":{"line":45,"column":3}},"line":43},"2":{"name":"(anonymous_2)","decl":{"start":{"line":46,"column":2},"end":{"line":46,"column":3}},"loc":{"start":{"line":46,"column":64},"end":{"line":49,"column":3}},"line":46},"3":{"name":"(anonymous_3)","decl":{"start":{"line":48,"column":36},"end":{"line":48,"column":37}},"loc":{"start":{"line":48,"column":45},"end":{"line":48,"column":107}},"line":48},"4":{"name":"(anonymous_4)","decl":{"start":{"line":48,"column":62},"end":{"line":48,"column":63}},"loc":{"start":{"line":48,"column":80},"end":{"line":48,"column":106}},"line":48},"5":{"name":"(anonymous_5)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":70},"end":{"line":72,"column":3}},"line":50},"6":{"name":"(anonymous_6)","decl":{"start":{"line":73,"column":2},"end":{"line":73,"column":3}},"loc":{"start":{"line":73,"column":60},"end":{"line":83,"column":3}},"line":73},"7":{"name":"(anonymous_7)","decl":{"start":{"line":84,"column":2},"end":{"line":84,"column":3}},"loc":{"start":{"line":84,"column":67},"end":{"line":133,"column":3}},"line":84},"8":{"name":"(anonymous_8)","decl":{"start":{"line":99,"column":16},"end":{"line":99,"column":17}},"loc":{"start":{"line":99,"column":26},"end":{"line":99,"column":37}},"line":99},"9":{"name":"(anonymous_9)","decl":{"start":{"line":134,"column":2},"end":{"line":134,"column":3}},"loc":{"start":{"line":134,"column":10},"end":{"line":137,"column":3}},"line":134},"10":{"name":"(anonymous_10)","decl":{"start":{"line":138,"column":2},"end":{"line":138,"column":3}},"loc":{"start":{"line":138,"column":50},"end":{"line":156,"column":3}},"line":138}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},{"start":{},"end":{}}],"line":18},"1":{"loc":{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},{"start":{},"end":{}}],"line":22},"2":{"loc":{"start":{"line":27,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":30,"column":5}},{"start":{},"end":{}}],"line":27},"3":{"loc":{"start":{"line":32,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":35,"column":5}},{"start":{},"end":{}}],"line":32},"4":{"loc":{"start":{"line":37,"column":4},"end":{"line":40,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":40,"column":5}},{"start":{},"end":{}}],"line":37},"5":{"loc":{"start":{"line":48,"column":11},"end":{"line":48,"column":108}},"type":"binary-expr","locations":[{"start":{"line":48,"column":11},"end":{"line":48,"column":15}},{"start":{"line":48,"column":19},"end":{"line":48,"column":108}}],"line":48},"6":{"loc":{"start":{"line":48,"column":80},"end":{"line":48,"column":106}},"type":"binary-expr","locations":[{"start":{"line":48,"column":80},"end":{"line":48,"column":92}},{"start":{"line":48,"column":96},"end":{"line":48,"column":106}}],"line":48},"7":{"loc":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},{"start":{},"end":{}}],"line":51},"8":{"loc":{"start":{"line":51,"column":8},"end":{"line":51,"column":57}},"type":"binary-expr","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":21}},{"start":{"line":51,"column":25},"end":{"line":51,"column":40}},{"start":{"line":51,"column":44},"end":{"line":51,"column":57}}],"line":51},"9":{"loc":{"start":{"line":55,"column":4},"end":{"line":58,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":58,"column":5}},{"start":{},"end":{}}],"line":55},"10":{"loc":{"start":{"line":60,"column":4},"end":{"line":63,"column":5}},"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":63,"column":5}},{"start":{},"end":{}}],"line":60},"11":{"loc":{"start":{"line":65,"column":4},"end":{"line":70,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":70,"column":5}},{"start":{},"end":{}}],"line":65},"12":{"loc":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},{"start":{},"end":{}}],"line":74},"13":{"loc":{"start":{"line":74,"column":8},"end":{"line":74,"column":35}},"type":"binary-expr","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":21}},{"start":{"line":74,"column":25},"end":{"line":74,"column":35}}],"line":74},"14":{"loc":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},{"start":{},"end":{}}],"line":78},"15":{"loc":{"start":{"line":86,"column":4},"end":{"line":91,"column":5}},"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":91,"column":5}},{"start":{},"end":{}}],"line":86},"16":{"loc":{"start":{"line":86,"column":8},"end":{"line":86,"column":81}},"type":"binary-expr","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":21}},{"start":{"line":86,"column":25},"end":{"line":86,"column":45}},{"start":{"line":86,"column":49},"end":{"line":86,"column":67}},{"start":{"line":86,"column":71},"end":{"line":86,"column":81}}],"line":86},"17":{"loc":{"start":{"line":93,"column":4},"end":{"line":98,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":98,"column":5}},{"start":{},"end":{}}],"line":93},"18":{"loc":{"start":{"line":105,"column":6},"end":{"line":127,"column":7}},"type":"if","locations":[{"start":{"line":105,"column":6},"end":{"line":127,"column":7}},{"start":{"line":115,"column":13},"end":{"line":127,"column":7}}],"line":105},"19":{"loc":{"start":{"line":106,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":109,"column":9}},{"start":{},"end":{}}],"line":106},"20":{"loc":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},{"start":{},"end":{}}],"line":112},"21":{"loc":{"start":{"line":112,"column":12},"end":{"line":112,"column":68}},"type":"binary-expr","locations":[{"start":{"line":112,"column":12},"end":{"line":112,"column":35}},{"start":{"line":112,"column":39},"end":{"line":112,"column":68}}],"line":112},"22":{"loc":{"start":{"line":116,"column":8},"end":{"line":124,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":124,"column":9}},{"start":{},"end":{}}],"line":116},"23":{"loc":{"start":{"line":120,"column":10},"end":{"line":122,"column":11}},"type":"if","locations":[{"start":{"line":120,"column":10},"end":{"line":122,"column":11}},{"start":{},"end":{}}],"line":120},"24":{"loc":{"start":{"line":120,"column":14},"end":{"line":120,"column":70}},"type":"binary-expr","locations":[{"start":{"line":120,"column":14},"end":{"line":120,"column":37}},{"start":{"line":120,"column":41},"end":{"line":120,"column":70}}],"line":120},"25":{"loc":{"start":{"line":140,"column":4},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":147,"column":5}},{"start":{},"end":{}}],"line":140},"26":{"loc":{"start":{"line":141,"column":29},"end":{"line":141,"column":64}},"type":"cond-expr","locations":[{"start":{"line":141,"column":48},"end":{"line":141,"column":49}},{"start":{"line":141,"column":52},"end":{"line":141,"column":64}}],"line":141},"27":{"loc":{"start":{"line":143,"column":6},"end":{"line":146,"column":7}},"type":"if","locations":[{"start":{"line":143,"column":6},"end":{"line":146,"column":7}},{"start":{},"end":{}}],"line":143}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/basics/inverted-index-cache.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { NumericTuple } from '@flatten-js/interval-tree';\nimport IntervalTree from '@flatten-js/interval-tree';\n\nexport class InvertedIndexCache {\n    /**\n     * {\n     *    unitId:{\n     *       sheetId:{\n     *          'columnIndex': {\n     *              10:[1,3,4,5],\n     *              5:[2,6,11,22]\n     *          }\n     *       }\n     *    }\n     * }\n     */\n    private _cache: Map<string, Map<string, Map<number, Map<string | number | boolean | null, Set<number>>>>> = new Map();\n\n    private _continueBuildingCache: Map<string, Map<string, Map<number, IntervalTree<NumericTuple>>>> = new Map();\n\n    set(unitId: string, sheetId: string, column: number, value: string | number | boolean | null, row: number) {\n        if (!this.shouldContinueBuildingCache(unitId, sheetId, column, row)) {\n            return;\n        }\n\n        let unitMap = this._cache.get(unitId);\n        if (unitMap == null) {\n            unitMap = new Map();\n            this._cache.set(unitId, unitMap);\n        }\n\n        let sheetMap = unitMap.get(sheetId);\n        if (sheetMap == null) {\n            sheetMap = new Map();\n            unitMap.set(sheetId, sheetMap);\n        }\n\n        let columnMap = sheetMap.get(column);\n        if (columnMap == null) {\n            columnMap = new Map();\n            sheetMap.set(column, columnMap);\n        }\n\n        let cellList = columnMap.get(value);\n        if (cellList == null) {\n            cellList = new Set<number>();\n            columnMap.set(value, cellList);\n        }\n\n        cellList.add(row);\n    }\n\n    getCellValuePositions(unitId: string, sheetId: string, column: number) {\n        return this._cache.get(unitId)?.get(sheetId)?.get(column);\n    }\n\n    getCellPositions(unitId: string, sheetId: string, column: number, value: string | number | boolean, rowsInCache: NumericTuple[]) {\n        const rows = this._cache.get(unitId)?.get(sheetId)?.get(column)?.get(value);\n        // return rows?.values().filter((row) => rowsInCache.some(([start, end]) => row >= start && row <= end));\n        return rows && [...rows].filter((row) => rowsInCache.some(([start, end]) => row >= start && row <= end));\n    }\n\n    setContinueBuildingCache(unitId: string, sheetId: string, column: number, startRow: number, endRow: number) {\n        if (column === -1 || startRow === -1 || endRow === -1) {\n            return;\n        }\n\n        let unitMap = this._continueBuildingCache.get(unitId);\n        if (unitMap == null) {\n            unitMap = new Map();\n            this._continueBuildingCache.set(unitId, unitMap);\n        }\n\n        let sheetMap = unitMap.get(sheetId);\n        if (sheetMap == null) {\n            sheetMap = new Map();\n            unitMap.set(sheetId, sheetMap);\n        }\n\n        let columnMap = sheetMap.get(column);\n        if (columnMap == null) {\n            columnMap = new IntervalTree<NumericTuple>();\n            columnMap.insert([startRow, endRow]);\n            sheetMap.set(column, columnMap);\n            return;\n        }\n\n        this._handleNewInterval(columnMap, startRow, endRow);\n    }\n\n    shouldContinueBuildingCache(unitId: string, sheetId: string, column: number, row: number) {\n        if (column === -1 || row === -1) {\n            return false;\n        }\n\n        const columnMap = this._continueBuildingCache.get(unitId)?.get(sheetId)?.get(column);\n\n        if (!columnMap) {\n            return true;\n        }\n\n        const result = columnMap.search([row, row]);\n\n        return result.length === 0;\n    }\n\n    canUseCache(unitId: string, sheetId: string, column: number, rangeStartRow: number, rangeEndRow: number) {\n        const columnMap = this._continueBuildingCache.get(unitId)?.get(sheetId)?.get(column);\n\n        if (column === -1 || rangeStartRow === -1 || rangeEndRow === -1 || !columnMap) {\n            return {\n                rowsInCache: [],\n                rowsNotInCache: [],\n            };\n        }\n\n        const result = columnMap.search([rangeStartRow, rangeEndRow]);\n\n        if (result.length === 0) {\n            return {\n                rowsInCache: [],\n                rowsNotInCache: [],\n            };\n        }\n\n        result.sort((a, b) => a[0] - b[0]);\n\n        const rowsInCache: NumericTuple[] = [];\n        const rowsNotInCache: NumericTuple[] = [];\n\n        let _rangeStartRow = rangeStartRow;\n\n        for (let i = 0; i < result.length; i++) {\n            const [start, end] = result[i];\n\n            if (_rangeStartRow >= start) {\n                if (rangeEndRow <= end) {\n                    rowsInCache.push([_rangeStartRow, rangeEndRow]);\n                    break;\n                }\n\n                rowsInCache.push([_rangeStartRow, end]);\n                _rangeStartRow = end + 1;\n\n                if (i === result.length - 1 && _rangeStartRow <= rangeEndRow) {\n                    rowsNotInCache.push([_rangeStartRow, rangeEndRow]);\n                }\n            } else {\n                if (rangeEndRow > end) {\n                    rowsInCache.push([start, end]);\n                    rowsNotInCache.push([_rangeStartRow, start - 1]);\n                    _rangeStartRow = end + 1;\n\n                    if (i === result.length - 1 && _rangeStartRow <= rangeEndRow) {\n                        rowsNotInCache.push([_rangeStartRow, rangeEndRow]);\n                    }\n                    continue;\n                }\n\n                rowsInCache.push([start, rangeEndRow]);\n                rowsNotInCache.push([_rangeStartRow, start - 1]);\n            }\n        }\n\n        return {\n            rowsInCache,\n            rowsNotInCache,\n        };\n    }\n\n    clear() {\n        this._cache.clear();\n        this._continueBuildingCache.clear();\n    }\n\n    private _handleNewInterval(columnMap: IntervalTree<NumericTuple>, startRow: number, endRow: number) {\n        let result = columnMap.search([startRow, endRow]);\n\n        // the range is not overlapping with any existing range\n        if (result.length === 0) {\n            // check if the range is adjacent to any existing range\n            const adjacentRange: NumericTuple = [startRow - 1 < 0 ? 0 : startRow - 1, endRow + 1];\n\n            result = columnMap.search(adjacentRange);\n\n            // the range is not overlapping or adjacent to any existing range, then insert it\n            if (result.length === 0) {\n                columnMap.insert([startRow, endRow]);\n                return;\n            }\n        }\n\n        // merge overlapping or adjacent ranges\n        let min = startRow;\n        let max = endRow;\n\n        for (const interval of result) {\n            min = Math.min(min, interval[0]);\n            max = Math.max(max, interval[1]);\n            columnMap.remove(interval);\n        }\n\n        columnMap.insert([min, max]);\n    }\n}\n\nexport const CELL_INVERTED_INDEX_CACHE = new InvertedIndexCache();\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"49968537c78bb7b96e4d3bc82836817bccf5eab9"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/array-value-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/array-value-object.ts","statementMap":{"0":{"start":{"line":11,"column":40},"end":{"line":26,"column":27}},"1":{"start":{"line":12,"column":2},"end":{"line":12,"column":64}},"2":{"start":{"line":13,"column":2},"end":{"line":13,"column":62}},"3":{"start":{"line":14,"column":2},"end":{"line":14,"column":70}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":68}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":60}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":68}},"7":{"start":{"line":18,"column":2},"end":{"line":18,"column":88}},"8":{"start":{"line":19,"column":2},"end":{"line":19,"column":86}},"9":{"start":{"line":20,"column":2},"end":{"line":20,"column":60}},"10":{"start":{"line":21,"column":2},"end":{"line":21,"column":64}},"11":{"start":{"line":22,"column":2},"end":{"line":22,"column":65}},"12":{"start":{"line":23,"column":2},"end":{"line":23,"column":63}},"13":{"start":{"line":24,"column":2},"end":{"line":24,"column":65}},"14":{"start":{"line":25,"column":2},"end":{"line":25,"column":28}},"15":{"start":{"line":27,"column":41},"end":{"line":33,"column":28}},"16":{"start":{"line":28,"column":2},"end":{"line":28,"column":70}},"17":{"start":{"line":29,"column":2},"end":{"line":29,"column":62}},"18":{"start":{"line":30,"column":2},"end":{"line":30,"column":68}},"19":{"start":{"line":31,"column":2},"end":{"line":31,"column":68}},"20":{"start":{"line":32,"column":2},"end":{"line":32,"column":29}},"21":{"start":{"line":35,"column":2},"end":{"line":35,"column":12}},"22":{"start":{"line":38,"column":25},"end":{"line":38,"column":27}},"23":{"start":{"line":39,"column":2},"end":{"line":48,"column":3}},"24":{"start":{"line":39,"column":15},"end":{"line":39,"column":16}},"25":{"start":{"line":40,"column":16},"end":{"line":40,"column":24}},"26":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"27":{"start":{"line":42,"column":6},"end":{"line":42,"column":29}},"28":{"start":{"line":44,"column":4},"end":{"line":47,"column":5}},"29":{"start":{"line":44,"column":17},"end":{"line":44,"column":18}},"30":{"start":{"line":45,"column":19},"end":{"line":45,"column":25}},"31":{"start":{"line":46,"column":6},"end":{"line":46,"column":61}},"32":{"start":{"line":49,"column":2},"end":{"line":49,"column":24}},"33":{"start":{"line":52,"column":25},"end":{"line":52,"column":27}},"34":{"start":{"line":53,"column":2},"end":{"line":68,"column":3}},"35":{"start":{"line":53,"column":15},"end":{"line":53,"column":16}},"36":{"start":{"line":54,"column":16},"end":{"line":54,"column":24}},"37":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"38":{"start":{"line":56,"column":6},"end":{"line":56,"column":29}},"39":{"start":{"line":58,"column":4},"end":{"line":67,"column":5}},"40":{"start":{"line":58,"column":17},"end":{"line":58,"column":18}},"41":{"start":{"line":59,"column":19},"end":{"line":59,"column":25}},"42":{"start":{"line":60,"column":6},"end":{"line":66,"column":7}},"43":{"start":{"line":61,"column":8},"end":{"line":61,"column":36}},"44":{"start":{"line":62,"column":13},"end":{"line":66,"column":7}},"45":{"start":{"line":63,"column":8},"end":{"line":63,"column":51}},"46":{"start":{"line":65,"column":8},"end":{"line":65,"column":47}},"47":{"start":{"line":69,"column":2},"end":{"line":69,"column":24}},"48":{"start":{"line":78,"column":4},"end":{"line":78,"column":42}},"49":{"start":{"line":86,"column":31},"end":{"line":86,"column":60}},"50":{"start":{"line":87,"column":33},"end":{"line":95,"column":5}},"51":{"start":{"line":96,"column":4},"end":{"line":96,"column":54}},"52":{"start":{"line":98,"column":12},"end":{"line":98,"column":14}},"53":{"start":{"line":99,"column":14},"end":{"line":99,"column":16}},"54":{"start":{"line":100,"column":17},"end":{"line":100,"column":19}},"55":{"start":{"line":101,"column":12},"end":{"line":101,"column":14}},"56":{"start":{"line":102,"column":13},"end":{"line":102,"column":15}},"57":{"start":{"line":103,"column":16},"end":{"line":103,"column":18}},"58":{"start":{"line":104,"column":19},"end":{"line":104,"column":21}},"59":{"start":{"line":105,"column":32},"end":{"line":105,"column":41}},"60":{"start":{"line":110,"column":18},"end":{"line":110,"column":22}},"61":{"start":{"line":113,"column":4},"end":{"line":113,"column":82}},"62":{"start":{"line":114,"column":4},"end":{"line":114,"column":47}},"63":{"start":{"line":117,"column":4},"end":{"line":117,"column":22}},"64":{"start":{"line":118,"column":4},"end":{"line":118,"column":30}},"65":{"start":{"line":119,"column":4},"end":{"line":119,"column":33}},"66":{"start":{"line":120,"column":4},"end":{"line":120,"column":23}},"67":{"start":{"line":123,"column":4},"end":{"line":125,"column":7}},"68":{"start":{"line":124,"column":6},"end":{"line":124,"column":15}},"69":{"start":{"line":128,"column":4},"end":{"line":128,"column":26}},"70":{"start":{"line":131,"column":4},"end":{"line":131,"column":30}},"71":{"start":{"line":134,"column":4},"end":{"line":134,"column":29}},"72":{"start":{"line":137,"column":4},"end":{"line":137,"column":36}},"73":{"start":{"line":140,"column":4},"end":{"line":140,"column":27}},"74":{"start":{"line":141,"column":4},"end":{"line":141,"column":33}},"75":{"start":{"line":144,"column":4},"end":{"line":144,"column":26}},"76":{"start":{"line":147,"column":4},"end":{"line":147,"column":24}},"77":{"start":{"line":150,"column":4},"end":{"line":150,"column":28}},"78":{"start":{"line":153,"column":4},"end":{"line":153,"column":25}},"79":{"start":{"line":156,"column":4},"end":{"line":156,"column":28}},"80":{"start":{"line":159,"column":4},"end":{"line":159,"column":31}},"81":{"start":{"line":162,"column":4},"end":{"line":162,"column":24}},"82":{"start":{"line":165,"column":4},"end":{"line":165,"column":23}},"83":{"start":{"line":166,"column":4},"end":{"line":166,"column":25}},"84":{"start":{"line":169,"column":4},"end":{"line":169,"column":16}},"85":{"start":{"line":172,"column":4},"end":{"line":172,"column":31}},"86":{"start":{"line":175,"column":4},"end":{"line":175,"column":61}},"87":{"start":{"line":178,"column":22},"end":{"line":178,"column":39}},"88":{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},"89":{"start":{"line":180,"column":6},"end":{"line":180,"column":18}},"90":{"start":{"line":182,"column":14},"end":{"line":182,"column":31}},"91":{"start":{"line":183,"column":4},"end":{"line":185,"column":5}},"92":{"start":{"line":184,"column":6},"end":{"line":184,"column":18}},"93":{"start":{"line":186,"column":4},"end":{"line":186,"column":13}},"94":{"start":{"line":189,"column":4},"end":{"line":189,"column":55}},"95":{"start":{"line":192,"column":4},"end":{"line":194,"column":5}},"96":{"start":{"line":193,"column":6},"end":{"line":193,"column":49}},"97":{"start":{"line":195,"column":4},"end":{"line":195,"column":23}},"98":{"start":{"line":196,"column":4},"end":{"line":196,"column":38}},"99":{"start":{"line":199,"column":21},"end":{"line":199,"column":22}},"100":{"start":{"line":200,"column":21},"end":{"line":200,"column":39}},"101":{"start":{"line":201,"column":24},"end":{"line":201,"column":25}},"102":{"start":{"line":202,"column":24},"end":{"line":202,"column":45}},"103":{"start":{"line":203,"column":4},"end":{"line":208,"column":6}},"104":{"start":{"line":211,"column":57},"end":{"line":211,"column":80}},"105":{"start":{"line":212,"column":22},"end":{"line":212,"column":42}},"106":{"start":{"line":213,"column":4},"end":{"line":219,"column":5}},"107":{"start":{"line":213,"column":17},"end":{"line":213,"column":25}},"108":{"start":{"line":214,"column":6},"end":{"line":218,"column":7}},"109":{"start":{"line":214,"column":19},"end":{"line":214,"column":30}},"110":{"start":{"line":215,"column":8},"end":{"line":217,"column":9}},"111":{"start":{"line":216,"column":10},"end":{"line":216,"column":17}},"112":{"start":{"line":222,"column":57},"end":{"line":222,"column":80}},"113":{"start":{"line":223,"column":22},"end":{"line":223,"column":42}},"114":{"start":{"line":224,"column":4},"end":{"line":230,"column":5}},"115":{"start":{"line":224,"column":17},"end":{"line":224,"column":23}},"116":{"start":{"line":225,"column":6},"end":{"line":229,"column":7}},"117":{"start":{"line":225,"column":19},"end":{"line":225,"column":28}},"118":{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},"119":{"start":{"line":227,"column":10},"end":{"line":227,"column":17}},"120":{"start":{"line":234,"column":4},"end":{"line":242,"column":7}},"121":{"start":{"line":235,"column":6},"end":{"line":241,"column":7}},"122":{"start":{"line":236,"column":8},"end":{"line":239,"column":10}},"123":{"start":{"line":240,"column":8},"end":{"line":240,"column":21}},"124":{"start":{"line":243,"column":4},"end":{"line":243,"column":23}},"125":{"start":{"line":247,"column":4},"end":{"line":255,"column":7}},"126":{"start":{"line":248,"column":6},"end":{"line":254,"column":7}},"127":{"start":{"line":249,"column":8},"end":{"line":252,"column":10}},"128":{"start":{"line":253,"column":8},"end":{"line":253,"column":21}},"129":{"start":{"line":256,"column":4},"end":{"line":256,"column":23}},"130":{"start":{"line":259,"column":38},"end":{"line":259,"column":61}},"131":{"start":{"line":260,"column":4},"end":{"line":260,"column":93}},"132":{"start":{"line":263,"column":34},"end":{"line":263,"column":57}},"133":{"start":{"line":264,"column":4},"end":{"line":264,"column":89}},"134":{"start":{"line":274,"column":21},"end":{"line":274,"column":44}},"135":{"start":{"line":275,"column":4},"end":{"line":275,"column":65}},"136":{"start":{"line":278,"column":30},"end":{"line":278,"column":53}},"137":{"start":{"line":279,"column":33},"end":{"line":279,"column":59}},"138":{"start":{"line":280,"column":4},"end":{"line":282,"column":5}},"139":{"start":{"line":281,"column":6},"end":{"line":281,"column":42}},"140":{"start":{"line":283,"column":21},"end":{"line":283,"column":23}},"141":{"start":{"line":284,"column":4},"end":{"line":284,"column":21}},"142":{"start":{"line":285,"column":4},"end":{"line":296,"column":5}},"143":{"start":{"line":285,"column":17},"end":{"line":285,"column":18}},"144":{"start":{"line":286,"column":6},"end":{"line":295,"column":7}},"145":{"start":{"line":286,"column":19},"end":{"line":286,"column":20}},"146":{"start":{"line":287,"column":25},"end":{"line":287,"column":44}},"147":{"start":{"line":288,"column":8},"end":{"line":290,"column":9}},"148":{"start":{"line":289,"column":10},"end":{"line":289,"column":19}},"149":{"start":{"line":291,"column":8},"end":{"line":294,"column":9}},"150":{"start":{"line":292,"column":24},"end":{"line":292,"column":38}},"151":{"start":{"line":293,"column":10},"end":{"line":293,"column":34}},"152":{"start":{"line":297,"column":4},"end":{"line":297,"column":20}},"153":{"start":{"line":304,"column":4},"end":{"line":306,"column":5}},"154":{"start":{"line":305,"column":6},"end":{"line":305,"column":32}},"155":{"start":{"line":307,"column":21},"end":{"line":307,"column":23}},"156":{"start":{"line":308,"column":4},"end":{"line":308,"column":21}},"157":{"start":{"line":309,"column":4},"end":{"line":314,"column":5}},"158":{"start":{"line":309,"column":17},"end":{"line":309,"column":18}},"159":{"start":{"line":310,"column":6},"end":{"line":313,"column":7}},"160":{"start":{"line":310,"column":19},"end":{"line":310,"column":20}},"161":{"start":{"line":311,"column":22},"end":{"line":311,"column":36}},"162":{"start":{"line":312,"column":8},"end":{"line":312,"column":32}},"163":{"start":{"line":315,"column":19},"end":{"line":315,"column":72}},"164":{"start":{"line":316,"column":4},"end":{"line":316,"column":47}},"165":{"start":{"line":317,"column":4},"end":{"line":317,"column":32}},"166":{"start":{"line":318,"column":4},"end":{"line":318,"column":18}},"167":{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},"168":{"start":{"line":326,"column":6},"end":{"line":326,"column":35}},"169":{"start":{"line":328,"column":24},"end":{"line":328,"column":26}},"170":{"start":{"line":329,"column":24},"end":{"line":329,"column":26}},"171":{"start":{"line":330,"column":27},"end":{"line":330,"column":29}},"172":{"start":{"line":331,"column":27},"end":{"line":331,"column":29}},"173":{"start":{"line":332,"column":16},"end":{"line":332,"column":17}},"174":{"start":{"line":333,"column":4},"end":{"line":348,"column":5}},"175":{"start":{"line":333,"column":17},"end":{"line":333,"column":18}},"176":{"start":{"line":334,"column":6},"end":{"line":347,"column":7}},"177":{"start":{"line":334,"column":19},"end":{"line":334,"column":20}},"178":{"start":{"line":335,"column":22},"end":{"line":335,"column":36}},"179":{"start":{"line":336,"column":8},"end":{"line":339,"column":9}},"180":{"start":{"line":337,"column":10},"end":{"line":337,"column":18}},"181":{"start":{"line":338,"column":10},"end":{"line":338,"column":19}},"182":{"start":{"line":340,"column":8},"end":{"line":346,"column":9}},"183":{"start":{"line":341,"column":10},"end":{"line":341,"column":34}},"184":{"start":{"line":342,"column":10},"end":{"line":342,"column":39}},"185":{"start":{"line":344,"column":10},"end":{"line":344,"column":34}},"186":{"start":{"line":345,"column":10},"end":{"line":345,"column":39}},"187":{"start":{"line":349,"column":19},"end":{"line":354,"column":5}},"188":{"start":{"line":355,"column":4},"end":{"line":355,"column":35}},"189":{"start":{"line":356,"column":4},"end":{"line":356,"column":18}},"190":{"start":{"line":366,"column":19},"end":{"line":366,"column":20}},"191":{"start":{"line":367,"column":18},"end":{"line":367,"column":32}},"192":{"start":{"line":368,"column":18},"end":{"line":368,"column":19}},"193":{"start":{"line":369,"column":22},"end":{"line":369,"column":23}},"194":{"start":{"line":370,"column":21},"end":{"line":370,"column":38}},"195":{"start":{"line":371,"column":21},"end":{"line":371,"column":22}},"196":{"start":{"line":372,"column":4},"end":{"line":376,"column":5}},"197":{"start":{"line":373,"column":6},"end":{"line":373,"column":34}},"198":{"start":{"line":374,"column":6},"end":{"line":374,"column":46}},"199":{"start":{"line":375,"column":6},"end":{"line":375,"column":33}},"200":{"start":{"line":377,"column":4},"end":{"line":381,"column":5}},"201":{"start":{"line":378,"column":6},"end":{"line":378,"column":40}},"202":{"start":{"line":379,"column":6},"end":{"line":379,"column":55}},"203":{"start":{"line":380,"column":6},"end":{"line":380,"column":39}},"204":{"start":{"line":382,"column":4},"end":{"line":384,"column":5}},"205":{"start":{"line":383,"column":6},"end":{"line":383,"column":13}},"206":{"start":{"line":385,"column":21},"end":{"line":385,"column":99}},"207":{"start":{"line":386,"column":18},"end":{"line":386,"column":48}},"208":{"start":{"line":387,"column":4},"end":{"line":389,"column":5}},"209":{"start":{"line":388,"column":6},"end":{"line":388,"column":19}},"210":{"start":{"line":390,"column":19},"end":{"line":390,"column":21}},"211":{"start":{"line":391,"column":18},"end":{"line":391,"column":30}},"212":{"start":{"line":392,"column":27},"end":{"line":392,"column":28}},"213":{"start":{"line":393,"column":30},"end":{"line":393,"column":31}},"214":{"start":{"line":394,"column":4},"end":{"line":412,"column":5}},"215":{"start":{"line":394,"column":17},"end":{"line":394,"column":25}},"216":{"start":{"line":395,"column":6},"end":{"line":395,"column":30}},"217":{"start":{"line":396,"column":6},"end":{"line":398,"column":7}},"218":{"start":{"line":397,"column":8},"end":{"line":397,"column":38}},"219":{"start":{"line":399,"column":6},"end":{"line":410,"column":7}},"220":{"start":{"line":399,"column":19},"end":{"line":399,"column":30}},"221":{"start":{"line":400,"column":8},"end":{"line":402,"column":9}},"222":{"start":{"line":401,"column":10},"end":{"line":401,"column":17}},"223":{"start":{"line":404,"column":19},"end":{"line":404,"column":52}},"224":{"start":{"line":405,"column":8},"end":{"line":407,"column":9}},"225":{"start":{"line":406,"column":10},"end":{"line":406,"column":42}},"226":{"start":{"line":408,"column":8},"end":{"line":408,"column":61}},"227":{"start":{"line":409,"column":8},"end":{"line":409,"column":30}},"228":{"start":{"line":411,"column":6},"end":{"line":411,"column":25}},"229":{"start":{"line":413,"column":4},"end":{"line":415,"column":5}},"230":{"start":{"line":414,"column":6},"end":{"line":414,"column":13}},"231":{"start":{"line":416,"column":21},"end":{"line":416,"column":67}},"232":{"start":{"line":417,"column":24},"end":{"line":417,"column":79}},"233":{"start":{"line":418,"column":27},"end":{"line":418,"column":111}},"234":{"start":{"line":419,"column":4},"end":{"line":419,"column":55}},"235":{"start":{"line":420,"column":4},"end":{"line":420,"column":51}},"236":{"start":{"line":421,"column":4},"end":{"line":421,"column":26}},"237":{"start":{"line":424,"column":19},"end":{"line":424,"column":53}},"238":{"start":{"line":425,"column":4},"end":{"line":425,"column":35}},"239":{"start":{"line":426,"column":4},"end":{"line":426,"column":23}},"240":{"start":{"line":427,"column":4},"end":{"line":427,"column":48}},"241":{"start":{"line":430,"column":4},"end":{"line":430,"column":23}},"242":{"start":{"line":431,"column":4},"end":{"line":431,"column":41}},"243":{"start":{"line":434,"column":27},"end":{"line":434,"column":61}},"244":{"start":{"line":435,"column":21},"end":{"line":435,"column":35}},"245":{"start":{"line":436,"column":24},"end":{"line":436,"column":41}},"246":{"start":{"line":437,"column":21},"end":{"line":437,"column":80}},"247":{"start":{"line":438,"column":4},"end":{"line":438,"column":49}},"248":{"start":{"line":439,"column":4},"end":{"line":439,"column":20}},"249":{"start":{"line":451,"column":25},"end":{"line":481,"column":5}},"250":{"start":{"line":452,"column":6},"end":{"line":454,"column":7}},"251":{"start":{"line":453,"column":8},"end":{"line":453,"column":20}},"252":{"start":{"line":456,"column":6},"end":{"line":460,"column":7}},"253":{"start":{"line":457,"column":8},"end":{"line":457,"column":74}},"254":{"start":{"line":459,"column":8},"end":{"line":459,"column":53}},"255":{"start":{"line":461,"column":6},"end":{"line":465,"column":7}},"256":{"start":{"line":462,"column":8},"end":{"line":462,"column":27}},"257":{"start":{"line":463,"column":8},"end":{"line":463,"column":41}},"258":{"start":{"line":464,"column":8},"end":{"line":464,"column":21}},"259":{"start":{"line":466,"column":6},"end":{"line":480,"column":7}},"260":{"start":{"line":467,"column":8},"end":{"line":472,"column":9}},"261":{"start":{"line":468,"column":10},"end":{"line":471,"column":11}},"262":{"start":{"line":469,"column":12},"end":{"line":469,"column":33}},"263":{"start":{"line":470,"column":12},"end":{"line":470,"column":47}},"264":{"start":{"line":473,"column":13},"end":{"line":480,"column":7}},"265":{"start":{"line":474,"column":8},"end":{"line":479,"column":9}},"266":{"start":{"line":475,"column":10},"end":{"line":478,"column":11}},"267":{"start":{"line":476,"column":12},"end":{"line":476,"column":33}},"268":{"start":{"line":477,"column":12},"end":{"line":477,"column":47}},"269":{"start":{"line":482,"column":4},"end":{"line":490,"column":5}},"270":{"start":{"line":483,"column":6},"end":{"line":485,"column":9}},"271":{"start":{"line":484,"column":8},"end":{"line":484,"column":45}},"272":{"start":{"line":487,"column":6},"end":{"line":489,"column":9}},"273":{"start":{"line":488,"column":8},"end":{"line":488,"column":45}},"274":{"start":{"line":491,"column":4},"end":{"line":493,"column":5}},"275":{"start":{"line":492,"column":6},"end":{"line":492,"column":28}},"276":{"start":{"line":494,"column":4},"end":{"line":496,"column":5}},"277":{"start":{"line":495,"column":6},"end":{"line":495,"column":30}},"278":{"start":{"line":499,"column":4},"end":{"line":501,"column":5}},"279":{"start":{"line":500,"column":6},"end":{"line":500,"column":13}},"280":{"start":{"line":502,"column":73},"end":{"line":502,"column":95}},"281":{"start":{"line":503,"column":4},"end":{"line":505,"column":5}},"282":{"start":{"line":504,"column":6},"end":{"line":504,"column":97}},"283":{"start":{"line":506,"column":19},"end":{"line":506,"column":102}},"284":{"start":{"line":507,"column":4},"end":{"line":507,"column":18}},"285":{"start":{"line":521,"column":24},"end":{"line":521,"column":36}},"286":{"start":{"line":522,"column":18},"end":{"line":522,"column":48}},"287":{"start":{"line":523,"column":26},"end":{"line":523,"column":46}},"288":{"start":{"line":524,"column":16},"end":{"line":524,"column":17}},"289":{"start":{"line":525,"column":14},"end":{"line":525,"column":36}},"290":{"start":{"line":526,"column":26},"end":{"line":526,"column":28}},"291":{"start":{"line":527,"column":30},"end":{"line":527,"column":32}},"292":{"start":{"line":528,"column":29},"end":{"line":528,"column":31}},"293":{"start":{"line":529,"column":4},"end":{"line":558,"column":5}},"294":{"start":{"line":530,"column":21},"end":{"line":530,"column":50}},"295":{"start":{"line":531,"column":24},"end":{"line":531,"column":43}},"296":{"start":{"line":533,"column":6},"end":{"line":543,"column":7}},"297":{"start":{"line":534,"column":8},"end":{"line":534,"column":74}},"298":{"start":{"line":536,"column":31},"end":{"line":536,"column":51}},"299":{"start":{"line":537,"column":8},"end":{"line":542,"column":9}},"300":{"start":{"line":538,"column":34},"end":{"line":538,"column":56}},"301":{"start":{"line":539,"column":10},"end":{"line":539,"column":97}},"302":{"start":{"line":541,"column":10},"end":{"line":541,"column":140}},"303":{"start":{"line":544,"column":6},"end":{"line":546,"column":7}},"304":{"start":{"line":545,"column":8},"end":{"line":545,"column":39}},"305":{"start":{"line":547,"column":6},"end":{"line":550,"column":7}},"306":{"start":{"line":548,"column":8},"end":{"line":548,"column":33}},"307":{"start":{"line":549,"column":8},"end":{"line":549,"column":14}},"308":{"start":{"line":551,"column":6},"end":{"line":557,"column":7}},"309":{"start":{"line":552,"column":8},"end":{"line":552,"column":37}},"310":{"start":{"line":553,"column":8},"end":{"line":553,"column":27}},"311":{"start":{"line":555,"column":8},"end":{"line":555,"column":36}},"312":{"start":{"line":556,"column":8},"end":{"line":556,"column":25}},"313":{"start":{"line":559,"column":4},"end":{"line":561,"column":5}},"314":{"start":{"line":560,"column":6},"end":{"line":560,"column":78}},"315":{"start":{"line":562,"column":4},"end":{"line":565,"column":5}},"316":{"start":{"line":563,"column":6},"end":{"line":563,"column":72}},"317":{"start":{"line":563,"column":34},"end":{"line":563,"column":72}},"318":{"start":{"line":564,"column":6},"end":{"line":564,"column":127}},"319":{"start":{"line":566,"column":4},"end":{"line":569,"column":5}},"320":{"start":{"line":567,"column":6},"end":{"line":567,"column":72}},"321":{"start":{"line":567,"column":34},"end":{"line":567,"column":72}},"322":{"start":{"line":568,"column":6},"end":{"line":568,"column":127}},"323":{"start":{"line":570,"column":4},"end":{"line":570,"column":18}},"324":{"start":{"line":573,"column":25},"end":{"line":573,"column":52}},"325":{"start":{"line":574,"column":4},"end":{"line":585,"column":7}},"326":{"start":{"line":575,"column":6},"end":{"line":577,"column":7}},"327":{"start":{"line":576,"column":8},"end":{"line":576,"column":20}},"328":{"start":{"line":578,"column":6},"end":{"line":581,"column":7}},"329":{"start":{"line":579,"column":8},"end":{"line":579,"column":37}},"330":{"start":{"line":580,"column":8},"end":{"line":580,"column":21}},"331":{"start":{"line":582,"column":6},"end":{"line":584,"column":8}},"332":{"start":{"line":586,"column":4},"end":{"line":586,"column":26}},"333":{"start":{"line":589,"column":25},"end":{"line":589,"column":75}},"334":{"start":{"line":590,"column":4},"end":{"line":605,"column":7}},"335":{"start":{"line":591,"column":6},"end":{"line":593,"column":7}},"336":{"start":{"line":592,"column":8},"end":{"line":592,"column":20}},"337":{"start":{"line":594,"column":6},"end":{"line":597,"column":7}},"338":{"start":{"line":595,"column":8},"end":{"line":595,"column":37}},"339":{"start":{"line":596,"column":8},"end":{"line":596,"column":21}},"340":{"start":{"line":598,"column":6},"end":{"line":600,"column":7}},"341":{"start":{"line":599,"column":8},"end":{"line":599,"column":20}},"342":{"start":{"line":601,"column":21},"end":{"line":601,"column":59}},"343":{"start":{"line":602,"column":6},"end":{"line":604,"column":7}},"344":{"start":{"line":603,"column":8},"end":{"line":603,"column":37}},"345":{"start":{"line":606,"column":4},"end":{"line":606,"column":26}},"346":{"start":{"line":609,"column":25},"end":{"line":609,"column":75}},"347":{"start":{"line":610,"column":4},"end":{"line":625,"column":7}},"348":{"start":{"line":611,"column":6},"end":{"line":613,"column":7}},"349":{"start":{"line":612,"column":8},"end":{"line":612,"column":20}},"350":{"start":{"line":614,"column":6},"end":{"line":617,"column":7}},"351":{"start":{"line":615,"column":8},"end":{"line":615,"column":37}},"352":{"start":{"line":616,"column":8},"end":{"line":616,"column":21}},"353":{"start":{"line":618,"column":6},"end":{"line":620,"column":7}},"354":{"start":{"line":619,"column":8},"end":{"line":619,"column":20}},"355":{"start":{"line":621,"column":21},"end":{"line":621,"column":62}},"356":{"start":{"line":622,"column":6},"end":{"line":624,"column":7}},"357":{"start":{"line":623,"column":8},"end":{"line":623,"column":37}},"358":{"start":{"line":626,"column":4},"end":{"line":626,"column":26}},"359":{"start":{"line":629,"column":25},"end":{"line":629,"column":52}},"360":{"start":{"line":630,"column":4},"end":{"line":635,"column":7}},"361":{"start":{"line":631,"column":6},"end":{"line":633,"column":7}},"362":{"start":{"line":632,"column":8},"end":{"line":632,"column":20}},"363":{"start":{"line":634,"column":6},"end":{"line":634,"column":48}},"364":{"start":{"line":636,"column":4},"end":{"line":636,"column":26}},"365":{"start":{"line":639,"column":25},"end":{"line":639,"column":52}},"366":{"start":{"line":640,"column":4},"end":{"line":645,"column":7}},"367":{"start":{"line":641,"column":6},"end":{"line":643,"column":7}},"368":{"start":{"line":642,"column":8},"end":{"line":642,"column":20}},"369":{"start":{"line":644,"column":6},"end":{"line":644,"column":48}},"370":{"start":{"line":646,"column":4},"end":{"line":646,"column":26}},"371":{"start":{"line":649,"column":25},"end":{"line":649,"column":52}},"372":{"start":{"line":650,"column":4},"end":{"line":654,"column":7}},"373":{"start":{"line":651,"column":6},"end":{"line":653,"column":7}},"374":{"start":{"line":652,"column":8},"end":{"line":652,"column":50}},"375":{"start":{"line":655,"column":4},"end":{"line":655,"column":26}},"376":{"start":{"line":658,"column":29},"end":{"line":658,"column":59}},"377":{"start":{"line":659,"column":4},"end":{"line":659,"column":40}},"378":{"start":{"line":662,"column":29},"end":{"line":662,"column":59}},"379":{"start":{"line":663,"column":4},"end":{"line":663,"column":42}},"380":{"start":{"line":666,"column":4},"end":{"line":666,"column":58}},"381":{"start":{"line":669,"column":4},"end":{"line":669,"column":59}},"382":{"start":{"line":672,"column":4},"end":{"line":672,"column":62}},"383":{"start":{"line":675,"column":4},"end":{"line":675,"column":61}},"384":{"start":{"line":678,"column":4},"end":{"line":678,"column":57}},"385":{"start":{"line":681,"column":4},"end":{"line":686,"column":7}},"386":{"start":{"line":682,"column":6},"end":{"line":684,"column":7}},"387":{"start":{"line":683,"column":8},"end":{"line":683,"column":28}},"388":{"start":{"line":685,"column":6},"end":{"line":685,"column":43}},"389":{"start":{"line":689,"column":4},"end":{"line":689,"column":88}},"390":{"start":{"line":692,"column":4},"end":{"line":692,"column":71}},"391":{"start":{"line":695,"column":4},"end":{"line":695,"column":70}},"392":{"start":{"line":698,"column":30},"end":{"line":707,"column":5}},"393":{"start":{"line":699,"column":6},"end":{"line":701,"column":7}},"394":{"start":{"line":700,"column":8},"end":{"line":700,"column":40}},"395":{"start":{"line":702,"column":6},"end":{"line":706,"column":7}},"396":{"start":{"line":703,"column":8},"end":{"line":703,"column":28}},"397":{"start":{"line":705,"column":8},"end":{"line":705,"column":46}},"398":{"start":{"line":708,"column":4},"end":{"line":708,"column":44}},"399":{"start":{"line":711,"column":21},"end":{"line":711,"column":35}},"400":{"start":{"line":712,"column":24},"end":{"line":712,"column":41}},"401":{"start":{"line":713,"column":19},"end":{"line":713,"column":21}},"402":{"start":{"line":714,"column":4},"end":{"line":730,"column":5}},"403":{"start":{"line":714,"column":17},"end":{"line":714,"column":18}},"404":{"start":{"line":715,"column":22},"end":{"line":715,"column":24}},"405":{"start":{"line":716,"column":6},"end":{"line":728,"column":7}},"406":{"start":{"line":716,"column":19},"end":{"line":716,"column":20}},"407":{"start":{"line":717,"column":20},"end":{"line":717,"column":37}},"408":{"start":{"line":718,"column":8},"end":{"line":727,"column":9}},"409":{"start":{"line":719,"column":10},"end":{"line":719,"column":64}},"410":{"start":{"line":721,"column":31},"end":{"line":721,"column":59}},"411":{"start":{"line":722,"column":10},"end":{"line":726,"column":11}},"412":{"start":{"line":723,"column":12},"end":{"line":723,"column":56}},"413":{"start":{"line":725,"column":12},"end":{"line":725,"column":50}},"414":{"start":{"line":729,"column":6},"end":{"line":729,"column":27}},"415":{"start":{"line":731,"column":4},"end":{"line":731,"column":63}},"416":{"start":{"line":734,"column":4},"end":{"line":734,"column":57}},"417":{"start":{"line":742,"column":4},"end":{"line":747,"column":7}},"418":{"start":{"line":743,"column":6},"end":{"line":745,"column":7}},"419":{"start":{"line":744,"column":8},"end":{"line":744,"column":28}},"420":{"start":{"line":746,"column":6},"end":{"line":746,"column":43}},"421":{"start":{"line":750,"column":4},"end":{"line":755,"column":7}},"422":{"start":{"line":751,"column":6},"end":{"line":753,"column":7}},"423":{"start":{"line":752,"column":8},"end":{"line":752,"column":28}},"424":{"start":{"line":754,"column":6},"end":{"line":754,"column":33}},"425":{"start":{"line":758,"column":4},"end":{"line":763,"column":7}},"426":{"start":{"line":759,"column":6},"end":{"line":761,"column":7}},"427":{"start":{"line":760,"column":8},"end":{"line":760,"column":28}},"428":{"start":{"line":762,"column":6},"end":{"line":762,"column":33}},"429":{"start":{"line":766,"column":4},"end":{"line":771,"column":7}},"430":{"start":{"line":767,"column":6},"end":{"line":769,"column":7}},"431":{"start":{"line":768,"column":8},"end":{"line":768,"column":28}},"432":{"start":{"line":770,"column":6},"end":{"line":770,"column":32}},"433":{"start":{"line":774,"column":4},"end":{"line":779,"column":7}},"434":{"start":{"line":775,"column":6},"end":{"line":777,"column":7}},"435":{"start":{"line":776,"column":8},"end":{"line":776,"column":28}},"436":{"start":{"line":778,"column":6},"end":{"line":778,"column":33}},"437":{"start":{"line":782,"column":4},"end":{"line":787,"column":7}},"438":{"start":{"line":783,"column":6},"end":{"line":785,"column":7}},"439":{"start":{"line":784,"column":8},"end":{"line":784,"column":28}},"440":{"start":{"line":786,"column":6},"end":{"line":786,"column":33}},"441":{"start":{"line":790,"column":4},"end":{"line":795,"column":7}},"442":{"start":{"line":791,"column":6},"end":{"line":793,"column":7}},"443":{"start":{"line":792,"column":8},"end":{"line":792,"column":28}},"444":{"start":{"line":794,"column":6},"end":{"line":794,"column":34}},"445":{"start":{"line":798,"column":4},"end":{"line":803,"column":7}},"446":{"start":{"line":799,"column":6},"end":{"line":801,"column":7}},"447":{"start":{"line":800,"column":8},"end":{"line":800,"column":28}},"448":{"start":{"line":802,"column":6},"end":{"line":802,"column":32}},"449":{"start":{"line":806,"column":4},"end":{"line":811,"column":7}},"450":{"start":{"line":807,"column":6},"end":{"line":809,"column":7}},"451":{"start":{"line":808,"column":8},"end":{"line":808,"column":28}},"452":{"start":{"line":810,"column":6},"end":{"line":810,"column":33}},"453":{"start":{"line":814,"column":4},"end":{"line":819,"column":7}},"454":{"start":{"line":815,"column":6},"end":{"line":817,"column":7}},"455":{"start":{"line":816,"column":8},"end":{"line":816,"column":28}},"456":{"start":{"line":818,"column":6},"end":{"line":818,"column":33}},"457":{"start":{"line":822,"column":4},"end":{"line":827,"column":7}},"458":{"start":{"line":823,"column":6},"end":{"line":825,"column":7}},"459":{"start":{"line":824,"column":8},"end":{"line":824,"column":28}},"460":{"start":{"line":826,"column":6},"end":{"line":826,"column":34}},"461":{"start":{"line":830,"column":4},"end":{"line":835,"column":7}},"462":{"start":{"line":831,"column":6},"end":{"line":833,"column":7}},"463":{"start":{"line":832,"column":8},"end":{"line":832,"column":28}},"464":{"start":{"line":834,"column":6},"end":{"line":834,"column":32}},"465":{"start":{"line":838,"column":4},"end":{"line":843,"column":7}},"466":{"start":{"line":839,"column":6},"end":{"line":841,"column":7}},"467":{"start":{"line":840,"column":8},"end":{"line":840,"column":28}},"468":{"start":{"line":842,"column":6},"end":{"line":842,"column":33}},"469":{"start":{"line":846,"column":4},"end":{"line":851,"column":7}},"470":{"start":{"line":847,"column":6},"end":{"line":849,"column":7}},"471":{"start":{"line":848,"column":8},"end":{"line":848,"column":28}},"472":{"start":{"line":850,"column":6},"end":{"line":850,"column":33}},"473":{"start":{"line":854,"column":4},"end":{"line":859,"column":7}},"474":{"start":{"line":855,"column":6},"end":{"line":857,"column":7}},"475":{"start":{"line":856,"column":8},"end":{"line":856,"column":28}},"476":{"start":{"line":858,"column":6},"end":{"line":858,"column":34}},"477":{"start":{"line":862,"column":4},"end":{"line":862,"column":60}},"478":{"start":{"line":865,"column":4},"end":{"line":870,"column":7}},"479":{"start":{"line":866,"column":6},"end":{"line":868,"column":7}},"480":{"start":{"line":867,"column":8},"end":{"line":867,"column":28}},"481":{"start":{"line":869,"column":6},"end":{"line":869,"column":45}},"482":{"start":{"line":873,"column":16},"end":{"line":873,"column":26}},"483":{"start":{"line":874,"column":18},"end":{"line":874,"column":30}},"484":{"start":{"line":875,"column":4},"end":{"line":875,"column":62}},"485":{"start":{"line":878,"column":24},"end":{"line":878,"column":58}},"486":{"start":{"line":879,"column":21},"end":{"line":879,"column":79}},"487":{"start":{"line":880,"column":18},"end":{"line":880,"column":43}},"488":{"start":{"line":881,"column":4},"end":{"line":883,"column":5}},"489":{"start":{"line":882,"column":6},"end":{"line":882,"column":60}},"490":{"start":{"line":884,"column":4},"end":{"line":884,"column":26}},"491":{"start":{"line":885,"column":4},"end":{"line":889,"column":5}},"492":{"start":{"line":886,"column":26},"end":{"line":886,"column":80}},"493":{"start":{"line":887,"column":25},"end":{"line":887,"column":83}},"494":{"start":{"line":888,"column":6},"end":{"line":888,"column":79}},"495":{"start":{"line":890,"column":4},"end":{"line":890,"column":72}},"496":{"start":{"line":912,"column":17},"end":{"line":912,"column":28}},"497":{"start":{"line":913,"column":31},"end":{"line":913,"column":35}},"498":{"start":{"line":914,"column":4},"end":{"line":923,"column":7}},"499":{"start":{"line":915,"column":6},"end":{"line":917,"column":7}},"500":{"start":{"line":916,"column":8},"end":{"line":916,"column":15}},"501":{"start":{"line":918,"column":30},"end":{"line":918,"column":86}},"502":{"start":{"line":919,"column":6},"end":{"line":921,"column":7}},"503":{"start":{"line":920,"column":8},"end":{"line":920,"column":15}},"504":{"start":{"line":922,"column":6},"end":{"line":922,"column":50}},"505":{"start":{"line":924,"column":63},"end":{"line":924,"column":67}},"506":{"start":{"line":925,"column":42},"end":{"line":933,"column":6}},"507":{"start":{"line":934,"column":4},"end":{"line":934,"column":52}},"508":{"start":{"line":945,"column":21},"end":{"line":945,"column":35}},"509":{"start":{"line":946,"column":4},"end":{"line":948,"column":5}},"510":{"start":{"line":947,"column":6},"end":{"line":947,"column":22}},"511":{"start":{"line":949,"column":4},"end":{"line":949,"column":27}},"512":{"start":{"line":952,"column":4},"end":{"line":957,"column":7}},"513":{"start":{"line":953,"column":6},"end":{"line":955,"column":7}},"514":{"start":{"line":954,"column":8},"end":{"line":954,"column":28}},"515":{"start":{"line":956,"column":6},"end":{"line":956,"column":32}},"516":{"start":{"line":960,"column":4},"end":{"line":965,"column":7}},"517":{"start":{"line":961,"column":6},"end":{"line":963,"column":7}},"518":{"start":{"line":962,"column":8},"end":{"line":962,"column":28}},"519":{"start":{"line":964,"column":6},"end":{"line":964,"column":34}},"520":{"start":{"line":968,"column":4},"end":{"line":973,"column":7}},"521":{"start":{"line":969,"column":6},"end":{"line":971,"column":7}},"522":{"start":{"line":970,"column":8},"end":{"line":970,"column":28}},"523":{"start":{"line":972,"column":6},"end":{"line":972,"column":32}},"524":{"start":{"line":976,"column":4},"end":{"line":981,"column":7}},"525":{"start":{"line":977,"column":6},"end":{"line":979,"column":7}},"526":{"start":{"line":978,"column":8},"end":{"line":978,"column":28}},"527":{"start":{"line":980,"column":6},"end":{"line":980,"column":32}},"528":{"start":{"line":984,"column":4},"end":{"line":984,"column":59}},"529":{"start":{"line":987,"column":4},"end":{"line":992,"column":7}},"530":{"start":{"line":988,"column":6},"end":{"line":990,"column":7}},"531":{"start":{"line":989,"column":8},"end":{"line":989,"column":28}},"532":{"start":{"line":991,"column":6},"end":{"line":991,"column":45}},"533":{"start":{"line":995,"column":4},"end":{"line":995,"column":60}},"534":{"start":{"line":998,"column":4},"end":{"line":1003,"column":7}},"535":{"start":{"line":999,"column":6},"end":{"line":1001,"column":7}},"536":{"start":{"line":1000,"column":8},"end":{"line":1000,"column":28}},"537":{"start":{"line":1002,"column":6},"end":{"line":1002,"column":45}},"538":{"start":{"line":1006,"column":4},"end":{"line":1006,"column":59}},"539":{"start":{"line":1009,"column":4},"end":{"line":1014,"column":7}},"540":{"start":{"line":1010,"column":6},"end":{"line":1012,"column":7}},"541":{"start":{"line":1011,"column":8},"end":{"line":1011,"column":28}},"542":{"start":{"line":1013,"column":6},"end":{"line":1013,"column":44}},"543":{"start":{"line":1017,"column":4},"end":{"line":1017,"column":42}},"544":{"start":{"line":1020,"column":4},"end":{"line":1020,"column":30}},"545":{"start":{"line":1021,"column":4},"end":{"line":1021,"column":29}},"546":{"start":{"line":1024,"column":20},"end":{"line":1024,"column":32}},"547":{"start":{"line":1025,"column":4},"end":{"line":1047,"column":6}},"548":{"start":{"line":1026,"column":22},"end":{"line":1026,"column":30}},"549":{"start":{"line":1027,"column":22},"end":{"line":1027,"column":30}},"550":{"start":{"line":1028,"column":6},"end":{"line":1030,"column":7}},"551":{"start":{"line":1029,"column":8},"end":{"line":1029,"column":17}},"552":{"start":{"line":1031,"column":6},"end":{"line":1033,"column":7}},"553":{"start":{"line":1032,"column":8},"end":{"line":1032,"column":18}},"554":{"start":{"line":1034,"column":6},"end":{"line":1036,"column":7}},"555":{"start":{"line":1035,"column":8},"end":{"line":1035,"column":17}},"556":{"start":{"line":1037,"column":6},"end":{"line":1039,"column":7}},"557":{"start":{"line":1038,"column":8},"end":{"line":1038,"column":17}},"558":{"start":{"line":1040,"column":6},"end":{"line":1042,"column":7}},"559":{"start":{"line":1041,"column":8},"end":{"line":1041,"column":18}},"560":{"start":{"line":1043,"column":6},"end":{"line":1046,"column":8}},"561":{"start":{"line":1050,"column":17},"end":{"line":1050,"column":29}},"562":{"start":{"line":1051,"column":17},"end":{"line":1051,"column":32}},"563":{"start":{"line":1052,"column":28},"end":{"line":1052,"column":30}},"564":{"start":{"line":1053,"column":4},"end":{"line":1058,"column":5}},"565":{"start":{"line":1053,"column":19},"end":{"line":1053,"column":20}},"566":{"start":{"line":1054,"column":6},"end":{"line":1054,"column":32}},"567":{"start":{"line":1055,"column":6},"end":{"line":1057,"column":7}},"568":{"start":{"line":1055,"column":21},"end":{"line":1055,"column":22}},"569":{"start":{"line":1056,"column":8},"end":{"line":1056,"column":52}},"570":{"start":{"line":1059,"column":4},"end":{"line":1059,"column":27}},"571":{"start":{"line":1062,"column":22},"end":{"line":1062,"column":24}},"572":{"start":{"line":1063,"column":19},"end":{"line":1063,"column":33}},"573":{"start":{"line":1064,"column":22},"end":{"line":1064,"column":39}},"574":{"start":{"line":1065,"column":4},"end":{"line":1087,"column":5}},"575":{"start":{"line":1066,"column":28},"end":{"line":1066,"column":53}},"576":{"start":{"line":1067,"column":31},"end":{"line":1067,"column":59}},"577":{"start":{"line":1068,"column":6},"end":{"line":1068,"column":51}},"578":{"start":{"line":1069,"column":6},"end":{"line":1069,"column":60}},"579":{"start":{"line":1070,"column":6},"end":{"line":1082,"column":7}},"580":{"start":{"line":1071,"column":18},"end":{"line":1071,"column":44}},"581":{"start":{"line":1072,"column":8},"end":{"line":1074,"column":9}},"582":{"start":{"line":1072,"column":21},"end":{"line":1072,"column":22}},"583":{"start":{"line":1073,"column":10},"end":{"line":1073,"column":28}},"584":{"start":{"line":1075,"column":13},"end":{"line":1082,"column":7}},"585":{"start":{"line":1076,"column":21},"end":{"line":1076,"column":48}},"586":{"start":{"line":1077,"column":8},"end":{"line":1079,"column":9}},"587":{"start":{"line":1077,"column":21},"end":{"line":1077,"column":22}},"588":{"start":{"line":1078,"column":10},"end":{"line":1078,"column":37}},"589":{"start":{"line":1081,"column":8},"end":{"line":1081,"column":99}},"590":{"start":{"line":1084,"column":6},"end":{"line":1086,"column":7}},"591":{"start":{"line":1084,"column":19},"end":{"line":1084,"column":20}},"592":{"start":{"line":1085,"column":8},"end":{"line":1085,"column":36}},"593":{"start":{"line":1088,"column":19},"end":{"line":1088,"column":21}},"594":{"start":{"line":1089,"column":4},"end":{"line":1092,"column":5}},"595":{"start":{"line":1089,"column":17},"end":{"line":1089,"column":18}},"596":{"start":{"line":1090,"column":20},"end":{"line":1090,"column":32}},"597":{"start":{"line":1091,"column":6},"end":{"line":1091,"column":95}},"598":{"start":{"line":1093,"column":21},"end":{"line":1093,"column":72}},"599":{"start":{"line":1094,"column":4},"end":{"line":1094,"column":63}},"600":{"start":{"line":1095,"column":4},"end":{"line":1095,"column":20}},"601":{"start":{"line":1099,"column":21},"end":{"line":1099,"column":35}},"602":{"start":{"line":1100,"column":19},"end":{"line":1100,"column":35}},"603":{"start":{"line":1101,"column":20},"end":{"line":1101,"column":37}},"604":{"start":{"line":1102,"column":21},"end":{"line":1102,"column":41}},"605":{"start":{"line":1103,"column":24},"end":{"line":1103,"column":47}},"606":{"start":{"line":1104,"column":4},"end":{"line":1201,"column":5}},"607":{"start":{"line":1105,"column":46},"end":{"line":1111,"column":7}},"608":{"start":{"line":1112,"column":6},"end":{"line":1200,"column":7}},"609":{"start":{"line":1113,"column":8},"end":{"line":1171,"column":9}},"610":{"start":{"line":1114,"column":31},"end":{"line":1120,"column":11}},"611":{"start":{"line":1121,"column":10},"end":{"line":1132,"column":11}},"612":{"start":{"line":1122,"column":12},"end":{"line":1131,"column":15}},"613":{"start":{"line":1123,"column":14},"end":{"line":1125,"column":15}},"614":{"start":{"line":1124,"column":16},"end":{"line":1124,"column":23}},"615":{"start":{"line":1126,"column":24},"end":{"line":1126,"column":38}},"616":{"start":{"line":1127,"column":14},"end":{"line":1129,"column":15}},"617":{"start":{"line":1128,"column":16},"end":{"line":1128,"column":31}},"618":{"start":{"line":1130,"column":14},"end":{"line":1130,"column":66}},"619":{"start":{"line":1134,"column":36},"end":{"line":1138,"column":11}},"620":{"start":{"line":1139,"column":10},"end":{"line":1170,"column":11}},"621":{"start":{"line":1140,"column":12},"end":{"line":1169,"column":15}},"622":{"start":{"line":1141,"column":33},"end":{"line":1141,"column":57}},"623":{"start":{"line":1142,"column":14},"end":{"line":1150,"column":15}},"624":{"start":{"line":1143,"column":16},"end":{"line":1143,"column":65}},"625":{"start":{"line":1144,"column":21},"end":{"line":1150,"column":15}},"626":{"start":{"line":1145,"column":16},"end":{"line":1145,"column":66}},"627":{"start":{"line":1146,"column":21},"end":{"line":1150,"column":15}},"628":{"start":{"line":1147,"column":16},"end":{"line":1147,"column":66}},"629":{"start":{"line":1148,"column":21},"end":{"line":1150,"column":15}},"630":{"start":{"line":1149,"column":16},"end":{"line":1149,"column":67}},"631":{"start":{"line":1152,"column":14},"end":{"line":1158,"column":15}},"632":{"start":{"line":1153,"column":16},"end":{"line":1153,"column":43}},"633":{"start":{"line":1154,"column":21},"end":{"line":1158,"column":15}},"634":{"start":{"line":1155,"column":16},"end":{"line":1155,"column":42}},"635":{"start":{"line":1157,"column":16},"end":{"line":1157,"column":91}},"636":{"start":{"line":1159,"column":14},"end":{"line":1168,"column":15}},"637":{"start":{"line":1160,"column":16},"end":{"line":1167,"column":19}},"638":{"start":{"line":1161,"column":18},"end":{"line":1166,"column":19}},"639":{"start":{"line":1162,"column":20},"end":{"line":1164,"column":21}},"640":{"start":{"line":1163,"column":22},"end":{"line":1163,"column":52}},"641":{"start":{"line":1165,"column":20},"end":{"line":1165,"column":67}},"642":{"start":{"line":1172,"column":8},"end":{"line":1198,"column":9}},"643":{"start":{"line":1173,"column":10},"end":{"line":1197,"column":11}},"644":{"start":{"line":1174,"column":33},"end":{"line":1174,"column":41}},"645":{"start":{"line":1175,"column":12},"end":{"line":1189,"column":13}},"646":{"start":{"line":1175,"column":25},"end":{"line":1175,"column":30}},"647":{"start":{"line":1176,"column":14},"end":{"line":1188,"column":16}},"648":{"start":{"line":1190,"column":12},"end":{"line":1196,"column":14}},"649":{"start":{"line":1199,"column":8},"end":{"line":1199,"column":15}},"650":{"start":{"line":1202,"column":4},"end":{"line":1216,"column":5}},"651":{"start":{"line":1202,"column":17},"end":{"line":1202,"column":18}},"652":{"start":{"line":1203,"column":6},"end":{"line":1215,"column":8}},"653":{"start":{"line":1217,"column":4},"end":{"line":1223,"column":6}},"654":{"start":{"line":1227,"column":25},"end":{"line":1227,"column":58}},"655":{"start":{"line":1228,"column":4},"end":{"line":1230,"column":5}},"656":{"start":{"line":1229,"column":6},"end":{"line":1229,"column":21}},"657":{"start":{"line":1231,"column":4},"end":{"line":1285,"column":5}},"658":{"start":{"line":1232,"column":6},"end":{"line":1282,"column":7}},"659":{"start":{"line":1233,"column":8},"end":{"line":1233,"column":41}},"660":{"start":{"line":1234,"column":13},"end":{"line":1282,"column":7}},"661":{"start":{"line":1235,"column":8},"end":{"line":1235,"column":40}},"662":{"start":{"line":1237,"column":8},"end":{"line":1281,"column":9}},"663":{"start":{"line":1239,"column":12},"end":{"line":1239,"column":63}},"664":{"start":{"line":1240,"column":12},"end":{"line":1240,"column":18}},"665":{"start":{"line":1242,"column":12},"end":{"line":1242,"column":64}},"666":{"start":{"line":1243,"column":12},"end":{"line":1243,"column":18}},"667":{"start":{"line":1245,"column":12},"end":{"line":1245,"column":67}},"668":{"start":{"line":1246,"column":12},"end":{"line":1246,"column":18}},"669":{"start":{"line":1248,"column":12},"end":{"line":1248,"column":66}},"670":{"start":{"line":1249,"column":12},"end":{"line":1249,"column":18}},"671":{"start":{"line":1251,"column":12},"end":{"line":1251,"column":62}},"672":{"start":{"line":1252,"column":12},"end":{"line":1252,"column":18}},"673":{"start":{"line":1254,"column":12},"end":{"line":1258,"column":13}},"674":{"start":{"line":1255,"column":14},"end":{"line":1255,"column":75}},"675":{"start":{"line":1257,"column":14},"end":{"line":1257,"column":95}},"676":{"start":{"line":1259,"column":12},"end":{"line":1259,"column":18}},"677":{"start":{"line":1261,"column":12},"end":{"line":1261,"column":75}},"678":{"start":{"line":1262,"column":12},"end":{"line":1262,"column":18}},"679":{"start":{"line":1264,"column":12},"end":{"line":1264,"column":74}},"680":{"start":{"line":1265,"column":12},"end":{"line":1265,"column":18}},"681":{"start":{"line":1267,"column":12},"end":{"line":1267,"column":62}},"682":{"start":{"line":1268,"column":12},"end":{"line":1268,"column":18}},"683":{"start":{"line":1270,"column":12},"end":{"line":1270,"column":64}},"684":{"start":{"line":1271,"column":12},"end":{"line":1271,"column":18}},"685":{"start":{"line":1273,"column":12},"end":{"line":1273,"column":64}},"686":{"start":{"line":1274,"column":12},"end":{"line":1274,"column":18}},"687":{"start":{"line":1276,"column":12},"end":{"line":1276,"column":64}},"688":{"start":{"line":1277,"column":12},"end":{"line":1277,"column":18}},"689":{"start":{"line":1279,"column":12},"end":{"line":1279,"column":63}},"690":{"start":{"line":1280,"column":12},"end":{"line":1280,"column":18}},"691":{"start":{"line":1284,"column":6},"end":{"line":1284,"column":64}},"692":{"start":{"line":1286,"column":4},"end":{"line":1288,"column":5}},"693":{"start":{"line":1287,"column":6},"end":{"line":1287,"column":13}},"694":{"start":{"line":1289,"column":4},"end":{"line":1305,"column":5}},"695":{"start":{"line":1290,"column":6},"end":{"line":1296,"column":8}},"696":{"start":{"line":1298,"column":6},"end":{"line":1304,"column":8}},"697":{"start":{"line":1309,"column":19},"end":{"line":1309,"column":44}},"698":{"start":{"line":1310,"column":22},"end":{"line":1310,"column":50}},"699":{"start":{"line":1311,"column":4},"end":{"line":1313,"column":5}},"700":{"start":{"line":1312,"column":6},"end":{"line":1312,"column":32}},"701":{"start":{"line":1314,"column":4},"end":{"line":1316,"column":5}},"702":{"start":{"line":1315,"column":6},"end":{"line":1315,"column":38}},"703":{"start":{"line":1317,"column":19},"end":{"line":1317,"column":21}},"704":{"start":{"line":1318,"column":33},"end":{"line":1318,"column":68}},"705":{"start":{"line":1319,"column":28},"end":{"line":1319,"column":70}},"706":{"start":{"line":1320,"column":4},"end":{"line":1400,"column":5}},"707":{"start":{"line":1320,"column":17},"end":{"line":1320,"column":18}},"708":{"start":{"line":1321,"column":22},"end":{"line":1321,"column":24}},"709":{"start":{"line":1322,"column":6},"end":{"line":1398,"column":7}},"710":{"start":{"line":1322,"column":19},"end":{"line":1322,"column":20}},"711":{"start":{"line":1324,"column":8},"end":{"line":1332,"column":9}},"712":{"start":{"line":1325,"column":10},"end":{"line":1325,"column":54}},"713":{"start":{"line":1326,"column":15},"end":{"line":1332,"column":9}},"714":{"start":{"line":1327,"column":10},"end":{"line":1327,"column":54}},"715":{"start":{"line":1328,"column":15},"end":{"line":1332,"column":9}},"716":{"start":{"line":1329,"column":10},"end":{"line":1329,"column":54}},"717":{"start":{"line":1331,"column":10},"end":{"line":1331,"column":54}},"718":{"start":{"line":1334,"column":8},"end":{"line":1342,"column":9}},"719":{"start":{"line":1335,"column":10},"end":{"line":1335,"column":56}},"720":{"start":{"line":1336,"column":15},"end":{"line":1342,"column":9}},"721":{"start":{"line":1337,"column":10},"end":{"line":1337,"column":56}},"722":{"start":{"line":1338,"column":15},"end":{"line":1342,"column":9}},"723":{"start":{"line":1339,"column":10},"end":{"line":1339,"column":56}},"724":{"start":{"line":1341,"column":10},"end":{"line":1341,"column":56}},"725":{"start":{"line":1343,"column":8},"end":{"line":1397,"column":9}},"726":{"start":{"line":1344,"column":10},"end":{"line":1394,"column":11}},"727":{"start":{"line":1345,"column":12},"end":{"line":1345,"column":38}},"728":{"start":{"line":1346,"column":17},"end":{"line":1394,"column":11}},"729":{"start":{"line":1347,"column":12},"end":{"line":1347,"column":33}},"730":{"start":{"line":1349,"column":12},"end":{"line":1393,"column":13}},"731":{"start":{"line":1351,"column":16},"end":{"line":1351,"column":56}},"732":{"start":{"line":1352,"column":16},"end":{"line":1352,"column":22}},"733":{"start":{"line":1354,"column":16},"end":{"line":1354,"column":57}},"734":{"start":{"line":1355,"column":16},"end":{"line":1355,"column":22}},"735":{"start":{"line":1357,"column":16},"end":{"line":1357,"column":60}},"736":{"start":{"line":1358,"column":16},"end":{"line":1358,"column":22}},"737":{"start":{"line":1360,"column":16},"end":{"line":1360,"column":59}},"738":{"start":{"line":1361,"column":16},"end":{"line":1361,"column":22}},"739":{"start":{"line":1363,"column":16},"end":{"line":1363,"column":55}},"740":{"start":{"line":1364,"column":16},"end":{"line":1364,"column":22}},"741":{"start":{"line":1366,"column":16},"end":{"line":1370,"column":17}},"742":{"start":{"line":1367,"column":18},"end":{"line":1367,"column":72}},"743":{"start":{"line":1369,"column":18},"end":{"line":1369,"column":88}},"744":{"start":{"line":1371,"column":16},"end":{"line":1371,"column":22}},"745":{"start":{"line":1373,"column":16},"end":{"line":1373,"column":68}},"746":{"start":{"line":1374,"column":16},"end":{"line":1374,"column":22}},"747":{"start":{"line":1376,"column":16},"end":{"line":1376,"column":67}},"748":{"start":{"line":1377,"column":16},"end":{"line":1377,"column":22}},"749":{"start":{"line":1379,"column":16},"end":{"line":1379,"column":55}},"750":{"start":{"line":1380,"column":16},"end":{"line":1380,"column":22}},"751":{"start":{"line":1382,"column":16},"end":{"line":1382,"column":57}},"752":{"start":{"line":1383,"column":16},"end":{"line":1383,"column":22}},"753":{"start":{"line":1385,"column":16},"end":{"line":1385,"column":57}},"754":{"start":{"line":1386,"column":16},"end":{"line":1386,"column":22}},"755":{"start":{"line":1388,"column":16},"end":{"line":1388,"column":57}},"756":{"start":{"line":1389,"column":16},"end":{"line":1389,"column":22}},"757":{"start":{"line":1391,"column":16},"end":{"line":1391,"column":56}},"758":{"start":{"line":1392,"column":16},"end":{"line":1392,"column":22}},"759":{"start":{"line":1396,"column":10},"end":{"line":1396,"column":61}},"760":{"start":{"line":1399,"column":6},"end":{"line":1399,"column":27}},"761":{"start":{"line":1401,"column":4},"end":{"line":1401,"column":63}},"762":{"start":{"line":1404,"column":4},"end":{"line":1406,"column":5}},"763":{"start":{"line":1405,"column":6},"end":{"line":1405,"column":28}},"764":{"start":{"line":1407,"column":4},"end":{"line":1409,"column":5}},"765":{"start":{"line":1408,"column":6},"end":{"line":1408,"column":25}},"766":{"start":{"line":1410,"column":4},"end":{"line":1412,"column":5}},"767":{"start":{"line":1411,"column":6},"end":{"line":1411,"column":28}},"768":{"start":{"line":1413,"column":4},"end":{"line":1413,"column":27}},"769":{"start":{"line":1416,"column":4},"end":{"line":1425,"column":5}},"770":{"start":{"line":1417,"column":6},"end":{"line":1417,"column":26}},"771":{"start":{"line":1418,"column":6},"end":{"line":1418,"column":41}},"772":{"start":{"line":1419,"column":6},"end":{"line":1419,"column":47}},"773":{"start":{"line":1420,"column":6},"end":{"line":1420,"column":37}},"774":{"start":{"line":1421,"column":6},"end":{"line":1421,"column":39}},"775":{"start":{"line":1422,"column":6},"end":{"line":1422,"column":38}},"776":{"start":{"line":1423,"column":6},"end":{"line":1423,"column":44}},"777":{"start":{"line":1424,"column":6},"end":{"line":1424,"column":41}},"778":{"start":{"line":1426,"column":4},"end":{"line":1426,"column":37}},"779":{"start":{"line":1427,"column":21},"end":{"line":1427,"column":40}},"780":{"start":{"line":1428,"column":26},"end":{"line":1428,"column":41}},"781":{"start":{"line":1429,"column":19},"end":{"line":1429,"column":21}},"782":{"start":{"line":1430,"column":25},"end":{"line":1430,"column":26}},"783":{"start":{"line":1431,"column":4},"end":{"line":1444,"column":5}},"784":{"start":{"line":1431,"column":17},"end":{"line":1431,"column":18}},"785":{"start":{"line":1432,"column":24},"end":{"line":1432,"column":35}},"786":{"start":{"line":1433,"column":26},"end":{"line":1433,"column":46}},"787":{"start":{"line":1434,"column":31},"end":{"line":1434,"column":49}},"788":{"start":{"line":1435,"column":6},"end":{"line":1437,"column":7}},"789":{"start":{"line":1436,"column":8},"end":{"line":1436,"column":42}},"790":{"start":{"line":1438,"column":18},"end":{"line":1438,"column":20}},"791":{"start":{"line":1439,"column":6},"end":{"line":1442,"column":7}},"792":{"start":{"line":1439,"column":19},"end":{"line":1439,"column":20}},"793":{"start":{"line":1440,"column":24},"end":{"line":1440,"column":45}},"794":{"start":{"line":1441,"column":8},"end":{"line":1441,"column":53}},"795":{"start":{"line":1443,"column":6},"end":{"line":1443,"column":23}},"796":{"start":{"line":1445,"column":4},"end":{"line":1445,"column":35}},"797":{"start":{"line":1446,"column":4},"end":{"line":1446,"column":39}},"798":{"start":{"line":1447,"column":4},"end":{"line":1447,"column":18}},"799":{"start":{"line":1450,"column":4},"end":{"line":1453,"column":5}},"800":{"start":{"line":1451,"column":6},"end":{"line":1451,"column":15}},"801":{"start":{"line":1452,"column":6},"end":{"line":1452,"column":18}},"802":{"start":{"line":1454,"column":33},"end":{"line":1462,"column":5}},"803":{"start":{"line":1463,"column":4},"end":{"line":1463,"column":57}},"804":{"start":{"line":1468,"column":4},"end":{"line":1470,"column":5}},"805":{"start":{"line":1469,"column":6},"end":{"line":1469,"column":38}},"806":{"start":{"line":1471,"column":4},"end":{"line":1473,"column":5}},"807":{"start":{"line":1472,"column":6},"end":{"line":1472,"column":49}},"808":{"start":{"line":1474,"column":4},"end":{"line":1494,"column":5}},"809":{"start":{"line":1475,"column":28},"end":{"line":1475,"column":63}},"810":{"start":{"line":1476,"column":6},"end":{"line":1478,"column":7}},"811":{"start":{"line":1477,"column":8},"end":{"line":1477,"column":54}},"812":{"start":{"line":1479,"column":6},"end":{"line":1481,"column":7}},"813":{"start":{"line":1480,"column":8},"end":{"line":1480,"column":60}},"814":{"start":{"line":1482,"column":6},"end":{"line":1484,"column":7}},"815":{"start":{"line":1483,"column":8},"end":{"line":1483,"column":58}},"816":{"start":{"line":1485,"column":50},"end":{"line":1485,"column":81}},"817":{"start":{"line":1486,"column":6},"end":{"line":1488,"column":7}},"818":{"start":{"line":1487,"column":8},"end":{"line":1487,"column":56}},"819":{"start":{"line":1489,"column":33},"end":{"line":1489,"column":79}},"820":{"start":{"line":1490,"column":6},"end":{"line":1492,"column":7}},"821":{"start":{"line":1491,"column":8},"end":{"line":1491,"column":59}},"822":{"start":{"line":1493,"column":6},"end":{"line":1493,"column":57}},"823":{"start":{"line":1495,"column":4},"end":{"line":1497,"column":5}},"824":{"start":{"line":1496,"column":6},"end":{"line":1496,"column":57}},"825":{"start":{"line":1498,"column":4},"end":{"line":1498,"column":52}},"826":{"start":{"line":1502,"column":23},"end":{"line":1502,"column":35}},"827":{"start":{"line":1503,"column":2},"end":{"line":1503,"column":68}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":41},"end":{"line":11,"column":42}},"loc":{"start":{"line":11,"column":65},"end":{"line":26,"column":1}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":42},"end":{"line":27,"column":43}},"loc":{"start":{"line":27,"column":67},"end":{"line":33,"column":1}},"line":27},"2":{"name":"fromObjectToString","decl":{"start":{"line":34,"column":16},"end":{"line":34,"column":34}},"loc":{"start":{"line":34,"column":42},"end":{"line":36,"column":1}},"line":34},"3":{"name":"transformToValueObject","decl":{"start":{"line":37,"column":16},"end":{"line":37,"column":38}},"loc":{"start":{"line":37,"column":51},"end":{"line":50,"column":1}},"line":37},"4":{"name":"transformToValue","decl":{"start":{"line":51,"column":16},"end":{"line":51,"column":32}},"loc":{"start":{"line":51,"column":45},"end":{"line":70,"column":1}},"line":51},"5":{"name":"(anonymous_5)","decl":{"start":{"line":77,"column":2},"end":{"line":77,"column":3}},"loc":{"start":{"line":77,"column":26},"end":{"line":79,"column":3}},"line":77},"6":{"name":"(anonymous_6)","decl":{"start":{"line":85,"column":2},"end":{"line":85,"column":3}},"loc":{"start":{"line":85,"column":30},"end":{"line":97,"column":3}},"line":85},"7":{"name":"(anonymous_7)","decl":{"start":{"line":112,"column":2},"end":{"line":112,"column":3}},"loc":{"start":{"line":112,"column":24},"end":{"line":115,"column":3}},"line":112},"8":{"name":"(anonymous_8)","decl":{"start":{"line":116,"column":2},"end":{"line":116,"column":3}},"loc":{"start":{"line":116,"column":12},"end":{"line":121,"column":3}},"line":116},"9":{"name":"(anonymous_9)","decl":{"start":{"line":122,"column":2},"end":{"line":122,"column":3}},"loc":{"start":{"line":122,"column":10},"end":{"line":126,"column":3}},"line":122},"10":{"name":"(anonymous_10)","decl":{"start":{"line":123,"column":20},"end":{"line":123,"column":21}},"loc":{"start":{"line":123,"column":27},"end":{"line":125,"column":5}},"line":123},"11":{"name":"(anonymous_11)","decl":{"start":{"line":127,"column":2},"end":{"line":127,"column":3}},"loc":{"start":{"line":127,"column":16},"end":{"line":129,"column":3}},"line":127},"12":{"name":"(anonymous_12)","decl":{"start":{"line":130,"column":2},"end":{"line":130,"column":3}},"loc":{"start":{"line":130,"column":24},"end":{"line":132,"column":3}},"line":130},"13":{"name":"(anonymous_13)","decl":{"start":{"line":133,"column":2},"end":{"line":133,"column":3}},"loc":{"start":{"line":133,"column":19},"end":{"line":135,"column":3}},"line":133},"14":{"name":"(anonymous_14)","decl":{"start":{"line":136,"column":2},"end":{"line":136,"column":3}},"loc":{"start":{"line":136,"column":30},"end":{"line":138,"column":3}},"line":136},"15":{"name":"(anonymous_15)","decl":{"start":{"line":139,"column":2},"end":{"line":139,"column":3}},"loc":{"start":{"line":139,"column":26},"end":{"line":142,"column":3}},"line":139},"16":{"name":"(anonymous_16)","decl":{"start":{"line":143,"column":2},"end":{"line":143,"column":3}},"loc":{"start":{"line":143,"column":20},"end":{"line":145,"column":3}},"line":143},"17":{"name":"(anonymous_17)","decl":{"start":{"line":146,"column":2},"end":{"line":146,"column":3}},"loc":{"start":{"line":146,"column":14},"end":{"line":148,"column":3}},"line":146},"18":{"name":"(anonymous_18)","decl":{"start":{"line":149,"column":2},"end":{"line":149,"column":3}},"loc":{"start":{"line":149,"column":22},"end":{"line":151,"column":3}},"line":149},"19":{"name":"(anonymous_19)","decl":{"start":{"line":152,"column":2},"end":{"line":152,"column":3}},"loc":{"start":{"line":152,"column":15},"end":{"line":154,"column":3}},"line":152},"20":{"name":"(anonymous_20)","decl":{"start":{"line":155,"column":2},"end":{"line":155,"column":3}},"loc":{"start":{"line":155,"column":18},"end":{"line":157,"column":3}},"line":155},"21":{"name":"(anonymous_21)","decl":{"start":{"line":158,"column":2},"end":{"line":158,"column":3}},"loc":{"start":{"line":158,"column":21},"end":{"line":160,"column":3}},"line":158},"22":{"name":"(anonymous_22)","decl":{"start":{"line":161,"column":2},"end":{"line":161,"column":3}},"loc":{"start":{"line":161,"column":18},"end":{"line":163,"column":3}},"line":161},"23":{"name":"(anonymous_23)","decl":{"start":{"line":164,"column":2},"end":{"line":164,"column":3}},"loc":{"start":{"line":164,"column":23},"end":{"line":167,"column":3}},"line":164},"24":{"name":"(anonymous_24)","decl":{"start":{"line":168,"column":2},"end":{"line":168,"column":3}},"loc":{"start":{"line":168,"column":12},"end":{"line":170,"column":3}},"line":168},"25":{"name":"(anonymous_25)","decl":{"start":{"line":171,"column":2},"end":{"line":171,"column":3}},"loc":{"start":{"line":171,"column":25},"end":{"line":173,"column":3}},"line":171},"26":{"name":"(anonymous_26)","decl":{"start":{"line":174,"column":2},"end":{"line":174,"column":3}},"loc":{"start":{"line":174,"column":19},"end":{"line":176,"column":3}},"line":174},"27":{"name":"(anonymous_27)","decl":{"start":{"line":177,"column":2},"end":{"line":177,"column":3}},"loc":{"start":{"line":177,"column":28},"end":{"line":187,"column":3}},"line":177},"28":{"name":"(anonymous_28)","decl":{"start":{"line":188,"column":2},"end":{"line":188,"column":3}},"loc":{"start":{"line":188,"column":33},"end":{"line":190,"column":3}},"line":188},"29":{"name":"(anonymous_29)","decl":{"start":{"line":191,"column":2},"end":{"line":191,"column":3}},"loc":{"start":{"line":191,"column":26},"end":{"line":197,"column":3}},"line":191},"30":{"name":"(anonymous_30)","decl":{"start":{"line":198,"column":2},"end":{"line":198,"column":3}},"loc":{"start":{"line":198,"column":21},"end":{"line":209,"column":3}},"line":198},"31":{"name":"(anonymous_31)","decl":{"start":{"line":210,"column":2},"end":{"line":210,"column":3}},"loc":{"start":{"line":210,"column":21},"end":{"line":220,"column":3}},"line":210},"32":{"name":"(anonymous_32)","decl":{"start":{"line":221,"column":2},"end":{"line":221,"column":3}},"loc":{"start":{"line":221,"column":28},"end":{"line":231,"column":3}},"line":221},"33":{"name":"(anonymous_33)","decl":{"start":{"line":232,"column":2},"end":{"line":232,"column":3}},"loc":{"start":{"line":232,"column":24},"end":{"line":244,"column":3}},"line":232},"34":{"name":"(anonymous_34)","decl":{"start":{"line":234,"column":25},"end":{"line":234,"column":26}},"loc":{"start":{"line":234,"column":59},"end":{"line":242,"column":5}},"line":234},"35":{"name":"(anonymous_35)","decl":{"start":{"line":245,"column":2},"end":{"line":245,"column":3}},"loc":{"start":{"line":245,"column":25},"end":{"line":257,"column":3}},"line":245},"36":{"name":"(anonymous_36)","decl":{"start":{"line":247,"column":18},"end":{"line":247,"column":19}},"loc":{"start":{"line":247,"column":52},"end":{"line":255,"column":5}},"line":247},"37":{"name":"(anonymous_37)","decl":{"start":{"line":258,"column":2},"end":{"line":258,"column":3}},"loc":{"start":{"line":258,"column":17},"end":{"line":261,"column":3}},"line":258},"38":{"name":"(anonymous_38)","decl":{"start":{"line":262,"column":2},"end":{"line":262,"column":3}},"loc":{"start":{"line":262,"column":16},"end":{"line":265,"column":3}},"line":262},"39":{"name":"(anonymous_39)","decl":{"start":{"line":273,"column":2},"end":{"line":273,"column":3}},"loc":{"start":{"line":273,"column":18},"end":{"line":276,"column":3}},"line":273},"40":{"name":"(anonymous_40)","decl":{"start":{"line":277,"column":2},"end":{"line":277,"column":3}},"loc":{"start":{"line":277,"column":21},"end":{"line":298,"column":3}},"line":277},"41":{"name":"(anonymous_41)","decl":{"start":{"line":303,"column":2},"end":{"line":303,"column":3}},"loc":{"start":{"line":303,"column":12},"end":{"line":319,"column":3}},"line":303},"42":{"name":"(anonymous_42)","decl":{"start":{"line":324,"column":2},"end":{"line":324,"column":3}},"loc":{"start":{"line":324,"column":20},"end":{"line":357,"column":3}},"line":324},"43":{"name":"(anonymous_43)","decl":{"start":{"line":365,"column":2},"end":{"line":365,"column":3}},"loc":{"start":{"line":365,"column":31},"end":{"line":422,"column":3}},"line":365},"44":{"name":"(anonymous_44)","decl":{"start":{"line":423,"column":2},"end":{"line":423,"column":3}},"loc":{"start":{"line":423,"column":19},"end":{"line":428,"column":3}},"line":423},"45":{"name":"(anonymous_45)","decl":{"start":{"line":429,"column":2},"end":{"line":429,"column":3}},"loc":{"start":{"line":429,"column":22},"end":{"line":432,"column":3}},"line":429},"46":{"name":"(anonymous_46)","decl":{"start":{"line":433,"column":2},"end":{"line":433,"column":3}},"loc":{"start":{"line":433,"column":14},"end":{"line":440,"column":3}},"line":433},"47":{"name":"(anonymous_47)","decl":{"start":{"line":446,"column":2},"end":{"line":446,"column":3}},"loc":{"start":{"line":446,"column":107},"end":{"line":497,"column":3}},"line":446},"48":{"name":"(anonymous_48)","decl":{"start":{"line":451,"column":25},"end":{"line":451,"column":26}},"loc":{"start":{"line":451,"column":53},"end":{"line":481,"column":5}},"line":451},"49":{"name":"(anonymous_49)","decl":{"start":{"line":483,"column":27},"end":{"line":483,"column":28}},"loc":{"start":{"line":483,"column":48},"end":{"line":485,"column":7}},"line":483},"50":{"name":"(anonymous_50)","decl":{"start":{"line":487,"column":20},"end":{"line":487,"column":21}},"loc":{"start":{"line":487,"column":41},"end":{"line":489,"column":7}},"line":487},"51":{"name":"(anonymous_51)","decl":{"start":{"line":498,"column":2},"end":{"line":498,"column":3}},"loc":{"start":{"line":498,"column":106},"end":{"line":508,"column":3}},"line":498},"52":{"name":"(anonymous_52)","decl":{"start":{"line":520,"column":2},"end":{"line":520,"column":3}},"loc":{"start":{"line":520,"column":135},"end":{"line":571,"column":3}},"line":520},"53":{"name":"(anonymous_53)","decl":{"start":{"line":572,"column":2},"end":{"line":572,"column":3}},"loc":{"start":{"line":572,"column":8},"end":{"line":587,"column":3}},"line":572},"54":{"name":"(anonymous_54)","decl":{"start":{"line":574,"column":18},"end":{"line":574,"column":19}},"loc":{"start":{"line":574,"column":35},"end":{"line":585,"column":5}},"line":574},"55":{"name":"(anonymous_55)","decl":{"start":{"line":588,"column":2},"end":{"line":588,"column":3}},"loc":{"start":{"line":588,"column":8},"end":{"line":607,"column":3}},"line":588},"56":{"name":"(anonymous_56)","decl":{"start":{"line":590,"column":18},"end":{"line":590,"column":19}},"loc":{"start":{"line":590,"column":35},"end":{"line":605,"column":5}},"line":590},"57":{"name":"(anonymous_57)","decl":{"start":{"line":608,"column":2},"end":{"line":608,"column":3}},"loc":{"start":{"line":608,"column":8},"end":{"line":627,"column":3}},"line":608},"58":{"name":"(anonymous_58)","decl":{"start":{"line":610,"column":18},"end":{"line":610,"column":19}},"loc":{"start":{"line":610,"column":35},"end":{"line":625,"column":5}},"line":610},"59":{"name":"(anonymous_59)","decl":{"start":{"line":628,"column":2},"end":{"line":628,"column":3}},"loc":{"start":{"line":628,"column":10},"end":{"line":637,"column":3}},"line":628},"60":{"name":"(anonymous_60)","decl":{"start":{"line":630,"column":18},"end":{"line":630,"column":19}},"loc":{"start":{"line":630,"column":35},"end":{"line":635,"column":5}},"line":630},"61":{"name":"(anonymous_61)","decl":{"start":{"line":638,"column":2},"end":{"line":638,"column":3}},"loc":{"start":{"line":638,"column":11},"end":{"line":647,"column":3}},"line":638},"62":{"name":"(anonymous_62)","decl":{"start":{"line":640,"column":18},"end":{"line":640,"column":19}},"loc":{"start":{"line":640,"column":35},"end":{"line":645,"column":5}},"line":640},"63":{"name":"(anonymous_63)","decl":{"start":{"line":648,"column":2},"end":{"line":648,"column":3}},"loc":{"start":{"line":648,"column":15},"end":{"line":656,"column":3}},"line":648},"64":{"name":"(anonymous_64)","decl":{"start":{"line":650,"column":18},"end":{"line":650,"column":19}},"loc":{"start":{"line":650,"column":35},"end":{"line":654,"column":5}},"line":650},"65":{"name":"(anonymous_65)","decl":{"start":{"line":657,"column":2},"end":{"line":657,"column":3}},"loc":{"start":{"line":657,"column":16},"end":{"line":660,"column":3}},"line":657},"66":{"name":"(anonymous_66)","decl":{"start":{"line":661,"column":2},"end":{"line":661,"column":3}},"loc":{"start":{"line":661,"column":18},"end":{"line":664,"column":3}},"line":661},"67":{"name":"(anonymous_67)","decl":{"start":{"line":665,"column":2},"end":{"line":665,"column":3}},"loc":{"start":{"line":665,"column":20},"end":{"line":667,"column":3}},"line":665},"68":{"name":"(anonymous_68)","decl":{"start":{"line":668,"column":2},"end":{"line":668,"column":3}},"loc":{"start":{"line":668,"column":21},"end":{"line":670,"column":3}},"line":668},"69":{"name":"(anonymous_69)","decl":{"start":{"line":671,"column":2},"end":{"line":671,"column":3}},"loc":{"start":{"line":671,"column":24},"end":{"line":673,"column":3}},"line":671},"70":{"name":"(anonymous_70)","decl":{"start":{"line":674,"column":2},"end":{"line":674,"column":3}},"loc":{"start":{"line":674,"column":23},"end":{"line":676,"column":3}},"line":674},"71":{"name":"(anonymous_71)","decl":{"start":{"line":677,"column":2},"end":{"line":677,"column":3}},"loc":{"start":{"line":677,"column":19},"end":{"line":679,"column":3}},"line":677},"72":{"name":"(anonymous_72)","decl":{"start":{"line":680,"column":2},"end":{"line":680,"column":3}},"loc":{"start":{"line":680,"column":26},"end":{"line":687,"column":3}},"line":680},"73":{"name":"(anonymous_73)","decl":{"start":{"line":681,"column":20},"end":{"line":681,"column":21}},"loc":{"start":{"line":681,"column":38},"end":{"line":686,"column":5}},"line":681},"74":{"name":"(anonymous_74)","decl":{"start":{"line":688,"column":2},"end":{"line":688,"column":3}},"loc":{"start":{"line":688,"column":50},"end":{"line":690,"column":3}},"line":688},"75":{"name":"(anonymous_75)","decl":{"start":{"line":691,"column":2},"end":{"line":691,"column":3}},"loc":{"start":{"line":691,"column":32},"end":{"line":693,"column":3}},"line":691},"76":{"name":"(anonymous_76)","decl":{"start":{"line":694,"column":2},"end":{"line":694,"column":3}},"loc":{"start":{"line":694,"column":31},"end":{"line":696,"column":3}},"line":694},"77":{"name":"(anonymous_77)","decl":{"start":{"line":697,"column":2},"end":{"line":697,"column":3}},"loc":{"start":{"line":697,"column":18},"end":{"line":709,"column":3}},"line":697},"78":{"name":"(anonymous_78)","decl":{"start":{"line":698,"column":30},"end":{"line":698,"column":31}},"loc":{"start":{"line":698,"column":54},"end":{"line":707,"column":5}},"line":698},"79":{"name":"(anonymous_79)","decl":{"start":{"line":710,"column":2},"end":{"line":710,"column":3}},"loc":{"start":{"line":710,"column":23},"end":{"line":732,"column":3}},"line":710},"80":{"name":"(anonymous_80)","decl":{"start":{"line":733,"column":2},"end":{"line":733,"column":3}},"loc":{"start":{"line":733,"column":19},"end":{"line":735,"column":3}},"line":733},"81":{"name":"(anonymous_81)","decl":{"start":{"line":741,"column":2},"end":{"line":741,"column":3}},"loc":{"start":{"line":741,"column":26},"end":{"line":748,"column":3}},"line":741},"82":{"name":"(anonymous_82)","decl":{"start":{"line":742,"column":20},"end":{"line":742,"column":21}},"loc":{"start":{"line":742,"column":38},"end":{"line":747,"column":5}},"line":742},"83":{"name":"(anonymous_83)","decl":{"start":{"line":749,"column":2},"end":{"line":749,"column":3}},"loc":{"start":{"line":749,"column":9},"end":{"line":756,"column":3}},"line":749},"84":{"name":"(anonymous_84)","decl":{"start":{"line":750,"column":20},"end":{"line":750,"column":21}},"loc":{"start":{"line":750,"column":38},"end":{"line":755,"column":5}},"line":750},"85":{"name":"(anonymous_85)","decl":{"start":{"line":757,"column":2},"end":{"line":757,"column":3}},"loc":{"start":{"line":757,"column":9},"end":{"line":764,"column":3}},"line":757},"86":{"name":"(anonymous_86)","decl":{"start":{"line":758,"column":20},"end":{"line":758,"column":21}},"loc":{"start":{"line":758,"column":38},"end":{"line":763,"column":5}},"line":758},"87":{"name":"(anonymous_87)","decl":{"start":{"line":765,"column":2},"end":{"line":765,"column":3}},"loc":{"start":{"line":765,"column":8},"end":{"line":772,"column":3}},"line":765},"88":{"name":"(anonymous_88)","decl":{"start":{"line":766,"column":20},"end":{"line":766,"column":21}},"loc":{"start":{"line":766,"column":38},"end":{"line":771,"column":5}},"line":766},"89":{"name":"(anonymous_89)","decl":{"start":{"line":773,"column":2},"end":{"line":773,"column":3}},"loc":{"start":{"line":773,"column":9},"end":{"line":780,"column":3}},"line":773},"90":{"name":"(anonymous_90)","decl":{"start":{"line":774,"column":20},"end":{"line":774,"column":21}},"loc":{"start":{"line":774,"column":38},"end":{"line":779,"column":5}},"line":774},"91":{"name":"(anonymous_91)","decl":{"start":{"line":781,"column":2},"end":{"line":781,"column":3}},"loc":{"start":{"line":781,"column":9},"end":{"line":788,"column":3}},"line":781},"92":{"name":"(anonymous_92)","decl":{"start":{"line":782,"column":20},"end":{"line":782,"column":21}},"loc":{"start":{"line":782,"column":38},"end":{"line":787,"column":5}},"line":782},"93":{"name":"(anonymous_93)","decl":{"start":{"line":789,"column":2},"end":{"line":789,"column":3}},"loc":{"start":{"line":789,"column":10},"end":{"line":796,"column":3}},"line":789},"94":{"name":"(anonymous_94)","decl":{"start":{"line":790,"column":20},"end":{"line":790,"column":21}},"loc":{"start":{"line":790,"column":38},"end":{"line":795,"column":5}},"line":790},"95":{"name":"(anonymous_95)","decl":{"start":{"line":797,"column":2},"end":{"line":797,"column":3}},"loc":{"start":{"line":797,"column":8},"end":{"line":804,"column":3}},"line":797},"96":{"name":"(anonymous_96)","decl":{"start":{"line":798,"column":20},"end":{"line":798,"column":21}},"loc":{"start":{"line":798,"column":38},"end":{"line":803,"column":5}},"line":798},"97":{"name":"(anonymous_97)","decl":{"start":{"line":805,"column":2},"end":{"line":805,"column":3}},"loc":{"start":{"line":805,"column":9},"end":{"line":812,"column":3}},"line":805},"98":{"name":"(anonymous_98)","decl":{"start":{"line":806,"column":20},"end":{"line":806,"column":21}},"loc":{"start":{"line":806,"column":38},"end":{"line":811,"column":5}},"line":806},"99":{"name":"(anonymous_99)","decl":{"start":{"line":813,"column":2},"end":{"line":813,"column":3}},"loc":{"start":{"line":813,"column":9},"end":{"line":820,"column":3}},"line":813},"100":{"name":"(anonymous_100)","decl":{"start":{"line":814,"column":20},"end":{"line":814,"column":21}},"loc":{"start":{"line":814,"column":38},"end":{"line":819,"column":5}},"line":814},"101":{"name":"(anonymous_101)","decl":{"start":{"line":821,"column":2},"end":{"line":821,"column":3}},"loc":{"start":{"line":821,"column":10},"end":{"line":828,"column":3}},"line":821},"102":{"name":"(anonymous_102)","decl":{"start":{"line":822,"column":20},"end":{"line":822,"column":21}},"loc":{"start":{"line":822,"column":38},"end":{"line":827,"column":5}},"line":822},"103":{"name":"(anonymous_103)","decl":{"start":{"line":829,"column":2},"end":{"line":829,"column":3}},"loc":{"start":{"line":829,"column":8},"end":{"line":836,"column":3}},"line":829},"104":{"name":"(anonymous_104)","decl":{"start":{"line":830,"column":20},"end":{"line":830,"column":21}},"loc":{"start":{"line":830,"column":38},"end":{"line":835,"column":5}},"line":830},"105":{"name":"(anonymous_105)","decl":{"start":{"line":837,"column":2},"end":{"line":837,"column":3}},"loc":{"start":{"line":837,"column":9},"end":{"line":844,"column":3}},"line":837},"106":{"name":"(anonymous_106)","decl":{"start":{"line":838,"column":20},"end":{"line":838,"column":21}},"loc":{"start":{"line":838,"column":38},"end":{"line":843,"column":5}},"line":838},"107":{"name":"(anonymous_107)","decl":{"start":{"line":845,"column":2},"end":{"line":845,"column":3}},"loc":{"start":{"line":845,"column":9},"end":{"line":852,"column":3}},"line":845},"108":{"name":"(anonymous_108)","decl":{"start":{"line":846,"column":20},"end":{"line":846,"column":21}},"loc":{"start":{"line":846,"column":38},"end":{"line":851,"column":5}},"line":846},"109":{"name":"(anonymous_109)","decl":{"start":{"line":853,"column":2},"end":{"line":853,"column":3}},"loc":{"start":{"line":853,"column":10},"end":{"line":860,"column":3}},"line":853},"110":{"name":"(anonymous_110)","decl":{"start":{"line":854,"column":20},"end":{"line":854,"column":21}},"loc":{"start":{"line":854,"column":38},"end":{"line":859,"column":5}},"line":854},"111":{"name":"(anonymous_111)","decl":{"start":{"line":861,"column":2},"end":{"line":861,"column":3}},"loc":{"start":{"line":861,"column":21},"end":{"line":863,"column":3}},"line":861},"112":{"name":"(anonymous_112)","decl":{"start":{"line":864,"column":2},"end":{"line":864,"column":3}},"loc":{"start":{"line":864,"column":28},"end":{"line":871,"column":3}},"line":864},"113":{"name":"(anonymous_113)","decl":{"start":{"line":865,"column":20},"end":{"line":865,"column":21}},"loc":{"start":{"line":865,"column":38},"end":{"line":870,"column":5}},"line":865},"114":{"name":"(anonymous_114)","decl":{"start":{"line":872,"column":2},"end":{"line":872,"column":3}},"loc":{"start":{"line":872,"column":17},"end":{"line":876,"column":3}},"line":872},"115":{"name":"(anonymous_115)","decl":{"start":{"line":877,"column":2},"end":{"line":877,"column":3}},"loc":{"start":{"line":877,"column":11},"end":{"line":891,"column":3}},"line":877},"116":{"name":"(anonymous_116)","decl":{"start":{"line":911,"column":2},"end":{"line":911,"column":3}},"loc":{"start":{"line":911,"column":16},"end":{"line":935,"column":3}},"line":911},"117":{"name":"(anonymous_117)","decl":{"start":{"line":914,"column":18},"end":{"line":914,"column":19}},"loc":{"start":{"line":914,"column":35},"end":{"line":923,"column":5}},"line":914},"118":{"name":"(anonymous_118)","decl":{"start":{"line":944,"column":2},"end":{"line":944,"column":3}},"loc":{"start":{"line":944,"column":16},"end":{"line":950,"column":3}},"line":944},"119":{"name":"(anonymous_119)","decl":{"start":{"line":951,"column":2},"end":{"line":951,"column":3}},"loc":{"start":{"line":951,"column":8},"end":{"line":958,"column":3}},"line":951},"120":{"name":"(anonymous_120)","decl":{"start":{"line":952,"column":20},"end":{"line":952,"column":21}},"loc":{"start":{"line":952,"column":38},"end":{"line":957,"column":5}},"line":952},"121":{"name":"(anonymous_121)","decl":{"start":{"line":959,"column":2},"end":{"line":959,"column":3}},"loc":{"start":{"line":959,"column":10},"end":{"line":966,"column":3}},"line":959},"122":{"name":"(anonymous_122)","decl":{"start":{"line":960,"column":20},"end":{"line":960,"column":21}},"loc":{"start":{"line":960,"column":38},"end":{"line":965,"column":5}},"line":960},"123":{"name":"(anonymous_123)","decl":{"start":{"line":967,"column":2},"end":{"line":967,"column":3}},"loc":{"start":{"line":967,"column":8},"end":{"line":974,"column":3}},"line":967},"124":{"name":"(anonymous_124)","decl":{"start":{"line":968,"column":20},"end":{"line":968,"column":21}},"loc":{"start":{"line":968,"column":38},"end":{"line":973,"column":5}},"line":968},"125":{"name":"(anonymous_125)","decl":{"start":{"line":975,"column":2},"end":{"line":975,"column":3}},"loc":{"start":{"line":975,"column":8},"end":{"line":982,"column":3}},"line":975},"126":{"name":"(anonymous_126)","decl":{"start":{"line":976,"column":20},"end":{"line":976,"column":21}},"loc":{"start":{"line":976,"column":38},"end":{"line":981,"column":5}},"line":976},"127":{"name":"(anonymous_127)","decl":{"start":{"line":983,"column":2},"end":{"line":983,"column":3}},"loc":{"start":{"line":983,"column":21},"end":{"line":985,"column":3}},"line":983},"128":{"name":"(anonymous_128)","decl":{"start":{"line":986,"column":2},"end":{"line":986,"column":3}},"loc":{"start":{"line":986,"column":28},"end":{"line":993,"column":3}},"line":986},"129":{"name":"(anonymous_129)","decl":{"start":{"line":987,"column":20},"end":{"line":987,"column":21}},"loc":{"start":{"line":987,"column":38},"end":{"line":992,"column":5}},"line":987},"130":{"name":"(anonymous_130)","decl":{"start":{"line":994,"column":2},"end":{"line":994,"column":3}},"loc":{"start":{"line":994,"column":21},"end":{"line":996,"column":3}},"line":994},"131":{"name":"(anonymous_131)","decl":{"start":{"line":997,"column":2},"end":{"line":997,"column":3}},"loc":{"start":{"line":997,"column":28},"end":{"line":1004,"column":3}},"line":997},"132":{"name":"(anonymous_132)","decl":{"start":{"line":998,"column":20},"end":{"line":998,"column":21}},"loc":{"start":{"line":998,"column":38},"end":{"line":1003,"column":5}},"line":998},"133":{"name":"(anonymous_133)","decl":{"start":{"line":1005,"column":2},"end":{"line":1005,"column":3}},"loc":{"start":{"line":1005,"column":20},"end":{"line":1007,"column":3}},"line":1005},"134":{"name":"(anonymous_134)","decl":{"start":{"line":1008,"column":2},"end":{"line":1008,"column":3}},"loc":{"start":{"line":1008,"column":27},"end":{"line":1015,"column":3}},"line":1008},"135":{"name":"(anonymous_135)","decl":{"start":{"line":1009,"column":20},"end":{"line":1009,"column":21}},"loc":{"start":{"line":1009,"column":38},"end":{"line":1014,"column":5}},"line":1009},"136":{"name":"(anonymous_136)","decl":{"start":{"line":1016,"column":2},"end":{"line":1016,"column":3}},"loc":{"start":{"line":1016,"column":12},"end":{"line":1018,"column":3}},"line":1016},"137":{"name":"(anonymous_137)","decl":{"start":{"line":1019,"column":2},"end":{"line":1019,"column":3}},"loc":{"start":{"line":1019,"column":16},"end":{"line":1022,"column":3}},"line":1019},"138":{"name":"(anonymous_138)","decl":{"start":{"line":1023,"column":2},"end":{"line":1023,"column":3}},"loc":{"start":{"line":1023,"column":15},"end":{"line":1048,"column":3}},"line":1023},"139":{"name":"(anonymous_139)","decl":{"start":{"line":1025,"column":11},"end":{"line":1025,"column":12}},"loc":{"start":{"line":1025,"column":21},"end":{"line":1047,"column":5}},"line":1025},"140":{"name":"(anonymous_140)","decl":{"start":{"line":1049,"column":2},"end":{"line":1049,"column":3}},"loc":{"start":{"line":1049,"column":25},"end":{"line":1060,"column":3}},"line":1049},"141":{"name":"(anonymous_141)","decl":{"start":{"line":1061,"column":2},"end":{"line":1061,"column":3}},"loc":{"start":{"line":1061,"column":76},"end":{"line":1096,"column":3}},"line":1061},"142":{"name":"(anonymous_142)","decl":{"start":{"line":1098,"column":2},"end":{"line":1098,"column":3}},"loc":{"start":{"line":1098,"column":97},"end":{"line":1224,"column":3}},"line":1098},"143":{"name":"(anonymous_143)","decl":{"start":{"line":1122,"column":33},"end":{"line":1122,"column":34}},"loc":{"start":{"line":1122,"column":42},"end":{"line":1131,"column":13}},"line":1122},"144":{"name":"(anonymous_144)","decl":{"start":{"line":1140,"column":38},"end":{"line":1140,"column":39}},"loc":{"start":{"line":1140,"column":66},"end":{"line":1169,"column":13}},"line":1140},"145":{"name":"(anonymous_145)","decl":{"start":{"line":1160,"column":37},"end":{"line":1160,"column":38}},"loc":{"start":{"line":1160,"column":48},"end":{"line":1167,"column":17}},"line":1160},"146":{"name":"(anonymous_146)","decl":{"start":{"line":1226,"column":2},"end":{"line":1226,"column":3}},"loc":{"start":{"line":1226,"column":144},"end":{"line":1306,"column":3}},"line":1226},"147":{"name":"(anonymous_147)","decl":{"start":{"line":1308,"column":2},"end":{"line":1308,"column":3}},"loc":{"start":{"line":1308,"column":81},"end":{"line":1402,"column":3}},"line":1308},"148":{"name":"(anonymous_148)","decl":{"start":{"line":1403,"column":2},"end":{"line":1403,"column":3}},"loc":{"start":{"line":1403,"column":40},"end":{"line":1414,"column":3}},"line":1403},"149":{"name":"(anonymous_149)","decl":{"start":{"line":1415,"column":2},"end":{"line":1415,"column":3}},"loc":{"start":{"line":1415,"column":25},"end":{"line":1448,"column":3}},"line":1415},"150":{"name":"(anonymous_150)","decl":{"start":{"line":1449,"column":2},"end":{"line":1449,"column":3}},"loc":{"start":{"line":1449,"column":72},"end":{"line":1464,"column":3}},"line":1449},"151":{"name":"(anonymous_151)","decl":{"start":{"line":1467,"column":2},"end":{"line":1467,"column":3}},"loc":{"start":{"line":1467,"column":26},"end":{"line":1499,"column":3}},"line":1467},"152":{"name":"isStringWrappedByDoubleQuotes","decl":{"start":{"line":1501,"column":9},"end":{"line":1501,"column":38}},"loc":{"start":{"line":1501,"column":46},"end":{"line":1504,"column":1}},"line":1501}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":3},"end":{"line":26,"column":26}},"type":"binary-expr","locations":[{"start":{"line":26,"column":3},"end":{"line":26,"column":20}},{"start":{"line":26,"column":24},"end":{"line":26,"column":26}}],"line":26},"1":{"loc":{"start":{"line":33,"column":3},"end":{"line":33,"column":27}},"type":"binary-expr","locations":[{"start":{"line":33,"column":3},"end":{"line":33,"column":21}},{"start":{"line":33,"column":25},"end":{"line":33,"column":27}}],"line":33},"2":{"loc":{"start":{"line":37,"column":39},"end":{"line":37,"column":49}},"type":"default-arg","locations":[{"start":{"line":37,"column":47},"end":{"line":37,"column":49}}],"line":37},"3":{"loc":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},{"start":{},"end":{}}],"line":41},"4":{"loc":{"start":{"line":51,"column":33},"end":{"line":51,"column":43}},"type":"default-arg","locations":[{"start":{"line":51,"column":41},"end":{"line":51,"column":43}}],"line":51},"5":{"loc":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},{"start":{},"end":{}}],"line":55},"6":{"loc":{"start":{"line":60,"column":6},"end":{"line":66,"column":7}},"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":66,"column":7}},{"start":{"line":62,"column":13},"end":{"line":66,"column":7}}],"line":60},"7":{"loc":{"start":{"line":62,"column":13},"end":{"line":66,"column":7}},"type":"if","locations":[{"start":{"line":62,"column":13},"end":{"line":66,"column":7}},{"start":{"line":64,"column":13},"end":{"line":66,"column":7}}],"line":62},"8":{"loc":{"start":{"line":90,"column":19},"end":{"line":90,"column":39}},"type":"binary-expr","locations":[{"start":{"line":90,"column":19},"end":{"line":90,"column":34}},{"start":{"line":90,"column":38},"end":{"line":90,"column":39}}],"line":90},"9":{"loc":{"start":{"line":113,"column":10},"end":{"line":113,"column":80}},"type":"cond-expr","locations":[{"start":{"line":113,"column":41},"end":{"line":113,"column":49}},{"start":{"line":113,"column":52},"end":{"line":113,"column":80}}],"line":113},"10":{"loc":{"start":{"line":175,"column":11},"end":{"line":175,"column":60}},"type":"binary-expr","locations":[{"start":{"line":175,"column":11},"end":{"line":175,"column":38}},{"start":{"line":175,"column":42},"end":{"line":175,"column":60}}],"line":175},"11":{"loc":{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},{"start":{},"end":{}}],"line":179},"12":{"loc":{"start":{"line":183,"column":4},"end":{"line":185,"column":5}},"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":185,"column":5}},{"start":{},"end":{}}],"line":183},"13":{"loc":{"start":{"line":189,"column":11},"end":{"line":189,"column":54}},"type":"binary-expr","locations":[{"start":{"line":189,"column":11},"end":{"line":189,"column":32}},{"start":{"line":189,"column":36},"end":{"line":189,"column":54}}],"line":189},"14":{"loc":{"start":{"line":192,"column":4},"end":{"line":194,"column":5}},"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":194,"column":5}},{"start":{},"end":{}}],"line":192},"15":{"loc":{"start":{"line":192,"column":8},"end":{"line":192,"column":60}},"type":"binary-expr","locations":[{"start":{"line":192,"column":8},"end":{"line":192,"column":29}},{"start":{"line":192,"column":33},"end":{"line":192,"column":60}}],"line":192},"16":{"loc":{"start":{"line":215,"column":8},"end":{"line":217,"column":9}},"type":"if","locations":[{"start":{"line":215,"column":8},"end":{"line":217,"column":9}},{"start":{},"end":{}}],"line":215},"17":{"loc":{"start":{"line":215,"column":21},"end":{"line":215,"column":60}},"type":"binary-expr","locations":[{"start":{"line":215,"column":21},"end":{"line":215,"column":38}},{"start":{"line":215,"column":42},"end":{"line":215,"column":60}}],"line":215},"18":{"loc":{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},"type":"if","locations":[{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},{"start":{},"end":{}}],"line":226},"19":{"loc":{"start":{"line":226,"column":21},"end":{"line":226,"column":60}},"type":"binary-expr","locations":[{"start":{"line":226,"column":21},"end":{"line":226,"column":38}},{"start":{"line":226,"column":42},"end":{"line":226,"column":60}}],"line":226},"20":{"loc":{"start":{"line":235,"column":6},"end":{"line":241,"column":7}},"type":"if","locations":[{"start":{"line":235,"column":6},"end":{"line":241,"column":7}},{"start":{},"end":{}}],"line":235},"21":{"loc":{"start":{"line":235,"column":10},"end":{"line":235,"column":57}},"type":"binary-expr","locations":[{"start":{"line":235,"column":10},"end":{"line":235,"column":28}},{"start":{"line":235,"column":32},"end":{"line":235,"column":57}}],"line":235},"22":{"loc":{"start":{"line":248,"column":6},"end":{"line":254,"column":7}},"type":"if","locations":[{"start":{"line":248,"column":6},"end":{"line":254,"column":7}},{"start":{},"end":{}}],"line":248},"23":{"loc":{"start":{"line":248,"column":10},"end":{"line":248,"column":57}},"type":"binary-expr","locations":[{"start":{"line":248,"column":10},"end":{"line":248,"column":28}},{"start":{"line":248,"column":32},"end":{"line":248,"column":57}}],"line":248},"24":{"loc":{"start":{"line":260,"column":11},"end":{"line":260,"column":92}},"type":"binary-expr","locations":[{"start":{"line":260,"column":11},"end":{"line":260,"column":42}},{"start":{"line":260,"column":46},"end":{"line":260,"column":64}},{"start":{"line":260,"column":68},"end":{"line":260,"column":92}}],"line":260},"25":{"loc":{"start":{"line":264,"column":11},"end":{"line":264,"column":88}},"type":"binary-expr","locations":[{"start":{"line":264,"column":11},"end":{"line":264,"column":38}},{"start":{"line":264,"column":42},"end":{"line":264,"column":60}},{"start":{"line":264,"column":64},"end":{"line":264,"column":88}}],"line":264},"26":{"loc":{"start":{"line":280,"column":4},"end":{"line":282,"column":5}},"type":"if","locations":[{"start":{"line":280,"column":4},"end":{"line":282,"column":5}},{"start":{},"end":{}}],"line":280},"27":{"loc":{"start":{"line":280,"column":8},"end":{"line":280,"column":90}},"type":"binary-expr","locations":[{"start":{"line":280,"column":8},"end":{"line":280,"column":44}},{"start":{"line":280,"column":48},"end":{"line":280,"column":90}}],"line":280},"28":{"loc":{"start":{"line":288,"column":8},"end":{"line":290,"column":9}},"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":290,"column":9}},{"start":{},"end":{}}],"line":288},"29":{"loc":{"start":{"line":288,"column":12},"end":{"line":288,"column":50}},"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":28}},{"start":{"line":288,"column":32},"end":{"line":288,"column":50}}],"line":288},"30":{"loc":{"start":{"line":291,"column":8},"end":{"line":294,"column":9}},"type":"if","locations":[{"start":{"line":291,"column":8},"end":{"line":294,"column":9}},{"start":{},"end":{}}],"line":291},"31":{"loc":{"start":{"line":304,"column":4},"end":{"line":306,"column":5}},"type":"if","locations":[{"start":{"line":304,"column":4},"end":{"line":306,"column":5}},{"start":{},"end":{}}],"line":304},"32":{"loc":{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},"type":"if","locations":[{"start":{"line":325,"column":4},"end":{"line":327,"column":5}},{"start":{},"end":{}}],"line":325},"33":{"loc":{"start":{"line":336,"column":8},"end":{"line":339,"column":9}},"type":"if","locations":[{"start":{"line":336,"column":8},"end":{"line":339,"column":9}},{"start":{},"end":{}}],"line":336},"34":{"loc":{"start":{"line":336,"column":12},"end":{"line":336,"column":62}},"type":"binary-expr","locations":[{"start":{"line":336,"column":12},"end":{"line":336,"column":25}},{"start":{"line":336,"column":29},"end":{"line":336,"column":44}},{"start":{"line":336,"column":48},"end":{"line":336,"column":62}}],"line":336},"35":{"loc":{"start":{"line":340,"column":8},"end":{"line":346,"column":9}},"type":"if","locations":[{"start":{"line":340,"column":8},"end":{"line":346,"column":9}},{"start":{"line":343,"column":15},"end":{"line":346,"column":9}}],"line":340},"36":{"loc":{"start":{"line":372,"column":4},"end":{"line":376,"column":5}},"type":"if","locations":[{"start":{"line":372,"column":4},"end":{"line":376,"column":5}},{"start":{},"end":{}}],"line":372},"37":{"loc":{"start":{"line":373,"column":17},"end":{"line":373,"column":33}},"type":"binary-expr","locations":[{"start":{"line":373,"column":17},"end":{"line":373,"column":28}},{"start":{"line":373,"column":32},"end":{"line":373,"column":33}}],"line":373},"38":{"loc":{"start":{"line":374,"column":16},"end":{"line":374,"column":45}},"type":"binary-expr","locations":[{"start":{"line":374,"column":16},"end":{"line":374,"column":27}},{"start":{"line":374,"column":31},"end":{"line":374,"column":45}}],"line":374},"39":{"loc":{"start":{"line":375,"column":16},"end":{"line":375,"column":32}},"type":"binary-expr","locations":[{"start":{"line":375,"column":16},"end":{"line":375,"column":27}},{"start":{"line":375,"column":31},"end":{"line":375,"column":32}}],"line":375},"40":{"loc":{"start":{"line":377,"column":4},"end":{"line":381,"column":5}},"type":"if","locations":[{"start":{"line":377,"column":4},"end":{"line":381,"column":5}},{"start":{},"end":{}}],"line":377},"41":{"loc":{"start":{"line":378,"column":20},"end":{"line":378,"column":39}},"type":"binary-expr","locations":[{"start":{"line":378,"column":20},"end":{"line":378,"column":34}},{"start":{"line":378,"column":38},"end":{"line":378,"column":39}}],"line":378},"42":{"loc":{"start":{"line":379,"column":19},"end":{"line":379,"column":54}},"type":"binary-expr","locations":[{"start":{"line":379,"column":19},"end":{"line":379,"column":33}},{"start":{"line":379,"column":37},"end":{"line":379,"column":54}}],"line":379},"43":{"loc":{"start":{"line":380,"column":19},"end":{"line":380,"column":38}},"type":"binary-expr","locations":[{"start":{"line":380,"column":19},"end":{"line":380,"column":33}},{"start":{"line":380,"column":37},"end":{"line":380,"column":38}}],"line":380},"44":{"loc":{"start":{"line":382,"column":4},"end":{"line":384,"column":5}},"type":"if","locations":[{"start":{"line":382,"column":4},"end":{"line":384,"column":5}},{"start":{},"end":{}}],"line":382},"45":{"loc":{"start":{"line":382,"column":8},"end":{"line":382,"column":70}},"type":"binary-expr","locations":[{"start":{"line":382,"column":8},"end":{"line":382,"column":34}},{"start":{"line":382,"column":38},"end":{"line":382,"column":70}}],"line":382},"46":{"loc":{"start":{"line":387,"column":4},"end":{"line":389,"column":5}},"type":"if","locations":[{"start":{"line":387,"column":4},"end":{"line":389,"column":5}},{"start":{},"end":{}}],"line":387},"47":{"loc":{"start":{"line":396,"column":6},"end":{"line":398,"column":7}},"type":"if","locations":[{"start":{"line":396,"column":6},"end":{"line":398,"column":7}},{"start":{},"end":{}}],"line":396},"48":{"loc":{"start":{"line":400,"column":8},"end":{"line":402,"column":9}},"type":"if","locations":[{"start":{"line":400,"column":8},"end":{"line":402,"column":9}},{"start":{},"end":{}}],"line":400},"49":{"loc":{"start":{"line":404,"column":19},"end":{"line":404,"column":52}},"type":"binary-expr","locations":[{"start":{"line":404,"column":19},"end":{"line":404,"column":30}},{"start":{"line":404,"column":34},"end":{"line":404,"column":52}}],"line":404},"50":{"loc":{"start":{"line":405,"column":8},"end":{"line":407,"column":9}},"type":"if","locations":[{"start":{"line":405,"column":8},"end":{"line":407,"column":9}},{"start":{},"end":{}}],"line":405},"51":{"loc":{"start":{"line":413,"column":4},"end":{"line":415,"column":5}},"type":"if","locations":[{"start":{"line":413,"column":4},"end":{"line":415,"column":5}},{"start":{},"end":{}}],"line":413},"52":{"loc":{"start":{"line":413,"column":8},"end":{"line":413,"column":53}},"type":"binary-expr","locations":[{"start":{"line":413,"column":8},"end":{"line":413,"column":27}},{"start":{"line":413,"column":31},"end":{"line":413,"column":53}}],"line":413},"53":{"loc":{"start":{"line":416,"column":21},"end":{"line":416,"column":67}},"type":"cond-expr","locations":[{"start":{"line":416,"column":35},"end":{"line":416,"column":37}},{"start":{"line":416,"column":40},"end":{"line":416,"column":67}}],"line":416},"54":{"loc":{"start":{"line":417,"column":24},"end":{"line":417,"column":79}},"type":"cond-expr","locations":[{"start":{"line":417,"column":41},"end":{"line":417,"column":43}},{"start":{"line":417,"column":46},"end":{"line":417,"column":79}}],"line":417},"55":{"loc":{"start":{"line":446,"column":27},"end":{"line":446,"column":64}},"type":"default-arg","locations":[{"start":{"line":446,"column":40},"end":{"line":446,"column":64}}],"line":446},"56":{"loc":{"start":{"line":446,"column":66},"end":{"line":446,"column":80}},"type":"default-arg","locations":[{"start":{"line":446,"column":75},"end":{"line":446,"column":80}}],"line":446},"57":{"loc":{"start":{"line":446,"column":82},"end":{"line":446,"column":105}},"type":"default-arg","locations":[{"start":{"line":446,"column":100},"end":{"line":446,"column":105}}],"line":446},"58":{"loc":{"start":{"line":452,"column":6},"end":{"line":454,"column":7}},"type":"if","locations":[{"start":{"line":452,"column":6},"end":{"line":454,"column":7}},{"start":{},"end":{}}],"line":452},"59":{"loc":{"start":{"line":456,"column":6},"end":{"line":460,"column":7}},"type":"if","locations":[{"start":{"line":456,"column":6},"end":{"line":460,"column":7}},{"start":{"line":458,"column":13},"end":{"line":460,"column":7}}],"line":456},"60":{"loc":{"start":{"line":461,"column":6},"end":{"line":465,"column":7}},"type":"if","locations":[{"start":{"line":461,"column":6},"end":{"line":465,"column":7}},{"start":{},"end":{}}],"line":461},"61":{"loc":{"start":{"line":466,"column":6},"end":{"line":480,"column":7}},"type":"if","locations":[{"start":{"line":466,"column":6},"end":{"line":480,"column":7}},{"start":{"line":473,"column":13},"end":{"line":480,"column":7}}],"line":466},"62":{"loc":{"start":{"line":467,"column":8},"end":{"line":472,"column":9}},"type":"if","locations":[{"start":{"line":467,"column":8},"end":{"line":472,"column":9}},{"start":{},"end":{}}],"line":467},"63":{"loc":{"start":{"line":468,"column":10},"end":{"line":471,"column":11}},"type":"if","locations":[{"start":{"line":468,"column":10},"end":{"line":471,"column":11}},{"start":{},"end":{}}],"line":468},"64":{"loc":{"start":{"line":468,"column":14},"end":{"line":468,"column":141}},"type":"binary-expr","locations":[{"start":{"line":468,"column":14},"end":{"line":468,"column":30}},{"start":{"line":468,"column":34},"end":{"line":468,"column":141}}],"line":468},"65":{"loc":{"start":{"line":473,"column":13},"end":{"line":480,"column":7}},"type":"if","locations":[{"start":{"line":473,"column":13},"end":{"line":480,"column":7}},{"start":{},"end":{}}],"line":473},"66":{"loc":{"start":{"line":474,"column":8},"end":{"line":479,"column":9}},"type":"if","locations":[{"start":{"line":474,"column":8},"end":{"line":479,"column":9}},{"start":{},"end":{}}],"line":474},"67":{"loc":{"start":{"line":475,"column":10},"end":{"line":478,"column":11}},"type":"if","locations":[{"start":{"line":475,"column":10},"end":{"line":478,"column":11}},{"start":{},"end":{}}],"line":475},"68":{"loc":{"start":{"line":475,"column":14},"end":{"line":475,"column":141}},"type":"binary-expr","locations":[{"start":{"line":475,"column":14},"end":{"line":475,"column":30}},{"start":{"line":475,"column":34},"end":{"line":475,"column":141}}],"line":475},"69":{"loc":{"start":{"line":482,"column":4},"end":{"line":490,"column":5}},"type":"if","locations":[{"start":{"line":482,"column":4},"end":{"line":490,"column":5}},{"start":{"line":486,"column":11},"end":{"line":490,"column":5}}],"line":482},"70":{"loc":{"start":{"line":491,"column":4},"end":{"line":493,"column":5}},"type":"if","locations":[{"start":{"line":491,"column":4},"end":{"line":493,"column":5}},{"start":{},"end":{}}],"line":491},"71":{"loc":{"start":{"line":494,"column":4},"end":{"line":496,"column":5}},"type":"if","locations":[{"start":{"line":494,"column":4},"end":{"line":496,"column":5}},{"start":{},"end":{}}],"line":494},"72":{"loc":{"start":{"line":498,"column":28},"end":{"line":498,"column":66}},"type":"default-arg","locations":[{"start":{"line":498,"column":41},"end":{"line":498,"column":66}}],"line":498},"73":{"loc":{"start":{"line":498,"column":68},"end":{"line":498,"column":104}},"type":"default-arg","locations":[{"start":{"line":498,"column":80},"end":{"line":498,"column":104}}],"line":498},"74":{"loc":{"start":{"line":499,"column":4},"end":{"line":501,"column":5}},"type":"if","locations":[{"start":{"line":499,"column":4},"end":{"line":501,"column":5}},{"start":{},"end":{}}],"line":499},"75":{"loc":{"start":{"line":503,"column":4},"end":{"line":505,"column":5}},"type":"if","locations":[{"start":{"line":503,"column":4},"end":{"line":505,"column":5}},{"start":{},"end":{}}],"line":503},"76":{"loc":{"start":{"line":520,"column":57},"end":{"line":520,"column":95}},"type":"default-arg","locations":[{"start":{"line":520,"column":70},"end":{"line":520,"column":95}}],"line":520},"77":{"loc":{"start":{"line":520,"column":97},"end":{"line":520,"column":133}},"type":"default-arg","locations":[{"start":{"line":520,"column":109},"end":{"line":520,"column":133}}],"line":520},"78":{"loc":{"start":{"line":533,"column":6},"end":{"line":543,"column":7}},"type":"if","locations":[{"start":{"line":533,"column":6},"end":{"line":543,"column":7}},{"start":{"line":535,"column":13},"end":{"line":543,"column":7}}],"line":533},"79":{"loc":{"start":{"line":534,"column":24},"end":{"line":534,"column":73}},"type":"cond-expr","locations":[{"start":{"line":534,"column":67},"end":{"line":534,"column":68}},{"start":{"line":534,"column":71},"end":{"line":534,"column":73}}],"line":534},"80":{"loc":{"start":{"line":537,"column":8},"end":{"line":542,"column":9}},"type":"if","locations":[{"start":{"line":537,"column":8},"end":{"line":542,"column":9}},{"start":{"line":540,"column":15},"end":{"line":542,"column":9}}],"line":537},"81":{"loc":{"start":{"line":539,"column":26},"end":{"line":539,"column":96}},"type":"cond-expr","locations":[{"start":{"line":539,"column":58},"end":{"line":539,"column":59}},{"start":{"line":539,"column":62},"end":{"line":539,"column":96}}],"line":539},"82":{"loc":{"start":{"line":544,"column":6},"end":{"line":546,"column":7}},"type":"if","locations":[{"start":{"line":544,"column":6},"end":{"line":546,"column":7}},{"start":{},"end":{}}],"line":544},"83":{"loc":{"start":{"line":547,"column":6},"end":{"line":550,"column":7}},"type":"if","locations":[{"start":{"line":547,"column":6},"end":{"line":550,"column":7}},{"start":{},"end":{}}],"line":547},"84":{"loc":{"start":{"line":551,"column":6},"end":{"line":557,"column":7}},"type":"if","locations":[{"start":{"line":551,"column":6},"end":{"line":557,"column":7}},{"start":{"line":554,"column":13},"end":{"line":557,"column":7}}],"line":551},"85":{"loc":{"start":{"line":559,"column":4},"end":{"line":561,"column":5}},"type":"if","locations":[{"start":{"line":559,"column":4},"end":{"line":561,"column":5}},{"start":{},"end":{}}],"line":559},"86":{"loc":{"start":{"line":560,"column":13},"end":{"line":560,"column":77}},"type":"cond-expr","locations":[{"start":{"line":560,"column":38},"end":{"line":560,"column":68}},{"start":{"line":560,"column":71},"end":{"line":560,"column":77}}],"line":560},"87":{"loc":{"start":{"line":562,"column":4},"end":{"line":565,"column":5}},"type":"if","locations":[{"start":{"line":562,"column":4},"end":{"line":565,"column":5}},{"start":{},"end":{}}],"line":562},"88":{"loc":{"start":{"line":563,"column":6},"end":{"line":563,"column":72}},"type":"if","locations":[{"start":{"line":563,"column":6},"end":{"line":563,"column":72}},{"start":{},"end":{}}],"line":563},"89":{"loc":{"start":{"line":564,"column":13},"end":{"line":564,"column":126}},"type":"cond-expr","locations":[{"start":{"line":564,"column":56},"end":{"line":564,"column":90}},{"start":{"line":564,"column":93},"end":{"line":564,"column":126}}],"line":564},"90":{"loc":{"start":{"line":566,"column":4},"end":{"line":569,"column":5}},"type":"if","locations":[{"start":{"line":566,"column":4},"end":{"line":569,"column":5}},{"start":{},"end":{}}],"line":566},"91":{"loc":{"start":{"line":567,"column":6},"end":{"line":567,"column":72}},"type":"if","locations":[{"start":{"line":567,"column":6},"end":{"line":567,"column":72}},{"start":{},"end":{}}],"line":567},"92":{"loc":{"start":{"line":568,"column":13},"end":{"line":568,"column":126}},"type":"cond-expr","locations":[{"start":{"line":568,"column":56},"end":{"line":568,"column":89}},{"start":{"line":568,"column":92},"end":{"line":568,"column":126}}],"line":568},"93":{"loc":{"start":{"line":575,"column":6},"end":{"line":577,"column":7}},"type":"if","locations":[{"start":{"line":575,"column":6},"end":{"line":577,"column":7}},{"start":{},"end":{}}],"line":575},"94":{"loc":{"start":{"line":575,"column":10},"end":{"line":575,"column":106}},"type":"binary-expr","locations":[{"start":{"line":575,"column":10},"end":{"line":575,"column":29}},{"start":{"line":575,"column":33},"end":{"line":575,"column":55}},{"start":{"line":575,"column":59},"end":{"line":575,"column":82}},{"start":{"line":575,"column":86},"end":{"line":575,"column":106}}],"line":575},"95":{"loc":{"start":{"line":578,"column":6},"end":{"line":581,"column":7}},"type":"if","locations":[{"start":{"line":578,"column":6},"end":{"line":581,"column":7}},{"start":{},"end":{}}],"line":578},"96":{"loc":{"start":{"line":591,"column":6},"end":{"line":593,"column":7}},"type":"if","locations":[{"start":{"line":591,"column":6},"end":{"line":593,"column":7}},{"start":{},"end":{}}],"line":591},"97":{"loc":{"start":{"line":594,"column":6},"end":{"line":597,"column":7}},"type":"if","locations":[{"start":{"line":594,"column":6},"end":{"line":597,"column":7}},{"start":{},"end":{}}],"line":594},"98":{"loc":{"start":{"line":598,"column":6},"end":{"line":600,"column":7}},"type":"if","locations":[{"start":{"line":598,"column":6},"end":{"line":600,"column":7}},{"start":{},"end":{}}],"line":598},"99":{"loc":{"start":{"line":598,"column":10},"end":{"line":598,"column":83}},"type":"binary-expr","locations":[{"start":{"line":598,"column":10},"end":{"line":598,"column":32}},{"start":{"line":598,"column":36},"end":{"line":598,"column":56}},{"start":{"line":598,"column":60},"end":{"line":598,"column":83}}],"line":598},"100":{"loc":{"start":{"line":602,"column":6},"end":{"line":604,"column":7}},"type":"if","locations":[{"start":{"line":602,"column":6},"end":{"line":604,"column":7}},{"start":{},"end":{}}],"line":602},"101":{"loc":{"start":{"line":611,"column":6},"end":{"line":613,"column":7}},"type":"if","locations":[{"start":{"line":611,"column":6},"end":{"line":613,"column":7}},{"start":{},"end":{}}],"line":611},"102":{"loc":{"start":{"line":614,"column":6},"end":{"line":617,"column":7}},"type":"if","locations":[{"start":{"line":614,"column":6},"end":{"line":617,"column":7}},{"start":{},"end":{}}],"line":614},"103":{"loc":{"start":{"line":618,"column":6},"end":{"line":620,"column":7}},"type":"if","locations":[{"start":{"line":618,"column":6},"end":{"line":620,"column":7}},{"start":{},"end":{}}],"line":618},"104":{"loc":{"start":{"line":618,"column":10},"end":{"line":618,"column":83}},"type":"binary-expr","locations":[{"start":{"line":618,"column":10},"end":{"line":618,"column":32}},{"start":{"line":618,"column":36},"end":{"line":618,"column":56}},{"start":{"line":618,"column":60},"end":{"line":618,"column":83}}],"line":618},"105":{"loc":{"start":{"line":622,"column":6},"end":{"line":624,"column":7}},"type":"if","locations":[{"start":{"line":622,"column":6},"end":{"line":624,"column":7}},{"start":{},"end":{}}],"line":622},"106":{"loc":{"start":{"line":631,"column":6},"end":{"line":633,"column":7}},"type":"if","locations":[{"start":{"line":631,"column":6},"end":{"line":633,"column":7}},{"start":{},"end":{}}],"line":631},"107":{"loc":{"start":{"line":631,"column":10},"end":{"line":631,"column":131}},"type":"binary-expr","locations":[{"start":{"line":631,"column":10},"end":{"line":631,"column":29}},{"start":{"line":631,"column":33},"end":{"line":631,"column":54}},{"start":{"line":631,"column":58},"end":{"line":631,"column":80}},{"start":{"line":631,"column":84},"end":{"line":631,"column":104}},{"start":{"line":631,"column":108},"end":{"line":631,"column":131}}],"line":631},"108":{"loc":{"start":{"line":641,"column":6},"end":{"line":643,"column":7}},"type":"if","locations":[{"start":{"line":641,"column":6},"end":{"line":643,"column":7}},{"start":{},"end":{}}],"line":641},"109":{"loc":{"start":{"line":641,"column":10},"end":{"line":641,"column":53}},"type":"binary-expr","locations":[{"start":{"line":641,"column":10},"end":{"line":641,"column":29}},{"start":{"line":641,"column":33},"end":{"line":641,"column":53}}],"line":641},"110":{"loc":{"start":{"line":651,"column":6},"end":{"line":653,"column":7}},"type":"if","locations":[{"start":{"line":651,"column":6},"end":{"line":653,"column":7}},{"start":{},"end":{}}],"line":651},"111":{"loc":{"start":{"line":651,"column":10},"end":{"line":651,"column":86}},"type":"binary-expr","locations":[{"start":{"line":651,"column":10},"end":{"line":651,"column":29}},{"start":{"line":651,"column":33},"end":{"line":651,"column":53}},{"start":{"line":651,"column":57},"end":{"line":651,"column":86}}],"line":651},"112":{"loc":{"start":{"line":682,"column":6},"end":{"line":684,"column":7}},"type":"if","locations":[{"start":{"line":682,"column":6},"end":{"line":684,"column":7}},{"start":{},"end":{}}],"line":682},"113":{"loc":{"start":{"line":699,"column":6},"end":{"line":701,"column":7}},"type":"if","locations":[{"start":{"line":699,"column":6},"end":{"line":701,"column":7}},{"start":{},"end":{}}],"line":699},"114":{"loc":{"start":{"line":702,"column":6},"end":{"line":706,"column":7}},"type":"if","locations":[{"start":{"line":702,"column":6},"end":{"line":706,"column":7}},{"start":{"line":704,"column":13},"end":{"line":706,"column":7}}],"line":702},"115":{"loc":{"start":{"line":718,"column":8},"end":{"line":727,"column":9}},"type":"if","locations":[{"start":{"line":718,"column":8},"end":{"line":727,"column":9}},{"start":{"line":720,"column":15},"end":{"line":727,"column":9}}],"line":718},"116":{"loc":{"start":{"line":721,"column":31},"end":{"line":721,"column":59}},"type":"binary-expr","locations":[{"start":{"line":721,"column":31},"end":{"line":721,"column":37}},{"start":{"line":721,"column":41},"end":{"line":721,"column":59}}],"line":721},"117":{"loc":{"start":{"line":722,"column":10},"end":{"line":726,"column":11}},"type":"if","locations":[{"start":{"line":722,"column":10},"end":{"line":726,"column":11}},{"start":{"line":724,"column":17},"end":{"line":726,"column":11}}],"line":722},"118":{"loc":{"start":{"line":743,"column":6},"end":{"line":745,"column":7}},"type":"if","locations":[{"start":{"line":743,"column":6},"end":{"line":745,"column":7}},{"start":{},"end":{}}],"line":743},"119":{"loc":{"start":{"line":751,"column":6},"end":{"line":753,"column":7}},"type":"if","locations":[{"start":{"line":751,"column":6},"end":{"line":753,"column":7}},{"start":{},"end":{}}],"line":751},"120":{"loc":{"start":{"line":759,"column":6},"end":{"line":761,"column":7}},"type":"if","locations":[{"start":{"line":759,"column":6},"end":{"line":761,"column":7}},{"start":{},"end":{}}],"line":759},"121":{"loc":{"start":{"line":767,"column":6},"end":{"line":769,"column":7}},"type":"if","locations":[{"start":{"line":767,"column":6},"end":{"line":769,"column":7}},{"start":{},"end":{}}],"line":767},"122":{"loc":{"start":{"line":775,"column":6},"end":{"line":777,"column":7}},"type":"if","locations":[{"start":{"line":775,"column":6},"end":{"line":777,"column":7}},{"start":{},"end":{}}],"line":775},"123":{"loc":{"start":{"line":783,"column":6},"end":{"line":785,"column":7}},"type":"if","locations":[{"start":{"line":783,"column":6},"end":{"line":785,"column":7}},{"start":{},"end":{}}],"line":783},"124":{"loc":{"start":{"line":791,"column":6},"end":{"line":793,"column":7}},"type":"if","locations":[{"start":{"line":791,"column":6},"end":{"line":793,"column":7}},{"start":{},"end":{}}],"line":791},"125":{"loc":{"start":{"line":799,"column":6},"end":{"line":801,"column":7}},"type":"if","locations":[{"start":{"line":799,"column":6},"end":{"line":801,"column":7}},{"start":{},"end":{}}],"line":799},"126":{"loc":{"start":{"line":807,"column":6},"end":{"line":809,"column":7}},"type":"if","locations":[{"start":{"line":807,"column":6},"end":{"line":809,"column":7}},{"start":{},"end":{}}],"line":807},"127":{"loc":{"start":{"line":815,"column":6},"end":{"line":817,"column":7}},"type":"if","locations":[{"start":{"line":815,"column":6},"end":{"line":817,"column":7}},{"start":{},"end":{}}],"line":815},"128":{"loc":{"start":{"line":823,"column":6},"end":{"line":825,"column":7}},"type":"if","locations":[{"start":{"line":823,"column":6},"end":{"line":825,"column":7}},{"start":{},"end":{}}],"line":823},"129":{"loc":{"start":{"line":831,"column":6},"end":{"line":833,"column":7}},"type":"if","locations":[{"start":{"line":831,"column":6},"end":{"line":833,"column":7}},{"start":{},"end":{}}],"line":831},"130":{"loc":{"start":{"line":839,"column":6},"end":{"line":841,"column":7}},"type":"if","locations":[{"start":{"line":839,"column":6},"end":{"line":841,"column":7}},{"start":{},"end":{}}],"line":839},"131":{"loc":{"start":{"line":847,"column":6},"end":{"line":849,"column":7}},"type":"if","locations":[{"start":{"line":847,"column":6},"end":{"line":849,"column":7}},{"start":{},"end":{}}],"line":847},"132":{"loc":{"start":{"line":855,"column":6},"end":{"line":857,"column":7}},"type":"if","locations":[{"start":{"line":855,"column":6},"end":{"line":857,"column":7}},{"start":{},"end":{}}],"line":855},"133":{"loc":{"start":{"line":866,"column":6},"end":{"line":868,"column":7}},"type":"if","locations":[{"start":{"line":866,"column":6},"end":{"line":868,"column":7}},{"start":{},"end":{}}],"line":866},"134":{"loc":{"start":{"line":872,"column":7},"end":{"line":872,"column":15}},"type":"default-arg","locations":[{"start":{"line":872,"column":14},"end":{"line":872,"column":15}}],"line":872},"135":{"loc":{"start":{"line":875,"column":23},"end":{"line":875,"column":60}},"type":"cond-expr","locations":[{"start":{"line":875,"column":36},"end":{"line":875,"column":41}},{"start":{"line":875,"column":44},"end":{"line":875,"column":60}}],"line":875},"136":{"loc":{"start":{"line":881,"column":4},"end":{"line":883,"column":5}},"type":"if","locations":[{"start":{"line":881,"column":4},"end":{"line":883,"column":5}},{"start":{},"end":{}}],"line":881},"137":{"loc":{"start":{"line":882,"column":13},"end":{"line":882,"column":59}},"type":"binary-expr","locations":[{"start":{"line":882,"column":13},"end":{"line":882,"column":31}},{"start":{"line":882,"column":35},"end":{"line":882,"column":59}}],"line":882},"138":{"loc":{"start":{"line":885,"column":4},"end":{"line":889,"column":5}},"type":"if","locations":[{"start":{"line":885,"column":4},"end":{"line":889,"column":5}},{"start":{},"end":{}}],"line":885},"139":{"loc":{"start":{"line":886,"column":26},"end":{"line":886,"column":80}},"type":"binary-expr","locations":[{"start":{"line":886,"column":26},"end":{"line":886,"column":52}},{"start":{"line":886,"column":56},"end":{"line":886,"column":80}}],"line":886},"140":{"loc":{"start":{"line":887,"column":25},"end":{"line":887,"column":83}},"type":"binary-expr","locations":[{"start":{"line":887,"column":25},"end":{"line":887,"column":55}},{"start":{"line":887,"column":59},"end":{"line":887,"column":83}}],"line":887},"141":{"loc":{"start":{"line":890,"column":11},"end":{"line":890,"column":71}},"type":"binary-expr","locations":[{"start":{"line":890,"column":11},"end":{"line":890,"column":43}},{"start":{"line":890,"column":47},"end":{"line":890,"column":71}}],"line":890},"142":{"loc":{"start":{"line":911,"column":6},"end":{"line":911,"column":14}},"type":"default-arg","locations":[{"start":{"line":911,"column":13},"end":{"line":911,"column":14}}],"line":911},"143":{"loc":{"start":{"line":915,"column":6},"end":{"line":917,"column":7}},"type":"if","locations":[{"start":{"line":915,"column":6},"end":{"line":917,"column":7}},{"start":{},"end":{}}],"line":915},"144":{"loc":{"start":{"line":915,"column":10},"end":{"line":915,"column":131}},"type":"binary-expr","locations":[{"start":{"line":915,"column":10},"end":{"line":915,"column":29}},{"start":{"line":915,"column":33},"end":{"line":915,"column":54}},{"start":{"line":915,"column":58},"end":{"line":915,"column":80}},{"start":{"line":915,"column":84},"end":{"line":915,"column":107}},{"start":{"line":915,"column":111},"end":{"line":915,"column":131}}],"line":915},"145":{"loc":{"start":{"line":919,"column":6},"end":{"line":921,"column":7}},"type":"if","locations":[{"start":{"line":919,"column":6},"end":{"line":921,"column":7}},{"start":{},"end":{}}],"line":919},"146":{"loc":{"start":{"line":944,"column":6},"end":{"line":944,"column":14}},"type":"default-arg","locations":[{"start":{"line":944,"column":13},"end":{"line":944,"column":14}}],"line":944},"147":{"loc":{"start":{"line":946,"column":4},"end":{"line":948,"column":5}},"type":"if","locations":[{"start":{"line":946,"column":4},"end":{"line":948,"column":5}},{"start":{},"end":{}}],"line":946},"148":{"loc":{"start":{"line":953,"column":6},"end":{"line":955,"column":7}},"type":"if","locations":[{"start":{"line":953,"column":6},"end":{"line":955,"column":7}},{"start":{},"end":{}}],"line":953},"149":{"loc":{"start":{"line":961,"column":6},"end":{"line":963,"column":7}},"type":"if","locations":[{"start":{"line":961,"column":6},"end":{"line":963,"column":7}},{"start":{},"end":{}}],"line":961},"150":{"loc":{"start":{"line":969,"column":6},"end":{"line":971,"column":7}},"type":"if","locations":[{"start":{"line":969,"column":6},"end":{"line":971,"column":7}},{"start":{},"end":{}}],"line":969},"151":{"loc":{"start":{"line":977,"column":6},"end":{"line":979,"column":7}},"type":"if","locations":[{"start":{"line":977,"column":6},"end":{"line":979,"column":7}},{"start":{},"end":{}}],"line":977},"152":{"loc":{"start":{"line":988,"column":6},"end":{"line":990,"column":7}},"type":"if","locations":[{"start":{"line":988,"column":6},"end":{"line":990,"column":7}},{"start":{},"end":{}}],"line":988},"153":{"loc":{"start":{"line":999,"column":6},"end":{"line":1001,"column":7}},"type":"if","locations":[{"start":{"line":999,"column":6},"end":{"line":1001,"column":7}},{"start":{},"end":{}}],"line":999},"154":{"loc":{"start":{"line":1010,"column":6},"end":{"line":1012,"column":7}},"type":"if","locations":[{"start":{"line":1010,"column":6},"end":{"line":1012,"column":7}},{"start":{},"end":{}}],"line":1010},"155":{"loc":{"start":{"line":1028,"column":6},"end":{"line":1030,"column":7}},"type":"if","locations":[{"start":{"line":1028,"column":6},"end":{"line":1030,"column":7}},{"start":{},"end":{}}],"line":1028},"156":{"loc":{"start":{"line":1031,"column":6},"end":{"line":1033,"column":7}},"type":"if","locations":[{"start":{"line":1031,"column":6},"end":{"line":1033,"column":7}},{"start":{},"end":{}}],"line":1031},"157":{"loc":{"start":{"line":1034,"column":6},"end":{"line":1036,"column":7}},"type":"if","locations":[{"start":{"line":1034,"column":6},"end":{"line":1036,"column":7}},{"start":{},"end":{}}],"line":1034},"158":{"loc":{"start":{"line":1034,"column":10},"end":{"line":1034,"column":48}},"type":"binary-expr","locations":[{"start":{"line":1034,"column":10},"end":{"line":1034,"column":27}},{"start":{"line":1034,"column":31},"end":{"line":1034,"column":48}}],"line":1034},"159":{"loc":{"start":{"line":1037,"column":6},"end":{"line":1039,"column":7}},"type":"if","locations":[{"start":{"line":1037,"column":6},"end":{"line":1039,"column":7}},{"start":{},"end":{}}],"line":1037},"160":{"loc":{"start":{"line":1040,"column":6},"end":{"line":1042,"column":7}},"type":"if","locations":[{"start":{"line":1040,"column":6},"end":{"line":1042,"column":7}},{"start":{},"end":{}}],"line":1040},"161":{"loc":{"start":{"line":1065,"column":4},"end":{"line":1087,"column":5}},"type":"if","locations":[{"start":{"line":1065,"column":4},"end":{"line":1087,"column":5}},{"start":{"line":1083,"column":11},"end":{"line":1087,"column":5}}],"line":1065},"162":{"loc":{"start":{"line":1070,"column":6},"end":{"line":1082,"column":7}},"type":"if","locations":[{"start":{"line":1070,"column":6},"end":{"line":1082,"column":7}},{"start":{"line":1075,"column":13},"end":{"line":1082,"column":7}}],"line":1070},"163":{"loc":{"start":{"line":1070,"column":10},"end":{"line":1070,"column":55}},"type":"binary-expr","locations":[{"start":{"line":1070,"column":10},"end":{"line":1070,"column":29}},{"start":{"line":1070,"column":33},"end":{"line":1070,"column":55}}],"line":1070},"164":{"loc":{"start":{"line":1075,"column":13},"end":{"line":1082,"column":7}},"type":"if","locations":[{"start":{"line":1075,"column":13},"end":{"line":1082,"column":7}},{"start":{"line":1080,"column":13},"end":{"line":1082,"column":7}}],"line":1075},"165":{"loc":{"start":{"line":1075,"column":17},"end":{"line":1075,"column":61}},"type":"binary-expr","locations":[{"start":{"line":1075,"column":17},"end":{"line":1075,"column":36}},{"start":{"line":1075,"column":40},"end":{"line":1075,"column":61}}],"line":1075},"166":{"loc":{"start":{"line":1104,"column":4},"end":{"line":1201,"column":5}},"type":"if","locations":[{"start":{"line":1104,"column":4},"end":{"line":1201,"column":5}},{"start":{},"end":{}}],"line":1104},"167":{"loc":{"start":{"line":1112,"column":6},"end":{"line":1200,"column":7}},"type":"if","locations":[{"start":{"line":1112,"column":6},"end":{"line":1200,"column":7}},{"start":{},"end":{}}],"line":1112},"168":{"loc":{"start":{"line":1113,"column":8},"end":{"line":1171,"column":9}},"type":"if","locations":[{"start":{"line":1113,"column":8},"end":{"line":1171,"column":9}},{"start":{"line":1133,"column":15},"end":{"line":1171,"column":9}}],"line":1113},"169":{"loc":{"start":{"line":1121,"column":10},"end":{"line":1132,"column":11}},"type":"if","locations":[{"start":{"line":1121,"column":10},"end":{"line":1132,"column":11}},{"start":{},"end":{}}],"line":1121},"170":{"loc":{"start":{"line":1123,"column":14},"end":{"line":1125,"column":15}},"type":"if","locations":[{"start":{"line":1123,"column":14},"end":{"line":1125,"column":15}},{"start":{},"end":{}}],"line":1123},"171":{"loc":{"start":{"line":1123,"column":18},"end":{"line":1123,"column":65}},"type":"binary-expr","locations":[{"start":{"line":1123,"column":18},"end":{"line":1123,"column":32}},{"start":{"line":1123,"column":36},"end":{"line":1123,"column":65}}],"line":1123},"172":{"loc":{"start":{"line":1127,"column":14},"end":{"line":1129,"column":15}},"type":"if","locations":[{"start":{"line":1127,"column":14},"end":{"line":1129,"column":15}},{"start":{},"end":{}}],"line":1127},"173":{"loc":{"start":{"line":1139,"column":10},"end":{"line":1170,"column":11}},"type":"if","locations":[{"start":{"line":1139,"column":10},"end":{"line":1170,"column":11}},{"start":{},"end":{}}],"line":1139},"174":{"loc":{"start":{"line":1142,"column":14},"end":{"line":1150,"column":15}},"type":"if","locations":[{"start":{"line":1142,"column":14},"end":{"line":1150,"column":15}},{"start":{"line":1144,"column":21},"end":{"line":1150,"column":15}}],"line":1142},"175":{"loc":{"start":{"line":1144,"column":21},"end":{"line":1150,"column":15}},"type":"if","locations":[{"start":{"line":1144,"column":21},"end":{"line":1150,"column":15}},{"start":{"line":1146,"column":21},"end":{"line":1150,"column":15}}],"line":1144},"176":{"loc":{"start":{"line":1146,"column":21},"end":{"line":1150,"column":15}},"type":"if","locations":[{"start":{"line":1146,"column":21},"end":{"line":1150,"column":15}},{"start":{"line":1148,"column":21},"end":{"line":1150,"column":15}}],"line":1146},"177":{"loc":{"start":{"line":1148,"column":21},"end":{"line":1150,"column":15}},"type":"if","locations":[{"start":{"line":1148,"column":21},"end":{"line":1150,"column":15}},{"start":{},"end":{}}],"line":1148},"178":{"loc":{"start":{"line":1152,"column":14},"end":{"line":1158,"column":15}},"type":"if","locations":[{"start":{"line":1152,"column":14},"end":{"line":1158,"column":15}},{"start":{"line":1154,"column":21},"end":{"line":1158,"column":15}}],"line":1152},"179":{"loc":{"start":{"line":1154,"column":21},"end":{"line":1158,"column":15}},"type":"if","locations":[{"start":{"line":1154,"column":21},"end":{"line":1158,"column":15}},{"start":{"line":1156,"column":21},"end":{"line":1158,"column":15}}],"line":1154},"180":{"loc":{"start":{"line":1159,"column":14},"end":{"line":1168,"column":15}},"type":"if","locations":[{"start":{"line":1159,"column":14},"end":{"line":1168,"column":15}},{"start":{},"end":{}}],"line":1159},"181":{"loc":{"start":{"line":1159,"column":18},"end":{"line":1159,"column":74}},"type":"binary-expr","locations":[{"start":{"line":1159,"column":18},"end":{"line":1159,"column":39}},{"start":{"line":1159,"column":43},"end":{"line":1159,"column":74}}],"line":1159},"182":{"loc":{"start":{"line":1161,"column":18},"end":{"line":1166,"column":19}},"type":"if","locations":[{"start":{"line":1161,"column":18},"end":{"line":1166,"column":19}},{"start":{},"end":{}}],"line":1161},"183":{"loc":{"start":{"line":1161,"column":22},"end":{"line":1161,"column":75}},"type":"binary-expr","locations":[{"start":{"line":1161,"column":22},"end":{"line":1161,"column":39}},{"start":{"line":1161,"column":43},"end":{"line":1161,"column":75}}],"line":1161},"184":{"loc":{"start":{"line":1162,"column":20},"end":{"line":1164,"column":21}},"type":"if","locations":[{"start":{"line":1162,"column":20},"end":{"line":1164,"column":21}},{"start":{},"end":{}}],"line":1162},"185":{"loc":{"start":{"line":1172,"column":8},"end":{"line":1198,"column":9}},"type":"if","locations":[{"start":{"line":1172,"column":8},"end":{"line":1198,"column":9}},{"start":{},"end":{}}],"line":1172},"186":{"loc":{"start":{"line":1228,"column":4},"end":{"line":1230,"column":5}},"type":"if","locations":[{"start":{"line":1228,"column":4},"end":{"line":1230,"column":5}},{"start":{},"end":{}}],"line":1228},"187":{"loc":{"start":{"line":1231,"column":4},"end":{"line":1285,"column":5}},"type":"if","locations":[{"start":{"line":1231,"column":4},"end":{"line":1285,"column":5}},{"start":{"line":1283,"column":11},"end":{"line":1285,"column":5}}],"line":1231},"188":{"loc":{"start":{"line":1231,"column":8},"end":{"line":1231,"column":35}},"type":"binary-expr","locations":[{"start":{"line":1231,"column":8},"end":{"line":1231,"column":20}},{"start":{"line":1231,"column":24},"end":{"line":1231,"column":35}}],"line":1231},"189":{"loc":{"start":{"line":1232,"column":6},"end":{"line":1282,"column":7}},"type":"if","locations":[{"start":{"line":1232,"column":6},"end":{"line":1282,"column":7}},{"start":{"line":1234,"column":13},"end":{"line":1282,"column":7}}],"line":1232},"190":{"loc":{"start":{"line":1234,"column":13},"end":{"line":1282,"column":7}},"type":"if","locations":[{"start":{"line":1234,"column":13},"end":{"line":1282,"column":7}},{"start":{"line":1236,"column":13},"end":{"line":1282,"column":7}}],"line":1234},"191":{"loc":{"start":{"line":1237,"column":8},"end":{"line":1281,"column":9}},"type":"switch","locations":[{"start":{"line":1238,"column":10},"end":{"line":1240,"column":18}},{"start":{"line":1241,"column":10},"end":{"line":1243,"column":18}},{"start":{"line":1244,"column":10},"end":{"line":1246,"column":18}},{"start":{"line":1247,"column":10},"end":{"line":1249,"column":18}},{"start":{"line":1250,"column":10},"end":{"line":1252,"column":18}},{"start":{"line":1253,"column":10},"end":{"line":1259,"column":18}},{"start":{"line":1260,"column":10},"end":{"line":1262,"column":18}},{"start":{"line":1263,"column":10},"end":{"line":1265,"column":18}},{"start":{"line":1266,"column":10},"end":{"line":1268,"column":18}},{"start":{"line":1269,"column":10},"end":{"line":1271,"column":18}},{"start":{"line":1272,"column":10},"end":{"line":1274,"column":18}},{"start":{"line":1275,"column":10},"end":{"line":1277,"column":18}},{"start":{"line":1278,"column":10},"end":{"line":1280,"column":18}}],"line":1237},"192":{"loc":{"start":{"line":1254,"column":12},"end":{"line":1258,"column":13}},"type":"if","locations":[{"start":{"line":1254,"column":12},"end":{"line":1258,"column":13}},{"start":{"line":1256,"column":19},"end":{"line":1258,"column":13}}],"line":1254},"193":{"loc":{"start":{"line":1286,"column":4},"end":{"line":1288,"column":5}},"type":"if","locations":[{"start":{"line":1286,"column":4},"end":{"line":1288,"column":5}},{"start":{},"end":{}}],"line":1286},"194":{"loc":{"start":{"line":1289,"column":4},"end":{"line":1305,"column":5}},"type":"if","locations":[{"start":{"line":1289,"column":4},"end":{"line":1305,"column":5}},{"start":{"line":1297,"column":11},"end":{"line":1305,"column":5}}],"line":1289},"195":{"loc":{"start":{"line":1311,"column":4},"end":{"line":1313,"column":5}},"type":"if","locations":[{"start":{"line":1311,"column":4},"end":{"line":1313,"column":5}},{"start":{},"end":{}}],"line":1311},"196":{"loc":{"start":{"line":1314,"column":4},"end":{"line":1316,"column":5}},"type":"if","locations":[{"start":{"line":1314,"column":4},"end":{"line":1316,"column":5}},{"start":{},"end":{}}],"line":1314},"197":{"loc":{"start":{"line":1324,"column":8},"end":{"line":1332,"column":9}},"type":"if","locations":[{"start":{"line":1324,"column":8},"end":{"line":1332,"column":9}},{"start":{"line":1326,"column":15},"end":{"line":1332,"column":9}}],"line":1324},"198":{"loc":{"start":{"line":1326,"column":15},"end":{"line":1332,"column":9}},"type":"if","locations":[{"start":{"line":1326,"column":15},"end":{"line":1332,"column":9}},{"start":{"line":1328,"column":15},"end":{"line":1332,"column":9}}],"line":1326},"199":{"loc":{"start":{"line":1328,"column":15},"end":{"line":1332,"column":9}},"type":"if","locations":[{"start":{"line":1328,"column":15},"end":{"line":1332,"column":9}},{"start":{"line":1330,"column":15},"end":{"line":1332,"column":9}}],"line":1328},"200":{"loc":{"start":{"line":1334,"column":8},"end":{"line":1342,"column":9}},"type":"if","locations":[{"start":{"line":1334,"column":8},"end":{"line":1342,"column":9}},{"start":{"line":1336,"column":15},"end":{"line":1342,"column":9}}],"line":1334},"201":{"loc":{"start":{"line":1336,"column":15},"end":{"line":1342,"column":9}},"type":"if","locations":[{"start":{"line":1336,"column":15},"end":{"line":1342,"column":9}},{"start":{"line":1338,"column":15},"end":{"line":1342,"column":9}}],"line":1336},"202":{"loc":{"start":{"line":1338,"column":15},"end":{"line":1342,"column":9}},"type":"if","locations":[{"start":{"line":1338,"column":15},"end":{"line":1342,"column":9}},{"start":{"line":1340,"column":15},"end":{"line":1342,"column":9}}],"line":1338},"203":{"loc":{"start":{"line":1343,"column":8},"end":{"line":1397,"column":9}},"type":"if","locations":[{"start":{"line":1343,"column":8},"end":{"line":1397,"column":9}},{"start":{"line":1395,"column":15},"end":{"line":1397,"column":9}}],"line":1343},"204":{"loc":{"start":{"line":1343,"column":12},"end":{"line":1343,"column":35}},"type":"binary-expr","locations":[{"start":{"line":1343,"column":12},"end":{"line":1343,"column":24}},{"start":{"line":1343,"column":28},"end":{"line":1343,"column":35}}],"line":1343},"205":{"loc":{"start":{"line":1344,"column":10},"end":{"line":1394,"column":11}},"type":"if","locations":[{"start":{"line":1344,"column":10},"end":{"line":1394,"column":11}},{"start":{"line":1346,"column":17},"end":{"line":1394,"column":11}}],"line":1344},"206":{"loc":{"start":{"line":1346,"column":17},"end":{"line":1394,"column":11}},"type":"if","locations":[{"start":{"line":1346,"column":17},"end":{"line":1394,"column":11}},{"start":{"line":1348,"column":17},"end":{"line":1394,"column":11}}],"line":1346},"207":{"loc":{"start":{"line":1349,"column":12},"end":{"line":1393,"column":13}},"type":"switch","locations":[{"start":{"line":1350,"column":14},"end":{"line":1352,"column":22}},{"start":{"line":1353,"column":14},"end":{"line":1355,"column":22}},{"start":{"line":1356,"column":14},"end":{"line":1358,"column":22}},{"start":{"line":1359,"column":14},"end":{"line":1361,"column":22}},{"start":{"line":1362,"column":14},"end":{"line":1364,"column":22}},{"start":{"line":1365,"column":14},"end":{"line":1371,"column":22}},{"start":{"line":1372,"column":14},"end":{"line":1374,"column":22}},{"start":{"line":1375,"column":14},"end":{"line":1377,"column":22}},{"start":{"line":1378,"column":14},"end":{"line":1380,"column":22}},{"start":{"line":1381,"column":14},"end":{"line":1383,"column":22}},{"start":{"line":1384,"column":14},"end":{"line":1386,"column":22}},{"start":{"line":1387,"column":14},"end":{"line":1389,"column":22}},{"start":{"line":1390,"column":14},"end":{"line":1392,"column":22}}],"line":1349},"208":{"loc":{"start":{"line":1366,"column":16},"end":{"line":1370,"column":17}},"type":"if","locations":[{"start":{"line":1366,"column":16},"end":{"line":1370,"column":17}},{"start":{"line":1368,"column":23},"end":{"line":1370,"column":17}}],"line":1366},"209":{"loc":{"start":{"line":1404,"column":4},"end":{"line":1406,"column":5}},"type":"if","locations":[{"start":{"line":1404,"column":4},"end":{"line":1406,"column":5}},{"start":{},"end":{}}],"line":1404},"210":{"loc":{"start":{"line":1404,"column":8},"end":{"line":1404,"column":77}},"type":"binary-expr","locations":[{"start":{"line":1404,"column":8},"end":{"line":1404,"column":39}},{"start":{"line":1404,"column":43},"end":{"line":1404,"column":77}}],"line":1404},"211":{"loc":{"start":{"line":1407,"column":4},"end":{"line":1409,"column":5}},"type":"if","locations":[{"start":{"line":1407,"column":4},"end":{"line":1409,"column":5}},{"start":{},"end":{}}],"line":1407},"212":{"loc":{"start":{"line":1410,"column":4},"end":{"line":1412,"column":5}},"type":"if","locations":[{"start":{"line":1410,"column":4},"end":{"line":1412,"column":5}},{"start":{},"end":{}}],"line":1410},"213":{"loc":{"start":{"line":1416,"column":4},"end":{"line":1425,"column":5}},"type":"if","locations":[{"start":{"line":1416,"column":4},"end":{"line":1425,"column":5}},{"start":{},"end":{}}],"line":1416},"214":{"loc":{"start":{"line":1435,"column":6},"end":{"line":1437,"column":7}},"type":"if","locations":[{"start":{"line":1435,"column":6},"end":{"line":1437,"column":7}},{"start":{},"end":{}}],"line":1435},"215":{"loc":{"start":{"line":1449,"column":49},"end":{"line":1449,"column":57}},"type":"default-arg","locations":[{"start":{"line":1449,"column":55},"end":{"line":1449,"column":57}}],"line":1449},"216":{"loc":{"start":{"line":1449,"column":59},"end":{"line":1449,"column":70}},"type":"default-arg","locations":[{"start":{"line":1449,"column":68},"end":{"line":1449,"column":70}}],"line":1449},"217":{"loc":{"start":{"line":1450,"column":4},"end":{"line":1453,"column":5}},"type":"if","locations":[{"start":{"line":1450,"column":4},"end":{"line":1453,"column":5}},{"start":{},"end":{}}],"line":1450},"218":{"loc":{"start":{"line":1450,"column":8},"end":{"line":1450,"column":61}},"type":"binary-expr","locations":[{"start":{"line":1450,"column":8},"end":{"line":1450,"column":34}},{"start":{"line":1450,"column":38},"end":{"line":1450,"column":61}}],"line":1450},"219":{"loc":{"start":{"line":1468,"column":4},"end":{"line":1470,"column":5}},"type":"if","locations":[{"start":{"line":1468,"column":4},"end":{"line":1470,"column":5}},{"start":{},"end":{}}],"line":1468},"220":{"loc":{"start":{"line":1471,"column":4},"end":{"line":1473,"column":5}},"type":"if","locations":[{"start":{"line":1471,"column":4},"end":{"line":1473,"column":5}},{"start":{},"end":{}}],"line":1471},"221":{"loc":{"start":{"line":1474,"column":4},"end":{"line":1494,"column":5}},"type":"if","locations":[{"start":{"line":1474,"column":4},"end":{"line":1494,"column":5}},{"start":{},"end":{}}],"line":1474},"222":{"loc":{"start":{"line":1476,"column":6},"end":{"line":1478,"column":7}},"type":"if","locations":[{"start":{"line":1476,"column":6},"end":{"line":1478,"column":7}},{"start":{},"end":{}}],"line":1476},"223":{"loc":{"start":{"line":1479,"column":6},"end":{"line":1481,"column":7}},"type":"if","locations":[{"start":{"line":1479,"column":6},"end":{"line":1481,"column":7}},{"start":{},"end":{}}],"line":1479},"224":{"loc":{"start":{"line":1479,"column":10},"end":{"line":1479,"column":85}},"type":"binary-expr","locations":[{"start":{"line":1479,"column":10},"end":{"line":1479,"column":45}},{"start":{"line":1479,"column":49},"end":{"line":1479,"column":85}}],"line":1479},"225":{"loc":{"start":{"line":1482,"column":6},"end":{"line":1484,"column":7}},"type":"if","locations":[{"start":{"line":1482,"column":6},"end":{"line":1484,"column":7}},{"start":{},"end":{}}],"line":1482},"226":{"loc":{"start":{"line":1486,"column":6},"end":{"line":1488,"column":7}},"type":"if","locations":[{"start":{"line":1486,"column":6},"end":{"line":1488,"column":7}},{"start":{},"end":{}}],"line":1486},"227":{"loc":{"start":{"line":1490,"column":6},"end":{"line":1492,"column":7}},"type":"if","locations":[{"start":{"line":1490,"column":6},"end":{"line":1492,"column":7}},{"start":{},"end":{}}],"line":1490},"228":{"loc":{"start":{"line":1490,"column":10},"end":{"line":1490,"column":103}},"type":"binary-expr","locations":[{"start":{"line":1490,"column":10},"end":{"line":1490,"column":60}},{"start":{"line":1490,"column":64},"end":{"line":1490,"column":103}}],"line":1490},"229":{"loc":{"start":{"line":1495,"column":4},"end":{"line":1497,"column":5}},"type":"if","locations":[{"start":{"line":1495,"column":4},"end":{"line":1497,"column":5}},{"start":{},"end":{}}],"line":1495},"230":{"loc":{"start":{"line":1503,"column":9},"end":{"line":1503,"column":67}},"type":"binary-expr","locations":[{"start":{"line":1503,"column":9},"end":{"line":1503,"column":37}},{"start":{"line":1503,"column":41},"end":{"line":1503,"column":67}}],"line":1503}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":5,"31":5,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":1,"770":1,"771":1,"772":1,"773":1,"774":1,"775":1,"776":1,"777":1,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":5,"805":0,"806":5,"807":2,"808":3,"809":3,"810":3,"811":1,"812":2,"813":0,"814":2,"815":0,"816":2,"817":2,"818":1,"819":1,"820":1,"821":0,"822":1,"823":0,"824":0,"825":0,"826":1,"827":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":0,"151":5,"152":1},"b":{"0":[1,1],"1":[1,1],"2":[0],"3":[1,0],"4":[0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,1],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0],"56":[0],"57":[0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0],"73":[0],"74":[0,0],"75":[0,0],"76":[0],"77":[0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0,0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0,0],"105":[0,0],"106":[0,0],"107":[0,0,0,0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0],"143":[0,0],"144":[0,0,0,0,0],"145":[0,0],"146":[0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0,0,0,0,0,0,0,0,0,0,0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0,0,0,0,0,0,0,0,0,0,0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[1,0],"214":[0,0],"215":[0],"216":[0],"217":[0,0],"218":[0,0],"219":[0,5],"220":[2,3],"221":[3,0],"222":[1,2],"223":[0,2],"224":[2,2],"225":[0,2],"226":[1,1],"227":[0,1],"228":[1,1],"229":[0,0],"230":[1,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/value-object/array-value-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\nimport type { callbackMapFnType, IArrayValueObject } from './base-value-object';\n\nimport { isRealNum } from '@univerjs/core';\nimport { BooleanValue } from '../../basics/common';\nimport { ERROR_TYPE_SET, ErrorType } from '../../basics/error-type';\nimport { CELL_INVERTED_INDEX_CACHE } from '../../basics/inverted-index-cache';\nimport { regexTestArrayValue } from '../../basics/regex';\nimport { compareToken } from '../../basics/token';\nimport { ArrayBinarySearchType, ArrayOrderSearchType, getCompare } from '../utils/compare';\nimport { stringIsNumberPattern } from '../utils/numfmt-kit';\nimport { BaseValueObject, ErrorValueObject } from './base-value-object';\nimport { BooleanValueObject, createBooleanValueObjectByRawValue, createNumberValueObjectByRawValue, createStringValueObjectByRawValue, NullValueObject, NumberValueObject, StringValueObject } from './primitive-object';\n\nenum BatchOperatorType {\n    MINUS,\n    PLUS,\n    MULTIPLY,\n    DIVIDED,\n    MOD,\n    COMPARE,\n    CONCATENATE_FRONT,\n    CONCATENATE_BACK,\n    POW,\n    ROUND,\n    FLOOR,\n    CEIL,\n    ATAN2,\n}\n\nenum ArrayCalculateType {\n    PRODUCT,\n    ROW,\n    COLUMN,\n    SINGLE,\n}\n\nexport function fromObjectToString(array: IArrayValueObject) {\n    return '';\n}\n\nexport function transformToValueObject(array: Array<Array<number | string | boolean | null>> = []) {\n    const arrayValueList: BaseValueObject[][] = [];\n\n    for (let r = 0; r < array.length; r++) {\n        const row = array[r];\n\n        if (arrayValueList[r] == null) {\n            arrayValueList[r] = [];\n        }\n\n        for (let c = 0; c < row.length; c++) {\n            const cell = row[c];\n\n            arrayValueList[r][c] = ValueObjectFactory.create(cell);\n        }\n    }\n\n    return arrayValueList;\n}\n\nexport function transformToValue(array: Nullable<BaseValueObject>[][] = []) {\n    const arrayValueList: Array<Array<string | number | boolean | null>> = [];\n\n    for (let r = 0; r < array.length; r++) {\n        const row = array[r];\n\n        if (arrayValueList[r] == null) {\n            arrayValueList[r] = [];\n        }\n\n        for (let c = 0; c < row.length; c++) {\n            const cell = row[c];\n\n            if (cell == null) {\n                arrayValueList[r][c] = null;\n            } else if (cell.isError()) {\n                arrayValueList[r][c] = (cell as ErrorValueObject).getErrorType();\n            } else {\n                arrayValueList[r][c] = (cell as BaseValueObject).getValue();\n            }\n        }\n    }\n\n    return arrayValueList;\n}\n\nexport class ArrayValueObject extends BaseValueObject {\n    /**\n     * Create an array value object based on the string or IArrayValueObject data.\n     * @param rawValue\n     * @returns\n     */\n    static create(rawValue: string | IArrayValueObject) {\n        return new ArrayValueObject(rawValue);\n    }\n\n    /**\n     * Create an array value object based on the array data.\n     * @param array\n     * @returns\n     */\n    static createByArray(array: Array<Array<number | string | boolean | null>>) {\n        const calculateValueList = transformToValueObject(array);\n        const arrayValueObjectData: IArrayValueObject = {\n            calculateValueList,\n            rowCount: array.length,\n            columnCount: array[0].length || 0,\n            unitId: '',\n            sheetId: '',\n            row: -1,\n            column: -1,\n        };\n\n        return new ArrayValueObject(arrayValueObjectData);\n    }\n\n    private _values: Nullable<BaseValueObject>[][] = [];\n\n    private _rowCount: number = -1;\n\n    private _columnCount: number = -1;\n\n    private _unitId: string = '';\n\n    private _sheetId: string = '';\n\n    private _currentRow: number = -1;\n\n    private _currentColumn: number = -1;\n\n    private _sliceCache = new Map<string, ArrayValueObject>();\n\n    private _flattenCache: Nullable<ArrayValueObject>;\n\n    /**\n     * The default value of the array, null values in comparison results support setting to false\n     */\n    private _defaultValue: Nullable<BaseValueObject> = null;\n\n    private _flattenPosition: Nullable<{\n        stringArray: BaseValueObject[];\n        stringPosition: number[];\n        numberArray: BaseValueObject[];\n        numberPosition: number[];\n    }>;\n\n    constructor(rawValue: string | IArrayValueObject) {\n        super(typeof rawValue === 'string' ? rawValue as string : fromObjectToString(rawValue as IArrayValueObject));\n\n        this._values = this._formatValue(rawValue);\n    }\n\n    override dispose(): void {\n        // this._values.forEach((cells) => {\n        //     cells.forEach((cell) => {\n        //         cell?.dispose();\n        //     });\n        // });\n\n        this._values = [];\n\n        this._defaultValue = null;\n\n        this._flattenPosition = null;\n\n        this._clearCache();\n    }\n\n    clone() {\n        return this.map((o) => {\n            return o;\n        }) as ArrayValueObject;\n    }\n\n    getRowCount() {\n        return this._rowCount;\n    }\n\n    setRowCount(rowCount: number) {\n        this._rowCount = rowCount;\n    }\n\n    getColumnCount() {\n        return this._columnCount;\n    }\n\n    setColumnCount(columnCount: number) {\n        this._columnCount = columnCount;\n    }\n\n    setCurrent(row: number, column: number) {\n        this._currentRow = row;\n        this._currentColumn = column;\n    }\n\n    setUnitId(unitId: string) {\n        this._unitId = unitId;\n    }\n\n    getUnitId() {\n        return this._unitId;\n    }\n\n    setSheetId(sheetId: string) {\n        this._sheetId = sheetId;\n    }\n\n    getSheetId() {\n        return this._sheetId;\n    }\n\n    getCurrentRow() {\n        return this._currentRow;\n    }\n\n    getCurrentColumn() {\n        return this._currentColumn;\n    }\n\n    override getArrayValue() {\n        return this._values;\n    }\n\n    override setArrayValue(value: BaseValueObject[][]) {\n        this._clearCache();\n        this._values = value;\n    }\n\n    override isArray() {\n        return true;\n    }\n\n    setDefaultValue(value: Nullable<BaseValueObject>) {\n        this._defaultValue = value;\n    }\n\n    get(row: number, column: number) {\n        // const rowValues = this._values[row];\n        // if (rowValues == null) {\n        //     return null;\n        // }\n\n        // const v = rowValues[column];\n        // if (v == null) {\n        //     return null;\n        // }\n        return this._values[row]?.[column] || this._defaultValue;\n    }\n\n    getRealValue(row: number, column: number) {\n        const rowValues = this._values[row];\n        if (rowValues == null) {\n            return null;\n        }\n\n        const v = rowValues[column];\n        if (v == null) {\n            return null;\n        }\n        return v;\n    }\n\n    getValueOrDefault(row: number, column: number) {\n        return this.get(row, column) || this._defaultValue;\n    }\n\n    set(row: number, column: number, value: Nullable<BaseValueObject>) {\n        if (row >= this._rowCount || column >= this._columnCount) {\n            throw new Error('Exceeding array bounds.');\n        }\n\n        this._clearCache();\n\n        this._values[row][column] = value;\n    }\n\n    getRangePosition() {\n        const startRow = 0;\n        const rowCount = this.getRowCount();\n        const startColumn = 0;\n        const columnCount = this.getColumnCount();\n\n        return {\n            startRow,\n            endRow: rowCount - 1,\n            startColumn,\n            endColumn: columnCount - 1,\n        };\n    }\n\n    iterator(\n        callback: (valueObject: Nullable<BaseValueObject>, rowIndex: number, columnIndex: number) => Nullable<boolean>\n    ) {\n        const { startRow, endRow, startColumn, endColumn } = this.getRangePosition();\n\n        const valueList = this.getArrayValue();\n\n        for (let r = startRow; r <= endRow; r++) {\n            for (let c = startColumn; c <= endColumn; c++) {\n                if (callback(valueList[r]?.[c] || this._defaultValue, r, c) === false) {\n                    return;\n                }\n            }\n        }\n    }\n\n    iteratorReverse(\n        callback: (valueObject: Nullable<BaseValueObject>, rowIndex: number, columnIndex: number) => Nullable<boolean>\n    ) {\n        const { startRow, endRow, startColumn, endColumn } = this.getRangePosition();\n\n        const valueList = this.getArrayValue();\n\n        for (let r = endRow; r >= startRow; r--) {\n            for (let c = endColumn; c >= startColumn; c--) {\n                if (callback(valueList[r]?.[c] || this._defaultValue, r, c) === false) {\n                    return;\n                }\n            }\n        }\n    }\n\n    getLastTruePosition() {\n        let rangeSingle: Nullable<{ row: number; column: number }>;\n\n        this.iteratorReverse((value, rowIndex, columnIndex) => {\n            if (value?.isBoolean() && (value as BaseValueObject).getValue() === true) {\n                rangeSingle = {\n                    row: rowIndex,\n                    column: columnIndex,\n                };\n\n                return false;\n            }\n        });\n\n        return rangeSingle;\n    }\n\n    getFirstTruePosition() {\n        let rangeSingle: Nullable<{ row: number; column: number }>;\n\n        this.iterator((value, rowIndex, columnIndex) => {\n            if (value?.isBoolean() && (value as BaseValueObject).getValue() === true) {\n                rangeSingle = {\n                    row: rowIndex,\n                    column: columnIndex,\n                };\n\n                return false;\n            }\n        });\n\n        return rangeSingle;\n    }\n\n    getFirstCell() {\n        const { startRow, startColumn } = this.getRangePosition();\n        return this.get(startRow, startColumn) || this._defaultValue || NullValueObject.create();\n    }\n\n    getLastCell() {\n        const { endRow, endColumn } = this.getRangePosition();\n        return this.get(endRow, endColumn) || this._defaultValue || NullValueObject.create();\n    }\n\n    /**\n     * Referring to matrix calculations,\n     * extract the matching values from a true/false matrix based on parameters and store them in a two-dimensional array.\n     * implement x[x<10]\n     * https://numpy.org/doc/stable/user/basics.indexing.html\n     * @param takeArray\n     */\n    pick(takeArray: ArrayValueObject) {\n        const newValue = this.pickRaw(takeArray);\n\n        return this._createNewArray(newValue, 1, newValue[0].length);\n    }\n\n    pickRaw(takeArray: ArrayValueObject) {\n        const takeArrayRowCount = takeArray.getRowCount();\n        const takeArrayColumnCount = takeArray.getColumnCount();\n\n        if (takeArrayRowCount !== this._rowCount || takeArrayColumnCount !== this._columnCount) {\n            return [[NullValueObject.create()]];\n        }\n\n        const newValue: Nullable<BaseValueObject>[][] = [];\n\n        newValue[0] = [];\n\n        for (let r = 0; r < takeArrayRowCount; r++) {\n            for (let c = 0; c < takeArrayColumnCount; c++) {\n                const takeCell = takeArray.get(r, c);\n\n                if (takeCell == null || takeCell.isError()) {\n                    continue;\n                }\n\n                if ((takeCell as BaseValueObject).getValue() === true) {\n                    const value = this.get(r, c);\n                    newValue[0].push(value);\n                }\n            }\n        }\n\n        return newValue;\n    }\n\n    /**\n     * Flatten a 2D array.\n     * https://numpy.org/doc/stable/reference/generated/numpy.chararray.flatten.html#numpy.chararray.flatten\n     */\n    flatten() {\n        if (this._flattenCache != null) {\n            return this._flattenCache;\n        }\n\n        const newValue: Nullable<BaseValueObject>[][] = [];\n        newValue[0] = [];\n        for (let r = 0; r < this._rowCount; r++) {\n            for (let c = 0; c < this._columnCount; c++) {\n                const value = this.get(r, c);\n\n                newValue[0].push(value);\n            }\n        }\n\n        const arrayV = this._createNewArray(newValue, 1, newValue[0].length);\n\n        arrayV.setDefaultValue(this._defaultValue);\n\n        this._flattenCache = arrayV;\n\n        return arrayV;\n    }\n\n    /**\n     * Flatten a 2D array.\n     * In Excel, errors and blank cells are ignored, which results in a binary search that cannot strictly adhere to the number of cells.\n     */\n    flattenPosition() {\n        if (this._flattenPosition != null) {\n            return this._flattenPosition;\n        }\n\n        const stringValue: BaseValueObject[] = [];\n        const numberValue: BaseValueObject[] = [];\n        const stringPosition: number[] = [];\n        const numberPosition: number[] = [];\n        let index = 0;\n        for (let r = 0; r < this._rowCount; r++) {\n            for (let c = 0; c < this._columnCount; c++) {\n                const value = this.get(r, c);\n\n                if (value == null || value.isError() || value.isNull()) {\n                    index++;\n                    continue;\n                }\n\n                if (value.isString()) {\n                    stringValue.push(value);\n                    stringPosition.push(index++);\n                } else {\n                    numberValue.push(value);\n                    numberPosition.push(index++);\n                }\n            }\n        }\n\n        // const stringArray = this._createNewArray(stringValue, 1, stringValue[0].length);\n        // const numberArray = this._createNewArray(numberValue, 1, numberValue[0].length);\n\n        const result = {\n            stringArray: stringValue,\n            numberArray: numberValue,\n            stringPosition,\n            numberPosition,\n        };\n\n        this._flattenPosition = result;\n\n        return result;\n    }\n\n    /**\n     * I'm looking to perform slicing operations on 2D arrays, similar to the functionality provided by NumPy.\n     * https://numpy.org/doc/stable/user/basics.indexing.html\n     * @rowParam start:stop:step\n     * @columnParam start:stop:step\n     * @param takeArray\n     */\n    slice(rowParam: Nullable<Array<Nullable<number>>>, columnParam: Nullable<Array<Nullable<number>>>) {\n        let rowStart = 0;\n        let rowStop = this._rowCount;\n        let rowStep = 1;\n\n        let columnStart = 0;\n        let columnStop = this._columnCount;\n        let columnStep = 1;\n\n        if (rowParam != null) {\n            rowStart = rowParam[0] || 0;\n            rowStop = rowParam[1] || this._rowCount;\n            rowStep = rowParam[2] || 1;\n        }\n\n        if (columnParam != null) {\n            columnStart = columnParam[0] || 0;\n            columnStop = columnParam[1] || this._columnCount;\n            columnStep = columnParam[2] || 1;\n        }\n\n        if (rowStart >= this._rowCount || columnStart >= this._columnCount) {\n            return;\n        }\n\n        const cacheKey = `${rowStart}_${rowStop}_${rowStep}_${columnStart}_${columnStop}_${columnStep}`;\n\n        const cache = this._sliceCache.get(cacheKey);\n\n        if (cache != null) {\n            return cache;\n        }\n\n        const result: BaseValueObject[][] = [];\n\n        const array = this._values;\n\n        let result_row_index = 0;\n        let result_column_index = 0;\n        for (let r = rowStart; r < rowStop; r += rowStep) {\n            result_column_index = 0;\n            if (result[result_row_index] == null) {\n                result[result_row_index] = [];\n            }\n            for (let c = columnStart; c < columnStop; c += columnStep) {\n                if (!array[r]) {\n                    return;\n                };\n\n                let cell = array[r][c] || this._defaultValue;\n\n                if (cell == null) {\n                    cell = NullValueObject.create();\n                }\n\n                result[result_row_index][result_column_index] = cell;\n                result_column_index++;\n            }\n            result_row_index++;\n        }\n\n        if (result.length === 0 || result[0].length === 0) {\n            return;\n        }\n\n        /**\n         * When iterating, arrayValue will create an inverted index cache for cell reference data.\n         * If the array is created by ref, it will hit the cache,\n         * but arrays derived from another array will lose the caching ability.\n         * Here, based on the slice range, it is determined whether to set row and column to -1;\n         * -1 means that caching is not enabled.\n         */\n        const startRow = rowStep > 1 ? -1 : rowStart + this._currentRow;\n\n        const startColumn = columnStep > 1 ? -1 : columnStart + this._currentColumn;\n\n        const newResultArray = this._createNewArray(result, result.length, result[0].length, startRow, startColumn);\n\n        // Synchronize defaultValue\n        newResultArray.setDefaultValue(this._defaultValue);\n\n        this._sliceCache.set(cacheKey, newResultArray);\n\n        return newResultArray;\n    }\n\n    sortByRow(index: number) {\n        // new Intl.Collator('zh', { numeric: true }).compare;\n        const result: Nullable<BaseValueObject>[][] = this._transposeArray(this._values);\n\n        result.sort(this._sort(index));\n\n        this._clearCache();\n\n        this._values = this._transposeArray(result);\n    }\n\n    sortByColumn(index: number) {\n        this._clearCache();\n        this._values.sort(this._sort(index));\n    }\n\n    transpose() {\n        const transposeArray = this._transposeArray(this._values);\n\n        const rowCount = this._rowCount;\n        const columnCount = this._columnCount;\n\n        const newArray = this._createNewArray(transposeArray, columnCount, rowCount);\n\n        newArray.setDefaultValue(this._defaultValue);\n        return newArray;\n    }\n\n    /**\n     * Due to the inability to effectively utilize the cache,\n     * the sequential matching approach is only used for special matches in XLOOKUP and XMATCH.\n     * For example, when match_mode is set to 1 and -1 for an exact match. If not found, it returns the next smaller item.\n     */\n\n    orderSearch(\n        valueObject: BaseValueObject,\n        searchType: ArrayOrderSearchType = ArrayOrderSearchType.MIN,\n        isDesc = false,\n        isFuzzyMatching = false\n    ) {\n        let result: Nullable<BaseValueObject>;\n        let maxOrMin: Nullable<BaseValueObject>;\n        let resultPosition: Nullable<{ row: number; column: number }>;\n\n        let maxOrMinPosition: Nullable<{ row: number; column: number }>;\n\n        const _handleMatch = (itemValue: Nullable<BaseValueObject>, row: number, column: number) => {\n            if (itemValue == null) {\n                return true;\n            }\n\n            let matchObject: Nullable<BaseValueObject>;\n            if (isFuzzyMatching === true) {\n                matchObject = itemValue.compare(valueObject as StringValueObject, compareToken.EQUALS);\n            } else {\n                matchObject = itemValue.isEqual(valueObject);\n            }\n\n            if (matchObject?.getValue() === true) {\n                result = itemValue;\n                resultPosition = { row, column };\n                return false;\n            }\n\n            if (searchType === ArrayOrderSearchType.MAX) {\n                if (itemValue.isGreaterThan(valueObject).getValue() === true) {\n                    if (\n                        maxOrMin == null ||\n                        itemValue\n                            .minus(valueObject)\n                            .abs()\n                            .isLessThanOrEqual(maxOrMin.minus(valueObject).abs())\n                            .getValue() === true\n                    ) {\n                        maxOrMin = itemValue;\n                        maxOrMinPosition = { row, column };\n                    }\n                }\n            } else if (searchType === ArrayOrderSearchType.MIN) {\n                if (itemValue.isLessThan(valueObject).getValue() === true) {\n                    if (\n                        maxOrMin == null ||\n                        itemValue\n                            .minus(valueObject)\n                            .abs()\n                            .isLessThanOrEqual(maxOrMin.minus(valueObject).abs())\n                            .getValue() === true\n                    ) {\n                        maxOrMin = itemValue;\n                        maxOrMinPosition = { row, column };\n                    }\n                }\n            }\n        };\n\n        if (isDesc) {\n            this.iteratorReverse((itemValue, r, c) => {\n                return _handleMatch(itemValue, r, c);\n            });\n        } else {\n            this.iterator((itemValue, r, c) => {\n                return _handleMatch(itemValue, r, c);\n            });\n        }\n\n        if (result != null) {\n            return resultPosition;\n        }\n\n        if (maxOrMin != null) {\n            return maxOrMinPosition;\n        }\n    }\n\n    binarySearch(valueObject: BaseValueObject, searchType: ArrayBinarySearchType = ArrayBinarySearchType.MIN, matchType: ArrayOrderSearchType = ArrayOrderSearchType.MIN) {\n        if (valueObject.isError()) {\n            return;\n        }\n\n        const { stringArray, stringPosition, numberArray, numberPosition } = this.flattenPosition();\n\n        if (valueObject.isString()) {\n            return this._binarySearch(valueObject, stringArray, stringPosition, searchType, matchType);\n        }\n\n        const result = this._binarySearch(valueObject, numberArray, numberPosition, searchType, matchType);\n        // if (result == null) {\n        //     result = this._binarySearch(valueObject, stringArray, stringPosition, searchType);\n        // }\n        return result;\n\n        // const stringMatrix = stringArray.getArrayValue();\n        // const valueStringArray = stringMatrix[0];\n\n        // const numberMatrix = numberArray.getArrayValue();\n        // const valueNumberArray = numberMatrix[0];\n    }\n\n    /**\n     * searchType defaults to ascending order\n     *\n     * matchType defaults to the maximum value less than the search value, which is used for the default matching mode of VLOOKUP/LOOKUP/HLOOKUP.\n     * @param valueObject\n     * @param searchArray\n     * @param positionArray\n     * @param searchType\n     * @param matchType\n     * @returns\n     */\n    private _binarySearch(\n        valueObject: BaseValueObject,\n        searchArray: BaseValueObject[],\n        positionArray: number[],\n        searchType: ArrayBinarySearchType = ArrayBinarySearchType.MIN,\n        matchType: ArrayOrderSearchType = ArrayOrderSearchType.MIN\n    ) {\n        const compareFunc = getCompare();\n\n        // Convert to number if possible, otherwise use string\n        const value = Number(valueObject.getValue());\n        const isValueNumber = !Number.isNaN(value);\n\n        let start = 0;\n        let end = searchArray.length - 1;\n        let exactMatchIndex = -1;\n        let nearestSmallerIndex = -1;\n        let nearestLargerIndex = -1;\n\n        while (start <= end) {\n            const middle = Math.floor((start + end) / 2);\n            const compareTo = searchArray[middle];\n\n            let compareResult: number;\n            if (compareTo.isNull()) {\n                compareResult = searchType === ArrayBinarySearchType.MIN ? 1 : -1;\n            } else {\n                const compareToValue = compareTo.getValue();\n                if (isValueNumber) {\n                    const compareToNumber = Number(compareToValue);\n                    compareResult = Number.isNaN(compareToNumber) ? 1 : Math.sign(compareToNumber - value);\n                } else {\n                    compareResult = compareFunc(compareToValue.toString().toLocaleLowerCase(), valueObject.getValue().toString().toLocaleLowerCase());\n                }\n            }\n\n            // Reverse comparison result if searchType is MAX (descending order)\n            if (searchType === ArrayBinarySearchType.MAX) {\n                compareResult = -compareResult;\n            }\n\n            if (compareResult === 0) {\n                // Exact match found\n                exactMatchIndex = middle;\n                break;\n            }\n\n            if (compareResult < 0) {\n                // compareTo < value\n                nearestSmallerIndex = middle;\n                start = middle + 1;\n            } else {\n                // compareTo > value\n                nearestLargerIndex = middle;\n                end = middle - 1;\n            }\n        }\n\n        // Determine the result based on matchType\n        if (matchType === ArrayOrderSearchType.NORMAL) {\n            return exactMatchIndex !== -1 ? positionArray[exactMatchIndex] : undefined;\n        }\n\n        if (matchType === ArrayOrderSearchType.MIN) {\n            if (exactMatchIndex !== -1) return positionArray[exactMatchIndex];\n            return searchType === ArrayBinarySearchType.MIN ?\n                positionArray[nearestSmallerIndex]\n                : positionArray[nearestLargerIndex];\n        }\n\n        if (matchType === ArrayOrderSearchType.MAX) {\n            if (exactMatchIndex !== -1) return positionArray[exactMatchIndex];\n            return searchType === ArrayBinarySearchType.MIN ?\n                positionArray[nearestLargerIndex]\n                : positionArray[nearestSmallerIndex];\n        }\n\n        // If no suitable match found based on matchType\n        return undefined;\n    }\n\n    override sum() {\n        let accumulatorAll: BaseValueObject = NumberValueObject.create(0);\n        this.iterator((valueObject) => {\n            // 'test', ' ',  blank cell, TRUE and FALSE are ignored\n            if (valueObject == null || valueObject.isString() || valueObject.isBoolean() || valueObject.isNull()) {\n                return true; // continue\n            }\n\n            if (valueObject.isError()) {\n                accumulatorAll = valueObject;\n                return false; // break\n            }\n            accumulatorAll = (accumulatorAll as NumberValueObject).plus(\n                valueObject as BaseValueObject\n            ) as BaseValueObject;\n        });\n\n        return accumulatorAll;\n    }\n\n    override max() {\n        let accumulatorAll: BaseValueObject = NumberValueObject.create(Number.NEGATIVE_INFINITY);\n        this.iterator((valueObject) => {\n            if (valueObject == null) {\n                return true; // continue\n            }\n\n            if (valueObject.isError()) {\n                accumulatorAll = valueObject;\n                return false; // break\n            }\n\n            // ignore boolean value in array, but not ignore in normal value object\n            if (valueObject.isString() || valueObject.isNull() || valueObject.isBoolean()) {\n                return true; // continue\n            }\n\n            const result = accumulatorAll.isLessThan(valueObject) as BooleanValueObject;\n\n            if (result.getValue()) {\n                accumulatorAll = valueObject as NumberValueObject;\n            }\n        });\n\n        return accumulatorAll;\n    }\n\n    override min() {\n        let accumulatorAll: BaseValueObject = NumberValueObject.create(Number.POSITIVE_INFINITY);\n\n        this.iterator((valueObject) => {\n            if (valueObject == null) {\n                return true; // continue\n            }\n\n            if (valueObject.isError()) {\n                accumulatorAll = valueObject;\n                return false; // break\n            }\n\n            // ignore boolean value in array, but not ignore in normal value object\n            if (valueObject.isString() || valueObject.isNull() || valueObject.isBoolean()) {\n                return true; // continue\n            }\n\n            const result = accumulatorAll.isGreaterThan(valueObject) as BooleanValueObject;\n\n            if (result.getValue()) {\n                accumulatorAll = valueObject as NumberValueObject;\n            }\n        });\n\n        return accumulatorAll;\n    }\n\n    override count() {\n        let accumulatorAll: BaseValueObject = NumberValueObject.create(0);\n        this.iterator((valueObject) => {\n            // 'test', ' ',  blank cell, TRUE and FALSE are ignored\n            if (valueObject == null || valueObject.isError() || valueObject.isString() || valueObject.isNull() || valueObject.isBoolean()) {\n                return true; // continue\n            }\n            accumulatorAll = accumulatorAll.plusBy(1) as BaseValueObject;\n        });\n\n        return accumulatorAll;\n    }\n\n    override countA() {\n        let accumulatorAll: BaseValueObject = NumberValueObject.create(0);\n        this.iterator((valueObject) => {\n            if (valueObject == null || valueObject.isNull()) {\n                return true; // continue\n            }\n\n            accumulatorAll = accumulatorAll.plusBy(1);\n        });\n\n        return accumulatorAll;\n    }\n\n    override countBlank() {\n        let accumulatorAll: BaseValueObject = NumberValueObject.create(0);\n        this.iterator((valueObject) => {\n            if (valueObject == null || valueObject.isNull() || (valueObject.getValue() === '')) {\n                accumulatorAll = accumulatorAll.plusBy(1) as BaseValueObject;\n            }\n        });\n\n        return accumulatorAll;\n    }\n\n    override getNegative(): BaseValueObject {\n        const arrayValueObject = ArrayValueObject.create('{0}');\n        return arrayValueObject.minus(this);\n    }\n\n    override getReciprocal(): BaseValueObject {\n        const arrayValueObject = ArrayValueObject.create('{1}');\n\n        return arrayValueObject.divided(this);\n\n        // return NumberValueObject.create(1).divided(this);\n    }\n\n    override plus(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.PLUS);\n    }\n\n    override minus(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.MINUS);\n    }\n\n    override multiply(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.MULTIPLY);\n    }\n\n    override divided(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.DIVIDED);\n    }\n\n    override mod(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.MOD);\n    }\n\n    override modInverse(valueObject: BaseValueObject): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return valueObject.mod(currentValue);\n        });\n    }\n\n    override compare(valueObject: BaseValueObject, operator: compareToken, isCaseSensitive?: boolean): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.COMPARE, operator, isCaseSensitive);\n    }\n\n    override concatenateFront(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.CONCATENATE_FRONT);\n    }\n\n    override concatenateBack(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.CONCATENATE_BACK);\n    }\n\n    override map(callbackFn: callbackMapFnType): BaseValueObject {\n        const wrappedCallbackFn = (currentValue: Nullable<BaseValueObject>, r: number, c: number) => {\n            if (currentValue == null) {\n                return NullValueObject.create();\n            }\n            if (currentValue.isError()) {\n                return currentValue as ErrorValueObject;\n            } else {\n                return callbackFn(currentValue, r, c);\n            }\n        };\n\n        return this.mapValue(wrappedCallbackFn);\n    }\n\n    override mapValue(callbackFn: callbackMapFnType): BaseValueObject {\n        const rowCount = this._rowCount;\n        const columnCount = this._columnCount;\n\n        const result: BaseValueObject[][] = [];\n\n        for (let r = 0; r < rowCount; r++) {\n            const rowList: BaseValueObject[] = [];\n            for (let c = 0; c < columnCount; c++) {\n                const row = this._values?.[r];\n\n                if (row == null) {\n                    rowList[c] = ErrorValueObject.create(ErrorType.VALUE);\n                } else {\n                    const currentValue = row[c] || this._defaultValue;\n\n                    if (currentValue) {\n                        rowList[c] = callbackFn(currentValue, r, c);\n                    } else {\n                        rowList[c] = NullValueObject.create();\n                    }\n                }\n            }\n            result.push(rowList);\n        }\n\n        return this._createNewArray(result, rowCount, columnCount);\n    }\n\n    override pow(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.POW);\n    }\n\n    /**\n     *\n     * @param valueObject In the case of an inverse, it is certainly not an array.\n     * @returns\n     */\n    override powInverse(valueObject: BaseValueObject): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return valueObject.pow(currentValue);\n        });\n    }\n\n    override sqrt(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.sqrt();\n        });\n    }\n\n    override cbrt(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.cbrt();\n        });\n    }\n\n    override cos(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.cos();\n        });\n    }\n\n    override cosh(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.cosh();\n        });\n    }\n\n    override acos(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.acos();\n        });\n    }\n\n    override acosh(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.acosh();\n        });\n    }\n\n    override sin(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.sin();\n        });\n    }\n\n    override sinh(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.sinh();\n        });\n    }\n\n    override asin(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.asin();\n        });\n    }\n\n    override asinh(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.asinh();\n        });\n    }\n\n    override tan(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.tan();\n        });\n    }\n\n    override tanh(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.tanh();\n        });\n    }\n\n    override atan(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.atan();\n        });\n    }\n\n    override atanh(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.atanh();\n        });\n    }\n\n    override atan2(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.ATAN2);\n    }\n\n    override atan2Inverse(valueObject: BaseValueObject): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return valueObject.atan2(currentValue);\n        });\n    }\n\n    override mean(ddof: number = 0): BaseValueObject {\n        const sum = this.sum();\n\n        // Like sum, ignore strings and booleans\n        const count = this.count();\n\n        return sum.divided(ddof === 0 ? count : count.minusBy(1));\n    }\n\n    override median(): BaseValueObject {\n        const numberArray = this.flattenPosition().numberArray;\n\n        const allValue = this._createNewArray([numberArray], 1, numberArray.length);\n\n        const count = allValue.getColumnCount();\n\n        if (count <= 1) {\n            return allValue.get(0, 0) || NullValueObject.create();\n        }\n\n        allValue.sortByRow(0);\n\n        if (count % 2 === 0) {\n            const medianRight = allValue.get(0, count / 2) || NullValueObject.create();\n            const medianLeft = allValue.get(0, count / 2 - 1) || NullValueObject.create();\n\n            return medianRight.plus(medianLeft).divided(NumberValueObject.create(2));\n        }\n\n        return allValue.get(0, (count - 1) / 2) || NullValueObject.create();\n    }\n\n    /**\n     * ┌──────────────┬────────────────────────────────┬───────────────────┐\n     * │ Function     │ Ignore logical values and text │ Type              │\n     * ├──────────────┼────────────────────────────────┼───────────────────┤\n     * │ VAR.S (VAR)  │ TRUE                           │ sample            │\n     * │ VAR.P (VARP) │ TRUE                           │ entire population │\n     * │ VARA         │ FALSE                          │ sample            │\n     * │ VARPA        │ FALSE                          │ entire population │\n     * └──────────────┴────────────────────────────────┴───────────────────┘\n     *\n     * for VARPA and VARA, strings and FALSE are counted as 0, TRUE is counted as 1\n     * for VAR.S/VAR, or VAR.P/VARP, strings,TRUE and FALSE are ignored\n     * Since sum ignores strings and booleans, they are ignored here too, and VAR.S and VAR.P are used more\n     *\n     * VAR.S assumes that its arguments are a sample of the population, like numpy.var(data, ddof=1)\n     * VAR.P assumes that its arguments are the entire population, like numpy.var(data, ddof=0)\n     * numpy.var uses ddof=0 (Delta Degrees of Freedom) by default, so we use ddof=0 here\n     *\n     */\n    override var(ddof: number = 0): BaseValueObject {\n        const mean = this.mean();\n\n        // let isError = null;\n        const squaredDifferences: BaseValueObject[][] = [[]];\n        this.iterator((valueObject: Nullable<BaseValueObject>) => {\n            if (valueObject == null || valueObject.isError() || valueObject.isString() || valueObject.isBoolean() || valueObject.isNull()) {\n                return;\n            }\n\n            const baseValueObject = valueObject.minus(mean).pow(NumberValueObject.create(2));\n\n            if (baseValueObject.isError()) {\n                return;\n            }\n\n            squaredDifferences[0].push(baseValueObject);\n        });\n\n        const { _unitId, _sheetId, _currentRow, _currentColumn } = this;\n\n        const squaredDifferencesArrayObject = ArrayValueObject.create({\n            calculateValueList: squaredDifferences,\n            rowCount: 1,\n            columnCount: squaredDifferences[0].length,\n            unitId: _unitId,\n            sheetId: _sheetId,\n            row: _currentRow,\n            column: _currentColumn,\n        });\n\n        return squaredDifferencesArrayObject.mean(ddof);\n    }\n\n    /**\n     * STDEV.P (STDEVP): ddof=0, ignore strings and booleans\n     * STDEV.S (STDEV): ddof=1, ignore strings and booleans\n     *\n     * STDEVPA: ddof=0,\n     * STDEVA: ddof=1,\n     * @returns\n     */\n    override std(ddof: number = 0): BaseValueObject {\n        const variance = this.var(ddof);\n\n        if (variance.isError()) {\n            return variance;\n        }\n\n        return variance.sqrt();\n    }\n\n    override log(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.log();\n        });\n    }\n\n    override log10(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.log10();\n        });\n    }\n\n    override exp(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.exp();\n        });\n    }\n\n    override abs(): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return currentValue.abs();\n        });\n    }\n\n    override round(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.ROUND);\n    }\n\n    override roundInverse(valueObject: BaseValueObject): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return valueObject.round(currentValue);\n        });\n    }\n\n    override floor(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.FLOOR);\n    }\n\n    override floorInverse(valueObject: BaseValueObject): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return valueObject.floor(currentValue);\n        });\n    }\n\n    override ceil(valueObject: BaseValueObject): BaseValueObject {\n        return this._batchOperator(valueObject, BatchOperatorType.CEIL);\n    }\n\n    override ceilInverse(valueObject: BaseValueObject): BaseValueObject {\n        return this.map((currentValue) => {\n            if (currentValue.isError()) {\n                return currentValue;\n            }\n            return valueObject.ceil(currentValue);\n        });\n    }\n\n    toValue() {\n        return transformToValue(this._values);\n    }\n\n    private _clearCache() {\n        this._flattenCache = null;\n        this._sliceCache.clear();\n    }\n\n    private _sort(index: number) {\n        const compare = getCompare();\n        return (a: Nullable<BaseValueObject>[], b: Nullable<BaseValueObject>[]) => {\n            const columnA = a[index];\n            const columnB = b[index];\n\n            if (columnA == null) {\n                return 1;\n            }\n\n            if (columnB == null) {\n                return -1;\n            }\n\n            if (columnA.isError() && columnA.isError()) {\n                return 0;\n            }\n            if (columnA.isError()) {\n                return 1;\n            }\n            if (columnB.isError()) {\n                return -1;\n            }\n            return compare(\n                (columnA as BaseValueObject).getValue() as string,\n                (columnB as BaseValueObject).getValue() as string\n            );\n        };\n    }\n\n    private _transposeArray(array: Nullable<BaseValueObject>[][]) {\n        // Create a new 2D array as the transposed matrix\n        const rows = array.length;\n        const cols = array[0].length;\n        const transposedArray: Nullable<BaseValueObject>[][] = [];\n\n        // Traverse the columns of the original two-dimensional array\n        for (let col = 0; col < cols; col++) {\n            // Create new row\n            transposedArray[col] = [] as BaseValueObject[];\n\n            // Traverse the rows of the original two-dimensional array\n            for (let row = 0; row < rows; row++) {\n                // Assign elements to new rows\n                transposedArray[col][row] = array[row][col];\n            }\n        }\n\n        return transposedArray;\n    }\n\n    private _batchOperator(\n        valueObject: BaseValueObject,\n        batchOperatorType: BatchOperatorType,\n        operator?: compareToken,\n        isCaseSensitive?: boolean\n    ): BaseValueObject {\n        const valueList: BaseValueObject[] = [];\n\n        let rowCount = this._rowCount;\n        let columnCount = this._columnCount;\n\n        if (valueObject.isArray()) {\n            const valueRowCount = (valueObject as ArrayValueObject).getRowCount();\n            const valueColumnCount = (valueObject as ArrayValueObject).getColumnCount();\n\n            rowCount = Math.max(valueRowCount, rowCount);\n            columnCount = Math.max(valueColumnCount, columnCount);\n            /**\n             * For computational scenarios where the array contains a single value,\n             * adopting calculations between the array and the value can effectively utilize an inverted index.\n             */\n            if (valueRowCount === 1 && valueColumnCount === 1) {\n                const v = (valueObject as ArrayValueObject).getFirstCell() as BaseValueObject;\n                for (let c = 0; c < columnCount; c++) {\n                    valueList.push(v);\n                }\n            } else if (valueRowCount === 1 && this._columnCount > 1) {\n                const list = (valueObject as ArrayValueObject).getArrayValue();\n                for (let c = 0; c < columnCount; c++) {\n                    valueList.push(list[0][c] as BaseValueObject);\n                }\n            } else {\n                return this._batchOperatorArray(valueObject, batchOperatorType, operator, isCaseSensitive);\n            }\n        } else {\n            for (let c = 0; c < columnCount; c++) {\n                valueList.push(valueObject);\n            }\n        }\n\n        const result: BaseValueObject[][] = [];\n\n        for (let c = 0; c < columnCount; c++) {\n            const value = valueList[c];\n            this._batchOperatorValue(value, c, result, batchOperatorType, operator, isCaseSensitive);\n        }\n\n        const newArray = this._createNewArray(result, rowCount, columnCount);\n\n        // Mark empty values in the array as false\n        newArray.setDefaultValue(BooleanValueObject.create(false));\n        return newArray;\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    private _batchOperatorValue(\n        valueObject: BaseValueObject,\n        column: number,\n        result: BaseValueObject[][],\n        batchOperatorType: BatchOperatorType,\n        operator?: compareToken,\n        isCaseSensitive?: boolean\n    ) {\n        const rowCount = this._rowCount;\n\n        const unitId = this.getUnitId();\n        const sheetId = this.getSheetId();\n        const startRow = this.getCurrentRow();\n        const startColumn = this.getCurrentColumn();\n        /**\n         * If comparison operations are conducted for a single numerical value,\n         * then retrieve the judgment from the inverted index. This enhances performance.\n         */\n        if (batchOperatorType === BatchOperatorType.COMPARE) {\n            const { rowsInCache, rowsNotInCache } = CELL_INVERTED_INDEX_CACHE.canUseCache(\n                unitId,\n                sheetId,\n                column + startColumn,\n                startRow,\n                startRow + rowCount - 1\n            );\n\n            if (rowsInCache.length > 0) {\n                if (operator === compareToken.EQUALS) {\n                    // TODO@DR-Univer: When comparing equal with two parameters, one of them is error, and the logic here is wrong\n                    const rowPositions = CELL_INVERTED_INDEX_CACHE.getCellPositions(\n                        unitId,\n                        sheetId,\n                        column + startColumn,\n                        valueObject.getValue(),\n                        rowsInCache\n                    );\n\n                    if (rowPositions != null) {\n                        rowPositions.forEach((row) => {\n                            if (row < startRow || row > startRow + rowCount - 1) {\n                                return;\n                            }\n\n                            const r = row - startRow;\n                            if (result[r] == null) {\n                                result[r] = [];\n                            }\n                            result[r][column] = BooleanValueObject.create(true);\n                        });\n                    }\n                } else {\n                    const rowValuePositions = CELL_INVERTED_INDEX_CACHE.getCellValuePositions(\n                        unitId,\n                        sheetId,\n                        column + startColumn\n                    );\n\n                    if (rowValuePositions != null) {\n                        rowValuePositions.forEach((rowPositions, rowValue) => {\n                            let currentValue: Nullable<BaseValueObject> = NullValueObject.create(); // handle blank cell\n                            if (ERROR_TYPE_SET.has(rowValue as ErrorType)) {\n                                currentValue = ErrorValueObject.create(rowValue as ErrorType);\n                            } else if (typeof rowValue === 'string') {\n                                currentValue = StringValueObject.create(rowValue);\n                            } else if (typeof rowValue === 'number') {\n                                currentValue = NumberValueObject.create(rowValue);\n                            } else if (typeof rowValue === 'boolean') {\n                                currentValue = BooleanValueObject.create(rowValue);\n                            }\n\n                            let matchResult;\n                            if (currentValue.isError()) {\n                                matchResult = currentValue;\n                            } else if (valueObject.isError()) {\n                                matchResult = valueObject;\n                            } else {\n                                matchResult = currentValue.compare(valueObject, operator as compareToken, isCaseSensitive);\n                            }\n\n                            if (matchResult.isError() || (matchResult as BooleanValueObject).getValue() === true) {\n                                rowPositions.forEach((index) => {\n                                    if (index >= startRow && index <= startRow + rowCount - 1) {\n                                        if (result[index - startRow] == null) {\n                                            result[index - startRow] = [];\n                                        }\n                                        result[index - startRow][column] = matchResult;\n                                    }\n                                });\n                            }\n                        });\n                    }\n                }\n\n                // handle the not in cache rows\n                if (rowsNotInCache.length > 0) {\n                    for (const interval of rowsNotInCache) {\n                        const [start, end] = interval;\n\n                        for (let r = start; r <= end; r++) {\n                            this.__batchOperatorRowValue(\n                                valueObject,\n                                column,\n                                result,\n                                batchOperatorType,\n                                r - startRow,\n                                unitId,\n                                sheetId,\n                                startRow,\n                                startColumn,\n                                operator,\n                                isCaseSensitive\n                            );\n                        }\n\n                        CELL_INVERTED_INDEX_CACHE.setContinueBuildingCache(\n                            unitId,\n                            sheetId,\n                            column + startColumn,\n                            start,\n                            end\n                        );\n                    }\n                }\n\n                return;\n            }\n        }\n\n        for (let r = 0; r < rowCount; r++) {\n            this.__batchOperatorRowValue(\n                valueObject,\n                column,\n                result,\n                batchOperatorType,\n                r,\n                unitId,\n                sheetId,\n                startRow,\n                startColumn,\n                operator,\n                isCaseSensitive\n            );\n        }\n\n        CELL_INVERTED_INDEX_CACHE.setContinueBuildingCache(\n            unitId,\n            sheetId,\n            column + startColumn,\n            startRow,\n            startRow + rowCount - 1\n        );\n    }\n\n    // eslint-disable-next-line\n    private __batchOperatorRowValue(\n        valueObject: BaseValueObject,\n        column: number,\n        result: BaseValueObject[][],\n        batchOperatorType: BatchOperatorType,\n        r: number,\n        unitId: string,\n        sheetId: string,\n        startRow: number,\n        startColumn: number,\n        operator?: compareToken,\n        isCaseSensitive?: boolean\n    ) {\n        const currentValue = this.getValueOrDefault(r, column);\n\n        if (result[r] == null) {\n            result[r] = [];\n        }\n\n        if (currentValue && valueObject) {\n            if (currentValue.isError()) {\n                result[r][column] = currentValue as ErrorValueObject;\n            } else if (valueObject.isError()) {\n                // 1 + #NAME? gets #NAME?\n                result[r][column] = valueObject;\n            } else {\n                switch (batchOperatorType) {\n                    case BatchOperatorType.PLUS:\n                        result[r][column] = currentValue.plus(valueObject);\n                        break;\n                    case BatchOperatorType.MINUS:\n                        result[r][column] = currentValue.minus(valueObject);\n                        break;\n                    case BatchOperatorType.MULTIPLY:\n                        result[r][column] = currentValue.multiply(valueObject);\n                        break;\n                    case BatchOperatorType.DIVIDED:\n                        result[r][column] = currentValue.divided(valueObject);\n                        break;\n                    case BatchOperatorType.MOD:\n                        result[r][column] = currentValue.mod(valueObject);\n                        break;\n                    case BatchOperatorType.COMPARE:\n                        if (!operator) {\n                            result[r][column] = ErrorValueObject.create(ErrorType.VALUE);\n                        } else {\n                            result[r][column] = currentValue.compare(valueObject, operator as compareToken, isCaseSensitive);\n                        }\n                        break;\n                    case BatchOperatorType.CONCATENATE_FRONT:\n                        result[r][column] = currentValue.concatenateFront(valueObject);\n                        break;\n                    case BatchOperatorType.CONCATENATE_BACK:\n                        result[r][column] = currentValue.concatenateBack(valueObject);\n                        break;\n                    case BatchOperatorType.POW:\n                        result[r][column] = currentValue.pow(valueObject);\n                        break;\n                    case BatchOperatorType.ROUND:\n                        result[r][column] = currentValue.round(valueObject);\n                        break;\n                    case BatchOperatorType.FLOOR:\n                        result[r][column] = currentValue.floor(valueObject);\n                        break;\n                    case BatchOperatorType.ATAN2:\n                        result[r][column] = currentValue.atan2(valueObject);\n                        break;\n                    case BatchOperatorType.CEIL:\n                        result[r][column] = currentValue.ceil(valueObject);\n                        break;\n                }\n            }\n        } else {\n            result[r][column] = ErrorValueObject.create(ErrorType.NA);\n        }\n\n        /**\n         * Inverted indexing enhances matching performance.\n         */\n        if (currentValue == null) {\n            return;\n        }\n\n        if (currentValue.isError()) {\n            CELL_INVERTED_INDEX_CACHE.set(\n                unitId,\n                sheetId,\n                column + startColumn,\n                (currentValue as ErrorValueObject).getErrorType(),\n                r + startRow\n            );\n        } else {\n            CELL_INVERTED_INDEX_CACHE.set(\n                unitId,\n                sheetId,\n                column + startColumn,\n                currentValue.getValue(),\n                r + startRow\n            );\n        }\n    }\n\n    // eslint-disable-next-line max-lines-per-function, complexity\n    private _batchOperatorArray(\n        valueObject: BaseValueObject,\n        batchOperatorType: BatchOperatorType,\n        operator?: compareToken,\n        isCaseSensitive?: boolean\n    ) {\n        let rowCount = (valueObject as ArrayValueObject).getRowCount();\n        let columnCount = (valueObject as ArrayValueObject).getColumnCount();\n\n        if (rowCount < this._rowCount) {\n            rowCount = this._rowCount;\n        }\n\n        if (columnCount < this._columnCount) {\n            columnCount = this._columnCount;\n        }\n\n        const result: BaseValueObject[][] = [];\n\n        const currentCalculateType = this._checkArrayCalculateType(this as ArrayValueObject);\n\n        const opCalculateType = this._checkArrayCalculateType(valueObject as ArrayValueObject);\n\n        for (let r = 0; r < rowCount; r++) {\n            const rowList: BaseValueObject[] = [];\n            for (let c = 0; c < columnCount; c++) {\n                let currentValue: Nullable<BaseValueObject>;\n                if (currentCalculateType === ArrayCalculateType.SINGLE) {\n                    currentValue = this.getValueOrDefault(0, 0);\n                } else if (currentCalculateType === ArrayCalculateType.ROW) {\n                    currentValue = this.getValueOrDefault(0, c);\n                } else if (currentCalculateType === ArrayCalculateType.COLUMN) {\n                    currentValue = this.getValueOrDefault(r, 0);\n                } else {\n                    currentValue = this.getValueOrDefault(r, c);\n                }\n\n                let opValue: Nullable<BaseValueObject>;\n                if (opCalculateType === ArrayCalculateType.SINGLE) {\n                    opValue = (valueObject as ArrayValueObject).getValueOrDefault(0, 0);\n                } else if (opCalculateType === ArrayCalculateType.ROW) {\n                    opValue = (valueObject as ArrayValueObject).getValueOrDefault(0, c);\n                } else if (opCalculateType === ArrayCalculateType.COLUMN) {\n                    opValue = (valueObject as ArrayValueObject).getValueOrDefault(r, 0);\n                } else {\n                    opValue = (valueObject as ArrayValueObject).getValueOrDefault(r, c);\n                }\n\n                if (currentValue && opValue) {\n                    if (currentValue.isError()) {\n                        rowList[c] = currentValue as ErrorValueObject;\n                    } else if (opValue.isError()) {\n                        rowList[c] = opValue as ErrorValueObject;\n                    } else {\n                        switch (batchOperatorType) {\n                            case BatchOperatorType.PLUS:\n                                rowList[c] = currentValue.plus(opValue);\n                                break;\n                            case BatchOperatorType.MINUS:\n                                rowList[c] = currentValue.minus(opValue);\n                                break;\n                            case BatchOperatorType.MULTIPLY:\n                                rowList[c] = currentValue.multiply(opValue);\n                                break;\n                            case BatchOperatorType.DIVIDED:\n                                rowList[c] = currentValue.divided(opValue);\n                                break;\n                            case BatchOperatorType.MOD:\n                                rowList[c] = currentValue.mod(opValue);\n                                break;\n                            case BatchOperatorType.COMPARE:\n                                if (!operator) {\n                                    rowList[c] = ErrorValueObject.create(ErrorType.VALUE);\n                                } else {\n                                    rowList[c] = currentValue.compare(opValue, operator as compareToken, isCaseSensitive);\n                                }\n                                break;\n                            case BatchOperatorType.CONCATENATE_FRONT:\n                                rowList[c] = currentValue.concatenateFront(opValue);\n                                break;\n                            case BatchOperatorType.CONCATENATE_BACK:\n                                rowList[c] = currentValue.concatenateBack(opValue);\n                                break;\n                            case BatchOperatorType.POW:\n                                rowList[c] = currentValue.pow(opValue);\n                                break;\n                            case BatchOperatorType.ROUND:\n                                rowList[c] = currentValue.round(opValue);\n                                break;\n                            case BatchOperatorType.ATAN2:\n                                rowList[c] = currentValue.atan2(opValue);\n                                break;\n                            case BatchOperatorType.FLOOR:\n                                rowList[c] = currentValue.floor(opValue);\n                                break;\n                            case BatchOperatorType.CEIL:\n                                rowList[c] = currentValue.ceil(opValue);\n                                break;\n                        }\n                    }\n                }\n                // else if (currentValue) {\n                //     rowList[c] = currentValue;\n                // } else if (opValue) {\n                //     rowList[c] = opValue;\n                // }\n                else {\n                    rowList[c] = ErrorValueObject.create(ErrorType.NA);\n                }\n            }\n            result.push(rowList);\n        }\n\n        return this._createNewArray(result, rowCount, columnCount);\n    }\n\n    private _checkArrayCalculateType(valueObject: ArrayValueObject) {\n        if (valueObject.getRowCount() === 1 && valueObject.getColumnCount() === 1) {\n            return ArrayCalculateType.SINGLE;\n        }\n\n        if (valueObject.getRowCount() === 1) {\n            return ArrayCalculateType.ROW;\n        }\n        if (valueObject.getColumnCount() === 1) {\n            return ArrayCalculateType.COLUMN;\n        }\n\n        return ArrayCalculateType.PRODUCT;\n    }\n\n    private _formatValue(rawValue: string | IArrayValueObject) {\n        if (typeof rawValue !== 'string') {\n            rawValue = rawValue as IArrayValueObject;\n\n            this._rowCount = rawValue.rowCount;\n\n            this._columnCount = rawValue.columnCount;\n\n            this._unitId = rawValue.unitId;\n\n            this._sheetId = rawValue.sheetId;\n\n            this._currentRow = rawValue.row;\n\n            this._currentColumn = rawValue.column;\n\n            return rawValue.calculateValueList;\n        }\n        rawValue = rawValue.slice(1, -1) as string;\n        const rowArray = rawValue.split(';');\n        const rowArrayCount = rowArray.length;\n        const result: BaseValueObject[][] = [];\n        let maxColumnCount = 0;\n        for (let r = 0; r < rowArrayCount; r++) {\n            const columnRaw = rowArray[r];\n            const columnArray = columnRaw.split(',');\n            const columnArrayCount = columnArray.length;\n\n            if (maxColumnCount < columnArrayCount) {\n                maxColumnCount = columnArrayCount;\n            }\n\n            const row: BaseValueObject[] = [];\n            for (let c = 0; c < columnArrayCount; c++) {\n                const cellRaw = columnArray[c].trim();\n                row.push(ValueObjectFactory.create(cellRaw));\n            }\n            result.push(row);\n        }\n\n        this._rowCount = rowArrayCount;\n\n        this._columnCount = maxColumnCount;\n\n        return result;\n    }\n\n    private _createNewArray(\n        result: Nullable<BaseValueObject>[][],\n        rowCount: number,\n        columnCount: number,\n        row: number = -1,\n        column: number = -1\n    ) {\n        if (this._currentColumn === -1 || this._currentRow === -1) {\n            row = -1;\n            column = -1;\n        }\n\n        const arrayValueObjectData: IArrayValueObject = {\n            calculateValueList: result,\n            rowCount,\n            columnCount,\n            unitId: this.getUnitId(),\n            sheetId: this.getSheetId(),\n            row,\n            column,\n        };\n\n        return ArrayValueObject.create(arrayValueObjectData);\n    }\n}\n\nexport class ValueObjectFactory {\n    static create(rawValue: string | number | boolean | null) {\n        if (rawValue == null) {\n            return NullValueObject.create();\n        }\n        if (typeof rawValue === 'boolean') {\n            return BooleanValueObject.create(rawValue);\n        }\n        if (typeof rawValue === 'string') {\n            const rawValueUpper = rawValue.toLocaleUpperCase().trim();\n            if (ERROR_TYPE_SET.has(rawValueUpper as ErrorType)) {\n                return ErrorValueObject.create(rawValueUpper as ErrorType);\n            }\n            if (rawValueUpper === BooleanValue.TRUE || rawValueUpper === BooleanValue.FALSE) {\n                return createBooleanValueObjectByRawValue(rawValue);\n            }\n            if (isRealNum(rawValue)) {\n                return NumberValueObject.create(Number(rawValue));\n            }\n\n            const { isNumberPattern, value, pattern } = stringIsNumberPattern(rawValue);\n            if (isNumberPattern) {\n                return NumberValueObject.create(value as number, pattern as string);\n            }\n\n            const rawValueSingleLine = rawValue.replace(/\\n/g, '').replace(/\\r/g, '');\n            if (!isStringWrappedByDoubleQuotes(rawValueSingleLine) && regexTestArrayValue(rawValueSingleLine)) {\n                return ArrayValueObject.create(rawValueSingleLine);\n            }\n\n            return createStringValueObjectByRawValue(rawValue);\n        }\n        if (typeof rawValue === 'number') {\n            return createNumberValueObjectByRawValue(rawValue);\n        }\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n}\n\nfunction isStringWrappedByDoubleQuotes(input: string) {\n    const trimmedInput = input.trim();\n    return trimmedInput.startsWith('\"') && trimmedInput.endsWith('\"');\n}\n"],"mappings":"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","names":["BatchOperatorType","ArrayCalculateType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6e998931133cb99ef40d2b577a403b5524b84d5c"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/base-reference-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/base-reference-object.ts","statementMap":{"0":{"start":{"line":18,"column":32},"end":{"line":18,"column":35}},"1":{"start":{"line":19,"column":42},"end":{"line":19,"column":84}},"2":{"start":{"line":22,"column":4},"end":{"line":22,"column":12}},"3":{"start":{"line":23,"column":4},"end":{"line":23,"column":25}},"4":{"start":{"line":25,"column":19},"end":{"line":25,"column":21}},"5":{"start":{"line":26,"column":21},"end":{"line":26,"column":23}},"6":{"start":{"line":27,"column":20},"end":{"line":27,"column":22}},"7":{"start":{"line":28,"column":15},"end":{"line":33,"column":3}},"8":{"start":{"line":34,"column":14},"end":{"line":34,"column":16}},"9":{"start":{"line":35,"column":20},"end":{"line":35,"column":22}},"10":{"start":{"line":36,"column":19},"end":{"line":36,"column":21}},"11":{"start":{"line":37,"column":18},"end":{"line":37,"column":20}},"12":{"start":{"line":38,"column":17},"end":{"line":38,"column":19}},"13":{"start":{"line":39,"column":26},"end":{"line":39,"column":28}},"14":{"start":{"line":40,"column":33},"end":{"line":40,"column":35}},"15":{"start":{"line":41,"column":28},"end":{"line":41,"column":30}},"16":{"start":{"line":42,"column":16},"end":{"line":42,"column":17}},"17":{"start":{"line":43,"column":16},"end":{"line":43,"column":17}},"18":{"start":{"line":45,"column":4},"end":{"line":45,"column":24}},"19":{"start":{"line":46,"column":4},"end":{"line":46,"column":30}},"20":{"start":{"line":47,"column":4},"end":{"line":47,"column":27}},"21":{"start":{"line":50,"column":4},"end":{"line":50,"column":23}},"22":{"start":{"line":53,"column":4},"end":{"line":53,"column":24}},"23":{"start":{"line":56,"column":57},"end":{"line":56,"column":80}},"24":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"25":{"start":{"line":58,"column":6},"end":{"line":58,"column":18}},"26":{"start":{"line":60,"column":4},"end":{"line":60,"column":17}},"27":{"start":{"line":63,"column":4},"end":{"line":63,"column":25}},"28":{"start":{"line":64,"column":4},"end":{"line":64,"column":25}},"29":{"start":{"line":67,"column":4},"end":{"line":70,"column":6}},"30":{"start":{"line":73,"column":55},"end":{"line":73,"column":125}},"31":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"32":{"start":{"line":75,"column":6},"end":{"line":75,"column":19}},"33":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"34":{"start":{"line":78,"column":6},"end":{"line":78,"column":22}},"35":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"36":{"start":{"line":81,"column":6},"end":{"line":81,"column":49}},"37":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"38":{"start":{"line":84,"column":6},"end":{"line":84,"column":55}},"39":{"start":{"line":86,"column":4},"end":{"line":92,"column":6}},"40":{"start":{"line":95,"column":4},"end":{"line":95,"column":16}},"41":{"start":{"line":98,"column":57},"end":{"line":98,"column":80}},"42":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"43":{"start":{"line":100,"column":6},"end":{"line":100,"column":87}},"44":{"start":{"line":102,"column":19},"end":{"line":102,"column":60}},"45":{"start":{"line":103,"column":20},"end":{"line":103,"column":63}},"46":{"start":{"line":104,"column":4},"end":{"line":128,"column":5}},"47":{"start":{"line":104,"column":17},"end":{"line":104,"column":25}},"48":{"start":{"line":105,"column":6},"end":{"line":127,"column":7}},"49":{"start":{"line":105,"column":19},"end":{"line":105,"column":30}},"50":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"51":{"start":{"line":107,"column":10},"end":{"line":107,"column":72}},"52":{"start":{"line":109,"column":21},"end":{"line":109,"column":43}},"53":{"start":{"line":110,"column":21},"end":{"line":110,"column":26}},"54":{"start":{"line":111,"column":8},"end":{"line":114,"column":9}},"55":{"start":{"line":112,"column":10},"end":{"line":112,"column":40}},"56":{"start":{"line":113,"column":10},"end":{"line":113,"column":19}},"57":{"start":{"line":115,"column":32},"end":{"line":115,"column":61}},"58":{"start":{"line":116,"column":8},"end":{"line":122,"column":9}},"59":{"start":{"line":117,"column":26},"end":{"line":117,"column":68}},"60":{"start":{"line":118,"column":10},"end":{"line":121,"column":11}},"61":{"start":{"line":119,"column":26},"end":{"line":119,"column":62}},"62":{"start":{"line":120,"column":12},"end":{"line":120,"column":73}},"63":{"start":{"line":123,"column":8},"end":{"line":123,"column":51}},"64":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"65":{"start":{"line":125,"column":10},"end":{"line":125,"column":17}},"66":{"start":{"line":131,"column":38},"end":{"line":131,"column":61}},"67":{"start":{"line":132,"column":17},"end":{"line":132,"column":56}},"68":{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},"69":{"start":{"line":134,"column":6},"end":{"line":134,"column":41}},"70":{"start":{"line":136,"column":26},"end":{"line":136,"column":55}},"71":{"start":{"line":137,"column":19},"end":{"line":137,"column":60}},"72":{"start":{"line":138,"column":20},"end":{"line":138,"column":63}},"73":{"start":{"line":139,"column":20},"end":{"line":139,"column":79}},"74":{"start":{"line":140,"column":4},"end":{"line":143,"column":5}},"75":{"start":{"line":141,"column":20},"end":{"line":141,"column":54}},"76":{"start":{"line":142,"column":6},"end":{"line":142,"column":65}},"77":{"start":{"line":144,"column":4},"end":{"line":144,"column":27}},"78":{"start":{"line":147,"column":4},"end":{"line":147,"column":27}},"79":{"start":{"line":150,"column":4},"end":{"line":150,"column":28}},"80":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"81":{"start":{"line":154,"column":6},"end":{"line":154,"column":32}},"82":{"start":{"line":156,"column":4},"end":{"line":156,"column":31}},"83":{"start":{"line":159,"column":4},"end":{"line":161,"column":5}},"84":{"start":{"line":160,"column":6},"end":{"line":160,"column":33}},"85":{"start":{"line":162,"column":4},"end":{"line":162,"column":32}},"86":{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},"87":{"start":{"line":166,"column":6},"end":{"line":166,"column":34}},"88":{"start":{"line":170,"column":4},"end":{"line":170,"column":30}},"89":{"start":{"line":173,"column":4},"end":{"line":173,"column":82}},"90":{"start":{"line":176,"column":4},"end":{"line":176,"column":34}},"91":{"start":{"line":179,"column":4},"end":{"line":179,"column":31}},"92":{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},"93":{"start":{"line":183,"column":6},"end":{"line":183,"column":40}},"94":{"start":{"line":187,"column":4},"end":{"line":187,"column":33}},"95":{"start":{"line":190,"column":4},"end":{"line":190,"column":35}},"96":{"start":{"line":193,"column":4},"end":{"line":193,"column":32}},"97":{"start":{"line":196,"column":4},"end":{"line":196,"column":33}},"98":{"start":{"line":199,"column":4},"end":{"line":199,"column":31}},"99":{"start":{"line":202,"column":4},"end":{"line":202,"column":26}},"100":{"start":{"line":205,"column":4},"end":{"line":205,"column":30}},"101":{"start":{"line":208,"column":4},"end":{"line":208,"column":32}},"102":{"start":{"line":211,"column":4},"end":{"line":211,"column":42}},"103":{"start":{"line":214,"column":4},"end":{"line":214,"column":29}},"104":{"start":{"line":217,"column":4},"end":{"line":217,"column":36}},"105":{"start":{"line":220,"column":4},"end":{"line":220,"column":38}},"106":{"start":{"line":223,"column":4},"end":{"line":223,"column":42}},"107":{"start":{"line":226,"column":4},"end":{"line":226,"column":45}},"108":{"start":{"line":229,"column":4},"end":{"line":229,"column":49}},"109":{"start":{"line":232,"column":4},"end":{"line":232,"column":40}},"110":{"start":{"line":235,"column":4},"end":{"line":235,"column":44}},"111":{"start":{"line":238,"column":4},"end":{"line":238,"column":59}},"112":{"start":{"line":241,"column":4},"end":{"line":241,"column":62}},"113":{"start":{"line":244,"column":4},"end":{"line":244,"column":65}},"114":{"start":{"line":247,"column":4},"end":{"line":247,"column":71}},"115":{"start":{"line":250,"column":4},"end":{"line":250,"column":59}},"116":{"start":{"line":253,"column":4},"end":{"line":253,"column":62}},"117":{"start":{"line":256,"column":4},"end":{"line":256,"column":17}},"118":{"start":{"line":259,"column":4},"end":{"line":259,"column":17}},"119":{"start":{"line":262,"column":4},"end":{"line":262,"column":17}},"120":{"start":{"line":265,"column":4},"end":{"line":265,"column":17}},"121":{"start":{"line":268,"column":4},"end":{"line":268,"column":17}},"122":{"start":{"line":271,"column":4},"end":{"line":271,"column":50}},"123":{"start":{"line":274,"column":4},"end":{"line":279,"column":6}},"124":{"start":{"line":282,"column":18},"end":{"line":282,"column":36}},"125":{"start":{"line":283,"column":4},"end":{"line":285,"column":5}},"126":{"start":{"line":284,"column":6},"end":{"line":284,"column":44}},"127":{"start":{"line":286,"column":4},"end":{"line":292,"column":5}},"128":{"start":{"line":287,"column":22},"end":{"line":287,"column":50}},"129":{"start":{"line":288,"column":6},"end":{"line":290,"column":7}},"130":{"start":{"line":289,"column":8},"end":{"line":289,"column":58}},"131":{"start":{"line":291,"column":6},"end":{"line":291,"column":63}},"132":{"start":{"line":293,"column":4},"end":{"line":295,"column":5}},"133":{"start":{"line":294,"column":6},"end":{"line":294,"column":56}},"134":{"start":{"line":296,"column":4},"end":{"line":298,"column":5}},"135":{"start":{"line":297,"column":6},"end":{"line":297,"column":55}},"136":{"start":{"line":299,"column":4},"end":{"line":299,"column":44}},"137":{"start":{"line":302,"column":19},"end":{"line":302,"column":57}},"138":{"start":{"line":303,"column":4},"end":{"line":303,"column":27}},"139":{"start":{"line":303,"column":17},"end":{"line":303,"column":27}},"140":{"start":{"line":304,"column":18},"end":{"line":304,"column":45}},"141":{"start":{"line":305,"column":4},"end":{"line":305,"column":35}},"142":{"start":{"line":308,"column":4},"end":{"line":308,"column":39}},"143":{"start":{"line":311,"column":4},"end":{"line":311,"column":50}},"144":{"start":{"line":314,"column":4},"end":{"line":314,"column":65}},"145":{"start":{"line":317,"column":4},"end":{"line":317,"column":50}},"146":{"start":{"line":320,"column":4},"end":{"line":320,"column":70}},"147":{"start":{"line":323,"column":4},"end":{"line":323,"column":79}},"148":{"start":{"line":326,"column":4},"end":{"line":326,"column":86}},"149":{"start":{"line":329,"column":28},"end":{"line":329,"column":60}},"150":{"start":{"line":330,"column":30},"end":{"line":330,"column":63}},"151":{"start":{"line":331,"column":39},"end":{"line":331,"column":82}},"152":{"start":{"line":332,"column":46},"end":{"line":332,"column":96}},"153":{"start":{"line":333,"column":4},"end":{"line":333,"column":264}},"154":{"start":{"line":336,"column":4},"end":{"line":336,"column":113}},"155":{"start":{"line":339,"column":14},"end":{"line":339,"column":20}},"156":{"start":{"line":340,"column":17},"end":{"line":340,"column":26}},"157":{"start":{"line":341,"column":4},"end":{"line":343,"column":5}},"158":{"start":{"line":342,"column":6},"end":{"line":342,"column":37}},"159":{"start":{"line":344,"column":4},"end":{"line":346,"column":5}},"160":{"start":{"line":345,"column":6},"end":{"line":345,"column":43}},"161":{"start":{"line":347,"column":17},"end":{"line":347,"column":46}},"162":{"start":{"line":348,"column":4},"end":{"line":350,"column":5}},"163":{"start":{"line":349,"column":6},"end":{"line":349,"column":54}},"164":{"start":{"line":351,"column":4},"end":{"line":351,"column":41}},"165":{"start":{"line":362,"column":26},"end":{"line":362,"column":54}},"166":{"start":{"line":363,"column":4},"end":{"line":365,"column":5}},"167":{"start":{"line":364,"column":6},"end":{"line":364,"column":16}},"168":{"start":{"line":366,"column":24},"end":{"line":366,"column":90}},"169":{"start":{"line":367,"column":4},"end":{"line":369,"column":5}},"170":{"start":{"line":368,"column":6},"end":{"line":368,"column":16}},"171":{"start":{"line":370,"column":18},"end":{"line":370,"column":59}},"172":{"start":{"line":371,"column":4},"end":{"line":371,"column":35}},"173":{"start":{"line":374,"column":57},"end":{"line":374,"column":80}},"174":{"start":{"line":375,"column":16},"end":{"line":375,"column":108}},"175":{"start":{"line":376,"column":18},"end":{"line":376,"column":53}},"176":{"start":{"line":377,"column":4},"end":{"line":379,"column":5}},"177":{"start":{"line":378,"column":6},"end":{"line":378,"column":19}},"178":{"start":{"line":380,"column":20},"end":{"line":380,"column":41}},"179":{"start":{"line":381,"column":23},"end":{"line":381,"column":50}},"180":{"start":{"line":382,"column":4},"end":{"line":384,"column":5}},"181":{"start":{"line":383,"column":6},"end":{"line":383,"column":46}},"182":{"start":{"line":385,"column":27},"end":{"line":385,"column":45}},"183":{"start":{"line":386,"column":4},"end":{"line":396,"column":7}},"184":{"start":{"line":387,"column":18},"end":{"line":387,"column":37}},"185":{"start":{"line":388,"column":21},"end":{"line":388,"column":46}},"186":{"start":{"line":389,"column":6},"end":{"line":391,"column":7}},"187":{"start":{"line":390,"column":8},"end":{"line":390,"column":52}},"188":{"start":{"line":392,"column":6},"end":{"line":394,"column":7}},"189":{"start":{"line":393,"column":8},"end":{"line":393,"column":47}},"190":{"start":{"line":395,"column":6},"end":{"line":395,"column":48}},"191":{"start":{"line":397,"column":33},"end":{"line":405,"column":5}},"192":{"start":{"line":406,"column":29},"end":{"line":406,"column":74}},"193":{"start":{"line":407,"column":4},"end":{"line":407,"column":70}},"194":{"start":{"line":408,"column":4},"end":{"line":408,"column":28}},"195":{"start":{"line":411,"column":4},"end":{"line":415,"column":6}},"196":{"start":{"line":418,"column":4},"end":{"line":420,"column":5}},"197":{"start":{"line":419,"column":6},"end":{"line":419,"column":18}},"198":{"start":{"line":421,"column":4},"end":{"line":421,"column":17}},"199":{"start":{"line":424,"column":33},"end":{"line":432,"column":5}},"200":{"start":{"line":433,"column":4},"end":{"line":433,"column":57}},"201":{"start":{"line":438,"column":4},"end":{"line":438,"column":12}},"202":{"start":{"line":439,"column":4},"end":{"line":439,"column":29}},"203":{"start":{"line":442,"column":4},"end":{"line":442,"column":16}},"204":{"start":{"line":445,"column":4},"end":{"line":445,"column":25}},"205":{"start":{"line":450,"column":4},"end":{"line":450,"column":12}},"206":{"start":{"line":451,"column":4},"end":{"line":451,"column":37}},"207":{"start":{"line":454,"column":4},"end":{"line":454,"column":16}},"208":{"start":{"line":457,"column":21},"end":{"line":457,"column":23}},"209":{"start":{"line":458,"column":4},"end":{"line":471,"column":5}},"210":{"start":{"line":458,"column":17},"end":{"line":458,"column":18}},"211":{"start":{"line":459,"column":27},"end":{"line":459,"column":47}},"212":{"start":{"line":460,"column":6},"end":{"line":462,"column":7}},"213":{"start":{"line":461,"column":8},"end":{"line":461,"column":25}},"214":{"start":{"line":463,"column":6},"end":{"line":470,"column":7}},"215":{"start":{"line":463,"column":19},"end":{"line":463,"column":20}},"216":{"start":{"line":464,"column":28},"end":{"line":464,"column":43}},"217":{"start":{"line":465,"column":8},"end":{"line":469,"column":9}},"218":{"start":{"line":466,"column":10},"end":{"line":466,"column":56}},"219":{"start":{"line":468,"column":10},"end":{"line":468,"column":39}},"220":{"start":{"line":472,"column":33},"end":{"line":480,"column":5}},"221":{"start":{"line":481,"column":4},"end":{"line":481,"column":57}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":21,"column":2},"end":{"line":21,"column":3}},"loc":{"start":{"line":21,"column":22},"end":{"line":24,"column":3}},"line":21},"1":{"name":"(anonymous_1)","decl":{"start":{"line":44,"column":2},"end":{"line":44,"column":3}},"loc":{"start":{"line":44,"column":12},"end":{"line":48,"column":3}},"line":44},"2":{"name":"(anonymous_2)","decl":{"start":{"line":49,"column":2},"end":{"line":49,"column":3}},"loc":{"start":{"line":49,"column":13},"end":{"line":51,"column":3}},"line":49},"3":{"name":"(anonymous_3)","decl":{"start":{"line":52,"column":2},"end":{"line":52,"column":3}},"loc":{"start":{"line":52,"column":18},"end":{"line":54,"column":3}},"line":52},"4":{"name":"(anonymous_4)","decl":{"start":{"line":55,"column":2},"end":{"line":55,"column":3}},"loc":{"start":{"line":55,"column":18},"end":{"line":61,"column":3}},"line":55},"5":{"name":"(anonymous_5)","decl":{"start":{"line":62,"column":2},"end":{"line":62,"column":3}},"loc":{"start":{"line":62,"column":29},"end":{"line":65,"column":3}},"line":62},"6":{"name":"(anonymous_6)","decl":{"start":{"line":66,"column":2},"end":{"line":66,"column":3}},"loc":{"start":{"line":66,"column":17},"end":{"line":71,"column":3}},"line":66},"7":{"name":"(anonymous_7)","decl":{"start":{"line":72,"column":2},"end":{"line":72,"column":3}},"loc":{"start":{"line":72,"column":21},"end":{"line":93,"column":3}},"line":72},"8":{"name":"(anonymous_8)","decl":{"start":{"line":94,"column":2},"end":{"line":94,"column":3}},"loc":{"start":{"line":94,"column":22},"end":{"line":96,"column":3}},"line":94},"9":{"name":"(anonymous_9)","decl":{"start":{"line":97,"column":2},"end":{"line":97,"column":3}},"loc":{"start":{"line":97,"column":21},"end":{"line":129,"column":3}},"line":97},"10":{"name":"(anonymous_10)","decl":{"start":{"line":130,"column":2},"end":{"line":130,"column":3}},"loc":{"start":{"line":130,"column":17},"end":{"line":145,"column":3}},"line":130},"11":{"name":"(anonymous_11)","decl":{"start":{"line":146,"column":2},"end":{"line":146,"column":3}},"loc":{"start":{"line":146,"column":17},"end":{"line":148,"column":3}},"line":146},"12":{"name":"(anonymous_12)","decl":{"start":{"line":149,"column":2},"end":{"line":149,"column":3}},"loc":{"start":{"line":149,"column":22},"end":{"line":151,"column":3}},"line":149},"13":{"name":"(anonymous_13)","decl":{"start":{"line":152,"column":2},"end":{"line":152,"column":3}},"loc":{"start":{"line":152,"column":14},"end":{"line":157,"column":3}},"line":152},"14":{"name":"(anonymous_14)","decl":{"start":{"line":158,"column":2},"end":{"line":158,"column":3}},"loc":{"start":{"line":158,"column":15},"end":{"line":163,"column":3}},"line":158},"15":{"name":"(anonymous_15)","decl":{"start":{"line":164,"column":2},"end":{"line":164,"column":3}},"loc":{"start":{"line":164,"column":32},"end":{"line":168,"column":3}},"line":164},"16":{"name":"(anonymous_16)","decl":{"start":{"line":169,"column":2},"end":{"line":169,"column":3}},"loc":{"start":{"line":169,"column":20},"end":{"line":171,"column":3}},"line":169},"17":{"name":"(anonymous_17)","decl":{"start":{"line":172,"column":2},"end":{"line":172,"column":3}},"loc":{"start":{"line":172,"column":33},"end":{"line":174,"column":3}},"line":172},"18":{"name":"(anonymous_18)","decl":{"start":{"line":175,"column":2},"end":{"line":175,"column":3}},"loc":{"start":{"line":175,"column":34},"end":{"line":177,"column":3}},"line":175},"19":{"name":"(anonymous_19)","decl":{"start":{"line":178,"column":2},"end":{"line":178,"column":3}},"loc":{"start":{"line":178,"column":21},"end":{"line":180,"column":3}},"line":178},"20":{"name":"(anonymous_20)","decl":{"start":{"line":181,"column":2},"end":{"line":181,"column":3}},"loc":{"start":{"line":181,"column":32},"end":{"line":185,"column":3}},"line":181},"21":{"name":"(anonymous_21)","decl":{"start":{"line":186,"column":2},"end":{"line":186,"column":3}},"loc":{"start":{"line":186,"column":23},"end":{"line":188,"column":3}},"line":186},"22":{"name":"(anonymous_22)","decl":{"start":{"line":189,"column":2},"end":{"line":189,"column":3}},"loc":{"start":{"line":189,"column":29},"end":{"line":191,"column":3}},"line":189},"23":{"name":"(anonymous_23)","decl":{"start":{"line":192,"column":2},"end":{"line":192,"column":3}},"loc":{"start":{"line":192,"column":22},"end":{"line":194,"column":3}},"line":192},"24":{"name":"(anonymous_24)","decl":{"start":{"line":195,"column":2},"end":{"line":195,"column":3}},"loc":{"start":{"line":195,"column":27},"end":{"line":197,"column":3}},"line":195},"25":{"name":"(anonymous_25)","decl":{"start":{"line":198,"column":2},"end":{"line":198,"column":3}},"loc":{"start":{"line":198,"column":21},"end":{"line":200,"column":3}},"line":198},"26":{"name":"(anonymous_26)","decl":{"start":{"line":201,"column":2},"end":{"line":201,"column":3}},"loc":{"start":{"line":201,"column":16},"end":{"line":203,"column":3}},"line":201},"27":{"name":"(anonymous_27)","decl":{"start":{"line":204,"column":2},"end":{"line":204,"column":3}},"loc":{"start":{"line":204,"column":24},"end":{"line":206,"column":3}},"line":204},"28":{"name":"(anonymous_28)","decl":{"start":{"line":207,"column":2},"end":{"line":207,"column":3}},"loc":{"start":{"line":207,"column":22},"end":{"line":209,"column":3}},"line":207},"29":{"name":"(anonymous_29)","decl":{"start":{"line":210,"column":2},"end":{"line":210,"column":3}},"loc":{"start":{"line":210,"column":36},"end":{"line":212,"column":3}},"line":210},"30":{"name":"(anonymous_30)","decl":{"start":{"line":213,"column":2},"end":{"line":213,"column":3}},"loc":{"start":{"line":213,"column":19},"end":{"line":215,"column":3}},"line":213},"31":{"name":"(anonymous_31)","decl":{"start":{"line":216,"column":2},"end":{"line":216,"column":3}},"loc":{"start":{"line":216,"column":30},"end":{"line":218,"column":3}},"line":216},"32":{"name":"(anonymous_32)","decl":{"start":{"line":219,"column":2},"end":{"line":219,"column":3}},"loc":{"start":{"line":219,"column":28},"end":{"line":221,"column":3}},"line":219},"33":{"name":"(anonymous_33)","decl":{"start":{"line":222,"column":2},"end":{"line":222,"column":3}},"loc":{"start":{"line":222,"column":36},"end":{"line":224,"column":3}},"line":222},"34":{"name":"(anonymous_34)","decl":{"start":{"line":225,"column":2},"end":{"line":225,"column":3}},"loc":{"start":{"line":225,"column":35},"end":{"line":227,"column":3}},"line":225},"35":{"name":"(anonymous_35)","decl":{"start":{"line":228,"column":2},"end":{"line":228,"column":3}},"loc":{"start":{"line":228,"column":43},"end":{"line":230,"column":3}},"line":228},"36":{"name":"(anonymous_36)","decl":{"start":{"line":231,"column":2},"end":{"line":231,"column":3}},"loc":{"start":{"line":231,"column":30},"end":{"line":233,"column":3}},"line":231},"37":{"name":"(anonymous_37)","decl":{"start":{"line":234,"column":2},"end":{"line":234,"column":3}},"loc":{"start":{"line":234,"column":38},"end":{"line":236,"column":3}},"line":234},"38":{"name":"(anonymous_38)","decl":{"start":{"line":237,"column":2},"end":{"line":237,"column":3}},"loc":{"start":{"line":237,"column":27},"end":{"line":239,"column":3}},"line":237},"39":{"name":"(anonymous_39)","decl":{"start":{"line":240,"column":2},"end":{"line":240,"column":3}},"loc":{"start":{"line":240,"column":30},"end":{"line":242,"column":3}},"line":240},"40":{"name":"(anonymous_40)","decl":{"start":{"line":243,"column":2},"end":{"line":243,"column":3}},"loc":{"start":{"line":243,"column":16},"end":{"line":245,"column":3}},"line":243},"41":{"name":"(anonymous_41)","decl":{"start":{"line":246,"column":2},"end":{"line":246,"column":3}},"loc":{"start":{"line":246,"column":19},"end":{"line":248,"column":3}},"line":246},"42":{"name":"(anonymous_42)","decl":{"start":{"line":249,"column":2},"end":{"line":249,"column":3}},"loc":{"start":{"line":249,"column":15},"end":{"line":251,"column":3}},"line":249},"43":{"name":"(anonymous_43)","decl":{"start":{"line":252,"column":2},"end":{"line":252,"column":3}},"loc":{"start":{"line":252,"column":18},"end":{"line":254,"column":3}},"line":252},"44":{"name":"(anonymous_44)","decl":{"start":{"line":255,"column":2},"end":{"line":255,"column":3}},"loc":{"start":{"line":255,"column":11},"end":{"line":257,"column":3}},"line":255},"45":{"name":"(anonymous_45)","decl":{"start":{"line":258,"column":2},"end":{"line":258,"column":3}},"loc":{"start":{"line":258,"column":13},"end":{"line":260,"column":3}},"line":258},"46":{"name":"(anonymous_46)","decl":{"start":{"line":261,"column":2},"end":{"line":261,"column":3}},"loc":{"start":{"line":261,"column":10},"end":{"line":263,"column":3}},"line":261},"47":{"name":"(anonymous_47)","decl":{"start":{"line":264,"column":2},"end":{"line":264,"column":3}},"loc":{"start":{"line":264,"column":12},"end":{"line":266,"column":3}},"line":264},"48":{"name":"(anonymous_48)","decl":{"start":{"line":267,"column":2},"end":{"line":267,"column":3}},"loc":{"start":{"line":267,"column":12},"end":{"line":269,"column":3}},"line":267},"49":{"name":"(anonymous_49)","decl":{"start":{"line":270,"column":2},"end":{"line":270,"column":3}},"loc":{"start":{"line":270,"column":27},"end":{"line":272,"column":3}},"line":270},"50":{"name":"(anonymous_50)","decl":{"start":{"line":273,"column":2},"end":{"line":273,"column":3}},"loc":{"start":{"line":273,"column":37},"end":{"line":280,"column":3}},"line":273},"51":{"name":"(anonymous_51)","decl":{"start":{"line":281,"column":2},"end":{"line":281,"column":3}},"loc":{"start":{"line":281,"column":27},"end":{"line":300,"column":3}},"line":281},"52":{"name":"(anonymous_52)","decl":{"start":{"line":301,"column":2},"end":{"line":301,"column":3}},"loc":{"start":{"line":301,"column":26},"end":{"line":306,"column":3}},"line":301},"53":{"name":"(anonymous_53)","decl":{"start":{"line":307,"column":2},"end":{"line":307,"column":3}},"loc":{"start":{"line":307,"column":20},"end":{"line":309,"column":3}},"line":307},"54":{"name":"(anonymous_54)","decl":{"start":{"line":310,"column":2},"end":{"line":310,"column":3}},"loc":{"start":{"line":310,"column":26},"end":{"line":312,"column":3}},"line":310},"55":{"name":"(anonymous_55)","decl":{"start":{"line":313,"column":2},"end":{"line":313,"column":3}},"loc":{"start":{"line":313,"column":30},"end":{"line":315,"column":3}},"line":313},"56":{"name":"(anonymous_56)","decl":{"start":{"line":316,"column":2},"end":{"line":316,"column":3}},"loc":{"start":{"line":316,"column":25},"end":{"line":318,"column":3}},"line":316},"57":{"name":"(anonymous_57)","decl":{"start":{"line":319,"column":2},"end":{"line":319,"column":3}},"loc":{"start":{"line":319,"column":31},"end":{"line":321,"column":3}},"line":319},"58":{"name":"(anonymous_58)","decl":{"start":{"line":322,"column":2},"end":{"line":322,"column":3}},"loc":{"start":{"line":322,"column":41},"end":{"line":324,"column":3}},"line":322},"59":{"name":"(anonymous_59)","decl":{"start":{"line":325,"column":2},"end":{"line":325,"column":3}},"loc":{"start":{"line":325,"column":48},"end":{"line":327,"column":3}},"line":325},"60":{"name":"(anonymous_60)","decl":{"start":{"line":328,"column":2},"end":{"line":328,"column":3}},"loc":{"start":{"line":328,"column":27},"end":{"line":334,"column":3}},"line":328},"61":{"name":"(anonymous_61)","decl":{"start":{"line":335,"column":2},"end":{"line":335,"column":3}},"loc":{"start":{"line":335,"column":42},"end":{"line":337,"column":3}},"line":335},"62":{"name":"(anonymous_62)","decl":{"start":{"line":338,"column":2},"end":{"line":338,"column":3}},"loc":{"start":{"line":338,"column":39},"end":{"line":352,"column":3}},"line":338},"63":{"name":"(anonymous_63)","decl":{"start":{"line":361,"column":2},"end":{"line":361,"column":3}},"loc":{"start":{"line":361,"column":47},"end":{"line":372,"column":3}},"line":361},"64":{"name":"(anonymous_64)","decl":{"start":{"line":373,"column":2},"end":{"line":373,"column":3}},"loc":{"start":{"line":373,"column":38},"end":{"line":409,"column":3}},"line":373},"65":{"name":"(anonymous_65)","decl":{"start":{"line":386,"column":18},"end":{"line":386,"column":19}},"loc":{"start":{"line":386,"column":58},"end":{"line":396,"column":5}},"line":386},"66":{"name":"(anonymous_66)","decl":{"start":{"line":410,"column":2},"end":{"line":410,"column":3}},"loc":{"start":{"line":410,"column":16},"end":{"line":416,"column":3}},"line":410},"67":{"name":"(anonymous_67)","decl":{"start":{"line":417,"column":2},"end":{"line":417,"column":3}},"loc":{"start":{"line":417,"column":26},"end":{"line":422,"column":3}},"line":417},"68":{"name":"(anonymous_68)","decl":{"start":{"line":423,"column":2},"end":{"line":423,"column":3}},"loc":{"start":{"line":423,"column":30},"end":{"line":434,"column":3}},"line":423},"69":{"name":"(anonymous_69)","decl":{"start":{"line":437,"column":2},"end":{"line":437,"column":3}},"loc":{"start":{"line":437,"column":24},"end":{"line":440,"column":3}},"line":437},"70":{"name":"(anonymous_70)","decl":{"start":{"line":441,"column":2},"end":{"line":441,"column":3}},"loc":{"start":{"line":441,"column":18},"end":{"line":443,"column":3}},"line":441},"71":{"name":"(anonymous_71)","decl":{"start":{"line":444,"column":2},"end":{"line":444,"column":3}},"loc":{"start":{"line":444,"column":19},"end":{"line":446,"column":3}},"line":444},"72":{"name":"(anonymous_72)","decl":{"start":{"line":449,"column":2},"end":{"line":449,"column":3}},"loc":{"start":{"line":449,"column":28},"end":{"line":452,"column":3}},"line":449},"73":{"name":"(anonymous_73)","decl":{"start":{"line":453,"column":2},"end":{"line":453,"column":3}},"loc":{"start":{"line":453,"column":23},"end":{"line":455,"column":3}},"line":453},"74":{"name":"(anonymous_74)","decl":{"start":{"line":456,"column":2},"end":{"line":456,"column":3}},"loc":{"start":{"line":456,"column":19},"end":{"line":482,"column":3}},"line":456}},"branchMap":{"0":{"loc":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},{"start":{},"end":{}}],"line":57},"1":{"loc":{"start":{"line":57,"column":8},"end":{"line":57,"column":131}},"type":"binary-expr","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":20}},{"start":{"line":57,"column":24},"end":{"line":57,"column":39}},{"start":{"line":57,"column":43},"end":{"line":57,"column":82}},{"start":{"line":57,"column":86},"end":{"line":57,"column":131}}],"line":57},"2":{"loc":{"start":{"line":62,"column":15},"end":{"line":62,"column":20}},"type":"default-arg","locations":[{"start":{"line":62,"column":19},"end":{"line":62,"column":20}}],"line":62},"3":{"loc":{"start":{"line":62,"column":22},"end":{"line":62,"column":27}},"type":"default-arg","locations":[{"start":{"line":62,"column":26},"end":{"line":62,"column":27}}],"line":62},"4":{"loc":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},{"start":{},"end":{}}],"line":74},"5":{"loc":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},{"start":{},"end":{}}],"line":77},"6":{"loc":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},{"start":{},"end":{}}],"line":80},"7":{"loc":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},{"start":{},"end":{}}],"line":83},"8":{"loc":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},{"start":{},"end":{}}],"line":99},"9":{"loc":{"start":{"line":102,"column":19},"end":{"line":102,"column":60}},"type":"binary-expr","locations":[{"start":{"line":102,"column":19},"end":{"line":102,"column":37}},{"start":{"line":102,"column":41},"end":{"line":102,"column":60}}],"line":102},"10":{"loc":{"start":{"line":103,"column":20},"end":{"line":103,"column":63}},"type":"binary-expr","locations":[{"start":{"line":103,"column":20},"end":{"line":103,"column":39}},{"start":{"line":103,"column":43},"end":{"line":103,"column":63}}],"line":103},"11":{"loc":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},{"start":{},"end":{}}],"line":106},"12":{"loc":{"start":{"line":106,"column":12},"end":{"line":106,"column":26}},"type":"binary-expr","locations":[{"start":{"line":106,"column":12},"end":{"line":106,"column":17}},{"start":{"line":106,"column":21},"end":{"line":106,"column":26}}],"line":106},"13":{"loc":{"start":{"line":111,"column":8},"end":{"line":114,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":114,"column":9}},{"start":{},"end":{}}],"line":111},"14":{"loc":{"start":{"line":116,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":122,"column":9}},{"start":{},"end":{}}],"line":116},"15":{"loc":{"start":{"line":116,"column":12},"end":{"line":116,"column":47}},"type":"binary-expr","locations":[{"start":{"line":116,"column":12},"end":{"line":116,"column":26}},{"start":{"line":116,"column":30},"end":{"line":116,"column":47}}],"line":116},"16":{"loc":{"start":{"line":118,"column":10},"end":{"line":121,"column":11}},"type":"if","locations":[{"start":{"line":118,"column":10},"end":{"line":121,"column":11}},{"start":{},"end":{}}],"line":118},"17":{"loc":{"start":{"line":118,"column":14},"end":{"line":118,"column":53}},"type":"binary-expr","locations":[{"start":{"line":118,"column":14},"end":{"line":118,"column":21}},{"start":{"line":118,"column":25},"end":{"line":118,"column":53}}],"line":118},"18":{"loc":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},{"start":{},"end":{}}],"line":124},"19":{"loc":{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},{"start":{},"end":{}}],"line":133},"20":{"loc":{"start":{"line":137,"column":19},"end":{"line":137,"column":60}},"type":"binary-expr","locations":[{"start":{"line":137,"column":19},"end":{"line":137,"column":37}},{"start":{"line":137,"column":41},"end":{"line":137,"column":60}}],"line":137},"21":{"loc":{"start":{"line":138,"column":20},"end":{"line":138,"column":63}},"type":"binary-expr","locations":[{"start":{"line":138,"column":20},"end":{"line":138,"column":39}},{"start":{"line":138,"column":43},"end":{"line":138,"column":63}}],"line":138},"22":{"loc":{"start":{"line":140,"column":4},"end":{"line":143,"column":5}},"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":143,"column":5}},{"start":{},"end":{}}],"line":140},"23":{"loc":{"start":{"line":140,"column":8},"end":{"line":140,"column":45}},"type":"binary-expr","locations":[{"start":{"line":140,"column":8},"end":{"line":140,"column":15}},{"start":{"line":140,"column":19},"end":{"line":140,"column":45}}],"line":140},"24":{"loc":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},{"start":{},"end":{}}],"line":153},"25":{"loc":{"start":{"line":153,"column":8},"end":{"line":153,"column":59}},"type":"binary-expr","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":26}},{"start":{"line":153,"column":30},"end":{"line":153,"column":59}}],"line":153},"26":{"loc":{"start":{"line":159,"column":4},"end":{"line":161,"column":5}},"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":161,"column":5}},{"start":{},"end":{}}],"line":159},"27":{"loc":{"start":{"line":159,"column":8},"end":{"line":159,"column":61}},"type":"binary-expr","locations":[{"start":{"line":159,"column":8},"end":{"line":159,"column":27}},{"start":{"line":159,"column":31},"end":{"line":159,"column":61}}],"line":159},"28":{"loc":{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},{"start":{},"end":{}}],"line":165},"29":{"loc":{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},{"start":{},"end":{}}],"line":182},"30":{"loc":{"start":{"line":238,"column":11},"end":{"line":238,"column":58}},"type":"binary-expr","locations":[{"start":{"line":238,"column":11},"end":{"line":238,"column":53}},{"start":{"line":238,"column":57},"end":{"line":238,"column":58}}],"line":238},"31":{"loc":{"start":{"line":241,"column":11},"end":{"line":241,"column":61}},"type":"binary-expr","locations":[{"start":{"line":241,"column":11},"end":{"line":241,"column":56}},{"start":{"line":241,"column":60},"end":{"line":241,"column":61}}],"line":241},"32":{"loc":{"start":{"line":250,"column":11},"end":{"line":250,"column":58}},"type":"binary-expr","locations":[{"start":{"line":250,"column":11},"end":{"line":250,"column":52}},{"start":{"line":250,"column":56},"end":{"line":250,"column":58}}],"line":250},"33":{"loc":{"start":{"line":253,"column":11},"end":{"line":253,"column":61}},"type":"binary-expr","locations":[{"start":{"line":253,"column":11},"end":{"line":253,"column":55}},{"start":{"line":253,"column":59},"end":{"line":253,"column":61}}],"line":253},"34":{"loc":{"start":{"line":283,"column":4},"end":{"line":285,"column":5}},"type":"if","locations":[{"start":{"line":283,"column":4},"end":{"line":285,"column":5}},{"start":{},"end":{}}],"line":283},"35":{"loc":{"start":{"line":286,"column":4},"end":{"line":292,"column":5}},"type":"if","locations":[{"start":{"line":286,"column":4},"end":{"line":292,"column":5}},{"start":{},"end":{}}],"line":286},"36":{"loc":{"start":{"line":288,"column":6},"end":{"line":290,"column":7}},"type":"if","locations":[{"start":{"line":288,"column":6},"end":{"line":290,"column":7}},{"start":{},"end":{}}],"line":288},"37":{"loc":{"start":{"line":293,"column":4},"end":{"line":295,"column":5}},"type":"if","locations":[{"start":{"line":293,"column":4},"end":{"line":295,"column":5}},{"start":{},"end":{}}],"line":293},"38":{"loc":{"start":{"line":293,"column":8},"end":{"line":293,"column":80}},"type":"binary-expr","locations":[{"start":{"line":293,"column":8},"end":{"line":293,"column":39}},{"start":{"line":293,"column":43},"end":{"line":293,"column":80}}],"line":293},"39":{"loc":{"start":{"line":296,"column":4},"end":{"line":298,"column":5}},"type":"if","locations":[{"start":{"line":296,"column":4},"end":{"line":298,"column":5}},{"start":{},"end":{}}],"line":296},"40":{"loc":{"start":{"line":303,"column":4},"end":{"line":303,"column":27}},"type":"if","locations":[{"start":{"line":303,"column":4},"end":{"line":303,"column":27}},{"start":{},"end":{}}],"line":303},"41":{"loc":{"start":{"line":305,"column":11},"end":{"line":305,"column":34}},"type":"binary-expr","locations":[{"start":{"line":305,"column":11},"end":{"line":305,"column":28}},{"start":{"line":305,"column":32},"end":{"line":305,"column":34}}],"line":305},"42":{"loc":{"start":{"line":333,"column":11},"end":{"line":333,"column":263}},"type":"binary-expr","locations":[{"start":{"line":333,"column":11},"end":{"line":333,"column":51}},{"start":{"line":333,"column":55},"end":{"line":333,"column":111}},{"start":{"line":333,"column":115},"end":{"line":333,"column":159}},{"start":{"line":333,"column":163},"end":{"line":333,"column":212}},{"start":{"line":333,"column":216},"end":{"line":333,"column":263}}],"line":333},"43":{"loc":{"start":{"line":341,"column":4},"end":{"line":343,"column":5}},"type":"if","locations":[{"start":{"line":341,"column":4},"end":{"line":343,"column":5}},{"start":{},"end":{}}],"line":341},"44":{"loc":{"start":{"line":344,"column":4},"end":{"line":346,"column":5}},"type":"if","locations":[{"start":{"line":344,"column":4},"end":{"line":346,"column":5}},{"start":{},"end":{}}],"line":344},"45":{"loc":{"start":{"line":348,"column":4},"end":{"line":350,"column":5}},"type":"if","locations":[{"start":{"line":348,"column":4},"end":{"line":350,"column":5}},{"start":{},"end":{}}],"line":348},"46":{"loc":{"start":{"line":363,"column":4},"end":{"line":365,"column":5}},"type":"if","locations":[{"start":{"line":363,"column":4},"end":{"line":365,"column":5}},{"start":{},"end":{}}],"line":363},"47":{"loc":{"start":{"line":367,"column":4},"end":{"line":369,"column":5}},"type":"if","locations":[{"start":{"line":367,"column":4},"end":{"line":369,"column":5}},{"start":{},"end":{}}],"line":367},"48":{"loc":{"start":{"line":371,"column":11},"end":{"line":371,"column":34}},"type":"binary-expr","locations":[{"start":{"line":371,"column":11},"end":{"line":371,"column":28}},{"start":{"line":371,"column":32},"end":{"line":371,"column":34}}],"line":371},"49":{"loc":{"start":{"line":373,"column":21},"end":{"line":373,"column":36}},"type":"default-arg","locations":[{"start":{"line":373,"column":32},"end":{"line":373,"column":36}}],"line":373},"50":{"loc":{"start":{"line":377,"column":4},"end":{"line":379,"column":5}},"type":"if","locations":[{"start":{"line":377,"column":4},"end":{"line":379,"column":5}},{"start":{},"end":{}}],"line":377},"51":{"loc":{"start":{"line":377,"column":8},"end":{"line":377,"column":25}},"type":"binary-expr","locations":[{"start":{"line":377,"column":8},"end":{"line":377,"column":13}},{"start":{"line":377,"column":17},"end":{"line":377,"column":25}}],"line":377},"52":{"loc":{"start":{"line":382,"column":4},"end":{"line":384,"column":5}},"type":"if","locations":[{"start":{"line":382,"column":4},"end":{"line":384,"column":5}},{"start":{},"end":{}}],"line":382},"53":{"loc":{"start":{"line":382,"column":8},"end":{"line":382,"column":37}},"type":"binary-expr","locations":[{"start":{"line":382,"column":8},"end":{"line":382,"column":19}},{"start":{"line":382,"column":23},"end":{"line":382,"column":37}}],"line":382},"54":{"loc":{"start":{"line":389,"column":6},"end":{"line":391,"column":7}},"type":"if","locations":[{"start":{"line":389,"column":6},"end":{"line":391,"column":7}},{"start":{},"end":{}}],"line":389},"55":{"loc":{"start":{"line":392,"column":6},"end":{"line":394,"column":7}},"type":"if","locations":[{"start":{"line":392,"column":6},"end":{"line":394,"column":7}},{"start":{},"end":{}}],"line":392},"56":{"loc":{"start":{"line":400,"column":19},"end":{"line":400,"column":49}},"type":"binary-expr","locations":[{"start":{"line":400,"column":19},"end":{"line":400,"column":44}},{"start":{"line":400,"column":48},"end":{"line":400,"column":49}}],"line":400},"57":{"loc":{"start":{"line":407,"column":4},"end":{"line":407,"column":69}},"type":"binary-expr","locations":[{"start":{"line":407,"column":4},"end":{"line":407,"column":12}},{"start":{"line":407,"column":16},"end":{"line":407,"column":69}}],"line":407},"58":{"loc":{"start":{"line":418,"column":4},"end":{"line":420,"column":5}},"type":"if","locations":[{"start":{"line":418,"column":4},"end":{"line":420,"column":5}},{"start":{},"end":{}}],"line":418},"59":{"loc":{"start":{"line":418,"column":8},"end":{"line":418,"column":109}},"type":"binary-expr","locations":[{"start":{"line":418,"column":9},"end":{"line":418,"column":36}},{"start":{"line":418,"column":40},"end":{"line":418,"column":72}},{"start":{"line":418,"column":77},"end":{"line":418,"column":109}}],"line":418},"60":{"loc":{"start":{"line":460,"column":6},"end":{"line":462,"column":7}},"type":"if","locations":[{"start":{"line":460,"column":6},"end":{"line":462,"column":7}},{"start":{},"end":{}}],"line":460},"61":{"loc":{"start":{"line":465,"column":8},"end":{"line":469,"column":9}},"type":"if","locations":[{"start":{"line":465,"column":8},"end":{"line":469,"column":9}},{"start":{"line":467,"column":15},"end":{"line":469,"column":9}}],"line":465},"62":{"loc":{"start":{"line":475,"column":19},"end":{"line":475,"column":43}},"type":"binary-expr","locations":[{"start":{"line":475,"column":19},"end":{"line":475,"column":38}},{"start":{"line":475,"column":42},"end":{"line":475,"column":43}}],"line":475}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0},"b":{"0":[0,0],"1":[0,0,0,0],"2":[0],"3":[0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0,0,0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0,0],"60":[0,0],"61":[0,0],"62":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/base-reference-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, IRange, Nullable } from '@univerjs/core';\nimport type { IRuntimeUnitDataType, IUnitData, IUnitSheetNameMap, IUnitStylesData } from '../../basics/common';\n\nimport type { BaseValueObject, IArrayValueObject } from '../value-object/base-value-object';\nimport { CellValueType, moveRangeByOffset } from '@univerjs/core';\nimport { isTextFormat } from '@univerjs/engine-numfmt';\nimport { FormulaAstLRU } from '../../basics/cache-lru';\nimport { ERROR_TYPE_SET, ErrorType } from '../../basics/error-type';\nimport { isNullCellForFormula } from '../../basics/is-null-cell';\nimport { ObjectClassType } from '../../basics/object-class-type';\nimport { getCellValue } from '../utils/cell';\nimport { getRuntimeFeatureCell } from '../utils/get-runtime-feature-cell';\nimport { ArrayValueObject, ValueObjectFactory } from '../value-object/array-value-object';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport {\n    createBooleanValueObjectByRawValue,\n    createNumberValueObjectByRawValue,\n    NullValueObject,\n    NumberValueObject,\n    StringValueObject,\n} from '../value-object/primitive-object';\n\nexport type NodeValueType = BaseValueObject | BaseReferenceObject | AsyncObject | AsyncArrayObject;\n\nexport type FunctionVariantType = BaseValueObject | BaseReferenceObject;\n\nconst FORMULA_CACHE_LRU_COUNT = 10000;\n\nexport const FORMULA_REF_TO_ARRAY_CACHE = new FormulaAstLRU<ArrayValueObject>(FORMULA_CACHE_LRU_COUNT);\nexport class BaseReferenceObject extends ObjectClassType {\n    private _forcedSheetId: Nullable<string> = '';\n\n    private _forcedSheetName: string = '';\n\n    private _defaultSheetId: string = '';\n\n    private _rangeData: IRange = {\n        startColumn: -1,\n        startRow: -1,\n        endRow: -1,\n        endColumn: -1,\n    };\n\n    private _unitData: IUnitData = {};\n\n    private _unitStylesData: IUnitStylesData = {};\n\n    private _defaultUnitId: string = '';\n\n    private _forcedUnitId: string = '';\n\n    private _runtimeData: IRuntimeUnitDataType = {};\n\n    private _arrayFormulaCellData: IRuntimeUnitDataType = {};\n\n    private _runtimeArrayFormulaCellData: IRuntimeUnitDataType = {};\n\n    private _runtimeFeatureCellData: { [featureId: string]: IRuntimeUnitDataType } = {};\n\n    private _refOffsetX = 0;\n\n    private _refOffsetY = 0;\n\n    constructor(private _token: string) {\n        super();\n    }\n\n    override dispose(): void {\n        this._unitData = {};\n\n        this._unitStylesData = {};\n\n        this._runtimeData = {};\n    }\n\n    getToken() {\n        return this._token;\n    }\n\n    setToken(token: string) {\n        this._token = token;\n    }\n\n    isExceedRange() {\n        const { startRow, endRow, startColumn, endColumn } = this.getRangePosition();\n\n        if (startRow < 0 || startColumn < 0 || endRow >= this.getActiveSheetRowCount() || endColumn >= this.getActiveSheetColumnCount()) {\n            return true;\n        }\n        return false;\n    }\n\n    setRefOffset(x: number = 0, y: number = 0) {\n        this._refOffsetX = x;\n        this._refOffsetY = y;\n    }\n\n    getRefOffset() {\n        return {\n            x: this._refOffsetX,\n            y: this._refOffsetY,\n        };\n    }\n\n    getRangePosition() {\n        let { startRow, startColumn, endRow, endColumn } = moveRangeByOffset(this._rangeData, this._refOffsetX, this._refOffsetY);\n\n        if (Number.isNaN(startRow)) {\n            startRow = 0;\n        }\n\n        if (Number.isNaN(startColumn)) {\n            startColumn = 0;\n        }\n\n        if (Number.isNaN(endRow)) {\n            endRow = this.getActiveSheetRowCount() - 1;\n        }\n\n        if (Number.isNaN(endColumn)) {\n            endColumn = this.getActiveSheetColumnCount() - 1;\n        }\n\n        return {\n            ...this._rangeData,\n            startRow,\n            endRow,\n            startColumn,\n            endColumn,\n        };\n    }\n\n    override isReferenceObject() {\n        return true;\n    }\n\n    iterator(\n        callback: (valueObject: Nullable<BaseValueObject>, rowIndex: number, columnIndex: number) => Nullable<boolean>\n    ) {\n        const { startRow, endRow, startColumn, endColumn } = this.getRangePosition();\n\n        if (this._checkIfWorksheetMiss()) {\n            return callback(ErrorValueObject.create(ErrorType.VALUE), startRow, startColumn);\n        }\n\n        const unitId = this._forcedUnitId || this._defaultUnitId;\n        const sheetId = this._forcedSheetId || this._defaultSheetId;\n\n        for (let r = startRow; r <= endRow; r++) {\n            for (let c = startColumn; c <= endColumn; c++) {\n                if (r < 0 || c < 0) {\n                    return callback(ErrorValueObject.create(ErrorType.REF), r, c);\n                }\n\n                const cell = this.getCellData(r, c)!;\n                let result: Nullable<boolean> = false;\n                if (isNullCellForFormula(cell)) {\n                    result = callback(null, r, c);\n                    continue;\n                }\n\n                let resultObjectValue = this.getCellValueObject(cell);\n\n                // Set numfmt pattern for first cell\n                // TODO@Dushusir it does not have to be a number, the string can also be set a number format\n                if (r === startRow && c === startColumn) {\n                    const pattern = this.getCellPattern(unitId, sheetId, r, c);\n                    if (pattern && resultObjectValue.isNumber()) {\n                        const value = Number(resultObjectValue.getValue());\n                        resultObjectValue = NumberValueObject.create(value, pattern);\n                    }\n                }\n\n                result = callback(resultObjectValue, r, c);\n\n                if (result === false) {\n                    return;\n                }\n            }\n        }\n    }\n\n    getFirstCell() {\n        const { startRow, startColumn } = this.getRangePosition();\n        const cell = this.getCellData(startRow, startColumn);\n\n        if (!cell) {\n            return NumberValueObject.create(0);\n        }\n\n        let cellValueObject = this.getCellValueObject(cell);\n\n        // Set numfmt pattern,\n        // TODO@Dushusir it does not have to be a number, the string can also be set a number format\n        const unitId = this._forcedUnitId || this._defaultUnitId;\n        const sheetId = this._forcedSheetId || this._defaultSheetId;\n        const pattern = this.getCellPattern(unitId, sheetId, startRow, startColumn);\n        if (pattern && cellValueObject.isNumber()) {\n            const value = Number(cellValueObject.getValue());\n            cellValueObject = NumberValueObject.create(value, pattern);\n        }\n\n        return cellValueObject;\n    }\n\n    getRangeData() {\n        return this._rangeData;\n    }\n\n    setRangeData(range: IRange) {\n        this._rangeData = range;\n    }\n\n    getUnitId() {\n        if (this._forcedUnitId && this._forcedUnitId.length > 0) {\n            return this._forcedUnitId;\n        }\n        return this._defaultUnitId;\n    }\n\n    getSheetId() {\n        if (this._forcedSheetId && this._forcedSheetId.length > 0) {\n            return this._forcedSheetId;\n        }\n        return this._defaultSheetId;\n    }\n\n    setForcedUnitIdDirect(unitId: string) {\n        if (unitId.length > 0) {\n            this._forcedUnitId = unitId;\n        }\n    }\n\n    getForcedUnitId() {\n        return this._forcedUnitId;\n    }\n\n    setForcedSheetId(sheetNameMap: IUnitSheetNameMap) {\n        this._forcedSheetId = sheetNameMap[this.getUnitId()]?.[this._forcedSheetName];\n    }\n\n    setForcedSheetIdDirect(sheetId: string) {\n        this._forcedSheetId = sheetId;\n    }\n\n    getForcedSheetId() {\n        return this._forcedSheetId;\n    }\n\n    setForcedSheetName(sheetName: string) {\n        if (sheetName.length > 0) {\n            this._forcedSheetName = sheetName;\n        }\n    }\n\n    getForcedSheetName() {\n        return this._forcedSheetName;\n    }\n\n    setDefaultSheetId(sheetId: string) {\n        this._defaultSheetId = sheetId;\n    }\n\n    getDefaultSheetId() {\n        return this._defaultSheetId;\n    }\n\n    setDefaultUnitId(unitId: string) {\n        this._defaultUnitId = unitId;\n    }\n\n    getDefaultUnitId() {\n        return this._defaultUnitId;\n    }\n\n    getUnitData() {\n        return this._unitData;\n    }\n\n    setUnitData(unitData: IUnitData) {\n        this._unitData = unitData;\n    }\n\n    getUnitStylesData() {\n        return this._unitStylesData;\n    }\n\n    setUnitStylesData(unitStylesData: IUnitStylesData) {\n        this._unitStylesData = unitStylesData;\n    }\n\n    getRuntimeData() {\n        return this._runtimeData;\n    }\n\n    setRuntimeData(runtimeData: IRuntimeUnitDataType) {\n        this._runtimeData = runtimeData;\n    }\n\n    getArrayFormulaCellData() {\n        return this._arrayFormulaCellData;\n    }\n\n    setArrayFormulaCellData(unitData: IRuntimeUnitDataType) {\n        this._arrayFormulaCellData = unitData;\n    }\n\n    getRuntimeArrayFormulaCellData() {\n        return this._runtimeArrayFormulaCellData;\n    }\n\n    setRuntimeArrayFormulaCellData(unitData: IRuntimeUnitDataType) {\n        this._runtimeArrayFormulaCellData = unitData;\n    }\n\n    getRuntimeFeatureCellData() {\n        return this._runtimeFeatureCellData;\n    }\n\n    setRuntimeFeatureCellData(unitData: { [featureId: string]: IRuntimeUnitDataType }) {\n        this._runtimeFeatureCellData = unitData;\n    }\n\n    getActiveSheetRowCount() {\n        return this.getCurrentActiveSheetData()?.rowCount || 0;\n    }\n\n    getActiveSheetColumnCount() {\n        return this.getCurrentActiveSheetData()?.columnCount || 0;\n    }\n\n    getRowCount() {\n        return this._rangeData.endRow - this._rangeData.startRow + 1;\n    }\n\n    getColumnCount() {\n        return this._rangeData.endColumn - this._rangeData.startColumn + 1;\n    }\n\n    getRowData() {\n        return this.getCurrentActiveSheetData()?.rowData || {};\n    }\n\n    getColumnData() {\n        return this.getCurrentActiveSheetData()?.columnData || {};\n    }\n\n    isCell() {\n        return false;\n    }\n\n    isColumn() {\n        return false;\n    }\n\n    isRow() {\n        return false;\n    }\n\n    isRange() {\n        return false;\n    }\n\n    isTable() {\n        return false;\n    }\n\n    unionBy(referenceObject: BaseReferenceObject): NodeValueType {\n        /** abstract */\n        return ErrorValueObject.create(ErrorType.REF);\n    }\n\n    unionRange(rangeData1: IRange, rangeData2: IRange): IRange {\n        /** abstract */\n        return {\n            startRow: -1,\n            startColumn: -1,\n            endRow: -1,\n            endColumn: -1,\n        };\n    }\n\n    getCellValueObject(cell: ICellData) {\n        const value = getCellValue(cell);\n        if (ERROR_TYPE_SET.has(value as ErrorType)) {\n            return ErrorValueObject.create(value as ErrorType);\n        }\n\n        if (cell.t === CellValueType.NUMBER) {\n            const pattern = this._getPatternByCell(cell);\n\n            if (isTextFormat(pattern)) {\n                return StringValueObject.create(value.toString());\n            }\n\n            return createNumberValueObjectByRawValue(value, pattern);\n        }\n        if (cell.t === CellValueType.STRING || cell.t === CellValueType.FORCE_STRING) {\n            // A1 is `\"test\"`, =A1 also needs to get `\"test\"`\n            return StringValueObject.create(value.toString());\n        }\n        if (cell.t === CellValueType.BOOLEAN) {\n            return createBooleanValueObjectByRawValue(value);\n        }\n\n        return ValueObjectFactory.create(value);\n    }\n\n    private _getPatternByCell(cell: ICellData) {\n        const styles = this._unitStylesData[this.getUnitId()];\n\n        if (!styles) return '';\n\n        const style = styles.getStyleByCell(cell);\n        return style?.n?.pattern || '';\n    }\n\n    getCellByRow(row: number) {\n        return this.getCellByPosition(row);\n    }\n\n    getCellByColumn(column: number) {\n        return this.getCellByPosition(undefined, column);\n    }\n\n    getCurrentActiveSheetData() {\n        return this._unitData[this.getUnitId()]?.[this.getSheetId()];\n    }\n\n    getCurrentStylesData() {\n        return this._unitStylesData[this.getUnitId()];\n    }\n\n    getCurrentRuntimeSheetData() {\n        return this._runtimeData?.[this.getUnitId()]?.[this.getSheetId()];\n    }\n\n    getCurrentActiveArrayFormulaCellData() {\n        return this._arrayFormulaCellData?.[this.getUnitId()]?.[this.getSheetId()];\n    }\n\n    getCurrentRuntimeActiveArrayFormulaCellData() {\n        return this._runtimeArrayFormulaCellData?.[this.getUnitId()]?.[this.getSheetId()];\n    }\n\n    getCellData(row: number, column: number) {\n        const activeSheetData = this.getCurrentActiveSheetData();\n\n        const activeRuntimeData = this.getCurrentRuntimeSheetData();\n\n        const activeArrayFormulaCellData = this.getCurrentActiveArrayFormulaCellData();\n\n        const activeRuntimeArrayFormulaCellData = this.getCurrentRuntimeActiveArrayFormulaCellData();\n\n        return (\n            activeRuntimeData?.getValue(row, column) ||\n            activeRuntimeArrayFormulaCellData?.getValue(row, column) ||\n            this.getRuntimeFeatureCellValue(row, column) ||\n            activeArrayFormulaCellData?.getValue(row, column) ||\n            activeSheetData?.cellData.getValue(row, column)\n        );\n    }\n\n    getRuntimeFeatureCellValue(row: number, column: number) {\n        return getRuntimeFeatureCell(row, column, this.getSheetId(), this.getUnitId(), this._runtimeFeatureCellData);\n    }\n\n    getCellByPosition(rowRaw?: number, columnRaw?: number) {\n        let row = rowRaw;\n        let column = columnRaw;\n        if (!row) {\n            row = this._rangeData.startRow;\n        }\n\n        if (!column) {\n            column = this._rangeData.startColumn;\n        }\n\n        const cell = this.getCellData(row, column);\n\n        if (!cell) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        return this.getCellValueObject(cell);\n    }\n\n    /**\n     * Get the pattern of the cell\n     * @param unitId\n     * @param sheetId\n     * @param row\n     * @param column\n     * @returns\n     */\n    getCellPattern(unitId: string, sheetId: string, row: number, column: number) {\n        const currentStyles = this._unitStylesData[unitId];\n\n        if (!currentStyles) {\n            return '';\n        }\n\n        const currentCell = this._unitData[unitId]?.[sheetId]?.cellData?.getValue(row, column);\n\n        if (!currentCell) {\n            return '';\n        }\n\n        const style = currentStyles.getStyleByCell(currentCell);\n\n        return style?.n?.pattern || '';\n    }\n\n    toArrayValueObject(useCache: boolean = true): ArrayValueObject {\n        const { startRow, endRow, startColumn, endColumn } = this.getRangePosition();\n\n        const key = `${this.getUnitId()}_${this.getSheetId()}_${startRow}_${endRow}_${startColumn}_${endColumn}`;\n\n        const array = FORMULA_REF_TO_ARRAY_CACHE.get(key);\n\n        if (array && useCache) {\n            return array;\n        }\n\n        const rowSize = endRow - startRow + 1;\n        const columnSize = endColumn - startColumn + 1;\n\n        if (rowSize < 0 || columnSize < 0) {\n            return this._getBlankArrayValueObject();\n        }\n\n        const arrayValueList: BaseValueObject[][] = new Array(rowSize);\n        this.iterator((valueObject: Nullable<BaseValueObject>, rowIndex: number, columnIndex: number) => {\n            const row = rowIndex - startRow;\n            const column = columnIndex - startColumn;\n            if (!arrayValueList[row]) {\n                arrayValueList[row] = new Array(columnSize);\n            }\n\n            if (valueObject == null) {\n                valueObject = NullValueObject.create();\n            }\n\n            arrayValueList[row][column] = valueObject;\n        });\n\n        const arrayValueObjectData: IArrayValueObject = {\n            calculateValueList: arrayValueList,\n            rowCount: arrayValueList.length,\n            columnCount: arrayValueList[0]?.length || 0,\n            unitId: this.getUnitId(),\n            sheetId: this.getSheetId(),\n            row: startRow,\n            column: startColumn,\n        };\n\n        const arrayValueObject = ArrayValueObject.create(arrayValueObjectData);\n\n        useCache && FORMULA_REF_TO_ARRAY_CACHE.set(key, arrayValueObject);\n\n        return arrayValueObject;\n    }\n\n    toUnitRange() {\n        return {\n            range: this.getRangePosition(),\n            sheetId: this.getSheetId(),\n            unitId: this.getUnitId(),\n        };\n    }\n\n    private _checkIfWorksheetMiss() {\n        if ((this._forcedSheetId == null || this._forcedSheetId.length === 0) && this._forcedSheetName.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    private _getBlankArrayValueObject() {\n        const arrayValueObjectData: IArrayValueObject = {\n            calculateValueList: [],\n            rowCount: 0,\n            columnCount: 0,\n            unitId: this.getUnitId(),\n            sheetId: this.getSheetId(),\n            row: 0,\n            column: 0,\n        };\n\n        return ArrayValueObject.create(arrayValueObjectData);\n    }\n}\n\nexport class AsyncObject extends ObjectClassType {\n    constructor(private _promise: Promise<BaseValueObject>) {\n        super();\n    }\n\n    override isAsyncObject() {\n        return true;\n    }\n\n    async getValue() {\n        return this._promise;\n    }\n}\n\nexport class AsyncArrayObject extends ObjectClassType {\n    constructor(private _promiseList: Array<Array<BaseValueObject | AsyncObject>>) {\n        super();\n    }\n\n    override isAsyncArrayObject() {\n        return true;\n    }\n\n    async getValue() {\n        const variants: BaseValueObject[][] = [];\n\n        for (let r = 0; r < this._promiseList.length; r++) {\n            const promiseCells = this._promiseList[r];\n            if (variants[r] == null) {\n                variants[r] = [];\n            }\n            for (let c = 0; c < promiseCells.length; c++) {\n                const promiseCell = promiseCells[c];\n                if ((promiseCell as AsyncObject).isAsyncObject()) {\n                    variants[r][c] = await (promiseCell as AsyncObject).getValue();\n                } else {\n                    variants[r][c] = promiseCell as BaseValueObject;\n                }\n            }\n        }\n\n        const arrayValueObjectData: IArrayValueObject = {\n            calculateValueList: variants,\n            rowCount: variants.length,\n            columnCount: variants[0]?.length || 0,\n            unitId: '',\n            sheetId: '',\n            row: 0,\n            column: 0,\n        };\n\n        return ArrayValueObject.create(arrayValueObjectData);\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"816066218076d6e3081f9054f35f0fe2e8c79643"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/range-reference-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/range-reference-object.ts","statementMap":{"0":{"start":{"line":4,"column":4},"end":{"line":4,"column":14}},"1":{"start":{"line":5,"column":4},"end":{"line":5,"column":29}},"2":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"3":{"start":{"line":7,"column":6},"end":{"line":7,"column":49}},"4":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"5":{"start":{"line":10,"column":6},"end":{"line":10,"column":47}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":16}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":2},"end":{"line":3,"column":3}},"loc":{"start":{"line":3,"column":50},"end":{"line":12,"column":3}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":2},"end":{"line":13,"column":3}},"loc":{"start":{"line":13,"column":12},"end":{"line":15,"column":3}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},{"start":{},"end":{}}],"line":6},"1":{"loc":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},{"start":{},"end":{}}],"line":9}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"f":{"0":0,"1":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/range-reference-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, Nullable } from '@univerjs/core';\n\nimport { BaseReferenceObject } from './base-reference-object';\n\nexport class RangeReferenceObject extends BaseReferenceObject {\n    constructor(range: IRange, forcedSheetId?: Nullable<string>, forcedUnitId?: string) {\n        super('');\n        this.setRangeData(range);\n        if (forcedSheetId) {\n            this.setForcedSheetIdDirect(forcedSheetId);\n        }\n\n        if (forcedUnitId) {\n            this.setForcedUnitIdDirect(forcedUnitId);\n        }\n    }\n\n    override isRange() {\n        return true;\n    }\n}\n"],"mappings":"AAkBA,SAAS,2BAA2B;AAE7B,aAAM,6BAA6B,oBAAoB;AAAA,EAC1D,YAAY,OAAe,eAAkC,cAAuB;AAChF,UAAM,EAAE;AACR,SAAK,aAAa,KAAK;AACvB,QAAI,eAAe;AACf,WAAK,uBAAuB,aAAa;AAAA,IAC7C;AAEA,QAAI,cAAc;AACd,WAAK,sBAAsB,YAAY;AAAA,IAC3C;AAAA,EACJ;AAAA,EAES,UAAU;AACf,WAAO;AAAA,EACX;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"73161b36ad001f2fd18531d7ebe29a721d091c92"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/cell-reference-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/cell-reference-object.ts","statementMap":{"0":{"start":{"line":8,"column":4},"end":{"line":8,"column":17}},"1":{"start":{"line":9,"column":17},"end":{"line":9,"column":58}},"2":{"start":{"line":10,"column":4},"end":{"line":10,"column":44}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":34}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":16}},"6":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"7":{"start":{"line":19,"column":6},"end":{"line":19,"column":52}},"8":{"start":{"line":21,"column":32},"end":{"line":21,"column":47}},"9":{"start":{"line":22,"column":25},"end":{"line":22,"column":97}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":43}},"11":{"start":{"line":26,"column":22},"end":{"line":26,"column":41}},"12":{"start":{"line":27,"column":25},"end":{"line":27,"column":47}},"13":{"start":{"line":28,"column":22},"end":{"line":28,"column":41}},"14":{"start":{"line":29,"column":25},"end":{"line":29,"column":47}},"15":{"start":{"line":30,"column":18},"end":{"line":35,"column":5}},"16":{"start":{"line":36,"column":4},"end":{"line":42,"column":5}},"17":{"start":{"line":37,"column":6},"end":{"line":37,"column":33}},"18":{"start":{"line":38,"column":6},"end":{"line":38,"column":31}},"19":{"start":{"line":40,"column":6},"end":{"line":40,"column":33}},"20":{"start":{"line":41,"column":6},"end":{"line":41,"column":31}},"21":{"start":{"line":43,"column":4},"end":{"line":49,"column":5}},"22":{"start":{"line":44,"column":6},"end":{"line":44,"column":39}},"23":{"start":{"line":45,"column":6},"end":{"line":45,"column":37}},"24":{"start":{"line":47,"column":6},"end":{"line":47,"column":39}},"25":{"start":{"line":48,"column":6},"end":{"line":48,"column":37}},"26":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"27":{"start":{"line":51,"column":6},"end":{"line":51,"column":67}},"28":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"29":{"start":{"line":54,"column":6},"end":{"line":54,"column":65}},"30":{"start":{"line":56,"column":4},"end":{"line":56,"column":17}},"31":{"start":{"line":59,"column":33},"end":{"line":63,"column":5}},"32":{"start":{"line":64,"column":4},"end":{"line":64,"column":57}},"33":{"start":{"line":65,"column":4},"end":{"line":65,"column":69}},"34":{"start":{"line":66,"column":4},"end":{"line":66,"column":67}},"35":{"start":{"line":67,"column":4},"end":{"line":67,"column":63}},"36":{"start":{"line":68,"column":4},"end":{"line":68,"column":69}},"37":{"start":{"line":69,"column":4},"end":{"line":69,"column":81}},"38":{"start":{"line":70,"column":4},"end":{"line":70,"column":95}},"39":{"start":{"line":71,"column":4},"end":{"line":71,"column":85}},"40":{"start":{"line":72,"column":21},"end":{"line":72,"column":40}},"41":{"start":{"line":73,"column":4},"end":{"line":73,"column":44}},"42":{"start":{"line":74,"column":25},"end":{"line":74,"column":48}},"43":{"start":{"line":75,"column":4},"end":{"line":75,"column":71}},"44":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"45":{"start":{"line":77,"column":6},"end":{"line":77,"column":64}},"46":{"start":{"line":79,"column":25},"end":{"line":79,"column":47}},"47":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"48":{"start":{"line":81,"column":6},"end":{"line":81,"column":63}},"49":{"start":{"line":83,"column":4},"end":{"line":83,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":2},"end":{"line":7,"column":3}},"loc":{"start":{"line":7,"column":21},"end":{"line":13,"column":3}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":2},"end":{"line":14,"column":3}},"loc":{"start":{"line":14,"column":11},"end":{"line":16,"column":3}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":2},"end":{"line":17,"column":3}},"loc":{"start":{"line":17,"column":27},"end":{"line":24,"column":3}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":2},"end":{"line":25,"column":3}},"loc":{"start":{"line":25,"column":37},"end":{"line":57,"column":3}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":58,"column":2},"end":{"line":58,"column":3}},"loc":{"start":{"line":58,"column":29},"end":{"line":84,"column":3}},"line":58}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},{"start":{},"end":{}}],"line":18},"1":{"loc":{"start":{"line":36,"column":4},"end":{"line":42,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":42,"column":5}},{"start":{"line":39,"column":11},"end":{"line":42,"column":5}}],"line":36},"2":{"loc":{"start":{"line":43,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":49,"column":5}},{"start":{"line":46,"column":11},"end":{"line":49,"column":5}}],"line":43},"3":{"loc":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},{"start":{},"end":{}}],"line":50},"4":{"loc":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},{"start":{},"end":{}}],"line":53},"5":{"loc":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},{"start":{},"end":{}}],"line":76},"6":{"loc":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},{"start":{},"end":{}}],"line":80}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/cell-reference-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange } from '@univerjs/core';\n\nimport { ErrorType } from '../../basics/error-type';\n\nimport { deserializeRangeWithSheetWithCache } from '../utils/reference-cache';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { BaseReferenceObject } from './base-reference-object';\nimport { RangeReferenceObject } from './range-reference-object';\n\nexport class CellReferenceObject extends BaseReferenceObject {\n    constructor(token: string) {\n        super(token);\n        const grid = deserializeRangeWithSheetWithCache(token);\n        this.setForcedUnitIdDirect(grid.unitId);\n        this.setForcedSheetName(grid.sheetName);\n        this.setRangeData(grid.range);\n    }\n\n    override isCell() {\n        return true;\n    }\n\n    override unionBy(referenceObject: BaseReferenceObject) {\n        if (!referenceObject.isCell()) {\n            return ErrorValueObject.create(ErrorType.REF);\n        }\n\n        const cellReferenceObject = referenceObject as CellReferenceObject;\n        // if (cellReferenceObject.getForcedSheetName() !== undefined) {\n        //     return ErrorValueObject.create(ErrorType.REF);\n        // }\n\n        const newRangeData = this.unionRange(this.getRangeData(), cellReferenceObject.getRangeData());\n\n        return this._createRange(newRangeData);\n    }\n\n    override unionRange(rangeData1: IRange, rangeData2: IRange) {\n        const startRow1 = rangeData1.startRow;\n        const startColumn1 = rangeData1.startColumn;\n\n        const startRow2 = rangeData2.startRow;\n        const startColumn2 = rangeData2.startColumn;\n        const range: IRange = {\n            startRow: -1,\n            startColumn: -1,\n            endRow: -1,\n            endColumn: -1,\n        };\n        if (startRow1 > startRow2) {\n            range.startRow = startRow2;\n            range.endRow = startRow1;\n        } else {\n            range.startRow = startRow1;\n            range.endRow = startRow2;\n        }\n\n        if (startColumn1 > startColumn2) {\n            range.startColumn = startColumn2;\n            range.endColumn = startColumn1;\n        } else {\n            range.startColumn = startColumn1;\n            range.endColumn = startColumn2;\n        }\n\n        if (rangeData1.startAbsoluteRefType) {\n            range.startAbsoluteRefType = rangeData1.startAbsoluteRefType;\n        }\n\n        if (rangeData2.startAbsoluteRefType) {\n            range.endAbsoluteRefType = rangeData2.startAbsoluteRefType;\n        }\n\n        return range;\n    }\n\n    private _createRange(newRangeData: IRange) {\n        const rangeReferenceObject = new RangeReferenceObject(\n            newRangeData,\n            this.getForcedSheetId(),\n            this.getForcedUnitId()\n        );\n\n        rangeReferenceObject.setUnitData(this.getUnitData());\n\n        rangeReferenceObject.setDefaultSheetId(this.getDefaultSheetId());\n\n        rangeReferenceObject.setDefaultUnitId(this.getDefaultUnitId());\n\n        rangeReferenceObject.setRuntimeData(this.getRuntimeData());\n\n        rangeReferenceObject.setUnitStylesData(this.getUnitStylesData());\n\n        rangeReferenceObject.setArrayFormulaCellData(this.getArrayFormulaCellData());\n\n        rangeReferenceObject.setRuntimeArrayFormulaCellData(this.getRuntimeArrayFormulaCellData());\n\n        rangeReferenceObject.setRuntimeFeatureCellData(this.getRuntimeFeatureCellData());\n\n        const { x, y } = this.getRefOffset();\n\n        rangeReferenceObject.setRefOffset(x, y);\n\n        const forceSheetId = this.getForcedSheetId();\n\n        rangeReferenceObject.setForcedSheetName(this.getForcedSheetName());\n\n        if (forceSheetId != null) {\n            rangeReferenceObject.setForcedSheetIdDirect(forceSheetId);\n        }\n\n        // const forcedSheetID = this.getForcedSheetId();\n        // if (forcedSheetID) {\n        //     rangeReferenceObject.setForcedSheetIdDirect(forcedSheetID);\n        // }\n\n        const forcedUnitId = this.getForcedUnitId();\n        if (forcedUnitId) {\n            rangeReferenceObject.setForcedUnitIdDirect(forcedUnitId);\n        }\n\n        return rangeReferenceObject;\n    }\n}\n"],"mappings":"AAkBA,SAAS,iBAAiB;AAE1B,SAAS,0CAA0C;AACnD,SAAS,wBAAwB;AACjC,SAAS,2BAA2B;AACpC,SAAS,4BAA4B;AAE9B,aAAM,4BAA4B,oBAAoB;AAAA,EACzD,YAAY,OAAe;AACvB,UAAM,KAAK;AACX,UAAM,OAAO,mCAAmC,KAAK;AACrD,SAAK,sBAAsB,KAAK,MAAM;AACtC,SAAK,mBAAmB,KAAK,SAAS;AACtC,SAAK,aAAa,KAAK,KAAK;AAAA,EAChC;AAAA,EAES,SAAS;AACd,WAAO;AAAA,EACX;AAAA,EAES,QAAQ,iBAAsC;AACnD,QAAI,CAAC,gBAAgB,OAAO,GAAG;AAC3B,aAAO,iBAAiB,OAAO,UAAU,GAAG;AAAA,IAChD;AAEA,UAAM,sBAAsB;AAK5B,UAAM,eAAe,KAAK,WAAW,KAAK,aAAa,GAAG,oBAAoB,aAAa,CAAC;AAE5F,WAAO,KAAK,aAAa,YAAY;AAAA,EACzC;AAAA,EAES,WAAW,YAAoB,YAAoB;AACxD,UAAM,YAAY,WAAW;AAC7B,UAAM,eAAe,WAAW;AAEhC,UAAM,YAAY,WAAW;AAC7B,UAAM,eAAe,WAAW;AAChC,UAAM,QAAgB;AAAA,MAClB,UAAU;AAAA,MACV,aAAa;AAAA,MACb,QAAQ;AAAA,MACR,WAAW;AAAA,IACf;AACA,QAAI,YAAY,WAAW;AACvB,YAAM,WAAW;AACjB,YAAM,SAAS;AAAA,IACnB,OAAO;AACH,YAAM,WAAW;AACjB,YAAM,SAAS;AAAA,IACnB;AAEA,QAAI,eAAe,cAAc;AAC7B,YAAM,cAAc;AACpB,YAAM,YAAY;AAAA,IACtB,OAAO;AACH,YAAM,cAAc;AACpB,YAAM,YAAY;AAAA,IACtB;AAEA,QAAI,WAAW,sBAAsB;AACjC,YAAM,uBAAuB,WAAW;AAAA,IAC5C;AAEA,QAAI,WAAW,sBAAsB;AACjC,YAAM,qBAAqB,WAAW;AAAA,IAC1C;AAEA,WAAO;AAAA,EACX;AAAA,EAEQ,aAAa,cAAsB;AACvC,UAAM,uBAAuB,IAAI;AAAA,MAC7B;AAAA,MACA,KAAK,iBAAiB;AAAA,MACtB,KAAK,gBAAgB;AAAA,IACzB;AAEA,yBAAqB,YAAY,KAAK,YAAY,CAAC;AAEnD,yBAAqB,kBAAkB,KAAK,kBAAkB,CAAC;AAE/D,yBAAqB,iBAAiB,KAAK,iBAAiB,CAAC;AAE7D,yBAAqB,eAAe,KAAK,eAAe,CAAC;AAEzD,yBAAqB,kBAAkB,KAAK,kBAAkB,CAAC;AAE/D,yBAAqB,wBAAwB,KAAK,wBAAwB,CAAC;AAE3E,yBAAqB,+BAA+B,KAAK,+BAA+B,CAAC;AAEzF,yBAAqB,0BAA0B,KAAK,0BAA0B,CAAC;AAE/E,UAAM,EAAE,GAAG,EAAE,IAAI,KAAK,aAAa;AAEnC,yBAAqB,aAAa,GAAG,CAAC;AAEtC,UAAM,eAAe,KAAK,iBAAiB;AAE3C,yBAAqB,mBAAmB,KAAK,mBAAmB,CAAC;AAEjE,QAAI,gBAAgB,MAAM;AACtB,2BAAqB,uBAAuB,YAAY;AAAA,IAC5D;AAOA,UAAM,eAAe,KAAK,gBAAgB;AAC1C,QAAI,cAAc;AACd,2BAAqB,sBAAsB,YAAY;AAAA,IAC3D;AAEA,WAAO;AAAA,EACX;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f0348ede93ec0228b6c3e8d0036c34dbdab46324"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/column-reference-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/column-reference-object.ts","statementMap":{"0":{"start":{"line":9,"column":4},"end":{"line":9,"column":17}},"1":{"start":{"line":10,"column":17},"end":{"line":10,"column":58}},"2":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":44}},"4":{"start":{"line":13,"column":18},"end":{"line":20,"column":5}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":29}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":16}},"7":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"8":{"start":{"line":28,"column":6},"end":{"line":28,"column":52}},"9":{"start":{"line":30,"column":34},"end":{"line":30,"column":49}},"10":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"11":{"start":{"line":32,"column":6},"end":{"line":32,"column":52}},"12":{"start":{"line":34,"column":29},"end":{"line":34,"column":48}},"13":{"start":{"line":35,"column":27},"end":{"line":35,"column":63}},"14":{"start":{"line":36,"column":22},"end":{"line":36,"column":48}},"15":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"16":{"start":{"line":38,"column":6},"end":{"line":38,"column":18}},"17":{"start":{"line":40,"column":19},"end":{"line":40,"column":47}},"18":{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},"19":{"start":{"line":42,"column":6},"end":{"line":42,"column":45}},"20":{"start":{"line":44,"column":6},"end":{"line":44,"column":47}},"21":{"start":{"line":45,"column":6},"end":{"line":45,"column":42}},"22":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"23":{"start":{"line":48,"column":6},"end":{"line":48,"column":80}},"24":{"start":{"line":50,"column":4},"end":{"line":50,"column":51}},"25":{"start":{"line":51,"column":4},"end":{"line":51,"column":94}},"26":{"start":{"line":52,"column":4},"end":{"line":52,"column":16}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":2},"end":{"line":8,"column":3}},"loc":{"start":{"line":8,"column":21},"end":{"line":22,"column":3}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":2},"end":{"line":23,"column":3}},"loc":{"start":{"line":23,"column":13},"end":{"line":25,"column":3}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":2},"end":{"line":26,"column":3}},"loc":{"start":{"line":26,"column":27},"end":{"line":53,"column":3}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},{"start":{},"end":{}}],"line":27},"1":{"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},{"start":{},"end":{}}],"line":31},"2":{"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":114}},"type":"binary-expr","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":61}},{"start":{"line":31,"column":65},"end":{"line":31,"column":114}}],"line":31},"3":{"loc":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},{"start":{},"end":{}}],"line":37},"4":{"loc":{"start":{"line":37,"column":8},"end":{"line":37,"column":92}},"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":49}},{"start":{"line":37,"column":53},"end":{"line":37,"column":92}}],"line":37},"5":{"loc":{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},{"start":{"line":43,"column":11},"end":{"line":46,"column":5}}],"line":41},"6":{"loc":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},{"start":{},"end":{}}],"line":47}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/column-reference-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { type IRange, RANGE_TYPE } from '@univerjs/core';\n\nimport { ErrorType } from '../../basics/error-type';\nimport { matchToken } from '../../basics/token';\n\nimport { deserializeRangeWithSheetWithCache } from '../utils/reference-cache';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { BaseReferenceObject } from './base-reference-object';\n\nexport class ColumnReferenceObject extends BaseReferenceObject {\n    constructor(token: string) {\n        super(token);\n        const grid = deserializeRangeWithSheetWithCache(token);\n        this.setForcedUnitIdDirect(grid.unitId);\n        this.setForcedSheetName(grid.sheetName);\n        const range: IRange = {\n            ...grid.range,\n            startColumn: grid.range.startColumn,\n            startRow: Number.NaN,\n            endColumn: grid.range.endColumn,\n            endRow: Number.NaN,\n            rangeType: RANGE_TYPE.COLUMN,\n        };\n        this.setRangeData(range);\n    }\n\n    override isColumn() {\n        return true;\n    }\n\n    override unionBy(referenceObject: BaseReferenceObject) {\n        if (!referenceObject.isColumn()) {\n            return ErrorValueObject.create(ErrorType.REF);\n        }\n\n        const columnReferenceObject = referenceObject as ColumnReferenceObject;\n        if (\n            columnReferenceObject.getForcedSheetName() !== undefined &&\n            columnReferenceObject.getForcedSheetName() !== ''\n        ) {\n            return ErrorValueObject.create(ErrorType.REF);\n        }\n\n        const currentRangeData = this.getRangeData();\n\n        // if (currentRangeData.endColumn !== -1) {\n        //     return ErrorValueObject.create(ErrorType.REF);\n        // }\n\n        const newColumnRange = columnReferenceObject.getRangeData();\n\n        const newColumn = newColumnRange.startColumn;\n\n        // if the column is already in the range, return the same object\n        if (newColumn >= currentRangeData.startColumn && newColumn <= currentRangeData.endColumn) {\n            return this;\n        }\n\n        const column = currentRangeData.startColumn;\n\n        if (newColumn > column) {\n            currentRangeData.endColumn = newColumn;\n        } else {\n            currentRangeData.startColumn = newColumn;\n            currentRangeData.endColumn = column;\n        }\n\n        if (newColumnRange.startAbsoluteRefType) {\n            currentRangeData.endAbsoluteRefType = newColumnRange.startAbsoluteRefType;\n        }\n\n        currentRangeData.rangeType = RANGE_TYPE.COLUMN;\n\n        this.setToken(`${this.getToken()}${matchToken.COLON}${columnReferenceObject.getToken()}`);\n\n        return this;\n    }\n}\n"],"mappings":"AAgBA,SAAsB,kBAAkB;AAExC,SAAS,iBAAiB;AAC1B,SAAS,kBAAkB;AAE3B,SAAS,0CAA0C;AACnD,SAAS,wBAAwB;AACjC,SAAS,2BAA2B;AAE7B,aAAM,8BAA8B,oBAAoB;AAAA,EAC3D,YAAY,OAAe;AACvB,UAAM,KAAK;AACX,UAAM,OAAO,mCAAmC,KAAK;AACrD,SAAK,sBAAsB,KAAK,MAAM;AACtC,SAAK,mBAAmB,KAAK,SAAS;AACtC,UAAM,QAAgB;AAAA,MAClB,GAAG,KAAK;AAAA,MACR,aAAa,KAAK,MAAM;AAAA,MACxB,UAAU,OAAO;AAAA,MACjB,WAAW,KAAK,MAAM;AAAA,MACtB,QAAQ,OAAO;AAAA,MACf,WAAW,WAAW;AAAA,IAC1B;AACA,SAAK,aAAa,KAAK;AAAA,EAC3B;AAAA,EAES,WAAW;AAChB,WAAO;AAAA,EACX;AAAA,EAES,QAAQ,iBAAsC;AACnD,QAAI,CAAC,gBAAgB,SAAS,GAAG;AAC7B,aAAO,iBAAiB,OAAO,UAAU,GAAG;AAAA,IAChD;AAEA,UAAM,wBAAwB;AAC9B,QACI,sBAAsB,mBAAmB,MAAM,UAC/C,sBAAsB,mBAAmB,MAAM,IACjD;AACE,aAAO,iBAAiB,OAAO,UAAU,GAAG;AAAA,IAChD;AAEA,UAAM,mBAAmB,KAAK,aAAa;AAM3C,UAAM,iBAAiB,sBAAsB,aAAa;AAE1D,UAAM,YAAY,eAAe;AAGjC,QAAI,aAAa,iBAAiB,eAAe,aAAa,iBAAiB,WAAW;AACtF,aAAO;AAAA,IACX;AAEA,UAAM,SAAS,iBAAiB;AAEhC,QAAI,YAAY,QAAQ;AACpB,uBAAiB,YAAY;AAAA,IACjC,OAAO;AACH,uBAAiB,cAAc;AAC/B,uBAAiB,YAAY;AAAA,IACjC;AAEA,QAAI,eAAe,sBAAsB;AACrC,uBAAiB,qBAAqB,eAAe;AAAA,IACzD;AAEA,qBAAiB,YAAY,WAAW;AAExC,SAAK,SAAS,GAAG,KAAK,SAAS,CAAC,GAAG,WAAW,KAAK,GAAG,sBAAsB,SAAS,CAAC,EAAE;AAExF,WAAO;AAAA,EACX;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"efcc0736359fb1501c70e5d7679eddeba09c91c9"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/row-reference-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/row-reference-object.ts","statementMap":{"0":{"start":{"line":9,"column":4},"end":{"line":9,"column":17}},"1":{"start":{"line":10,"column":17},"end":{"line":10,"column":58}},"2":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":44}},"4":{"start":{"line":13,"column":18},"end":{"line":20,"column":5}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":29}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":16}},"7":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"8":{"start":{"line":28,"column":6},"end":{"line":28,"column":52}},"9":{"start":{"line":30,"column":31},"end":{"line":30,"column":46}},"10":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"11":{"start":{"line":32,"column":6},"end":{"line":32,"column":52}},"12":{"start":{"line":34,"column":29},"end":{"line":34,"column":48}},"13":{"start":{"line":35,"column":24},"end":{"line":35,"column":57}},"14":{"start":{"line":36,"column":19},"end":{"line":36,"column":39}},"15":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"16":{"start":{"line":38,"column":6},"end":{"line":38,"column":18}},"17":{"start":{"line":40,"column":16},"end":{"line":40,"column":41}},"18":{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},"19":{"start":{"line":42,"column":6},"end":{"line":42,"column":39}},"20":{"start":{"line":44,"column":6},"end":{"line":44,"column":41}},"21":{"start":{"line":45,"column":6},"end":{"line":45,"column":36}},"22":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"23":{"start":{"line":48,"column":6},"end":{"line":48,"column":77}},"24":{"start":{"line":50,"column":4},"end":{"line":50,"column":48}},"25":{"start":{"line":51,"column":4},"end":{"line":51,"column":91}},"26":{"start":{"line":52,"column":4},"end":{"line":52,"column":16}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":2},"end":{"line":8,"column":3}},"loc":{"start":{"line":8,"column":21},"end":{"line":22,"column":3}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":2},"end":{"line":23,"column":3}},"loc":{"start":{"line":23,"column":10},"end":{"line":25,"column":3}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":2},"end":{"line":26,"column":3}},"loc":{"start":{"line":26,"column":27},"end":{"line":53,"column":3}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},{"start":{},"end":{}}],"line":27},"1":{"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},{"start":{},"end":{}}],"line":31},"2":{"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":108}},"type":"binary-expr","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":58}},{"start":{"line":31,"column":62},"end":{"line":31,"column":108}}],"line":31},"3":{"loc":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},{"start":{},"end":{}}],"line":37},"4":{"loc":{"start":{"line":37,"column":8},"end":{"line":37,"column":80}},"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":43}},{"start":{"line":37,"column":47},"end":{"line":37,"column":80}}],"line":37},"5":{"loc":{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},{"start":{"line":43,"column":11},"end":{"line":46,"column":5}}],"line":41},"6":{"loc":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},{"start":{},"end":{}}],"line":47}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/reference-object/row-reference-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { type IRange, RANGE_TYPE } from '@univerjs/core';\n\nimport { ErrorType } from '../../basics/error-type';\nimport { matchToken } from '../../basics/token';\n\nimport { deserializeRangeWithSheetWithCache } from '../utils/reference-cache';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { BaseReferenceObject } from './base-reference-object';\n\nexport class RowReferenceObject extends BaseReferenceObject {\n    constructor(token: string) {\n        super(token);\n        const grid = deserializeRangeWithSheetWithCache(token);\n        this.setForcedUnitIdDirect(grid.unitId);\n        this.setForcedSheetName(grid.sheetName);\n        const range: IRange = {\n            ...grid.range,\n            startColumn: Number.NaN,\n            startRow: grid.range.startRow,\n            endColumn: Number.NaN,\n            endRow: grid.range.endRow,\n            rangeType: RANGE_TYPE.ROW,\n        };\n        this.setRangeData(range);\n    }\n\n    override isRow() {\n        return true;\n    }\n\n    override unionBy(referenceObject: BaseReferenceObject) {\n        if (!referenceObject.isRow()) {\n            return ErrorValueObject.create(ErrorType.REF);\n        }\n\n        const rowReferenceObject = referenceObject as RowReferenceObject;\n        if (rowReferenceObject.getForcedSheetName() !== undefined && rowReferenceObject.getForcedSheetName() !== '') {\n            return ErrorValueObject.create(ErrorType.REF);\n        }\n\n        const currentRangeData = this.getRangeData();\n\n        // if (currentRangeData.endRow !== -1) {\n        //     return ErrorValueObject.create(ErrorType.REF);\n        // }\n        const newRowRange = rowReferenceObject.getRangeData();\n\n        const newRow = newRowRange.startRow;\n\n        // if the row is already in the range, return the same object\n        if (newRow >= currentRangeData.startRow && newRow <= currentRangeData.endRow) {\n            return this;\n        }\n\n        const row = currentRangeData.startRow;\n\n        if (newRow > row) {\n            currentRangeData.endRow = newRow;\n        } else {\n            currentRangeData.startRow = newRow;\n            currentRangeData.endRow = row;\n        }\n\n        if (newRowRange.startAbsoluteRefType) {\n            currentRangeData.endAbsoluteRefType = newRowRange.startAbsoluteRefType;\n        }\n\n        currentRangeData.rangeType = RANGE_TYPE.ROW;\n\n        this.setToken(`${this.getToken()}${matchToken.COLON}${rowReferenceObject.getToken()}`);\n\n        return this;\n    }\n}\n"],"mappings":"AAgBA,SAAsB,kBAAkB;AAExC,SAAS,iBAAiB;AAC1B,SAAS,kBAAkB;AAE3B,SAAS,0CAA0C;AACnD,SAAS,wBAAwB;AACjC,SAAS,2BAA2B;AAE7B,aAAM,2BAA2B,oBAAoB;AAAA,EACxD,YAAY,OAAe;AACvB,UAAM,KAAK;AACX,UAAM,OAAO,mCAAmC,KAAK;AACrD,SAAK,sBAAsB,KAAK,MAAM;AACtC,SAAK,mBAAmB,KAAK,SAAS;AACtC,UAAM,QAAgB;AAAA,MAClB,GAAG,KAAK;AAAA,MACR,aAAa,OAAO;AAAA,MACpB,UAAU,KAAK,MAAM;AAAA,MACrB,WAAW,OAAO;AAAA,MAClB,QAAQ,KAAK,MAAM;AAAA,MACnB,WAAW,WAAW;AAAA,IAC1B;AACA,SAAK,aAAa,KAAK;AAAA,EAC3B;AAAA,EAES,QAAQ;AACb,WAAO;AAAA,EACX;AAAA,EAES,QAAQ,iBAAsC;AACnD,QAAI,CAAC,gBAAgB,MAAM,GAAG;AAC1B,aAAO,iBAAiB,OAAO,UAAU,GAAG;AAAA,IAChD;AAEA,UAAM,qBAAqB;AAC3B,QAAI,mBAAmB,mBAAmB,MAAM,UAAa,mBAAmB,mBAAmB,MAAM,IAAI;AACzG,aAAO,iBAAiB,OAAO,UAAU,GAAG;AAAA,IAChD;AAEA,UAAM,mBAAmB,KAAK,aAAa;AAK3C,UAAM,cAAc,mBAAmB,aAAa;AAEpD,UAAM,SAAS,YAAY;AAG3B,QAAI,UAAU,iBAAiB,YAAY,UAAU,iBAAiB,QAAQ;AAC1E,aAAO;AAAA,IACX;AAEA,UAAM,MAAM,iBAAiB;AAE7B,QAAI,SAAS,KAAK;AACd,uBAAiB,SAAS;AAAA,IAC9B,OAAO;AACH,uBAAiB,WAAW;AAC5B,uBAAiB,SAAS;AAAA,IAC9B;AAEA,QAAI,YAAY,sBAAsB;AAClC,uBAAiB,qBAAqB,YAAY;AAAA,IACtD;AAEA,qBAAiB,YAAY,WAAW;AAExC,SAAK,SAAS,GAAG,KAAK,SAAS,CAAC,GAAG,WAAW,KAAK,GAAG,mBAAmB,SAAS,CAAC,EAAE;AAErF,WAAO;AAAA,EACX;AACJ;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"133c61ddbb2da0772518b9f7eed4e57bb4cdb194"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/array-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/array-object.ts","statementMap":{"0":{"start":{"line":4,"column":24},"end":{"line":4,"column":77}},"1":{"start":{"line":5,"column":27},"end":{"line":5,"column":83}},"2":{"start":{"line":6,"column":17},"end":{"line":6,"column":19}},"3":{"start":{"line":7,"column":2},"end":{"line":33,"column":3}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":16}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":18}},"6":{"start":{"line":9,"column":4},"end":{"line":31,"column":5}},"7":{"start":{"line":9,"column":17},"end":{"line":9,"column":18}},"8":{"start":{"line":10,"column":6},"end":{"line":14,"column":7}},"9":{"start":{"line":11,"column":23},"end":{"line":11,"column":82}},"10":{"start":{"line":12,"column":8},"end":{"line":12,"column":25}},"11":{"start":{"line":13,"column":8},"end":{"line":13,"column":17}},"12":{"start":{"line":15,"column":6},"end":{"line":19,"column":7}},"13":{"start":{"line":16,"column":23},"end":{"line":16,"column":44}},"14":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"15":{"start":{"line":18,"column":8},"end":{"line":18,"column":17}},"16":{"start":{"line":20,"column":6},"end":{"line":24,"column":7}},"17":{"start":{"line":21,"column":23},"end":{"line":21,"column":44}},"18":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"19":{"start":{"line":23,"column":8},"end":{"line":23,"column":17}},"20":{"start":{"line":25,"column":6},"end":{"line":28,"column":7}},"21":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"22":{"start":{"line":27,"column":8},"end":{"line":27,"column":17}},"23":{"start":{"line":29,"column":20},"end":{"line":29,"column":41}},"24":{"start":{"line":30,"column":6},"end":{"line":30,"column":22}},"25":{"start":{"line":32,"column":4},"end":{"line":32,"column":21}},"26":{"start":{"line":34,"column":2},"end":{"line":34,"column":55}},"27":{"start":{"line":37,"column":31},"end":{"line":45,"column":3}},"28":{"start":{"line":46,"column":2},"end":{"line":46,"column":55}}},"fnMap":{"0":{"name":"expandArrayValueObject","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":38}},"loc":{"start":{"line":3,"column":89},"end":{"line":35,"column":1}},"line":3},"1":{"name":"createNewArray","decl":{"start":{"line":36,"column":16},"end":{"line":36,"column":30}},"loc":{"start":{"line":36,"column":89},"end":{"line":47,"column":1}},"line":36}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":24},"end":{"line":4,"column":77}},"type":"cond-expr","locations":[{"start":{"line":4,"column":48},"end":{"line":4,"column":73}},{"start":{"line":4,"column":76},"end":{"line":4,"column":77}}],"line":4},"1":{"loc":{"start":{"line":5,"column":27},"end":{"line":5,"column":83}},"type":"cond-expr","locations":[{"start":{"line":5,"column":51},"end":{"line":5,"column":79}},{"start":{"line":5,"column":82},"end":{"line":5,"column":83}}],"line":5},"2":{"loc":{"start":{"line":10,"column":6},"end":{"line":14,"column":7}},"type":"if","locations":[{"start":{"line":10,"column":6},"end":{"line":14,"column":7}},{"start":{},"end":{}}],"line":10},"3":{"loc":{"start":{"line":10,"column":10},"end":{"line":10,"column":55}},"type":"binary-expr","locations":[{"start":{"line":10,"column":10},"end":{"line":10,"column":29}},{"start":{"line":10,"column":33},"end":{"line":10,"column":55}}],"line":10},"4":{"loc":{"start":{"line":11,"column":23},"end":{"line":11,"column":82}},"type":"cond-expr","locations":[{"start":{"line":11,"column":47},"end":{"line":11,"column":68}},{"start":{"line":11,"column":71},"end":{"line":11,"column":82}}],"line":11},"5":{"loc":{"start":{"line":15,"column":6},"end":{"line":19,"column":7}},"type":"if","locations":[{"start":{"line":15,"column":6},"end":{"line":19,"column":7}},{"start":{},"end":{}}],"line":15},"6":{"loc":{"start":{"line":15,"column":10},"end":{"line":15,"column":53}},"type":"binary-expr","locations":[{"start":{"line":15,"column":10},"end":{"line":15,"column":29}},{"start":{"line":15,"column":33},"end":{"line":15,"column":53}}],"line":15},"7":{"loc":{"start":{"line":20,"column":6},"end":{"line":24,"column":7}},"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":24,"column":7}},{"start":{},"end":{}}],"line":20},"8":{"loc":{"start":{"line":20,"column":10},"end":{"line":20,"column":53}},"type":"binary-expr","locations":[{"start":{"line":20,"column":10},"end":{"line":20,"column":32}},{"start":{"line":20,"column":36},"end":{"line":20,"column":53}}],"line":20},"9":{"loc":{"start":{"line":25,"column":6},"end":{"line":28,"column":7}},"type":"if","locations":[{"start":{"line":25,"column":6},"end":{"line":28,"column":7}},{"start":{},"end":{}}],"line":25},"10":{"loc":{"start":{"line":25,"column":10},"end":{"line":25,"column":53}},"type":"binary-expr","locations":[{"start":{"line":25,"column":10},"end":{"line":25,"column":28}},{"start":{"line":25,"column":32},"end":{"line":25,"column":53}}],"line":25},"11":{"loc":{"start":{"line":26,"column":17},"end":{"line":26,"column":57}},"type":"binary-expr","locations":[{"start":{"line":26,"column":17},"end":{"line":26,"column":29}},{"start":{"line":26,"column":33},"end":{"line":26,"column":57}}],"line":26},"12":{"loc":{"start":{"line":36,"column":62},"end":{"line":36,"column":73}},"type":"default-arg","locations":[{"start":{"line":36,"column":71},"end":{"line":36,"column":73}}],"line":36},"13":{"loc":{"start":{"line":36,"column":75},"end":{"line":36,"column":87}},"type":"default-arg","locations":[{"start":{"line":36,"column":85},"end":{"line":36,"column":87}}],"line":36}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"f":{"0":0,"1":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0],"13":[0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/array-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BaseValueObject, IArrayValueObject } from '../value-object/base-value-object';\nimport { ArrayValueObject } from '../value-object/array-value-object';\nimport { NullValueObject } from '../value-object/primitive-object';\n\nexport function expandArrayValueObject(rowCount: number, columnCount: number, valueObject: BaseValueObject, defaultValue?: BaseValueObject) {\n    const valueRowCount = valueObject.isArray() ? (valueObject as ArrayValueObject).getRowCount() : 1;\n    const valueColumnCount = valueObject.isArray() ? (valueObject as ArrayValueObject).getColumnCount() : 1;\n\n    const result: BaseValueObject[][] = [];\n\n    for (let r = 0; r < rowCount; r++) {\n        const row = [];\n\n        for (let c = 0; c < columnCount; c++) {\n            if (valueRowCount === 1 && valueColumnCount === 1) {\n                const value = valueObject.isArray() ? (valueObject as ArrayValueObject).get(0, 0) as BaseValueObject : valueObject;\n                row.push(value);\n                continue;\n            }\n\n            if (valueRowCount === 1 && c < valueColumnCount) {\n                const value = (valueObject as ArrayValueObject).get(0, c) as BaseValueObject;\n                row.push(value);\n                continue;\n            }\n\n            if (valueColumnCount === 1 && r < valueRowCount) {\n                const value = (valueObject as ArrayValueObject).get(r, 0) as BaseValueObject;\n                row.push(value);\n                continue;\n            }\n\n            if (r >= valueRowCount || c >= valueColumnCount) {\n                row.push(defaultValue ?? NullValueObject.create());\n                continue;\n            }\n\n            const value = (valueObject as ArrayValueObject).get(r, c) as BaseValueObject;\n            row.push(value);\n        }\n\n        result.push(row);\n    }\n\n    return createNewArray(result, rowCount, columnCount);\n}\n\nexport function createNewArray(\n    result: BaseValueObject[][],\n    rowCount: number,\n    columnCount: number,\n    unitId = '',\n    sheetId = ''\n) {\n    const arrayValueObjectData: IArrayValueObject = {\n        calculateValueList: result,\n        rowCount,\n        columnCount,\n        unitId,\n        sheetId,\n        row: -1,\n        column: -1,\n    };\n\n    return ArrayValueObject.create(arrayValueObjectData);\n}\n"],"mappings":"AAiBA,SAAS,wBAAwB;AACjC,SAAS,uBAAuB;AAEzB,gBAAS,uBAAuB,UAAkB,aAAqB,aAA8B,cAAgC;AACxI,QAAM,gBAAgB,YAAY,QAAQ,IAAK,YAAiC,YAAY,IAAI;AAChG,QAAM,mBAAmB,YAAY,QAAQ,IAAK,YAAiC,eAAe,IAAI;AAEtG,QAAM,SAA8B,CAAC;AAErC,WAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,UAAM,MAAM,CAAC;AAEb,aAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AAClC,UAAI,kBAAkB,KAAK,qBAAqB,GAAG;AAC/C,cAAMA,SAAQ,YAAY,QAAQ,IAAK,YAAiC,IAAI,GAAG,CAAC,IAAuB;AACvG,YAAI,KAAKA,MAAK;AACd;AAAA,MACJ;AAEA,UAAI,kBAAkB,KAAK,IAAI,kBAAkB;AAC7C,cAAMA,SAAS,YAAiC,IAAI,GAAG,CAAC;AACxD,YAAI,KAAKA,MAAK;AACd;AAAA,MACJ;AAEA,UAAI,qBAAqB,KAAK,IAAI,eAAe;AAC7C,cAAMA,SAAS,YAAiC,IAAI,GAAG,CAAC;AACxD,YAAI,KAAKA,MAAK;AACd;AAAA,MACJ;AAEA,UAAI,KAAK,iBAAiB,KAAK,kBAAkB;AAC7C,YAAI,KAAK,gBAAgB,gBAAgB,OAAO,CAAC;AACjD;AAAA,MACJ;AAEA,YAAM,QAAS,YAAiC,IAAI,GAAG,CAAC;AACxD,UAAI,KAAK,KAAK;AAAA,IAClB;AAEA,WAAO,KAAK,GAAG;AAAA,EACnB;AAEA,SAAO,eAAe,QAAQ,UAAU,WAAW;AACvD;AAEO,gBAAS,eACZ,QACA,UACA,aACA,SAAS,IACT,UAAU,IACZ;AACE,QAAM,uBAA0C;AAAA,IAC5C,oBAAoB;AAAA,IACpB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK;AAAA,IACL,QAAQ;AAAA,EACZ;AAEA,SAAO,iBAAiB,OAAO,oBAAoB;AACvD;","names":["value"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9742baf3d1216e2a6958a8647e4976a1c972bbc0"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/object-compare.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/object-compare.ts","statementMap":{"0":{"start":{"line":6,"column":27},"end":{"line":13,"column":3}},"1":{"start":{"line":14,"column":2},"end":{"line":19,"column":3}},"2":{"start":{"line":15,"column":4},"end":{"line":18,"column":5}},"3":{"start":{"line":16,"column":22},"end":{"line":16,"column":49}},"4":{"start":{"line":17,"column":6},"end":{"line":17,"column":57}},"5":{"start":{"line":20,"column":2},"end":{"line":20,"column":63}},"6":{"start":{"line":23,"column":2},"end":{"line":32,"column":3}},"7":{"start":{"line":24,"column":4},"end":{"line":31,"column":5}},"8":{"start":{"line":25,"column":34},"end":{"line":25,"column":58}},"9":{"start":{"line":26,"column":44},"end":{"line":26,"column":81}},"10":{"start":{"line":27,"column":6},"end":{"line":27,"column":23}},"11":{"start":{"line":28,"column":6},"end":{"line":28,"column":38}},"12":{"start":{"line":30,"column":6},"end":{"line":30,"column":37}},"13":{"start":{"line":33,"column":2},"end":{"line":33,"column":60}},"14":{"start":{"line":36,"column":23},"end":{"line":36,"column":145}},"15":{"start":{"line":37,"column":26},"end":{"line":37,"column":154}},"16":{"start":{"line":38,"column":28},"end":{"line":38,"column":95}},"17":{"start":{"line":39,"column":28},"end":{"line":39,"column":95}},"18":{"start":{"line":40,"column":2},"end":{"line":52,"column":5}},"19":{"start":{"line":41,"column":26},"end":{"line":41,"column":70}},"20":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"21":{"start":{"line":43,"column":6},"end":{"line":43,"column":27}},"22":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"23":{"start":{"line":46,"column":6},"end":{"line":46,"column":27}},"24":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"25":{"start":{"line":49,"column":6},"end":{"line":49,"column":102}},"26":{"start":{"line":51,"column":4},"end":{"line":51,"column":44}}},"fnMap":{"0":{"name":"findCompareToken","decl":{"start":{"line":5,"column":16},"end":{"line":5,"column":32}},"loc":{"start":{"line":5,"column":38},"end":{"line":21,"column":1}},"line":5},"1":{"name":"valueObjectCompare","decl":{"start":{"line":22,"column":16},"end":{"line":22,"column":34}},"loc":{"start":{"line":22,"column":79},"end":{"line":34,"column":1}},"line":22},"2":{"name":"booleanObjectIntersection","decl":{"start":{"line":35,"column":16},"end":{"line":35,"column":41}},"loc":{"start":{"line":35,"column":70},"end":{"line":53,"column":1}},"line":35},"3":{"name":"(anonymous_3)","decl":{"start":{"line":40,"column":36},"end":{"line":40,"column":37}},"loc":{"start":{"line":40,"column":78},"end":{"line":52,"column":3}},"line":40}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":4},"end":{"line":18,"column":5}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":18,"column":5}},{"start":{},"end":{}}],"line":15},"1":{"loc":{"start":{"line":23,"column":2},"end":{"line":32,"column":3}},"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":32,"column":3}},{"start":{},"end":{}}],"line":23},"2":{"loc":{"start":{"line":24,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":31,"column":5}},{"start":{"line":29,"column":11},"end":{"line":31,"column":5}}],"line":24},"3":{"loc":{"start":{"line":36,"column":32},"end":{"line":36,"column":87}},"type":"cond-expr","locations":[{"start":{"line":36,"column":57},"end":{"line":36,"column":83}},{"start":{"line":36,"column":86},"end":{"line":36,"column":87}}],"line":36},"4":{"loc":{"start":{"line":36,"column":89},"end":{"line":36,"column":144}},"type":"cond-expr","locations":[{"start":{"line":36,"column":114},"end":{"line":36,"column":140}},{"start":{"line":36,"column":143},"end":{"line":36,"column":144}}],"line":36},"5":{"loc":{"start":{"line":37,"column":35},"end":{"line":37,"column":93}},"type":"cond-expr","locations":[{"start":{"line":37,"column":60},"end":{"line":37,"column":89}},{"start":{"line":37,"column":92},"end":{"line":37,"column":93}}],"line":37},"6":{"loc":{"start":{"line":37,"column":95},"end":{"line":37,"column":153}},"type":"cond-expr","locations":[{"start":{"line":37,"column":120},"end":{"line":37,"column":149}},{"start":{"line":37,"column":152},"end":{"line":37,"column":153}}],"line":37},"7":{"loc":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},{"start":{},"end":{}}],"line":42},"8":{"loc":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},{"start":{},"end":{}}],"line":45},"9":{"loc":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},{"start":{},"end":{}}],"line":48},"10":{"loc":{"start":{"line":48,"column":8},"end":{"line":48,"column":64}},"type":"binary-expr","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":34}},{"start":{"line":48,"column":38},"end":{"line":48,"column":64}}],"line":48},"11":{"loc":{"start":{"line":49,"column":48},"end":{"line":49,"column":100}},"type":"binary-expr","locations":[{"start":{"line":49,"column":48},"end":{"line":49,"column":72}},{"start":{"line":49,"column":76},"end":{"line":49,"column":100}}],"line":49}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/object-compare.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { compareToken } from '../../basics/token';\nimport type { ArrayValueObject } from '../value-object/array-value-object';\nimport { ValueObjectFactory } from '../value-object/array-value-object';\nimport type { BaseValueObject } from '../value-object/base-value-object';\nimport { BooleanValueObject, createBooleanValueObjectByRawValue } from '../value-object/primitive-object';\nimport { expandArrayValueObject } from './array-object';\n\nexport function findCompareToken(str: string): [compareToken, BaseValueObject] {\n    const comparisonTokens: compareToken[] = [\n        compareToken.EQUALS,\n        compareToken.NOT_EQUAL,\n        compareToken.GREATER_THAN_OR_EQUAL,\n        compareToken.GREATER_THAN,\n        compareToken.LESS_THAN_OR_EQUAL,\n        compareToken.LESS_THAN,\n    ];\n\n    for (const token of comparisonTokens) {\n        if (str.startsWith(token)) {\n            const content = str.substring(token.length);\n            return [token, ValueObjectFactory.create(content) as BaseValueObject];\n        }\n    }\n\n    return [compareToken.EQUALS, ValueObjectFactory.create(str) as BaseValueObject];\n}\n\n/**\n * When it contains both comparison characters and wildcard characters\n * 1. The value of apple* has the same effect as =apple*\n * 2. >=apple*: normal value, >apple: obtains the same effect as >=apple*\n * 3. <apple*: normal value, <=apple: obtains the same effect as <apple*\n */\nexport function valueObjectCompare(range: BaseValueObject, criteria: BaseValueObject, operator?: compareToken, isCaseSensitive?: boolean) {\n    if (!operator) {\n        // Only strings can extract comparison symbols, other types of values are 'equal to'\n        // TODO: criteria: 32, \">32\", B5, \"3?\", \"apple*\", \"*~?\", TODAY(), \">\"&A1:B3\n        if (criteria.isString()) {\n            const criteriaValueString = `${criteria.getValue()}`;\n            const [token, criteriaStringObject] = findCompareToken(criteriaValueString);\n            operator = token;\n            criteria = criteriaStringObject;\n        } else {\n            operator = compareToken.EQUALS;\n        }\n    }\n\n    return range.compare(criteria, operator, isCaseSensitive);\n}\n\n/**\n * Find the Boolean intersection of two ArrayValueObjects\n * @param valueObject1\n * @param valueObject2\n */\nexport function booleanObjectIntersection(valueObject1: BaseValueObject, valueObject2: BaseValueObject) {\n    const maxRowLength = Math.max(valueObject1.isArray() ? (valueObject1 as ArrayValueObject).getRowCount() : 1, valueObject2.isArray() ? (valueObject2 as ArrayValueObject).getRowCount() : 1);\n    const maxColumnLength = Math.max(valueObject1.isArray() ? (valueObject1 as ArrayValueObject).getColumnCount() : 1, valueObject2.isArray() ? (valueObject2 as ArrayValueObject).getColumnCount() : 1);\n\n    const valueObject1Array = expandArrayValueObject(maxRowLength, maxColumnLength, valueObject1);\n    const valueObject2Array = expandArrayValueObject(maxRowLength, maxColumnLength, valueObject2);\n\n    return valueObject1Array.mapValue((valueObject1, rowIndex, columnIndex) => {\n        const valueObject2 = valueObject2Array.get(rowIndex, columnIndex);\n\n        if (valueObject1?.isError()) {\n            return valueObject1;\n        }\n\n        if (valueObject2?.isError()) {\n            return valueObject2;\n        }\n\n        if (valueObject1?.isBoolean() && valueObject2?.isBoolean()) {\n            return createBooleanValueObjectByRawValue(valueObject1.getValue() && valueObject2.getValue());\n        }\n\n        return BooleanValueObject.create(false);\n    });\n}\n"],"mappings":"AAgBA,SAAS,oBAAoB;AAE7B,SAAS,0BAA0B;AAEnC,SAAS,oBAAoB,0CAA0C;AACvE,SAAS,8BAA8B;AAEhC,gBAAS,iBAAiB,KAA8C;AAC3E,QAAM,mBAAmC;AAAA,IACrC,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,EACjB;AAEA,aAAW,SAAS,kBAAkB;AAClC,QAAI,IAAI,WAAW,KAAK,GAAG;AACvB,YAAM,UAAU,IAAI,UAAU,MAAM,MAAM;AAC1C,aAAO,CAAC,OAAO,mBAAmB,OAAO,OAAO,CAAoB;AAAA,IACxE;AAAA,EACJ;AAEA,SAAO,CAAC,aAAa,QAAQ,mBAAmB,OAAO,GAAG,CAAoB;AAClF;AAQO,gBAAS,mBAAmB,OAAwB,UAA2B,UAAyB,iBAA2B;AACtI,MAAI,CAAC,UAAU;AAGX,QAAI,SAAS,SAAS,GAAG;AACrB,YAAM,sBAAsB,GAAG,SAAS,SAAS,CAAC;AAClD,YAAM,CAAC,OAAO,oBAAoB,IAAI,iBAAiB,mBAAmB;AAC1E,iBAAW;AACX,iBAAW;AAAA,IACf,OAAO;AACH,iBAAW,aAAa;AAAA,IAC5B;AAAA,EACJ;AAEA,SAAO,MAAM,QAAQ,UAAU,UAAU,eAAe;AAC5D;AAOO,gBAAS,0BAA0B,cAA+B,cAA+B;AACpG,QAAM,eAAe,KAAK,IAAI,aAAa,QAAQ,IAAK,aAAkC,YAAY,IAAI,GAAG,aAAa,QAAQ,IAAK,aAAkC,YAAY,IAAI,CAAC;AAC1L,QAAM,kBAAkB,KAAK,IAAI,aAAa,QAAQ,IAAK,aAAkC,eAAe,IAAI,GAAG,aAAa,QAAQ,IAAK,aAAkC,eAAe,IAAI,CAAC;AAEnM,QAAM,oBAAoB,uBAAuB,cAAc,iBAAiB,YAAY;AAC5F,QAAM,oBAAoB,uBAAuB,cAAc,iBAAiB,YAAY;AAE5F,SAAO,kBAAkB,SAAS,CAACA,eAAc,UAAU,gBAAgB;AACvE,UAAMC,gBAAe,kBAAkB,IAAI,UAAU,WAAW;AAEhE,QAAID,eAAc,QAAQ,GAAG;AACzB,aAAOA;AAAA,IACX;AAEA,QAAIC,eAAc,QAAQ,GAAG;AACzB,aAAOA;AAAA,IACX;AAEA,QAAID,eAAc,UAAU,KAAKC,eAAc,UAAU,GAAG;AACxD,aAAO,mCAAmCD,cAAa,SAAS,KAAKC,cAAa,SAAS,CAAC;AAAA,IAChG;AAEA,WAAO,mBAAmB,OAAO,KAAK;AAAA,EAC1C,CAAC;AACL;","names":["valueObject1","valueObject2"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"56c9db498c42b3ffb26c7c90e0ca5157f501a858"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/value-object.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/value-object.ts","statementMap":{"0":{"start":{"line":11,"column":23},"end":{"line":11,"column":45}},"1":{"start":{"line":12,"column":15},"end":{"line":12,"column":16}},"2":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"3":{"start":{"line":14,"column":4},"end":{"line":14,"column":15}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":42}},"5":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":16}},"7":{"start":{"line":22,"column":2},"end":{"line":30,"column":3}},"8":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"9":{"start":{"line":24,"column":6},"end":{"line":24,"column":18}},"10":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"11":{"start":{"line":27,"column":6},"end":{"line":27,"column":18}},"12":{"start":{"line":29,"column":4},"end":{"line":29,"column":17}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":28}},"14":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"15":{"start":{"line":33,"column":4},"end":{"line":33,"column":16}},"16":{"start":{"line":35,"column":2},"end":{"line":35,"column":15}},"17":{"start":{"line":38,"column":18},"end":{"line":38,"column":43}},"18":{"start":{"line":39,"column":22},"end":{"line":39,"column":24}},"19":{"start":{"line":40,"column":27},"end":{"line":40,"column":29}},"20":{"start":{"line":41,"column":2},"end":{"line":49,"column":3}},"21":{"start":{"line":42,"column":4},"end":{"line":48,"column":6}},"22":{"start":{"line":50,"column":2},"end":{"line":54,"column":3}},"23":{"start":{"line":51,"column":4},"end":{"line":53,"column":6}},"24":{"start":{"line":55,"column":2},"end":{"line":60,"column":3}},"25":{"start":{"line":56,"column":4},"end":{"line":59,"column":6}},"26":{"start":{"line":61,"column":2},"end":{"line":68,"column":3}},"27":{"start":{"line":62,"column":4},"end":{"line":67,"column":6}},"28":{"start":{"line":69,"column":2},"end":{"line":109,"column":3}},"29":{"start":{"line":70,"column":15},"end":{"line":70,"column":26}},"30":{"start":{"line":71,"column":14},"end":{"line":71,"column":27}},"31":{"start":{"line":72,"column":4},"end":{"line":79,"column":5}},"32":{"start":{"line":73,"column":6},"end":{"line":78,"column":8}},"33":{"start":{"line":80,"column":4},"end":{"line":87,"column":5}},"34":{"start":{"line":81,"column":6},"end":{"line":86,"column":8}},"35":{"start":{"line":88,"column":4},"end":{"line":95,"column":5}},"36":{"start":{"line":89,"column":6},"end":{"line":94,"column":8}},"37":{"start":{"line":96,"column":4},"end":{"line":102,"column":5}},"38":{"start":{"line":97,"column":6},"end":{"line":101,"column":8}},"39":{"start":{"line":103,"column":4},"end":{"line":108,"column":6}},"40":{"start":{"line":112,"column":21},"end":{"line":112,"column":22}},"41":{"start":{"line":113,"column":24},"end":{"line":113,"column":25}},"42":{"start":{"line":114,"column":2},"end":{"line":125,"column":5}},"43":{"start":{"line":115,"column":4},"end":{"line":124,"column":5}},"44":{"start":{"line":116,"column":6},"end":{"line":123,"column":7}},"45":{"start":{"line":117,"column":27},"end":{"line":117,"column":34}},"46":{"start":{"line":118,"column":8},"end":{"line":118,"column":72}},"47":{"start":{"line":119,"column":8},"end":{"line":119,"column":81}},"48":{"start":{"line":121,"column":8},"end":{"line":121,"column":49}},"49":{"start":{"line":122,"column":8},"end":{"line":122,"column":55}},"50":{"start":{"line":126,"column":2},"end":{"line":126,"column":43}},"51":{"start":{"line":129,"column":23},"end":{"line":129,"column":45}},"52":{"start":{"line":130,"column":26},"end":{"line":130,"column":51}},"53":{"start":{"line":131,"column":2},"end":{"line":139,"column":3}},"54":{"start":{"line":131,"column":15},"end":{"line":131,"column":16}},"55":{"start":{"line":132,"column":4},"end":{"line":132,"column":30}},"56":{"start":{"line":132,"column":21},"end":{"line":132,"column":30}},"57":{"start":{"line":133,"column":18},"end":{"line":133,"column":29}},"58":{"start":{"line":134,"column":27},"end":{"line":134,"column":46}},"59":{"start":{"line":135,"column":30},"end":{"line":135,"column":52}},"60":{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},"61":{"start":{"line":137,"column":6},"end":{"line":137,"column":109}},"62":{"start":{"line":140,"column":2},"end":{"line":140,"column":14}},"63":{"start":{"line":143,"column":25},"end":{"line":143,"column":27}},"64":{"start":{"line":144,"column":2},"end":{"line":166,"column":3}},"65":{"start":{"line":144,"column":15},"end":{"line":144,"column":16}},"66":{"start":{"line":145,"column":4},"end":{"line":145,"column":30}},"67":{"start":{"line":145,"column":21},"end":{"line":145,"column":30}},"68":{"start":{"line":146,"column":18},"end":{"line":146,"column":29}},"69":{"start":{"line":147,"column":21},"end":{"line":147,"column":36}},"70":{"start":{"line":148,"column":26},"end":{"line":148,"column":128}},"71":{"start":{"line":149,"column":4},"end":{"line":165,"column":7}},"72":{"start":{"line":150,"column":6},"end":{"line":152,"column":7}},"73":{"start":{"line":151,"column":8},"end":{"line":151,"column":15}},"74":{"start":{"line":153,"column":30},"end":{"line":153,"column":76}},"75":{"start":{"line":154,"column":6},"end":{"line":156,"column":7}},"76":{"start":{"line":155,"column":8},"end":{"line":155,"column":103}},"77":{"start":{"line":157,"column":6},"end":{"line":159,"column":7}},"78":{"start":{"line":158,"column":8},"end":{"line":158,"column":38}},"79":{"start":{"line":160,"column":6},"end":{"line":163,"column":7}},"80":{"start":{"line":161,"column":8},"end":{"line":161,"column":66}},"81":{"start":{"line":162,"column":8},"end":{"line":162,"column":15}},"82":{"start":{"line":164,"column":6},"end":{"line":164,"column":130}},"83":{"start":{"line":167,"column":2},"end":{"line":167,"column":24}},"84":{"start":{"line":170,"column":37},"end":{"line":170,"column":79}},"85":{"start":{"line":171,"column":2},"end":{"line":196,"column":5}},"86":{"start":{"line":172,"column":29},"end":{"line":172,"column":44}},"87":{"start":{"line":173,"column":4},"end":{"line":195,"column":5}},"88":{"start":{"line":174,"column":6},"end":{"line":174,"column":25}},"89":{"start":{"line":175,"column":11},"end":{"line":195,"column":5}},"90":{"start":{"line":176,"column":6},"end":{"line":181,"column":7}},"91":{"start":{"line":177,"column":31},"end":{"line":177,"column":74}},"92":{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},"93":{"start":{"line":179,"column":10},"end":{"line":179,"column":68}},"94":{"start":{"line":182,"column":6},"end":{"line":182,"column":46}},"95":{"start":{"line":183,"column":11},"end":{"line":195,"column":5}},"96":{"start":{"line":184,"column":6},"end":{"line":189,"column":7}},"97":{"start":{"line":185,"column":28},"end":{"line":185,"column":73}},"98":{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},"99":{"start":{"line":187,"column":10},"end":{"line":187,"column":63}},"100":{"start":{"line":190,"column":6},"end":{"line":190,"column":46}},"101":{"start":{"line":191,"column":11},"end":{"line":195,"column":5}},"102":{"start":{"line":192,"column":6},"end":{"line":192,"column":45}},"103":{"start":{"line":194,"column":6},"end":{"line":194,"column":46}},"104":{"start":{"line":199,"column":2},"end":{"line":201,"column":3}},"105":{"start":{"line":200,"column":4},"end":{"line":200,"column":16}},"106":{"start":{"line":202,"column":2},"end":{"line":204,"column":3}},"107":{"start":{"line":203,"column":4},"end":{"line":203,"column":16}},"108":{"start":{"line":205,"column":22},"end":{"line":205,"column":63}},"109":{"start":{"line":206,"column":23},"end":{"line":206,"column":66}},"110":{"start":{"line":207,"column":2},"end":{"line":209,"column":3}},"111":{"start":{"line":208,"column":4},"end":{"line":208,"column":16}},"112":{"start":{"line":210,"column":2},"end":{"line":212,"column":3}},"113":{"start":{"line":211,"column":4},"end":{"line":211,"column":16}},"114":{"start":{"line":213,"column":2},"end":{"line":213,"column":15}},"115":{"start":{"line":215,"column":49},"end":{"line":220,"column":29}},"116":{"start":{"line":216,"column":2},"end":{"line":216,"column":66}},"117":{"start":{"line":217,"column":2},"end":{"line":217,"column":70}},"118":{"start":{"line":218,"column":2},"end":{"line":218,"column":64}},"119":{"start":{"line":219,"column":2},"end":{"line":219,"column":30}},"120":{"start":{"line":223,"column":2},"end":{"line":235,"column":3}},"121":{"start":{"line":225,"column":6},"end":{"line":225,"column":59}},"122":{"start":{"line":226,"column":6},"end":{"line":226,"column":12}},"123":{"start":{"line":228,"column":6},"end":{"line":228,"column":61}},"124":{"start":{"line":229,"column":6},"end":{"line":229,"column":12}},"125":{"start":{"line":231,"column":6},"end":{"line":231,"column":58}},"126":{"start":{"line":232,"column":6},"end":{"line":232,"column":12}},"127":{"start":{"line":234,"column":6},"end":{"line":234,"column":55}},"128":{"start":{"line":236,"column":2},"end":{"line":236,"column":25}},"129":{"start":{"line":239,"column":24},"end":{"line":239,"column":63}},"130":{"start":{"line":240,"column":2},"end":{"line":246,"column":3}},"131":{"start":{"line":241,"column":4},"end":{"line":241,"column":49}},"132":{"start":{"line":242,"column":9},"end":{"line":246,"column":3}},"133":{"start":{"line":243,"column":4},"end":{"line":243,"column":49}},"134":{"start":{"line":244,"column":9},"end":{"line":246,"column":3}},"135":{"start":{"line":245,"column":4},"end":{"line":245,"column":49}},"136":{"start":{"line":247,"column":2},"end":{"line":247,"column":25}}},"fnMap":{"0":{"name":"convertTonNumber","decl":{"start":{"line":10,"column":16},"end":{"line":10,"column":32}},"loc":{"start":{"line":10,"column":46},"end":{"line":17,"column":1}},"line":10},"1":{"name":"isSingleValueObject","decl":{"start":{"line":18,"column":16},"end":{"line":18,"column":35}},"loc":{"start":{"line":18,"column":49},"end":{"line":36,"column":1}},"line":18},"2":{"name":"objectValueToCellValue","decl":{"start":{"line":37,"column":16},"end":{"line":37,"column":38}},"loc":{"start":{"line":37,"column":52},"end":{"line":110,"column":1}},"line":37},"3":{"name":"calculateMaxDimensions","decl":{"start":{"line":111,"column":16},"end":{"line":111,"column":38}},"loc":{"start":{"line":111,"column":49},"end":{"line":127,"column":1}},"line":111},"4":{"name":"(anonymous_4)","decl":{"start":{"line":114,"column":19},"end":{"line":114,"column":20}},"loc":{"start":{"line":114,"column":35},"end":{"line":125,"column":3}},"line":114},"5":{"name":"getErrorArray","decl":{"start":{"line":128,"column":16},"end":{"line":128,"column":29}},"loc":{"start":{"line":128,"column":81},"end":{"line":141,"column":1}},"line":128},"6":{"name":"getBooleanResults","decl":{"start":{"line":142,"column":16},"end":{"line":142,"column":33}},"loc":{"start":{"line":142,"column":102},"end":{"line":168,"column":1}},"line":142},"7":{"name":"(anonymous_7)","decl":{"start":{"line":149,"column":27},"end":{"line":149,"column":28}},"loc":{"start":{"line":149,"column":75},"end":{"line":165,"column":5}},"line":149},"8":{"name":"filterSameValueObjectResult","decl":{"start":{"line":169,"column":16},"end":{"line":169,"column":43}},"loc":{"start":{"line":169,"column":68},"end":{"line":197,"column":1}},"line":169},"9":{"name":"(anonymous_9)","decl":{"start":{"line":171,"column":24},"end":{"line":171,"column":25}},"loc":{"start":{"line":171,"column":47},"end":{"line":196,"column":3}},"line":171},"10":{"name":"isSameValueObjectType","decl":{"start":{"line":198,"column":16},"end":{"line":198,"column":37}},"loc":{"start":{"line":198,"column":51},"end":{"line":214,"column":1}},"line":198},"11":{"name":"(anonymous_11)","decl":{"start":{"line":215,"column":50},"end":{"line":215,"column":51}},"loc":{"start":{"line":215,"column":76},"end":{"line":220,"column":1}},"line":215},"12":{"name":"getReferenceObjectFromCache","decl":{"start":{"line":221,"column":16},"end":{"line":221,"column":43}},"loc":{"start":{"line":221,"column":61},"end":{"line":237,"column":1}},"line":221},"13":{"name":"getRangeReferenceObjectFromCache","decl":{"start":{"line":238,"column":16},"end":{"line":238,"column":48}},"loc":{"start":{"line":238,"column":69},"end":{"line":248,"column":1}},"line":238}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},{"start":{},"end":{}}],"line":13},"1":{"loc":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},{"start":{},"end":{}}],"line":19},"2":{"loc":{"start":{"line":19,"column":6},"end":{"line":19,"column":100}},"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":27}},{"start":{"line":19,"column":31},"end":{"line":19,"column":62}},{"start":{"line":19,"column":66},"end":{"line":19,"column":100}}],"line":19},"3":{"loc":{"start":{"line":22,"column":2},"end":{"line":30,"column":3}},"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":30,"column":3}},{"start":{},"end":{}}],"line":22},"4":{"loc":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},{"start":{},"end":{}}],"line":23},"5":{"loc":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},{"start":{},"end":{}}],"line":26},"6":{"loc":{"start":{"line":26,"column":8},"end":{"line":26,"column":77}},"type":"binary-expr","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":39}},{"start":{"line":26,"column":43},"end":{"line":26,"column":77}}],"line":26},"7":{"loc":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},{"start":{},"end":{}}],"line":32},"8":{"loc":{"start":{"line":32,"column":6},"end":{"line":32,"column":130}},"type":"binary-expr","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":28}},{"start":{"line":32,"column":32},"end":{"line":32,"column":54}},{"start":{"line":32,"column":58},"end":{"line":32,"column":81}},{"start":{"line":32,"column":85},"end":{"line":32,"column":106}},{"start":{"line":32,"column":110},"end":{"line":32,"column":130}}],"line":32},"9":{"loc":{"start":{"line":41,"column":2},"end":{"line":49,"column":3}},"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":49,"column":3}},{"start":{},"end":{}}],"line":41},"10":{"loc":{"start":{"line":50,"column":2},"end":{"line":54,"column":3}},"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":54,"column":3}},{"start":{},"end":{}}],"line":50},"11":{"loc":{"start":{"line":55,"column":2},"end":{"line":60,"column":3}},"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":60,"column":3}},{"start":{},"end":{}}],"line":55},"12":{"loc":{"start":{"line":61,"column":2},"end":{"line":68,"column":3}},"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":68,"column":3}},{"start":{},"end":{}}],"line":61},"13":{"loc":{"start":{"line":69,"column":2},"end":{"line":109,"column":3}},"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":109,"column":3}},{"start":{},"end":{}}],"line":69},"14":{"loc":{"start":{"line":72,"column":4},"end":{"line":79,"column":5}},"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":79,"column":5}},{"start":{},"end":{}}],"line":72},"15":{"loc":{"start":{"line":80,"column":4},"end":{"line":87,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":87,"column":5}},{"start":{},"end":{}}],"line":80},"16":{"loc":{"start":{"line":82,"column":11},"end":{"line":82,"column":20}},"type":"cond-expr","locations":[{"start":{"line":82,"column":15},"end":{"line":82,"column":16}},{"start":{"line":82,"column":19},"end":{"line":82,"column":20}}],"line":82},"17":{"loc":{"start":{"line":88,"column":4},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":95,"column":5}},{"start":{},"end":{}}],"line":88},"18":{"loc":{"start":{"line":96,"column":4},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":102,"column":5}},{"start":{},"end":{}}],"line":96},"19":{"loc":{"start":{"line":115,"column":4},"end":{"line":124,"column":5}},"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":124,"column":5}},{"start":{},"end":{}}],"line":115},"20":{"loc":{"start":{"line":116,"column":6},"end":{"line":123,"column":7}},"type":"if","locations":[{"start":{"line":116,"column":6},"end":{"line":123,"column":7}},{"start":{"line":120,"column":13},"end":{"line":123,"column":7}}],"line":116},"21":{"loc":{"start":{"line":132,"column":4},"end":{"line":132,"column":30}},"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":30}},{"start":{},"end":{}}],"line":132},"22":{"loc":{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},{"start":{},"end":{}}],"line":136},"23":{"loc":{"start":{"line":136,"column":8},"end":{"line":136,"column":80}},"type":"binary-expr","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":39}},{"start":{"line":136,"column":43},"end":{"line":136,"column":80}}],"line":136},"24":{"loc":{"start":{"line":142,"column":75},"end":{"line":142,"column":100}},"type":"default-arg","locations":[{"start":{"line":142,"column":95},"end":{"line":142,"column":100}}],"line":142},"25":{"loc":{"start":{"line":145,"column":4},"end":{"line":145,"column":30}},"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":30}},{"start":{},"end":{}}],"line":145},"26":{"loc":{"start":{"line":150,"column":6},"end":{"line":152,"column":7}},"type":"if","locations":[{"start":{"line":150,"column":6},"end":{"line":152,"column":7}},{"start":{},"end":{}}],"line":150},"27":{"loc":{"start":{"line":154,"column":6},"end":{"line":156,"column":7}},"type":"if","locations":[{"start":{"line":154,"column":6},"end":{"line":156,"column":7}},{"start":{},"end":{}}],"line":154},"28":{"loc":{"start":{"line":157,"column":6},"end":{"line":159,"column":7}},"type":"if","locations":[{"start":{"line":157,"column":6},"end":{"line":159,"column":7}},{"start":{},"end":{}}],"line":157},"29":{"loc":{"start":{"line":160,"column":6},"end":{"line":163,"column":7}},"type":"if","locations":[{"start":{"line":160,"column":6},"end":{"line":163,"column":7}},{"start":{},"end":{}}],"line":160},"30":{"loc":{"start":{"line":173,"column":4},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":195,"column":5}},{"start":{"line":175,"column":11},"end":{"line":195,"column":5}}],"line":173},"31":{"loc":{"start":{"line":173,"column":8},"end":{"line":173,"column":83}},"type":"binary-expr","locations":[{"start":{"line":173,"column":8},"end":{"line":173,"column":24}},{"start":{"line":173,"column":28},"end":{"line":173,"column":83}}],"line":173},"32":{"loc":{"start":{"line":175,"column":11},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":175,"column":11},"end":{"line":195,"column":5}},{"start":{"line":183,"column":11},"end":{"line":195,"column":5}}],"line":175},"33":{"loc":{"start":{"line":176,"column":6},"end":{"line":181,"column":7}},"type":"if","locations":[{"start":{"line":176,"column":6},"end":{"line":181,"column":7}},{"start":{},"end":{}}],"line":176},"34":{"loc":{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},"type":"if","locations":[{"start":{"line":178,"column":8},"end":{"line":180,"column":9}},{"start":{},"end":{}}],"line":178},"35":{"loc":{"start":{"line":183,"column":11},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":183,"column":11},"end":{"line":195,"column":5}},{"start":{"line":191,"column":11},"end":{"line":195,"column":5}}],"line":183},"36":{"loc":{"start":{"line":184,"column":6},"end":{"line":189,"column":7}},"type":"if","locations":[{"start":{"line":184,"column":6},"end":{"line":189,"column":7}},{"start":{},"end":{}}],"line":184},"37":{"loc":{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},"type":"if","locations":[{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},{"start":{},"end":{}}],"line":186},"38":{"loc":{"start":{"line":191,"column":11},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":191,"column":11},"end":{"line":195,"column":5}},{"start":{"line":193,"column":11},"end":{"line":195,"column":5}}],"line":191},"39":{"loc":{"start":{"line":191,"column":15},"end":{"line":191,"column":131}},"type":"binary-expr","locations":[{"start":{"line":191,"column":15},"end":{"line":191,"column":42}},{"start":{"line":191,"column":46},"end":{"line":191,"column":70}},{"start":{"line":191,"column":74},"end":{"line":191,"column":131}}],"line":191},"40":{"loc":{"start":{"line":199,"column":2},"end":{"line":201,"column":3}},"type":"if","locations":[{"start":{"line":199,"column":2},"end":{"line":201,"column":3}},{"start":{},"end":{}}],"line":199},"41":{"loc":{"start":{"line":199,"column":6},"end":{"line":199,"column":41}},"type":"binary-expr","locations":[{"start":{"line":199,"column":6},"end":{"line":199,"column":21}},{"start":{"line":199,"column":25},"end":{"line":199,"column":41}}],"line":199},"42":{"loc":{"start":{"line":202,"column":2},"end":{"line":204,"column":3}},"type":"if","locations":[{"start":{"line":202,"column":2},"end":{"line":204,"column":3}},{"start":{},"end":{}}],"line":202},"43":{"loc":{"start":{"line":202,"column":6},"end":{"line":202,"column":43}},"type":"binary-expr","locations":[{"start":{"line":202,"column":6},"end":{"line":202,"column":22}},{"start":{"line":202,"column":26},"end":{"line":202,"column":43}}],"line":202},"44":{"loc":{"start":{"line":205,"column":22},"end":{"line":205,"column":63}},"type":"binary-expr","locations":[{"start":{"line":205,"column":22},"end":{"line":205,"column":37}},{"start":{"line":205,"column":41},"end":{"line":205,"column":63}}],"line":205},"45":{"loc":{"start":{"line":206,"column":23},"end":{"line":206,"column":66}},"type":"binary-expr","locations":[{"start":{"line":206,"column":23},"end":{"line":206,"column":39}},{"start":{"line":206,"column":43},"end":{"line":206,"column":66}}],"line":206},"46":{"loc":{"start":{"line":207,"column":2},"end":{"line":209,"column":3}},"type":"if","locations":[{"start":{"line":207,"column":2},"end":{"line":209,"column":3}},{"start":{},"end":{}}],"line":207},"47":{"loc":{"start":{"line":207,"column":6},"end":{"line":207,"column":72}},"type":"binary-expr","locations":[{"start":{"line":207,"column":7},"end":{"line":207,"column":18}},{"start":{"line":207,"column":22},"end":{"line":207,"column":35}},{"start":{"line":207,"column":41},"end":{"line":207,"column":53}},{"start":{"line":207,"column":57},"end":{"line":207,"column":71}}],"line":207},"48":{"loc":{"start":{"line":210,"column":2},"end":{"line":212,"column":3}},"type":"if","locations":[{"start":{"line":210,"column":2},"end":{"line":212,"column":3}},{"start":{},"end":{}}],"line":210},"49":{"loc":{"start":{"line":210,"column":6},"end":{"line":210,"column":74}},"type":"binary-expr","locations":[{"start":{"line":210,"column":6},"end":{"line":210,"column":21}},{"start":{"line":210,"column":25},"end":{"line":210,"column":37}},{"start":{"line":210,"column":41},"end":{"line":210,"column":57}},{"start":{"line":210,"column":61},"end":{"line":210,"column":74}}],"line":210},"50":{"loc":{"start":{"line":220,"column":3},"end":{"line":220,"column":28}},"type":"binary-expr","locations":[{"start":{"line":220,"column":3},"end":{"line":220,"column":22}},{"start":{"line":220,"column":26},"end":{"line":220,"column":28}}],"line":220},"51":{"loc":{"start":{"line":223,"column":2},"end":{"line":235,"column":3}},"type":"switch","locations":[{"start":{"line":224,"column":4},"end":{"line":226,"column":12}},{"start":{"line":227,"column":4},"end":{"line":229,"column":12}},{"start":{"line":230,"column":4},"end":{"line":232,"column":12}},{"start":{"line":233,"column":4},"end":{"line":234,"column":55}}],"line":223},"52":{"loc":{"start":{"line":240,"column":2},"end":{"line":246,"column":3}},"type":"if","locations":[{"start":{"line":240,"column":2},"end":{"line":246,"column":3}},{"start":{"line":242,"column":9},"end":{"line":246,"column":3}}],"line":240},"53":{"loc":{"start":{"line":240,"column":6},"end":{"line":240,"column":44}},"type":"binary-expr","locations":[{"start":{"line":240,"column":6},"end":{"line":240,"column":23}},{"start":{"line":240,"column":27},"end":{"line":240,"column":44}}],"line":240},"54":{"loc":{"start":{"line":242,"column":9},"end":{"line":246,"column":3}},"type":"if","locations":[{"start":{"line":242,"column":9},"end":{"line":246,"column":3}},{"start":{"line":244,"column":9},"end":{"line":246,"column":3}}],"line":242},"55":{"loc":{"start":{"line":242,"column":13},"end":{"line":242,"column":49}},"type":"binary-expr","locations":[{"start":{"line":242,"column":13},"end":{"line":242,"column":29}},{"start":{"line":242,"column":33},"end":{"line":242,"column":49}}],"line":242},"56":{"loc":{"start":{"line":244,"column":9},"end":{"line":246,"column":3}},"type":"if","locations":[{"start":{"line":244,"column":9},"end":{"line":246,"column":3}},{"start":{},"end":{}}],"line":244},"57":{"loc":{"start":{"line":244,"column":13},"end":{"line":244,"column":55}},"type":"binary-expr","locations":[{"start":{"line":244,"column":13},"end":{"line":244,"column":32}},{"start":{"line":244,"column":36},"end":{"line":244,"column":55}}],"line":244}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":1,"117":1,"118":1,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0,0],"48":[0,0],"49":[0,0,0,0],"50":[1,1],"51":[0,0,0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/engine/utils/value-object.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, Nullable } from '@univerjs/core';\nimport type { BaseReferenceObject, FunctionVariantType } from '../reference-object/base-reference-object';\nimport type { ArrayValueObject } from '../value-object/array-value-object';\nimport type { BaseValueObject } from '../value-object/base-value-object';\nimport { CellValueType } from '@univerjs/core';\nimport { ErrorType } from '../../basics/error-type';\nimport { CellReferenceObject } from '../reference-object/cell-reference-object';\nimport { ColumnReferenceObject } from '../reference-object/column-reference-object';\nimport { RowReferenceObject } from '../reference-object/row-reference-object';\nimport { ErrorValueObject } from '../value-object/base-value-object';\nimport { BooleanValueObject, NumberValueObject } from '../value-object/primitive-object';\nimport { expandArrayValueObject } from './array-object';\nimport { booleanObjectIntersection, findCompareToken, valueObjectCompare } from './object-compare';\n\nexport function convertTonNumber(valueObject: BaseValueObject) {\n    const currentValue = valueObject.getValue();\n    let result = 0;\n    if (currentValue) {\n        result = 1;\n    }\n    return NumberValueObject.create(result);\n}\n\nexport function isSingleValueObject(valueObject: FunctionVariantType) {\n    if (valueObject.isArray() && (valueObject as ArrayValueObject).getRowCount() === 1 && (valueObject as ArrayValueObject).getColumnCount() === 1) {\n        return true;\n    }\n\n    if (valueObject.isReferenceObject()) {\n        if ((valueObject as BaseReferenceObject).isCell()) {\n            return true;\n        }\n\n        if ((valueObject as BaseReferenceObject).getRowCount() === 1 && (valueObject as BaseReferenceObject).getColumnCount() === 1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    valueObject = valueObject as BaseValueObject;\n\n    if (valueObject.isString() || valueObject.isNumber() || valueObject.isBoolean() || valueObject.isError() || valueObject.isNull()) {\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Covert BaseValueObject to cell value\n * @param objectValue\n * @returns\n */\nexport function objectValueToCellValue(objectValue: Nullable<BaseValueObject>): ICellData | undefined {\n    const pattern = objectValue?.getPattern();\n    let cellWithStyle: ICellData = {};\n    let cellWithCustomData: ICellData = {};\n\n    if (pattern) {\n        cellWithStyle = {\n            s: {\n                n: {\n                    pattern,\n                },\n            },\n        };\n    }\n\n    if (objectValue?.getCustomData()) {\n        cellWithCustomData = {\n            custom: objectValue.getCustomData(),\n        };\n    }\n\n    if (objectValue == null) {\n        return {\n            v: null,\n            ...cellWithStyle,\n        };\n    }\n    if (objectValue.isError()) {\n        return {\n            v: (objectValue as ErrorValueObject).getErrorType() as string,\n            t: CellValueType.STRING,\n            ...cellWithStyle,\n            ...cellWithCustomData,\n        };\n    }\n    if (objectValue.isValueObject()) {\n        const vo = objectValue as BaseValueObject;\n        const v = vo.getValue();\n        if (vo.isNumber()) {\n            return {\n                v,\n                t: CellValueType.NUMBER,\n                ...cellWithStyle,\n                ...cellWithCustomData,\n            };\n        }\n        if (vo.isBoolean()) {\n            return {\n                v: v ? 1 : 0,\n                t: CellValueType.BOOLEAN,\n                ...cellWithStyle,\n                ...cellWithCustomData,\n            };\n        }\n        // String \"00\"\n        // =IF(1,\"0\") evaluates to \"0\", which should be a normal string (regardless of whether it is a number or not). Forced strings only appear when preceded by single quotes\n        if (vo.isString()) {\n            return {\n                v,\n                t: CellValueType.STRING,\n                ...cellWithStyle,\n                ...cellWithCustomData,\n            };\n        }\n\n        if (vo.isNull()) {\n            return {\n                v: null,\n                ...cellWithStyle,\n                ...cellWithCustomData,\n            };\n        }\n\n        return {\n            v,\n            t: CellValueType.STRING,\n            ...cellWithStyle,\n            ...cellWithCustomData,\n        };\n    }\n}\n\n/**\n * The size of the extended range is determined by the maximum width and height of the criteria range.\n * @param variants\n * @returns\n */\nexport function calculateMaxDimensions(variants: BaseValueObject[]) {\n    let maxRowLength = 0;\n    let maxColumnLength = 0;\n\n    variants.forEach((variant, i) => {\n        if (i % 2 === 1) {\n            if (variant.isArray()) {\n                const arrayValue = variant as ArrayValueObject;\n                maxRowLength = Math.max(maxRowLength, arrayValue.getRowCount());\n                maxColumnLength = Math.max(maxColumnLength, arrayValue.getColumnCount());\n            } else {\n                maxRowLength = Math.max(maxRowLength, 1);\n                maxColumnLength = Math.max(maxColumnLength, 1);\n            }\n        }\n    });\n\n    return { maxRowLength, maxColumnLength };\n}\n\nexport function getErrorArray(variants: BaseValueObject[], sumRange: BaseValueObject, maxRowLength: number, maxColumnLength: number) {\n    const sumRowLength = (sumRange as ArrayValueObject).getRowCount();\n    const sumColumnLength = (sumRange as ArrayValueObject).getColumnCount();\n\n    for (let i = 0; i < variants.length; i++) {\n        if (i % 2 === 1) continue;\n\n        const range = variants[i];\n\n        const rangeRowLength = (range as ArrayValueObject).getRowCount();\n        const rangeColumnLength = (range as ArrayValueObject).getColumnCount();\n        if (rangeRowLength !== sumRowLength || rangeColumnLength !== sumColumnLength) {\n            return expandArrayValueObject(maxRowLength, maxColumnLength, ErrorValueObject.create(ErrorType.VALUE));\n        }\n    }\n\n    return null;\n}\n\nexport function getBooleanResults(variants: BaseValueObject[], maxRowLength: number, maxColumnLength: number, isNumberSensitive: boolean = false) {\n    const booleanResults: BaseValueObject[][] = [];\n\n    for (let i = 0; i < variants.length; i++) {\n        if (i % 2 === 1) continue;\n\n        const range = variants[i];\n        const criteria = variants[i + 1];\n        const criteriaArray = expandArrayValueObject(maxRowLength, maxColumnLength, criteria, ErrorValueObject.create(ErrorType.NA));\n\n        criteriaArray.iterator((criteriaValueObject, rowIndex, columnIndex) => {\n            if (!criteriaValueObject) {\n                return;\n            }\n\n            // range must be an ArrayValueObject, criteria must be a BaseValueObject\n            let resultArrayObject = valueObjectCompare(range, criteriaValueObject);\n\n            // When comparing non-numbers and numbers, countifs does not take the result\n            if (isNumberSensitive) {\n                resultArrayObject = filterSameValueObjectResult(resultArrayObject as ArrayValueObject, range as ArrayValueObject, criteriaValueObject);\n            }\n\n            if (booleanResults[rowIndex] === undefined) {\n                booleanResults[rowIndex] = [];\n            }\n\n            if (booleanResults[rowIndex][columnIndex] === undefined) {\n                booleanResults[rowIndex][columnIndex] = resultArrayObject;\n                return;\n            }\n\n            booleanResults[rowIndex][columnIndex] = booleanObjectIntersection(booleanResults[rowIndex][columnIndex], resultArrayObject);\n        });\n    }\n\n    return booleanResults;\n}\n\n/**\n * Two valueObjects of the same type can be compared\n * @param array\n * @param range\n * @param criteria\n * @returns\n */\nexport function filterSameValueObjectResult(array: ArrayValueObject, range: ArrayValueObject, criteria: BaseValueObject) {\n    const [operator, criteriaObject] = findCompareToken(`${criteria.getValue()}`);\n\n    return array.mapValue((valueObject, r, c) => {\n        const rangeValueObject = range.get(r, c);\n\n        if (rangeValueObject && isSameValueObjectType(rangeValueObject, criteriaObject)) {\n            return valueObject;\n        } else if (rangeValueObject?.isNumber()) {\n            if (criteriaObject.isString()) {\n                const criteriaNumber = criteriaObject.convertToNumberObjectValue();\n\n                if (criteriaNumber.isNumber()) {\n                    return rangeValueObject.compare(criteriaNumber, operator);\n                }\n            }\n\n            return BooleanValueObject.create(false);\n        } else if (criteriaObject.isNumber()) {\n            if (rangeValueObject?.isString()) {\n                const rangeNumber = rangeValueObject.convertToNumberObjectValue();\n\n                if (rangeNumber.isNumber()) {\n                    return rangeNumber.compare(criteriaObject, operator);\n                }\n            }\n\n            return BooleanValueObject.create(false);\n        } else if (rangeValueObject?.isError() && criteriaObject.isError() && rangeValueObject.getValue() === criteriaObject.getValue()) {\n            return BooleanValueObject.create(true);\n        } else {\n            return BooleanValueObject.create(false);\n        }\n    });\n}\n\n/**\n * Check if the two valueObjects are of the same type\n * @param left\n * @param right\n * @returns\n */\nexport function isSameValueObjectType(left: BaseValueObject, right: BaseValueObject) {\n    if (left.isNumber() && right.isNumber()) {\n        return true;\n    }\n\n    if (left.isBoolean() && right.isBoolean()) {\n        return true;\n    }\n\n    // blank string is same as a blank cell\n    const isLeftBlank = left.isString() && left.getValue() === '';\n    const isRightBlank = right.isString() && right.getValue() === '';\n\n    if ((isLeftBlank || left.isNull()) && (isRightBlank || right.isNull())) {\n        return true;\n    }\n\n    if (left.isString() && !isLeftBlank && right.isString() && !isRightBlank) {\n        return true;\n    }\n\n    return false;\n}\n\nexport enum ReferenceObjectType {\n    CELL,\n    COLUMN,\n    ROW,\n}\n\nexport function getReferenceObjectFromCache(trimToken: string, type: ReferenceObjectType) {\n    let referenceObject: BaseReferenceObject;\n    switch (type) {\n        case ReferenceObjectType.CELL:\n            referenceObject = new CellReferenceObject(trimToken);\n            break;\n        case ReferenceObjectType.COLUMN:\n            referenceObject = new ColumnReferenceObject(trimToken);\n            break;\n        case ReferenceObjectType.ROW:\n            referenceObject = new RowReferenceObject(trimToken);\n            break;\n        default:\n            throw new Error('Unknown reference object type');\n    }\n\n    return referenceObject;\n}\n\nexport function getRangeReferenceObjectFromCache(variant1: BaseReferenceObject, variant2: BaseReferenceObject) {\n    let referenceObject: FunctionVariantType = ErrorValueObject.create(ErrorType.NAME);\n    if (variant1.isCell() && variant2.isCell()) {\n        referenceObject = variant1.unionBy(variant2) as BaseReferenceObject;\n    } else if (variant1.isRow() && variant2.isRow()) {\n        referenceObject = variant1.unionBy(variant2) as BaseReferenceObject;\n    } else if (variant1.isColumn() && variant2.isColumn()) {\n        referenceObject = variant1.unionBy(variant2) as BaseReferenceObject;\n    }\n\n    return referenceObject;\n}\n"],"mappings":"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","names":["ReferenceObjectType"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d4c9622b00e5d96445cfe3dd1956ec1f2519eb23"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/base-function.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/base-function.ts","statementMap":{"0":{"start":{"line":16,"column":4},"end":{"line":16,"column":23}},"1":{"start":{"line":20,"column":9},"end":{"line":20,"column":11}},"2":{"start":{"line":21,"column":12},"end":{"line":21,"column":14}},"3":{"start":{"line":27,"column":14},"end":{"line":27,"column":16}},"4":{"start":{"line":28,"column":17},"end":{"line":28,"column":19}},"5":{"start":{"line":32,"column":22},"end":{"line":32,"column":27}},"6":{"start":{"line":36,"column":25},"end":{"line":36,"column":30}},"7":{"start":{"line":40,"column":16},"end":{"line":40,"column":21}},"8":{"start":{"line":44,"column":20},"end":{"line":44,"column":25}},"9":{"start":{"line":48,"column":26},"end":{"line":48,"column":31}},"10":{"start":{"line":52,"column":29},"end":{"line":52,"column":34}},"11":{"start":{"line":56,"column":14},"end":{"line":56,"column":16}},"12":{"start":{"line":60,"column":14},"end":{"line":60,"column":16}},"13":{"start":{"line":62,"column":4},"end":{"line":62,"column":22}},"14":{"start":{"line":65,"column":4},"end":{"line":65,"column":24}},"15":{"start":{"line":68,"column":4},"end":{"line":68,"column":27}},"16":{"start":{"line":71,"column":4},"end":{"line":71,"column":21}},"17":{"start":{"line":74,"column":4},"end":{"line":74,"column":24}},"18":{"start":{"line":85,"column":20},"end":{"line":85,"column":38}},"19":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"20":{"start":{"line":87,"column":6},"end":{"line":87,"column":18}},"21":{"start":{"line":89,"column":4},"end":{"line":91,"column":12}},"22":{"start":{"line":90,"column":6},"end":{"line":90,"column":33}},"23":{"start":{"line":94,"column":4},"end":{"line":94,"column":38}},"24":{"start":{"line":97,"column":4},"end":{"line":97,"column":24}},"25":{"start":{"line":100,"column":4},"end":{"line":100,"column":26}},"26":{"start":{"line":103,"column":4},"end":{"line":106,"column":6}},"27":{"start":{"line":112,"column":4},"end":{"line":112,"column":34}},"28":{"start":{"line":113,"column":4},"end":{"line":113,"column":38}},"29":{"start":{"line":116,"column":4},"end":{"line":116,"column":47}},"30":{"start":{"line":119,"column":4},"end":{"line":119,"column":30}},"31":{"start":{"line":120,"column":4},"end":{"line":120,"column":36}},"32":{"start":{"line":123,"column":4},"end":{"line":123,"column":17}},"33":{"start":{"line":126,"column":4},"end":{"line":126,"column":17}},"34":{"start":{"line":129,"column":4},"end":{"line":129,"column":17}},"35":{"start":{"line":132,"column":4},"end":{"line":132,"column":26}},"36":{"start":{"line":133,"column":4},"end":{"line":133,"column":32}},"37":{"start":{"line":134,"column":4},"end":{"line":134,"column":20}},"38":{"start":{"line":135,"column":4},"end":{"line":135,"column":26}},"39":{"start":{"line":138,"column":4},"end":{"line":138,"column":16}},"40":{"start":{"line":141,"column":4},"end":{"line":141,"column":52}},"41":{"start":{"line":144,"column":4},"end":{"line":144,"column":87}},"42":{"start":{"line":153,"column":20},"end":{"line":153,"column":28}},"43":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"44":{"start":{"line":155,"column":6},"end":{"line":155,"column":43}},"45":{"start":{"line":157,"column":4},"end":{"line":163,"column":5}},"46":{"start":{"line":158,"column":27},"end":{"line":158,"column":47}},"47":{"start":{"line":159,"column":6},"end":{"line":161,"column":7}},"48":{"start":{"line":160,"column":8},"end":{"line":160,"column":56}},"49":{"start":{"line":162,"column":6},"end":{"line":162,"column":26}},"50":{"start":{"line":164,"column":4},"end":{"line":173,"column":5}},"51":{"start":{"line":165,"column":27},"end":{"line":165,"column":55}},"52":{"start":{"line":166,"column":6},"end":{"line":168,"column":7}},"53":{"start":{"line":167,"column":8},"end":{"line":167,"column":54}},"54":{"start":{"line":169,"column":6},"end":{"line":169,"column":26}},"55":{"start":{"line":170,"column":11},"end":{"line":173,"column":5}},"56":{"start":{"line":171,"column":27},"end":{"line":171,"column":47}},"57":{"start":{"line":172,"column":6},"end":{"line":172,"column":26}},"58":{"start":{"line":174,"column":4},"end":{"line":174,"column":52}},"59":{"start":{"line":189,"column":4},"end":{"line":191,"column":5}},"60":{"start":{"line":190,"column":6},"end":{"line":190,"column":15}},"61":{"start":{"line":192,"column":21},"end":{"line":192,"column":22}},"62":{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},"63":{"start":{"line":194,"column":6},"end":{"line":194,"column":57}},"64":{"start":{"line":196,"column":4},"end":{"line":208,"column":5}},"65":{"start":{"line":197,"column":21},"end":{"line":197,"column":48}},"66":{"start":{"line":198,"column":6},"end":{"line":200,"column":7}},"67":{"start":{"line":199,"column":8},"end":{"line":199,"column":23}},"68":{"start":{"line":201,"column":11},"end":{"line":208,"column":5}},"69":{"start":{"line":202,"column":6},"end":{"line":202,"column":13}},"70":{"start":{"line":203,"column":11},"end":{"line":208,"column":5}},"71":{"start":{"line":204,"column":21},"end":{"line":204,"column":48}},"72":{"start":{"line":205,"column":6},"end":{"line":207,"column":7}},"73":{"start":{"line":206,"column":8},"end":{"line":206,"column":23}},"74":{"start":{"line":209,"column":4},"end":{"line":209,"column":22}},"75":{"start":{"line":217,"column":4},"end":{"line":219,"column":5}},"76":{"start":{"line":218,"column":6},"end":{"line":218,"column":15}},"77":{"start":{"line":220,"column":21},"end":{"line":220,"column":22}},"78":{"start":{"line":221,"column":4},"end":{"line":223,"column":5}},"79":{"start":{"line":222,"column":6},"end":{"line":222,"column":57}},"80":{"start":{"line":224,"column":4},"end":{"line":236,"column":5}},"81":{"start":{"line":225,"column":21},"end":{"line":225,"column":48}},"82":{"start":{"line":226,"column":6},"end":{"line":228,"column":7}},"83":{"start":{"line":227,"column":8},"end":{"line":227,"column":23}},"84":{"start":{"line":229,"column":11},"end":{"line":236,"column":5}},"85":{"start":{"line":230,"column":6},"end":{"line":230,"column":13}},"86":{"start":{"line":231,"column":11},"end":{"line":236,"column":5}},"87":{"start":{"line":232,"column":21},"end":{"line":232,"column":48}},"88":{"start":{"line":233,"column":6},"end":{"line":235,"column":7}},"89":{"start":{"line":234,"column":8},"end":{"line":234,"column":28}},"90":{"start":{"line":237,"column":4},"end":{"line":237,"column":22}},"91":{"start":{"line":240,"column":24},"end":{"line":240,"column":78}},"92":{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},"93":{"start":{"line":242,"column":6},"end":{"line":242,"column":51}},"94":{"start":{"line":245,"column":4},"end":{"line":249,"column":5}},"95":{"start":{"line":246,"column":6},"end":{"line":246,"column":80}},"96":{"start":{"line":248,"column":6},"end":{"line":248,"column":80}},"97":{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},"98":{"start":{"line":251,"column":6},"end":{"line":251,"column":41}},"99":{"start":{"line":253,"column":4},"end":{"line":253,"column":23}},"100":{"start":{"line":256,"column":4},"end":{"line":258,"column":5}},"101":{"start":{"line":257,"column":6},"end":{"line":257,"column":51}},"102":{"start":{"line":259,"column":4},"end":{"line":259,"column":64}},"103":{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},"104":{"start":{"line":263,"column":6},"end":{"line":263,"column":51}},"105":{"start":{"line":265,"column":4},"end":{"line":265,"column":97}},"106":{"start":{"line":268,"column":29},"end":{"line":268,"column":76}},"107":{"start":{"line":269,"column":4},"end":{"line":271,"column":5}},"108":{"start":{"line":270,"column":6},"end":{"line":270,"column":54}},"109":{"start":{"line":272,"column":4},"end":{"line":272,"column":51}},"110":{"start":{"line":275,"column":29},"end":{"line":275,"column":97}},"111":{"start":{"line":276,"column":4},"end":{"line":278,"column":5}},"112":{"start":{"line":277,"column":6},"end":{"line":277,"column":54}},"113":{"start":{"line":279,"column":4},"end":{"line":279,"column":51}},"114":{"start":{"line":282,"column":21},"end":{"line":282,"column":71}},"115":{"start":{"line":283,"column":4},"end":{"line":285,"column":5}},"116":{"start":{"line":284,"column":6},"end":{"line":284,"column":51}},"117":{"start":{"line":286,"column":24},"end":{"line":286,"column":98}},"118":{"start":{"line":287,"column":4},"end":{"line":289,"column":5}},"119":{"start":{"line":288,"column":6},"end":{"line":288,"column":51}},"120":{"start":{"line":290,"column":4},"end":{"line":290,"column":23}},"121":{"start":{"line":293,"column":24},"end":{"line":293,"column":78}},"122":{"start":{"line":294,"column":4},"end":{"line":296,"column":5}},"123":{"start":{"line":295,"column":6},"end":{"line":295,"column":51}},"124":{"start":{"line":297,"column":4},"end":{"line":299,"column":5}},"125":{"start":{"line":298,"column":6},"end":{"line":298,"column":63}},"126":{"start":{"line":300,"column":4},"end":{"line":300,"column":69}},"127":{"start":{"line":303,"column":24},"end":{"line":303,"column":50}},"128":{"start":{"line":305,"column":4},"end":{"line":309,"column":5}},"129":{"start":{"line":306,"column":6},"end":{"line":306,"column":52}},"130":{"start":{"line":308,"column":6},"end":{"line":308,"column":51}},"131":{"start":{"line":310,"column":4},"end":{"line":312,"column":5}},"132":{"start":{"line":311,"column":6},"end":{"line":311,"column":51}},"133":{"start":{"line":313,"column":4},"end":{"line":315,"column":5}},"134":{"start":{"line":314,"column":6},"end":{"line":314,"column":65}},"135":{"start":{"line":316,"column":4},"end":{"line":316,"column":77}},"136":{"start":{"line":319,"column":24},"end":{"line":319,"column":71}},"137":{"start":{"line":321,"column":4},"end":{"line":325,"column":5}},"138":{"start":{"line":322,"column":6},"end":{"line":322,"column":52}},"139":{"start":{"line":324,"column":6},"end":{"line":324,"column":51}},"140":{"start":{"line":326,"column":4},"end":{"line":328,"column":5}},"141":{"start":{"line":327,"column":6},"end":{"line":327,"column":51}},"142":{"start":{"line":329,"column":4},"end":{"line":331,"column":5}},"143":{"start":{"line":330,"column":6},"end":{"line":330,"column":65}},"144":{"start":{"line":332,"column":4},"end":{"line":332,"column":77}},"145":{"start":{"line":335,"column":21},"end":{"line":335,"column":71}},"146":{"start":{"line":336,"column":4},"end":{"line":338,"column":5}},"147":{"start":{"line":337,"column":6},"end":{"line":337,"column":51}},"148":{"start":{"line":339,"column":4},"end":{"line":341,"column":5}},"149":{"start":{"line":340,"column":6},"end":{"line":340,"column":65}},"150":{"start":{"line":342,"column":4},"end":{"line":342,"column":77}},"151":{"start":{"line":345,"column":26},"end":{"line":345,"column":28}},"152":{"start":{"line":346,"column":4},"end":{"line":346,"column":26}},"153":{"start":{"line":347,"column":4},"end":{"line":377,"column":5}},"154":{"start":{"line":347,"column":17},"end":{"line":347,"column":18}},"155":{"start":{"line":348,"column":20},"end":{"line":348,"column":31}},"156":{"start":{"line":349,"column":6},"end":{"line":351,"column":7}},"157":{"start":{"line":350,"column":8},"end":{"line":350,"column":55}},"158":{"start":{"line":352,"column":6},"end":{"line":354,"column":7}},"159":{"start":{"line":353,"column":8},"end":{"line":353,"column":23}},"160":{"start":{"line":355,"column":6},"end":{"line":376,"column":7}},"161":{"start":{"line":357,"column":8},"end":{"line":370,"column":11}},"162":{"start":{"line":358,"column":10},"end":{"line":360,"column":11}},"163":{"start":{"line":359,"column":12},"end":{"line":359,"column":24}},"164":{"start":{"line":361,"column":10},"end":{"line":363,"column":11}},"165":{"start":{"line":362,"column":12},"end":{"line":362,"column":24}},"166":{"start":{"line":364,"column":10},"end":{"line":364,"column":73}},"167":{"start":{"line":365,"column":10},"end":{"line":368,"column":11}},"168":{"start":{"line":366,"column":12},"end":{"line":366,"column":37}},"169":{"start":{"line":367,"column":12},"end":{"line":367,"column":25}},"170":{"start":{"line":369,"column":10},"end":{"line":369,"column":45}},"171":{"start":{"line":371,"column":8},"end":{"line":373,"column":9}},"172":{"start":{"line":372,"column":10},"end":{"line":372,"column":28}},"173":{"start":{"line":375,"column":8},"end":{"line":375,"column":39}},"174":{"start":{"line":378,"column":4},"end":{"line":378,"column":69}},"175":{"start":{"line":381,"column":4},"end":{"line":383,"column":5}},"176":{"start":{"line":382,"column":6},"end":{"line":382,"column":50}},"177":{"start":{"line":384,"column":4},"end":{"line":387,"column":5}},"178":{"start":{"line":385,"column":20},"end":{"line":385,"column":50}},"179":{"start":{"line":386,"column":6},"end":{"line":386,"column":78}},"180":{"start":{"line":388,"column":4},"end":{"line":388,"column":23}},"181":{"start":{"line":391,"column":19},"end":{"line":391,"column":46}},"182":{"start":{"line":392,"column":20},"end":{"line":392,"column":54}},"183":{"start":{"line":393,"column":22},"end":{"line":393,"column":52}},"184":{"start":{"line":394,"column":26},"end":{"line":398,"column":5}},"185":{"start":{"line":399,"column":18},"end":{"line":399,"column":58}},"186":{"start":{"line":401,"column":4},"end":{"line":409,"column":5}},"187":{"start":{"line":402,"column":6},"end":{"line":402,"column":55}},"188":{"start":{"line":403,"column":11},"end":{"line":409,"column":5}},"189":{"start":{"line":404,"column":6},"end":{"line":404,"column":54}},"190":{"start":{"line":405,"column":11},"end":{"line":409,"column":5}},"191":{"start":{"line":406,"column":6},"end":{"line":406,"column":57}},"192":{"start":{"line":408,"column":6},"end":{"line":408,"column":73}},"193":{"start":{"line":410,"column":4},"end":{"line":410,"column":65}},"194":{"start":{"line":413,"column":4},"end":{"line":415,"column":5}},"195":{"start":{"line":414,"column":6},"end":{"line":414,"column":52}},"196":{"start":{"line":416,"column":4},"end":{"line":416,"column":41}},"197":{"start":{"line":417,"column":4},"end":{"line":417,"column":45}},"198":{"start":{"line":418,"column":4},"end":{"line":418,"column":48}},"199":{"start":{"line":419,"column":4},"end":{"line":419,"column":54}},"200":{"start":{"line":420,"column":4},"end":{"line":420,"column":72}},"201":{"start":{"line":421,"column":4},"end":{"line":421,"column":86}},"202":{"start":{"line":422,"column":4},"end":{"line":422,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":2},"end":{"line":15,"column":3}},"loc":{"start":{"line":15,"column":21},"end":{"line":17,"column":3}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":61,"column":2},"end":{"line":61,"column":3}},"loc":{"start":{"line":61,"column":13},"end":{"line":63,"column":3}},"line":61},"2":{"name":"(anonymous_2)","decl":{"start":{"line":64,"column":2},"end":{"line":64,"column":3}},"loc":{"start":{"line":64,"column":15},"end":{"line":66,"column":3}},"line":64},"3":{"name":"(anonymous_3)","decl":{"start":{"line":67,"column":2},"end":{"line":67,"column":3}},"loc":{"start":{"line":67,"column":18},"end":{"line":69,"column":3}},"line":67},"4":{"name":"(anonymous_4)","decl":{"start":{"line":70,"column":2},"end":{"line":70,"column":3}},"loc":{"start":{"line":70,"column":12},"end":{"line":72,"column":3}},"line":70},"5":{"name":"(anonymous_5)","decl":{"start":{"line":73,"column":2},"end":{"line":73,"column":3}},"loc":{"start":{"line":73,"column":15},"end":{"line":75,"column":3}},"line":73},"6":{"name":"(anonymous_6)","decl":{"start":{"line":76,"column":2},"end":{"line":76,"column":3}},"loc":{"start":{"line":76,"column":12},"end":{"line":77,"column":3}},"line":76},"7":{"name":"(anonymous_7)","decl":{"start":{"line":84,"column":2},"end":{"line":84,"column":3}},"loc":{"start":{"line":84,"column":23},"end":{"line":92,"column":3}},"line":84},"8":{"name":"(anonymous_8)","decl":{"start":{"line":89,"column":53},"end":{"line":89,"column":54}},"loc":{"start":{"line":89,"column":64},"end":{"line":91,"column":5}},"line":89},"9":{"name":"(anonymous_9)","decl":{"start":{"line":93,"column":2},"end":{"line":93,"column":3}},"loc":{"start":{"line":93,"column":32},"end":{"line":95,"column":3}},"line":93},"10":{"name":"(anonymous_10)","decl":{"start":{"line":96,"column":2},"end":{"line":96,"column":3}},"loc":{"start":{"line":96,"column":14},"end":{"line":98,"column":3}},"line":96},"11":{"name":"(anonymous_11)","decl":{"start":{"line":99,"column":2},"end":{"line":99,"column":3}},"loc":{"start":{"line":99,"column":20},"end":{"line":101,"column":3}},"line":99},"12":{"name":"(anonymous_12)","decl":{"start":{"line":102,"column":2},"end":{"line":102,"column":3}},"loc":{"start":{"line":102,"column":18},"end":{"line":107,"column":3}},"line":102},"13":{"name":"(anonymous_13)","decl":{"start":{"line":108,"column":2},"end":{"line":108,"column":3}},"loc":{"start":{"line":111,"column":5},"end":{"line":114,"column":3}},"line":111},"14":{"name":"(anonymous_14)","decl":{"start":{"line":115,"column":2},"end":{"line":115,"column":3}},"loc":{"start":{"line":115,"column":41},"end":{"line":117,"column":3}},"line":115},"15":{"name":"(anonymous_15)","decl":{"start":{"line":118,"column":2},"end":{"line":118,"column":3}},"loc":{"start":{"line":118,"column":48},"end":{"line":121,"column":3}},"line":118},"16":{"name":"(anonymous_16)","decl":{"start":{"line":122,"column":2},"end":{"line":122,"column":3}},"loc":{"start":{"line":122,"column":12},"end":{"line":124,"column":3}},"line":122},"17":{"name":"(anonymous_17)","decl":{"start":{"line":125,"column":2},"end":{"line":125,"column":3}},"loc":{"start":{"line":125,"column":14},"end":{"line":127,"column":3}},"line":125},"18":{"name":"(anonymous_18)","decl":{"start":{"line":128,"column":2},"end":{"line":128,"column":3}},"loc":{"start":{"line":128,"column":13},"end":{"line":130,"column":3}},"line":128},"19":{"name":"(anonymous_19)","decl":{"start":{"line":131,"column":2},"end":{"line":131,"column":3}},"loc":{"start":{"line":131,"column":45},"end":{"line":136,"column":3}},"line":131},"20":{"name":"(anonymous_20)","decl":{"start":{"line":137,"column":2},"end":{"line":137,"column":3}},"loc":{"start":{"line":137,"column":26},"end":{"line":139,"column":3}},"line":137},"21":{"name":"(anonymous_21)","decl":{"start":{"line":140,"column":2},"end":{"line":140,"column":3}},"loc":{"start":{"line":140,"column":20},"end":{"line":142,"column":3}},"line":140},"22":{"name":"(anonymous_22)","decl":{"start":{"line":143,"column":2},"end":{"line":143,"column":3}},"loc":{"start":{"line":143,"column":26},"end":{"line":145,"column":3}},"line":143},"23":{"name":"(anonymous_23)","decl":{"start":{"line":152,"column":2},"end":{"line":152,"column":3}},"loc":{"start":{"line":152,"column":47},"end":{"line":175,"column":3}},"line":152},"24":{"name":"(anonymous_24)","decl":{"start":{"line":188,"column":2},"end":{"line":188,"column":3}},"loc":{"start":{"line":188,"column":45},"end":{"line":210,"column":3}},"line":188},"25":{"name":"(anonymous_25)","decl":{"start":{"line":216,"column":2},"end":{"line":216,"column":3}},"loc":{"start":{"line":216,"column":38},"end":{"line":238,"column":3}},"line":216},"26":{"name":"(anonymous_26)","decl":{"start":{"line":239,"column":2},"end":{"line":239,"column":3}},"loc":{"start":{"line":239,"column":71},"end":{"line":254,"column":3}},"line":239},"27":{"name":"(anonymous_27)","decl":{"start":{"line":255,"column":2},"end":{"line":255,"column":3}},"loc":{"start":{"line":255,"column":27},"end":{"line":260,"column":3}},"line":255},"28":{"name":"(anonymous_28)","decl":{"start":{"line":261,"column":2},"end":{"line":261,"column":3}},"loc":{"start":{"line":261,"column":26},"end":{"line":266,"column":3}},"line":261},"29":{"name":"(anonymous_29)","decl":{"start":{"line":267,"column":2},"end":{"line":267,"column":3}},"loc":{"start":{"line":267,"column":63},"end":{"line":273,"column":3}},"line":267},"30":{"name":"(anonymous_30)","decl":{"start":{"line":274,"column":2},"end":{"line":274,"column":3}},"loc":{"start":{"line":274,"column":63},"end":{"line":280,"column":3}},"line":274},"31":{"name":"(anonymous_31)","decl":{"start":{"line":281,"column":2},"end":{"line":281,"column":3}},"loc":{"start":{"line":281,"column":102},"end":{"line":291,"column":3}},"line":281},"32":{"name":"(anonymous_32)","decl":{"start":{"line":292,"column":2},"end":{"line":292,"column":3}},"loc":{"start":{"line":292,"column":87},"end":{"line":301,"column":3}},"line":292},"33":{"name":"(anonymous_33)","decl":{"start":{"line":302,"column":2},"end":{"line":302,"column":3}},"loc":{"start":{"line":302,"column":79},"end":{"line":317,"column":3}},"line":302},"34":{"name":"(anonymous_34)","decl":{"start":{"line":318,"column":2},"end":{"line":318,"column":3}},"loc":{"start":{"line":318,"column":79},"end":{"line":333,"column":3}},"line":318},"35":{"name":"(anonymous_35)","decl":{"start":{"line":334,"column":2},"end":{"line":334,"column":3}},"loc":{"start":{"line":334,"column":118},"end":{"line":343,"column":3}},"line":334},"36":{"name":"(anonymous_36)","decl":{"start":{"line":344,"column":2},"end":{"line":344,"column":3}},"loc":{"start":{"line":344,"column":60},"end":{"line":379,"column":3}},"line":344},"37":{"name":"(anonymous_37)","decl":{"start":{"line":357,"column":25},"end":{"line":357,"column":26}},"loc":{"start":{"line":357,"column":42},"end":{"line":370,"column":9}},"line":357},"38":{"name":"(anonymous_38)","decl":{"start":{"line":380,"column":2},"end":{"line":380,"column":3}},"loc":{"start":{"line":380,"column":46},"end":{"line":389,"column":3}},"line":380},"39":{"name":"(anonymous_39)","decl":{"start":{"line":390,"column":2},"end":{"line":390,"column":3}},"loc":{"start":{"line":390,"column":42},"end":{"line":411,"column":3}},"line":390},"40":{"name":"(anonymous_40)","decl":{"start":{"line":412,"column":2},"end":{"line":412,"column":3}},"loc":{"start":{"line":412,"column":42},"end":{"line":423,"column":3}},"line":412}},"branchMap":{"0":{"loc":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},{"start":{},"end":{}}],"line":86},"1":{"loc":{"start":{"line":144,"column":11},"end":{"line":144,"column":86}},"type":"binary-expr","locations":[{"start":{"line":144,"column":11},"end":{"line":144,"column":38}},{"start":{"line":144,"column":42},"end":{"line":144,"column":65}},{"start":{"line":144,"column":69},"end":{"line":144,"column":86}}],"line":144},"2":{"loc":{"start":{"line":152,"column":29},"end":{"line":152,"column":45}},"type":"default-arg","locations":[{"start":{"line":152,"column":44},"end":{"line":152,"column":45}}],"line":152},"3":{"loc":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},{"start":{},"end":{}}],"line":154},"4":{"loc":{"start":{"line":157,"column":4},"end":{"line":163,"column":5}},"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":163,"column":5}},{"start":{},"end":{}}],"line":157},"5":{"loc":{"start":{"line":159,"column":6},"end":{"line":161,"column":7}},"type":"if","locations":[{"start":{"line":159,"column":6},"end":{"line":161,"column":7}},{"start":{},"end":{}}],"line":159},"6":{"loc":{"start":{"line":164,"column":4},"end":{"line":173,"column":5}},"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":173,"column":5}},{"start":{"line":170,"column":11},"end":{"line":173,"column":5}}],"line":164},"7":{"loc":{"start":{"line":166,"column":6},"end":{"line":168,"column":7}},"type":"if","locations":[{"start":{"line":166,"column":6},"end":{"line":168,"column":7}},{"start":{},"end":{}}],"line":166},"8":{"loc":{"start":{"line":170,"column":11},"end":{"line":173,"column":5}},"type":"if","locations":[{"start":{"line":170,"column":11},"end":{"line":173,"column":5}},{"start":{},"end":{}}],"line":170},"9":{"loc":{"start":{"line":189,"column":4},"end":{"line":191,"column":5}},"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":191,"column":5}},{"start":{},"end":{}}],"line":189},"10":{"loc":{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},{"start":{},"end":{}}],"line":193},"11":{"loc":{"start":{"line":196,"column":4},"end":{"line":208,"column":5}},"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":208,"column":5}},{"start":{"line":201,"column":11},"end":{"line":208,"column":5}}],"line":196},"12":{"loc":{"start":{"line":198,"column":6},"end":{"line":200,"column":7}},"type":"if","locations":[{"start":{"line":198,"column":6},"end":{"line":200,"column":7}},{"start":{},"end":{}}],"line":198},"13":{"loc":{"start":{"line":201,"column":11},"end":{"line":208,"column":5}},"type":"if","locations":[{"start":{"line":201,"column":11},"end":{"line":208,"column":5}},{"start":{"line":203,"column":11},"end":{"line":208,"column":5}}],"line":201},"14":{"loc":{"start":{"line":203,"column":11},"end":{"line":208,"column":5}},"type":"if","locations":[{"start":{"line":203,"column":11},"end":{"line":208,"column":5}},{"start":{},"end":{}}],"line":203},"15":{"loc":{"start":{"line":205,"column":6},"end":{"line":207,"column":7}},"type":"if","locations":[{"start":{"line":205,"column":6},"end":{"line":207,"column":7}},{"start":{},"end":{}}],"line":205},"16":{"loc":{"start":{"line":217,"column":4},"end":{"line":219,"column":5}},"type":"if","locations":[{"start":{"line":217,"column":4},"end":{"line":219,"column":5}},{"start":{},"end":{}}],"line":217},"17":{"loc":{"start":{"line":221,"column":4},"end":{"line":223,"column":5}},"type":"if","locations":[{"start":{"line":221,"column":4},"end":{"line":223,"column":5}},{"start":{},"end":{}}],"line":221},"18":{"loc":{"start":{"line":224,"column":4},"end":{"line":236,"column":5}},"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":236,"column":5}},{"start":{"line":229,"column":11},"end":{"line":236,"column":5}}],"line":224},"19":{"loc":{"start":{"line":226,"column":6},"end":{"line":228,"column":7}},"type":"if","locations":[{"start":{"line":226,"column":6},"end":{"line":228,"column":7}},{"start":{},"end":{}}],"line":226},"20":{"loc":{"start":{"line":229,"column":11},"end":{"line":236,"column":5}},"type":"if","locations":[{"start":{"line":229,"column":11},"end":{"line":236,"column":5}},{"start":{"line":231,"column":11},"end":{"line":236,"column":5}}],"line":229},"21":{"loc":{"start":{"line":231,"column":11},"end":{"line":236,"column":5}},"type":"if","locations":[{"start":{"line":231,"column":11},"end":{"line":236,"column":5}},{"start":{},"end":{}}],"line":231},"22":{"loc":{"start":{"line":233,"column":6},"end":{"line":235,"column":7}},"type":"if","locations":[{"start":{"line":233,"column":6},"end":{"line":235,"column":7}},{"start":{},"end":{}}],"line":233},"23":{"loc":{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},{"start":{},"end":{}}],"line":241},"24":{"loc":{"start":{"line":245,"column":4},"end":{"line":249,"column":5}},"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":249,"column":5}},{"start":{"line":247,"column":11},"end":{"line":249,"column":5}}],"line":245},"25":{"loc":{"start":{"line":246,"column":20},"end":{"line":246,"column":79}},"type":"binary-expr","locations":[{"start":{"line":246,"column":20},"end":{"line":246,"column":51}},{"start":{"line":246,"column":55},"end":{"line":246,"column":79}}],"line":246},"26":{"loc":{"start":{"line":248,"column":20},"end":{"line":248,"column":79}},"type":"binary-expr","locations":[{"start":{"line":248,"column":20},"end":{"line":248,"column":51}},{"start":{"line":248,"column":55},"end":{"line":248,"column":79}}],"line":248},"27":{"loc":{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},{"start":{},"end":{}}],"line":250},"28":{"loc":{"start":{"line":256,"column":4},"end":{"line":258,"column":5}},"type":"if","locations":[{"start":{"line":256,"column":4},"end":{"line":258,"column":5}},{"start":{},"end":{}}],"line":256},"29":{"loc":{"start":{"line":259,"column":11},"end":{"line":259,"column":63}},"type":"binary-expr","locations":[{"start":{"line":259,"column":11},"end":{"line":259,"column":22}},{"start":{"line":259,"column":26},"end":{"line":259,"column":63}}],"line":259},"30":{"loc":{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},{"start":{},"end":{}}],"line":262},"31":{"loc":{"start":{"line":265,"column":11},"end":{"line":265,"column":96}},"type":"binary-expr","locations":[{"start":{"line":265,"column":11},"end":{"line":265,"column":55}},{"start":{"line":265,"column":59},"end":{"line":265,"column":96}}],"line":265},"32":{"loc":{"start":{"line":267,"column":47},"end":{"line":267,"column":61}},"type":"default-arg","locations":[{"start":{"line":267,"column":57},"end":{"line":267,"column":61}}],"line":267},"33":{"loc":{"start":{"line":269,"column":4},"end":{"line":271,"column":5}},"type":"if","locations":[{"start":{"line":269,"column":4},"end":{"line":271,"column":5}},{"start":{},"end":{}}],"line":269},"34":{"loc":{"start":{"line":274,"column":47},"end":{"line":274,"column":61}},"type":"default-arg","locations":[{"start":{"line":274,"column":57},"end":{"line":274,"column":61}}],"line":274},"35":{"loc":{"start":{"line":276,"column":4},"end":{"line":278,"column":5}},"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":278,"column":5}},{"start":{},"end":{}}],"line":276},"36":{"loc":{"start":{"line":281,"column":47},"end":{"line":281,"column":84}},"type":"default-arg","locations":[{"start":{"line":281,"column":60},"end":{"line":281,"column":84}}],"line":281},"37":{"loc":{"start":{"line":281,"column":86},"end":{"line":281,"column":100}},"type":"default-arg","locations":[{"start":{"line":281,"column":95},"end":{"line":281,"column":100}}],"line":281},"38":{"loc":{"start":{"line":283,"column":4},"end":{"line":285,"column":5}},"type":"if","locations":[{"start":{"line":283,"column":4},"end":{"line":285,"column":5}},{"start":{},"end":{}}],"line":283},"39":{"loc":{"start":{"line":286,"column":24},"end":{"line":286,"column":98}},"type":"binary-expr","locations":[{"start":{"line":286,"column":24},"end":{"line":286,"column":70}},{"start":{"line":286,"column":74},"end":{"line":286,"column":98}}],"line":286},"40":{"loc":{"start":{"line":287,"column":4},"end":{"line":289,"column":5}},"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":289,"column":5}},{"start":{},"end":{}}],"line":287},"41":{"loc":{"start":{"line":292,"column":54},"end":{"line":292,"column":62}},"type":"default-arg","locations":[{"start":{"line":292,"column":61},"end":{"line":292,"column":62}}],"line":292},"42":{"loc":{"start":{"line":294,"column":4},"end":{"line":296,"column":5}},"type":"if","locations":[{"start":{"line":294,"column":4},"end":{"line":296,"column":5}},{"start":{},"end":{}}],"line":294},"43":{"loc":{"start":{"line":297,"column":4},"end":{"line":299,"column":5}},"type":"if","locations":[{"start":{"line":297,"column":4},"end":{"line":299,"column":5}},{"start":{},"end":{}}],"line":297},"44":{"loc":{"start":{"line":302,"column":53},"end":{"line":302,"column":67}},"type":"default-arg","locations":[{"start":{"line":302,"column":63},"end":{"line":302,"column":67}}],"line":302},"45":{"loc":{"start":{"line":302,"column":69},"end":{"line":302,"column":77}},"type":"default-arg","locations":[{"start":{"line":302,"column":76},"end":{"line":302,"column":77}}],"line":302},"46":{"loc":{"start":{"line":305,"column":4},"end":{"line":309,"column":5}},"type":"if","locations":[{"start":{"line":305,"column":4},"end":{"line":309,"column":5}},{"start":{"line":307,"column":11},"end":{"line":309,"column":5}}],"line":305},"47":{"loc":{"start":{"line":310,"column":4},"end":{"line":312,"column":5}},"type":"if","locations":[{"start":{"line":310,"column":4},"end":{"line":312,"column":5}},{"start":{},"end":{}}],"line":310},"48":{"loc":{"start":{"line":313,"column":4},"end":{"line":315,"column":5}},"type":"if","locations":[{"start":{"line":313,"column":4},"end":{"line":315,"column":5}},{"start":{},"end":{}}],"line":313},"49":{"loc":{"start":{"line":318,"column":53},"end":{"line":318,"column":67}},"type":"default-arg","locations":[{"start":{"line":318,"column":63},"end":{"line":318,"column":67}}],"line":318},"50":{"loc":{"start":{"line":318,"column":69},"end":{"line":318,"column":77}},"type":"default-arg","locations":[{"start":{"line":318,"column":76},"end":{"line":318,"column":77}}],"line":318},"51":{"loc":{"start":{"line":321,"column":4},"end":{"line":325,"column":5}},"type":"if","locations":[{"start":{"line":321,"column":4},"end":{"line":325,"column":5}},{"start":{"line":323,"column":11},"end":{"line":325,"column":5}}],"line":321},"52":{"loc":{"start":{"line":326,"column":4},"end":{"line":328,"column":5}},"type":"if","locations":[{"start":{"line":326,"column":4},"end":{"line":328,"column":5}},{"start":{},"end":{}}],"line":326},"53":{"loc":{"start":{"line":329,"column":4},"end":{"line":331,"column":5}},"type":"if","locations":[{"start":{"line":329,"column":4},"end":{"line":331,"column":5}},{"start":{},"end":{}}],"line":329},"54":{"loc":{"start":{"line":334,"column":53},"end":{"line":334,"column":90}},"type":"default-arg","locations":[{"start":{"line":334,"column":66},"end":{"line":334,"column":90}}],"line":334},"55":{"loc":{"start":{"line":334,"column":92},"end":{"line":334,"column":106}},"type":"default-arg","locations":[{"start":{"line":334,"column":101},"end":{"line":334,"column":106}}],"line":334},"56":{"loc":{"start":{"line":334,"column":108},"end":{"line":334,"column":116}},"type":"default-arg","locations":[{"start":{"line":334,"column":115},"end":{"line":334,"column":116}}],"line":334},"57":{"loc":{"start":{"line":336,"column":4},"end":{"line":338,"column":5}},"type":"if","locations":[{"start":{"line":336,"column":4},"end":{"line":338,"column":5}},{"start":{},"end":{}}],"line":336},"58":{"loc":{"start":{"line":339,"column":4},"end":{"line":341,"column":5}},"type":"if","locations":[{"start":{"line":339,"column":4},"end":{"line":341,"column":5}},{"start":{},"end":{}}],"line":339},"59":{"loc":{"start":{"line":344,"column":25},"end":{"line":344,"column":58}},"type":"default-arg","locations":[{"start":{"line":344,"column":54},"end":{"line":344,"column":58}}],"line":344},"60":{"loc":{"start":{"line":349,"column":6},"end":{"line":351,"column":7}},"type":"if","locations":[{"start":{"line":349,"column":6},"end":{"line":351,"column":7}},{"start":{},"end":{}}],"line":349},"61":{"loc":{"start":{"line":349,"column":10},"end":{"line":349,"column":71}},"type":"binary-expr","locations":[{"start":{"line":349,"column":10},"end":{"line":349,"column":28}},{"start":{"line":349,"column":32},"end":{"line":349,"column":51}},{"start":{"line":349,"column":55},"end":{"line":349,"column":71}}],"line":349},"62":{"loc":{"start":{"line":352,"column":6},"end":{"line":354,"column":7}},"type":"if","locations":[{"start":{"line":352,"column":6},"end":{"line":354,"column":7}},{"start":{},"end":{}}],"line":352},"63":{"loc":{"start":{"line":355,"column":6},"end":{"line":376,"column":7}},"type":"if","locations":[{"start":{"line":355,"column":6},"end":{"line":376,"column":7}},{"start":{"line":374,"column":13},"end":{"line":376,"column":7}}],"line":355},"64":{"loc":{"start":{"line":358,"column":10},"end":{"line":360,"column":11}},"type":"if","locations":[{"start":{"line":358,"column":10},"end":{"line":360,"column":11}},{"start":{},"end":{}}],"line":358},"65":{"loc":{"start":{"line":358,"column":14},"end":{"line":358,"column":57}},"type":"binary-expr","locations":[{"start":{"line":358,"column":14},"end":{"line":358,"column":33}},{"start":{"line":358,"column":37},"end":{"line":358,"column":57}}],"line":358},"66":{"loc":{"start":{"line":361,"column":10},"end":{"line":363,"column":11}},"type":"if","locations":[{"start":{"line":361,"column":10},"end":{"line":363,"column":11}},{"start":{},"end":{}}],"line":361},"67":{"loc":{"start":{"line":361,"column":14},"end":{"line":361,"column":95}},"type":"binary-expr","locations":[{"start":{"line":361,"column":14},"end":{"line":361,"column":40}},{"start":{"line":361,"column":45},"end":{"line":361,"column":67}},{"start":{"line":361,"column":71},"end":{"line":361,"column":94}}],"line":361},"68":{"loc":{"start":{"line":365,"column":10},"end":{"line":368,"column":11}},"type":"if","locations":[{"start":{"line":365,"column":10},"end":{"line":368,"column":11}},{"start":{},"end":{}}],"line":365},"69":{"loc":{"start":{"line":371,"column":8},"end":{"line":373,"column":9}},"type":"if","locations":[{"start":{"line":371,"column":8},"end":{"line":373,"column":9}},{"start":{},"end":{}}],"line":371},"70":{"loc":{"start":{"line":381,"column":4},"end":{"line":383,"column":5}},"type":"if","locations":[{"start":{"line":381,"column":4},"end":{"line":383,"column":5}},{"start":{},"end":{}}],"line":381},"71":{"loc":{"start":{"line":384,"column":4},"end":{"line":387,"column":5}},"type":"if","locations":[{"start":{"line":384,"column":4},"end":{"line":387,"column":5}},{"start":{},"end":{}}],"line":384},"72":{"loc":{"start":{"line":386,"column":45},"end":{"line":386,"column":76}},"type":"cond-expr","locations":[{"start":{"line":386,"column":67},"end":{"line":386,"column":68}},{"start":{"line":386,"column":71},"end":{"line":386,"column":76}}],"line":386},"73":{"loc":{"start":{"line":392,"column":20},"end":{"line":392,"column":54}},"type":"binary-expr","locations":[{"start":{"line":392,"column":20},"end":{"line":392,"column":48}},{"start":{"line":392,"column":52},"end":{"line":392,"column":54}}],"line":392},"74":{"loc":{"start":{"line":401,"column":4},"end":{"line":409,"column":5}},"type":"if","locations":[{"start":{"line":401,"column":4},"end":{"line":409,"column":5}},{"start":{"line":403,"column":11},"end":{"line":409,"column":5}}],"line":401},"75":{"loc":{"start":{"line":403,"column":11},"end":{"line":409,"column":5}},"type":"if","locations":[{"start":{"line":403,"column":11},"end":{"line":409,"column":5}},{"start":{"line":405,"column":11},"end":{"line":409,"column":5}}],"line":403},"76":{"loc":{"start":{"line":405,"column":11},"end":{"line":409,"column":5}},"type":"if","locations":[{"start":{"line":405,"column":11},"end":{"line":409,"column":5}},{"start":{"line":407,"column":11},"end":{"line":409,"column":5}}],"line":405},"77":{"loc":{"start":{"line":413,"column":4},"end":{"line":415,"column":5}},"type":"if","locations":[{"start":{"line":413,"column":4},"end":{"line":415,"column":5}},{"start":{},"end":{}}],"line":413},"78":{"loc":{"start":{"line":413,"column":8},"end":{"line":413,"column":53}},"type":"binary-expr","locations":[{"start":{"line":413,"column":8},"end":{"line":413,"column":27}},{"start":{"line":413,"column":31},"end":{"line":413,"column":53}}],"line":413}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"0":[0,0],"1":[0,0,0],"2":[0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0],"33":[0,0],"34":[0],"35":[0,0],"36":[0],"37":[0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0],"42":[0,0],"43":[0,0],"44":[0],"45":[0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0],"50":[0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0],"55":[0],"56":[0],"57":[0,0],"58":[0,0],"59":[0],"60":[0,0],"61":[0,0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/base-function.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, LocaleType, Nullable } from '@univerjs/core';\nimport type { IFunctionNames } from '../basics/function';\nimport type { BaseReferenceObject, FunctionVariantType, NodeValueType } from '../engine/reference-object/base-reference-object';\nimport type { ArrayBinarySearchType } from '../engine/utils/compare';\nimport type { ArrayValueObject } from '../engine/value-object/array-value-object';\nimport type { FormulaFunctionResultValueType, FormulaFunctionValueType } from '../engine/value-object/primitive-object';\nimport type { FormulaDataModel } from '../models/formula-data.model';\nimport type { IDefinedNameMapItem } from '../services/defined-names.service';\nimport { ErrorType } from '../basics/error-type';\nimport { regexTestSingeRange, regexTestSingleColumn, regexTestSingleRow } from '../basics/regex';\nimport { compareToken } from '../basics/token';\nimport { CellReferenceObject } from '../engine/reference-object/cell-reference-object';\nimport { ColumnReferenceObject } from '../engine/reference-object/column-reference-object';\nimport { RangeReferenceObject } from '../engine/reference-object/range-reference-object';\nimport { RowReferenceObject } from '../engine/reference-object/row-reference-object';\nimport { createNewArray } from '../engine/utils/array-object';\nimport { ArrayOrderSearchType } from '../engine/utils/compare';\nimport { serializeRangeToRefString } from '../engine/utils/reference';\nimport { convertTonNumber } from '../engine/utils/value-object';\nimport { type BaseValueObject, ErrorValueObject } from '../engine/value-object/base-value-object';\nimport { NullValueObject, NumberValueObject } from '../engine/value-object/primitive-object';\n\nexport class BaseFunction {\n    private _unitId: Nullable<string>;\n    private _subUnitId: Nullable<string>;\n    private _row: number = -1;\n    private _column: number = -1;\n    private _definedNames: Nullable<IDefinedNameMapItem>;\n    private _locale: LocaleType;\n    private _sheetOrder: string[];\n    private _sheetNameMap: { [sheetId: string]: string };\n    protected _formulaDataModel: Nullable<FormulaDataModel>;\n    protected _rowCount: number = -1;\n    protected _columnCount: number = -1;\n\n    /**\n     * Whether the function needs to expand the parameters\n     */\n    needsExpandParams: boolean = false;\n\n    /**\n     * Whether the function needs to pass in reference object\n     */\n    needsReferenceObject: boolean = false;\n\n    /**\n     * Whether the function needs handle locale\n     */\n    needsLocale: boolean = false;\n\n    /**\n     * Whether the function needs sheets info\n     */\n    needsSheetsInfo: boolean = false;\n\n    /**\n     * Whether the function needs function methods in FormulaDataModel\n     */\n    needsFormulaDataModel: boolean = false;\n\n    /**\n     * Whether the function needs the number of rows and columns in the sheet\n     */\n    needsSheetRowColumnCount: boolean = false;\n\n    /**\n     * Minimum number of parameters\n     */\n    minParams: number = -1;\n\n    /**\n     * Maximum number of parameters\n     */\n    maxParams: number = -1;\n\n    constructor(private _name: IFunctionNames) {\n\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get unitId() {\n        return this._unitId;\n    }\n\n    get subUnitId() {\n        return this._subUnitId;\n    }\n\n    get row() {\n        return this._row;\n    }\n\n    get column() {\n        return this._column;\n    }\n\n    dispose() {\n\n    }\n\n    /**\n     * In Excel, to inject a defined name into a function that has positioning capabilities,\n     * such as using the INDIRECT function to reference a named range,\n     * you can write it as follows:\n     * =INDIRECT(\"DefinedName1\")\n     */\n    getDefinedName(name: string) {\n        const nameMap = this._definedNames;\n        if (nameMap == null) {\n            return null;\n        }\n        return Array.from(Object.values(nameMap)).filter((value) => {\n            return value.name === name;\n        })?.[0];\n    }\n\n    setDefinedNames(definedNames: IDefinedNameMapItem) {\n        this._definedNames = definedNames;\n    }\n\n    getLocale() {\n        return this._locale;\n    }\n\n    setLocale(locale: LocaleType) {\n        this._locale = locale;\n    }\n\n    getSheetsInfo() {\n        return {\n            sheetOrder: this._sheetOrder,\n            sheetNameMap: this._sheetNameMap,\n        };\n    }\n\n    setSheetsInfo({\n        sheetOrder,\n        sheetNameMap,\n    }: {\n        sheetOrder: string[];\n        sheetNameMap: { [sheetId: string]: string };\n    }) {\n        this._sheetOrder = sheetOrder;\n        this._sheetNameMap = sheetNameMap;\n    }\n\n    setFormulaDataModel(_formulaDataModel: FormulaDataModel) {\n        this._formulaDataModel = _formulaDataModel;\n    }\n\n    setSheetRowColumnCount(rowCount: number, columnCount: number) {\n        this._rowCount = rowCount;\n        this._columnCount = columnCount;\n    }\n\n    isAsync() {\n        return false;\n    }\n\n    isAddress() {\n        return false;\n    }\n\n    isCustom() {\n        return false;\n    }\n\n    setRefInfo(unitId: string, subUnitId: string, row: number, column: number) {\n        this._unitId = unitId;\n        this._subUnitId = subUnitId;\n        this._row = row;\n        this._column = column;\n    }\n\n    calculateCustom(\n        ...arg: Array<FormulaFunctionValueType>\n    ): FormulaFunctionResultValueType | Promise<FormulaFunctionResultValueType> {\n        return null;\n    }\n\n    calculate(...arg: BaseValueObject[]): NodeValueType {\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    checkArrayType(variant: FunctionVariantType) {\n        return variant.isReferenceObject() || (variant.isValueObject() && (variant as BaseValueObject).isArray());\n    }\n\n    /**\n     * Starting with 1\n     * For instance, The column number (starting with 1 for the left-most column of table_array) that contains the return value.\n     * https://support.microsoft.com/en-us/office/vlookup-function-0bbc8083-26fe-4963-8ab8-93a18ad188a1\n     * @param indexNum\n     */\n    getIndexNumValue(indexNum: BaseValueObject, defaultValue = 1) {\n        let _indexNum = indexNum;\n\n        if (_indexNum.isArray()) {\n            _indexNum = (_indexNum as ArrayValueObject).getFirstCell();\n        }\n\n        if (_indexNum.isBoolean()) {\n            const colIndexNumV = _indexNum.getValue() as boolean;\n            if (colIndexNumV === false) {\n                return ErrorValueObject.create(ErrorType.VALUE);\n            }\n\n            return defaultValue;\n        }\n        if (_indexNum.isString()) {\n            const colIndexNumV = Number(_indexNum.getValue() as string);\n            if (Number.isNaN(colIndexNumV)) {\n                return ErrorValueObject.create(ErrorType.REF);\n            }\n            return colIndexNumV;\n        } else if (_indexNum.isNumber()) {\n            const colIndexNumV = _indexNum.getValue() as number;\n            return colIndexNumV;\n        }\n\n        return ErrorValueObject.create(ErrorType.VALUE);\n    }\n\n    /**\n     * A logical value that specifies 1/TRUE , 0/FALSE, default 1\n     * For instance range_lookup, A logical value that specifies whether you want VLOOKUP to find an approximate or an exact match\n     * Approximate match - 1/TRUE\n     * Exact match - 0/FALSE\n     * https://support.microsoft.com/en-us/office/vlookup-function-0bbc8083-26fe-4963-8ab8-93a18ad188a1\n     * For instance A1, A logical value that specifies what type of reference is contained in the cell ref_text.\n     * If a1 is TRUE or omitted, ref_text is interpreted as an A1-style reference.\n     * If a1 is FALSE, ref_text is interpreted as an R1C1-style reference.\n     * https://support.microsoft.com/zh-cn/office/indirect-%E5%87%BD%E6%95%B0-474b3a3a-8a26-4f44-b491-92b6306fa261\n     * @param logicValueObject\n     */\n    getZeroOrOneByOneDefault(logicValueObject?: BaseValueObject) {\n        if (logicValueObject == null) {\n            return 1;\n        }\n\n        let logicValue = 1;\n\n        if (logicValueObject.isArray()) {\n            logicValueObject = (logicValueObject as ArrayValueObject).getFirstCell();\n        }\n\n        if (logicValueObject.isBoolean()) {\n            const logicV = logicValueObject.getValue() as boolean;\n            if (logicV === false) {\n                logicValue = 0;\n            }\n        } else if (logicValueObject.isString()) {\n            return;\n        } else if (logicValueObject.isNumber()) {\n            const logicV = logicValueObject.getValue() as number;\n            if (logicV === 0) {\n                logicValue = 0;\n            }\n        }\n\n        return logicValue;\n    }\n\n    /**\n     * A logical value that specifies 1/TRUE , 0/FALSE, -1, default 1.\n     * The difference from getZeroOrOneByOneDefault is that we need to get -1\n     * @param logicValueObject\n     */\n    getMatchTypeValue(logicValueObject?: BaseValueObject) {\n        if (logicValueObject == null) {\n            return 1;\n        }\n\n        let logicValue = 1;\n\n        if (logicValueObject.isArray()) {\n            logicValueObject = (logicValueObject as ArrayValueObject).getFirstCell();\n        }\n\n        if (logicValueObject.isBoolean()) {\n            const logicV = logicValueObject.getValue() as boolean;\n            if (logicV === false) {\n                logicValue = 0;\n            }\n        } else if (logicValueObject.isString()) {\n            return;\n        } else if (logicValueObject.isNumber()) {\n            const logicV = logicValueObject.getValue() as number;\n            if (logicV <= 0) {\n                logicValue = logicV;\n            }\n        }\n\n        return logicValue;\n    }\n\n    binarySearch(\n        value: BaseValueObject,\n        searchArray: ArrayValueObject,\n        resultArray: ArrayValueObject,\n        searchType?: ArrayBinarySearchType,\n        matchType?: ArrayOrderSearchType\n    ) {\n        const rowOrColumn = searchArray.binarySearch(value, searchType, matchType);\n\n        if (rowOrColumn == null) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        let resultValue: BaseValueObject;\n\n        if (resultArray.getRowCount() === 1) {\n            resultValue = resultArray.get(0, rowOrColumn) || NullValueObject.create();\n        } else {\n            resultValue = resultArray.get(rowOrColumn, 0) || NullValueObject.create();\n        }\n\n        if (resultValue.isNull()) {\n            // return ErrorValueObject.create(ErrorType.NA);\n            return NumberValueObject.create(0);\n        }\n\n        return resultValue;\n    }\n\n    private _getOneFirstByRaw(array: Nullable<BaseValueObject>[][]) {\n        if (array.length === 0) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        return array[0][0] || ErrorValueObject.create(ErrorType.NA);\n    }\n\n    private _getOneLastByRaw(array: Nullable<BaseValueObject>[][]) {\n        if (array.length === 0) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        return array[array.length - 1][array[0].length - 1] || ErrorValueObject.create(ErrorType.NA);\n    }\n\n    equalSearch(value: BaseValueObject, searchArray: ArrayValueObject, resultArray: ArrayValueObject, isFirst = true) {\n        const resultArrayValue = resultArray.pickRaw(searchArray.isEqual(value) as ArrayValueObject);\n\n        if (isFirst) {\n            return this._getOneFirstByRaw(resultArrayValue);\n        }\n\n        return this._getOneLastByRaw(resultArrayValue);\n    }\n\n    fuzzySearch(value: BaseValueObject, searchArray: ArrayValueObject, resultArray: ArrayValueObject, isFirst = true) {\n        const resultArrayValue = resultArray.pickRaw(searchArray.compare(value, compareToken.EQUALS) as ArrayValueObject);\n\n        if (isFirst) {\n            return this._getOneFirstByRaw(resultArrayValue);\n        }\n\n        return this._getOneLastByRaw(resultArrayValue);\n    }\n\n    orderSearch(\n        value: BaseValueObject,\n        searchArray: ArrayValueObject,\n        resultArray: ArrayValueObject,\n        searchType: ArrayOrderSearchType = ArrayOrderSearchType.MIN,\n        isDesc = false\n    ) {\n        const position = searchArray.orderSearch(value, searchType, isDesc);\n\n        if (position == null) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        const resultValue = resultArray.get(position.row, position.column) || NullValueObject.create();\n\n        if (resultValue.isNull()) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        return resultValue;\n    }\n\n    binarySearchExpand(\n        value: BaseValueObject,\n        searchArray: ArrayValueObject,\n        resultArray: ArrayValueObject,\n        axis = 0,\n        searchType?: ArrayBinarySearchType,\n        matchType?: ArrayOrderSearchType\n    ) {\n        const rowOrColumn = searchArray.binarySearch(value, searchType, matchType);\n\n        if (rowOrColumn == null) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        if (axis === 0) {\n            return resultArray.slice([rowOrColumn, rowOrColumn + 1]);\n        }\n        return resultArray.slice(undefined, [rowOrColumn, rowOrColumn + 1]);\n    }\n\n    equalSearchExpand(\n        value: BaseValueObject,\n        searchArray: ArrayValueObject,\n        resultArray: ArrayValueObject,\n        isFirst = true,\n        axis = 0\n    ) {\n        const matchObject = searchArray.isEqual(value) as ArrayValueObject;\n\n        let position: Nullable<{ row: number; column: number }>;\n\n        if (isFirst) {\n            position = matchObject.getFirstTruePosition();\n        } else {\n            position = matchObject.getLastTruePosition();\n        }\n\n        if (position == null) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        if (axis === 0) {\n            return resultArray.slice([position.row, position.row + 1]);\n        }\n        return resultArray.slice(undefined, [position.column, position.column + 1]);\n    }\n\n    fuzzySearchExpand(\n        value: BaseValueObject,\n        searchArray: ArrayValueObject,\n        resultArray: ArrayValueObject,\n        isFirst = true,\n        axis = 0\n    ) {\n        const matchObject = searchArray.compare(value, compareToken.EQUALS) as ArrayValueObject;\n\n        let position: Nullable<{ row: number; column: number }>;\n\n        if (isFirst) {\n            position = matchObject.getFirstTruePosition();\n        } else {\n            position = matchObject.getLastTruePosition();\n        }\n\n        if (position == null) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        if (axis === 0) {\n            return resultArray.slice([position.row, position.row + 1]);\n        }\n        return resultArray.slice(undefined, [position.column, position.column + 1]);\n    }\n\n    orderSearchExpand(\n        value: BaseValueObject,\n        searchArray: ArrayValueObject,\n        resultArray: ArrayValueObject,\n        searchType: ArrayOrderSearchType = ArrayOrderSearchType.MIN,\n        isDesc = false,\n        axis = 0\n    ) {\n        const position = searchArray.orderSearch(value, searchType, isDesc);\n\n        if (position == null) {\n            return ErrorValueObject.create(ErrorType.NA);\n        }\n\n        if (axis === 0) {\n            return resultArray.slice([position.row, position.row + 1]);\n        }\n        return resultArray.slice(undefined, [position.column, position.column + 1]);\n    }\n\n    flattenArray(variants: BaseValueObject[], ignoreLogicalValuesAndText: boolean = true): ArrayValueObject | BaseValueObject {\n        const flattenValues: BaseValueObject[][] = [];\n        flattenValues[0] = [];\n\n        for (let i = 0; i < variants.length; i++) {\n            let variant = variants[i];\n\n            if (variant.isString() || variant.isBoolean() || variant.isNull()) {\n                variant = variant.convertToNumberObjectValue();\n            }\n\n            if (variant.isError()) {\n                return variant;\n            }\n\n            if (variant.isArray()) {\n                let errorValue: Nullable<BaseValueObject>;\n\n                (variant as ArrayValueObject).iterator((valueObject) => {\n                    if (valueObject == null || valueObject.isNull()) {\n                        return true;\n                    }\n\n                    if (ignoreLogicalValuesAndText && (valueObject.isString() || valueObject.isBoolean())) {\n                        return true;\n                    }\n\n                    valueObject = this._includingLogicalValuesAndText(valueObject);\n\n                    if (valueObject.isError()) {\n                        errorValue = valueObject;\n                        return false;\n                    }\n\n                    flattenValues[0].push(valueObject);\n                });\n\n                if (errorValue?.isError()) {\n                    return errorValue;\n                }\n            } else {\n                flattenValues[0].push(variant);\n            }\n        }\n\n        return createNewArray(flattenValues, 1, flattenValues[0].length);\n    }\n\n    private _includingLogicalValuesAndText(valueObject: BaseValueObject) {\n        // Including logical values\n        if (valueObject.isBoolean()) {\n            valueObject = convertTonNumber(valueObject);\n        }\n\n        // Including number string\n        if (valueObject.isString()) {\n            const value = Number(valueObject.getValue());\n\n            // Non-text numbers also need to be counted to the sample size\n            valueObject = NumberValueObject.create(Number.isNaN(value) ? 0 : value);\n        }\n\n        return valueObject;\n    }\n\n    createReferenceObject(reference: BaseReferenceObject, range: IRange) {\n        const unitId = reference.getForcedUnitId();\n        const sheetId = reference.getForcedSheetId() || '';\n        const sheetName = reference.getForcedSheetName();\n\n        const gridRangeName = {\n            unitId,\n            sheetName,\n            range,\n        };\n\n        const token = serializeRangeToRefString(gridRangeName);\n\n        let referenceObject: BaseReferenceObject;\n\n        if (regexTestSingeRange(token)) {\n            referenceObject = new CellReferenceObject(token);\n        } else if (regexTestSingleRow(token)) {\n            referenceObject = new RowReferenceObject(token);\n        } else if (regexTestSingleColumn(token)) {\n            referenceObject = new ColumnReferenceObject(token);\n        } else {\n            referenceObject = new RangeReferenceObject(range, sheetId, unitId);\n        }\n\n        return this._setReferenceDefault(reference, referenceObject);\n    }\n\n    private _setReferenceDefault(reference: BaseReferenceObject, object: BaseReferenceObject) {\n        if (this.unitId == null || this.subUnitId == null) {\n            return ErrorValueObject.create(ErrorType.REF);\n        }\n\n        object.setDefaultUnitId(this.unitId);\n        object.setDefaultSheetId(this.subUnitId);\n        object.setUnitData(reference.getUnitData());\n        object.setRuntimeData(reference.getRuntimeData());\n        object.setArrayFormulaCellData(reference.getArrayFormulaCellData());\n        object.setRuntimeArrayFormulaCellData(reference.getRuntimeArrayFormulaCellData());\n\n        return object;\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"88df0951b621bfbadb64c9465898cf8dcecfa7a3"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/financial/oddfyield/index.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/financial/oddfyield/index.ts","statementMap":{"0":{"start":{"line":9,"column":14},"end":{"line":9,"column":15}},"1":{"start":{"line":10,"column":14},"end":{"line":10,"column":15}},"2":{"start":{"line":12,"column":17},"end":{"line":12,"column":53}},"3":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"4":{"start":{"line":14,"column":6},"end":{"line":14,"column":43}},"5":{"start":{"line":16,"column":47},"end":{"line":16,"column":170}},"6":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"7":{"start":{"line":18,"column":6},"end":{"line":18,"column":25}},"8":{"start":{"line":20,"column":149},"end":{"line":20,"column":157}},"9":{"start":{"line":21,"column":35},"end":{"line":21,"column":80}},"10":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"11":{"start":{"line":23,"column":6},"end":{"line":23,"column":36}},"12":{"start":{"line":25,"column":33},"end":{"line":25,"column":76}},"13":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"14":{"start":{"line":27,"column":6},"end":{"line":27,"column":34}},"15":{"start":{"line":29,"column":30},"end":{"line":29,"column":70}},"16":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"17":{"start":{"line":31,"column":6},"end":{"line":31,"column":31}},"18":{"start":{"line":33,"column":36},"end":{"line":33,"column":82}},"19":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"20":{"start":{"line":35,"column":6},"end":{"line":35,"column":37}},"21":{"start":{"line":37,"column":22},"end":{"line":37,"column":44}},"22":{"start":{"line":38,"column":20},"end":{"line":38,"column":40}},"23":{"start":{"line":39,"column":28},"end":{"line":39,"column":56}},"24":{"start":{"line":40,"column":27},"end":{"line":40,"column":66}},"25":{"start":{"line":41,"column":23},"end":{"line":41,"column":58}},"26":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"27":{"start":{"line":43,"column":6},"end":{"line":43,"column":54}},"28":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"29":{"start":{"line":46,"column":6},"end":{"line":46,"column":52}},"30":{"start":{"line":48,"column":4},"end":{"line":48,"column":182}},"31":{"start":{"line":51,"column":4},"end":{"line":51,"column":323}},"32":{"start":{"line":54,"column":4},"end":{"line":54,"column":228}},"33":{"start":{"line":57,"column":21},"end":{"line":57,"column":95}},"34":{"start":{"line":58,"column":18},"end":{"line":58,"column":102}},"35":{"start":{"line":60,"column":6},"end":{"line":60,"column":168}},"36":{"start":{"line":62,"column":19},"end":{"line":62,"column":69}},"37":{"start":{"line":62,"column":57},"end":{"line":62,"column":68}},"38":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"39":{"start":{"line":64,"column":6},"end":{"line":64,"column":20}},"40":{"start":{"line":66,"column":4},"end":{"line":66,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":2},"end":{"line":11,"column":3}},"loc":{"start":{"line":11,"column":94},"end":{"line":49,"column":3}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":50,"column":2},"end":{"line":50,"column":3}},"loc":{"start":{"line":50,"column":119},"end":{"line":52,"column":3}},"line":50},"2":{"name":"(anonymous_2)","decl":{"start":{"line":53,"column":2},"end":{"line":53,"column":3}},"loc":{"start":{"line":53,"column":113},"end":{"line":55,"column":3}},"line":53},"3":{"name":"(anonymous_3)","decl":{"start":{"line":56,"column":2},"end":{"line":56,"column":3}},"loc":{"start":{"line":56,"column":143},"end":{"line":67,"column":3}},"line":56},"4":{"name":"_iterF","decl":{"start":{"line":59,"column":13},"end":{"line":59,"column":19}},"loc":{"start":{"line":59,"column":25},"end":{"line":61,"column":5}},"line":59},"5":{"name":"(anonymous_5)","decl":{"start":{"line":62,"column":48},"end":{"line":62,"column":49}},"loc":{"start":{"line":62,"column":57},"end":{"line":62,"column":68}},"line":62}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":53}},"type":"binary-expr","locations":[{"start":{"line":12,"column":17},"end":{"line":12,"column":22}},{"start":{"line":12,"column":26},"end":{"line":12,"column":53}}],"line":12},"1":{"loc":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},{"start":{},"end":{}}],"line":13},"2":{"loc":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},{"start":{},"end":{}}],"line":17},"3":{"loc":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},{"start":{},"end":{}}],"line":22},"4":{"loc":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},{"start":{},"end":{}}],"line":26},"5":{"loc":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},{"start":{},"end":{}}],"line":30},"6":{"loc":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},{"start":{},"end":{}}],"line":34},"7":{"loc":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},{"start":{},"end":{}}],"line":42},"8":{"loc":{"start":{"line":42,"column":8},"end":{"line":42,"column":149}},"type":"binary-expr","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":31}},{"start":{"line":42,"column":35},"end":{"line":42,"column":56}},{"start":{"line":42,"column":60},"end":{"line":42,"column":89}},{"start":{"line":42,"column":93},"end":{"line":42,"column":121}},{"start":{"line":42,"column":125},"end":{"line":42,"column":149}}],"line":42},"9":{"loc":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},{"start":{},"end":{}}],"line":45},"10":{"loc":{"start":{"line":45,"column":8},"end":{"line":45,"column":262}},"type":"binary-expr","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":21}},{"start":{"line":45,"column":25},"end":{"line":45,"column":37}},{"start":{"line":45,"column":41},"end":{"line":45,"column":61}},{"start":{"line":45,"column":65},"end":{"line":45,"column":100}},{"start":{"line":45,"column":104},"end":{"line":45,"column":118}},{"start":{"line":45,"column":122},"end":{"line":45,"column":136}},{"start":{"line":45,"column":140},"end":{"line":45,"column":262}}],"line":45},"11":{"loc":{"start":{"line":51,"column":11},"end":{"line":51,"column":322}},"type":"binary-expr","locations":[{"start":{"line":51,"column":11},"end":{"line":51,"column":126}},{"start":{"line":51,"column":130},"end":{"line":51,"column":234}},{"start":{"line":51,"column":238},"end":{"line":51,"column":322}}],"line":51},"12":{"loc":{"start":{"line":54,"column":11},"end":{"line":54,"column":227}},"type":"binary-expr","locations":[{"start":{"line":54,"column":11},"end":{"line":54,"column":81}},{"start":{"line":54,"column":85},"end":{"line":54,"column":157}},{"start":{"line":54,"column":161},"end":{"line":54,"column":227}}],"line":54},"13":{"loc":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},{"start":{},"end":{}}],"line":63}},"s":{"0":1,"1":1,"2":22,"3":22,"4":1,"5":22,"6":22,"7":3,"8":19,"9":19,"10":19,"11":1,"12":18,"13":18,"14":1,"15":17,"16":17,"17":1,"18":16,"19":16,"20":1,"21":15,"22":15,"23":15,"24":15,"25":15,"26":15,"27":1,"28":14,"29":6,"30":8,"31":10,"32":10,"33":8,"34":8,"35":96,"36":8,"37":96,"38":8,"39":0,"40":8},"f":{"0":22,"1":10,"2":10,"3":8,"4":96,"5":96},"b":{"0":[22,0],"1":[1,21],"2":[3,19],"3":[1,18],"4":[1,17],"5":[1,16],"6":[1,15],"7":[1,14],"8":[15,14,14,14,14],"9":[6,8],"10":[14,13,12,12,11,11,10],"11":[10,8,8],"12":[10,10,8],"13":[0,8]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/engine-formula/src/functions/financial/oddfyield/index.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getDateSerialNumberByObject, getTwoDateDaysByBasis } from '../../../basics/date';\nimport { ErrorType } from '../../../basics/error-type';\nimport { calculateOddFPrice, getResultByGuessIterF, validCouppcdIsGte0ByTwoDate, validDaysBetweenIsWholeFrequencyByTwoDate } from '../../../basics/financial';\nimport { checkVariantsErrorIsNullorArrayOrBoolean } from '../../../engine/utils/check-variant-error';\nimport { type BaseValueObject, ErrorValueObject } from '../../../engine/value-object/base-value-object';\nimport { NumberValueObject } from '../../../engine/value-object/primitive-object';\nimport { BaseFunction } from '../../base-function';\n\nexport class Oddfyield extends BaseFunction {\n    override minParams = 8;\n\n    override maxParams = 9;\n\n    override calculate(\n        settlement: BaseValueObject,\n        maturity: BaseValueObject,\n        issue: BaseValueObject,\n        firstCoupon: BaseValueObject,\n        rate: BaseValueObject,\n        pr: BaseValueObject,\n        redemption: BaseValueObject,\n        frequency: BaseValueObject,\n        basis?: BaseValueObject\n    ): BaseValueObject {\n        let _basis = basis ?? NumberValueObject.create(0);\n\n        if (_basis.isNull()) {\n            _basis = NumberValueObject.create(0);\n        }\n\n        const { isError, errorObject, variants } = checkVariantsErrorIsNullorArrayOrBoolean(settlement, maturity, issue, firstCoupon, rate, pr, redemption, frequency, _basis);\n\n        if (isError) {\n            return errorObject as ErrorValueObject;\n        }\n\n        const [settlementObject, maturityObject, issueObject, firstCouponObject, rateObject, prObject, redemptionObject, frequencyObject, basisObject] = variants as BaseValueObject[];\n\n        const settlementSerialNumber = getDateSerialNumberByObject(settlementObject);\n\n        if (typeof settlementSerialNumber !== 'number') {\n            return settlementSerialNumber;\n        }\n\n        const maturitySerialNumber = getDateSerialNumberByObject(maturityObject);\n\n        if (typeof maturitySerialNumber !== 'number') {\n            return maturitySerialNumber;\n        }\n\n        const issueSerialNumber = getDateSerialNumberByObject(issueObject);\n\n        if (typeof issueSerialNumber !== 'number') {\n            return issueSerialNumber;\n        }\n\n        const firstCouponSerialNumber = getDateSerialNumberByObject(firstCouponObject);\n\n        if (typeof firstCouponSerialNumber !== 'number') {\n            return firstCouponSerialNumber;\n        }\n\n        const rateValue = +rateObject.getValue();\n        const prValue = +prObject.getValue();\n        const redemptionValue = +redemptionObject.getValue();\n        const frequencyValue = Math.floor(+frequencyObject.getValue());\n        const basisValue = Math.floor(+basisObject.getValue());\n\n        if (Number.isNaN(rateValue) || Number.isNaN(prValue) || Number.isNaN(redemptionValue) || Number.isNaN(frequencyValue) || Number.isNaN(basisValue)) {\n            return ErrorValueObject.create(ErrorType.VALUE);\n        }\n\n        if (\n            rateValue < 0 ||\n            prValue <= 0 ||\n            redemptionValue <= 0 ||\n            ![1, 2, 4].includes(frequencyValue) ||\n            basisValue < 0 ||\n            basisValue > 4 ||\n            !this._validDate(maturitySerialNumber, firstCouponSerialNumber, settlementSerialNumber, issueSerialNumber, frequencyValue)\n        ) {\n            return ErrorValueObject.create(ErrorType.NUM);\n        }\n\n        return this._getResult(settlementSerialNumber, maturitySerialNumber, issueSerialNumber, firstCouponSerialNumber, rateValue, prValue, redemptionValue, frequencyValue, basisValue);\n    }\n\n    private _validDate(maturitySerialNumber: number, firstCouponSerialNumber: number, settlementSerialNumber: number, issueSerialNumber: number, frequencyValue: number): boolean {\n        return this._getDateCorrectOrder(maturitySerialNumber, firstCouponSerialNumber, settlementSerialNumber, issueSerialNumber)\n            && validDaysBetweenIsWholeFrequencyByTwoDate(maturitySerialNumber, firstCouponSerialNumber, frequencyValue)\n            && validCouppcdIsGte0ByTwoDate(issueSerialNumber, maturitySerialNumber, frequencyValue);\n    }\n\n    private _getDateCorrectOrder(maturitySerialNumber: number, firstCouponSerialNumber: number, settlementSerialNumber: number, issueSerialNumber: number): boolean {\n        return Math.floor(maturitySerialNumber) > Math.floor(firstCouponSerialNumber)\n            && Math.floor(firstCouponSerialNumber) > Math.floor(settlementSerialNumber)\n            && Math.floor(settlementSerialNumber) > Math.floor(issueSerialNumber);\n    }\n\n    private _getResult(\n        settlementSerialNumber: number,\n        maturitySerialNumber: number,\n        issueSerialNumber: number,\n        firstCouponSerialNumber: number,\n        rate: number,\n        pr: number,\n        redemption: number,\n        frequency: number,\n        basis: number\n    ): BaseValueObject {\n        const { days } = getTwoDateDaysByBasis(settlementSerialNumber, maturitySerialNumber, basis);\n        const guess = (rate * days * 100 - (pr - 100)) / ((pr - 100) * 0.25 * (1 + 2 * days) + days * 100);\n\n        function _iterF(yld: number): number {\n            return pr - calculateOddFPrice(settlementSerialNumber, maturitySerialNumber, issueSerialNumber, firstCouponSerialNumber, rate, yld, redemption, frequency, basis);\n        }\n\n        const result = getResultByGuessIterF(guess, (yld: number) => _iterF(yld));\n\n        if (typeof result !== 'number') {\n            return result as ErrorValueObject;\n        }\n\n        return NumberValueObject.create(result);\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b07c3ea3181d07acc8a9222cfea6f385b4614948"}}