{"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/basics/range-merge.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/basics/range-merge.ts","statementMap":{"0":{"start":{"line":2,"column":41},"end":{"line":16,"column":1}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":2},"end":{"line":8,"column":5}},"3":{"start":{"line":5,"column":4},"end":{"line":7,"column":7}},"4":{"start":{"line":6,"column":6},"end":{"line":6,"column":35}},"5":{"start":{"line":9,"column":2},"end":{"line":14,"column":5}},"6":{"start":{"line":10,"column":28},"end":{"line":10,"column":57}},"7":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"8":{"start":{"line":12,"column":6},"end":{"line":12,"column":53}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":16}},"10":{"start":{"line":17,"column":41},"end":{"line":26,"column":1}},"11":{"start":{"line":18,"column":18},"end":{"line":18,"column":24}},"12":{"start":{"line":19,"column":2},"end":{"line":24,"column":5}},"13":{"start":{"line":20,"column":28},"end":{"line":20,"column":57}},"14":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"15":{"start":{"line":22,"column":6},"end":{"line":22,"column":54}},"16":{"start":{"line":25,"column":2},"end":{"line":25,"column":17}},"17":{"start":{"line":27,"column":29},"end":{"line":68,"column":1}},"18":{"start":{"line":28,"column":14},"end":{"line":30,"column":3}},"19":{"start":{"line":31,"column":20},"end":{"line":38,"column":3}},"20":{"start":{"line":32,"column":4},"end":{"line":36,"column":5}},"21":{"start":{"line":33,"column":6},"end":{"line":33,"column":22}},"22":{"start":{"line":34,"column":6},"end":{"line":34,"column":24}},"23":{"start":{"line":35,"column":6},"end":{"line":35,"column":18}},"24":{"start":{"line":37,"column":4},"end":{"line":37,"column":17}},"25":{"start":{"line":39,"column":2},"end":{"line":66,"column":5}},"26":{"start":{"line":40,"column":15},"end":{"line":40,"column":16}},"27":{"start":{"line":41,"column":15},"end":{"line":41,"column":23}},"28":{"start":{"line":42,"column":4},"end":{"line":47,"column":7}},"29":{"start":{"line":48,"column":19},"end":{"line":53,"column":5}},"30":{"start":{"line":54,"column":4},"end":{"line":65,"column":5}},"31":{"start":{"line":54,"column":17},"end":{"line":54,"column":24}},"32":{"start":{"line":55,"column":6},"end":{"line":64,"column":7}},"33":{"start":{"line":56,"column":8},"end":{"line":56,"column":14}},"34":{"start":{"line":58,"column":8},"end":{"line":58,"column":63}},"35":{"start":{"line":59,"column":8},"end":{"line":59,"column":15}},"36":{"start":{"line":60,"column":21},"end":{"line":60,"column":32}},"37":{"start":{"line":61,"column":8},"end":{"line":61,"column":31}},"38":{"start":{"line":62,"column":8},"end":{"line":62,"column":41}},"39":{"start":{"line":63,"column":8},"end":{"line":63,"column":32}},"40":{"start":{"line":67,"column":2},"end":{"line":67,"column":13}},"41":{"start":{"line":69,"column":25},"end":{"line":86,"column":1}},"42":{"start":{"line":70,"column":2},"end":{"line":72,"column":5}},"43":{"start":{"line":71,"column":4},"end":{"line":71,"column":40}},"44":{"start":{"line":73,"column":2},"end":{"line":84,"column":3}},"45":{"start":{"line":73,"column":17},"end":{"line":73,"column":34}},"46":{"start":{"line":74,"column":16},"end":{"line":74,"column":32}},"47":{"start":{"line":75,"column":14},"end":{"line":75,"column":42}},"48":{"start":{"line":76,"column":4},"end":{"line":83,"column":5}},"49":{"start":{"line":77,"column":6},"end":{"line":77,"column":38}},"50":{"start":{"line":78,"column":20},"end":{"line":78,"column":27}},"51":{"start":{"line":79,"column":6},"end":{"line":82,"column":7}},"52":{"start":{"line":80,"column":8},"end":{"line":80,"column":83}},"53":{"start":{"line":81,"column":8},"end":{"line":81,"column":18}},"54":{"start":{"line":85,"column":2},"end":{"line":85,"column":19}},"55":{"start":{"line":87,"column":32},"end":{"line":98,"column":1}},"56":{"start":{"line":88,"column":21},"end":{"line":88,"column":23}},"57":{"start":{"line":89,"column":15},"end":{"line":89,"column":46}},"58":{"start":{"line":90,"column":2},"end":{"line":96,"column":3}},"59":{"start":{"line":91,"column":4},"end":{"line":94,"column":5}},"60":{"start":{"line":92,"column":6},"end":{"line":92,"column":36}},"61":{"start":{"line":93,"column":6},"end":{"line":93,"column":48}},"62":{"start":{"line":95,"column":4},"end":{"line":95,"column":45}},"63":{"start":{"line":97,"column":2},"end":{"line":97,"column":20}},"64":{"start":{"line":99,"column":26},"end":{"line":102,"column":1}},"65":{"start":{"line":100,"column":20},"end":{"line":100,"column":53}},"66":{"start":{"line":101,"column":2},"end":{"line":101,"column":37}},"67":{"start":{"line":104,"column":12},"end":{"line":104,"column":30}},"68":{"start":{"line":106,"column":4},"end":{"line":110,"column":7}},"69":{"start":{"line":107,"column":6},"end":{"line":109,"column":9}},"70":{"start":{"line":108,"column":8},"end":{"line":108,"column":43}},"71":{"start":{"line":111,"column":4},"end":{"line":111,"column":16}},"72":{"start":{"line":114,"column":4},"end":{"line":118,"column":7}},"73":{"start":{"line":115,"column":6},"end":{"line":117,"column":9}},"74":{"start":{"line":116,"column":8},"end":{"line":116,"column":47}},"75":{"start":{"line":119,"column":4},"end":{"line":119,"column":16}},"76":{"start":{"line":122,"column":22},"end":{"line":122,"column":61}},"77":{"start":{"line":123,"column":19},"end":{"line":123,"column":46}},"78":{"start":{"line":124,"column":4},"end":{"line":124,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":41},"end":{"line":2,"column":42}},"loc":{"start":{"line":2,"column":53},"end":{"line":16,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":18}},"loc":{"start":{"line":4,"column":28},"end":{"line":8,"column":3}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":25},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":39},"end":{"line":7,"column":5}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":18},"end":{"line":9,"column":19}},"loc":{"start":{"line":9,"column":32},"end":{"line":14,"column":3}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":17,"column":41},"end":{"line":17,"column":42}},"loc":{"start":{"line":17,"column":53},"end":{"line":26,"column":1}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":19,"column":19},"end":{"line":19,"column":20}},"loc":{"start":{"line":19,"column":33},"end":{"line":24,"column":3}},"line":19},"6":{"name":"(anonymous_6)","decl":{"start":{"line":27,"column":29},"end":{"line":27,"column":30}},"loc":{"start":{"line":27,"column":44},"end":{"line":68,"column":1}},"line":27},"7":{"name":"(anonymous_7)","decl":{"start":{"line":31,"column":20},"end":{"line":31,"column":21}},"loc":{"start":{"line":31,"column":37},"end":{"line":38,"column":3}},"line":31},"8":{"name":"(anonymous_8)","decl":{"start":{"line":39,"column":21},"end":{"line":39,"column":22}},"loc":{"start":{"line":39,"column":45},"end":{"line":66,"column":3}},"line":39},"9":{"name":"(anonymous_9)","decl":{"start":{"line":69,"column":25},"end":{"line":69,"column":26}},"loc":{"start":{"line":69,"column":47},"end":{"line":86,"column":1}},"line":69},"10":{"name":"(anonymous_10)","decl":{"start":{"line":70,"column":23},"end":{"line":70,"column":24}},"loc":{"start":{"line":70,"column":37},"end":{"line":72,"column":3}},"line":70},"11":{"name":"(anonymous_11)","decl":{"start":{"line":87,"column":32},"end":{"line":87,"column":33}},"loc":{"start":{"line":87,"column":47},"end":{"line":98,"column":1}},"line":87},"12":{"name":"(anonymous_12)","decl":{"start":{"line":99,"column":26},"end":{"line":99,"column":27}},"loc":{"start":{"line":99,"column":38},"end":{"line":102,"column":1}},"line":99},"13":{"name":"(anonymous_13)","decl":{"start":{"line":105,"column":2},"end":{"line":105,"column":3}},"loc":{"start":{"line":105,"column":17},"end":{"line":112,"column":3}},"line":105},"14":{"name":"(anonymous_14)","decl":{"start":{"line":106,"column":19},"end":{"line":106,"column":20}},"loc":{"start":{"line":106,"column":30},"end":{"line":110,"column":5}},"line":106},"15":{"name":"(anonymous_15)","decl":{"start":{"line":107,"column":27},"end":{"line":107,"column":28}},"loc":{"start":{"line":107,"column":41},"end":{"line":109,"column":7}},"line":107},"16":{"name":"(anonymous_16)","decl":{"start":{"line":113,"column":2},"end":{"line":113,"column":3}},"loc":{"start":{"line":113,"column":22},"end":{"line":120,"column":3}},"line":113},"17":{"name":"(anonymous_17)","decl":{"start":{"line":114,"column":19},"end":{"line":114,"column":20}},"loc":{"start":{"line":114,"column":30},"end":{"line":118,"column":5}},"line":114},"18":{"name":"(anonymous_18)","decl":{"start":{"line":115,"column":27},"end":{"line":115,"column":28}},"loc":{"start":{"line":115,"column":41},"end":{"line":117,"column":7}},"line":115},"19":{"name":"(anonymous_19)","decl":{"start":{"line":121,"column":2},"end":{"line":121,"column":3}},"loc":{"start":{"line":121,"column":10},"end":{"line":125,"column":3}},"line":121}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},{"start":{},"end":{}}],"line":11},"1":{"loc":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},{"start":{},"end":{}}],"line":21},"2":{"loc":{"start":{"line":32,"column":4},"end":{"line":36,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":36,"column":5}},{"start":{},"end":{}}],"line":32},"3":{"loc":{"start":{"line":55,"column":6},"end":{"line":64,"column":7}},"type":"if","locations":[{"start":{"line":55,"column":6},"end":{"line":64,"column":7}},{"start":{"line":57,"column":13},"end":{"line":64,"column":7}}],"line":55},"4":{"loc":{"start":{"line":58,"column":24},"end":{"line":58,"column":55}},"type":"binary-expr","locations":[{"start":{"line":58,"column":24},"end":{"line":58,"column":50}},{"start":{"line":58,"column":54},"end":{"line":58,"column":55}}],"line":58},"5":{"loc":{"start":{"line":76,"column":4},"end":{"line":83,"column":5}},"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":83,"column":5}},{"start":{},"end":{}}],"line":76},"6":{"loc":{"start":{"line":91,"column":4},"end":{"line":94,"column":5}},"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":94,"column":5}},{"start":{},"end":{}}],"line":91}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/basics/range-merge.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange } from '@univerjs/core';\nimport { ObjectMatrix, Range } from '@univerjs/core';\n\nexport const createTopMatrixFromRanges = (ranges: IRange[]) => {\n    const matrix = new ObjectMatrix<number>();\n    ranges.forEach((range) => {\n        Range.foreach(range, (row, col) => {\n            matrix.setValue(row, col, 1);\n        });\n    });\n    matrix.forValue((row, col) => {\n        const theLastRowValue = matrix.getValue(row - 1, col);\n        if (theLastRowValue) {\n            matrix.setValue(row, col, theLastRowValue + 1);\n        }\n    });\n    return matrix;\n};\nexport const createTopMatrixFromMatrix = (matrix: ObjectMatrix<1>) => {\n    const _matrix = matrix as ObjectMatrix<number>;\n    _matrix.forValue((row, col) => {\n        const theLastRowValue = matrix.getValue(row - 1, col);\n        if (theLastRowValue) {\n            _matrix.setValue(row, col, theLastRowValue + 1);\n        }\n    });\n    return _matrix;\n};\nconst findMaximalRectangle = (topMatrix: ObjectMatrix<number>) => {\n    const res: {\n        area: number;\n        range?: IRange;\n    } = {\n        area: 0,\n    };\n    const checkArea = (area: number, range: IRange) => {\n        if (res.area < area) {\n            res.area = area;\n            res.range = range;\n            return true;\n        }\n        return false;\n    };\n\n    topMatrix.forValue((row, col, lineArea) => {\n        let cols = 1;\n        let rows = lineArea;\n        checkArea(cols * rows, {\n            startRow: row - rows + 1,\n            endRow: row,\n            startColumn: col,\n            endColumn: col,\n        });\n        const _range = {\n            startRow: row - rows + 1,\n            endRow: row,\n            startColumn: 0,\n            endColumn: col,\n        };\n        for (let k = col - 1; k >= 0; k--) {\n            if (!topMatrix.getValue(row, k)) {\n                break;\n            } else {\n                rows = Math.min(topMatrix.getValue(row, k) || 0, rows);\n                cols++;\n                const area = rows * cols;\n                _range.startColumn = k;\n                _range.startRow = row - rows + 1;\n                checkArea(area, _range);\n            }\n        }\n    });\n    return res;\n};\n\nconst filterLeftMatrix = (topMatrix: ObjectMatrix<number>, range: IRange) => {\n    Range.foreach(range, (row, col) => {\n        topMatrix.realDeleteValue(row, col);\n    });\n\n    for (let col = range.startColumn; col <= range.endColumn; col++) {\n        const row = range.endRow + 1;\n        const v = topMatrix.getValue(row, col)!;\n        if (v > 0) {\n            topMatrix.setValue(row, col, 1);\n            let nextRow = row + 1;\n            while (topMatrix.getValue(nextRow, col)! > 0) {\n                topMatrix.setValue(nextRow, col, topMatrix.getValue(nextRow - 1, col)! + 1);\n                nextRow++;\n            }\n        }\n    }\n    return topMatrix;\n};\n\nexport const findAllRectangle = (topMatrix: ObjectMatrix<number>) => {\n    const resultList = [];\n    let result = findMaximalRectangle(topMatrix);\n    while (result.area > 0) {\n        if (result.range) {\n            resultList.push(result.range);\n            filterLeftMatrix(topMatrix, result.range);\n        }\n        result = findMaximalRectangle(topMatrix);\n    }\n    return resultList;\n};\n\n/**\n * Some operations generate sparse ranges such as paste/autofill/ref-range, and this function merge some small ranges into some large ranges to reduce transmission size.\n * Time Complexity: O(mn) , where m and n are rows and columns. It takes O(mn) to compute the markMatrix and O(n) to apply the histogram algorithm to each column.\n * ps. column sparse matrices have better performance\n * @param {IRange[]} ranges\n * @returns {IRange[]}\n */\nexport const rangeMerge = (ranges: IRange[]) => {\n    const topMatrix = createTopMatrixFromRanges(ranges);\n    return findAllRectangle(topMatrix);\n};\n\nexport class RangeMergeUtil {\n    private _matrix = new ObjectMatrix<1>();\n    add(...ranges: IRange[]) {\n        ranges.forEach((range) => {\n            Range.foreach(range, (row, col) => {\n                this._matrix.setValue(row, col, 1);\n            });\n        });\n        return this;\n    }\n\n    subtract(...ranges: IRange[]) {\n        ranges.forEach((range) => {\n            Range.foreach(range, (row, col) => {\n                this._matrix.realDeleteValue(row, col);\n            });\n        });\n        return this;\n    }\n\n    merge() {\n        const topMatrix = createTopMatrixFromMatrix(this._matrix);\n        const ranges = findAllRectangle(topMatrix);\n        return ranges;\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4b2da8385e8336f8ca2338be6235d9243505c3cf"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/basics/utils.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/basics/utils.ts","statementMap":{"0":{"start":{"line":2,"column":26},"end":{"line":22,"column":1}},"1":{"start":{"line":3,"column":2},"end":{"line":21,"column":4}},"2":{"start":{"line":5,"column":20},"end":{"line":5,"column":43}},"3":{"start":{"line":6,"column":6},"end":{"line":9,"column":7}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":54}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":22}},"6":{"start":{"line":10,"column":6},"end":{"line":17,"column":7}},"7":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"8":{"start":{"line":12,"column":10},"end":{"line":12,"column":29}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":36}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":39}},"11":{"start":{"line":18,"column":6},"end":{"line":18,"column":20}},"12":{"start":{"line":23,"column":31},"end":{"line":28,"column":1}},"13":{"start":{"line":24,"column":19},"end":{"line":24,"column":28}},"14":{"start":{"line":25,"column":2},"end":{"line":27,"column":4}},"15":{"start":{"line":26,"column":4},"end":{"line":26,"column":24}},"16":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"17":{"start":{"line":31,"column":4},"end":{"line":31,"column":17}},"18":{"start":{"line":33,"column":2},"end":{"line":33,"column":84}},"19":{"start":{"line":36,"column":36},"end":{"line":36,"column":46}},"20":{"start":{"line":37,"column":17},"end":{"line":37,"column":39}},"21":{"start":{"line":38,"column":20},"end":{"line":38,"column":45}},"22":{"start":{"line":39,"column":16},"end":{"line":39,"column":20}},"23":{"start":{"line":40,"column":20},"end":{"line":40,"column":37}},"24":{"start":{"line":41,"column":20},"end":{"line":41,"column":87}},"25":{"start":{"line":42,"column":2},"end":{"line":121,"column":3}},"26":{"start":{"line":43,"column":4},"end":{"line":43,"column":20}},"27":{"start":{"line":44,"column":4},"end":{"line":61,"column":5}},"28":{"start":{"line":45,"column":22},"end":{"line":45,"column":44}},"29":{"start":{"line":46,"column":25},"end":{"line":51,"column":7}},"30":{"start":{"line":52,"column":6},"end":{"line":60,"column":7}},"31":{"start":{"line":52,"column":21},"end":{"line":52,"column":43}},"32":{"start":{"line":53,"column":21},"end":{"line":53,"column":65}},"33":{"start":{"line":54,"column":8},"end":{"line":59,"column":9}},"34":{"start":{"line":55,"column":10},"end":{"line":55,"column":81}},"35":{"start":{"line":56,"column":10},"end":{"line":56,"column":71}},"36":{"start":{"line":57,"column":10},"end":{"line":57,"column":67}},"37":{"start":{"line":58,"column":10},"end":{"line":58,"column":25}},"38":{"start":{"line":62,"column":4},"end":{"line":83,"column":5}},"39":{"start":{"line":63,"column":22},"end":{"line":63,"column":42}},"40":{"start":{"line":64,"column":25},"end":{"line":69,"column":7}},"41":{"start":{"line":70,"column":6},"end":{"line":82,"column":7}},"42":{"start":{"line":70,"column":21},"end":{"line":70,"column":43}},"43":{"start":{"line":71,"column":26},"end":{"line":71,"column":70}},"44":{"start":{"line":72,"column":8},"end":{"line":81,"column":9}},"45":{"start":{"line":73,"column":10},"end":{"line":73,"column":75}},"46":{"start":{"line":74,"column":10},"end":{"line":77,"column":12}},"47":{"start":{"line":78,"column":10},"end":{"line":78,"column":71}},"48":{"start":{"line":79,"column":10},"end":{"line":79,"column":67}},"49":{"start":{"line":80,"column":10},"end":{"line":80,"column":25}},"50":{"start":{"line":84,"column":4},"end":{"line":101,"column":5}},"51":{"start":{"line":85,"column":22},"end":{"line":85,"column":47}},"52":{"start":{"line":86,"column":25},"end":{"line":91,"column":7}},"53":{"start":{"line":92,"column":6},"end":{"line":100,"column":7}},"54":{"start":{"line":92,"column":21},"end":{"line":92,"column":40}},"55":{"start":{"line":93,"column":21},"end":{"line":93,"column":68}},"56":{"start":{"line":94,"column":8},"end":{"line":99,"column":9}},"57":{"start":{"line":95,"column":10},"end":{"line":95,"column":90}},"58":{"start":{"line":96,"column":10},"end":{"line":96,"column":65}},"59":{"start":{"line":97,"column":10},"end":{"line":97,"column":61}},"60":{"start":{"line":98,"column":10},"end":{"line":98,"column":25}},"61":{"start":{"line":102,"column":4},"end":{"line":120,"column":5}},"62":{"start":{"line":103,"column":22},"end":{"line":103,"column":45}},"63":{"start":{"line":104,"column":25},"end":{"line":109,"column":7}},"64":{"start":{"line":110,"column":6},"end":{"line":119,"column":7}},"65":{"start":{"line":110,"column":21},"end":{"line":110,"column":40}},"66":{"start":{"line":111,"column":26},"end":{"line":111,"column":71}},"67":{"start":{"line":112,"column":8},"end":{"line":118,"column":9}},"68":{"start":{"line":113,"column":10},"end":{"line":116,"column":12}},"69":{"start":{"line":117,"column":10},"end":{"line":117,"column":25}},"70":{"start":{"line":122,"column":2},"end":{"line":122,"column":19}},"71":{"start":{"line":125,"column":20},"end":{"line":125,"column":38}},"72":{"start":{"line":126,"column":2},"end":{"line":133,"column":5}},"73":{"start":{"line":127,"column":57},"end":{"line":127,"column":63}},"74":{"start":{"line":128,"column":4},"end":{"line":132,"column":5}},"75":{"start":{"line":128,"column":17},"end":{"line":128,"column":25}},"76":{"start":{"line":129,"column":6},"end":{"line":131,"column":7}},"77":{"start":{"line":129,"column":19},"end":{"line":129,"column":30}},"78":{"start":{"line":130,"column":8},"end":{"line":130,"column":39}},"79":{"start":{"line":134,"column":2},"end":{"line":134,"column":27}},"80":{"start":{"line":137,"column":20},"end":{"line":137,"column":38}},"81":{"start":{"line":138,"column":2},"end":{"line":151,"column":5}},"82":{"start":{"line":139,"column":57},"end":{"line":139,"column":63}},"83":{"start":{"line":140,"column":4},"end":{"line":150,"column":5}},"84":{"start":{"line":140,"column":17},"end":{"line":140,"column":25}},"85":{"start":{"line":141,"column":6},"end":{"line":149,"column":7}},"86":{"start":{"line":141,"column":19},"end":{"line":141,"column":30}},"87":{"start":{"line":142,"column":8},"end":{"line":148,"column":11}},"88":{"start":{"line":152,"column":2},"end":{"line":152,"column":27}},"89":{"start":{"line":155,"column":20},"end":{"line":155,"column":38}},"90":{"start":{"line":156,"column":2},"end":{"line":165,"column":5}},"91":{"start":{"line":157,"column":57},"end":{"line":157,"column":62}},"92":{"start":{"line":158,"column":4},"end":{"line":164,"column":5}},"93":{"start":{"line":158,"column":17},"end":{"line":158,"column":25}},"94":{"start":{"line":159,"column":6},"end":{"line":163,"column":7}},"95":{"start":{"line":159,"column":19},"end":{"line":159,"column":30}},"96":{"start":{"line":160,"column":8},"end":{"line":162,"column":11}},"97":{"start":{"line":166,"column":2},"end":{"line":166,"column":27}},"98":{"start":{"line":169,"column":19},"end":{"line":169,"column":89}},"99":{"start":{"line":170,"column":20},"end":{"line":170,"column":46}},"100":{"start":{"line":171,"column":2},"end":{"line":171,"column":31}},"101":{"start":{"line":174,"column":32},"end":{"line":174,"column":68}},"102":{"start":{"line":175,"column":19},"end":{"line":175,"column":177}},"103":{"start":{"line":176,"column":20},"end":{"line":176,"column":99}},"104":{"start":{"line":177,"column":2},"end":{"line":179,"column":3}},"105":{"start":{"line":178,"column":4},"end":{"line":178,"column":16}},"106":{"start":{"line":180,"column":55},"end":{"line":180,"column":60}},"107":{"start":{"line":181,"column":15},"end":{"line":181,"column":17}},"108":{"start":{"line":182,"column":15},"end":{"line":182,"column":17}},"109":{"start":{"line":183,"column":2},"end":{"line":193,"column":3}},"110":{"start":{"line":183,"column":15},"end":{"line":183,"column":23}},"111":{"start":{"line":184,"column":4},"end":{"line":192,"column":5}},"112":{"start":{"line":185,"column":6},"end":{"line":191,"column":7}},"113":{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},"114":{"start":{"line":187,"column":10},"end":{"line":187,"column":23}},"115":{"start":{"line":190,"column":8},"end":{"line":190,"column":21}},"116":{"start":{"line":194,"column":2},"end":{"line":202,"column":3}},"117":{"start":{"line":194,"column":15},"end":{"line":194,"column":26}},"118":{"start":{"line":195,"column":4},"end":{"line":201,"column":5}},"119":{"start":{"line":196,"column":6},"end":{"line":198,"column":7}},"120":{"start":{"line":197,"column":8},"end":{"line":197,"column":21}},"121":{"start":{"line":200,"column":6},"end":{"line":200,"column":19}},"122":{"start":{"line":203,"column":2},"end":{"line":206,"column":4}},"123":{"start":{"line":209,"column":18},"end":{"line":209,"column":20}},"124":{"start":{"line":210,"column":18},"end":{"line":210,"column":20}},"125":{"start":{"line":211,"column":2},"end":{"line":217,"column":3}},"126":{"start":{"line":212,"column":26},"end":{"line":212,"column":88}},"127":{"start":{"line":213,"column":4},"end":{"line":216,"column":5}},"128":{"start":{"line":214,"column":6},"end":{"line":214,"column":42}},"129":{"start":{"line":215,"column":6},"end":{"line":215,"column":42}},"130":{"start":{"line":218,"column":21},"end":{"line":218,"column":71}},"131":{"start":{"line":218,"column":65},"end":{"line":218,"column":70}},"132":{"start":{"line":219,"column":21},"end":{"line":219,"column":71}},"133":{"start":{"line":219,"column":65},"end":{"line":219,"column":70}},"134":{"start":{"line":220,"column":24},"end":{"line":220,"column":26}},"135":{"start":{"line":222,"column":21},"end":{"line":222,"column":23}},"136":{"start":{"line":223,"column":16},"end":{"line":223,"column":22}},"137":{"start":{"line":224,"column":4},"end":{"line":229,"column":5}},"138":{"start":{"line":224,"column":17},"end":{"line":224,"column":18}},"139":{"start":{"line":225,"column":6},"end":{"line":228,"column":7}},"140":{"start":{"line":226,"column":8},"end":{"line":226,"column":43}},"141":{"start":{"line":227,"column":8},"end":{"line":227,"column":23}},"142":{"start":{"line":230,"column":4},"end":{"line":230,"column":48}},"143":{"start":{"line":231,"column":4},"end":{"line":231,"column":20}},"144":{"start":{"line":233,"column":22},"end":{"line":233,"column":56}},"145":{"start":{"line":234,"column":22},"end":{"line":234,"column":56}},"146":{"start":{"line":235,"column":2},"end":{"line":244,"column":3}},"147":{"start":{"line":236,"column":4},"end":{"line":243,"column":5}},"148":{"start":{"line":237,"column":6},"end":{"line":242,"column":9}},"149":{"start":{"line":245,"column":2},"end":{"line":245,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":26},"end":{"line":2,"column":27}},"loc":{"start":{"line":2,"column":55},"end":{"line":22,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":25},"end":{"line":19,"column":5}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":31},"end":{"line":23,"column":32}},"loc":{"start":{"line":23,"column":50},"end":{"line":28,"column":1}},"line":23},"3":{"name":"getKey","decl":{"start":{"line":25,"column":18},"end":{"line":25,"column":24}},"loc":{"start":{"line":25,"column":27},"end":{"line":27,"column":3}},"line":25},"4":{"name":"cellHasValue","decl":{"start":{"line":29,"column":9},"end":{"line":29,"column":21}},"loc":{"start":{"line":29,"column":28},"end":{"line":34,"column":1}},"line":29},"5":{"name":"expandToContinuousRange","decl":{"start":{"line":35,"column":16},"end":{"line":35,"column":39}},"loc":{"start":{"line":35,"column":75},"end":{"line":123,"column":1}},"line":35},"6":{"name":"generateNullCell","decl":{"start":{"line":124,"column":16},"end":{"line":124,"column":32}},"loc":{"start":{"line":124,"column":40},"end":{"line":135,"column":1}},"line":124},"7":{"name":"(anonymous_7)","decl":{"start":{"line":126,"column":16},"end":{"line":126,"column":17}},"loc":{"start":{"line":126,"column":28},"end":{"line":133,"column":3}},"line":126},"8":{"name":"generateNullCellValue","decl":{"start":{"line":136,"column":16},"end":{"line":136,"column":37}},"loc":{"start":{"line":136,"column":45},"end":{"line":153,"column":1}},"line":136},"9":{"name":"(anonymous_9)","decl":{"start":{"line":138,"column":16},"end":{"line":138,"column":17}},"loc":{"start":{"line":138,"column":28},"end":{"line":151,"column":3}},"line":138},"10":{"name":"generateNullCellStyle","decl":{"start":{"line":154,"column":16},"end":{"line":154,"column":37}},"loc":{"start":{"line":154,"column":46},"end":{"line":167,"column":1}},"line":154},"11":{"name":"(anonymous_11)","decl":{"start":{"line":156,"column":17},"end":{"line":156,"column":18}},"loc":{"start":{"line":156,"column":28},"end":{"line":165,"column":3}},"line":156},"12":{"name":"getActiveWorksheet","decl":{"start":{"line":168,"column":16},"end":{"line":168,"column":34}},"loc":{"start":{"line":168,"column":52},"end":{"line":172,"column":1}},"line":168},"13":{"name":"rangeToDiscreteRange","decl":{"start":{"line":173,"column":16},"end":{"line":173,"column":36}},"loc":{"start":{"line":173,"column":87},"end":{"line":207,"column":1}},"line":173},"14":{"name":"getVisibleRanges","decl":{"start":{"line":208,"column":16},"end":{"line":208,"column":32}},"loc":{"start":{"line":208,"column":70},"end":{"line":246,"column":1}},"line":208},"15":{"name":"(anonymous_15)","decl":{"start":{"line":218,"column":55},"end":{"line":218,"column":56}},"loc":{"start":{"line":218,"column":65},"end":{"line":218,"column":70}},"line":218},"16":{"name":"(anonymous_16)","decl":{"start":{"line":219,"column":55},"end":{"line":219,"column":56}},"loc":{"start":{"line":219,"column":65},"end":{"line":219,"column":70}},"line":219},"17":{"name":"findContinuousSegments","decl":{"start":{"line":221,"column":11},"end":{"line":221,"column":33}},"loc":{"start":{"line":221,"column":39},"end":{"line":232,"column":3}},"line":221}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":37},"end":{"line":2,"column":50}},"type":"default-arg","locations":[{"start":{"line":2,"column":48},"end":{"line":2,"column":50}}],"line":2},"1":{"loc":{"start":{"line":5,"column":20},"end":{"line":5,"column":43}},"type":"binary-expr","locations":[{"start":{"line":5,"column":20},"end":{"line":5,"column":27}},{"start":{"line":5,"column":31},"end":{"line":5,"column":43}}],"line":5},"2":{"loc":{"start":{"line":6,"column":6},"end":{"line":9,"column":7}},"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":9,"column":7}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":10,"column":6},"end":{"line":17,"column":7}},"type":"if","locations":[{"start":{"line":10,"column":6},"end":{"line":17,"column":7}},{"start":{"line":15,"column":13},"end":{"line":17,"column":7}}],"line":10},"4":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{},"end":{}}],"line":11},"5":{"loc":{"start":{"line":23,"column":32},"end":{"line":23,"column":45}},"type":"default-arg","locations":[{"start":{"line":23,"column":44},"end":{"line":23,"column":45}}],"line":23},"6":{"loc":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},{"start":{},"end":{}}],"line":30},"7":{"loc":{"start":{"line":30,"column":6},"end":{"line":30,"column":38}},"type":"binary-expr","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":21}},{"start":{"line":30,"column":25},"end":{"line":30,"column":38}}],"line":30},"8":{"loc":{"start":{"line":33,"column":9},"end":{"line":33,"column":83}},"type":"binary-expr","locations":[{"start":{"line":33,"column":9},"end":{"line":33,"column":26}},{"start":{"line":33,"column":30},"end":{"line":33,"column":45}},{"start":{"line":33,"column":49},"end":{"line":33,"column":62}},{"start":{"line":33,"column":66},"end":{"line":33,"column":83}}],"line":33},"9":{"loc":{"start":{"line":44,"column":4},"end":{"line":61,"column":5}},"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":61,"column":5}},{"start":{},"end":{}}],"line":44},"10":{"loc":{"start":{"line":44,"column":8},"end":{"line":44,"column":38}},"type":"binary-expr","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":10}},{"start":{"line":44,"column":14},"end":{"line":44,"column":38}}],"line":44},"11":{"loc":{"start":{"line":54,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":59,"column":9}},{"start":{},"end":{}}],"line":54},"12":{"loc":{"start":{"line":62,"column":4},"end":{"line":83,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":83,"column":5}},{"start":{},"end":{}}],"line":62},"13":{"loc":{"start":{"line":62,"column":8},"end":{"line":62,"column":47}},"type":"binary-expr","locations":[{"start":{"line":62,"column":8},"end":{"line":62,"column":12}},{"start":{"line":62,"column":16},"end":{"line":62,"column":47}}],"line":62},"14":{"loc":{"start":{"line":72,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":81,"column":9}},{"start":{},"end":{}}],"line":72},"15":{"loc":{"start":{"line":75,"column":33},"end":{"line":75,"column":89}},"type":"cond-expr","locations":[{"start":{"line":75,"column":64},"end":{"line":75,"column":85}},{"start":{"line":75,"column":88},"end":{"line":75,"column":89}}],"line":75},"16":{"loc":{"start":{"line":84,"column":4},"end":{"line":101,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":101,"column":5}},{"start":{},"end":{}}],"line":84},"17":{"loc":{"start":{"line":84,"column":8},"end":{"line":84,"column":43}},"type":"binary-expr","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":12}},{"start":{"line":84,"column":16},"end":{"line":84,"column":43}}],"line":84},"18":{"loc":{"start":{"line":94,"column":8},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":99,"column":9}},{"start":{},"end":{}}],"line":94},"19":{"loc":{"start":{"line":102,"column":4},"end":{"line":120,"column":5}},"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":120,"column":5}},{"start":{},"end":{}}],"line":102},"20":{"loc":{"start":{"line":102,"column":8},"end":{"line":102,"column":54}},"type":"binary-expr","locations":[{"start":{"line":102,"column":8},"end":{"line":102,"column":13}},{"start":{"line":102,"column":17},"end":{"line":102,"column":54}}],"line":102},"21":{"loc":{"start":{"line":112,"column":8},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":118,"column":9}},{"start":{},"end":{}}],"line":112},"22":{"loc":{"start":{"line":114,"column":36},"end":{"line":114,"column":92}},"type":"cond-expr","locations":[{"start":{"line":114,"column":67},"end":{"line":114,"column":88}},{"start":{"line":114,"column":91},"end":{"line":114,"column":92}}],"line":114},"23":{"loc":{"start":{"line":175,"column":19},"end":{"line":175,"column":177}},"type":"cond-expr","locations":[{"start":{"line":175,"column":28},"end":{"line":175,"column":98}},{"start":{"line":175,"column":101},"end":{"line":175,"column":177}}],"line":175},"24":{"loc":{"start":{"line":176,"column":20},"end":{"line":176,"column":99}},"type":"cond-expr","locations":[{"start":{"line":176,"column":32},"end":{"line":176,"column":70}},{"start":{"line":176,"column":73},"end":{"line":176,"column":99}}],"line":176},"25":{"loc":{"start":{"line":177,"column":2},"end":{"line":179,"column":3}},"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":179,"column":3}},{"start":{},"end":{}}],"line":177},"26":{"loc":{"start":{"line":184,"column":4},"end":{"line":192,"column":5}},"type":"if","locations":[{"start":{"line":184,"column":4},"end":{"line":192,"column":5}},{"start":{},"end":{}}],"line":184},"27":{"loc":{"start":{"line":185,"column":6},"end":{"line":191,"column":7}},"type":"if","locations":[{"start":{"line":185,"column":6},"end":{"line":191,"column":7}},{"start":{"line":189,"column":13},"end":{"line":191,"column":7}}],"line":185},"28":{"loc":{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},"type":"if","locations":[{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},{"start":{},"end":{}}],"line":186},"29":{"loc":{"start":{"line":195,"column":4},"end":{"line":201,"column":5}},"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":201,"column":5}},{"start":{"line":199,"column":11},"end":{"line":201,"column":5}}],"line":195},"30":{"loc":{"start":{"line":196,"column":6},"end":{"line":198,"column":7}},"type":"if","locations":[{"start":{"line":196,"column":6},"end":{"line":198,"column":7}},{"start":{},"end":{}}],"line":196},"31":{"loc":{"start":{"line":213,"column":4},"end":{"line":216,"column":5}},"type":"if","locations":[{"start":{"line":213,"column":4},"end":{"line":216,"column":5}},{"start":{},"end":{}}],"line":213},"32":{"loc":{"start":{"line":225,"column":6},"end":{"line":228,"column":7}},"type":"if","locations":[{"start":{"line":225,"column":6},"end":{"line":228,"column":7}},{"start":{},"end":{}}],"line":225}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0],"6":[0,0],"7":[0,0],"8":[0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/basics/utils.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, ICellData, IObjectMatrixPrimitiveType, IRange, Nullable, UniverInstanceService, Workbook, Worksheet } from '@univerjs/core';\nimport type { IExpandParams } from '../commands/commands/utils/selection-utils';\nimport type { IDiscreteRange } from './interfaces';\nimport { IUniverInstanceService, ObjectMatrix, UniverInstanceType } from '@univerjs/core';\n\nexport const groupByKey = <T = Record<string, unknown>>(arr: T[], key: string, blankKey = '') => {\n    return arr.reduce(\n        (result, current) => {\n            const value = current && ((current as Record<string, unknown>)[key] as string);\n\n            if (typeof value !== 'string') {\n                console.warn(current, `${key} is not string`);\n                return result;\n            }\n\n            if (value) {\n                if (!result[value]) {\n                    result[value] = [];\n                }\n                result[value].push(current);\n            } else {\n                result[blankKey].push(current);\n            }\n            return result;\n        },\n        {} as Record<string, T[]>\n    );\n};\n\nexport const createUniqueKey = (initValue = 0) => {\n    let _initValue = initValue;\n    /**\n     * Increments 1 per call\n     */\n    return function getKey() {\n        return _initValue++;\n    };\n};\n\nfunction cellHasValue(cell: ICellData | undefined): boolean {\n    if (cell === undefined || cell === null) {\n        return false;\n    }\n    return (cell.v !== undefined && cell.v !== null && cell.v !== '') || cell.p !== undefined;\n}\n\n// eslint-disable-next-line max-lines-per-function\nexport function expandToContinuousRange(startRange: IRange, directions: IExpandParams, worksheet: Worksheet): IRange {\n    const { left, right, up, down } = directions;\n    const maxRow = worksheet.getMaxRows();\n    const maxColumn = worksheet.getMaxColumns();\n\n    let changed = true;\n    const destRange: IRange = { ...startRange }; // startRange should not be used below\n\n    const allMatrix = worksheet.getMatrixWithMergedCells(0, 0, maxRow - 1, maxColumn - 1);\n    while (changed) {\n        changed = false;\n\n        if (up && destRange.startRow !== 0) {\n            // see if there are value in the upper row of contents\n            // set `changed` to true if `startRow` really changes\n            const destRow = destRange.startRow - 1; // it may decrease if there are merged cell\n\n            const checkRange = {\n                startRow: destRow,\n                startColumn: destRange.startColumn,\n                endRow: destRow,\n                endColumn: destRange.endColumn,\n            };\n            for (let col = checkRange.startColumn; col <= checkRange.endColumn; col++) {\n                const cell = allMatrix.getValue(checkRange.startRow, col)!;\n                if (cellHasValue(cell)) {\n                    destRange.startRow = Math.min(checkRange.startRow, destRange.startRow);\n                    destRange.startColumn = Math.min(col, destRange.startColumn);\n                    destRange.endColumn = Math.max(col, destRange.endColumn);\n                    changed = true;\n                }\n            }\n        }\n\n        if (down && destRange.endRow !== maxRow - 1) {\n            const destRow = destRange.endRow + 1;\n            const checkRange = {\n                startRow: destRow,\n                startColumn: destRange.startColumn,\n                endRow: destRow,\n                endColumn: destRange.endColumn,\n            };\n            for (let col = checkRange.startColumn; col <= checkRange.endColumn; col++) {\n                const cellValue = allMatrix.getValue(checkRange.startRow, col)!;\n                if (cellHasValue(cellValue)) {\n                    destRange.endRow = Math.max(checkRange.endRow, destRange.endRow);\n                    destRange.endRow = Math.max(\n                        checkRange.endRow + (cellValue.rowSpan !== undefined ? cellValue.rowSpan - 1 : 0),\n                        destRange.endRow\n                    );\n                    destRange.startColumn = Math.min(col, destRange.startColumn);\n                    destRange.endColumn = Math.max(col, destRange.endColumn);\n                    changed = true;\n                }\n            }\n        }\n\n        if (left && destRange.startColumn !== 0) {\n            const destCol = destRange.startColumn - 1;\n            const checkRange = {\n                startRow: destRange.startRow,\n                startColumn: destCol,\n                endRow: destRange.endRow,\n                endColumn: destCol,\n            };\n            for (let row = checkRange.startRow; row <= checkRange.endRow; row++) {\n                const cell = allMatrix.getValue(row, checkRange.startColumn)!;\n                if (cellHasValue(cell)) {\n                    destRange.startColumn = Math.min(checkRange.startColumn, destRange.startColumn);\n                    destRange.startRow = Math.min(row, destRange.startRow);\n                    destRange.endRow = Math.max(row, destRange.endRow);\n                    changed = true;\n                }\n            }\n        }\n\n        if (right && destRange.endColumn !== maxColumn - 1) {\n            const destCol = destRange.endColumn + 1;\n            const checkRange = {\n                startRow: destRange.startRow,\n                startColumn: destCol,\n                endRow: destRange.endRow,\n                endColumn: destCol,\n            };\n            for (let row = checkRange.startRow; row <= checkRange.endRow; row++) {\n                const cellValue = allMatrix.getValue(row, checkRange.endColumn)!;\n                if (cellHasValue(cellValue)) {\n                    destRange.endColumn = Math.max(\n                        checkRange.endColumn + (cellValue.colSpan !== undefined ? cellValue.colSpan - 1 : 0),\n                        destRange.endColumn\n                    );\n                    changed = true;\n                }\n            }\n        }\n    }\n\n    return destRange;\n}\n/**\n * Generate cellValue from range and set null\n * @param range\n * @returns\n */\nexport function generateNullCell(range: IRange[]): IObjectMatrixPrimitiveType<Nullable<ICellData>> {\n    const cellValue = new ObjectMatrix<Nullable<ICellData>>();\n    range.forEach((range: IRange) => {\n        const { startRow, startColumn, endRow, endColumn } = range;\n        for (let i = startRow; i <= endRow; i++) {\n            for (let j = startColumn; j <= endColumn; j++) {\n                cellValue.setValue(i, j, null);\n            }\n        }\n    });\n\n    return cellValue.clone();\n}\n\n/**\n * Generate cellValue from range and set v/p/f/si/custom to null\n * @param range\n * @returns\n */\nexport function generateNullCellValue(range: IRange[]): IObjectMatrixPrimitiveType<ICellData> {\n    const cellValue = new ObjectMatrix<ICellData>();\n    range.forEach((range: IRange) => {\n        const { startRow, startColumn, endRow, endColumn } = range;\n        for (let i = startRow; i <= endRow; i++) {\n            for (let j = startColumn; j <= endColumn; j++) {\n                cellValue.setValue(i, j, {\n                    v: null,\n                    p: null,\n                    f: null,\n                    si: null,\n                    custom: null,\n                });\n            }\n        }\n    });\n\n    return cellValue.clone();\n}\n\n// Generate cellValue from range and set s to null\nexport function generateNullCellStyle(ranges: IRange[]): IObjectMatrixPrimitiveType<ICellData> {\n    const cellValue = new ObjectMatrix<ICellData>();\n\n    ranges.forEach((range: IRange) => {\n        const { startRow, startColumn, endRow, endColumn } = range;\n\n        for (let i = startRow; i <= endRow; i++) {\n            for (let j = startColumn; j <= endColumn; j++) {\n                cellValue.setValue(i, j, {\n                    s: null,\n                });\n            }\n        }\n    });\n\n    return cellValue.clone();\n}\n\nexport function getActiveWorksheet(instanceService: UniverInstanceService): [Nullable<Workbook>, Nullable<Worksheet>] {\n    const workbook = instanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n    const worksheet = workbook?.getActiveSheet();\n    return [workbook, worksheet];\n}\n\nexport function rangeToDiscreteRange(range: IRange, accessor: IAccessor, unitId?: string, subUnitId?: string, considerHide?: boolean): IDiscreteRange | null {\n    const univerInstanceService = accessor.get(IUniverInstanceService);\n    const workbook = unitId\n        ? univerInstanceService.getUnit<Workbook>(unitId, UniverInstanceType.UNIVER_SHEET)\n        : univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n    const worksheet = subUnitId ? workbook?.getSheetBySheetId(subUnitId) : workbook?.getActiveSheet();\n    if (!worksheet) {\n        return null;\n    }\n    const { startRow, endRow, startColumn, endColumn } = range;\n\n    const rows = [];\n    const cols = [];\n    for (let r = startRow; r <= endRow; r++) {\n        if (!worksheet.getRowFiltered(r)) {\n            if (considerHide) {\n                if (worksheet.getRowRawVisible(r)) {\n                    rows.push(r);\n                }\n            } else {\n                rows.push(r);\n            }\n        }\n    }\n    for (let c = startColumn; c <= endColumn; c++) {\n        if (considerHide) {\n            if (worksheet.getColVisible(c)) {\n                cols.push(c);\n            }\n        } else {\n            cols.push(c);\n        }\n    }\n    return {\n        rows,\n        cols,\n    };\n}\n\nexport function getVisibleRanges(ranges: IRange[], accessor: IAccessor, unitId?: string, subUnitId?: string): IRange[] {\n    const allRows: number[] = [];\n    const allCols: number[] = [];\n\n    for (const range of ranges) {\n        const discreteRange = rangeToDiscreteRange(range, accessor, unitId, subUnitId, true);\n\n        if (discreteRange) {\n            allRows.push(...discreteRange.rows);\n            allCols.push(...discreteRange.cols);\n        }\n    }\n\n    const uniqueRows = Array.from(new Set(allRows)).sort((a, b) => a - b);\n    const uniqueCols = Array.from(new Set(allCols)).sort((a, b) => a - b);\n\n    const visibleRanges: IRange[] = [];\n\n    function findContinuousSegments(arr: number[]): number[][] {\n        const segments: number[][] = [];\n        let start = arr[0];\n\n        for (let i = 1; i < arr.length; i++) {\n            if (arr[i] !== arr[i - 1] + 1) {\n                segments.push([start, arr[i - 1]]);\n                start = arr[i];\n            }\n        }\n        segments.push([start, arr[arr.length - 1]]);\n        return segments;\n    }\n\n    const rowSegments = findContinuousSegments(uniqueRows);\n    const colSegments = findContinuousSegments(uniqueCols);\n\n    for (const [startRow, endRow] of rowSegments) {\n        for (const [startCol, endCol] of colSegments) {\n            visibleRanges.push({\n                startRow,\n                endRow,\n                startColumn: startCol,\n                endColumn: endCol,\n            });\n        }\n    }\n\n    return visibleRanges;\n}\n"],"mappings":"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","names":["range"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4f028f98b18ba0edd562f63732b3477ed303870b"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/services/numfmt/type.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/services/numfmt/type.ts","statementMap":{"0":{"start":{"line":2,"column":30},"end":{"line":2,"column":64}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/services/numfmt/type.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, IRange, Nullable, ObjectMatrix } from '@univerjs/core';\nimport { createIdentifier } from '@univerjs/core';\n\n// eslint-disable-next-line ts/consistent-type-definitions\nexport type INumfmtItem = {\n    i: string;\n};\n\nexport type FormatType =\n    | 'currency'\n    | 'date'\n    | 'datetime'\n    | 'error'\n    | 'fraction'\n    | 'general'\n    | 'grouped'\n    | 'number'\n    | 'percent'\n    | 'scientific'\n    | 'text'\n    | 'time'\n    | 'unknown';\n\nexport interface INumfmtItemWithCache {\n    // when change parameters or pattern, the cache is cleared follow mutation execute\n    _cache?: {\n        result: ICellData;\n        parameters: number; // The parameter that was last calculated\n    };\n    pattern: string;\n}\n\nexport const INumfmtService = createIdentifier<INumfmtService>('INumfmtService');\nexport interface INumfmtService {\n    getValue(\n        unitId: string,\n        subUnitId: string,\n        row: number,\n        col: number,\n        model?: ObjectMatrix<INumfmtItem>\n    ): Nullable<INumfmtItemWithCache>;\n    setValues(\n        unitId: string,\n        subUnitId: string,\n        values: Array<{ ranges: IRange[]; pattern: string }>\n    ): void;\n    deleteValues(unitId: string, subUnitId: string, values: IRange[]): void;\n}\n"],"mappings":"AAiBA,SAAS,wBAAwB;AA+B1B,aAAM,iBAAiB,iBAAiC,gBAAgB;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9908d83120ceee6e857bbf8dd21dc5455412c0fa"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/commands/mutations/numfmt-mutation.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/commands/mutations/numfmt-mutation.ts","statementMap":{"0":{"start":{"line":5,"column":44},"end":{"line":50,"column":1}},"1":{"start":{"line":6,"column":24},"end":{"line":6,"column":52}},"2":{"start":{"line":7,"column":40},"end":{"line":7,"column":46}},"3":{"start":{"line":8,"column":16},"end":{"line":8,"column":18}},"4":{"start":{"line":9,"column":22},"end":{"line":9,"column":24}},"5":{"start":{"line":10,"column":2},"end":{"line":26,"column":5}},"6":{"start":{"line":11,"column":18},"end":{"line":11,"column":28}},"7":{"start":{"line":12,"column":4},"end":{"line":25,"column":7}},"8":{"start":{"line":13,"column":6},"end":{"line":24,"column":9}},"9":{"start":{"line":14,"column":26},"end":{"line":14,"column":77}},"10":{"start":{"line":15,"column":8},"end":{"line":23,"column":9}},"11":{"start":{"line":16,"column":10},"end":{"line":20,"column":13}},"12":{"start":{"line":22,"column":10},"end":{"line":22,"column":93}},"13":{"start":{"line":27,"column":17},"end":{"line":27,"column":19}},"14":{"start":{"line":28,"column":2},"end":{"line":38,"column":3}},"15":{"start":{"line":29,"column":19},"end":{"line":29,"column":66}},"16":{"start":{"line":30,"column":4},"end":{"line":33,"column":7}},"17":{"start":{"line":31,"column":16},"end":{"line":31,"column":34}},"18":{"start":{"line":32,"column":6},"end":{"line":32,"column":38}},"19":{"start":{"line":34,"column":4},"end":{"line":37,"column":7}},"20":{"start":{"line":39,"column":2},"end":{"line":48,"column":3}},"21":{"start":{"line":40,"column":4},"end":{"line":47,"column":7}},"22":{"start":{"line":49,"column":2},"end":{"line":49,"column":16}},"23":{"start":{"line":51,"column":33},"end":{"line":79,"column":1}},"24":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"25":{"start":{"line":56,"column":6},"end":{"line":56,"column":19}},"26":{"start":{"line":58,"column":31},"end":{"line":58,"column":37}},"27":{"start":{"line":59,"column":26},"end":{"line":59,"column":54}},"28":{"start":{"line":60,"column":19},"end":{"line":60,"column":32}},"29":{"start":{"line":61,"column":20},"end":{"line":61,"column":36}},"30":{"start":{"line":62,"column":22},"end":{"line":75,"column":5}},"31":{"start":{"line":64,"column":22},"end":{"line":64,"column":32}},"32":{"start":{"line":65,"column":23},"end":{"line":65,"column":40}},"33":{"start":{"line":66,"column":8},"end":{"line":71,"column":9}},"34":{"start":{"line":67,"column":10},"end":{"line":70,"column":13}},"35":{"start":{"line":72,"column":8},"end":{"line":72,"column":22}},"36":{"start":{"line":76,"column":4},"end":{"line":76,"column":56}},"37":{"start":{"line":77,"column":4},"end":{"line":77,"column":16}},"38":{"start":{"line":80,"column":36},"end":{"line":92,"column":1}},"39":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"40":{"start":{"line":85,"column":6},"end":{"line":85,"column":19}},"41":{"start":{"line":87,"column":42},"end":{"line":87,"column":48}},"42":{"start":{"line":88,"column":26},"end":{"line":88,"column":54}},"43":{"start":{"line":89,"column":4},"end":{"line":89,"column":58}},"44":{"start":{"line":90,"column":4},"end":{"line":90,"column":16}},"45":{"start":{"line":93,"column":47},"end":{"line":118,"column":1}},"46":{"start":{"line":94,"column":24},"end":{"line":94,"column":52}},"47":{"start":{"line":95,"column":40},"end":{"line":95,"column":46}},"48":{"start":{"line":96,"column":16},"end":{"line":96,"column":18}},"49":{"start":{"line":97,"column":2},"end":{"line":108,"column":5}},"50":{"start":{"line":98,"column":4},"end":{"line":107,"column":7}},"51":{"start":{"line":99,"column":24},"end":{"line":99,"column":75}},"52":{"start":{"line":100,"column":6},"end":{"line":106,"column":7}},"53":{"start":{"line":101,"column":8},"end":{"line":105,"column":11}},"54":{"start":{"line":109,"column":2},"end":{"line":111,"column":3}},"55":{"start":{"line":110,"column":4},"end":{"line":110,"column":14}},"56":{"start":{"line":112,"column":17},"end":{"line":112,"column":64}},"57":{"start":{"line":113,"column":2},"end":{"line":116,"column":5}},"58":{"start":{"line":114,"column":14},"end":{"line":114,"column":32}},"59":{"start":{"line":115,"column":4},"end":{"line":115,"column":36}},"60":{"start":{"line":117,"column":2},"end":{"line":117,"column":48}},"61":{"start":{"line":119,"column":37},"end":{"line":138,"column":1}},"62":{"start":{"line":120,"column":16},"end":{"line":120,"column":44}},"63":{"start":{"line":121,"column":17},"end":{"line":121,"column":19}},"64":{"start":{"line":122,"column":17},"end":{"line":122,"column":19}},"65":{"start":{"line":123,"column":17},"end":{"line":123,"column":34}},"66":{"start":{"line":124,"column":2},"end":{"line":136,"column":5}},"67":{"start":{"line":125,"column":22},"end":{"line":125,"column":36}},"68":{"start":{"line":126,"column":16},"end":{"line":126,"column":24}},"69":{"start":{"line":127,"column":4},"end":{"line":129,"column":6}},"70":{"start":{"line":130,"column":4},"end":{"line":135,"column":7}},"71":{"start":{"line":131,"column":6},"end":{"line":133,"column":7}},"72":{"start":{"line":132,"column":8},"end":{"line":132,"column":37}},"73":{"start":{"line":134,"column":6},"end":{"line":134,"column":63}},"74":{"start":{"line":137,"column":2},"end":{"line":137,"column":47}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":44},"end":{"line":5,"column":45}},"loc":{"start":{"line":5,"column":66},"end":{"line":50,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":30},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":38},"end":{"line":26,"column":3}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":25},"end":{"line":12,"column":26}},"loc":{"start":{"line":12,"column":36},"end":{"line":25,"column":5}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":27},"end":{"line":13,"column":28}},"loc":{"start":{"line":13,"column":41},"end":{"line":24,"column":7}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":39},"end":{"line":30,"column":40}},"loc":{"start":{"line":30,"column":48},"end":{"line":33,"column":5}},"line":30},"5":{"name":"(anonymous_5)","decl":{"start":{"line":54,"column":11},"end":{"line":54,"column":12}},"loc":{"start":{"line":54,"column":33},"end":{"line":78,"column":3}},"line":54},"6":{"name":"(anonymous_6)","decl":{"start":{"line":63,"column":6},"end":{"line":63,"column":7}},"loc":{"start":{"line":63,"column":22},"end":{"line":73,"column":7}},"line":63},"7":{"name":"(anonymous_7)","decl":{"start":{"line":83,"column":11},"end":{"line":83,"column":12}},"loc":{"start":{"line":83,"column":33},"end":{"line":91,"column":3}},"line":83},"8":{"name":"(anonymous_8)","decl":{"start":{"line":93,"column":47},"end":{"line":93,"column":48}},"loc":{"start":{"line":93,"column":69},"end":{"line":118,"column":1}},"line":93},"9":{"name":"(anonymous_9)","decl":{"start":{"line":97,"column":17},"end":{"line":97,"column":18}},"loc":{"start":{"line":97,"column":28},"end":{"line":108,"column":3}},"line":97},"10":{"name":"(anonymous_10)","decl":{"start":{"line":98,"column":25},"end":{"line":98,"column":26}},"loc":{"start":{"line":98,"column":39},"end":{"line":107,"column":5}},"line":98},"11":{"name":"(anonymous_11)","decl":{"start":{"line":113,"column":37},"end":{"line":113,"column":38}},"loc":{"start":{"line":113,"column":46},"end":{"line":116,"column":3}},"line":113},"12":{"name":"(anonymous_12)","decl":{"start":{"line":119,"column":37},"end":{"line":119,"column":38}},"loc":{"start":{"line":119,"column":67},"end":{"line":138,"column":1}},"line":119},"13":{"name":"(anonymous_13)","decl":{"start":{"line":124,"column":29},"end":{"line":124,"column":30}},"loc":{"start":{"line":124,"column":42},"end":{"line":136,"column":3}},"line":124},"14":{"name":"(anonymous_14)","decl":{"start":{"line":130,"column":22},"end":{"line":130,"column":23}},"loc":{"start":{"line":130,"column":32},"end":{"line":135,"column":5}},"line":130}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":23,"column":9}},{"start":{"line":21,"column":15},"end":{"line":23,"column":9}}],"line":15},"1":{"loc":{"start":{"line":28,"column":2},"end":{"line":38,"column":3}},"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":38,"column":3}},{"start":{},"end":{}}],"line":28},"2":{"loc":{"start":{"line":39,"column":2},"end":{"line":48,"column":3}},"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":48,"column":3}},{"start":{},"end":{}}],"line":39},"3":{"loc":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},{"start":{},"end":{}}],"line":55},"4":{"loc":{"start":{"line":66,"column":8},"end":{"line":71,"column":9}},"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":71,"column":9}},{"start":{},"end":{}}],"line":66},"5":{"loc":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},{"start":{},"end":{}}],"line":84},"6":{"loc":{"start":{"line":100,"column":6},"end":{"line":106,"column":7}},"type":"if","locations":[{"start":{"line":100,"column":6},"end":{"line":106,"column":7}},{"start":{},"end":{}}],"line":100},"7":{"loc":{"start":{"line":109,"column":2},"end":{"line":111,"column":3}},"type":"if","locations":[{"start":{"line":109,"column":2},"end":{"line":111,"column":3}},{"start":{},"end":{}}],"line":109},"8":{"loc":{"start":{"line":131,"column":6},"end":{"line":133,"column":7}},"type":"if","locations":[{"start":{"line":131,"column":6},"end":{"line":133,"column":7}},{"start":{},"end":{}}],"line":131}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":6,"25":0,"26":6,"27":6,"28":6,"29":6,"30":6,"31":6,"32":6,"33":6,"34":6,"35":6,"36":6,"37":6,"38":1,"39":1,"40":0,"41":1,"42":1,"43":1,"44":1,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":6,"6":6,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,6],"4":[6,0],"5":[0,1],"6":[0,0],"7":[0,0],"8":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/commands/mutations/numfmt-mutation.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, ICommand, IMutationInfo, IRange } from '@univerjs/core';\nimport { cellToRange, CommandType, Range } from '@univerjs/core';\n\nimport { rangeMerge } from '../../basics/range-merge';\nimport { createUniqueKey, groupByKey } from '../../basics/utils';\nimport { INumfmtService } from '../../services/numfmt/type';\n\nexport const factorySetNumfmtUndoMutation = (accessor: IAccessor, option: ISetNumfmtMutationParams) => {\n    const numfmtService = accessor.get(INumfmtService);\n    const { values, unitId, subUnitId } = option;\n    const cells: ISetCellsNumfmt = [];\n    const removeCells: IRange[] = [];\n    Object.keys(values).forEach((id) => {\n        const value = values[id];\n        value.ranges.forEach((range) => {\n            Range.foreach(range, (row, col) => {\n                const oldNumfmt = numfmtService.getValue(unitId, subUnitId, row, col);\n                if (oldNumfmt) {\n                    cells.push({\n                        pattern: oldNumfmt.pattern,\n                        row,\n                        col,\n                    });\n                } else {\n                    removeCells.push({ startColumn: col, endColumn: col, startRow: row, endRow: row });\n                }\n            });\n        });\n    });\n    const result: Array<IMutationInfo<ISetNumfmtMutationParams | IRemoveNumfmtMutationParams>> = [];\n    if (cells.length) {\n        const params = transformCellsToRange(unitId, subUnitId, cells);\n        Object.keys(params.values).forEach((key) => {\n            const v = params.values[key];\n            v.ranges = rangeMerge(v.ranges);\n        });\n        result.push({\n            id: SetNumfmtMutation.id,\n            params: transformCellsToRange(unitId, subUnitId, cells),\n        });\n    }\n    if (removeCells.length) {\n        result.push({\n            id: RemoveNumfmtMutation.id,\n            params: {\n                unitId,\n                subUnitId,\n                ranges: removeCells,\n            },\n        });\n    }\n    return result;\n};\n\nexport interface ISetNumfmtMutationParams {\n    values: {\n        [id: string]: {\n            ranges: IRange[];\n        };\n    };\n    refMap: {\n        [id: string]: {\n            pattern: string;\n        };\n    };\n    unitId: string;\n    subUnitId: string;\n}\n\nexport const SetNumfmtMutation: ICommand<ISetNumfmtMutationParams> = {\n    id: 'sheet.mutation.set.numfmt',\n    type: CommandType.MUTATION,\n    handler: (accessor: IAccessor, params) => {\n        if (!params) {\n            return false;\n        }\n        const { values, refMap } = params;\n        const numfmtService = accessor.get(INumfmtService);\n        const unitId = params.unitId;\n        const sheetId = params.subUnitId;\n        const setValues = Object.keys(values).reduce(\n            (result, id) => {\n                const value = refMap[id];\n                const ranges = values[id].ranges;\n                if (value) {\n                    result.push({\n                        ...value,\n                        ranges,\n                    });\n                }\n                return result;\n            },\n            [] as Array<{ pattern: string; ranges: IRange[] }>\n        );\n        numfmtService.setValues(unitId, sheetId, setValues);\n        return true;\n    },\n};\n\nexport interface IRemoveNumfmtMutationParams {\n    ranges: IRange[];\n    unitId: string;\n    subUnitId: string;\n}\nexport const RemoveNumfmtMutation: ICommand<IRemoveNumfmtMutationParams> = {\n    id: 'sheet.mutation.remove.numfmt',\n    type: CommandType.MUTATION,\n    handler: (accessor: IAccessor, params) => {\n        if (!params) {\n            return false;\n        }\n        const { unitId, subUnitId, ranges } = params;\n        const numfmtService = accessor.get(INumfmtService);\n        numfmtService.deleteValues(unitId, subUnitId, ranges);\n        return true;\n    },\n};\nexport const factoryRemoveNumfmtUndoMutation = (accessor: IAccessor, option: IRemoveNumfmtMutationParams) => {\n    const numfmtService = accessor.get(INumfmtService);\n    const { ranges, unitId, subUnitId } = option;\n    const cells: ISetCellsNumfmt = [];\n    ranges.forEach((range) => {\n        Range.foreach(range, (row, col) => {\n            const oldNumfmt = numfmtService.getValue(unitId, subUnitId, row, col);\n            if (oldNumfmt) {\n                cells.push({\n                    pattern: oldNumfmt.pattern,\n                    row,\n                    col,\n                });\n            }\n        });\n    });\n    if (!cells.length) {\n        return [];\n    }\n    const params = transformCellsToRange(unitId, subUnitId, cells);\n    Object.keys(params.values).forEach((key) => {\n        const v = params.values[key];\n        v.ranges = rangeMerge(v.ranges);\n    });\n    return [{ id: SetNumfmtMutation.id, params }];\n};\nexport type ISetCellsNumfmt = Array<{ pattern: string; row: number; col: number }>;\nexport const transformCellsToRange = (\n    unitId: string,\n    subUnitId: string,\n    cells: ISetCellsNumfmt\n): ISetNumfmtMutationParams => {\n    const group = groupByKey(cells, 'pattern');\n    const refMap: ISetNumfmtMutationParams['refMap'] = {};\n    const values: ISetNumfmtMutationParams['values'] = {};\n    const getKey = createUniqueKey();\n    Object.keys(group).forEach((pattern) => {\n        const groupItem = group[pattern];\n        const key = getKey();\n        refMap[key] = {\n            pattern,\n        };\n        groupItem.forEach((item) => {\n            if (!values[key]) {\n                values[key] = { ranges: [] };\n            }\n            values[key].ranges.push(cellToRange(item.row, item.col));\n        });\n    });\n    return { unitId, subUnitId, refMap, values };\n};\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0371e2ef64dcde14910ee12ba9c58c9ecfe7290d"},"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/services/numfmt/numfmt.service.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/services/numfmt/numfmt.service.ts","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":37}},"1":{"start":{"line":2,"column":23},"end":{"line":2,"column":54}},"2":{"start":{"line":3,"column":22},"end":{"line":10,"column":1}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"4":{"start":{"line":5,"column":2},"end":{"line":7,"column":85}},"5":{"start":{"line":5,"column":15},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"7":{"start":{"line":7,"column":6},"end":{"line":7,"column":85}},"8":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"9":{"start":{"line":8,"column":22},"end":{"line":8,"column":53}},"10":{"start":{"line":9,"column":2},"end":{"line":9,"column":16}},"11":{"start":{"line":11,"column":22},"end":{"line":11,"column":90}},"12":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"13":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"14":{"start":{"line":19,"column":27},"end":{"line":99,"column":1}},"15":{"start":{"line":21,"column":4},"end":{"line":21,"column":12}},"16":{"start":{"line":22,"column":4},"end":{"line":22,"column":59}},"17":{"start":{"line":23,"column":4},"end":{"line":23,"column":57}},"18":{"start":{"line":24,"column":4},"end":{"line":24,"column":35}},"19":{"start":{"line":27,"column":21},"end":{"line":27,"column":79}},"20":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"21":{"start":{"line":29,"column":6},"end":{"line":29,"column":13}},"22":{"start":{"line":31,"column":22},"end":{"line":31,"column":60}},"23":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"24":{"start":{"line":33,"column":6},"end":{"line":33,"column":13}},"25":{"start":{"line":35,"column":19},"end":{"line":35,"column":39}},"26":{"start":{"line":36,"column":17},"end":{"line":36,"column":47}},"27":{"start":{"line":37,"column":4},"end":{"line":42,"column":5}},"28":{"start":{"line":38,"column":20},"end":{"line":38,"column":38}},"29":{"start":{"line":39,"column":6},"end":{"line":41,"column":7}},"30":{"start":{"line":40,"column":8},"end":{"line":40,"column":23}},"31":{"start":{"line":43,"column":4},"end":{"line":43,"column":16}},"32":{"start":{"line":46,"column":21},"end":{"line":46,"column":79}},"33":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"34":{"start":{"line":48,"column":6},"end":{"line":48,"column":13}},"35":{"start":{"line":50,"column":22},"end":{"line":50,"column":60}},"36":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"37":{"start":{"line":52,"column":6},"end":{"line":52,"column":13}},"38":{"start":{"line":54,"column":19},"end":{"line":54,"column":39}},"39":{"start":{"line":55,"column":4},"end":{"line":68,"column":7}},"40":{"start":{"line":56,"column":6},"end":{"line":67,"column":9}},"41":{"start":{"line":57,"column":21},"end":{"line":57,"column":51}},"42":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"43":{"start":{"line":59,"column":10},"end":{"line":59,"column":17}},"44":{"start":{"line":61,"column":27},"end":{"line":61,"column":34}},"45":{"start":{"line":62,"column":25},"end":{"line":62,"column":67}},"46":{"start":{"line":63,"column":25},"end":{"line":63,"column":40}},"47":{"start":{"line":64,"column":8},"end":{"line":64,"column":26}},"48":{"start":{"line":65,"column":27},"end":{"line":65,"column":52}},"49":{"start":{"line":66,"column":8},"end":{"line":66,"column":28}},"50":{"start":{"line":71,"column":21},"end":{"line":71,"column":79}},"51":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"52":{"start":{"line":73,"column":6},"end":{"line":73,"column":13}},"53":{"start":{"line":75,"column":22},"end":{"line":75,"column":60}},"54":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"55":{"start":{"line":77,"column":6},"end":{"line":77,"column":13}},"56":{"start":{"line":79,"column":19},"end":{"line":79,"column":39}},"57":{"start":{"line":80,"column":19},"end":{"line":80,"column":44}},"58":{"start":{"line":81,"column":4},"end":{"line":97,"column":7}},"59":{"start":{"line":82,"column":6},"end":{"line":96,"column":9}},"60":{"start":{"line":83,"column":8},"end":{"line":95,"column":11}},"61":{"start":{"line":84,"column":23},"end":{"line":84,"column":53}},"62":{"start":{"line":85,"column":10},"end":{"line":94,"column":11}},"63":{"start":{"line":86,"column":26},"end":{"line":86,"column":59}},"64":{"start":{"line":87,"column":28},"end":{"line":87,"column":50}},"65":{"start":{"line":88,"column":12},"end":{"line":88,"column":65}},"66":{"start":{"line":90,"column":29},"end":{"line":90,"column":62}},"67":{"start":{"line":91,"column":29},"end":{"line":91,"column":75}},"68":{"start":{"line":92,"column":28},"end":{"line":92,"column":53}},"69":{"start":{"line":93,"column":12},"end":{"line":93,"column":29}},"70":{"start":{"line":100,"column":0},"end":{"line":104,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":22},"end":{"line":3,"column":23}},"loc":{"start":{"line":3,"column":57},"end":{"line":10,"column":1}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":22},"end":{"line":11,"column":23}},"loc":{"start":{"line":11,"column":44},"end":{"line":11,"column":90}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":44},"end":{"line":11,"column":45}},"loc":{"start":{"line":11,"column":61},"end":{"line":11,"column":90}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":2},"end":{"line":20,"column":3}},"loc":{"start":{"line":20,"column":76},"end":{"line":25,"column":3}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":2},"end":{"line":26,"column":3}},"loc":{"start":{"line":26,"column":40},"end":{"line":44,"column":3}},"line":26},"5":{"name":"(anonymous_5)","decl":{"start":{"line":45,"column":2},"end":{"line":45,"column":3}},"loc":{"start":{"line":45,"column":42},"end":{"line":69,"column":3}},"line":45},"6":{"name":"(anonymous_6)","decl":{"start":{"line":55,"column":19},"end":{"line":55,"column":20}},"loc":{"start":{"line":55,"column":30},"end":{"line":68,"column":5}},"line":55},"7":{"name":"(anonymous_7)","decl":{"start":{"line":56,"column":27},"end":{"line":56,"column":28}},"loc":{"start":{"line":56,"column":41},"end":{"line":67,"column":7}},"line":56},"8":{"name":"(anonymous_8)","decl":{"start":{"line":70,"column":2},"end":{"line":70,"column":3}},"loc":{"start":{"line":70,"column":39},"end":{"line":98,"column":3}},"line":70},"9":{"name":"(anonymous_9)","decl":{"start":{"line":81,"column":19},"end":{"line":81,"column":20}},"loc":{"start":{"line":81,"column":30},"end":{"line":97,"column":5}},"line":81},"10":{"name":"(anonymous_10)","decl":{"start":{"line":82,"column":27},"end":{"line":82,"column":28}},"loc":{"start":{"line":82,"column":38},"end":{"line":96,"column":7}},"line":82},"11":{"name":"(anonymous_11)","decl":{"start":{"line":83,"column":29},"end":{"line":83,"column":30}},"loc":{"start":{"line":83,"column":43},"end":{"line":95,"column":9}},"line":83}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":26},"end":{"line":4,"column":32}},{"start":{"line":4,"column":35},"end":{"line":4,"column":80}}],"line":4},"1":{"loc":{"start":{"line":4,"column":35},"end":{"line":4,"column":80}},"type":"cond-expr","locations":[{"start":{"line":4,"column":42},"end":{"line":4,"column":71}},{"start":{"line":4,"column":74},"end":{"line":4,"column":80}}],"line":4},"2":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":85}},{"start":{},"end":{}}],"line":6},"3":{"loc":{"start":{"line":7,"column":15},"end":{"line":7,"column":84}},"type":"binary-expr","locations":[{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},{"start":{"line":7,"column":78},"end":{"line":7,"column":84}}],"line":7},"4":{"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":73}},"type":"cond-expr","locations":[{"start":{"line":7,"column":23},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":73}}],"line":7},"5":{"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":53}},{"start":{},"end":{}}],"line":8},"6":{"loc":{"start":{"line":8,"column":6},"end":{"line":8,"column":20}},"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":10}},{"start":{"line":8,"column":14},"end":{"line":8,"column":20}}],"line":8},"7":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{},"end":{}}],"line":28},"8":{"loc":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},{"start":{},"end":{}}],"line":32},"9":{"loc":{"start":{"line":37,"column":4},"end":{"line":42,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":42,"column":5}},{"start":{},"end":{}}],"line":37},"10":{"loc":{"start":{"line":39,"column":6},"end":{"line":41,"column":7}},"type":"if","locations":[{"start":{"line":39,"column":6},"end":{"line":41,"column":7}},{"start":{},"end":{}}],"line":39},"11":{"loc":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},{"start":{},"end":{}}],"line":47},"12":{"loc":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},{"start":{},"end":{}}],"line":51},"13":{"loc":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},{"start":{},"end":{}}],"line":58},"14":{"loc":{"start":{"line":62,"column":25},"end":{"line":62,"column":67}},"type":"binary-expr","locations":[{"start":{"line":62,"column":25},"end":{"line":62,"column":35}},{"start":{"line":62,"column":39},"end":{"line":62,"column":61}},{"start":{"line":62,"column":65},"end":{"line":62,"column":67}}],"line":62},"15":{"loc":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},{"start":{},"end":{}}],"line":72},"16":{"loc":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},{"start":{},"end":{}}],"line":76},"17":{"loc":{"start":{"line":85,"column":10},"end":{"line":94,"column":11}},"type":"if","locations":[{"start":{"line":85,"column":10},"end":{"line":94,"column":11}},{"start":{"line":89,"column":17},"end":{"line":94,"column":11}}],"line":85},"18":{"loc":{"start":{"line":88,"column":12},"end":{"line":88,"column":64}},"type":"binary-expr","locations":[{"start":{"line":88,"column":12},"end":{"line":88,"column":19}},{"start":{"line":88,"column":23},"end":{"line":88,"column":64}}],"line":88},"19":{"loc":{"start":{"line":90,"column":29},"end":{"line":90,"column":62}},"type":"binary-expr","locations":[{"start":{"line":90,"column":29},"end":{"line":90,"column":56}},{"start":{"line":90,"column":60},"end":{"line":90,"column":62}}],"line":90}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":3,"7":3,"8":1,"9":0,"10":1,"11":1,"12":3,"13":3,"14":1,"15":6,"16":6,"17":6,"18":6,"19":7,"20":7,"21":0,"22":7,"23":7,"24":0,"25":7,"26":7,"27":7,"28":7,"29":7,"30":6,"31":1,"32":1,"33":1,"34":0,"35":1,"36":1,"37":0,"38":1,"39":1,"40":1,"41":1,"42":1,"43":0,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":6,"51":6,"52":0,"53":6,"54":6,"55":0,"56":6,"57":6,"58":6,"59":6,"60":6,"61":6,"62":6,"63":1,"64":1,"65":1,"66":5,"67":5,"68":5,"69":5,"70":1},"f":{"0":1,"1":3,"2":3,"3":6,"4":7,"5":1,"6":1,"7":1,"8":6,"9":6,"10":6,"11":6},"b":{"0":[0,1],"1":[0,1],"2":[3,0],"3":[3,3],"4":[0,3],"5":[0,1],"6":[1,0],"7":[0,7],"8":[0,7],"9":[7,0],"10":[6,1],"11":[0,1],"12":[0,1],"13":[0,1],"14":[1,1,0],"15":[0,6],"16":[0,6],"17":[1,5],"18":[1,1],"19":[5,3]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/services/numfmt/numfmt.service.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange } from '@univerjs/core';\nimport type { INumfmtService } from './type';\n\nimport {\n    Disposable,\n    ILogService,\n    IResourceManagerService,\n    IUniverInstanceService,\n    Range,\n} from '@univerjs/core';\n\nexport class NumfmtService extends Disposable implements INumfmtService {\n    constructor(\n        @IResourceManagerService private _resourceManagerService: IResourceManagerService,\n        @IUniverInstanceService private _univerInstanceService: IUniverInstanceService,\n        @ILogService private _logService: ILogService\n    ) {\n        super();\n    }\n\n    getValue(unitId: string, subUnitId: string, row: number, col: number) {\n        const workbook = this._univerInstanceService.getUniverSheetInstance(unitId);\n        if (!workbook) {\n            return;\n        }\n        const worksheet = workbook?.getSheetBySheetId(subUnitId);\n        if (!worksheet) {\n            return;\n        }\n        const styles = workbook.getStyles();\n        const cell = worksheet.getCellRaw(row, col);\n        if (cell?.s) {\n            const style = styles.get(cell.s);\n            if (style?.n) {\n                return style.n;\n            }\n        }\n        return null;\n    }\n\n    deleteValues(unitId: string, subUnitId: string, values: IRange[]) {\n        const workbook = this._univerInstanceService.getUniverSheetInstance(unitId);\n        if (!workbook) {\n            return;\n        }\n        const worksheet = workbook?.getSheetBySheetId(subUnitId);\n        if (!worksheet) {\n            return;\n        }\n        const styles = workbook.getStyles();\n\n        values.forEach((range) => {\n            Range.foreach(range, (row, col) => {\n                const cell = worksheet.getCellRaw(row, col);\n                if (!cell) {\n                    return;\n                }\n                const oldStyleId = cell?.s;\n                const oldStyle = (oldStyleId && styles.get(oldStyleId)) || {};\n                const newStyle = { ...oldStyle };\n                delete newStyle.n;\n                const newStyleId = styles.setValue(newStyle);\n                cell.s = newStyleId;\n            });\n        });\n    }\n\n    setValues(\n        unitId: string,\n        subUnitId: string,\n        values: Array<{ ranges: IRange[]; pattern: string }>\n    ) {\n        const workbook = this._univerInstanceService.getUniverSheetInstance(unitId);\n        if (!workbook) {\n            return;\n        }\n        const worksheet = workbook?.getSheetBySheetId(subUnitId);\n        if (!worksheet) {\n            return;\n        }\n        const styles = workbook.getStyles();\n        const matrix = worksheet.getCellMatrix();\n\n        values.forEach((value) => {\n            value.ranges.forEach((range) => {\n                Range.foreach(range, (row, col) => {\n                    const cell = worksheet.getCellRaw(row, col);\n                    if (!cell) {\n                        const style = { n: { pattern: value.pattern } };\n                        const styleId = styles.setValue(style);\n                        styleId && matrix.setValue(row, col, { s: styleId });\n                    } else {\n                        const oldStyle = styles.getStyleByCell(cell) || {};\n                        const newStyle = { ...oldStyle, n: { pattern: value.pattern } };\n                        const styleId = styles.setValue(newStyle);\n                        cell.s = styleId;\n                    }\n                });\n            });\n        });\n    }\n}\n"],"mappings":";;;;;;;;;;;AAmBA;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACG;AAEA,WAAM,gBAAN,cAA4B,WAAqC;AAAA,EACpE,YACqC,yBACD,wBACX,aACvB;AACE,UAAM;AAJ2B;AACD;AACX;AAAA,EAGzB;AAAA,EAEA,SAAS,QAAgB,WAAmB,KAAa,KAAa;AAClE,UAAM,WAAW,KAAK,uBAAuB,uBAAuB,MAAM;AAC1E,QAAI,CAAC,UAAU;AACX;AAAA,IACJ;AACA,UAAM,YAAY,UAAU,kBAAkB,SAAS;AACvD,QAAI,CAAC,WAAW;AACZ;AAAA,IACJ;AACA,UAAM,SAAS,SAAS,UAAU;AAClC,UAAM,OAAO,UAAU,WAAW,KAAK,GAAG;AAC1C,QAAI,MAAM,GAAG;AACT,YAAM,QAAQ,OAAO,IAAI,KAAK,CAAC;AAC/B,UAAI,OAAO,GAAG;AACV,eAAO,MAAM;AAAA,MACjB;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EAEA,aAAa,QAAgB,WAAmB,QAAkB;AAC9D,UAAM,WAAW,KAAK,uBAAuB,uBAAuB,MAAM;AAC1E,QAAI,CAAC,UAAU;AACX;AAAA,IACJ;AACA,UAAM,YAAY,UAAU,kBAAkB,SAAS;AACvD,QAAI,CAAC,WAAW;AACZ;AAAA,IACJ;AACA,UAAM,SAAS,SAAS,UAAU;AAElC,WAAO,QAAQ,CAAC,UAAU;AACtB,YAAM,QAAQ,OAAO,CAAC,KAAK,QAAQ;AAC/B,cAAM,OAAO,UAAU,WAAW,KAAK,GAAG;AAC1C,YAAI,CAAC,MAAM;AACP;AAAA,QACJ;AACA,cAAM,aAAa,MAAM;AACzB,cAAM,WAAY,cAAc,OAAO,IAAI,UAAU,KAAM,CAAC;AAC5D,cAAM,WAAW,EAAE,GAAG,SAAS;AAC/B,eAAO,SAAS;AAChB,cAAM,aAAa,OAAO,SAAS,QAAQ;AAC3C,aAAK,IAAI;AAAA,MACb,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AAAA,EAEA,UACI,QACA,WACA,QACF;AACE,UAAM,WAAW,KAAK,uBAAuB,uBAAuB,MAAM;AAC1E,QAAI,CAAC,UAAU;AACX;AAAA,IACJ;AACA,UAAM,YAAY,UAAU,kBAAkB,SAAS;AACvD,QAAI,CAAC,WAAW;AACZ;AAAA,IACJ;AACA,UAAM,SAAS,SAAS,UAAU;AAClC,UAAM,SAAS,UAAU,cAAc;AAEvC,WAAO,QAAQ,CAAC,UAAU;AACtB,YAAM,OAAO,QAAQ,CAAC,UAAU;AAC5B,cAAM,QAAQ,OAAO,CAAC,KAAK,QAAQ;AAC/B,gBAAM,OAAO,UAAU,WAAW,KAAK,GAAG;AAC1C,cAAI,CAAC,MAAM;AACP,kBAAM,QAAQ,EAAE,GAAG,EAAE,SAAS,MAAM,QAAQ,EAAE;AAC9C,kBAAM,UAAU,OAAO,SAAS,KAAK;AACrC,uBAAW,OAAO,SAAS,KAAK,KAAK,EAAE,GAAG,QAAQ,CAAC;AAAA,UACvD,OAAO;AACH,kBAAM,WAAW,OAAO,eAAe,IAAI,KAAK,CAAC;AACjD,kBAAM,WAAW,EAAE,GAAG,UAAU,GAAG,EAAE,SAAS,MAAM,QAAQ,EAAE;AAC9D,kBAAM,UAAU,OAAO,SAAS,QAAQ;AACxC,iBAAK,IAAI;AAAA,UACb;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AACJ;AA1Fa,gBAAN;AAAA,EAEE;AAAA,EACA;AAAA,EACA;AAAA,GAJI;","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"105ea9e8729c6b856f2cdb9f3e58238bab04b944"}}