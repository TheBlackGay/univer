{"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/basics/range-merge.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/basics/range-merge.ts","statementMap":{"0":{"start":{"line":2,"column":41},"end":{"line":16,"column":1}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":2},"end":{"line":8,"column":5}},"3":{"start":{"line":5,"column":4},"end":{"line":7,"column":7}},"4":{"start":{"line":6,"column":6},"end":{"line":6,"column":35}},"5":{"start":{"line":9,"column":2},"end":{"line":14,"column":5}},"6":{"start":{"line":10,"column":28},"end":{"line":10,"column":57}},"7":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"8":{"start":{"line":12,"column":6},"end":{"line":12,"column":53}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":16}},"10":{"start":{"line":17,"column":41},"end":{"line":26,"column":1}},"11":{"start":{"line":18,"column":18},"end":{"line":18,"column":24}},"12":{"start":{"line":19,"column":2},"end":{"line":24,"column":5}},"13":{"start":{"line":20,"column":28},"end":{"line":20,"column":57}},"14":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"15":{"start":{"line":22,"column":6},"end":{"line":22,"column":54}},"16":{"start":{"line":25,"column":2},"end":{"line":25,"column":17}},"17":{"start":{"line":27,"column":29},"end":{"line":68,"column":1}},"18":{"start":{"line":28,"column":14},"end":{"line":30,"column":3}},"19":{"start":{"line":31,"column":20},"end":{"line":38,"column":3}},"20":{"start":{"line":32,"column":4},"end":{"line":36,"column":5}},"21":{"start":{"line":33,"column":6},"end":{"line":33,"column":22}},"22":{"start":{"line":34,"column":6},"end":{"line":34,"column":24}},"23":{"start":{"line":35,"column":6},"end":{"line":35,"column":18}},"24":{"start":{"line":37,"column":4},"end":{"line":37,"column":17}},"25":{"start":{"line":39,"column":2},"end":{"line":66,"column":5}},"26":{"start":{"line":40,"column":15},"end":{"line":40,"column":16}},"27":{"start":{"line":41,"column":15},"end":{"line":41,"column":23}},"28":{"start":{"line":42,"column":4},"end":{"line":47,"column":7}},"29":{"start":{"line":48,"column":19},"end":{"line":53,"column":5}},"30":{"start":{"line":54,"column":4},"end":{"line":65,"column":5}},"31":{"start":{"line":54,"column":17},"end":{"line":54,"column":24}},"32":{"start":{"line":55,"column":6},"end":{"line":64,"column":7}},"33":{"start":{"line":56,"column":8},"end":{"line":56,"column":14}},"34":{"start":{"line":58,"column":8},"end":{"line":58,"column":63}},"35":{"start":{"line":59,"column":8},"end":{"line":59,"column":15}},"36":{"start":{"line":60,"column":21},"end":{"line":60,"column":32}},"37":{"start":{"line":61,"column":8},"end":{"line":61,"column":31}},"38":{"start":{"line":62,"column":8},"end":{"line":62,"column":41}},"39":{"start":{"line":63,"column":8},"end":{"line":63,"column":32}},"40":{"start":{"line":67,"column":2},"end":{"line":67,"column":13}},"41":{"start":{"line":69,"column":25},"end":{"line":86,"column":1}},"42":{"start":{"line":70,"column":2},"end":{"line":72,"column":5}},"43":{"start":{"line":71,"column":4},"end":{"line":71,"column":40}},"44":{"start":{"line":73,"column":2},"end":{"line":84,"column":3}},"45":{"start":{"line":73,"column":17},"end":{"line":73,"column":34}},"46":{"start":{"line":74,"column":16},"end":{"line":74,"column":32}},"47":{"start":{"line":75,"column":14},"end":{"line":75,"column":42}},"48":{"start":{"line":76,"column":4},"end":{"line":83,"column":5}},"49":{"start":{"line":77,"column":6},"end":{"line":77,"column":38}},"50":{"start":{"line":78,"column":20},"end":{"line":78,"column":27}},"51":{"start":{"line":79,"column":6},"end":{"line":82,"column":7}},"52":{"start":{"line":80,"column":8},"end":{"line":80,"column":83}},"53":{"start":{"line":81,"column":8},"end":{"line":81,"column":18}},"54":{"start":{"line":85,"column":2},"end":{"line":85,"column":19}},"55":{"start":{"line":87,"column":32},"end":{"line":98,"column":1}},"56":{"start":{"line":88,"column":21},"end":{"line":88,"column":23}},"57":{"start":{"line":89,"column":15},"end":{"line":89,"column":46}},"58":{"start":{"line":90,"column":2},"end":{"line":96,"column":3}},"59":{"start":{"line":91,"column":4},"end":{"line":94,"column":5}},"60":{"start":{"line":92,"column":6},"end":{"line":92,"column":36}},"61":{"start":{"line":93,"column":6},"end":{"line":93,"column":48}},"62":{"start":{"line":95,"column":4},"end":{"line":95,"column":45}},"63":{"start":{"line":97,"column":2},"end":{"line":97,"column":20}},"64":{"start":{"line":99,"column":26},"end":{"line":102,"column":1}},"65":{"start":{"line":100,"column":20},"end":{"line":100,"column":53}},"66":{"start":{"line":101,"column":2},"end":{"line":101,"column":37}},"67":{"start":{"line":104,"column":12},"end":{"line":104,"column":30}},"68":{"start":{"line":106,"column":4},"end":{"line":110,"column":7}},"69":{"start":{"line":107,"column":6},"end":{"line":109,"column":9}},"70":{"start":{"line":108,"column":8},"end":{"line":108,"column":43}},"71":{"start":{"line":111,"column":4},"end":{"line":111,"column":16}},"72":{"start":{"line":114,"column":4},"end":{"line":118,"column":7}},"73":{"start":{"line":115,"column":6},"end":{"line":117,"column":9}},"74":{"start":{"line":116,"column":8},"end":{"line":116,"column":47}},"75":{"start":{"line":119,"column":4},"end":{"line":119,"column":16}},"76":{"start":{"line":122,"column":22},"end":{"line":122,"column":61}},"77":{"start":{"line":123,"column":19},"end":{"line":123,"column":46}},"78":{"start":{"line":124,"column":4},"end":{"line":124,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":41},"end":{"line":2,"column":42}},"loc":{"start":{"line":2,"column":53},"end":{"line":16,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":18}},"loc":{"start":{"line":4,"column":28},"end":{"line":8,"column":3}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":25},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":39},"end":{"line":7,"column":5}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":18},"end":{"line":9,"column":19}},"loc":{"start":{"line":9,"column":32},"end":{"line":14,"column":3}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":17,"column":41},"end":{"line":17,"column":42}},"loc":{"start":{"line":17,"column":53},"end":{"line":26,"column":1}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":19,"column":19},"end":{"line":19,"column":20}},"loc":{"start":{"line":19,"column":33},"end":{"line":24,"column":3}},"line":19},"6":{"name":"(anonymous_6)","decl":{"start":{"line":27,"column":29},"end":{"line":27,"column":30}},"loc":{"start":{"line":27,"column":44},"end":{"line":68,"column":1}},"line":27},"7":{"name":"(anonymous_7)","decl":{"start":{"line":31,"column":20},"end":{"line":31,"column":21}},"loc":{"start":{"line":31,"column":37},"end":{"line":38,"column":3}},"line":31},"8":{"name":"(anonymous_8)","decl":{"start":{"line":39,"column":21},"end":{"line":39,"column":22}},"loc":{"start":{"line":39,"column":45},"end":{"line":66,"column":3}},"line":39},"9":{"name":"(anonymous_9)","decl":{"start":{"line":69,"column":25},"end":{"line":69,"column":26}},"loc":{"start":{"line":69,"column":47},"end":{"line":86,"column":1}},"line":69},"10":{"name":"(anonymous_10)","decl":{"start":{"line":70,"column":23},"end":{"line":70,"column":24}},"loc":{"start":{"line":70,"column":37},"end":{"line":72,"column":3}},"line":70},"11":{"name":"(anonymous_11)","decl":{"start":{"line":87,"column":32},"end":{"line":87,"column":33}},"loc":{"start":{"line":87,"column":47},"end":{"line":98,"column":1}},"line":87},"12":{"name":"(anonymous_12)","decl":{"start":{"line":99,"column":26},"end":{"line":99,"column":27}},"loc":{"start":{"line":99,"column":38},"end":{"line":102,"column":1}},"line":99},"13":{"name":"(anonymous_13)","decl":{"start":{"line":105,"column":2},"end":{"line":105,"column":3}},"loc":{"start":{"line":105,"column":17},"end":{"line":112,"column":3}},"line":105},"14":{"name":"(anonymous_14)","decl":{"start":{"line":106,"column":19},"end":{"line":106,"column":20}},"loc":{"start":{"line":106,"column":30},"end":{"line":110,"column":5}},"line":106},"15":{"name":"(anonymous_15)","decl":{"start":{"line":107,"column":27},"end":{"line":107,"column":28}},"loc":{"start":{"line":107,"column":41},"end":{"line":109,"column":7}},"line":107},"16":{"name":"(anonymous_16)","decl":{"start":{"line":113,"column":2},"end":{"line":113,"column":3}},"loc":{"start":{"line":113,"column":22},"end":{"line":120,"column":3}},"line":113},"17":{"name":"(anonymous_17)","decl":{"start":{"line":114,"column":19},"end":{"line":114,"column":20}},"loc":{"start":{"line":114,"column":30},"end":{"line":118,"column":5}},"line":114},"18":{"name":"(anonymous_18)","decl":{"start":{"line":115,"column":27},"end":{"line":115,"column":28}},"loc":{"start":{"line":115,"column":41},"end":{"line":117,"column":7}},"line":115},"19":{"name":"(anonymous_19)","decl":{"start":{"line":121,"column":2},"end":{"line":121,"column":3}},"loc":{"start":{"line":121,"column":10},"end":{"line":125,"column":3}},"line":121}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},{"start":{},"end":{}}],"line":11},"1":{"loc":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},{"start":{},"end":{}}],"line":21},"2":{"loc":{"start":{"line":32,"column":4},"end":{"line":36,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":36,"column":5}},{"start":{},"end":{}}],"line":32},"3":{"loc":{"start":{"line":55,"column":6},"end":{"line":64,"column":7}},"type":"if","locations":[{"start":{"line":55,"column":6},"end":{"line":64,"column":7}},{"start":{"line":57,"column":13},"end":{"line":64,"column":7}}],"line":55},"4":{"loc":{"start":{"line":58,"column":24},"end":{"line":58,"column":55}},"type":"binary-expr","locations":[{"start":{"line":58,"column":24},"end":{"line":58,"column":50}},{"start":{"line":58,"column":54},"end":{"line":58,"column":55}}],"line":58},"5":{"loc":{"start":{"line":76,"column":4},"end":{"line":83,"column":5}},"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":83,"column":5}},{"start":{},"end":{}}],"line":76},"6":{"loc":{"start":{"line":91,"column":4},"end":{"line":94,"column":5}},"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":94,"column":5}},{"start":{},"end":{}}],"line":91}},"s":{"0":1,"1":10,"2":10,"3":44,"4":124,"5":10,"6":123,"7":123,"8":77,"9":10,"10":1,"11":5,"12":5,"13":69,"14":69,"15":59,"16":5,"17":1,"18":41,"19":41,"20":862,"21":126,"22":126,"23":126,"24":736,"25":41,"26":285,"27":285,"28":285,"29":285,"30":285,"31":285,"32":862,"33":285,"34":577,"35":577,"36":577,"37":577,"38":577,"39":577,"40":41,"41":1,"42":26,"43":192,"44":26,"45":26,"46":79,"47":79,"48":79,"49":13,"50":13,"51":13,"52":13,"53":13,"54":26,"55":1,"56":15,"57":15,"58":15,"59":26,"60":26,"61":26,"62":26,"63":15,"64":1,"65":10,"66":10,"67":5,"68":5,"69":15,"70":78,"71":5,"72":3,"73":5,"74":5,"75":3,"76":5,"77":5,"78":5},"f":{"0":10,"1":44,"2":124,"3":123,"4":5,"5":69,"6":41,"7":862,"8":285,"9":26,"10":192,"11":15,"12":10,"13":5,"14":15,"15":78,"16":3,"17":5,"18":5,"19":5},"b":{"0":[77,46],"1":[59,10],"2":[126,736],"3":[285,577],"4":[577,0],"5":[13,66],"6":[26,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/basics/range-merge.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange } from '@univerjs/core';\nimport { ObjectMatrix, Range } from '@univerjs/core';\n\nexport const createTopMatrixFromRanges = (ranges: IRange[]) => {\n    const matrix = new ObjectMatrix<number>();\n    ranges.forEach((range) => {\n        Range.foreach(range, (row, col) => {\n            matrix.setValue(row, col, 1);\n        });\n    });\n    matrix.forValue((row, col) => {\n        const theLastRowValue = matrix.getValue(row - 1, col);\n        if (theLastRowValue) {\n            matrix.setValue(row, col, theLastRowValue + 1);\n        }\n    });\n    return matrix;\n};\nexport const createTopMatrixFromMatrix = (matrix: ObjectMatrix<1>) => {\n    const _matrix = matrix as ObjectMatrix<number>;\n    _matrix.forValue((row, col) => {\n        const theLastRowValue = matrix.getValue(row - 1, col);\n        if (theLastRowValue) {\n            _matrix.setValue(row, col, theLastRowValue + 1);\n        }\n    });\n    return _matrix;\n};\nconst findMaximalRectangle = (topMatrix: ObjectMatrix<number>) => {\n    const res: {\n        area: number;\n        range?: IRange;\n    } = {\n        area: 0,\n    };\n    const checkArea = (area: number, range: IRange) => {\n        if (res.area < area) {\n            res.area = area;\n            res.range = range;\n            return true;\n        }\n        return false;\n    };\n\n    topMatrix.forValue((row, col, lineArea) => {\n        let cols = 1;\n        let rows = lineArea;\n        checkArea(cols * rows, {\n            startRow: row - rows + 1,\n            endRow: row,\n            startColumn: col,\n            endColumn: col,\n        });\n        const _range = {\n            startRow: row - rows + 1,\n            endRow: row,\n            startColumn: 0,\n            endColumn: col,\n        };\n        for (let k = col - 1; k >= 0; k--) {\n            if (!topMatrix.getValue(row, k)) {\n                break;\n            } else {\n                rows = Math.min(topMatrix.getValue(row, k) || 0, rows);\n                cols++;\n                const area = rows * cols;\n                _range.startColumn = k;\n                _range.startRow = row - rows + 1;\n                checkArea(area, _range);\n            }\n        }\n    });\n    return res;\n};\n\nconst filterLeftMatrix = (topMatrix: ObjectMatrix<number>, range: IRange) => {\n    Range.foreach(range, (row, col) => {\n        topMatrix.realDeleteValue(row, col);\n    });\n\n    for (let col = range.startColumn; col <= range.endColumn; col++) {\n        const row = range.endRow + 1;\n        const v = topMatrix.getValue(row, col)!;\n        if (v > 0) {\n            topMatrix.setValue(row, col, 1);\n            let nextRow = row + 1;\n            while (topMatrix.getValue(nextRow, col)! > 0) {\n                topMatrix.setValue(nextRow, col, topMatrix.getValue(nextRow - 1, col)! + 1);\n                nextRow++;\n            }\n        }\n    }\n    return topMatrix;\n};\n\nexport const findAllRectangle = (topMatrix: ObjectMatrix<number>) => {\n    const resultList = [];\n    let result = findMaximalRectangle(topMatrix);\n    while (result.area > 0) {\n        if (result.range) {\n            resultList.push(result.range);\n            filterLeftMatrix(topMatrix, result.range);\n        }\n        result = findMaximalRectangle(topMatrix);\n    }\n    return resultList;\n};\n\n/**\n * Some operations generate sparse ranges such as paste/autofill/ref-range, and this function merge some small ranges into some large ranges to reduce transmission size.\n * Time Complexity: O(mn) , where m and n are rows and columns. It takes O(mn) to compute the markMatrix and O(n) to apply the histogram algorithm to each column.\n * ps. column sparse matrices have better performance\n * @param {IRange[]} ranges\n * @returns {IRange[]}\n */\nexport const rangeMerge = (ranges: IRange[]) => {\n    const topMatrix = createTopMatrixFromRanges(ranges);\n    return findAllRectangle(topMatrix);\n};\n\nexport class RangeMergeUtil {\n    private _matrix = new ObjectMatrix<1>();\n    add(...ranges: IRange[]) {\n        ranges.forEach((range) => {\n            Range.foreach(range, (row, col) => {\n                this._matrix.setValue(row, col, 1);\n            });\n        });\n        return this;\n    }\n\n    subtract(...ranges: IRange[]) {\n        ranges.forEach((range) => {\n            Range.foreach(range, (row, col) => {\n                this._matrix.realDeleteValue(row, col);\n            });\n        });\n        return this;\n    }\n\n    merge() {\n        const topMatrix = createTopMatrixFromMatrix(this._matrix);\n        const ranges = findAllRectangle(topMatrix);\n        return ranges;\n    }\n}\n"],"mappings":"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","names":[]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4b2da8385e8336f8ca2338be6235d9243505c3cf"}}