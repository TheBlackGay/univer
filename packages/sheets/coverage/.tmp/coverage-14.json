{"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/services/selections/move-active-cell-util.ts":{"path":"/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/services/selections/move-active-cell-util.ts","statementMap":{"0":{"start":{"line":2,"column":25},"end":{"line":19,"column":1}},"1":{"start":{"line":3,"column":21},"end":{"line":3,"column":64}},"2":{"start":{"line":4,"column":31},"end":{"line":4,"column":41}},"3":{"start":{"line":5,"column":13},"end":{"line":5,"column":43}},"4":{"start":{"line":6,"column":27},"end":{"line":6,"column":84}},"5":{"start":{"line":7,"column":19},"end":{"line":7,"column":143}},"6":{"start":{"line":8,"column":2},"end":{"line":12,"column":3}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":11}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":83}},"9":{"start":{"line":11,"column":4},"end":{"line":11,"column":142}},"10":{"start":{"line":13,"column":2},"end":{"line":18,"column":3}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":63}},"12":{"start":{"line":15,"column":9},"end":{"line":18,"column":3}},"13":{"start":{"line":16,"column":23},"end":{"line":16,"column":70}},"14":{"start":{"line":17,"column":4},"end":{"line":17,"column":90}},"15":{"start":{"line":20,"column":27},"end":{"line":37,"column":1}},"16":{"start":{"line":21,"column":21},"end":{"line":21,"column":64}},"17":{"start":{"line":22,"column":31},"end":{"line":22,"column":41}},"18":{"start":{"line":23,"column":13},"end":{"line":23,"column":41}},"19":{"start":{"line":24,"column":27},"end":{"line":24,"column":84}},"20":{"start":{"line":25,"column":19},"end":{"line":25,"column":143}},"21":{"start":{"line":26,"column":2},"end":{"line":30,"column":3}},"22":{"start":{"line":27,"column":4},"end":{"line":27,"column":11}},"23":{"start":{"line":28,"column":4},"end":{"line":28,"column":83}},"24":{"start":{"line":29,"column":4},"end":{"line":29,"column":142}},"25":{"start":{"line":31,"column":2},"end":{"line":36,"column":3}},"26":{"start":{"line":32,"column":4},"end":{"line":32,"column":63}},"27":{"start":{"line":33,"column":9},"end":{"line":36,"column":3}},"28":{"start":{"line":34,"column":23},"end":{"line":34,"column":72}},"29":{"start":{"line":35,"column":4},"end":{"line":35,"column":91}},"30":{"start":{"line":38,"column":27},"end":{"line":55,"column":1}},"31":{"start":{"line":39,"column":21},"end":{"line":39,"column":64}},"32":{"start":{"line":40,"column":37},"end":{"line":40,"column":47}},"33":{"start":{"line":41,"column":13},"end":{"line":41,"column":46}},"34":{"start":{"line":42,"column":27},"end":{"line":42,"column":81}},"35":{"start":{"line":43,"column":19},"end":{"line":43,"column":140}},"36":{"start":{"line":44,"column":2},"end":{"line":48,"column":3}},"37":{"start":{"line":45,"column":4},"end":{"line":45,"column":11}},"38":{"start":{"line":46,"column":4},"end":{"line":46,"column":80}},"39":{"start":{"line":47,"column":4},"end":{"line":47,"column":139}},"40":{"start":{"line":49,"column":2},"end":{"line":54,"column":3}},"41":{"start":{"line":50,"column":4},"end":{"line":50,"column":69}},"42":{"start":{"line":51,"column":9},"end":{"line":54,"column":3}},"43":{"start":{"line":52,"column":23},"end":{"line":52,"column":79}},"44":{"start":{"line":53,"column":4},"end":{"line":53,"column":88}},"45":{"start":{"line":56,"column":28},"end":{"line":73,"column":1}},"46":{"start":{"line":57,"column":21},"end":{"line":57,"column":64}},"47":{"start":{"line":58,"column":37},"end":{"line":58,"column":47}},"48":{"start":{"line":59,"column":13},"end":{"line":59,"column":44}},"49":{"start":{"line":60,"column":27},"end":{"line":60,"column":81}},"50":{"start":{"line":61,"column":19},"end":{"line":61,"column":140}},"51":{"start":{"line":62,"column":2},"end":{"line":66,"column":3}},"52":{"start":{"line":63,"column":4},"end":{"line":63,"column":11}},"53":{"start":{"line":64,"column":4},"end":{"line":64,"column":80}},"54":{"start":{"line":65,"column":4},"end":{"line":65,"column":139}},"55":{"start":{"line":67,"column":2},"end":{"line":72,"column":3}},"56":{"start":{"line":68,"column":4},"end":{"line":68,"column":69}},"57":{"start":{"line":69,"column":9},"end":{"line":72,"column":3}},"58":{"start":{"line":70,"column":23},"end":{"line":70,"column":81}},"59":{"start":{"line":71,"column":4},"end":{"line":71,"column":90}},"60":{"start":{"line":75,"column":18},"end":{"line":75,"column":22}},"61":{"start":{"line":76,"column":17},"end":{"line":76,"column":71}},"62":{"start":{"line":77,"column":2},"end":{"line":90,"column":5}},"63":{"start":{"line":78,"column":4},"end":{"line":88,"column":6}},"64":{"start":{"line":89,"column":4},"end":{"line":89,"column":17}},"65":{"start":{"line":91,"column":2},"end":{"line":103,"column":3}},"66":{"start":{"line":92,"column":4},"end":{"line":102,"column":6}},"67":{"start":{"line":104,"column":2},"end":{"line":104,"column":19}},"68":{"start":{"line":106,"column":23},"end":{"line":117,"column":1}},"69":{"start":{"line":107,"column":2},"end":{"line":116,"column":3}},"70":{"start":{"line":109,"column":6},"end":{"line":109,"column":75}},"71":{"start":{"line":111,"column":6},"end":{"line":111,"column":77}},"72":{"start":{"line":113,"column":6},"end":{"line":113,"column":77}},"73":{"start":{"line":115,"column":6},"end":{"line":115,"column":78}},"74":{"start":{"line":118,"column":34},"end":{"line":163,"column":1}},"75":{"start":{"line":120,"column":20},"end":{"line":120,"column":22}},"76":{"start":{"line":122,"column":2},"end":{"line":129,"column":3}},"77":{"start":{"line":122,"column":15},"end":{"line":122,"column":16}},"78":{"start":{"line":123,"column":4},"end":{"line":128,"column":5}},"79":{"start":{"line":124,"column":6},"end":{"line":124,"column":38}},"80":{"start":{"line":125,"column":6},"end":{"line":125,"column":22}},"81":{"start":{"line":126,"column":6},"end":{"line":126,"column":47}},"82":{"start":{"line":127,"column":6},"end":{"line":127,"column":12}},"83":{"start":{"line":130,"column":2},"end":{"line":132,"column":3}},"84":{"start":{"line":131,"column":4},"end":{"line":131,"column":16}},"85":{"start":{"line":133,"column":20},"end":{"line":133,"column":78}},"86":{"start":{"line":134,"column":20},"end":{"line":134,"column":154}},"87":{"start":{"line":135,"column":24},"end":{"line":135,"column":45}},"88":{"start":{"line":136,"column":2},"end":{"line":138,"column":3}},"89":{"start":{"line":137,"column":4},"end":{"line":137,"column":16}},"90":{"start":{"line":139,"column":18},"end":{"line":139,"column":39}},"91":{"start":{"line":140,"column":55},"end":{"line":140,"column":76}},"92":{"start":{"line":141,"column":21},"end":{"line":141,"column":164}},"93":{"start":{"line":142,"column":27},"end":{"line":142,"column":50}},"94":{"start":{"line":143,"column":2},"end":{"line":155,"column":3}},"95":{"start":{"line":144,"column":17},"end":{"line":144,"column":120}},"96":{"start":{"line":145,"column":4},"end":{"line":147,"column":5}},"97":{"start":{"line":146,"column":6},"end":{"line":146,"column":18}},"98":{"start":{"line":148,"column":23},"end":{"line":148,"column":159}},"99":{"start":{"line":149,"column":4},"end":{"line":154,"column":6}},"100":{"start":{"line":156,"column":20},"end":{"line":156,"column":216}},"101":{"start":{"line":157,"column":2},"end":{"line":162,"column":4}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":25},"end":{"line":2,"column":26}},"loc":{"start":{"line":2,"column":114},"end":{"line":19,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":27},"end":{"line":20,"column":28}},"loc":{"start":{"line":20,"column":116},"end":{"line":37,"column":1}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":38,"column":27},"end":{"line":38,"column":28}},"loc":{"start":{"line":38,"column":116},"end":{"line":55,"column":1}},"line":38},"3":{"name":"(anonymous_3)","decl":{"start":{"line":56,"column":28},"end":{"line":56,"column":29}},"loc":{"start":{"line":56,"column":117},"end":{"line":73,"column":1}},"line":56},"4":{"name":"getCellAtRowCol","decl":{"start":{"line":74,"column":9},"end":{"line":74,"column":24}},"loc":{"start":{"line":74,"column":46},"end":{"line":105,"column":1}},"line":74},"5":{"name":"(anonymous_5)","decl":{"start":{"line":77,"column":18},"end":{"line":77,"column":19}},"loc":{"start":{"line":77,"column":41},"end":{"line":90,"column":3}},"line":77},"6":{"name":"(anonymous_6)","decl":{"start":{"line":106,"column":23},"end":{"line":106,"column":24}},"loc":{"start":{"line":106,"column":87},"end":{"line":117,"column":1}},"line":106},"7":{"name":"(anonymous_7)","decl":{"start":{"line":118,"column":34},"end":{"line":118,"column":35}},"loc":{"start":{"line":118,"column":72},"end":{"line":163,"column":1}},"line":118}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":65},"end":{"line":2,"column":73}},"type":"default-arg","locations":[{"start":{"line":2,"column":72},"end":{"line":2,"column":73}}],"line":2},"1":{"loc":{"start":{"line":2,"column":75},"end":{"line":2,"column":92}},"type":"default-arg","locations":[{"start":{"line":2,"column":88},"end":{"line":2,"column":92}}],"line":2},"2":{"loc":{"start":{"line":2,"column":94},"end":{"line":2,"column":109}},"type":"default-arg","locations":[{"start":{"line":2,"column":105},"end":{"line":2,"column":109}}],"line":2},"3":{"loc":{"start":{"line":7,"column":19},"end":{"line":7,"column":143}},"type":"binary-expr","locations":[{"start":{"line":7,"column":19},"end":{"line":7,"column":38}},{"start":{"line":7,"column":42},"end":{"line":7,"column":78}},{"start":{"line":7,"column":82},"end":{"line":7,"column":143}}],"line":7},"4":{"loc":{"start":{"line":8,"column":9},"end":{"line":8,"column":54}},"type":"binary-expr","locations":[{"start":{"line":8,"column":9},"end":{"line":8,"column":39}},{"start":{"line":8,"column":43},"end":{"line":8,"column":54}}],"line":8},"5":{"loc":{"start":{"line":11,"column":17},"end":{"line":11,"column":141}},"type":"binary-expr","locations":[{"start":{"line":11,"column":17},"end":{"line":11,"column":36}},{"start":{"line":11,"column":40},"end":{"line":11,"column":76}},{"start":{"line":11,"column":80},"end":{"line":11,"column":141}}],"line":11},"6":{"loc":{"start":{"line":13,"column":2},"end":{"line":18,"column":3}},"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":18,"column":3}},{"start":{"line":15,"column":9},"end":{"line":18,"column":3}}],"line":13},"7":{"loc":{"start":{"line":15,"column":9},"end":{"line":18,"column":3}},"type":"if","locations":[{"start":{"line":15,"column":9},"end":{"line":18,"column":3}},{"start":{},"end":{}}],"line":15},"8":{"loc":{"start":{"line":20,"column":67},"end":{"line":20,"column":75}},"type":"default-arg","locations":[{"start":{"line":20,"column":74},"end":{"line":20,"column":75}}],"line":20},"9":{"loc":{"start":{"line":20,"column":77},"end":{"line":20,"column":94}},"type":"default-arg","locations":[{"start":{"line":20,"column":90},"end":{"line":20,"column":94}}],"line":20},"10":{"loc":{"start":{"line":20,"column":96},"end":{"line":20,"column":111}},"type":"default-arg","locations":[{"start":{"line":20,"column":107},"end":{"line":20,"column":111}}],"line":20},"11":{"loc":{"start":{"line":25,"column":19},"end":{"line":25,"column":143}},"type":"binary-expr","locations":[{"start":{"line":25,"column":19},"end":{"line":25,"column":38}},{"start":{"line":25,"column":42},"end":{"line":25,"column":78}},{"start":{"line":25,"column":82},"end":{"line":25,"column":143}}],"line":25},"12":{"loc":{"start":{"line":26,"column":9},"end":{"line":26,"column":54}},"type":"binary-expr","locations":[{"start":{"line":26,"column":9},"end":{"line":26,"column":39}},{"start":{"line":26,"column":43},"end":{"line":26,"column":54}}],"line":26},"13":{"loc":{"start":{"line":29,"column":17},"end":{"line":29,"column":141}},"type":"binary-expr","locations":[{"start":{"line":29,"column":17},"end":{"line":29,"column":36}},{"start":{"line":29,"column":40},"end":{"line":29,"column":76}},{"start":{"line":29,"column":80},"end":{"line":29,"column":141}}],"line":29},"14":{"loc":{"start":{"line":31,"column":2},"end":{"line":36,"column":3}},"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":36,"column":3}},{"start":{"line":33,"column":9},"end":{"line":36,"column":3}}],"line":31},"15":{"loc":{"start":{"line":33,"column":9},"end":{"line":36,"column":3}},"type":"if","locations":[{"start":{"line":33,"column":9},"end":{"line":36,"column":3}},{"start":{},"end":{}}],"line":33},"16":{"loc":{"start":{"line":38,"column":67},"end":{"line":38,"column":75}},"type":"default-arg","locations":[{"start":{"line":38,"column":74},"end":{"line":38,"column":75}}],"line":38},"17":{"loc":{"start":{"line":38,"column":77},"end":{"line":38,"column":94}},"type":"default-arg","locations":[{"start":{"line":38,"column":90},"end":{"line":38,"column":94}}],"line":38},"18":{"loc":{"start":{"line":38,"column":96},"end":{"line":38,"column":111}},"type":"default-arg","locations":[{"start":{"line":38,"column":107},"end":{"line":38,"column":111}}],"line":38},"19":{"loc":{"start":{"line":43,"column":19},"end":{"line":43,"column":140}},"type":"binary-expr","locations":[{"start":{"line":43,"column":19},"end":{"line":43,"column":38}},{"start":{"line":43,"column":42},"end":{"line":43,"column":97}},{"start":{"line":43,"column":101},"end":{"line":43,"column":140}}],"line":43},"20":{"loc":{"start":{"line":44,"column":9},"end":{"line":44,"column":54}},"type":"binary-expr","locations":[{"start":{"line":44,"column":9},"end":{"line":44,"column":39}},{"start":{"line":44,"column":43},"end":{"line":44,"column":54}}],"line":44},"21":{"loc":{"start":{"line":47,"column":17},"end":{"line":47,"column":138}},"type":"binary-expr","locations":[{"start":{"line":47,"column":17},"end":{"line":47,"column":36}},{"start":{"line":47,"column":40},"end":{"line":47,"column":95}},{"start":{"line":47,"column":99},"end":{"line":47,"column":138}}],"line":47},"22":{"loc":{"start":{"line":49,"column":2},"end":{"line":54,"column":3}},"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":54,"column":3}},{"start":{"line":51,"column":9},"end":{"line":54,"column":3}}],"line":49},"23":{"loc":{"start":{"line":51,"column":9},"end":{"line":54,"column":3}},"type":"if","locations":[{"start":{"line":51,"column":9},"end":{"line":54,"column":3}},{"start":{},"end":{}}],"line":51},"24":{"loc":{"start":{"line":56,"column":68},"end":{"line":56,"column":76}},"type":"default-arg","locations":[{"start":{"line":56,"column":75},"end":{"line":56,"column":76}}],"line":56},"25":{"loc":{"start":{"line":56,"column":78},"end":{"line":56,"column":95}},"type":"default-arg","locations":[{"start":{"line":56,"column":91},"end":{"line":56,"column":95}}],"line":56},"26":{"loc":{"start":{"line":56,"column":97},"end":{"line":56,"column":112}},"type":"default-arg","locations":[{"start":{"line":56,"column":108},"end":{"line":56,"column":112}}],"line":56},"27":{"loc":{"start":{"line":61,"column":19},"end":{"line":61,"column":140}},"type":"binary-expr","locations":[{"start":{"line":61,"column":19},"end":{"line":61,"column":38}},{"start":{"line":61,"column":42},"end":{"line":61,"column":97}},{"start":{"line":61,"column":101},"end":{"line":61,"column":140}}],"line":61},"28":{"loc":{"start":{"line":62,"column":9},"end":{"line":62,"column":54}},"type":"binary-expr","locations":[{"start":{"line":62,"column":9},"end":{"line":62,"column":39}},{"start":{"line":62,"column":43},"end":{"line":62,"column":54}}],"line":62},"29":{"loc":{"start":{"line":65,"column":17},"end":{"line":65,"column":138}},"type":"binary-expr","locations":[{"start":{"line":65,"column":17},"end":{"line":65,"column":36}},{"start":{"line":65,"column":40},"end":{"line":65,"column":95}},{"start":{"line":65,"column":99},"end":{"line":65,"column":138}}],"line":65},"30":{"loc":{"start":{"line":67,"column":2},"end":{"line":72,"column":3}},"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":72,"column":3}},{"start":{"line":69,"column":9},"end":{"line":72,"column":3}}],"line":67},"31":{"loc":{"start":{"line":69,"column":9},"end":{"line":72,"column":3}},"type":"if","locations":[{"start":{"line":69,"column":9},"end":{"line":72,"column":3}},{"start":{},"end":{}}],"line":69},"32":{"loc":{"start":{"line":83,"column":16},"end":{"line":83,"column":68}},"type":"binary-expr","locations":[{"start":{"line":83,"column":16},"end":{"line":83,"column":40}},{"start":{"line":83,"column":44},"end":{"line":83,"column":68}}],"line":83},"33":{"loc":{"start":{"line":84,"column":24},"end":{"line":84,"column":76}},"type":"binary-expr","locations":[{"start":{"line":84,"column":24},"end":{"line":84,"column":48}},{"start":{"line":84,"column":52},"end":{"line":84,"column":76}}],"line":84},"34":{"loc":{"start":{"line":85,"column":22},"end":{"line":85,"column":70}},"type":"cond-expr","locations":[{"start":{"line":85,"column":49},"end":{"line":85,"column":66}},{"start":{"line":85,"column":69},"end":{"line":85,"column":70}}],"line":85},"35":{"loc":{"start":{"line":86,"column":25},"end":{"line":86,"column":73}},"type":"cond-expr","locations":[{"start":{"line":86,"column":52},"end":{"line":86,"column":69}},{"start":{"line":86,"column":72},"end":{"line":86,"column":73}}],"line":86},"36":{"loc":{"start":{"line":91,"column":2},"end":{"line":103,"column":3}},"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":103,"column":3}},{"start":{},"end":{}}],"line":91},"37":{"loc":{"start":{"line":106,"column":74},"end":{"line":106,"column":82}},"type":"default-arg","locations":[{"start":{"line":106,"column":81},"end":{"line":106,"column":82}}],"line":106},"38":{"loc":{"start":{"line":107,"column":2},"end":{"line":116,"column":3}},"type":"switch","locations":[{"start":{"line":108,"column":4},"end":{"line":109,"column":75}},{"start":{"line":110,"column":4},"end":{"line":111,"column":77}},{"start":{"line":112,"column":4},"end":{"line":113,"column":77}},{"start":{"line":114,"column":4},"end":{"line":115,"column":78}}],"line":107},"39":{"loc":{"start":{"line":123,"column":4},"end":{"line":128,"column":5}},"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":128,"column":5}},{"start":{},"end":{}}],"line":123},"40":{"loc":{"start":{"line":130,"column":2},"end":{"line":132,"column":3}},"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":132,"column":3}},{"start":{},"end":{}}],"line":130},"41":{"loc":{"start":{"line":133,"column":20},"end":{"line":133,"column":78}},"type":"binary-expr","locations":[{"start":{"line":133,"column":20},"end":{"line":133,"column":48}},{"start":{"line":133,"column":52},"end":{"line":133,"column":78}}],"line":133},"42":{"loc":{"start":{"line":134,"column":20},"end":{"line":134,"column":154}},"type":"cond-expr","locations":[{"start":{"line":134,"column":32},"end":{"line":134,"column":94}},{"start":{"line":134,"column":97},"end":{"line":134,"column":154}}],"line":134},"43":{"loc":{"start":{"line":134,"column":32},"end":{"line":134,"column":94}},"type":"cond-expr","locations":[{"start":{"line":134,"column":55},"end":{"line":134,"column":70}},{"start":{"line":134,"column":73},"end":{"line":134,"column":94}}],"line":134},"44":{"loc":{"start":{"line":134,"column":97},"end":{"line":134,"column":154}},"type":"cond-expr","locations":[{"start":{"line":134,"column":135},"end":{"line":134,"column":150}},{"start":{"line":134,"column":153},"end":{"line":134,"column":154}}],"line":134},"45":{"loc":{"start":{"line":136,"column":2},"end":{"line":138,"column":3}},"type":"if","locations":[{"start":{"line":136,"column":2},"end":{"line":138,"column":3}},{"start":{},"end":{}}],"line":136},"46":{"loc":{"start":{"line":136,"column":6},"end":{"line":136,"column":41}},"type":"binary-expr","locations":[{"start":{"line":136,"column":6},"end":{"line":136,"column":22}},{"start":{"line":136,"column":26},"end":{"line":136,"column":41}}],"line":136},"47":{"loc":{"start":{"line":141,"column":21},"end":{"line":141,"column":164}},"type":"cond-expr","locations":[{"start":{"line":141,"column":33},"end":{"line":141,"column":101}},{"start":{"line":141,"column":104},"end":{"line":141,"column":164}}],"line":141},"48":{"loc":{"start":{"line":141,"column":33},"end":{"line":141,"column":101}},"type":"binary-expr","locations":[{"start":{"line":141,"column":33},"end":{"line":141,"column":62}},{"start":{"line":141,"column":66},"end":{"line":141,"column":101}}],"line":141},"49":{"loc":{"start":{"line":141,"column":104},"end":{"line":141,"column":164}},"type":"binary-expr","locations":[{"start":{"line":141,"column":104},"end":{"line":141,"column":129}},{"start":{"line":141,"column":133},"end":{"line":141,"column":164}}],"line":141},"50":{"loc":{"start":{"line":142,"column":27},"end":{"line":142,"column":50}},"type":"binary-expr","locations":[{"start":{"line":142,"column":27},"end":{"line":142,"column":37}},{"start":{"line":142,"column":41},"end":{"line":142,"column":50}}],"line":142},"51":{"loc":{"start":{"line":143,"column":2},"end":{"line":155,"column":3}},"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":155,"column":3}},{"start":{},"end":{}}],"line":143},"52":{"loc":{"start":{"line":144,"column":17},"end":{"line":144,"column":120}},"type":"cond-expr","locations":[{"start":{"line":144,"column":30},"end":{"line":144,"column":49}},{"start":{"line":144,"column":52},"end":{"line":144,"column":120}}],"line":144},"53":{"loc":{"start":{"line":145,"column":4},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":147,"column":5}},{"start":{},"end":{}}],"line":145},"54":{"loc":{"start":{"line":148,"column":23},"end":{"line":148,"column":159}},"type":"cond-expr","locations":[{"start":{"line":148,"column":42},"end":{"line":148,"column":97}},{"start":{"line":148,"column":100},"end":{"line":148,"column":159}}],"line":148},"55":{"loc":{"start":{"line":156,"column":20},"end":{"line":156,"column":216}},"type":"cond-expr","locations":[{"start":{"line":156,"column":39},"end":{"line":156,"column":124}},{"start":{"line":156,"column":127},"end":{"line":156,"column":216}}],"line":156}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":1,"16":3,"17":3,"18":3,"19":3,"20":3,"21":3,"22":0,"23":0,"24":0,"25":3,"26":3,"27":0,"28":0,"29":0,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":0,"43":0,"44":0,"45":1,"46":2,"47":2,"48":2,"49":2,"50":2,"51":2,"52":0,"53":0,"54":0,"55":2,"56":1,"57":1,"58":1,"59":1,"60":8,"61":8,"62":8,"63":1,"64":1,"65":8,"66":7,"67":1,"68":1,"69":6,"70":1,"71":2,"72":1,"73":2,"74":1,"75":8,"76":8,"77":8,"78":12,"79":8,"80":8,"81":8,"82":8,"83":8,"84":0,"85":8,"86":8,"87":8,"88":8,"89":0,"90":8,"91":8,"92":8,"93":8,"94":8,"95":8,"96":8,"97":0,"98":8,"99":8,"100":0,"101":0},"f":{"0":1,"1":3,"2":1,"3":2,"4":8,"5":1,"6":6,"7":8},"b":{"0":[0],"1":[1],"2":[1],"3":[1,0,0],"4":[1,1],"5":[0,0,0],"6":[1,0],"7":[0,0],"8":[0],"9":[2],"10":[2],"11":[3,0,0],"12":[3,3],"13":[0,0,0],"14":[3,0],"15":[0,0],"16":[0],"17":[1],"18":[1],"19":[1,1,1],"20":[2,2],"21":[1,1,1],"22":[1,0],"23":[0,0],"24":[0],"25":[2],"26":[2],"27":[2,0,0],"28":[2,2],"29":[0,0,0],"30":[1,1],"31":[1,0],"32":[1,0],"33":[1,1],"34":[1,0],"35":[1,0],"36":[7,1],"37":[6],"38":[1,2,1,2],"39":[8,4],"40":[0,8],"41":[8,6],"42":[4,4],"43":[2,2],"44":[0,4],"45":[0,8],"46":[8,8],"47":[4,4],"48":[4,2],"49":[4,0],"50":[8,2],"51":[8,0],"52":[2,6],"53":[0,8],"54":[2,6],"55":[0,0]},"inputSourceMap":{"version":3,"sources":["/Users/zhongjiafeng/Desktop/5000_Project/github/githubuniver/univer/packages/sheets/src/services/selections/move-active-cell-util.ts"],"sourcesContent":["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, ISelectionCell, Worksheet } from '@univerjs/core';\nimport type { ISelectionWithStyle } from '../../basics';\nimport { Direction, Range, RANGE_TYPE, Rectangle } from '@univerjs/core';\n\nconst getPrimaryCellUp = (scopeRange: IRange, worksheet: Worksheet, currentPrimary: ISelectionCell, step: number = 1, isFindNext: boolean = true, isGoBack: boolean = true): IRange | undefined => {\n    const movedRange = Range.transformRange(scopeRange, worksheet);\n    const { startRow, endRow } = movedRange;\n    let next = currentPrimary.startRow - step;\n    let nextCellMergedInfo = worksheet.getMergedCell(next, currentPrimary.startColumn);\n    let isMainCell = !nextCellMergedInfo || (nextCellMergedInfo.startRow === next && nextCellMergedInfo.startColumn === currentPrimary.startColumn);\n    while (!worksheet.getRowVisible(next) || !isMainCell) {\n        next--;\n        nextCellMergedInfo = worksheet.getMergedCell(next, currentPrimary.startColumn);\n        isMainCell = !nextCellMergedInfo || (nextCellMergedInfo.startRow === next && nextCellMergedInfo.startColumn === currentPrimary.startColumn);\n    }\n    if (next >= startRow) {\n        return { ...currentPrimary, startRow: next, endRow: next };\n    } else if (isGoBack) {\n        const newPrimary = { ...currentPrimary, startRow: endRow, endRow };\n        // eslint-disable-next-line ts/no-use-before-define\n        return getPrimaryCellLeft(scopeRange, worksheet, newPrimary, step, isFindNext, false);\n    }\n};\n\nconst getPrimaryCellDown = (scopeRange: IRange, worksheet: Worksheet, currentPrimary: ISelectionCell, step: number = 1, isFindNext: boolean = true, isGoBack: boolean = true): IRange | undefined => {\n    const movedRange = Range.transformRange(scopeRange, worksheet);\n    const { startRow, endRow } = movedRange;\n    let next = currentPrimary.endRow + step;\n    let nextCellMergedInfo = worksheet.getMergedCell(next, currentPrimary.startColumn);\n    let isMainCell = !nextCellMergedInfo || (nextCellMergedInfo.startRow === next && nextCellMergedInfo.startColumn === currentPrimary.startColumn);\n    while (!worksheet.getRowVisible(next) || !isMainCell) {\n        next++;\n        nextCellMergedInfo = worksheet.getMergedCell(next, currentPrimary.startColumn);\n        isMainCell = !nextCellMergedInfo || (nextCellMergedInfo.startRow === next && nextCellMergedInfo.startColumn === currentPrimary.startColumn);\n    }\n    if (next <= endRow) {\n        return { ...currentPrimary, startRow: next, endRow: next };\n    } else if (isGoBack) {\n        const newPrimary = { ...currentPrimary, startRow, endRow: startRow };\n        // eslint-disable-next-line ts/no-use-before-define\n        return getPrimaryCellRight(scopeRange, worksheet, newPrimary, step, isFindNext, false);\n    }\n};\n\nconst getPrimaryCellLeft = (scopeRange: IRange, worksheet: Worksheet, currentPrimary: ISelectionCell, step: number = 1, isFindNext: boolean = true, isGoBack: boolean = true): IRange | undefined => {\n    const movedRange = Range.transformRange(scopeRange, worksheet);\n    const { startColumn, endColumn } = movedRange;\n    let next = currentPrimary.startColumn - step;\n    let nextCellMergedInfo = worksheet.getMergedCell(currentPrimary.startRow, next);\n    let isMainCell = !nextCellMergedInfo || (nextCellMergedInfo.startRow === currentPrimary.startRow && nextCellMergedInfo.startColumn === next);\n    while (!worksheet.getColVisible(next) || !isMainCell) {\n        next--;\n        nextCellMergedInfo = worksheet.getMergedCell(currentPrimary.startRow, next);\n        isMainCell = !nextCellMergedInfo || (nextCellMergedInfo.startRow === currentPrimary.startRow && nextCellMergedInfo.startColumn === next);\n    }\n    if (next >= startColumn) {\n        return { ...currentPrimary, startColumn: next, endColumn: next };\n    } else if (isGoBack) {\n        const newPrimary = { ...currentPrimary, startColumn: endColumn, endColumn };\n        return getPrimaryCellUp(scopeRange, worksheet, newPrimary, step, isFindNext, false);\n    }\n};\n\nconst getPrimaryCellRight = (scopeRange: IRange, worksheet: Worksheet, currentPrimary: ISelectionCell, step: number = 1, isFindNext: boolean = true, isGoBack: boolean = true): IRange | undefined => {\n    const movedRange = Range.transformRange(scopeRange, worksheet);\n    const { startColumn, endColumn } = movedRange;\n    let next = currentPrimary.endColumn + step;\n    let nextCellMergedInfo = worksheet.getMergedCell(currentPrimary.startRow, next);\n    let isMainCell = !nextCellMergedInfo || (nextCellMergedInfo.startRow === currentPrimary.startRow && nextCellMergedInfo.startColumn === next);\n    while (!worksheet.getColVisible(next) || !isMainCell) {\n        next++;\n        nextCellMergedInfo = worksheet.getMergedCell(currentPrimary.startRow, next);\n        isMainCell = !nextCellMergedInfo || (nextCellMergedInfo.startRow === currentPrimary.startRow && nextCellMergedInfo.startColumn === next);\n    }\n    if (next <= endColumn) {\n        return { ...currentPrimary, endColumn: next, startColumn: next };\n    } else if (isGoBack) {\n        const newPrimary = { ...currentPrimary, startColumn, endColumn: startColumn };\n        return getPrimaryCellDown(scopeRange, worksheet, newPrimary, step, isFindNext, false);\n    }\n};\n\nfunction getCellAtRowCol(row: number, col: number, worksheet: Worksheet): ISelectionCell {\n    let destRange: ISelectionCell | null = null;\n\n    const matrix = worksheet.getMatrixWithMergedCells(row, col, row, col);\n    matrix.forValue((row, col, value) => {\n        destRange = {\n            actualRow: row,\n            actualColumn: col,\n            startRow: row,\n            startColumn: col,\n            isMerged: value.rowSpan !== undefined || value.colSpan !== undefined,\n            isMergedMainCell: value.rowSpan !== undefined && value.colSpan !== undefined,\n            endRow: row + (value.rowSpan !== undefined ? value.rowSpan - 1 : 0),\n            endColumn: col + (value.colSpan !== undefined ? value.colSpan - 1 : 0),\n            rangeType: RANGE_TYPE.NORMAL,\n        };\n\n        return false;\n    });\n\n    if (!destRange) {\n        return {\n            actualColumn: col,\n            actualRow: row,\n            startRow: row,\n            startColumn: col,\n            endRow: row,\n            endColumn: col,\n            isMerged: false,\n            isMergedMainCell: false,\n            rangeType: RANGE_TYPE.NORMAL,\n        };\n    }\n\n    return destRange;\n}\n\nconst getPrimaryCell = (scopeRange: IRange, worksheet: Worksheet, currentPrimary: ISelectionCell, direction: Direction, step: number = 1): IRange | undefined => {\n    switch (direction) {\n        case Direction.UP:\n            return getPrimaryCellUp(scopeRange, worksheet, currentPrimary, step);\n        case Direction.DOWN:\n            return getPrimaryCellDown(scopeRange, worksheet, currentPrimary, step);\n        case Direction.LEFT:\n            return getPrimaryCellLeft(scopeRange, worksheet, currentPrimary, step);\n        case Direction.RIGHT:\n            return getPrimaryCellRight(scopeRange, worksheet, currentPrimary, step);\n    }\n};\n\n/**\n * Get the next primary cell in the specified direction. If the primary cell not exists in selections, return null.\n * @param selections The current selections.\n * @param {Direction} direction The direction to move the primary cell.The enum value is maybe one of the following: UP(0),RIGHT(1), DOWN(2), LEFT(3).\n * @param {Worksheet} worksheet The worksheet instance.\n * @returns {IRange | null} The next primary cell.\n */\nexport const getNextPrimaryCell = (selections: ISelectionWithStyle[], direction: Direction, worksheet: Worksheet): IRange | null => {\n    let activeSelection;\n    let activeIndex = -1;\n    let currentPrimary;\n    for (let i = 0; i < selections.length; i++) {\n        if (selections[i].primary) {\n            activeSelection = selections[i];\n            activeIndex = i;\n            currentPrimary = activeSelection.primary;\n            break;\n        }\n    }\n\n    if (activeIndex === -1) {\n        return null;\n    }\n    const isReverse = direction === Direction.LEFT || direction === Direction.UP;\n     // for shift tab or shift enter, the direction should be reversed. so we need find the previous selection.\n    const nextIndex = isReverse\n        ? (activeIndex - 1 >= 0 ? activeIndex - 1 : selections.length - 1)\n        : activeIndex + 1 < selections.length ? activeIndex + 1 : 0;\n    const nextSelection = selections[nextIndex];\n\n    if (!activeSelection || !currentPrimary) {\n        return null;\n    }\n    const primary = { ...currentPrimary };\n    const { startRow, startColumn, endRow, endColumn } = activeSelection.range;\n\n    const isLastCell = isReverse ? primary.startRow === startRow && primary.startColumn === startColumn : primary.endRow === endRow && primary.endColumn === endColumn;\n    const useLeftTopAsDest = isLastCell && isReverse;\n\n    // if the current selection is a single cell, we should not move the primary cell.\n    if (!Rectangle.equals(activeSelection.range, primary)) {\n        const next = isLastCell ? nextSelection.range : getPrimaryCell(activeSelection.range, worksheet, primary, direction);\n        if (!next) {\n            return null;\n        }\n        const destRange = useLeftTopAsDest ? getCellAtRowCol(next.endRow, next.endColumn, worksheet) : getCellAtRowCol(next.startRow, next.startColumn, worksheet);\n\n        return {\n            startRow: destRange.startRow,\n            startColumn: destRange.startColumn,\n            endRow: destRange.endRow,\n            endColumn: destRange.endColumn,\n        };\n    }\n\n    const destRange = useLeftTopAsDest ? getCellAtRowCol(nextSelection.range.endRow, nextSelection.range.endColumn, worksheet) : getCellAtRowCol(nextSelection.range.startRow, nextSelection.range.startColumn, worksheet);\n    return {\n        startRow: destRange.startRow,\n        startColumn: destRange.startColumn,\n        endRow: destRange.endRow,\n        endColumn: destRange.endColumn,\n    };\n};\n"],"mappings":"AAkBA,SAAS,WAAW,OAAO,YAAY,iBAAiB;AAExD,MAAM,mBAAmB,CAAC,YAAoB,WAAsB,gBAAgC,OAAe,GAAG,aAAsB,MAAM,WAAoB,SAA6B;AAC/L,QAAM,aAAa,MAAM,eAAe,YAAY,SAAS;AAC7D,QAAM,EAAE,UAAU,OAAO,IAAI;AAC7B,MAAI,OAAO,eAAe,WAAW;AACrC,MAAI,qBAAqB,UAAU,cAAc,MAAM,eAAe,WAAW;AACjF,MAAI,aAAa,CAAC,sBAAuB,mBAAmB,aAAa,QAAQ,mBAAmB,gBAAgB,eAAe;AACnI,SAAO,CAAC,UAAU,cAAc,IAAI,KAAK,CAAC,YAAY;AAClD;AACA,yBAAqB,UAAU,cAAc,MAAM,eAAe,WAAW;AAC7E,iBAAa,CAAC,sBAAuB,mBAAmB,aAAa,QAAQ,mBAAmB,gBAAgB,eAAe;AAAA,EACnI;AACA,MAAI,QAAQ,UAAU;AAClB,WAAO,EAAE,GAAG,gBAAgB,UAAU,MAAM,QAAQ,KAAK;AAAA,EAC7D,WAAW,UAAU;AACjB,UAAM,aAAa,EAAE,GAAG,gBAAgB,UAAU,QAAQ,OAAO;AAEjE,WAAO,mBAAmB,YAAY,WAAW,YAAY,MAAM,YAAY,KAAK;AAAA,EACxF;AACJ;AAEA,MAAM,qBAAqB,CAAC,YAAoB,WAAsB,gBAAgC,OAAe,GAAG,aAAsB,MAAM,WAAoB,SAA6B;AACjM,QAAM,aAAa,MAAM,eAAe,YAAY,SAAS;AAC7D,QAAM,EAAE,UAAU,OAAO,IAAI;AAC7B,MAAI,OAAO,eAAe,SAAS;AACnC,MAAI,qBAAqB,UAAU,cAAc,MAAM,eAAe,WAAW;AACjF,MAAI,aAAa,CAAC,sBAAuB,mBAAmB,aAAa,QAAQ,mBAAmB,gBAAgB,eAAe;AACnI,SAAO,CAAC,UAAU,cAAc,IAAI,KAAK,CAAC,YAAY;AAClD;AACA,yBAAqB,UAAU,cAAc,MAAM,eAAe,WAAW;AAC7E,iBAAa,CAAC,sBAAuB,mBAAmB,aAAa,QAAQ,mBAAmB,gBAAgB,eAAe;AAAA,EACnI;AACA,MAAI,QAAQ,QAAQ;AAChB,WAAO,EAAE,GAAG,gBAAgB,UAAU,MAAM,QAAQ,KAAK;AAAA,EAC7D,WAAW,UAAU;AACjB,UAAM,aAAa,EAAE,GAAG,gBAAgB,UAAU,QAAQ,SAAS;AAEnE,WAAO,oBAAoB,YAAY,WAAW,YAAY,MAAM,YAAY,KAAK;AAAA,EACzF;AACJ;AAEA,MAAM,qBAAqB,CAAC,YAAoB,WAAsB,gBAAgC,OAAe,GAAG,aAAsB,MAAM,WAAoB,SAA6B;AACjM,QAAM,aAAa,MAAM,eAAe,YAAY,SAAS;AAC7D,QAAM,EAAE,aAAa,UAAU,IAAI;AACnC,MAAI,OAAO,eAAe,cAAc;AACxC,MAAI,qBAAqB,UAAU,cAAc,eAAe,UAAU,IAAI;AAC9E,MAAI,aAAa,CAAC,sBAAuB,mBAAmB,aAAa,eAAe,YAAY,mBAAmB,gBAAgB;AACvI,SAAO,CAAC,UAAU,cAAc,IAAI,KAAK,CAAC,YAAY;AAClD;AACA,yBAAqB,UAAU,cAAc,eAAe,UAAU,IAAI;AAC1E,iBAAa,CAAC,sBAAuB,mBAAmB,aAAa,eAAe,YAAY,mBAAmB,gBAAgB;AAAA,EACvI;AACA,MAAI,QAAQ,aAAa;AACrB,WAAO,EAAE,GAAG,gBAAgB,aAAa,MAAM,WAAW,KAAK;AAAA,EACnE,WAAW,UAAU;AACjB,UAAM,aAAa,EAAE,GAAG,gBAAgB,aAAa,WAAW,UAAU;AAC1E,WAAO,iBAAiB,YAAY,WAAW,YAAY,MAAM,YAAY,KAAK;AAAA,EACtF;AACJ;AAEA,MAAM,sBAAsB,CAAC,YAAoB,WAAsB,gBAAgC,OAAe,GAAG,aAAsB,MAAM,WAAoB,SAA6B;AAClM,QAAM,aAAa,MAAM,eAAe,YAAY,SAAS;AAC7D,QAAM,EAAE,aAAa,UAAU,IAAI;AACnC,MAAI,OAAO,eAAe,YAAY;AACtC,MAAI,qBAAqB,UAAU,cAAc,eAAe,UAAU,IAAI;AAC9E,MAAI,aAAa,CAAC,sBAAuB,mBAAmB,aAAa,eAAe,YAAY,mBAAmB,gBAAgB;AACvI,SAAO,CAAC,UAAU,cAAc,IAAI,KAAK,CAAC,YAAY;AAClD;AACA,yBAAqB,UAAU,cAAc,eAAe,UAAU,IAAI;AAC1E,iBAAa,CAAC,sBAAuB,mBAAmB,aAAa,eAAe,YAAY,mBAAmB,gBAAgB;AAAA,EACvI;AACA,MAAI,QAAQ,WAAW;AACnB,WAAO,EAAE,GAAG,gBAAgB,WAAW,MAAM,aAAa,KAAK;AAAA,EACnE,WAAW,UAAU;AACjB,UAAM,aAAa,EAAE,GAAG,gBAAgB,aAAa,WAAW,YAAY;AAC5E,WAAO,mBAAmB,YAAY,WAAW,YAAY,MAAM,YAAY,KAAK;AAAA,EACxF;AACJ;AAEA,SAAS,gBAAgB,KAAa,KAAa,WAAsC;AACrF,MAAI,YAAmC;AAEvC,QAAM,SAAS,UAAU,yBAAyB,KAAK,KAAK,KAAK,GAAG;AACpE,SAAO,SAAS,CAACA,MAAKC,MAAK,UAAU;AACjC,gBAAY;AAAA,MACR,WAAWD;AAAA,MACX,cAAcC;AAAA,MACd,UAAUD;AAAA,MACV,aAAaC;AAAA,MACb,UAAU,MAAM,YAAY,UAAa,MAAM,YAAY;AAAA,MAC3D,kBAAkB,MAAM,YAAY,UAAa,MAAM,YAAY;AAAA,MACnE,QAAQD,QAAO,MAAM,YAAY,SAAY,MAAM,UAAU,IAAI;AAAA,MACjE,WAAWC,QAAO,MAAM,YAAY,SAAY,MAAM,UAAU,IAAI;AAAA,MACpE,WAAW,WAAW;AAAA,IAC1B;AAEA,WAAO;AAAA,EACX,CAAC;AAED,MAAI,CAAC,WAAW;AACZ,WAAO;AAAA,MACH,cAAc;AAAA,MACd,WAAW;AAAA,MACX,UAAU;AAAA,MACV,aAAa;AAAA,MACb,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,MACV,kBAAkB;AAAA,MAClB,WAAW,WAAW;AAAA,IAC1B;AAAA,EACJ;AAEA,SAAO;AACX;AAEA,MAAM,iBAAiB,CAAC,YAAoB,WAAsB,gBAAgC,WAAsB,OAAe,MAA0B;AAC7J,UAAQ,WAAW;AAAA,IACf,KAAK,UAAU;AACX,aAAO,iBAAiB,YAAY,WAAW,gBAAgB,IAAI;AAAA,IACvE,KAAK,UAAU;AACX,aAAO,mBAAmB,YAAY,WAAW,gBAAgB,IAAI;AAAA,IACzE,KAAK,UAAU;AACX,aAAO,mBAAmB,YAAY,WAAW,gBAAgB,IAAI;AAAA,IACzE,KAAK,UAAU;AACX,aAAO,oBAAoB,YAAY,WAAW,gBAAgB,IAAI;AAAA,EAC9E;AACJ;AASO,aAAM,qBAAqB,CAAC,YAAmC,WAAsB,cAAwC;AAChI,MAAI;AACJ,MAAI,cAAc;AAClB,MAAI;AACJ,WAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AACxC,QAAI,WAAW,CAAC,EAAE,SAAS;AACvB,wBAAkB,WAAW,CAAC;AAC9B,oBAAc;AACd,uBAAiB,gBAAgB;AACjC;AAAA,IACJ;AAAA,EACJ;AAEA,MAAI,gBAAgB,IAAI;AACpB,WAAO;AAAA,EACX;AACA,QAAM,YAAY,cAAc,UAAU,QAAQ,cAAc,UAAU;AAE1E,QAAM,YAAY,YACX,cAAc,KAAK,IAAI,cAAc,IAAI,WAAW,SAAS,IAC9D,cAAc,IAAI,WAAW,SAAS,cAAc,IAAI;AAC9D,QAAM,gBAAgB,WAAW,SAAS;AAE1C,MAAI,CAAC,mBAAmB,CAAC,gBAAgB;AACrC,WAAO;AAAA,EACX;AACA,QAAM,UAAU,EAAE,GAAG,eAAe;AACpC,QAAM,EAAE,UAAU,aAAa,QAAQ,UAAU,IAAI,gBAAgB;AAErE,QAAM,aAAa,YAAY,QAAQ,aAAa,YAAY,QAAQ,gBAAgB,cAAc,QAAQ,WAAW,UAAU,QAAQ,cAAc;AACzJ,QAAM,mBAAmB,cAAc;AAGvC,MAAI,CAAC,UAAU,OAAO,gBAAgB,OAAO,OAAO,GAAG;AACnD,UAAM,OAAO,aAAa,cAAc,QAAQ,eAAe,gBAAgB,OAAO,WAAW,SAAS,SAAS;AACnH,QAAI,CAAC,MAAM;AACP,aAAO;AAAA,IACX;AACA,UAAMC,aAAY,mBAAmB,gBAAgB,KAAK,QAAQ,KAAK,WAAW,SAAS,IAAI,gBAAgB,KAAK,UAAU,KAAK,aAAa,SAAS;AAEzJ,WAAO;AAAA,MACH,UAAUA,WAAU;AAAA,MACpB,aAAaA,WAAU;AAAA,MACvB,QAAQA,WAAU;AAAA,MAClB,WAAWA,WAAU;AAAA,IACzB;AAAA,EACJ;AAEA,QAAM,YAAY,mBAAmB,gBAAgB,cAAc,MAAM,QAAQ,cAAc,MAAM,WAAW,SAAS,IAAI,gBAAgB,cAAc,MAAM,UAAU,cAAc,MAAM,aAAa,SAAS;AACrN,SAAO;AAAA,IACH,UAAU,UAAU;AAAA,IACpB,aAAa,UAAU;AAAA,IACvB,QAAQ,UAAU;AAAA,IAClB,WAAW,UAAU;AAAA,EACzB;AACJ;","names":["row","col","destRange"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"495fcf155127660607e5654e734d33044928e2e5"}}