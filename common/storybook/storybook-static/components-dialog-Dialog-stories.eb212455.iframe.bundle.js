"use strict";(self.webpackChunk_univerjs_storybook=self.webpackChunk_univerjs_storybook||[]).push([[5001],{"../../packages/design/src/components/dialog/Dialog.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DialogBasic:()=>DialogBasic,DialogDraggable:()=>DialogDraggable,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@19.0.0/node_modules/react/jsx-runtime.js"),_univerjs_icons__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/.pnpm/@univerjs+icons@0.2.22_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@univerjs/icons/esm/components/close-single.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/.pnpm/react@19.0.0/node_modules/react/index.js"),_button_Button__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../packages/design/src/components/button/Button.tsx"),_Dialog__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../packages/design/src/components/dialog/Dialog.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Components / Dialog",component:_Dialog__WEBPACK_IMPORTED_MODULE_3__.l,parameters:{layout:"centered"},tags:["autodocs"]},DialogBasic={render(){const[visible,setVisible]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);function handleToggleVisible(){setVisible(!visible)}return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_button_Button__WEBPACK_IMPORTED_MODULE_2__.$,{onClick:handleToggleVisible,children:"open dialog"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Dialog__WEBPACK_IMPORTED_MODULE_3__.l,{visible,title:"hello world",closeIcon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_univerjs_icons__WEBPACK_IMPORTED_MODULE_4__.A,{}),footer:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("footer",{children:"footer"}),onClose:handleToggleVisible,children:"xxxx"})]})}},DialogDraggable={render(){const[visible,setVisible]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);function handleToggleVisible(){setVisible(!visible)}return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_button_Button__WEBPACK_IMPORTED_MODULE_2__.$,{onClick:handleToggleVisible,children:"open dialog"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Dialog__WEBPACK_IMPORTED_MODULE_3__.l,{visible,title:"hello world",closeIcon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_univerjs_icons__WEBPACK_IMPORTED_MODULE_4__.A,{}),draggable:!0,destroyOnClose:!0,preservePositionOnDestroy:!0,defaultPosition:{x:100,y:100},onClose:handleToggleVisible,children:"xxxx"})]})}},__namedExportsOrder=["DialogBasic","DialogDraggable"];DialogBasic.parameters={...DialogBasic.parameters,docs:{...DialogBasic.parameters?.docs,source:{originalSource:'{\n  render() {\n    const [visible, setVisible] = useState(false);\n    function handleToggleVisible() {\n      setVisible(!visible);\n    }\n    return <>\n                <Button onClick={handleToggleVisible}>open dialog</Button>\n                <Dialog visible={visible} title="hello world" closeIcon={<CloseSingle />} footer={<footer>footer</footer>} onClose={handleToggleVisible}>\n                    xxxx\n                </Dialog>\n            </>;\n  }\n}',...DialogBasic.parameters?.docs?.source}}},DialogDraggable.parameters={...DialogDraggable.parameters,docs:{...DialogDraggable.parameters?.docs,source:{originalSource:'{\n  render() {\n    const [visible, setVisible] = useState(false);\n    function handleToggleVisible() {\n      setVisible(!visible);\n    }\n    return <>\n                <Button onClick={handleToggleVisible}>open dialog</Button>\n                <Dialog visible={visible} title="hello world" closeIcon={<CloseSingle />} draggable destroyOnClose preservePositionOnDestroy defaultPosition={{\n        x: 100,\n        y: 100\n      }} onClose={handleToggleVisible}>\n                    xxxx\n                </Dialog>\n            </>;\n  }\n}',...DialogDraggable.parameters?.docs?.source}}}}}]);