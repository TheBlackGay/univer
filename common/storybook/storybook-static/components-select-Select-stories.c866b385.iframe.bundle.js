"use strict";(self.webpackChunk_univerjs_storybook=self.webpackChunk_univerjs_storybook||[]).push([[3901],{"../../packages/design/src/components/select/Select.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{SelectBasic:()=>SelectBasic,SelectBorderless:()=>SelectBorderless,SelectEmpty:()=>SelectEmpty,SelectGroup:()=>SelectGroup,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@19.0.0/node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/.pnpm/react@19.0.0/node_modules/react/index.js"),_Select__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../packages/design/src/components/select/Select.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Components / Select",component:_Select__WEBPACK_IMPORTED_MODULE_2__.l,parameters:{layout:"centered"},tags:["autodocs"]},SelectBasic={render(){const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Select__WEBPACK_IMPORTED_MODULE_2__.l,{value,options:[{label:"Option 1",value:"option1"},{label:"Option 2",value:"option2"},{label:"Option 3 Option 3 Option 3 Option 3 Option 3 Option 3",value:"option3"}],onChange:function handleChange(value){setValue(value)}})}},SelectEmpty={render(){const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Select__WEBPACK_IMPORTED_MODULE_2__.l,{value,options:[],onChange:function handleChange(value){setValue(value)}})}},SelectBorderless={render(){const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Select__WEBPACK_IMPORTED_MODULE_2__.l,{value,options:[{label:"Option 1",value:"option1"},{label:"Option 2",value:"option2"},{label:"Option 3 Option 3 Option 3 Option 3 Option 3 Option 3",value:"option3"}],onChange:function handleChange(value){setValue(value)},borderless:!0})}},SelectGroup={render(){const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(""),options=[{label:"Option 1",value:"option1"},{options:[{label:"Option 2-2",value:"option22"},{label:"Option 2-3",value:"option23"}]},{options:[{label:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("span",{children:["Option 3-2",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("strong",{children:"xxx"})]}),value:"option32"},{label:"Option 3-3",value:"option33"}]}];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Select__WEBPACK_IMPORTED_MODULE_2__.l,{value,options,onChange:function handleChange(value){setValue(value)}})}},__namedExportsOrder=["SelectBasic","SelectEmpty","SelectBorderless","SelectGroup"];SelectBasic.parameters={...SelectBasic.parameters,docs:{...SelectBasic.parameters?.docs,source:{originalSource:"{\n  render() {\n    const [value, setValue] = useState('');\n    const options = [{\n      label: 'Option 1',\n      value: 'option1'\n    }, {\n      label: 'Option 2',\n      value: 'option2'\n    }, {\n      label: 'Option 3 Option 3 Option 3 Option 3 Option 3 Option 3',\n      value: 'option3'\n    }];\n    function handleChange(value: string | number | boolean) {\n      setValue(value as string);\n    }\n    return <Select value={value} options={options} onChange={handleChange} />;\n  }\n}",...SelectBasic.parameters?.docs?.source}}},SelectEmpty.parameters={...SelectEmpty.parameters,docs:{...SelectEmpty.parameters?.docs,source:{originalSource:"{\n  render() {\n    const [value, setValue] = useState('');\n    const options: ISelectProps['options'] = [];\n    function handleChange(value: string | number | boolean) {\n      setValue(value as string);\n    }\n    return <Select value={value} options={options} onChange={handleChange} />;\n  }\n}",...SelectEmpty.parameters?.docs?.source}}},SelectBorderless.parameters={...SelectBorderless.parameters,docs:{...SelectBorderless.parameters?.docs,source:{originalSource:"{\n  render() {\n    const [value, setValue] = useState('');\n    const options = [{\n      label: 'Option 1',\n      value: 'option1'\n    }, {\n      label: 'Option 2',\n      value: 'option2'\n    }, {\n      label: 'Option 3 Option 3 Option 3 Option 3 Option 3 Option 3',\n      value: 'option3'\n    }];\n    function handleChange(value: string | number | boolean) {\n      setValue(value as string);\n    }\n    return <Select value={value} options={options} onChange={handleChange} borderless />;\n  }\n}",...SelectBorderless.parameters?.docs?.source}}},SelectGroup.parameters={...SelectGroup.parameters,docs:{...SelectGroup.parameters?.docs,source:{originalSource:"{\n  render() {\n    const [value, setValue] = useState('');\n    const options = [{\n      label: 'Option 1',\n      value: 'option1'\n    }, {\n      options: [{\n        label: 'Option 2-2',\n        value: 'option22'\n      }, {\n        label: 'Option 2-3',\n        value: 'option23'\n      }]\n    }, {\n      options: [{\n        label: <span>\n                                Option 3-2\n                                <strong>xxx</strong>\n                            </span>,\n        value: 'option32'\n      }, {\n        label: 'Option 3-3',\n        value: 'option33'\n      }]\n    }];\n    function handleChange(value: string | number | boolean) {\n      setValue(value as string);\n    }\n    return <Select value={value} options={options} onChange={handleChange} />;\n  }\n}",...SelectGroup.parameters?.docs?.source}}}}}]);