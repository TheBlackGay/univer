{
  "version": 3,
  "sources": ["../../packages/docs-mention-ui/src/controllers/config.schema.ts", "../../packages/docs-mention-ui/src/services/doc-mention.service.ts", "../../packages/docs-mention-ui/src/commands/operations/mention-popup.operation.ts", "../../packages/docs-mention-ui/src/views/mention-edit-popup/index.tsx", "../../packages/docs-mention-ui/src/commands/commands/doc-mention.command.ts", "../../packages/docs-mention-ui/src/views/mention-list/index.tsx", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/docs-mention-ui/src/views/mention-list/index.module.less", "../../packages/docs-mention-ui/src/services/doc-mention-popup.service.ts", "../../packages/docs-mention-ui/src/controllers/doc-mention-trigger.controller.ts", "../../packages/docs-mention-ui/src/controllers/doc-mention-ui.controller.ts", "../../packages/docs-mention-ui/src/types/const/const.ts", "../../packages/docs-mention-ui/src/plugin.ts"],
  "sourcesContent": ["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { MenuConfig } from '@univerjs/ui';\n\nexport const DOCS_MENTION_UI_PLUGIN_CONFIG_KEY = 'docs-mention-ui.config';\n\nexport const configSymbol = Symbol(DOCS_MENTION_UI_PLUGIN_CONFIG_KEY);\n\nexport interface IUniverDocsMentionUIConfig {\n    menu?: MenuConfig;\n}\n\nexport const defaultPluginConfig: IUniverDocsMentionUIConfig = {};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable } from '@univerjs/core';\nimport { Disposable } from '@univerjs/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport class DocMentionService extends Disposable {\n    private readonly _editing$ = new BehaviorSubject<Nullable<{ unitId: string; index: number }>>(undefined);\n    readonly editing$ = this._editing$.asObservable();\n\n    get editing() {\n        return this._editing$.value;\n    }\n\n    constructor() {\n        super();\n\n        this.disposeWithMe(() => {\n            this._editing$.complete();\n        });\n    }\n\n    startEditing(item: { unitId: string; index: number }) {\n        this._editing$.next(item);\n    }\n\n    endEditing() {\n        this._editing$.next(undefined);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommandType, type ICommand } from '@univerjs/core';\nimport { DocMentionService } from '../../services/doc-mention.service';\n\nexport interface IShowMentionInfoPopupOperationParams {\n    unitId: string;\n    mentionId: string;\n}\n\n// FIXME: anti-pattern: use command as an event\nexport const ShowMentionInfoPopupOperation: ICommand<IShowMentionInfoPopupOperationParams> = {\n    type: CommandType.OPERATION,\n    id: 'doc.operation.show-mention-info-popup',\n    handler(accessor, params) {\n        return false;\n    },\n};\n\nexport const CloseMentionInfoPopupOperation: ICommand = {\n    type: CommandType.OPERATION,\n    id: 'doc.operation.close-mention-info-popup',\n    handler(accessor) {\n        return false;\n    },\n};\n\nexport interface IShowMentionEditPopupOperationParams {\n    startIndex: number;\n    unitId: string;\n}\n\nexport const ShowMentionEditPopupOperation: ICommand<IShowMentionEditPopupOperationParams> = {\n    type: CommandType.OPERATION,\n    id: 'doc.operation.show-mention-edit-popup',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const docMentionService = accessor.get(DocMentionService);\n        docMentionService.startEditing({ unitId: params.unitId, index: params.startIndex });\n        return true;\n    },\n};\n\nexport const CloseMentionEditPopupOperation: ICommand = {\n    type: CommandType.OPERATION,\n    id: 'doc.operation.close-mention-edit-popup',\n    handler(accessor) {\n        const docMentionService = accessor.get(DocMentionService);\n        docMentionService.endEditing();\n        return true;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DocumentDataModel, ITypeMentionList } from '@univerjs/core';\nimport { ICommandService, IMentionIOService, IUniverInstanceService, Tools, UniverInstanceType } from '@univerjs/core';\nimport { DocSelectionManagerService } from '@univerjs/docs';\nimport { IEditorService } from '@univerjs/docs-ui';\nimport { useDependency, useObservable } from '@univerjs/ui';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { filter } from 'rxjs';\nimport { AddDocMentionCommand } from '../../commands/commands/doc-mention.command';\nimport { DocMentionPopupService } from '../../services/doc-mention-popup.service';\nimport { MentionList } from '../mention-list';\n\nexport const MentionEditPopup = () => {\n    const popupService = useDependency(DocMentionPopupService);\n    const commandService = useDependency(ICommandService);\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const editPopup = useObservable(popupService.editPopup$);\n    const mentionIOService = useDependency(IMentionIOService);\n    const editorService = useDependency(IEditorService);\n    const documentDataModel = editPopup ? univerInstanceService.getUnit<DocumentDataModel>(editPopup.unitId) : null;\n    const textSelectionService = useDependency(DocSelectionManagerService);\n    const [mentions, setMentions] = useState<ITypeMentionList[]>([]);\n    const textSelection$ = useMemo(() =>\n        textSelectionService.textSelection$.pipe(\n            filter((selection) => selection.unitId === editPopup?.unitId)\n        ), [textSelectionService.textSelection$, editPopup]);\n\n    const textSelection = useObservable(textSelection$);\n    const search = editPopup ? documentDataModel?.getBody()?.dataStream.slice(editPopup.anchor, textSelection?.textRanges[0].startOffset) : '';\n\n    useEffect(() => {\n        (async () => {\n            if (editPopup) {\n                const res = await mentionIOService.list({ unitId: editPopup.unitId, search });\n                setMentions(res.list);\n            }\n        })();\n    }, [mentionIOService, editPopup, search]);\n    if (!editPopup) {\n        return null;\n    }\n\n    return (\n        <MentionList\n            editorId={editPopup.unitId}\n            onClick={() => {\n                popupService.closeEditPopup();\n                editorService.focus(editPopup.unitId);\n            }}\n            mentions={mentions}\n            onSelect={async (mention) => {\n                await commandService.executeCommand(AddDocMentionCommand.id, {\n                    unitId: univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_DOC)!.getUnitId(),\n                    mention: {\n                        ...mention,\n                        id: Tools.generateRandomId(),\n                    },\n                    startIndex: editPopup.anchor,\n                });\n                editorService.focus(editPopup.unitId);\n            }}\n        />\n    );\n};\n\nMentionEditPopup.componentKey = 'univer.popup.doc-mention-edit';\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand, IDocMention, IDocumentBody } from '@univerjs/core';\nimport { CommandType, CustomRangeType, ICommandService } from '@univerjs/core';\nimport { deleteCustomRangeFactory, DocSelectionManagerService, replaceSelectionFactory } from '@univerjs/docs';\n\nexport interface IAddDocMentionCommandParams {\n    mention: IDocMention;\n    unitId: string;\n    startIndex: number;\n}\n\nexport const AddDocMentionCommand: ICommand<IAddDocMentionCommandParams> = {\n    type: CommandType.COMMAND,\n    id: 'docs.command.add-doc-mention',\n    handler: async (accessor, params) => {\n        if (!params) {\n            return false;\n        }\n\n        const { mention, unitId, startIndex } = params;\n        const commandService = accessor.get(ICommandService);\n        const docSelectionManagerService = accessor.get(DocSelectionManagerService);\n        const activeRange = docSelectionManagerService.getActiveTextRange();\n        if (!activeRange) {\n            return false;\n        }\n\n        const { metadata, ...mentionConfig } = mention;\n        const dataStream = `@${mention.label}`;\n        const body: IDocumentBody = {\n            dataStream,\n            customRanges: [{\n                startIndex: 0,\n                endIndex: dataStream.length - 1,\n                rangeId: mention.id,\n                rangeType: CustomRangeType.MENTION,\n                wholeEntity: true,\n                properties: {\n                    ...mentionConfig,\n                    ...metadata,\n                },\n            }],\n        };\n\n        const doMutation = replaceSelectionFactory(\n            accessor,\n            {\n                unitId,\n                body,\n                selection: {\n                    startOffset: startIndex,\n                    endOffset: activeRange.endOffset,\n                    collapsed: startIndex === activeRange.endOffset,\n                },\n            }\n        );\n\n        if (doMutation) {\n            return commandService.syncExecuteCommand(doMutation.id, doMutation.params);\n        }\n\n        return false;\n    },\n};\n\nexport interface IDeleteDocMentionCommandParams {\n    unitId: string;\n    mentionId: string;\n}\n\nexport const DeleteDocMentionCommand: ICommand<IDeleteDocMentionCommandParams> = {\n    type: CommandType.COMMAND,\n    id: 'docs.command.delete-doc-mention',\n    async handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { unitId, mentionId } = params;\n        const commandService = accessor.get(ICommandService);\n\n        const doMutation = deleteCustomRangeFactory(accessor, { unitId, rangeId: mentionId });\n        if (!doMutation) {\n            return false;\n        }\n\n        return await commandService.syncExecuteCommand(doMutation.id, doMutation.params);\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IMention, ITypeMentionList } from '@univerjs/core';\nimport { clsx } from '@univerjs/design';\nimport { useRef, useState } from 'react';\nimport styles from './index.module.less';\n\nexport interface IMentionListProps {\n    mentions: ITypeMentionList[];\n    active?: string;\n    onSelect?: (item: IMention) => void;\n    onClick?: () => void;\n    editorId: string;\n}\n\nexport const MentionList = (props: IMentionListProps) => {\n    const { mentions, active, onSelect, onClick, editorId } = props;\n    const ref = useRef<HTMLDivElement>(null);\n    const [activeId, setActiveId] = useState(active ?? mentions[0]?.mentions[0]?.objectId);\n    const handleSelect = (item: IMention) => {\n        onSelect?.(item);\n    };\n\n    return (\n        <div ref={ref} data-editorid={editorId} tabIndex={0} className={styles.docMentionPanel} onClick={onClick}>\n            {mentions.map((typeMentions) => (\n                <div key={typeMentions.type}>\n                    <div className={styles.docMentionType}>{typeMentions.title}</div>\n                    {typeMentions.mentions.map((mention) => (\n                        <div\n                            data-editorid={editorId}\n                            key={mention.objectId}\n                            className={clsx(styles.docMention, { [styles.docMentionActive]: activeId === mention.objectId })}\n                            onClick={() => handleSelect(mention)}\n                            onMouseEnter={() => setActiveId(mention.objectId)}\n                        >\n                            <img className={styles.docMentionIcon} src={mention.metadata?.icon as string} />\n                            <div className={styles.docMentionLabel}>{mention.label}</div>\n                        </div>\n                    ))}\n                </div>\n            ))}\n        </div>\n    );\n};\n", "export default {\n  \"docMentionPanel\": \"univer-doc-mention-panel\",\n  \"docMention\": \"univer-doc-mention\",\n  \"docMentionIcon\": \"univer-doc-mention-icon\",\n  \"docMentionActive\": \"univer-doc-mention-active\",\n  \"docMentionLabel\": \"univer-doc-mention-label\"\n};import \"ni:sha-256;CfCouPd0U2G9raAk4rY25A6CL3NfWP_gXArvavEd0xI\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IDisposable, Nullable } from '@univerjs/core';\nimport { Disposable, Inject } from '@univerjs/core';\nimport { DocCanvasPopManagerService } from '@univerjs/docs-ui';\nimport { BehaviorSubject } from 'rxjs';\nimport { MentionEditPopup } from '../views/mention-edit-popup';\nimport { DocMentionService } from './doc-mention.service';\n\nexport class DocMentionPopupService extends Disposable {\n    private readonly _infoPopup$ = new BehaviorSubject(undefined);\n    readonly infoPopup$ = this._infoPopup$.asObservable();\n    get infoPopup() {\n        return this._infoPopup$.value;\n    }\n\n    private readonly _editPopup$ = new BehaviorSubject<Nullable<{ anchor: number; popup: IDisposable; unitId: string }>>(undefined);\n    readonly editPopup$ = this._editPopup$.asObservable();\n    get editPopup() {\n        return this._editPopup$.value;\n    }\n\n    constructor(\n        @Inject(DocCanvasPopManagerService) private readonly _docCanvasPopupManagerService: DocCanvasPopManagerService,\n        @Inject(DocMentionService) private readonly _docMentionService: DocMentionService\n    ) {\n        super();\n\n        this.disposeWithMe(this._docMentionService.editing$.subscribe((editing) => {\n            if (editing !== undefined && editing !== null) {\n                this.showEditPopup(editing.unitId, editing.index);\n            } else {\n                this.closeEditPopup();\n            }\n        }));\n    }\n\n    showInfoPopup() {}\n\n    closeInfoPopup() {}\n\n    showEditPopup(unitId: string, index: number) {\n        this.closeEditPopup();\n        const dispose = this._docCanvasPopupManagerService.attachPopupToRange(\n            { startOffset: index, endOffset: index, collapsed: true },\n            {\n                componentKey: MentionEditPopup.componentKey,\n                onClickOutside: () => {\n                    this.closeEditPopup();\n                },\n                direction: 'bottom',\n            },\n            unitId\n        );\n        this._editPopup$.next({ popup: dispose, anchor: index, unitId });\n    }\n\n    closeEditPopup() {\n        if (!(this._docMentionService.editing == null)) {\n            this._docMentionService.endEditing();\n        }\n\n        if (this.editPopup) {\n            this.editPopup.popup.dispose();\n            this._editPopup$.next(null);\n        }\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IInsertCommandParams } from '@univerjs/docs-ui';\nimport { Disposable, ICommandService, Inject, Tools } from '@univerjs/core';\nimport { DocSelectionManagerService } from '@univerjs/docs';\nimport { DeleteLeftCommand, InsertCommand, MoveCursorOperation } from '@univerjs/docs-ui';\nimport { CloseMentionEditPopupOperation, ShowMentionEditPopupOperation } from '../commands/operations/mention-popup.operation';\nimport { DocMentionPopupService } from '../services/doc-mention-popup.service';\nimport { DocMentionService } from '../services/doc-mention.service';\n\nexport class DocMentionTriggerController extends Disposable {\n    constructor(\n        @ICommandService private readonly _commandService: ICommandService,\n        @Inject(DocMentionService) private readonly _docMentionService: DocMentionService,\n        @Inject(DocSelectionManagerService) private readonly _textSelectionManagerService: DocSelectionManagerService,\n        @Inject(DocMentionPopupService) private readonly _docMentionPopupService: DocMentionPopupService\n    ) {\n        super();\n\n        this._initTrigger();\n    }\n\n    private _initTrigger() {\n        this.disposeWithMe(\n            this._commandService.onCommandExecuted((commandInfo) => {\n                if (commandInfo.id === InsertCommand.id) {\n                    const params = commandInfo.params as IInsertCommandParams;\n                    const activeRange = this._textSelectionManagerService.getActiveTextRange();\n                    if (params.body.dataStream === '@' && activeRange && !Tools.isDefine(this._docMentionService.editing)) {\n                        setTimeout(() => {\n                            this._commandService.executeCommand(ShowMentionEditPopupOperation.id, {\n                                startIndex: activeRange.startOffset - 1,\n                                unitId: params.unitId,\n                            });\n                        }, 100);\n                    }\n                }\n\n                if (commandInfo.id === MoveCursorOperation.id) {\n                    this._commandService.executeCommand(CloseMentionEditPopupOperation.id);\n                }\n\n                if (commandInfo.id === DeleteLeftCommand.id) {\n                    if (this._docMentionPopupService.editPopup == null) {\n                        return;\n                    }\n                    const activeRange = this._textSelectionManagerService.getActiveTextRange();\n                    if (activeRange && activeRange.endOffset <= this._docMentionPopupService.editPopup.anchor) {\n                        this._commandService.executeCommand(CloseMentionEditPopupOperation.id);\n                    }\n                }\n            })\n        );\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Disposable, ICommandService, Inject } from '@univerjs/core';\nimport { ComponentManager } from '@univerjs/ui';\nimport { AddDocMentionCommand, DeleteDocMentionCommand } from '../commands/commands/doc-mention.command';\nimport { CloseMentionEditPopupOperation, CloseMentionInfoPopupOperation, ShowMentionEditPopupOperation, ShowMentionInfoPopupOperation } from '../commands/operations/mention-popup.operation';\nimport { MentionEditPopup } from '../views/mention-edit-popup';\n\nexport class DocMentionUIController extends Disposable {\n    constructor(\n        @ICommandService private readonly _commandService: ICommandService,\n        @Inject(ComponentManager) private readonly _componentManager: ComponentManager\n    ) {\n        super();\n\n        this._initCommands();\n        this._initComponents();\n    }\n\n    private _initCommands() {\n        [\n            ShowMentionInfoPopupOperation,\n            CloseMentionInfoPopupOperation,\n            ShowMentionEditPopupOperation,\n            CloseMentionEditPopupOperation,\n            AddDocMentionCommand,\n            DeleteDocMentionCommand,\n        ].forEach((operation) => {\n            this.disposeWithMe(this._commandService.registerCommand(operation));\n        });\n    }\n\n    private _initComponents() {\n        const components = [[MentionEditPopup.componentKey, MentionEditPopup]] as const;\n\n        components.forEach(([key, comp]) => {\n            this.disposeWithMe(this._componentManager.register(key, comp));\n        });\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DOC_MENTION_UI_PLUGIN = 'DOC_MENTION_UI_PLUGIN';\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Dependency } from '@univerjs/core';\nimport type { IUniverDocsMentionUIConfig } from './controllers/config.schema';\nimport { IConfigService, Inject, Injector, merge, Plugin, UniverInstanceType } from '@univerjs/core';\nimport { defaultPluginConfig, DOCS_MENTION_UI_PLUGIN_CONFIG_KEY } from './controllers/config.schema';\nimport { DocMentionTriggerController } from './controllers/doc-mention-trigger.controller';\nimport { DocMentionUIController } from './controllers/doc-mention-ui.controller';\nimport { DocMentionPopupService } from './services/doc-mention-popup.service';\nimport { DocMentionService } from './services/doc-mention.service';\nimport { DOC_MENTION_UI_PLUGIN } from './types/const/const';\n\nexport class UniverDocsMentionUIPlugin extends Plugin {\n    static override pluginName = DOC_MENTION_UI_PLUGIN;\n    static override type = UniverInstanceType.UNIVER_DOC;\n\n    constructor(\n        private readonly _config: Partial<IUniverDocsMentionUIConfig> = defaultPluginConfig,\n        @Inject(Injector) protected override _injector: Injector,\n        @IConfigService private readonly _configService: IConfigService\n    ) {\n        super();\n\n        // Manage the plugin configuration.\n        const { menu, ...rest } = merge(\n            {},\n            defaultPluginConfig,\n            this._config\n        );\n        if (menu) {\n            this._configService.setConfig('menu', menu, { merge: true });\n        }\n        this._configService.setConfig(DOCS_MENTION_UI_PLUGIN_CONFIG_KEY, rest);\n    }\n\n    override onStarting(): void {\n        ([\n            [DocMentionService],\n            [DocMentionPopupService],\n            [DocMentionUIController],\n            [DocMentionTriggerController],\n        ] as Dependency[]).forEach((dep) => {\n            this._injector.add(dep);\n        });\n\n        this._injector.get(DocMentionUIController);\n    }\n\n    override onRendered(): void {\n        this._injector.get(DocMentionTriggerController);\n        this._injector.get(DocMentionPopupService);\n    }\n}\n"],
  "mappings": "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",
  "names": ["import_react", "_a", "import_jsx_runtime"]
}
