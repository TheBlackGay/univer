{
  "version": 3,
  "sources": ["../../packages/sheets-numfmt-ui/src/controllers/config.schema.ts", "../../packages/sheets-numfmt-ui/src/controllers/numfmt-alert-render.controller.ts", "../../packages/sheets-numfmt-ui/src/commands/operations/close.numfmt.panel.operation.ts", "../../packages/sheets-numfmt-ui/src/commands/operations/open.numfmt.panel.operation.ts", "../../packages/sheets-numfmt-ui/src/views/components/index.tsx", "../../packages/sheets-numfmt-ui/src/controllers/user-habit.controller.ts", "../../packages/sheets-numfmt-ui/src/views/hooks/use-currency-options.ts", "../../packages/sheets-numfmt-ui/src/views/hooks/use-next-tick.ts", "../../packages/sheets-numfmt-ui/src/views/components/accounting/index.tsx", "../../packages/sheets-numfmt-ui/src/views/components/currency/index.tsx", "../../packages/sheets-numfmt-ui/src/views/components/custom-format/index.tsx", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-numfmt-ui/src/views/components/custom-format/index.module.less", "../../packages/sheets-numfmt-ui/src/views/components/date/index.tsx", "../../packages/sheets-numfmt-ui/src/views/components/general/index.tsx", "../../packages/sheets-numfmt-ui/src/views/components/thousandth-percentile/index.tsx", "../../packages/sheets-numfmt-ui/src/controllers/numfmt.controller.ts", "../../packages/sheets-numfmt-ui/src/controllers/numfmt.editor.controller.ts", "../../packages/sheets-numfmt-ui/src/controllers/menu.ts", "../../packages/sheets-numfmt-ui/src/views/components/more-numfmt-type/MoreNumfmtType.tsx", "../../packages/sheets-numfmt-ui/src/controllers/menu.schema.ts", "../../packages/sheets-numfmt-ui/src/controllers/numfmt.menu.controller.ts", "../../packages/sheets-numfmt-ui/src/plugin.ts"],
  "sourcesContent": ["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { MenuConfig } from '@univerjs/ui';\n\nexport const SHEETS_NUMFMT_UI_PLUGIN_CONFIG_KEY = 'sheets-numfmt.config';\n\nexport const configSymbol = Symbol(SHEETS_NUMFMT_UI_PLUGIN_CONFIG_KEY);\n\nexport interface IUniverSheetsNumfmtUIConfig {\n    menu?: MenuConfig;\n}\n\nexport const defaultPluginConfig: IUniverSheetsNumfmtUIConfig = {};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Workbook } from '@univerjs/core';\nimport type { IRenderContext, IRenderModule } from '@univerjs/engine-render';\nimport { Disposable, Inject, isRealNum, LocaleService } from '@univerjs/core';\nimport { FormulaDataModel } from '@univerjs/engine-formula';\nimport { isTextFormat } from '@univerjs/engine-numfmt';\nimport { INumfmtService } from '@univerjs/sheets';\nimport { CellAlertManagerService, CellAlertType, HoverManagerService } from '@univerjs/sheets-ui';\nimport { IZenZoneService } from '@univerjs/ui';\nimport { debounceTime } from 'rxjs';\n\nconst ALERT_KEY = 'SHEET_NUMFMT_ALERT';\n\nexport class NumfmtAlertRenderController extends Disposable implements IRenderModule {\n    constructor(\n        private readonly _context: IRenderContext<Workbook>,\n        @Inject(HoverManagerService) private readonly _hoverManagerService: HoverManagerService,\n        @Inject(CellAlertManagerService) private readonly _cellAlertManagerService: CellAlertManagerService,\n        @Inject(LocaleService) private readonly _localeService: LocaleService,\n        @Inject(FormulaDataModel) private readonly _formulaDataModel: FormulaDataModel,\n        @IZenZoneService private readonly _zenZoneService: IZenZoneService,\n        @Inject(INumfmtService) private _numfmtService: INumfmtService\n    ) {\n        super();\n        this._init();\n    }\n\n    private _init() {\n        this._initCellAlertPopup();\n        this._initZenService();\n    }\n\n    private _initCellAlertPopup() {\n        this.disposeWithMe(this._hoverManagerService.currentCell$.pipe(debounceTime(100)).subscribe((cellPos) => {\n            if (cellPos) {\n                const location = cellPos.location;\n                const workbook = this._context.unit;\n                const worksheet = workbook.getActiveSheet();\n                if (!worksheet) return;\n\n                const unitId = location.unitId;\n                const sheetId = location.subUnitId;\n                let numfmtValue;\n\n                const cellData = worksheet.getCell(location.row, location.col);\n\n                if (cellData?.s) {\n                    const style = workbook.getStyles().get(cellData.s);\n                    if (style?.n) {\n                        numfmtValue = style.n;\n                    }\n                }\n\n                if (!numfmtValue) {\n                    numfmtValue = this._numfmtService.getValue(unitId, sheetId, location.row, location.col);\n                }\n\n                if (!numfmtValue) {\n                    this._hideAlert();\n                    return;\n                }\n\n                // Preventing blank object\n                if (isTextFormat(numfmtValue.pattern) && cellData?.v && isRealNum(cellData.v)) {\n                    const currentAlert = this._cellAlertManagerService.currentAlert.get(ALERT_KEY);\n                    const currentLoc = currentAlert?.alert?.location;\n                    if (\n                        currentLoc &&\n                        currentLoc.row === location.row &&\n                        currentLoc.col === location.col &&\n                        currentLoc.subUnitId === location.subUnitId &&\n                        currentLoc.unitId === location.unitId\n                    ) {\n                        return;\n                    }\n\n                    this._cellAlertManagerService.showAlert({\n                        type: CellAlertType.ERROR,\n                        title: this._localeService.t('info.error'),\n                        message: this._localeService.t('info.forceStringInfo'),\n                        location,\n                        width: 200,\n                        height: 74,\n                        key: ALERT_KEY,\n                    });\n                    return;\n                }\n            }\n\n            this._hideAlert();\n        }));\n    }\n\n    private _initZenService() {\n        this.disposeWithMe(this._zenZoneService.visible$.subscribe((visible) => {\n            if (visible) {\n                this._hideAlert();\n            }\n        }));\n    }\n\n    private _hideAlert() {\n        this._cellAlertManagerService.removeAlert(ALERT_KEY);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand } from '@univerjs/core';\nimport { CommandType } from '@univerjs/core';\n\nexport const CloseNumfmtPanelOperator: ICommand = {\n    id: 'sheet.operation.close.numfmt.panel',\n    type: CommandType.OPERATION,\n    handler: () =>\n        // do nothing, just notify panel is closed\n        true,\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, ICommand } from '@univerjs/core';\nimport { CommandType } from '@univerjs/core';\nimport { SheetNumfmtUIController } from '../../controllers/numfmt.controller';\n\nexport const OpenNumfmtPanelOperator: ICommand = {\n    id: 'sheet.operation.open.numfmt.panel',\n    type: CommandType.OPERATION,\n    handler: (accessor: IAccessor) => {\n        const numfmtController = accessor.get(SheetNumfmtUIController);\n        numfmtController.openPanel();\n        return true;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ISelectProps } from '@univerjs/design';\nimport type { FC } from 'react';\nimport type { IBusinessComponentProps } from './interface';\nimport { LocaleService } from '@univerjs/core';\nimport { Button, Select } from '@univerjs/design';\nimport { getCurrencyType } from '@univerjs/sheets-numfmt';\nimport { useDependency } from '@univerjs/ui';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { UserHabitCurrencyContext } from '../../controllers/user-habit.controller';\nimport { useCurrencyOptions } from '../hooks/use-currency-options';\nimport { useNextTick } from '../hooks/use-next-tick';\nimport { AccountingPanel, isAccountingPanel } from './accounting';\nimport { CurrencyPanel, isCurrencyPanel } from './currency';\nimport { CustomFormat } from './custom-format';\n\nimport { DatePanel, isDatePanel } from './date';\nimport { GeneralPanel, isGeneralPanel } from './general';\n\nimport { isThousandthPercentilePanel, ThousandthPercentilePanel } from './thousandth-percentile';\n// TODO: @Gggpound: fix this\n// FIXME: DO NOT USE GLOBAL STYLES\nimport './index.less';\n\nexport interface ISheetNumfmtPanelProps {\n    value: { defaultValue: number; defaultPattern: string; row: number; col: number };\n    onChange: (config: { type: 'change' | 'cancel' | 'confirm'; value: string }) => void;\n}\nexport const SheetNumfmtPanel: FC<ISheetNumfmtPanelProps> = (props) => {\n    const { defaultValue, defaultPattern, row, col } = props.value;\n    const localeService = useDependency(LocaleService);\n    const getCurrentPattern = useRef<() => string | null>(() => '');\n    const t = localeService.t;\n    const nextTick = useNextTick();\n    const typeOptions = useMemo(\n        () =>\n            [\n                { label: 'sheet.numfmt.general', component: GeneralPanel },\n                { label: 'sheet.numfmt.accounting', component: AccountingPanel },\n                { label: 'sheet.numfmt.currency', component: CurrencyPanel },\n                { label: 'sheet.numfmt.date', component: DatePanel },\n                { label: 'sheet.numfmt.thousandthPercentile', component: ThousandthPercentilePanel },\n                { label: 'sheet.numfmt.customFormat', component: CustomFormat },\n            ].map((item) => ({ ...item, label: t(item.label) })),\n        []\n    );\n    const [type, typeSet] = useState(findDefaultType);\n    const [key, keySet] = useState(() => `${row}_${col}`);\n    const { mark, userHabitCurrency } = useCurrencyOptions(() => keySet(`${row}_${col}_userCurrency'`));\n\n    const BusinessComponent = useMemo(() => typeOptions.find((item) => item.label === type)?.component, [type]);\n\n    function findDefaultType() {\n        const list = [isGeneralPanel, isAccountingPanel, isCurrencyPanel, isDatePanel, isThousandthPercentilePanel];\n        return (\n            list.reduce((pre, curFn, index) => pre || (curFn(defaultPattern) ? typeOptions[index].label : ''), '') ||\n            typeOptions[0].label\n        );\n    }\n\n    const selectOptions: ISelectProps['options'] = typeOptions.map((option) => ({\n        label: option.label,\n        value: option.label,\n    }));\n\n    const handleSelect: ISelectProps['onChange'] = (value) => {\n        typeSet(value);\n        // after the BusinessComponent render.\n        nextTick(() => props.onChange({ type: 'change', value: getCurrentPattern.current() || '' }));\n    };\n\n    const handleChange = (v: string) => {\n        props.onChange({ type: 'change', value: v });\n    };\n\n    const handleConfirm = () => {\n        const pattern = getCurrentPattern.current() || '';\n        const currency = getCurrencyType(pattern);\n        if (currency) {\n            mark(currency);\n        }\n        props.onChange({ type: 'confirm', value: pattern });\n    };\n    const handleCancel = () => {\n        props.onChange({ type: 'cancel', value: '' });\n    };\n\n    const subProps: IBusinessComponentProps = {\n        onChange: handleChange,\n        defaultValue,\n        defaultPattern,\n        action: getCurrentPattern,\n    };\n\n    useEffect(() => {\n        typeSet(findDefaultType());\n        keySet(`${row}_${col}`);\n    }, [row, col]);\n\n    return (\n        <div className=\"numfmt-panel p-b-20\">\n            <div>\n                <div className=\"label m-t-14\">{t('sheet.numfmt.numfmtType')}</div>\n                <div className=\"m-t-8\">\n                    <Select onChange={handleSelect} options={selectOptions} value={type} style={{ width: '100%' }} />\n                </div>\n                <div>\n                    {BusinessComponent && (\n                        <UserHabitCurrencyContext.Provider value={userHabitCurrency}>\n                            <BusinessComponent {...subProps} key={key} />\n                        </UserHabitCurrencyContext.Provider>\n                    )}\n                </div>\n            </div>\n\n            <div className=\"btn-list m-t-14 m-b-20\">\n                <Button size=\"small\" onClick={handleCancel} className=\"m-r-12\">\n                    {t('sheet.numfmt.cancel')}\n                </Button>\n                <Button type=\"primary\" size=\"small\" onClick={handleConfirm}>\n                    {t('sheet.numfmt.confirm')}\n                </Button>\n            </div>\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ILocalStorageService, Inject } from '@univerjs/core';\nimport { createContext } from 'react';\n\ntype HabitValue = string | number;\ninterface IUserHabitController {\n    addHabit(habit: string, initValue: HabitValue[]): Promise<void>;\n    markHabit(habit: string, value: HabitValue): void;\n    deleteHabit(habit: string): void;\n    getHabit(habit: string, sortList?: HabitValue[]): Promise<HabitValue[]>;\n}\n\nexport const UserHabitCurrencyContext = createContext<string[]>([]);\n\nexport class UserHabitController implements IUserHabitController {\n    constructor(@Inject(ILocalStorageService) private _localStorageService: ILocalStorageService) {\n        // super\n    }\n\n    private _getKey(habit: string) {\n        return `userHabitController_${habit}`;\n    }\n\n    async addHabit<T = unknown[]>(habit: string, initValue: T) {\n        const key = this._getKey(habit);\n        return this._localStorageService.getItem<T>(key).then((item) => {\n            if (!item) {\n                this._localStorageService.setItem(key, initValue);\n            }\n        });\n    }\n\n    markHabit(habit: string, value: HabitValue) {\n        const key = this._getKey(habit);\n        this._localStorageService.getItem<HabitValue[]>(key).then((list) => {\n            if (list) {\n                const index = list.findIndex((item) => item === value);\n                index > -1 && list.splice(index, 1);\n                list.unshift(value);\n                this._localStorageService.setItem(key, list);\n            }\n        });\n    }\n\n    async getHabit(habit: string, sortList: HabitValue[]) {\n        const key = this._getKey(habit);\n        const result = await this._localStorageService.getItem<HabitValue[]>(key);\n        if (sortList && result) {\n            const priority = result.map((item, index, arr) => {\n                const length = arr.length;\n                return {\n                    value: item,\n                    priority: length - index,\n                };\n            });\n            return sortList.sort((a, b) => {\n                const ap = priority.find((item) => item.value === a)?.priority || -1;\n                const bp = priority.find((item) => item.value === b)?.priority || -1;\n                return bp - ap;\n            });\n        }\n        return result || [];\n    }\n\n    deleteHabit(habit: string) {\n        this._localStorageService.removeItem(habit);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { currencySymbols } from '@univerjs/sheets-numfmt';\nimport { useDependency } from '@univerjs/ui';\nimport { useEffect, useState } from 'react';\nimport { UserHabitController } from '../../controllers/user-habit.controller';\n\nconst key = 'numfmtCurrency';\nexport const useCurrencyOptions = (onOptionChange?: (options: string[]) => void) => {\n    const userHabitController = useDependency(UserHabitController);\n    const [options, optionsSet] = useState(currencySymbols);\n\n    useEffect(() => {\n        userHabitController.addHabit('numfmtCurrency', []).then(() => {\n            userHabitController.getHabit(key, [...currencySymbols]).then((list) => {\n                optionsSet(list as string[]);\n                onOptionChange && onOptionChange(list as string[]);\n            });\n        });\n    }, []);\n\n    const mark = (v: string) => {\n        userHabitController.markHabit(key, v);\n    };\n    return { userHabitCurrency: options, mark };\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useEffect, useRef, useState } from 'react';\n\nexport const useNextTick = () => {\n    const effectList = useRef<Array<() => void>>([]);\n    const [value, dispatch] = useState<Record<string, string>>({});\n\n    useEffect(() => {\n        effectList.current.forEach((fn) => {\n            fn();\n        });\n        effectList.current = [];\n    }, [value]);\n\n    const nextTick = (fn: () => void) => {\n        effectList.current.push(fn);\n        dispatch({});\n    };\n    return nextTick;\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react';\nimport type { IBusinessComponentProps } from '../interface';\nimport { LocaleService } from '@univerjs/core';\nimport { InputNumber, Select } from '@univerjs/design';\nimport { getCurrencyType, getDecimalFromPattern, setPatternDecimal } from '@univerjs/sheets-numfmt';\nimport { useDependency } from '@univerjs/ui';\nimport React, { useContext, useMemo, useState } from 'react';\nimport { UserHabitCurrencyContext } from '../../../controllers/user-habit.controller';\n\nexport const isAccountingPanel = (pattern: string) => {\n    const type = getCurrencyType(pattern);\n    return !!type && pattern.startsWith('_(');\n};\n\nexport const AccountingPanel: FC<IBusinessComponentProps> = (props) => {\n    const { defaultPattern, action, onChange } = props;\n\n    const [decimal, decimalSet] = useState(() => getDecimalFromPattern(defaultPattern || '', 2));\n    const userHabitCurrency = useContext(UserHabitCurrencyContext);\n    const [suffix, suffixSet] = useState(() => getCurrencyType(defaultPattern) || userHabitCurrency[0]);\n    const options = useMemo(() => userHabitCurrency.map((key) => ({ label: key, value: key })), []);\n\n    const localeService = useDependency(LocaleService);\n    const t = localeService.t;\n\n    action.current = () => setPatternDecimal(`_(\"${suffix}\"* #,##0${decimal > 0 ? '.0' : ''}_)`, decimal);\n\n    const onSelect = (v: string) => {\n        suffixSet(v);\n        onChange(setPatternDecimal(`_(\"${v}\"* #,##0${decimal > 0 ? '.0' : ''}_)`, decimal));\n    };\n\n    const onDecimalChange = (v: number | null) => {\n        const decimal = v || 0;\n        decimalSet(decimal);\n        onChange(setPatternDecimal(`_(\"${suffix}\"* #,##0${decimal > 0 ? '.0' : ''}_)`, decimal));\n    };\n\n    return (\n        <div>\n            <div className=\"m-t-16 options\">\n                <div className=\"option\">\n                    <div className=\"label\">{t('sheet.numfmt.decimalLength')}</div>\n\n                    <div className=\"m-t-8 w-120\">\n                        <InputNumber value={decimal} max={20} min={0} onChange={onDecimalChange} />\n                    </div>\n                </div>\n                <div className=\"option\">\n                    <div className=\"label\">{t('sheet.numfmt.currencyType')}</div>\n\n                    <div className=\"m-t-8 w-140\">\n                        <Select onChange={onSelect} options={options} value={suffix} />\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"describe m-t-14\">{t('sheet.numfmt.accountingDes')}</div>\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react';\nimport type { IBusinessComponentProps } from '../interface';\nimport { LocaleService } from '@univerjs/core';\nimport { InputNumber, Select, SelectList } from '@univerjs/design';\nimport { getCurrencyFormatOptions, getCurrencyType, getDecimalFromPattern, isPatternEqualWithoutDecimal, setPatternDecimal } from '@univerjs/sheets-numfmt';\nimport { useDependency } from '@univerjs/ui';\nimport React, { useContext, useMemo, useState } from 'react';\nimport { UserHabitCurrencyContext } from '../../../controllers/user-habit.controller';\n\n// FIXME: DO NOT USE GLOBAL STYLES\nimport './index.less';\n\nexport const isCurrencyPanel = (pattern: string) => {\n    const type = getCurrencyType(pattern);\n    return !!type && !pattern.startsWith('_(');\n};\n\nexport const CurrencyPanel: FC<IBusinessComponentProps> = (props) => {\n    const localeService = useDependency(LocaleService);\n    const t = localeService.t;\n    const userHabitCurrency = useContext(UserHabitCurrencyContext);\n    const [suffix, suffixSet] = useState(() => getCurrencyType(props.defaultPattern) || userHabitCurrency[0]);\n    const [decimal, decimalSet] = useState(() => getDecimalFromPattern(props.defaultPattern || '', 2));\n    const [pattern, patternSet] = useState(() => {\n        const negativeOptions = getCurrencyFormatOptions(suffix);\n        const pattern =\n            negativeOptions.find((item) => isPatternEqualWithoutDecimal(item.value, props.defaultPattern))?.value ||\n            negativeOptions[0].value;\n        return pattern;\n    });\n\n    const negativeOptions = useMemo(() => getCurrencyFormatOptions(suffix), [suffix]);\n    const options = useMemo(() => userHabitCurrency.map((key) => ({ label: key, value: key })), [userHabitCurrency]);\n\n    props.action.current = () => setPatternDecimal(pattern, decimal);\n\n    const onSelect = (value: string) => {\n        if (value === undefined) {\n            return;\n        }\n        suffixSet(value);\n        const pattern = getCurrencyFormatOptions(value)[0].value;\n        patternSet(pattern);\n        props.onChange(setPatternDecimal(pattern, decimal));\n    };\n\n    const onChange = (value: any) => {\n        if (value === undefined) {\n            return;\n        }\n        patternSet(value);\n        props.onChange(setPatternDecimal(value, decimal));\n    };\n\n    const onDecimalChange = (v: number | null) => {\n        decimalSet(v || 0);\n        props.onChange(setPatternDecimal(pattern, v || 0));\n    };\n\n    return (\n        <div>\n            <div className=\"m-t-16 options\">\n                <div className=\"option\">\n                    <div className=\"label\">{t('sheet.numfmt.decimalLength')}</div>\n                    <div className=\"m-t-8 w-120\">\n                        <InputNumber value={decimal} max={20} min={0} onChange={onDecimalChange} />\n                    </div>\n                </div>\n                <div className=\"option\">\n                    <div className=\"label\">{t('sheet.numfmt.currencyType')}</div>\n                    <div className=\"m-t-8 w-140\">\n                        <Select onChange={onSelect} options={options} value={suffix} />\n                    </div>\n                </div>\n            </div>\n            <div className=\"m-t-16 label\">\n                {t('sheet.numfmt.negType')}\n            </div>\n\n            <div className=\"m-t-8\">\n                <SelectList onChange={onChange} options={negativeOptions} value={pattern} />\n            </div>\n\n            <div className=\"describe m-t-14\">{t('sheet.numfmt.currencyDes')}</div>\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IBusinessComponentProps } from '../interface';\nimport { ILocalStorageService, LocaleService } from '@univerjs/core';\nimport { Input } from '@univerjs/design';\nimport { CheckMarkSingle } from '@univerjs/icons';\nimport { CURRENCYFORMAT, DATEFMTLISG, NUMBERFORMAT } from '@univerjs/sheets-numfmt';\nimport { useDependency } from '@univerjs/ui';\nimport React, { useEffect, useState } from 'react';\nimport { UserHabitController } from '../../../controllers/user-habit.controller';\nimport styles from './index.module.less';\n\nconst key = 'customFormat';\nconst historyPatternKey = 'numfmt_custom_pattern';\n\nexport function CustomFormat(props: IBusinessComponentProps) {\n    const { defaultPattern, action, onChange } = props;\n    const userHabitController = useDependency(UserHabitController);\n    const localStorageService = useDependency(ILocalStorageService);\n    const localeService = useDependency(LocaleService);\n\n    const [pattern, patternSet] = useState(defaultPattern);\n    action.current = () => {\n        userHabitController.markHabit(key, pattern);\n        localStorageService.getItem<string[]>(historyPatternKey).then((list = []) => {\n            const _list = [...new Set([pattern, ...(list || [])])].splice(0, 10).filter((e) => !!e);\n            localStorageService.setItem(historyPatternKey, _list);\n        });\n        return pattern;\n    };\n    const [options, optionsSet] = useState<(string | number)[]>([]);\n\n    useEffect(() => {\n        localStorageService.getItem<string[]>(historyPatternKey).then((historyList) => {\n            const list = [\n                ...CURRENCYFORMAT.map((item) => item.suffix('$')),\n                ...DATEFMTLISG.map((item) => item.suffix),\n                ...NUMBERFORMAT.map((item) => item.suffix),\n            ];\n            list.push(...(historyList || []));\n            userHabitController.addHabit(key, []).finally(() => {\n                userHabitController.getHabit(key, list).then((list) => {\n                    optionsSet([...new Set(list)]);\n                });\n            });\n        });\n    }, []);\n\n    const handleClick = (p: string) => {\n        patternSet(p);\n        onChange(p);\n    };\n\n    const handleBlur = () => {\n        onChange(pattern);\n    };\n\n    return (\n        <div className={styles.customFormat}>\n            <div className={styles.customFormatTitle}>{localeService.t('sheet.numfmt.customFormat')}</div>\n            <Input placeholder={localeService.t('sheet.numfmt.customFormat')} onBlur={handleBlur} value={pattern} onChange={patternSet} className={styles.customFormatInput} />\n            <div className={styles.customFormatHistoryList}>\n                {options.map((p) => (\n                    <div key={p} onClick={() => handleClick(p as string)} className={styles.customFormatHistoryListItem}>\n                        <div className={styles.customFormatHistoryListItemIconWrap}>\n                            {pattern === p && <CheckMarkSingle />}\n                        </div>\n                        <div>\n                            {p}\n                        </div>\n                    </div>\n                ))}\n            </div>\n            <div className={styles.customFormatDes}>\n                {localeService.t('sheet.numfmt.customFormatDes')}\n            </div>\n        </div>\n    );\n}\n", "export default {\n  \"customFormatTitle\": \"univer-custom-format-title\",\n  \"customFormatInput\": \"univer-custom-format-input\",\n  \"customFormatHistoryList\": \"univer-custom-format-history-list\",\n  \"customFormatHistoryListItem\": \"univer-custom-format-history-list-item\",\n  \"customFormatHistoryListItemIconWrap\": \"univer-custom-format-history-list-item-icon-wrap\",\n  \"customFormatDes\": \"univer-custom-format-des\"\n};import \"ni:sha-256;bpigOQbo2VmkcFQUbvcM_9EYQGH3z9lqRyQ83pNkDxE\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react';\nimport type { IBusinessComponentProps } from '../interface';\nimport { LocaleService, numfmt } from '@univerjs/core';\nimport { SelectList } from '@univerjs/design';\nimport { getDateFormatOptions } from '@univerjs/sheets-numfmt';\nimport { useDependency } from '@univerjs/ui';\nimport React, { useMemo, useState } from 'react';\n\nexport const isDatePanel = (pattern: string) => {\n    const info = numfmt.getInfo(pattern);\n    return (\n        getDateFormatOptions()\n            .map((item) => item.value)\n            .includes(pattern) || ['date', 'datetime', 'time'].includes(info.type)\n    );\n};\n\nexport const DatePanel: FC<IBusinessComponentProps> = (props) => {\n    const options = useMemo(getDateFormatOptions, []);\n    const localeService = useDependency(LocaleService);\n    const t = localeService.t;\n    const [suffix, suffixSet] = useState(() => {\n        if (props.defaultPattern) {\n            const item = options.find((item) => item.value === props.defaultPattern);\n            if (item) {\n                return item.value;\n            }\n        }\n        return options[0].value;\n    });\n\n    props.action.current = () => suffix;\n\n    const onChange = (v: any) => {\n        if (v === undefined) {\n            return;\n        }\n        suffixSet(v);\n        props.onChange(v);\n    };\n\n    return (\n        <div>\n            <div className=\"m-t-16 label\">{t('sheet.numfmt.dateType')}</div>\n            <div className=\"m-t-8\">\n                <SelectList value={suffix} options={options} onChange={onChange} />\n            </div>\n            <div className=\"describe m-t-14\">{t('sheet.numfmt.dateDes')}</div>\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react';\nimport type { IBusinessComponentProps } from '../interface';\nimport { LocaleService } from '@univerjs/core';\nimport { useDependency } from '@univerjs/ui';\n\nexport const isGeneralPanel = (pattern: string) => !pattern;\n\nexport const GeneralPanel: FC<IBusinessComponentProps> = (props) => {\n    const localeService = useDependency(LocaleService);\n    const t = localeService.t;\n\n    props.action.current = () => '';\n\n    return (\n        <div>\n            <div className=\"describe m-t-14\">{t('sheet.numfmt.generalDes')}</div>\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react';\nimport type { IBusinessComponentProps } from '../interface';\nimport { LocaleService } from '@univerjs/core';\nimport { InputNumber, SelectList } from '@univerjs/design';\nimport { getDecimalFromPattern, getNumberFormatOptions, isPatternEqualWithoutDecimal, isPatternHasDecimal, setPatternDecimal } from '@univerjs/sheets-numfmt';\nimport { useDependency } from '@univerjs/ui';\nimport React, { useMemo, useState } from 'react';\n\nexport const isThousandthPercentilePanel = (pattern: string) =>\n    getNumberFormatOptions().some((item) => isPatternEqualWithoutDecimal(item.value, pattern));\n\nexport const ThousandthPercentilePanel: FC<IBusinessComponentProps> = (props) => {\n    const localeService = useDependency(LocaleService);\n\n    const options = useMemo(getNumberFormatOptions, []);\n    const [decimal, decimalSet] = useState(() => getDecimalFromPattern(props.defaultPattern || '', 0));\n\n    const [suffix, suffixSet] = useState(() => {\n        const item = options.find((item) => isPatternEqualWithoutDecimal(item.value, props.defaultPattern || ''));\n        return item?.value || options[0].value;\n    });\n\n    const pattern = useMemo(() => setPatternDecimal(suffix, Number(decimal || 0)), [suffix, decimal]);\n\n    const isInputDisable = useMemo(() => !isPatternHasDecimal(suffix), [suffix]);\n\n    const handleDecimalChange = (decimal: number | null) => {\n        decimalSet(decimal || 0);\n        props.onChange(setPatternDecimal(suffix, Number(decimal || 0)));\n    };\n    const handleClick = (v: any) => {\n        if (v === undefined) {\n            return;\n        }\n        decimalSet(getDecimalFromPattern(v, 0));\n        suffixSet(v);\n        props.onChange(v);\n    };\n\n    props.action.current = () => pattern;\n\n    return (\n        <div>\n            <div className=\"m-t-16 label\">{localeService.t('sheet.numfmt.decimalLength')}</div>\n            <div className=\"m-t-8\">\n                <InputNumber\n                    disabled={isInputDisable}\n                    value={decimal}\n                    max={20}\n                    min={0}\n                    onChange={handleDecimalChange}\n                />\n            </div>\n            <div className=\"m-t-16 label\">\n                {' '}\n                {localeService.t('sheet.numfmt.negType')}\n            </div>\n            <div className=\"m-t-8\">\n                <SelectList onChange={handleClick} options={options} value={suffix} />\n            </div>\n            <div className=\"describe m-t-14\">{localeService.t('sheet.numfmt.thousandthPercentileDes')}</div>\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IDisposable, IRange, Workbook } from '@univerjs/core';\nimport type { ISetNumfmtMutationParams } from '@univerjs/sheets';\nimport type { ISetNumfmtCommandParams } from '@univerjs/sheets-numfmt';\nimport type { ISheetNumfmtPanelProps } from '../views/components';\nimport {\n    CellValueType,\n    Disposable,\n    DisposableCollection,\n    ICommandService,\n    Inject,\n    InterceptorEffectEnum,\n    IUniverInstanceService,\n    LocaleService,\n    Range,\n    ThemeService,\n    toDisposable,\n    UniverInstanceType,\n} from '@univerjs/core';\n\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport {\n    INTERCEPTOR_POINT,\n    INumfmtService,\n    RemoveNumfmtMutation,\n    SetNumfmtMutation,\n    SheetInterceptorService,\n    SheetsSelectionsService,\n} from '@univerjs/sheets';\nimport { getPatternPreviewIgnoreGeneral, getPatternType, SetNumfmtCommand, SheetsNumfmtCellContentController } from '@univerjs/sheets-numfmt';\nimport { SheetSkeletonManagerService } from '@univerjs/sheets-ui';\nimport { ComponentManager, ISidebarService } from '@univerjs/ui';\nimport { combineLatest, merge, Observable } from 'rxjs';\nimport { debounceTime, map, switchMap, tap } from 'rxjs/operators';\nimport { CloseNumfmtPanelOperator } from '../commands/operations/close.numfmt.panel.operation';\nimport { OpenNumfmtPanelOperator } from '../commands/operations/open.numfmt.panel.operation';\nimport { SheetNumfmtPanel } from '../views/components';\n\nconst SHEET_NUMFMT_PANEL = 'SHEET_NUMFMT_PANEL';\n\nexport class SheetNumfmtUIController extends Disposable {\n    /**\n     * If _previewPattern is null ,the realTimeRenderingInterceptor will skip and if it is '',realTimeRenderingInterceptor will clear numfmt.\n     * @private\n     * @type {(string | null)}\n     * @memberof NumfmtController\n     */\n    private _previewPattern: string | null = '';\n    constructor(\n        @Inject(SheetInterceptorService) private _sheetInterceptorService: SheetInterceptorService,\n        @Inject(ThemeService) private _themeService: ThemeService,\n        @IUniverInstanceService private _univerInstanceService: IUniverInstanceService,\n        @ICommandService private _commandService: ICommandService,\n        @Inject(SheetsSelectionsService) private _selectionManagerService: SheetsSelectionsService,\n        @IRenderManagerService private _renderManagerService: IRenderManagerService,\n        @INumfmtService private _numfmtService: INumfmtService,\n        @Inject(ComponentManager) private _componentManager: ComponentManager,\n        @ISidebarService private _sidebarService: ISidebarService,\n        @Inject(LocaleService) private _localeService: LocaleService,\n        @Inject(SheetsNumfmtCellContentController) private _sheetsNumfmtCellContentController: SheetsNumfmtCellContentController\n    ) {\n        super();\n\n        this._initRealTimeRenderingInterceptor();\n        this._initPanel();\n        this._initCommands();\n        this._initCloseListener();\n        this._commandExecutedListener();\n        this._initNumfmtLocalChange();\n    }\n\n    private _initNumfmtLocalChange() {\n        this.disposeWithMe(merge(this._sheetsNumfmtCellContentController.local$, this._localeService.currentLocale$).subscribe(() => {\n            this._forceUpdate();\n        }));\n    }\n\n    openPanel(): boolean {\n        const sidebarService = this._sidebarService;\n        const selectionManagerService = this._selectionManagerService;\n        const commandService = this._commandService;\n        const univerInstanceService = this._univerInstanceService;\n        const numfmtService = this._numfmtService;\n        const localeService = this._localeService;\n\n        const selections = selectionManagerService.getCurrentSelections()?.map((s) => s.range) || [];\n        const range = selections[0];\n\n        if (!range) {\n            return false;\n        }\n\n        const workbook = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!;\n        const sheet = workbook.getActiveSheet();\n        if (!sheet) {\n            return false;\n        }\n\n        const cellValue = sheet.getCellRaw(range.startRow, range.startColumn);\n        const numfmtValue = numfmtService.getValue(\n            workbook.getUnitId(),\n            sheet.getSheetId(),\n            range.startRow,\n            range.startColumn\n        );\n        let pattern = '';\n        if (numfmtValue) {\n            pattern = numfmtValue.pattern;\n        }\n\n        const defaultValue = (cellValue?.t === CellValueType.NUMBER ? cellValue.v : 12345678) as number;\n\n        const props: ISheetNumfmtPanelProps = {\n            onChange: (config) => {\n                if (config.type === 'change') {\n                    this._previewPattern = config.value;\n                    this._forceUpdate();\n                } else if (config.type === 'confirm') {\n                    const selections = selectionManagerService.getCurrentSelections()?.map((s) => s.range) || [];\n                    const params: ISetNumfmtCommandParams = { values: [] };\n                    const patternType = getPatternType(config.value);\n                    selections.forEach((rangeInfo) => {\n                        Range.foreach(rangeInfo, (row, col) => {\n                            params.values.push({\n                                row,\n                                col,\n                                pattern: config.value,\n                                type: patternType,\n                            });\n                        });\n                    });\n                    commandService.executeCommand(SetNumfmtCommand.id, params);\n                    sidebarService.close();\n                } else if (config.type === 'cancel') {\n                    sidebarService.close();\n                }\n            },\n            value: { defaultPattern: pattern, defaultValue, row: range.startRow, col: range.startColumn },\n        };\n\n        this._sidebarDisposable = sidebarService.open({\n            header: { title: localeService.t('sheet.numfmt.title') },\n            children: {\n                label: SHEET_NUMFMT_PANEL,\n                ...(props as any), // need passthrough to react props.\n            },\n            onClose: () => {\n                this._forceUpdate();\n                commandService.executeCommand(CloseNumfmtPanelOperator.id);\n            },\n        });\n\n        return true;\n    };\n\n    private _forceUpdate(unitId?: string): void {\n        const renderUnit = this._renderManagerService.getRenderById(\n            unitId ?? this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getUnitId()\n        );\n\n        renderUnit?.with(SheetSkeletonManagerService).reCalculate();\n        renderUnit?.mainComponent?.makeDirty();\n    }\n\n    private _initCommands() {\n        [\n            OpenNumfmtPanelOperator,\n            CloseNumfmtPanelOperator,\n        ].forEach((config) => {\n            this.disposeWithMe(this._commandService.registerCommand(config));\n        });\n    }\n\n    private _initPanel() {\n        this._componentManager.register(SHEET_NUMFMT_PANEL, SheetNumfmtPanel);\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    private _initRealTimeRenderingInterceptor() {\n        const isPanelOpenObserver = new Observable<boolean>((subscriber) => {\n            this._commandService.onCommandExecuted((commandInfo) => {\n                if (commandInfo.id === OpenNumfmtPanelOperator.id) {\n                    subscriber.next(true);\n                }\n                if (commandInfo.id === CloseNumfmtPanelOperator.id) {\n                    subscriber.next(false);\n                }\n            });\n        });\n        const combineOpenAndSelection$ = combineLatest([\n            isPanelOpenObserver,\n            this._selectionManagerService.selectionMoveEnd$.pipe(\n                map((selectionInfos) => {\n                    if (!selectionInfos) {\n                        return [];\n                    }\n                    return selectionInfos.map((selectionInfo) => selectionInfo.range);\n                })\n            ),\n        ]);\n        this.disposeWithMe(\n            toDisposable(\n                combineOpenAndSelection$\n                    .pipe(\n                        switchMap(\n                            ([isOpen, selectionRanges]) =>\n                                new Observable<{\n                                    disposableCollection: DisposableCollection;\n                                    selectionRanges: IRange[];\n                                }>((subscribe) => {\n                                    const disposableCollection = new DisposableCollection();\n                                    isOpen &&\n                                        selectionRanges.length &&\n                                        subscribe.next({ selectionRanges, disposableCollection });\n                                    return () => {\n                                        disposableCollection.dispose();\n                                    };\n                                })\n                        ),\n                        tap(() => {\n                            this._previewPattern = null;\n                        })\n                    )\n                    .subscribe(({ disposableCollection, selectionRanges }) => {\n                        const workbook = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!;\n                        this.openPanel();\n                        disposableCollection.add(\n                            this._sheetInterceptorService.intercept(INTERCEPTOR_POINT.CELL_CONTENT, {\n                                priority: 99,\n                                effect: InterceptorEffectEnum.Value | InterceptorEffectEnum.Style,\n                                handler: (cell, location, next) => {\n                                    const { row, col } = location;\n                                    const defaultValue = next(cell) || {};\n                                    if (\n                                        selectionRanges.find(\n                                            (range) =>\n                                                range.startColumn <= col &&\n                                                range.endColumn >= col &&\n                                                range.startRow <= row &&\n                                                range.endRow >= row\n                                        )\n                                    ) {\n                                        const rawValue = location.worksheet.getCellRaw(row, col);\n                                        const value = rawValue?.v;\n                                        const type = rawValue?.t;\n                                        if (\n                                            value === undefined ||\n                                            value === null ||\n                                            type !== CellValueType.NUMBER ||\n                                            this._previewPattern === null\n                                        ) {\n                                            return defaultValue;\n                                        }\n                                        const info = getPatternPreviewIgnoreGeneral(this._previewPattern, value as number, this._sheetsNumfmtCellContentController.local);\n                                        if (info.color) {\n                                            const colorMap = this._themeService.getCurrentTheme();\n                                            const color = colorMap[`${info.color}500`];\n                                            return {\n                                                ...defaultValue,\n                                                v: info.result,\n                                                t: CellValueType.STRING,\n                                                s: { cl: { rgb: color } },\n                                            };\n                                        }\n                                        return {\n                                            ...defaultValue,\n                                            v: info.result,\n                                            t: CellValueType.STRING,\n                                        };\n                                    }\n                                    return defaultValue;\n                                },\n                            })\n                        );\n                        this._renderManagerService.getRenderById(workbook.getUnitId())?.mainComponent?.makeDirty();\n                    })\n            )\n        );\n    }\n\n    private _commandExecutedListener() {\n        const commandList = [RemoveNumfmtMutation.id, SetNumfmtMutation.id];\n        this.disposeWithMe(new Observable<string>((subscribe) => {\n            const disposable = this._commandService.onCommandExecuted((command) => {\n                if (commandList.includes(command.id)) {\n                    const params = command.params as ISetNumfmtMutationParams;\n                    subscribe.next(params.unitId);\n                }\n            });\n            return () => disposable.dispose();\n        }).pipe(debounceTime(16))\n            .subscribe((unitId) => this._forceUpdate(unitId))\n        );\n    }\n\n    private _sidebarDisposable: IDisposable | null = null;\n    private _initCloseListener(): void {\n        this._univerInstanceService.getCurrentTypeOfUnit$(UniverInstanceType.UNIVER_SHEET).subscribe((unit) => {\n            if (!unit) {\n                this._sidebarDisposable?.dispose();\n                this._sidebarDisposable = null;\n            }\n        });\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IDocumentBody, IRange, Nullable, Workbook } from '@univerjs/core';\nimport type {\n    INumfmtItemWithCache,\n    IRemoveNumfmtMutationParams,\n    ISetCellsNumfmt,\n    ISetNumfmtMutationParams,\n} from '@univerjs/sheets';\nimport {\n    CellValueType,\n    Disposable,\n    Inject,\n    Injector,\n    IUniverInstanceService,\n    numfmt,\n    Optional,\n    toDisposable,\n    UniverInstanceType,\n} from '@univerjs/core';\nimport { isTextFormat } from '@univerjs/engine-numfmt';\nimport {\n    AFTER_CELL_EDIT,\n    BEFORE_CELL_EDIT,\n    factoryRemoveNumfmtUndoMutation,\n    factorySetNumfmtUndoMutation,\n    INumfmtService,\n    RemoveNumfmtMutation,\n    SetNumfmtMutation,\n    SetRangeValuesCommand,\n    SheetInterceptorService,\n    transformCellsToRange,\n} from '@univerjs/sheets';\n\nimport { getPatternType } from '@univerjs/sheets-numfmt';\nimport { IEditorBridgeService } from '@univerjs/sheets-ui';\n\nconst createCollectEffectMutation = () => {\n    interface IConfig {\n        unitId: string;\n        subUnitId: string;\n        row: number;\n        col: number;\n        value: Nullable<INumfmtItemWithCache>;\n    }\n    let list: IConfig[] = [];\n    const add = (unitId: string, subUnitId: string, row: number, col: number, value: Nullable<INumfmtItemWithCache>) =>\n        list.push({ unitId, subUnitId, row, col, value });\n    const getEffects = () => list;\n    const clean = () => {\n        list = [];\n    };\n    return {\n        add,\n        getEffects,\n        clean,\n    };\n};\n\nexport class NumfmtEditorController extends Disposable {\n    // collect effect mutations when edit end and push this to  commands stack in next commands progress\n    private _collectEffectMutation = createCollectEffectMutation();\n\n    constructor(\n        @Inject(SheetInterceptorService) private _sheetInterceptorService: SheetInterceptorService,\n        @Inject(INumfmtService) private _numfmtService: INumfmtService,\n        @Inject(IUniverInstanceService) private _univerInstanceService: IUniverInstanceService,\n        @Inject(Injector) private _injector: Injector,\n        @Optional(IEditorBridgeService) private _editorBridgeService?: IEditorBridgeService\n    ) {\n        super();\n        this._initInterceptorEditorStart();\n        this._initInterceptorEditorEnd();\n        this._initInterceptorCommands();\n    }\n\n    private _initInterceptorEditorStart() {\n        if (!this._editorBridgeService) {\n            return;\n        }\n\n        this.disposeWithMe(\n            toDisposable(\n                this._sheetInterceptorService.writeCellInterceptor.intercept(BEFORE_CELL_EDIT, {\n                    handler: (value, context, next) => {\n                        const row = context.row;\n                        const col = context.col;\n                        const numfmtCell = this._numfmtService.getValue(\n                            context.unitId,\n                            context.subUnitId,\n                            row,\n                            col\n                        );\n                        if (numfmtCell) {\n                            const type = getPatternType(numfmtCell.pattern);\n                            switch (type) {\n                                case 'scientific':\n                                case 'currency':\n                                case 'grouped':\n                                case 'number': {\n                                    const cell = context.worksheet.getCellRaw(row, col);\n                                    return next && next(cell);\n                                }\n                                case 'percent':\n                                case 'date':\n                                case 'time':\n                                case 'datetime':\n                                default: {\n                                    return next && next(value);\n                                }\n                            }\n                        }\n                        return next(value);\n                    },\n                })\n            )\n        );\n    }\n\n    /**\n     * Process the  values after  edit\n     * @private\n     * @memberof NumfmtService\n     */\n\n    private _initInterceptorEditorEnd() {\n        this.disposeWithMe(\n            toDisposable(\n                this._sheetInterceptorService.writeCellInterceptor.intercept(AFTER_CELL_EDIT, {\n                        // eslint-disable-next-line complexity\n                    handler: (value, context, next) => {\n                            // clear the effect\n                        this._collectEffectMutation.clean();\n                        const currentNumfmtValue = this._numfmtService.getValue(\n                            context.unitId,\n                            context.subUnitId,\n                            context.row,\n                            context.col\n                        );\n                        const currentNumfmtType = (currentNumfmtValue && getPatternType(currentNumfmtValue.pattern)) ?? '';\n                        const clean = () => {\n                            currentNumfmtValue &&\n                                    this._collectEffectMutation.add(\n                                        context.unitId,\n                                        context.subUnitId,\n                                        context.row,\n                                        context.col,\n                                        null\n                                    );\n                        };\n                        if (!value?.v && !value?.p) {\n                            return next(value);\n                        }\n\n                            // if the cell is text format or force string, do not convert the value\n                        if (isTextFormat(currentNumfmtValue?.pattern) || value.t === CellValueType.FORCE_STRING) {\n                            return next(value);\n                        }\n\n                        const body = value.p?.body;\n                        const content = value?.p?.body?.dataStream ? value.p.body.dataStream.replace(/\\r\\n$/, '') : String(value.v);\n                        const numfmtInfo = numfmt.parseDate(content) || numfmt.parseTime(content) || numfmt.parseNumber(content);\n\n                        if (body) {\n                            if (!canConvertRichTextToNumfmt(body)) {\n                                return next(value);\n                            } else {\n                                const { dataStream } = body;\n                                const dataStreamWithoutEnd = dataStream.replace(/\\r\\n$/, '');\n                                const num = Number(dataStreamWithoutEnd);\n                                if (Number.isNaN(num) && !numfmtInfo) {\n                                    return next(value);\n                                }\n                            }\n                        }\n\n                        if (numfmtInfo) {\n                            if (numfmtInfo.z) {\n                                this._collectEffectMutation.add(\n                                    context.unitId,\n                                    context.subUnitId,\n                                    context.row,\n                                    context.col,\n                                    {\n                                        pattern: numfmtInfo.z,\n                                    }\n                                );\n                            }\n                            const v = Number(numfmtInfo.v);\n                            return next({ ...value, p: undefined, v, t: CellValueType.NUMBER });\n                        } else if (['date', 'time', 'datetime', 'percent'].includes(currentNumfmtType) || !isNumeric(content)) {\n                            clean();\n                        }\n                        return next(value);\n                    },\n                })\n            )\n        );\n    }\n\n    private _initInterceptorCommands() {\n        const self = this;\n        this.disposeWithMe(\n            this._sheetInterceptorService.interceptCommand({\n                getMutations(command) {\n                    switch (command.id) {\n                        case SetRangeValuesCommand.id: {\n                            const workbook = self._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!;\n                            const unitId = workbook.getUnitId();\n                            const subUnitId = workbook.getActiveSheet()?.getSheetId();\n                            if (!subUnitId) {\n                                return {\n                                    redos: [],\n                                    undos: [],\n                                };\n                            }\n                            const list = self._collectEffectMutation.getEffects();\n                            self._collectEffectMutation.clean();\n                            if (!list.length) {\n                                return {\n                                    redos: [],\n                                    undos: [],\n                                };\n                            }\n                            const cells: ISetCellsNumfmt = list\n                                .filter((item) => !!item.value?.pattern)\n                                .map((item) => ({\n                                    row: item.row,\n                                    col: item.col,\n                                    pattern: item.value!.pattern,\n                                }));\n                            const removeCells: IRange[] = list\n                                .filter((item) => !item.value?.pattern)\n                                .map((item) => ({\n                                    startRow: item.row,\n                                    endColumn: item.col,\n                                    startColumn: item.col,\n                                    endRow: item.row,\n                                }));\n                            const redos = [];\n                            const undos = [];\n                            if (cells.length) {\n                                const redo = {\n                                    id: SetNumfmtMutation.id,\n                                    params: transformCellsToRange(unitId, subUnitId, cells) as ISetNumfmtMutationParams,\n                                };\n                                redos.push(redo);\n                                undos.push(...factorySetNumfmtUndoMutation(self._injector, redo.params));\n                            }\n                            if (removeCells.length) {\n                                const redo = {\n                                    id: RemoveNumfmtMutation.id,\n                                    params: {\n                                        unitId,\n                                        subUnitId,\n                                        ranges: removeCells,\n                                    } as IRemoveNumfmtMutationParams,\n                                };\n                                redos.push(redo);\n                                undos.push(...factoryRemoveNumfmtUndoMutation(self._injector, redo.params));\n                            }\n                            return {\n                                redos,\n                                undos: undos.reverse(),\n                            };\n                        }\n                    }\n                    return {\n                        redos: [],\n                        undos: [],\n                    };\n                },\n            })\n        );\n    }\n}\n\nfunction isNumeric(str: string) {\n    return /^-?\\d+(\\.\\d+)?$/.test(str);\n}\n\nfunction canConvertRichTextToNumfmt(body: IDocumentBody): boolean {\n    const { textRuns = [], paragraphs = [], customRanges, customBlocks = [] } = body;\n\n    // Some styles are unique to rich text. When this style appears, we consider the value to be rich text.\n    const richTextStyle = ['va'];\n\n    return !(\n        textRuns.some((textRun) => {\n            const hasRichTextStyle = Boolean(textRun.ts && Object.keys(textRun.ts).some((property) => {\n                return richTextStyle.includes(property);\n            }));\n            return hasRichTextStyle;\n        }) ||\n        paragraphs.some((paragraph) => paragraph.bullet) ||\n        paragraphs.length >= 2 ||\n        Boolean(customRanges?.length) ||\n        customBlocks.length > 0\n    );\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor } from '@univerjs/core';\nimport type { IMenuSelectorItem } from '@univerjs/ui';\nimport { fromCallback, ICommandService, IUniverInstanceService, LocaleService, UniverInstanceType } from '@univerjs/core';\nimport { DEFAULT_TEXT_FORMAT_EXCEL, isDefaultFormat } from '@univerjs/engine-numfmt';\nimport {\n    RangeProtectionPermissionEditPoint,\n    RemoveNumfmtMutation,\n    SetNumfmtMutation,\n    SheetsSelectionsService,\n    WorkbookEditablePermission,\n    WorksheetEditPermission,\n    WorksheetSetCellStylePermission,\n} from '@univerjs/sheets';\nimport { AddDecimalCommand, countryCurrencyMap, isPatternEqualWithoutDecimal, MenuCurrencyService, SetCurrencyCommand, SetPercentCommand, SubtractDecimalCommand } from '@univerjs/sheets-numfmt';\nimport { deriveStateFromActiveSheet$, getCurrentRangeDisable$ } from '@univerjs/sheets-ui';\nimport { getMenuHiddenObservable, MenuItemType } from '@univerjs/ui';\nimport { filter, merge, Observable } from 'rxjs';\nimport { OpenNumfmtPanelOperator } from '../commands/operations/open.numfmt.panel.operation';\nimport { MORE_NUMFMT_TYPE_KEY, OPTIONS_KEY } from '../views/components/more-numfmt-type/MoreNumfmtType';\n\nexport const MENU_OPTIONS: Array<{ label: string; pattern: string | null } | '|'> = [\n    {\n        label: 'sheet.numfmt.general',\n        pattern: null,\n    },\n    {\n        label: 'sheet.numfmt.text',\n        pattern: DEFAULT_TEXT_FORMAT_EXCEL,\n    },\n    '|',\n    {\n        label: 'sheet.numfmt.number',\n        pattern: '0',\n    },\n    '|',\n    {\n        label: 'sheet.numfmt.accounting',\n        pattern: '\"\u00A5\" #,##0.00_);[Red](\"\u00A5\"#,##0.00)',\n    },\n    {\n        label: 'sheet.numfmt.financialValue',\n        pattern: '#,##0.00;[Red]#,##0.00',\n    },\n    {\n        label: 'sheet.numfmt.currency',\n        pattern: '\"\u00A5\"#,##0.00_);[Red](\"\u00A5\"#,##0.00)',\n    },\n    {\n        label: 'sheet.numfmt.roundingCurrency',\n        pattern: '\"\u00A5\"#,##0;[Red]\"\u00A5\"#,##0',\n    },\n    '|',\n    {\n        label: 'sheet.numfmt.date',\n        pattern: 'yyyy-mm-dd;@',\n    },\n    {\n        label: 'sheet.numfmt.time',\n        pattern: 'am/pm h\":\"mm\":\"ss',\n    },\n    {\n        label: 'sheet.numfmt.dateTime',\n        pattern: 'yyyy-m-d am/pm h:mm',\n    },\n    {\n        label: 'sheet.numfmt.timeDuration',\n        pattern: 'h:mm:ss',\n    },\n    '|',\n    {\n        label: 'sheet.numfmt.percent',\n        pattern: '0.00%',\n    },\n    '|',\n    {\n        label: 'sheet.numfmt.moreFmt',\n        pattern: '',\n    },\n];\n\nexport const CurrencyMenuItem = (accessor: IAccessor) => {\n    return {\n        icon: new Observable<string>((subscribe) => {\n            const menuCurrencyService = accessor.get(MenuCurrencyService);\n            function getIconKey(symbol: string) {\n                const iconMap: Record<string, string> = {\n                    [countryCurrencyMap.US]: 'DollarSingle',\n                    [countryCurrencyMap.RU]: 'RoubleSingle',\n                    [countryCurrencyMap.CN]: 'RmbSingle',\n                    [countryCurrencyMap.AT]: 'EuroSingle',\n                };\n                return iconMap[symbol] || 'DollarSingle';\n            }\n            const symbol = countryCurrencyMap[menuCurrencyService.getCurrencySymbol()] || '$';\n            subscribe.next(getIconKey(symbol));\n            return menuCurrencyService.currencySymbol$.subscribe((code) => {\n                const symbol = countryCurrencyMap[code] || '$';\n                subscribe.next(getIconKey(symbol));\n            });\n        }),\n        id: SetCurrencyCommand.id,\n        title: 'sheet.numfmt.currency',\n        tooltip: 'sheet.numfmt.currency',\n        type: MenuItemType.BUTTON,\n        hidden$: getMenuHiddenObservable(accessor, UniverInstanceType.UNIVER_SHEET),\n        disabled$: getCurrentRangeDisable$(accessor, { workbookTypes: [WorkbookEditablePermission], worksheetTypes: [WorksheetEditPermission, WorksheetSetCellStylePermission], rangeTypes: [RangeProtectionPermissionEditPoint] }),\n\n    };\n};\n\nexport const AddDecimalMenuItem = (accessor: IAccessor) => {\n    return {\n        icon: 'AddDigitsSingle',\n        id: AddDecimalCommand.id,\n        title: 'sheet.numfmt.addDecimal',\n        tooltip: 'sheet.numfmt.addDecimal',\n        type: MenuItemType.BUTTON,\n        hidden$: getMenuHiddenObservable(accessor, UniverInstanceType.UNIVER_SHEET),\n        disabled$: getCurrentRangeDisable$(accessor, { workbookTypes: [WorkbookEditablePermission], worksheetTypes: [WorksheetEditPermission, WorksheetSetCellStylePermission], rangeTypes: [RangeProtectionPermissionEditPoint] }),\n    };\n};\n\nexport const SubtractDecimalMenuItem = (accessor: IAccessor) => {\n    return {\n        icon: 'ReduceDigitsSingle',\n        id: SubtractDecimalCommand.id,\n        title: 'sheet.numfmt.subtractDecimal',\n        tooltip: 'sheet.numfmt.subtractDecimal',\n        type: MenuItemType.BUTTON,\n        hidden$: getMenuHiddenObservable(accessor, UniverInstanceType.UNIVER_SHEET),\n        disabled$: getCurrentRangeDisable$(accessor, { workbookTypes: [WorkbookEditablePermission], worksheetTypes: [WorksheetEditPermission, WorksheetSetCellStylePermission], rangeTypes: [RangeProtectionPermissionEditPoint] }),\n    };\n};\n\nexport const PercentMenuItem = (accessor: IAccessor) => {\n    return {\n        icon: 'PercentSingle',\n        id: SetPercentCommand.id,\n        title: 'sheet.numfmt.percent',\n        tooltip: 'sheet.numfmt.percent',\n        type: MenuItemType.BUTTON,\n        hidden$: getMenuHiddenObservable(accessor, UniverInstanceType.UNIVER_SHEET),\n        disabled$: getCurrentRangeDisable$(accessor, { workbookTypes: [WorkbookEditablePermission], worksheetTypes: [WorksheetEditPermission, WorksheetSetCellStylePermission], rangeTypes: [RangeProtectionPermissionEditPoint] }),\n\n    };\n};\n\nexport const FactoryOtherMenuItem = (accessor: IAccessor): IMenuSelectorItem => {\n    const univerInstanceService = accessor.get(IUniverInstanceService);\n    const commandService = accessor.get(ICommandService);\n    const localeService = accessor.get(LocaleService);\n\n    const selectionManagerService = accessor.get(SheetsSelectionsService);\n    const commandList = [RemoveNumfmtMutation.id, SetNumfmtMutation.id];\n    const value$ = deriveStateFromActiveSheet$(\n        univerInstanceService,\n        '',\n        ({ workbook, worksheet }) => new Observable((subscribe) =>\n            merge(\n                selectionManagerService.selectionMoveEnd$,\n                fromCallback(commandService.onCommandExecuted.bind(commandService)).pipe(\n                    filter(([commandInfo]) => commandList.includes(commandInfo.id))\n                )\n            ).subscribe(() => {\n                const selections = selectionManagerService.getCurrentSelections();\n                if (selections && selections[0]) {\n                    const range = selections[0].range;\n                    const row = range.startRow;\n                    const col = range.startColumn;\n                    const numfmtValue = workbook.getStyles().get(worksheet.getCell(row, col)?.s)?.n;\n                    const pattern = numfmtValue?.pattern;\n\n                    // Adapts the 'General' obtained during import, or the 'General' set manually\n                    let value: string = localeService.t('sheet.numfmt.general');\n\n                    if (isDefaultFormat(pattern)) {\n                        subscribe.next(value);\n                        return;\n                    }\n\n                    if (pattern) {\n                        const item = MENU_OPTIONS.filter((item) => typeof item === 'object' && item.pattern).find(\n                            (item) => isPatternEqualWithoutDecimal(pattern, (item as { pattern: string }).pattern)\n                        );\n                        if (item && typeof item === 'object' && item.pattern) {\n                            value = localeService.t(item.label);\n                        } else {\n                            value = localeService.t('sheet.numfmt.moreFmt');\n                        }\n                    }\n\n                    subscribe.next(value);\n                }\n            })\n        )\n    );\n\n    return {\n        label: MORE_NUMFMT_TYPE_KEY,\n        id: OpenNumfmtPanelOperator.id,\n        tooltip: 'sheet.numfmt.title',\n        type: MenuItemType.SELECTOR,\n        slot: true,\n        selections: [\n            {\n                label: {\n                    name: OPTIONS_KEY,\n                    hoverable: false,\n                    selectable: false,\n                },\n            },\n        ],\n        value$,\n        hidden$: getMenuHiddenObservable(accessor, UniverInstanceType.UNIVER_SHEET),\n        disabled$: getCurrentRangeDisable$(accessor, { workbookTypes: [WorkbookEditablePermission], worksheetTypes: [WorksheetSetCellStylePermission, WorksheetEditPermission], rangeTypes: [RangeProtectionPermissionEditPoint] }),\n    };\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FormatType } from '@univerjs/sheets';\nimport { ICommandService, LocaleService, Range } from '@univerjs/core';\nimport { Separator } from '@univerjs/design';\nimport { SheetsSelectionsService } from '@univerjs/sheets';\nimport { getPatternPreview, getPatternType, SetNumfmtCommand, SheetsNumfmtCellContentController } from '@univerjs/sheets-numfmt';\nimport { ILayoutService, useDependency } from '@univerjs/ui';\nimport { OpenNumfmtPanelOperator } from '../../../commands/operations/open.numfmt.panel.operation';\nimport { MENU_OPTIONS } from '../../../controllers/menu';\n\nexport const MORE_NUMFMT_TYPE_KEY = 'sheet.numfmt.moreNumfmtType';\nexport const OPTIONS_KEY = 'sheet.numfmt.moreNumfmtType.options';\n\nexport const MoreNumfmtType = (props: { value?: string }) => {\n    const { value } = props;\n    const localeService = useDependency(LocaleService);\n    const text = value ?? localeService.t('sheet.numfmt.general');\n\n    return <span className=\"univer-text-sm\">{text}</span>;\n};\n\nexport const Options = () => {\n    const commandService = useDependency(ICommandService);\n    const localeService = useDependency(LocaleService);\n    const layoutService = useDependency(ILayoutService);\n    const sheetsNumfmtCellContentController = useDependency(SheetsNumfmtCellContentController);\n\n    const selectionManagerService = useDependency(SheetsSelectionsService);\n    const setNumfmt = (pattern: string | null) => {\n        const selection = selectionManagerService.getCurrentLastSelection();\n        if (!selection) {\n            return;\n        }\n\n        const range = selection.range;\n        const values: Array<{ row: number; col: number; pattern?: string; type?: FormatType }> = [];\n        Range.foreach(range, (row, col) => {\n            if (pattern) {\n                values.push({ row, col, pattern, type: getPatternType(pattern) });\n            } else {\n                values.push({ row, col });\n            }\n        });\n        commandService.executeCommand(SetNumfmtCommand.id, { values });\n\n        layoutService.focus();\n    };\n    const handleOnclick = (index: number) => {\n        if (index === 0) {\n            setNumfmt(null);\n        } else if (index === MENU_OPTIONS.length - 1) {\n            // CATUION: This is a command, not a menu item\n            commandService.executeCommand(OpenNumfmtPanelOperator.id);\n            layoutService.focus();\n        } else {\n            const item = MENU_OPTIONS[index] as { pattern: string };\n            item.pattern && setNumfmt(item.pattern);\n        }\n    };\n\n    const defaultValue = 1220;\n\n    return (\n        <div className=\"univer-grid univer-gap-1 univer-p-1.5\">\n            {MENU_OPTIONS.map((item, index) => {\n                if (item === '|') {\n                    return <Separator key={index} />;\n                }\n                return (\n                    <div\n                        key={index}\n                        className={`\n                          univer-flex univer-h-7 univer-items-center univer-justify-between univer-gap-6 univer-rounded\n                          univer-px-2 univer-text-[13px]\n                          hover:univer-bg-gray-100\n                        `}\n                        onClick={() => {\n                            handleOnclick(index);\n                        }}\n                    >\n                        <span>{localeService.t(item.label)}</span>\n\n                        <span className=\"univer-text-xs univer-text-gray-500\">\n                            {item.pattern ? getPatternPreview(item.pattern || '', defaultValue, sheetsNumfmtCellContentController.local).result.trim() : ''}\n                        </span>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { MenuSchemaType } from '@univerjs/ui';\nimport { AddDecimalCommand, SetCurrencyCommand, SetPercentCommand, SubtractDecimalCommand } from '@univerjs/sheets-numfmt';\nimport { RibbonStartGroup } from '@univerjs/ui';\nimport { OpenNumfmtPanelOperator } from '../commands/operations/open.numfmt.panel.operation';\nimport { AddDecimalMenuItem, CurrencyMenuItem, FactoryOtherMenuItem, PercentMenuItem, SubtractDecimalMenuItem } from './menu';\n\nexport const menuSchema: MenuSchemaType = {\n    [RibbonStartGroup.FORMULAS_INSERT]: {\n        [SetCurrencyCommand.id]: {\n            order: 4,\n            menuItemFactory: CurrencyMenuItem,\n        },\n        [AddDecimalCommand.id]: {\n            order: 5,\n            menuItemFactory: AddDecimalMenuItem,\n        },\n        [SubtractDecimalCommand.id]: {\n            order: 6,\n            menuItemFactory: SubtractDecimalMenuItem,\n        },\n        [SetPercentCommand.id]: {\n            order: 7,\n            menuItemFactory: PercentMenuItem,\n        },\n        [OpenNumfmtPanelOperator.id]: {\n            order: 8,\n            menuItemFactory: FactoryOtherMenuItem,\n        },\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Disposable, Inject } from '@univerjs/core';\nimport { ComponentManager, IMenuManagerService } from '@univerjs/ui';\n\nimport { MORE_NUMFMT_TYPE_KEY, MoreNumfmtType, Options, OPTIONS_KEY } from '../views/components/more-numfmt-type/MoreNumfmtType';\nimport { menuSchema } from './menu.schema';\n\nexport class NumfmtMenuController extends Disposable {\n    constructor(\n        @Inject(ComponentManager) private _componentManager: ComponentManager,\n        @IMenuManagerService private readonly _menuManagerService: IMenuManagerService\n    ) {\n        super();\n\n        this._initMenu();\n    }\n\n    private _initMenu() {\n        this._menuManagerService.mergeMenu(menuSchema);\n\n        this.disposeWithMe((this._componentManager.register(MORE_NUMFMT_TYPE_KEY, MoreNumfmtType)));\n        this.disposeWithMe((this._componentManager.register(OPTIONS_KEY, Options)));\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Dependency } from '@univerjs/core';\nimport type { IUniverSheetsNumfmtUIConfig } from './controllers/config.schema';\nimport { DependentOn, IConfigService, Inject, Injector, merge, Plugin, registerDependencies, touchDependencies, UniverInstanceType } from '@univerjs/core';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { UniverSheetsNumfmtPlugin } from '@univerjs/sheets-numfmt';\nimport { UniverSheetsUIPlugin } from '@univerjs/sheets-ui';\nimport { UI_PLUGIN_CONFIG_KEY } from '@univerjs/ui';\nimport { defaultPluginConfig } from './controllers/config.schema';\nimport { NumfmtAlertRenderController } from './controllers/numfmt-alert-render.controller';\nimport { SheetNumfmtUIController } from './controllers/numfmt.controller';\nimport { NumfmtEditorController } from './controllers/numfmt.editor.controller';\nimport { NumfmtMenuController } from './controllers/numfmt.menu.controller';\nimport { UserHabitController } from './controllers/user-habit.controller';\n\nexport const SHEET_NUMFMT_UI_PLUGIN = 'SHEET_NUMFMT_UI_PLUGIN';\n\n@DependentOn(UniverSheetsUIPlugin, UniverSheetsNumfmtPlugin)\nexport class UniverSheetsNumfmtUIPlugin extends Plugin {\n    static override pluginName = SHEET_NUMFMT_UI_PLUGIN;\n    static override type = UniverInstanceType.UNIVER_SHEET;\n\n    constructor(\n        private readonly _config: Partial<IUniverSheetsNumfmtUIConfig> = defaultPluginConfig,\n        @Inject(Injector) override readonly _injector: Injector,\n        @IConfigService private readonly _configService: IConfigService,\n        @IRenderManagerService private readonly _renderManagerService: IRenderManagerService\n    ) {\n        super();\n\n        // Manage the plugin configuration.\n        const { menu, ...rest } = merge(\n            {},\n            defaultPluginConfig,\n            this._config\n        );\n        if (menu) {\n            this._configService.setConfig('menu', menu, { merge: true });\n        }\n\n        this._configService.setConfig(UI_PLUGIN_CONFIG_KEY, rest);\n    }\n\n    override onStarting(): void {\n        registerDependencies(this._injector, [\n            [SheetNumfmtUIController],\n            [NumfmtEditorController],\n            [UserHabitController],\n            [NumfmtMenuController],\n        ]);\n    }\n\n    override onRendered(): void {\n        this._registerRenderModules();\n        touchDependencies(this._injector, [\n            [SheetNumfmtUIController],\n            [NumfmtEditorController],\n            [NumfmtMenuController],\n        ]);\n    }\n\n    private _registerRenderModules(): void {\n        const modules: Dependency[] = [\n            [NumfmtAlertRenderController],\n        ];\n\n        modules.forEach((m) => {\n            this.disposeWithMe(this._renderManagerService.registerRenderModule(UniverInstanceType.UNIVER_SHEET, m));\n        });\n    }\n}\n"],
  "mappings": "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",
  "names": ["import_react", "key", "import_react", "import_react", "import_react", "key", "decimal", "import_react", "import_jsx_runtime", "negativeOptions", "pattern", "key", "import_react", "import_jsx_runtime", "key", "list", "import_react", "import_jsx_runtime", "item", "import_jsx_runtime", "import_react", "import_jsx_runtime", "item", "decimal", "import_jsx_runtime", "import_react", "key", "_a", "selections", "_a", "symbol", "item", "import_jsx_runtime"]
}
