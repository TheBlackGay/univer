{
  "version": 3,
  "sources": ["../../packages/sheets-formula/src/common/plugin-name.ts", "../../packages/sheets-formula/src/controllers/active-dirty.controller.ts", "../../packages/sheets-formula/src/controllers/array-formula-cell-interceptor.controller.ts", "../../packages/sheets-formula/src/controllers/config.schema.ts", "../../packages/sheets-formula/src/services/function-list/array.ts", "../../packages/sheets-formula/src/services/function-list/compatibility.ts", "../../packages/sheets-formula/src/services/function-list/cube.ts", "../../packages/sheets-formula/src/services/function-list/database.ts", "../../packages/sheets-formula/src/services/function-list/date.ts", "../../packages/sheets-formula/src/services/function-list/engineering.ts", "../../packages/sheets-formula/src/services/function-list/financial.ts", "../../packages/sheets-formula/src/services/function-list/information.ts", "../../packages/sheets-formula/src/services/function-list/logical.ts", "../../packages/sheets-formula/src/services/function-list/lookup.ts", "../../packages/sheets-formula/src/services/function-list/math.ts", "../../packages/sheets-formula/src/services/function-list/statistical.ts", "../../packages/sheets-formula/src/services/function-list/text.ts", "../../packages/sheets-formula/src/services/function-list/univer.ts", "../../packages/sheets-formula/src/services/function-list/web.ts", "../../packages/sheets-formula/src/services/function-list/function-list.ts", "../../packages/sheets-formula/src/services/utils.ts", "../../packages/sheets-formula/src/services/description.service.ts", "../../packages/sheets-formula/src/controllers/defined-name.controller.ts", "../../packages/sheets-formula/src/commands/commands/insert-function.command.ts", "../../packages/sheets-formula/src/commands/mutations/formula.mutation.ts", "../../packages/sheets-formula/src/controllers/formula.controller.ts", "../../packages/sheets-formula/src/services/register-other-formula.service.ts", "../../packages/sheets-formula/src/controllers/trigger-calculation.controller.ts", "../../packages/sheets-formula/src/controllers/utils/offset-formula-data.ts", "../../packages/sheets-formula/src/controllers/utils/ref-range-formula.ts", "../../packages/sheets-formula/src/controllers/utils/ref-range-move.ts", "../../packages/sheets-formula/src/controllers/utils/ref-range-param.ts", "../../packages/sheets-formula/src/controllers/update-defined-name.controller.ts", "../../packages/sheets-formula/src/controllers/update-formula.controller.ts", "../../packages/sheets-formula/src/services/formula-ref-range.service.ts", "../../packages/sheets-formula/src/services/remote/remote-register-function.service.ts", "../../packages/sheets-formula/src/services/register-function.service.ts", "../../packages/sheets-formula/src/sheets-formula.plugin.ts"],
  "sourcesContent": ["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const SHEETS_FORMULA_PLUGIN_NAME = 'SHEETS_FORMULA_PLUGIN';\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, ICommandInfo, IObjectMatrixPrimitiveType, IRange, IUnitRange, Nullable } from '@univerjs/core';\nimport type { IDirtyUnitSheetDefinedNameMap, IDirtyUnitSheetNameMap, ISetDefinedNameMutationParam } from '@univerjs/engine-formula';\nimport type {\n    IInsertColMutationParams,\n    IInsertRowMutationParams,\n    IInsertSheetMutationParams,\n    IMoveColumnsMutationParams,\n    IMoveRangeMutationParams,\n    IMoveRowsMutationParams,\n    IRemoveColMutationParams,\n    IRemoveRowsMutationParams,\n    IRemoveSheetMutationParams,\n    IReorderRangeMutationParams,\n    ISetRangeValuesMutationParams,\n    ISetRowHiddenMutationParams,\n    ISetRowVisibleMutationParams,\n} from '@univerjs/sheets';\nimport {\n    Disposable,\n    Inject,\n    IUniverInstanceService,\n    ObjectMatrix,\n} from '@univerjs/core';\nimport { FormulaDataModel, IActiveDirtyManagerService, RemoveDefinedNameMutation, SetDefinedNameMutation } from '@univerjs/engine-formula';\nimport {\n    InsertColMutation,\n    InsertRowMutation,\n    InsertSheetMutation,\n    MoveColsMutation,\n    MoveRangeMutation,\n    MoveRowsMutation,\n    RemoveColMutation,\n    RemoveRowMutation,\n    RemoveSheetMutation,\n    ReorderRangeMutation,\n    SetRangeValuesMutation,\n    SetRowHiddenMutation,\n    SetRowVisibleMutation,\n    SetStyleCommand,\n} from '@univerjs/sheets';\n\nexport class ActiveDirtyController extends Disposable {\n    constructor(\n        @IActiveDirtyManagerService private readonly _activeDirtyManagerService: IActiveDirtyManagerService,\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @Inject(FormulaDataModel) private readonly _formulaDataModel: FormulaDataModel\n    ) {\n        super();\n\n        this._initialize();\n    }\n\n    private _initialize(): void {\n        this._initialConversion();\n    }\n\n    private _initialConversion() {\n        this._activeDirtyManagerService.register(SetRangeValuesMutation.id, {\n            commandId: SetRangeValuesMutation.id,\n            getDirtyData: (command: ICommandInfo) => {\n                const params = command.params as ISetRangeValuesMutationParams;\n                /**\n                 * Changes in the cell value caused by the formula or style\n                 * will not trigger the formula to be marked as dirty for calculation.\n                 */\n                if (params.trigger === SetStyleCommand.id) {\n                    return {};\n                }\n\n                return {\n                    dirtyRanges: this._getSetRangeValuesMutationDirtyRange(params),\n                };\n            },\n        });\n\n        this._initialMove();\n\n        this._initialRowAndColumn();\n\n        this._initialHideRow();\n\n        this._initialSheet();\n\n        this._initialDefinedName();\n    }\n\n    private _initialMove() {\n        this._activeDirtyManagerService.register(MoveRangeMutation.id, {\n            commandId: MoveRangeMutation.id,\n            getDirtyData: (command: ICommandInfo) => {\n                const params = command.params as IMoveRangeMutationParams;\n                return {\n                    dirtyRanges: this._getMoveRangeMutationDirtyRange(params),\n                    clearDependencyTreeCache: {\n                        [params.unitId]: {\n                            [params.to.subUnitId]: '1',\n                            [params.from.subUnitId]: '1',\n                        },\n                    },\n                };\n            },\n        });\n\n        this._activeDirtyManagerService.register(MoveRowsMutation.id, {\n            commandId: MoveRowsMutation.id,\n            getDirtyData: (command: ICommandInfo) => {\n                const params = command.params as IMoveRowsMutationParams;\n                return {\n                    dirtyRanges: this._getMoveRowsMutationDirtyRange(params),\n                    clearDependencyTreeCache: {\n                        [params.unitId]: {\n                            [params.subUnitId]: '1',\n                        },\n                    },\n                };\n            },\n        });\n\n        this._activeDirtyManagerService.register(MoveColsMutation.id, {\n            commandId: MoveColsMutation.id,\n            getDirtyData: (command: ICommandInfo) => {\n                const params = command.params as IMoveColumnsMutationParams;\n                return {\n                    dirtyRanges: this._getMoveRowsMutationDirtyRange(params),\n                    clearDependencyTreeCache: {\n                        [params.unitId]: {\n                            [params.subUnitId]: '1',\n                        },\n                    },\n                };\n            },\n        });\n\n        this._activeDirtyManagerService.register(ReorderRangeMutation.id, {\n            commandId: ReorderRangeMutation.id,\n            getDirtyData: (command: ICommandInfo) => {\n                const params = command.params as IReorderRangeMutationParams;\n                return {\n                    dirtyRanges: this._getReorderRangeMutationDirtyRange(params),\n                    clearDependencyTreeCache: {\n                        [params.unitId]: {\n                            [params.subUnitId]: '1',\n                        },\n                    },\n                };\n            },\n        });\n    }\n\n    private _initialRowAndColumn() {\n        this._activeDirtyManagerService.register(RemoveRowMutation.id, {\n            commandId: RemoveRowMutation.id,\n            getDirtyData: (command: ICommandInfo) => {\n                const params = command.params as IRemoveRowsMutationParams;\n                return {\n                    dirtyRanges: this._getRemoveRowOrColumnMutation(params, true),\n                    clearDependencyTreeCache: {\n                        [params.unitId]: {\n                            [params.subUnitId]: '1',\n                        },\n                    },\n                };\n            },\n        });\n\n        this._activeDirtyManagerService.register(RemoveColMutation.id, {\n            commandId: RemoveColMutation.id,\n            getDirtyData: (command: ICommandInfo) => {\n                const params = command.params as IRemoveColMutationParams;\n                return {\n                    dirtyRanges: this._getRemoveRowOrColumnMutation(params, false),\n                    clearDependencyTreeCache: {\n                        [params.unitId]: {\n                            [params.subUnitId]: '1',\n                        },\n                    },\n                };\n            },\n        });\n\n        this._activeDirtyManagerService.register(InsertColMutation.id, {\n            commandId: InsertColMutation.id,\n            getDirtyData: (command: ICommandInfo) => {\n                const params = command.params as IInsertColMutationParams;\n                return {\n                    clearDependencyTreeCache: {\n                        [params.unitId]: {\n                            [params.subUnitId]: '1',\n                        },\n                    },\n                };\n            },\n        });\n\n        this._activeDirtyManagerService.register(InsertRowMutation.id, {\n            commandId: InsertRowMutation.id,\n            getDirtyData: (command: ICommandInfo) => {\n                const params = command.params as IInsertRowMutationParams;\n                return {\n                    clearDependencyTreeCache: {\n                        [params.unitId]: {\n                            [params.subUnitId]: '1',\n                        },\n                    },\n                };\n            },\n        });\n    }\n\n    private _initialHideRow() {\n        this._activeDirtyManagerService.register(SetRowHiddenMutation.id, {\n            commandId: SetRowHiddenMutation.id,\n            getDirtyData: (command: ICommandInfo) => {\n                const params = command.params as ISetRowHiddenMutationParams;\n                return {\n                    dirtyRanges: this._getHideRowMutation(params),\n                    clearDependencyTreeCache: {\n                        [params.unitId]: {\n                            [params.subUnitId]: '1',\n                        },\n                    },\n                };\n            },\n        });\n        this._activeDirtyManagerService.register(SetRowVisibleMutation.id, {\n            commandId: SetRowVisibleMutation.id,\n            getDirtyData: (command: ICommandInfo) => {\n                const params = command.params as ISetRowVisibleMutationParams;\n                return {\n                    dirtyRanges: this._getHideRowMutation(params),\n                    clearDependencyTreeCache: {\n                        [params.unitId]: {\n                            [params.subUnitId]: '1',\n                        },\n                    },\n                };\n            },\n        });\n    }\n\n    private _initialSheet() {\n        this._activeDirtyManagerService.register(RemoveSheetMutation.id, {\n            commandId: RemoveSheetMutation.id,\n            getDirtyData: (command: ICommandInfo) => {\n                const params = command.params as IRemoveSheetMutationParams;\n                return {\n                    dirtyNameMap: this._getRemoveSheetMutation(params),\n                    clearDependencyTreeCache: {\n                        [params.unitId]: {\n                            [params.subUnitId]: '1',\n                        },\n                    },\n                };\n            },\n        });\n\n        this._activeDirtyManagerService.register(InsertSheetMutation.id, {\n            commandId: InsertSheetMutation.id,\n            getDirtyData: (command: ICommandInfo) => {\n                const params = command.params as IInsertSheetMutationParams;\n                return {\n                    dirtyNameMap: this._getInsertSheetMutation(params),\n                };\n            },\n        });\n    }\n\n    private _initialDefinedName() {\n        this._activeDirtyManagerService.register(SetDefinedNameMutation.id, {\n            commandId: SetDefinedNameMutation.id,\n            getDirtyData: (command: ICommandInfo) => {\n                const params = command.params as ISetDefinedNameMutationParam;\n                return { dirtyDefinedNameMap: this._getDefinedNameMutation(params) };\n            },\n        });\n\n        this._activeDirtyManagerService.register(RemoveDefinedNameMutation.id, {\n            commandId: RemoveDefinedNameMutation.id,\n            getDirtyData: (command: ICommandInfo) => {\n                const params = command.params as ISetDefinedNameMutationParam;\n                return { dirtyDefinedNameMap: this._getDefinedNameMutation(params) };\n            },\n        });\n    }\n\n    private _getDefinedNameMutation(definedName: ISetDefinedNameMutationParam) {\n        const { unitId, name, formulaOrRefString } = definedName;\n        const result: IDirtyUnitSheetDefinedNameMap = {};\n        if (definedName == null) {\n            return {};\n        }\n\n        result[unitId] = {};\n\n        result[unitId]![name] = formulaOrRefString;\n\n        return result;\n    }\n\n    private _getSetRangeValuesMutationDirtyRange(params: ISetRangeValuesMutationParams) {\n        const { subUnitId: sheetId, unitId, cellValue } = params;\n\n        const dirtyRanges: IUnitRange[] = [];\n\n        if (cellValue == null) {\n            return dirtyRanges;\n        }\n\n        dirtyRanges.push(...this._getDirtyRangesByCellValue(unitId, sheetId, cellValue));\n\n        dirtyRanges.push(...this._getDirtyRangesForArrayFormula(unitId, sheetId, cellValue));\n\n        return dirtyRanges;\n    }\n\n    private _getMoveRangeMutationDirtyRange(params: IMoveRangeMutationParams) {\n        const { unitId, from, to } = params;\n\n        const dirtyRanges: IUnitRange[] = [];\n\n        dirtyRanges.push(...this._getDirtyRangesByCellValue(unitId, from.subUnitId, from.value));\n\n        dirtyRanges.push(...this._getDirtyRangesByCellValue(unitId, to.subUnitId, to.value));\n\n        dirtyRanges.push(...this._getDirtyRangesForArrayFormula(unitId, to.subUnitId, to.value));\n\n        return dirtyRanges;\n    }\n\n    private _getMoveRowsMutationDirtyRange(params: IMoveRowsMutationParams) {\n        const { subUnitId: sheetId, unitId, sourceRange, targetRange } = params;\n\n        const dirtyRanges: IUnitRange[] = [];\n\n        const sourceMatrix = this._rangeToMatrix(sourceRange).getData();\n\n        const targetMatrix = this._rangeToMatrix(targetRange).getData();\n\n        dirtyRanges.push(...this._getDirtyRangesByCellValue(unitId, sheetId, sourceMatrix));\n\n        dirtyRanges.push(...this._getDirtyRangesByCellValue(unitId, sheetId, targetMatrix));\n\n        dirtyRanges.push(...this._getDirtyRangesForArrayFormula(unitId, sheetId, targetMatrix));\n\n        return dirtyRanges;\n    }\n\n    private _getReorderRangeMutationDirtyRange(params: IReorderRangeMutationParams) {\n        const { unitId, subUnitId: sheetId, range } = params;\n        const matrix = this._rangeToMatrix(range).getData();\n        const dirtyRanges: IUnitRange[] = [];\n        dirtyRanges.push(...this._getDirtyRangesByCellValue(unitId, sheetId, matrix));\n        dirtyRanges.push(...this._getDirtyRangesForArrayFormula(unitId, sheetId, matrix));\n        return dirtyRanges;\n    }\n\n    private _getRemoveRowOrColumnMutation(params: IRemoveRowsMutationParams, isRow: boolean = true) {\n        const { subUnitId: sheetId, unitId, range } = params;\n\n        const dirtyRanges: IUnitRange[] = [];\n\n        const workbook = this._univerInstanceService.getUniverSheetInstance(unitId);\n\n        const worksheet = workbook?.getSheetBySheetId(sheetId);\n\n        const rowCount = worksheet?.getRowCount() || 0;\n\n        const columnCount = worksheet?.getColumnCount() || 0;\n\n        let matrix: Nullable<ObjectMatrix<Nullable<ICellData>>> = null;\n        const { startRow, endRow, startColumn, endColumn } = range;\n\n        if (isRow === true) {\n            matrix = this._rangeToMatrix({\n                startRow,\n                startColumn: 0,\n                endRow,\n                endColumn: columnCount - 1,\n            });\n        } else {\n            matrix = this._rangeToMatrix({\n                startRow: 0,\n                startColumn,\n                endRow: rowCount,\n                endColumn,\n            });\n        }\n\n        const matrixData = matrix.getData();\n\n        dirtyRanges.push(...this._getDirtyRangesByCellValue(unitId, sheetId, matrixData));\n\n        dirtyRanges.push(...this._getDirtyRangesForArrayFormula(unitId, sheetId, matrixData));\n\n        return dirtyRanges;\n    }\n\n    private _getHideRowMutation(params: ISetRowHiddenMutationParams) {\n        const { subUnitId, unitId, ranges } = params;\n\n        const dirtyRanges: IUnitRange[] = [];\n\n        // covert ranges to dirtyRanges\n        ranges.forEach((range) => {\n            const matrix = this._rangeToMatrix(range).getMatrix();\n            dirtyRanges.push(...this._getDirtyRangesByCellValue(unitId, subUnitId, matrix));\n        });\n\n        return dirtyRanges;\n    }\n\n    private _getRemoveSheetMutation(params: IRemoveSheetMutationParams) {\n        const dirtyNameMap: IDirtyUnitSheetNameMap = {};\n        const { subUnitId: sheetId, unitId, subUnitName } = params;\n\n        // const dirtyNameMap: IDirtyUnitSheetNameMap = {};\n\n        if (dirtyNameMap[unitId] == null) {\n            dirtyNameMap[unitId] = {};\n        }\n\n        dirtyNameMap[unitId]![sheetId] = subUnitName;\n\n        return dirtyNameMap;\n    }\n\n    private _getInsertSheetMutation(params: IInsertSheetMutationParams) {\n        const dirtyNameMap: IDirtyUnitSheetNameMap = {};\n        const { sheet, unitId } = params;\n\n        if (dirtyNameMap[unitId] == null) {\n            dirtyNameMap[unitId] = {};\n        }\n\n        dirtyNameMap[unitId]![sheet.id] = sheet.name;\n\n        return dirtyNameMap;\n    }\n\n    private _rangeToMatrix(range: IRange) {\n        const matrix = new ObjectMatrix<Nullable<ICellData>>();\n\n        const { startRow, startColumn, endRow, endColumn } = range;\n\n        for (let r = startRow; r <= endRow; r++) {\n            for (let c = startColumn; c <= endColumn; c++) {\n                matrix.setValue(r, c, {});\n            }\n        }\n\n        return matrix;\n    }\n\n    private _getDirtyRangesByCellValue(\n        unitId: string,\n        sheetId: string,\n        cellValue?: IObjectMatrixPrimitiveType<Nullable<ICellData>>\n    ) {\n        const dirtyRanges: IUnitRange[] = [];\n\n        if (cellValue == null) {\n            return dirtyRanges;\n        }\n\n        const cellMatrix = new ObjectMatrix(cellValue);\n\n        const discreteRanges = cellMatrix.getDiscreteRanges();\n\n        discreteRanges.forEach((range) => {\n            dirtyRanges.push({ unitId, sheetId, range });\n        });\n\n        return dirtyRanges;\n    }\n\n    /**\n     * The array formula is a range where only the top-left corner contains the formula value.\n     * All other positions, apart from the top-left corner, need to be marked as dirty.\n     */\n    private _getDirtyRangesForArrayFormula(\n        unitId: string,\n        sheetId: string,\n        cellValue: IObjectMatrixPrimitiveType<Nullable<ICellData>>\n    ) {\n        const dirtyRanges: IUnitRange[] = [];\n\n        if (cellValue == null) {\n            return dirtyRanges;\n        }\n\n        const cellMatrix = new ObjectMatrix(cellValue);\n\n        const arrayFormulaRange = this._formulaDataModel.getArrayFormulaRange();\n\n        /**\n         * The array formula is a range where only the top-left corner contains the formula value.\n         * All other positions, apart from the top-left corner, need to be marked as dirty.\n         */\n        if (arrayFormulaRange?.[unitId]?.[sheetId]) {\n            const cellRangeData = new ObjectMatrix<IRange>(arrayFormulaRange?.[unitId]?.[sheetId]);\n            cellMatrix.forValue((row, column) => {\n                cellRangeData.forValue((arrayFormulaRow, arrayFormulaColumn, arrayFormulaRange) => {\n                    if (arrayFormulaRange == null) {\n                        return true;\n                    }\n                    const { startRow, startColumn, endRow, endColumn } = arrayFormulaRange;\n                    if (row >= startRow && row <= endRow && column >= startColumn && column <= endColumn) {\n                        dirtyRanges.push({\n                            unitId,\n                            sheetId,\n                            range: {\n                                startRow,\n                                startColumn,\n                                endRow: startRow,\n                                endColumn: startColumn,\n                            },\n                        });\n                    }\n                });\n            });\n        }\n\n        return dirtyRanges;\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommandInfo } from '@univerjs/core';\nimport type { ISetArrayFormulaDataMutationParams } from '@univerjs/engine-formula';\nimport { CellValueType, Disposable, ICommandService, Inject, InterceptorEffectEnum, isRealNum } from '@univerjs/core';\nimport { FormulaDataModel, SetArrayFormulaDataMutation, stripErrorMargin } from '@univerjs/engine-formula';\nimport { INTERCEPTOR_POINT, SheetInterceptorService } from '@univerjs/sheets';\n\nexport class ArrayFormulaCellInterceptorController extends Disposable {\n    constructor(\n        @ICommandService private readonly _commandService: ICommandService,\n        @Inject(SheetInterceptorService) private _sheetInterceptorService: SheetInterceptorService,\n        @Inject(FormulaDataModel) private readonly _formulaDataModel: FormulaDataModel\n    ) {\n        super();\n\n        this._initialize();\n    }\n\n    private _initialize(): void {\n        this._commandExecutedListener();\n\n        this._initInterceptorCellContent();\n    }\n\n    private _commandExecutedListener() {\n        this.disposeWithMe(\n            this._commandService.onCommandExecuted((command: ICommandInfo) => {\n                // Synchronous data from worker\n                if (command.id !== SetArrayFormulaDataMutation.id) {\n                    return;\n                }\n\n                const params = command.params as ISetArrayFormulaDataMutationParams;\n\n                if (params == null) {\n                    return;\n                }\n\n                const { arrayFormulaRange, arrayFormulaCellData } = params;\n                this._formulaDataModel.setArrayFormulaRange(arrayFormulaRange);\n                this._formulaDataModel.setArrayFormulaCellData(arrayFormulaCellData);\n            })\n        );\n    }\n\n    private _initInterceptorCellContent() {\n        this.disposeWithMe(\n            this._sheetInterceptorService.intercept(INTERCEPTOR_POINT.CELL_CONTENT, {\n                priority: 100,\n                effect: InterceptorEffectEnum.Value,\n                handler: (cell, location, next) => {\n                    const { unitId, subUnitId, row, col } = location;\n                    const arrayFormulaCellData = this._formulaDataModel.getArrayFormulaCellData();\n                    const cellData = arrayFormulaCellData?.[unitId]?.[subUnitId]?.[row]?.[col];\n                    if (cellData == null) {\n                        return next(cell);\n                    }\n\n                    // The cell in the upper left corner of the array formula also triggers the default value determination\n                    if (cellData.v == null && cellData.t == null) {\n                        return next({\n                            ...cell,\n                            v: 0, // Default value for empty cell\n                            t: CellValueType.NUMBER,\n                        });\n                    }\n\n                    // Dealing with precision issues\n                    // Need to be compatible with the case where v is a string but the cell type is a number\n                    // e.g.\n                    // \"v\": \"123413.23000000001\",\n                    // \"t\": 2,\n                    if (cell?.t === CellValueType.NUMBER && cell.v !== undefined && cell.v !== null && isRealNum(cell.v)) {\n                        return next({\n                            ...cell,\n                            v: stripErrorMargin(Number(cell.v)),\n                        });\n                    }\n\n                    return next({\n                        ...cell,\n                        v: cellData.v,\n                        t: cellData.t,\n                    });\n                },\n            })\n        );\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Ctor } from '@univerjs/core';\nimport type { BaseFunction, IFunctionInfo, IFunctionNames } from '@univerjs/engine-formula';\n\n/**\n * Base configuration for the plugin.\n */\nexport const PLUGIN_CONFIG_KEY_BASE = 'sheets-formula.base.config';\n\nexport const configSymbolBase = Symbol(PLUGIN_CONFIG_KEY_BASE);\n\nexport enum CalculationMode {\n    /**\n     * Force calculation of all formulas\n     */\n    FORCED,\n\n    /**\n     * Partial calculation, only cells with formulas but no v values are calculated\n     */\n    WHEN_EMPTY,\n\n    /**\n     * All formulas are not calculated\n     */\n    NO_CALCULATION,\n}\n\nexport interface IUniverSheetsFormulaBaseConfig {\n    notExecuteFormula?: boolean;\n    description?: IFunctionInfo[];\n    function?: Array<[Ctor<BaseFunction>, IFunctionNames]>;\n\n    /**\n     * Define the calculation mode during initialization, default is `WHEN_EMPTY`\n     */\n    initialFormulaComputing?: CalculationMode;\n}\n\nexport const defaultPluginBaseConfig: IUniverSheetsFormulaBaseConfig = {};\n\n/**\n * Remote configuration for the plugin.\n */\nexport const PLUGIN_CONFIG_KEY_REMOTE = 'sheets-formula.remote.config';\n\nexport const configSymbolRemote = Symbol(PLUGIN_CONFIG_KEY_REMOTE);\n\nexport interface IUniverSheetsFormulaRemoteConfig {\n}\n\nexport const defaultPluginRemoteConfig: IUniverSheetsFormulaRemoteConfig = {};\n\n/**\n * Mobile configuration for the plugin.\n */\nexport const PLUGIN_CONFIG_KEY_MOBILE = 'sheets-formula.mobile.config';\n\nexport const configSymbolMobile = Symbol(PLUGIN_CONFIG_KEY_MOBILE);\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IFunctionInfo } from '@univerjs/engine-formula';\nimport { FUNCTION_NAMES_ARRAY, FunctionType } from '@univerjs/engine-formula';\n\nexport const FUNCTION_LIST_ARRAY: IFunctionInfo[] = [\n    {\n        functionName: FUNCTION_NAMES_ARRAY.ARRAY_CONSTRAIN,\n        functionType: FunctionType.Array,\n        description: 'formula.functionList.ARRAY_CONSTRAIN.description',\n        abstract: 'formula.functionList.ARRAY_CONSTRAIN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ARRAY_CONSTRAIN.functionParameter.inputRange.name',\n                detail: 'formula.functionList.ARRAY_CONSTRAIN.functionParameter.inputRange.detail',\n                example: 'A1:C3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ARRAY_CONSTRAIN.functionParameter.numRows.name',\n                detail: 'formula.functionList.ARRAY_CONSTRAIN.functionParameter.numRows.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ARRAY_CONSTRAIN.functionParameter.numCols.name',\n                detail: 'formula.functionList.ARRAY_CONSTRAIN.functionParameter.numCols.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ARRAY.FLATTEN,\n        functionType: FunctionType.Array,\n        description: 'formula.functionList.FLATTEN.description',\n        abstract: 'formula.functionList.FLATTEN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FLATTEN.functionParameter.range1.name',\n                detail: 'formula.functionList.FLATTEN.functionParameter.range1.detail',\n                example: 'A1:C3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FLATTEN.functionParameter.range2.name',\n                detail: 'formula.functionList.FLATTEN.functionParameter.range2.detail',\n                example: 'D1:F3',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FUNCTION_NAMES_COMPATIBILITY, FunctionType, type IFunctionInfo } from '@univerjs/engine-formula';\n\nexport const FUNCTION_LIST_COMPATIBILITY: IFunctionInfo[] = [\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.BETADIST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.BETADIST.description',\n        abstract: 'formula.functionList.BETADIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BETADIST.functionParameter.x.name',\n                detail: 'formula.functionList.BETADIST.functionParameter.x.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETADIST.functionParameter.alpha.name',\n                detail: 'formula.functionList.BETADIST.functionParameter.alpha.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETADIST.functionParameter.beta.name',\n                detail: 'formula.functionList.BETADIST.functionParameter.beta.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETADIST.functionParameter.A.name',\n                detail: 'formula.functionList.BETADIST.functionParameter.A.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETADIST.functionParameter.B.name',\n                detail: 'formula.functionList.BETADIST.functionParameter.B.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.BETAINV,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.BETAINV.description',\n        abstract: 'formula.functionList.BETAINV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BETAINV.functionParameter.probability.name',\n                detail: 'formula.functionList.BETAINV.functionParameter.probability.detail',\n                example: '0.685470581',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETAINV.functionParameter.alpha.name',\n                detail: 'formula.functionList.BETAINV.functionParameter.alpha.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETAINV.functionParameter.beta.name',\n                detail: 'formula.functionList.BETAINV.functionParameter.beta.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETAINV.functionParameter.A.name',\n                detail: 'formula.functionList.BETAINV.functionParameter.A.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETAINV.functionParameter.B.name',\n                detail: 'formula.functionList.BETAINV.functionParameter.B.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.BINOMDIST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.BINOMDIST.description',\n        abstract: 'formula.functionList.BINOMDIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BINOMDIST.functionParameter.numberS.name',\n                detail: 'formula.functionList.BINOMDIST.functionParameter.numberS.detail',\n                example: '6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BINOMDIST.functionParameter.trials.name',\n                detail: 'formula.functionList.BINOMDIST.functionParameter.trials.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BINOMDIST.functionParameter.probabilityS.name',\n                detail: 'formula.functionList.BINOMDIST.functionParameter.probabilityS.detail',\n                example: '0.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BINOMDIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.BINOMDIST.functionParameter.cumulative.detail',\n                example: 'false',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.CHIDIST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.CHIDIST.description',\n        abstract: 'formula.functionList.CHIDIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CHIDIST.functionParameter.x.name',\n                detail: 'formula.functionList.CHIDIST.functionParameter.x.detail',\n                example: '0.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CHIDIST.functionParameter.degFreedom.name',\n                detail: 'formula.functionList.CHIDIST.functionParameter.degFreedom.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.CHIINV,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.CHIINV.description',\n        abstract: 'formula.functionList.CHIINV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CHIINV.functionParameter.probability.name',\n                detail: 'formula.functionList.CHIINV.functionParameter.probability.detail',\n                example: '0.93',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CHIINV.functionParameter.degFreedom.name',\n                detail: 'formula.functionList.CHIINV.functionParameter.degFreedom.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.CHITEST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.CHITEST.description',\n        abstract: 'formula.functionList.CHITEST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CHITEST.functionParameter.actualRange.name',\n                detail: 'formula.functionList.CHITEST.functionParameter.actualRange.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CHITEST.functionParameter.expectedRange.name',\n                detail: 'formula.functionList.CHITEST.functionParameter.expectedRange.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.CONFIDENCE,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.CONFIDENCE.description',\n        abstract: 'formula.functionList.CONFIDENCE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CONFIDENCE.functionParameter.alpha.name',\n                detail: 'formula.functionList.CONFIDENCE.functionParameter.alpha.detail',\n                example: '0.05',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CONFIDENCE.functionParameter.standardDev.name',\n                detail: 'formula.functionList.CONFIDENCE.functionParameter.standardDev.detail',\n                example: '2.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CONFIDENCE.functionParameter.size.name',\n                detail: 'formula.functionList.CONFIDENCE.functionParameter.size.detail',\n                example: '50',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.COVAR,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.COVAR.description',\n        abstract: 'formula.functionList.COVAR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COVAR.functionParameter.array1.name',\n                detail: 'formula.functionList.COVAR.functionParameter.array1.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COVAR.functionParameter.array2.name',\n                detail: 'formula.functionList.COVAR.functionParameter.array2.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.CRITBINOM,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.CRITBINOM.description',\n        abstract: 'formula.functionList.CRITBINOM.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CRITBINOM.functionParameter.trials.name',\n                detail: 'formula.functionList.CRITBINOM.functionParameter.trials.detail',\n                example: '6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CRITBINOM.functionParameter.probabilityS.name',\n                detail: 'formula.functionList.CRITBINOM.functionParameter.probabilityS.detail',\n                example: '0.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CRITBINOM.functionParameter.alpha.name',\n                detail: 'formula.functionList.CRITBINOM.functionParameter.alpha.detail',\n                example: '0.75',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.EXPONDIST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.EXPONDIST.description',\n        abstract: 'formula.functionList.EXPONDIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.EXPONDIST.functionParameter.x.name',\n                detail: 'formula.functionList.EXPONDIST.functionParameter.x.detail',\n                example: '0.2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.EXPONDIST.functionParameter.lambda.name',\n                detail: 'formula.functionList.EXPONDIST.functionParameter.lambda.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.EXPONDIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.EXPONDIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.FDIST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.FDIST.description',\n        abstract: 'formula.functionList.FDIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FDIST.functionParameter.x.name',\n                detail: 'formula.functionList.FDIST.functionParameter.x.detail',\n                example: '15.2069',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FDIST.functionParameter.degFreedom1.name',\n                detail: 'formula.functionList.FDIST.functionParameter.degFreedom1.detail',\n                example: '6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FDIST.functionParameter.degFreedom2.name',\n                detail: 'formula.functionList.FDIST.functionParameter.degFreedom2.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.FINV,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.FINV.description',\n        abstract: 'formula.functionList.FINV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FINV.functionParameter.probability.name',\n                detail: 'formula.functionList.FINV.functionParameter.probability.detail',\n                example: '0.01',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FINV.functionParameter.degFreedom1.name',\n                detail: 'formula.functionList.FINV.functionParameter.degFreedom1.detail',\n                example: '6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FINV.functionParameter.degFreedom2.name',\n                detail: 'formula.functionList.FINV.functionParameter.degFreedom2.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.FTEST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.FTEST.description',\n        abstract: 'formula.functionList.FTEST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FTEST.functionParameter.array1.name',\n                detail: 'formula.functionList.FTEST.functionParameter.array1.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FTEST.functionParameter.array2.name',\n                detail: 'formula.functionList.FTEST.functionParameter.array2.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.GAMMADIST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.GAMMADIST.description',\n        abstract: 'formula.functionList.GAMMADIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.GAMMADIST.functionParameter.x.name',\n                detail: 'formula.functionList.GAMMADIST.functionParameter.x.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GAMMADIST.functionParameter.alpha.name',\n                detail: 'formula.functionList.GAMMADIST.functionParameter.alpha.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GAMMADIST.functionParameter.beta.name',\n                detail: 'formula.functionList.GAMMADIST.functionParameter.beta.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GAMMADIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.GAMMADIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.GAMMAINV,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.GAMMAINV.description',\n        abstract: 'formula.functionList.GAMMAINV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.GAMMAINV.functionParameter.probability.name',\n                detail: 'formula.functionList.GAMMAINV.functionParameter.probability.detail',\n                example: '0.068094',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GAMMAINV.functionParameter.alpha.name',\n                detail: 'formula.functionList.GAMMAINV.functionParameter.alpha.detail',\n                example: '9',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GAMMAINV.functionParameter.beta.name',\n                detail: 'formula.functionList.GAMMAINV.functionParameter.beta.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.HYPGEOMDIST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.HYPGEOMDIST.description',\n        abstract: 'formula.functionList.HYPGEOMDIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.HYPGEOMDIST.functionParameter.sampleS.name',\n                detail: 'formula.functionList.HYPGEOMDIST.functionParameter.sampleS.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.HYPGEOMDIST.functionParameter.numberSample.name',\n                detail: 'formula.functionList.HYPGEOMDIST.functionParameter.numberSample.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.HYPGEOMDIST.functionParameter.populationS.name',\n                detail: 'formula.functionList.HYPGEOMDIST.functionParameter.populationS.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.HYPGEOMDIST.functionParameter.numberPop.name',\n                detail: 'formula.functionList.HYPGEOMDIST.functionParameter.numberPop.detail',\n                example: '20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.LOGINV,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.LOGINV.description',\n        abstract: 'formula.functionList.LOGINV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LOGINV.functionParameter.probability.name',\n                detail: 'formula.functionList.LOGINV.functionParameter.probability.detail',\n                example: '0.908789',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LOGINV.functionParameter.mean.name',\n                detail: 'formula.functionList.LOGINV.functionParameter.mean.detail',\n                example: '40',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LOGINV.functionParameter.standardDev.name',\n                detail: 'formula.functionList.LOGINV.functionParameter.standardDev.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.LOGNORMDIST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.LOGNORMDIST.description',\n        abstract: 'formula.functionList.LOGNORMDIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LOGNORMDIST.functionParameter.x.name',\n                detail: 'formula.functionList.LOGNORMDIST.functionParameter.x.detail',\n                example: '42',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LOGNORMDIST.functionParameter.mean.name',\n                detail: 'formula.functionList.LOGNORMDIST.functionParameter.mean.detail',\n                example: '40',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LOGNORMDIST.functionParameter.standardDev.name',\n                detail: 'formula.functionList.LOGNORMDIST.functionParameter.standardDev.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.MODE,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.MODE.description',\n        abstract: 'formula.functionList.MODE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MODE.functionParameter.number1.name',\n                detail: 'formula.functionList.MODE.functionParameter.number1.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MODE.functionParameter.number2.name',\n                detail: 'formula.functionList.MODE.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.NEGBINOMDIST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.NEGBINOMDIST.description',\n        abstract: 'formula.functionList.NEGBINOMDIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NEGBINOMDIST.functionParameter.numberF.name',\n                detail: 'formula.functionList.NEGBINOMDIST.functionParameter.numberF.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NEGBINOMDIST.functionParameter.numberS.name',\n                detail: 'formula.functionList.NEGBINOMDIST.functionParameter.numberS.detail',\n                example: '5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NEGBINOMDIST.functionParameter.probabilityS.name',\n                detail: 'formula.functionList.NEGBINOMDIST.functionParameter.probabilityS.detail',\n                example: '0.25',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.NORMDIST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.NORMDIST.description',\n        abstract: 'formula.functionList.NORMDIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NORMDIST.functionParameter.x.name',\n                detail: 'formula.functionList.NORMDIST.functionParameter.x.detail',\n                example: '42',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NORMDIST.functionParameter.mean.name',\n                detail: 'formula.functionList.NORMDIST.functionParameter.mean.detail',\n                example: '40',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NORMDIST.functionParameter.standardDev.name',\n                detail: 'formula.functionList.NORMDIST.functionParameter.standardDev.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NORMDIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.NORMDIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.NORMINV,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.NORMINV.description',\n        abstract: 'formula.functionList.NORMINV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NORMINV.functionParameter.probability.name',\n                detail: 'formula.functionList.NORMINV.functionParameter.probability.detail',\n                example: '0.908789',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NORMINV.functionParameter.mean.name',\n                detail: 'formula.functionList.NORMINV.functionParameter.mean.detail',\n                example: '40',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NORMINV.functionParameter.standardDev.name',\n                detail: 'formula.functionList.NORMINV.functionParameter.standardDev.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.NORMSDIST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.NORMSDIST.description',\n        abstract: 'formula.functionList.NORMSDIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NORMSDIST.functionParameter.z.name',\n                detail: 'formula.functionList.NORMSDIST.functionParameter.z.detail',\n                example: '1.333333',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.NORMSINV,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.NORMSINV.description',\n        abstract: 'formula.functionList.NORMSINV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NORMSINV.functionParameter.probability.name',\n                detail: 'formula.functionList.NORMSINV.functionParameter.probability.detail',\n                example: '0.908789',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.PERCENTILE,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.PERCENTILE.description',\n        abstract: 'formula.functionList.PERCENTILE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PERCENTILE.functionParameter.array.name',\n                detail: 'formula.functionList.PERCENTILE.functionParameter.array.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PERCENTILE.functionParameter.k.name',\n                detail: 'formula.functionList.PERCENTILE.functionParameter.k.detail',\n                example: '0.3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.PERCENTRANK,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.PERCENTRANK.description',\n        abstract: 'formula.functionList.PERCENTRANK.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PERCENTRANK.functionParameter.array.name',\n                detail: 'formula.functionList.PERCENTRANK.functionParameter.array.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PERCENTRANK.functionParameter.x.name',\n                detail: 'formula.functionList.PERCENTRANK.functionParameter.x.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PERCENTRANK.functionParameter.significance.name',\n                detail: 'formula.functionList.PERCENTRANK.functionParameter.significance.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.POISSON,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.POISSON.description',\n        abstract: 'formula.functionList.POISSON.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.POISSON.functionParameter.x.name',\n                detail: 'formula.functionList.POISSON.functionParameter.x.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.POISSON.functionParameter.mean.name',\n                detail: 'formula.functionList.POISSON.functionParameter.mean.detail',\n                example: '5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.POISSON.functionParameter.cumulative.name',\n                detail: 'formula.functionList.POISSON.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.QUARTILE,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.QUARTILE.description',\n        abstract: 'formula.functionList.QUARTILE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.QUARTILE.functionParameter.array.name',\n                detail: 'formula.functionList.QUARTILE.functionParameter.array.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.QUARTILE.functionParameter.quart.name',\n                detail: 'formula.functionList.QUARTILE.functionParameter.quart.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.RANK,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.RANK.description',\n        abstract: 'formula.functionList.RANK.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.RANK.functionParameter.number.name',\n                detail: 'formula.functionList.RANK.functionParameter.number.detail',\n                example: 'A3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RANK.functionParameter.ref.name',\n                detail: 'formula.functionList.RANK.functionParameter.ref.detail',\n                example: 'A2:A6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RANK.functionParameter.order.name',\n                detail: 'formula.functionList.RANK.functionParameter.order.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.STDEV,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.STDEV.description',\n        abstract: 'formula.functionList.STDEV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.STDEV.functionParameter.number1.name',\n                detail: 'formula.functionList.STDEV.functionParameter.number1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.STDEV.functionParameter.number2.name',\n                detail: 'formula.functionList.STDEV.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.STDEVP,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.STDEVP.description',\n        abstract: 'formula.functionList.STDEVP.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.STDEVP.functionParameter.number1.name',\n                detail: 'formula.functionList.STDEVP.functionParameter.number1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.STDEVP.functionParameter.number2.name',\n                detail: 'formula.functionList.STDEVP.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.TDIST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.TDIST.description',\n        abstract: 'formula.functionList.TDIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TDIST.functionParameter.x.name',\n                detail: 'formula.functionList.TDIST.functionParameter.x.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TDIST.functionParameter.degFreedom.name',\n                detail: 'formula.functionList.TDIST.functionParameter.degFreedom.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TDIST.functionParameter.tails.name',\n                detail: 'formula.functionList.TDIST.functionParameter.tails.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.TINV,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.TINV.description',\n        abstract: 'formula.functionList.TINV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TINV.functionParameter.probability.name',\n                detail: 'formula.functionList.TINV.functionParameter.probability.detail',\n                example: '0.75',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TINV.functionParameter.degFreedom.name',\n                detail: 'formula.functionList.TINV.functionParameter.degFreedom.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.TTEST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.TTEST.description',\n        abstract: 'formula.functionList.TTEST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TTEST.functionParameter.array1.name',\n                detail: 'formula.functionList.TTEST.functionParameter.array1.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TTEST.functionParameter.array2.name',\n                detail: 'formula.functionList.TTEST.functionParameter.array2.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TTEST.functionParameter.tails.name',\n                detail: 'formula.functionList.TTEST.functionParameter.tails.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TTEST.functionParameter.type.name',\n                detail: 'formula.functionList.TTEST.functionParameter.type.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.VAR,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.VAR.description',\n        abstract: 'formula.functionList.VAR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.VAR.functionParameter.number1.name',\n                detail: 'formula.functionList.VAR.functionParameter.number1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VAR.functionParameter.number2.name',\n                detail: 'formula.functionList.VAR.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.VARP,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.VARP.description',\n        abstract: 'formula.functionList.VARP.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.VARP.functionParameter.number1.name',\n                detail: 'formula.functionList.VARP.functionParameter.number1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VARP.functionParameter.number2.name',\n                detail: 'formula.functionList.VARP.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.WEIBULL,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.WEIBULL.description',\n        abstract: 'formula.functionList.WEIBULL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.WEIBULL.functionParameter.x.name',\n                detail: 'formula.functionList.WEIBULL.functionParameter.x.detail',\n                example: '105',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WEIBULL.functionParameter.alpha.name',\n                detail: 'formula.functionList.WEIBULL.functionParameter.alpha.detail',\n                example: '20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WEIBULL.functionParameter.beta.name',\n                detail: 'formula.functionList.WEIBULL.functionParameter.beta.detail',\n                example: '100',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WEIBULL.functionParameter.cumulative.name',\n                detail: 'formula.functionList.WEIBULL.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_COMPATIBILITY.ZTEST,\n        functionType: FunctionType.Compatibility,\n        description: 'formula.functionList.ZTEST.description',\n        abstract: 'formula.functionList.ZTEST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ZTEST.functionParameter.array.name',\n                detail: 'formula.functionList.ZTEST.functionParameter.array.detail',\n                example: 'A2:A11',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ZTEST.functionParameter.x.name',\n                detail: 'formula.functionList.ZTEST.functionParameter.x.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ZTEST.functionParameter.sigma.name',\n                detail: 'formula.functionList.ZTEST.functionParameter.sigma.detail',\n                example: '10',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FUNCTION_NAMES_CUBE, FunctionType, type IFunctionInfo } from '@univerjs/engine-formula';\n\nexport const FUNCTION_LIST_CUBE: IFunctionInfo[] = [\n    {\n        functionName: FUNCTION_NAMES_CUBE.CUBEKPIMEMBER,\n        functionType: FunctionType.Cube,\n        description: 'formula.functionList.CUBEKPIMEMBER.description',\n        abstract: 'formula.functionList.CUBEKPIMEMBER.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CUBEKPIMEMBER.functionParameter.number1.name',\n                detail: 'formula.functionList.CUBEKPIMEMBER.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUBEKPIMEMBER.functionParameter.number2.name',\n                detail: 'formula.functionList.CUBEKPIMEMBER.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_CUBE.CUBEMEMBER,\n        functionType: FunctionType.Cube,\n        description: 'formula.functionList.CUBEMEMBER.description',\n        abstract: 'formula.functionList.CUBEMEMBER.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CUBEMEMBER.functionParameter.number1.name',\n                detail: 'formula.functionList.CUBEMEMBER.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUBEMEMBER.functionParameter.number2.name',\n                detail: 'formula.functionList.CUBEMEMBER.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_CUBE.CUBEMEMBERPROPERTY,\n        functionType: FunctionType.Cube,\n        description: 'formula.functionList.CUBEMEMBERPROPERTY.description',\n        abstract: 'formula.functionList.CUBEMEMBERPROPERTY.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CUBEMEMBERPROPERTY.functionParameter.number1.name',\n                detail: 'formula.functionList.CUBEMEMBERPROPERTY.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUBEMEMBERPROPERTY.functionParameter.number2.name',\n                detail: 'formula.functionList.CUBEMEMBERPROPERTY.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_CUBE.CUBERANKEDMEMBER,\n        functionType: FunctionType.Cube,\n        description: 'formula.functionList.CUBERANKEDMEMBER.description',\n        abstract: 'formula.functionList.CUBERANKEDMEMBER.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CUBERANKEDMEMBER.functionParameter.number1.name',\n                detail: 'formula.functionList.CUBERANKEDMEMBER.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUBERANKEDMEMBER.functionParameter.number2.name',\n                detail: 'formula.functionList.CUBERANKEDMEMBER.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_CUBE.CUBESET,\n        functionType: FunctionType.Cube,\n        description: 'formula.functionList.CUBESET.description',\n        abstract: 'formula.functionList.CUBESET.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CUBESET.functionParameter.number1.name',\n                detail: 'formula.functionList.CUBESET.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUBESET.functionParameter.number2.name',\n                detail: 'formula.functionList.CUBESET.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_CUBE.CUBESETCOUNT,\n        functionType: FunctionType.Cube,\n        description: 'formula.functionList.CUBESETCOUNT.description',\n        abstract: 'formula.functionList.CUBESETCOUNT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CUBESETCOUNT.functionParameter.number1.name',\n                detail: 'formula.functionList.CUBESETCOUNT.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUBESETCOUNT.functionParameter.number2.name',\n                detail: 'formula.functionList.CUBESETCOUNT.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_CUBE.CUBEVALUE,\n        functionType: FunctionType.Cube,\n        description: 'formula.functionList.CUBEVALUE.description',\n        abstract: 'formula.functionList.CUBEVALUE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CUBEVALUE.functionParameter.number1.name',\n                detail: 'formula.functionList.CUBEVALUE.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUBEVALUE.functionParameter.number2.name',\n                detail: 'formula.functionList.CUBEVALUE.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FUNCTION_NAMES_DATABASE, FunctionType, type IFunctionInfo } from '@univerjs/engine-formula';\n\nexport const FUNCTION_LIST_DATABASE: IFunctionInfo[] = [\n    {\n        functionName: FUNCTION_NAMES_DATABASE.DAVERAGE,\n        functionType: FunctionType.Database,\n        description: 'formula.functionList.DAVERAGE.description',\n        abstract: 'formula.functionList.DAVERAGE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DAVERAGE.functionParameter.database.name',\n                detail: 'formula.functionList.DAVERAGE.functionParameter.database.detail',\n                example: 'A4:E10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DAVERAGE.functionParameter.field.name',\n                detail: 'formula.functionList.DAVERAGE.functionParameter.field.detail',\n                example: 'D4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DAVERAGE.functionParameter.criteria.name',\n                detail: 'formula.functionList.DAVERAGE.functionParameter.criteria.detail',\n                example: 'A1:B2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATABASE.DCOUNT,\n        functionType: FunctionType.Database,\n        description: 'formula.functionList.DCOUNT.description',\n        abstract: 'formula.functionList.DCOUNT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DCOUNT.functionParameter.database.name',\n                detail: 'formula.functionList.DCOUNT.functionParameter.database.detail',\n                example: 'A4:E10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DCOUNT.functionParameter.field.name',\n                detail: 'formula.functionList.DCOUNT.functionParameter.field.detail',\n                example: 'D4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DCOUNT.functionParameter.criteria.name',\n                detail: 'formula.functionList.DCOUNT.functionParameter.criteria.detail',\n                example: 'A1:B2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATABASE.DCOUNTA,\n        functionType: FunctionType.Database,\n        description: 'formula.functionList.DCOUNTA.description',\n        abstract: 'formula.functionList.DCOUNTA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DCOUNTA.functionParameter.database.name',\n                detail: 'formula.functionList.DCOUNTA.functionParameter.database.detail',\n                example: 'A4:E10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DCOUNTA.functionParameter.field.name',\n                detail: 'formula.functionList.DCOUNTA.functionParameter.field.detail',\n                example: 'D4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DCOUNTA.functionParameter.criteria.name',\n                detail: 'formula.functionList.DCOUNTA.functionParameter.criteria.detail',\n                example: 'A1:B2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATABASE.DGET,\n        functionType: FunctionType.Database,\n        description: 'formula.functionList.DGET.description',\n        abstract: 'formula.functionList.DGET.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DGET.functionParameter.database.name',\n                detail: 'formula.functionList.DGET.functionParameter.database.detail',\n                example: 'A4:E10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DGET.functionParameter.field.name',\n                detail: 'formula.functionList.DGET.functionParameter.field.detail',\n                example: 'D4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DGET.functionParameter.criteria.name',\n                detail: 'formula.functionList.DGET.functionParameter.criteria.detail',\n                example: 'A1:B2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATABASE.DMAX,\n        functionType: FunctionType.Database,\n        description: 'formula.functionList.DMAX.description',\n        abstract: 'formula.functionList.DMAX.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DMAX.functionParameter.database.name',\n                detail: 'formula.functionList.DMAX.functionParameter.database.detail',\n                example: 'A4:E10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DMAX.functionParameter.field.name',\n                detail: 'formula.functionList.DMAX.functionParameter.field.detail',\n                example: 'D4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DMAX.functionParameter.criteria.name',\n                detail: 'formula.functionList.DMAX.functionParameter.criteria.detail',\n                example: 'A1:B2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATABASE.DMIN,\n        functionType: FunctionType.Database,\n        description: 'formula.functionList.DMIN.description',\n        abstract: 'formula.functionList.DMIN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DMIN.functionParameter.database.name',\n                detail: 'formula.functionList.DMIN.functionParameter.database.detail',\n                example: 'A4:E10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DMIN.functionParameter.field.name',\n                detail: 'formula.functionList.DMIN.functionParameter.field.detail',\n                example: 'D4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DMIN.functionParameter.criteria.name',\n                detail: 'formula.functionList.DMIN.functionParameter.criteria.detail',\n                example: 'A1:B2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATABASE.DPRODUCT,\n        functionType: FunctionType.Database,\n        description: 'formula.functionList.DPRODUCT.description',\n        abstract: 'formula.functionList.DPRODUCT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DPRODUCT.functionParameter.database.name',\n                detail: 'formula.functionList.DPRODUCT.functionParameter.database.detail',\n                example: 'A4:E10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DPRODUCT.functionParameter.field.name',\n                detail: 'formula.functionList.DPRODUCT.functionParameter.field.detail',\n                example: 'D4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DPRODUCT.functionParameter.criteria.name',\n                detail: 'formula.functionList.DPRODUCT.functionParameter.criteria.detail',\n                example: 'A1:B2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATABASE.DSTDEV,\n        functionType: FunctionType.Database,\n        description: 'formula.functionList.DSTDEV.description',\n        abstract: 'formula.functionList.DSTDEV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DSTDEV.functionParameter.database.name',\n                detail: 'formula.functionList.DSTDEV.functionParameter.database.detail',\n                example: 'A4:E10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DSTDEV.functionParameter.field.name',\n                detail: 'formula.functionList.DSTDEV.functionParameter.field.detail',\n                example: 'D4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DSTDEV.functionParameter.criteria.name',\n                detail: 'formula.functionList.DSTDEV.functionParameter.criteria.detail',\n                example: 'A1:B2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATABASE.DSTDEVP,\n        functionType: FunctionType.Database,\n        description: 'formula.functionList.DSTDEVP.description',\n        abstract: 'formula.functionList.DSTDEVP.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DSTDEVP.functionParameter.database.name',\n                detail: 'formula.functionList.DSTDEVP.functionParameter.database.detail',\n                example: 'A4:E10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DSTDEVP.functionParameter.field.name',\n                detail: 'formula.functionList.DSTDEVP.functionParameter.field.detail',\n                example: 'D4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DSTDEVP.functionParameter.criteria.name',\n                detail: 'formula.functionList.DSTDEVP.functionParameter.criteria.detail',\n                example: 'A1:B2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATABASE.DSUM,\n        functionType: FunctionType.Database,\n        description: 'formula.functionList.DSUM.description',\n        abstract: 'formula.functionList.DSUM.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DSUM.functionParameter.database.name',\n                detail: 'formula.functionList.DSUM.functionParameter.database.detail',\n                example: 'A4:E10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DSUM.functionParameter.field.name',\n                detail: 'formula.functionList.DSUM.functionParameter.field.detail',\n                example: 'D4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DSUM.functionParameter.criteria.name',\n                detail: 'formula.functionList.DSUM.functionParameter.criteria.detail',\n                example: 'A1:B2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATABASE.DVAR,\n        functionType: FunctionType.Database,\n        description: 'formula.functionList.DVAR.description',\n        abstract: 'formula.functionList.DVAR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DVAR.functionParameter.database.name',\n                detail: 'formula.functionList.DVAR.functionParameter.database.detail',\n                example: 'A4:E10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DVAR.functionParameter.field.name',\n                detail: 'formula.functionList.DVAR.functionParameter.field.detail',\n                example: 'D4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DVAR.functionParameter.criteria.name',\n                detail: 'formula.functionList.DVAR.functionParameter.criteria.detail',\n                example: 'A1:B2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATABASE.DVARP,\n        functionType: FunctionType.Database,\n        description: 'formula.functionList.DVARP.description',\n        abstract: 'formula.functionList.DVARP.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DVARP.functionParameter.database.name',\n                detail: 'formula.functionList.DVARP.functionParameter.database.detail',\n                example: 'A4:E10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DVARP.functionParameter.field.name',\n                detail: 'formula.functionList.DVARP.functionParameter.field.detail',\n                example: 'D4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DVARP.functionParameter.criteria.name',\n                detail: 'formula.functionList.DVARP.functionParameter.criteria.detail',\n                example: 'A1:B2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FUNCTION_NAMES_DATE, FunctionType, type IFunctionInfo } from '@univerjs/engine-formula';\n\nexport const FUNCTION_LIST_DATE: IFunctionInfo[] = [\n    {\n        functionName: FUNCTION_NAMES_DATE.DATE,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.DATE.description',\n        abstract: 'formula.functionList.DATE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DATE.functionParameter.year.name',\n                detail: 'formula.functionList.DATE.functionParameter.year.detail',\n                example: '2024',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DATE.functionParameter.month.name',\n                detail: 'formula.functionList.DATE.functionParameter.month.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DATE.functionParameter.day.name',\n                detail: 'formula.functionList.DATE.functionParameter.day.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.DATEDIF,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.DATEDIF.description',\n        abstract: 'formula.functionList.DATEDIF.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DATEDIF.functionParameter.startDate.name',\n                detail: 'formula.functionList.DATEDIF.functionParameter.startDate.detail',\n                example: '\"2001-6-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DATEDIF.functionParameter.endDate.name',\n                detail: 'formula.functionList.DATEDIF.functionParameter.endDate.detail',\n                example: '\"2002-8-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DATEDIF.functionParameter.method.name',\n                detail: 'formula.functionList.DATEDIF.functionParameter.method.detail',\n                example: '\"D\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.DATEVALUE,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.DATEVALUE.description',\n        abstract: 'formula.functionList.DATEVALUE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DATEVALUE.functionParameter.dateText.name',\n                detail: 'formula.functionList.DATEVALUE.functionParameter.dateText.detail',\n                example: '\"2024-8-8\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.DAY,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.DAY.description',\n        abstract: 'formula.functionList.DAY.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DAY.functionParameter.serialNumber.name',\n                detail: 'formula.functionList.DAY.functionParameter.serialNumber.detail',\n                example: '\"1969-7-20\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.DAYS,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.DAYS.description',\n        abstract: 'formula.functionList.DAYS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DAYS.functionParameter.endDate.name',\n                detail: 'formula.functionList.DAYS.functionParameter.endDate.detail',\n                example: '\"2021-12-31\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DAYS.functionParameter.startDate.name',\n                detail: 'formula.functionList.DAYS.functionParameter.startDate.detail',\n                example: '\"2021-1-1\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.DAYS360,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.DAYS360.description',\n        abstract: 'formula.functionList.DAYS360.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DAYS360.functionParameter.startDate.name',\n                detail: 'formula.functionList.DAYS360.functionParameter.startDate.detail',\n                example: '\"2021-1-29\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DAYS360.functionParameter.endDate.name',\n                detail: 'formula.functionList.DAYS360.functionParameter.endDate.detail',\n                example: '\"2021-3-31\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DAYS360.functionParameter.method.name',\n                detail: 'formula.functionList.DAYS360.functionParameter.method.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.EDATE,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.EDATE.description',\n        abstract: 'formula.functionList.EDATE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.EDATE.functionParameter.startDate.name',\n                detail: 'formula.functionList.EDATE.functionParameter.startDate.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.EDATE.functionParameter.months.name',\n                detail: 'formula.functionList.EDATE.functionParameter.months.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.EOMONTH,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.EOMONTH.description',\n        abstract: 'formula.functionList.EOMONTH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.EOMONTH.functionParameter.startDate.name',\n                detail: 'formula.functionList.EOMONTH.functionParameter.startDate.detail',\n                example: '\"2011-1-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.EOMONTH.functionParameter.months.name',\n                detail: 'formula.functionList.EOMONTH.functionParameter.months.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.EPOCHTODATE,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.EPOCHTODATE.description',\n        abstract: 'formula.functionList.EPOCHTODATE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.EPOCHTODATE.functionParameter.timestamp.name',\n                detail: 'formula.functionList.EPOCHTODATE.functionParameter.timestamp.detail',\n                example: '1655906710',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.EPOCHTODATE.functionParameter.unit.name',\n                detail: 'formula.functionList.EPOCHTODATE.functionParameter.unit.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.HOUR,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.HOUR.description',\n        abstract: 'formula.functionList.HOUR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.HOUR.functionParameter.serialNumber.name',\n                detail: 'formula.functionList.HOUR.functionParameter.serialNumber.detail',\n                example: '\"2011-7-18 7:45\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.ISOWEEKNUM,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.ISOWEEKNUM.description',\n        abstract: 'formula.functionList.ISOWEEKNUM.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISOWEEKNUM.functionParameter.date.name',\n                detail: 'formula.functionList.ISOWEEKNUM.functionParameter.date.detail',\n                example: '\"2012-3-9\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.MINUTE,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.MINUTE.description',\n        abstract: 'formula.functionList.MINUTE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MINUTE.functionParameter.serialNumber.name',\n                detail: 'formula.functionList.MINUTE.functionParameter.serialNumber.detail',\n                example: '\"12:45\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.MONTH,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.MONTH.description',\n        abstract: 'formula.functionList.MONTH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MONTH.functionParameter.serialNumber.name',\n                detail: 'formula.functionList.MONTH.functionParameter.serialNumber.detail',\n                example: '\"1969-7-20\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.NETWORKDAYS,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.NETWORKDAYS.description',\n        abstract: 'formula.functionList.NETWORKDAYS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NETWORKDAYS.functionParameter.startDate.name',\n                detail: 'formula.functionList.NETWORKDAYS.functionParameter.startDate.detail',\n                example: '\"2012-10-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NETWORKDAYS.functionParameter.endDate.name',\n                detail: 'formula.functionList.NETWORKDAYS.functionParameter.endDate.detail',\n                example: '\"2013-3-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NETWORKDAYS.functionParameter.holidays.name',\n                detail: 'formula.functionList.NETWORKDAYS.functionParameter.holidays.detail',\n                example: '\"2012-11-22\"',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.NETWORKDAYS_INTL,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.NETWORKDAYS_INTL.description',\n        abstract: 'formula.functionList.NETWORKDAYS_INTL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NETWORKDAYS_INTL.functionParameter.startDate.name',\n                detail: 'formula.functionList.NETWORKDAYS_INTL.functionParameter.startDate.detail',\n                example: '\"2012-10-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NETWORKDAYS_INTL.functionParameter.endDate.name',\n                detail: 'formula.functionList.NETWORKDAYS_INTL.functionParameter.endDate.detail',\n                example: '\"2013-3-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NETWORKDAYS_INTL.functionParameter.weekend.name',\n                detail: 'formula.functionList.NETWORKDAYS_INTL.functionParameter.weekend.detail',\n                example: '6',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NETWORKDAYS_INTL.functionParameter.holidays.name',\n                detail: 'formula.functionList.NETWORKDAYS_INTL.functionParameter.holidays.detail',\n                example: '\"2012-11-22\"',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.NOW,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.NOW.description',\n        abstract: 'formula.functionList.NOW.abstract',\n        functionParameter: [\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.SECOND,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.SECOND.description',\n        abstract: 'formula.functionList.SECOND.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SECOND.functionParameter.serialNumber.name',\n                detail: 'formula.functionList.SECOND.functionParameter.serialNumber.detail',\n                example: '\"4:48:18\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.TIME,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.TIME.description',\n        abstract: 'formula.functionList.TIME.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TIME.functionParameter.hour.name',\n                detail: 'formula.functionList.TIME.functionParameter.hour.detail',\n                example: '15',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TIME.functionParameter.minute.name',\n                detail: 'formula.functionList.TIME.functionParameter.minute.detail',\n                example: '20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TIME.functionParameter.second.name',\n                detail: 'formula.functionList.TIME.functionParameter.second.detail',\n                example: '59',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.TIMEVALUE,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.TIMEVALUE.description',\n        abstract: 'formula.functionList.TIMEVALUE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TIMEVALUE.functionParameter.timeText.name',\n                detail: 'formula.functionList.TIMEVALUE.functionParameter.timeText.detail',\n                example: '\"15:20:59\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.TO_DATE,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.TO_DATE.description',\n        abstract: 'formula.functionList.TO_DATE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TO_DATE.functionParameter.value.name',\n                detail: 'formula.functionList.TO_DATE.functionParameter.value.detail',\n                example: '40826.4375',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.TODAY,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.TODAY.description',\n        abstract: 'formula.functionList.TODAY.abstract',\n        functionParameter: [\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.WEEKDAY,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.WEEKDAY.description',\n        abstract: 'formula.functionList.WEEKDAY.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.WEEKDAY.functionParameter.serialNumber.name',\n                detail: 'formula.functionList.WEEKDAY.functionParameter.serialNumber.detail',\n                example: '\"2008-2-14\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WEEKDAY.functionParameter.returnType.name',\n                detail: 'formula.functionList.WEEKDAY.functionParameter.returnType.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.WEEKNUM,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.WEEKNUM.description',\n        abstract: 'formula.functionList.WEEKNUM.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.WEEKNUM.functionParameter.serialNumber.name',\n                detail: 'formula.functionList.WEEKNUM.functionParameter.serialNumber.detail',\n                example: '\"2012-3-9\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WEEKNUM.functionParameter.returnType.name',\n                detail: 'formula.functionList.WEEKNUM.functionParameter.returnType.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.WORKDAY,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.WORKDAY.description',\n        abstract: 'formula.functionList.WORKDAY.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.WORKDAY.functionParameter.startDate.name',\n                detail: 'formula.functionList.WORKDAY.functionParameter.startDate.detail',\n                example: '\"2008-10-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WORKDAY.functionParameter.days.name',\n                detail: 'formula.functionList.WORKDAY.functionParameter.days.detail',\n                example: '151',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WORKDAY.functionParameter.holidays.name',\n                detail: 'formula.functionList.WORKDAY.functionParameter.holidays.detail',\n                example: '\"2008-11-26\"',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.WORKDAY_INTL,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.WORKDAY_INTL.description',\n        abstract: 'formula.functionList.WORKDAY_INTL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.WORKDAY_INTL.functionParameter.startDate.name',\n                detail: 'formula.functionList.WORKDAY_INTL.functionParameter.startDate.detail',\n                example: '\"2008-10-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WORKDAY_INTL.functionParameter.days.name',\n                detail: 'formula.functionList.WORKDAY_INTL.functionParameter.days.detail',\n                example: '151',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WORKDAY_INTL.functionParameter.weekend.name',\n                detail: 'formula.functionList.WORKDAY_INTL.functionParameter.weekend.detail',\n                example: '6',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WORKDAY_INTL.functionParameter.holidays.name',\n                detail: 'formula.functionList.WORKDAY_INTL.functionParameter.holidays.detail',\n                example: '\"2008-11-26\"',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.YEAR,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.YEAR.description',\n        abstract: 'formula.functionList.YEAR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.YEAR.functionParameter.serialNumber.name',\n                detail: 'formula.functionList.YEAR.functionParameter.serialNumber.detail',\n                example: '\"1969-7-20\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_DATE.YEARFRAC,\n        functionType: FunctionType.Date,\n        description: 'formula.functionList.YEARFRAC.description',\n        abstract: 'formula.functionList.YEARFRAC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.YEARFRAC.functionParameter.startDate.name',\n                detail: 'formula.functionList.YEARFRAC.functionParameter.startDate.detail',\n                example: '\"2012-1-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YEARFRAC.functionParameter.endDate.name',\n                detail: 'formula.functionList.YEARFRAC.functionParameter.endDate.detail',\n                example: '\"2012-7-30\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YEARFRAC.functionParameter.basis.name',\n                detail: 'formula.functionList.YEARFRAC.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FUNCTION_NAMES_ENGINEERING, FunctionType, type IFunctionInfo } from '@univerjs/engine-formula';\n\nexport const FUNCTION_LIST_ENGINEERING: IFunctionInfo[] = [\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.BESSELI,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.BESSELI.description',\n        abstract: 'formula.functionList.BESSELI.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BESSELI.functionParameter.x.name',\n                detail: 'formula.functionList.BESSELI.functionParameter.x.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BESSELI.functionParameter.n.name',\n                detail: 'formula.functionList.BESSELI.functionParameter.n.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.BESSELJ,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.BESSELJ.description',\n        abstract: 'formula.functionList.BESSELJ.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BESSELJ.functionParameter.x.name',\n                detail: 'formula.functionList.BESSELJ.functionParameter.x.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BESSELJ.functionParameter.n.name',\n                detail: 'formula.functionList.BESSELJ.functionParameter.n.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.BESSELK,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.BESSELK.description',\n        abstract: 'formula.functionList.BESSELK.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BESSELK.functionParameter.x.name',\n                detail: 'formula.functionList.BESSELK.functionParameter.x.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BESSELK.functionParameter.n.name',\n                detail: 'formula.functionList.BESSELK.functionParameter.n.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.BESSELY,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.BESSELY.description',\n        abstract: 'formula.functionList.BESSELY.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BESSELY.functionParameter.x.name',\n                detail: 'formula.functionList.BESSELY.functionParameter.x.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BESSELY.functionParameter.n.name',\n                detail: 'formula.functionList.BESSELY.functionParameter.n.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.BIN2DEC,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.BIN2DEC.description',\n        abstract: 'formula.functionList.BIN2DEC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BIN2DEC.functionParameter.number.name',\n                detail: 'formula.functionList.BIN2DEC.functionParameter.number.detail',\n                example: '1100100',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.BIN2HEX,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.BIN2HEX.description',\n        abstract: 'formula.functionList.BIN2HEX.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BIN2HEX.functionParameter.number.name',\n                detail: 'formula.functionList.BIN2HEX.functionParameter.number.detail',\n                example: '11111011',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BIN2HEX.functionParameter.places.name',\n                detail: 'formula.functionList.BIN2HEX.functionParameter.places.detail',\n                example: '4',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.BIN2OCT,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.BIN2OCT.description',\n        abstract: 'formula.functionList.BIN2OCT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BIN2OCT.functionParameter.number.name',\n                detail: 'formula.functionList.BIN2OCT.functionParameter.number.detail',\n                example: '1001',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BIN2OCT.functionParameter.places.name',\n                detail: 'formula.functionList.BIN2OCT.functionParameter.places.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.BITAND,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.BITAND.description',\n        abstract: 'formula.functionList.BITAND.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BITAND.functionParameter.number1.name',\n                detail: 'formula.functionList.BITAND.functionParameter.number1.detail',\n                example: '13',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BITAND.functionParameter.number2.name',\n                detail: 'formula.functionList.BITAND.functionParameter.number2.detail',\n                example: '25',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.BITLSHIFT,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.BITLSHIFT.description',\n        abstract: 'formula.functionList.BITLSHIFT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BITLSHIFT.functionParameter.number.name',\n                detail: 'formula.functionList.BITLSHIFT.functionParameter.number.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BITLSHIFT.functionParameter.shiftAmount.name',\n                detail: 'formula.functionList.BITLSHIFT.functionParameter.shiftAmount.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.BITOR,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.BITOR.description',\n        abstract: 'formula.functionList.BITOR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BITOR.functionParameter.number1.name',\n                detail: 'formula.functionList.BITOR.functionParameter.number1.detail',\n                example: '23',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BITOR.functionParameter.number2.name',\n                detail: 'formula.functionList.BITOR.functionParameter.number2.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.BITRSHIFT,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.BITRSHIFT.description',\n        abstract: 'formula.functionList.BITRSHIFT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BITRSHIFT.functionParameter.number.name',\n                detail: 'formula.functionList.BITRSHIFT.functionParameter.number.detail',\n                example: '13',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BITRSHIFT.functionParameter.shiftAmount.name',\n                detail: 'formula.functionList.BITRSHIFT.functionParameter.shiftAmount.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.BITXOR,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.BITXOR.description',\n        abstract: 'formula.functionList.BITXOR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BITXOR.functionParameter.number1.name',\n                detail: 'formula.functionList.BITXOR.functionParameter.number1.detail',\n                example: '5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BITXOR.functionParameter.number2.name',\n                detail: 'formula.functionList.BITXOR.functionParameter.number2.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.COMPLEX,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.COMPLEX.description',\n        abstract: 'formula.functionList.COMPLEX.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COMPLEX.functionParameter.realNum.name',\n                detail: 'formula.functionList.COMPLEX.functionParameter.realNum.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COMPLEX.functionParameter.iNum.name',\n                detail: 'formula.functionList.COMPLEX.functionParameter.iNum.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COMPLEX.functionParameter.suffix.name',\n                detail: 'formula.functionList.COMPLEX.functionParameter.suffix.detail',\n                example: '\"i\"',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.CONVERT,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.CONVERT.description',\n        abstract: 'formula.functionList.CONVERT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CONVERT.functionParameter.number.name',\n                detail: 'formula.functionList.CONVERT.functionParameter.number.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CONVERT.functionParameter.fromUnit.name',\n                detail: 'formula.functionList.CONVERT.functionParameter.fromUnit.detail',\n                example: '\"lbm\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CONVERT.functionParameter.toUnit.name',\n                detail: 'formula.functionList.CONVERT.functionParameter.toUnit.detail',\n                example: '\"kg\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.DEC2BIN,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.DEC2BIN.description',\n        abstract: 'formula.functionList.DEC2BIN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DEC2BIN.functionParameter.number.name',\n                detail: 'formula.functionList.DEC2BIN.functionParameter.number.detail',\n                example: '9',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DEC2BIN.functionParameter.places.name',\n                detail: 'formula.functionList.DEC2BIN.functionParameter.places.detail',\n                example: '4',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.DEC2HEX,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.DEC2HEX.description',\n        abstract: 'formula.functionList.DEC2HEX.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DEC2HEX.functionParameter.number.name',\n                detail: 'formula.functionList.DEC2HEX.functionParameter.number.detail',\n                example: '100',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DEC2HEX.functionParameter.places.name',\n                detail: 'formula.functionList.DEC2HEX.functionParameter.places.detail',\n                example: '4',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.DEC2OCT,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.DEC2OCT.description',\n        abstract: 'formula.functionList.DEC2OCT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DEC2OCT.functionParameter.number.name',\n                detail: 'formula.functionList.DEC2OCT.functionParameter.number.detail',\n                example: '58',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DEC2OCT.functionParameter.places.name',\n                detail: 'formula.functionList.DEC2OCT.functionParameter.places.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.DELTA,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.DELTA.description',\n        abstract: 'formula.functionList.DELTA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DELTA.functionParameter.number1.name',\n                detail: 'formula.functionList.DELTA.functionParameter.number1.detail',\n                example: '5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DELTA.functionParameter.number2.name',\n                detail: 'formula.functionList.DELTA.functionParameter.number2.detail',\n                example: '4',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.ERF,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.ERF.description',\n        abstract: 'formula.functionList.ERF.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ERF.functionParameter.lowerLimit.name',\n                detail: 'formula.functionList.ERF.functionParameter.lowerLimit.detail',\n                example: '0.745',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ERF.functionParameter.upperLimit.name',\n                detail: 'formula.functionList.ERF.functionParameter.upperLimit.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.ERF_PRECISE,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.ERF_PRECISE.description',\n        abstract: 'formula.functionList.ERF_PRECISE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ERF_PRECISE.functionParameter.x.name',\n                detail: 'formula.functionList.ERF_PRECISE.functionParameter.x.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.ERFC,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.ERFC.description',\n        abstract: 'formula.functionList.ERFC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ERFC.functionParameter.x.name',\n                detail: 'formula.functionList.ERFC.functionParameter.x.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.ERFC_PRECISE,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.ERFC_PRECISE.description',\n        abstract: 'formula.functionList.ERFC_PRECISE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ERFC_PRECISE.functionParameter.x.name',\n                detail: 'formula.functionList.ERFC_PRECISE.functionParameter.x.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.GESTEP,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.GESTEP.description',\n        abstract: 'formula.functionList.GESTEP.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.GESTEP.functionParameter.number.name',\n                detail: 'formula.functionList.GESTEP.functionParameter.number.detail',\n                example: '5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GESTEP.functionParameter.step.name',\n                detail: 'formula.functionList.GESTEP.functionParameter.step.detail',\n                example: '4',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.HEX2BIN,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.HEX2BIN.description',\n        abstract: 'formula.functionList.HEX2BIN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.HEX2BIN.functionParameter.number.name',\n                detail: 'formula.functionList.HEX2BIN.functionParameter.number.detail',\n                example: '\"F\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.HEX2BIN.functionParameter.places.name',\n                detail: 'formula.functionList.HEX2BIN.functionParameter.places.detail',\n                example: '8',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.HEX2DEC,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.HEX2DEC.description',\n        abstract: 'formula.functionList.HEX2DEC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.HEX2DEC.functionParameter.number.name',\n                detail: 'formula.functionList.HEX2DEC.functionParameter.number.detail',\n                example: '\"A5\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.HEX2OCT,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.HEX2OCT.description',\n        abstract: 'formula.functionList.HEX2OCT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.HEX2OCT.functionParameter.number.name',\n                detail: 'formula.functionList.HEX2OCT.functionParameter.number.detail',\n                example: '\"F\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.HEX2OCT.functionParameter.places.name',\n                detail: 'formula.functionList.HEX2OCT.functionParameter.places.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMABS,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMABS.description',\n        abstract: 'formula.functionList.IMABS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMABS.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMABS.functionParameter.inumber.detail',\n                example: '\"5+12i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMAGINARY,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMAGINARY.description',\n        abstract: 'formula.functionList.IMAGINARY.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMAGINARY.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMAGINARY.functionParameter.inumber.detail',\n                example: '\"3+4i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMARGUMENT,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMARGUMENT.description',\n        abstract: 'formula.functionList.IMARGUMENT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMARGUMENT.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMARGUMENT.functionParameter.inumber.detail',\n                example: '\"3+4i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMCONJUGATE,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMCONJUGATE.description',\n        abstract: 'formula.functionList.IMCONJUGATE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMCONJUGATE.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMCONJUGATE.functionParameter.inumber.detail',\n                example: '\"3+4i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMCOS,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMCOS.description',\n        abstract: 'formula.functionList.IMCOS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMCOS.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMCOS.functionParameter.inumber.detail',\n                example: '\"1+i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMCOSH,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMCOSH.description',\n        abstract: 'formula.functionList.IMCOSH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMCOSH.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMCOSH.functionParameter.inumber.detail',\n                example: '\"4+3i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMCOT,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMCOT.description',\n        abstract: 'formula.functionList.IMCOT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMCOT.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMCOT.functionParameter.inumber.detail',\n                example: '\"4+3i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMCOTH,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMCOTH.description',\n        abstract: 'formula.functionList.IMCOTH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMCOTH.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMCOTH.functionParameter.inumber.detail',\n                example: '\"4+3i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMCSC,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMCSC.description',\n        abstract: 'formula.functionList.IMCSC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMCSC.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMCSC.functionParameter.inumber.detail',\n                example: '\"4+3i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMCSCH,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMCSCH.description',\n        abstract: 'formula.functionList.IMCSCH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMCSCH.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMCSCH.functionParameter.inumber.detail',\n                example: '\"4+3i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMDIV,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMDIV.description',\n        abstract: 'formula.functionList.IMDIV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMDIV.functionParameter.inumber1.name',\n                detail: 'formula.functionList.IMDIV.functionParameter.inumber1.detail',\n                example: '\"-238+240i\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IMDIV.functionParameter.inumber2.name',\n                detail: 'formula.functionList.IMDIV.functionParameter.inumber2.detail',\n                example: '\"10+24i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMEXP,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMEXP.description',\n        abstract: 'formula.functionList.IMEXP.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMEXP.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMEXP.functionParameter.inumber.detail',\n                example: '\"1+i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMLN,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMLN.description',\n        abstract: 'formula.functionList.IMLN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMLN.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMLN.functionParameter.inumber.detail',\n                example: '\"3+4i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMLOG,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMLOG.description',\n        abstract: 'formula.functionList.IMLOG.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMLOG.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMLOG.functionParameter.inumber.detail',\n                example: '\"3+4i\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IMLOG.functionParameter.base.name',\n                detail: 'formula.functionList.IMLOG.functionParameter.base.detail',\n                example: '10',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMLOG10,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMLOG10.description',\n        abstract: 'formula.functionList.IMLOG10.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMLOG10.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMLOG10.functionParameter.inumber.detail',\n                example: '\"3+4i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMLOG2,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMLOG2.description',\n        abstract: 'formula.functionList.IMLOG2.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMLOG2.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMLOG2.functionParameter.inumber.detail',\n                example: '\"3+4i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMPOWER,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMPOWER.description',\n        abstract: 'formula.functionList.IMPOWER.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMPOWER.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMPOWER.functionParameter.inumber.detail',\n                example: '\"2+3i\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IMPOWER.functionParameter.number.name',\n                detail: 'formula.functionList.IMPOWER.functionParameter.number.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMPRODUCT,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMPRODUCT.description',\n        abstract: 'formula.functionList.IMPRODUCT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMPRODUCT.functionParameter.inumber1.name',\n                detail: 'formula.functionList.IMPRODUCT.functionParameter.inumber1.detail',\n                example: '\"3+4i\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IMPRODUCT.functionParameter.inumber2.name',\n                detail: 'formula.functionList.IMPRODUCT.functionParameter.inumber2.detail',\n                example: '\"5-3i\"',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMREAL,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMREAL.description',\n        abstract: 'formula.functionList.IMREAL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMREAL.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMREAL.functionParameter.inumber.detail',\n                example: '\"6-9i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMSEC,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMSEC.description',\n        abstract: 'formula.functionList.IMSEC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMSEC.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMSEC.functionParameter.inumber.detail',\n                example: '\"4+3i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMSECH,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMSECH.description',\n        abstract: 'formula.functionList.IMSECH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMSECH.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMSECH.functionParameter.inumber.detail',\n                example: '\"4+3i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMSIN,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMSIN.description',\n        abstract: 'formula.functionList.IMSIN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMSIN.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMSIN.functionParameter.inumber.detail',\n                example: '\"4+3i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMSINH,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMSINH.description',\n        abstract: 'formula.functionList.IMSINH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMSINH.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMSINH.functionParameter.inumber.detail',\n                example: '\"4+3i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMSQRT,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMSQRT.description',\n        abstract: 'formula.functionList.IMSQRT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMSQRT.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMSQRT.functionParameter.inumber.detail',\n                example: '\"1+i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMSUB,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMSUB.description',\n        abstract: 'formula.functionList.IMSUB.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMSUB.functionParameter.inumber1.name',\n                detail: 'formula.functionList.IMSUB.functionParameter.inumber1.detail',\n                example: '\"13+4i\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IMSUB.functionParameter.inumber2.name',\n                detail: 'formula.functionList.IMSUB.functionParameter.inumber2.detail',\n                example: '\"5+3i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMSUM,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMSUM.description',\n        abstract: 'formula.functionList.IMSUM.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMSUM.functionParameter.inumber1.name',\n                detail: 'formula.functionList.IMSUM.functionParameter.inumber1.detail',\n                example: '\"3+4i\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IMSUM.functionParameter.inumber2.name',\n                detail: 'formula.functionList.IMSUM.functionParameter.inumber2.detail',\n                example: '\"5-3i\"',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMTAN,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMTAN.description',\n        abstract: 'formula.functionList.IMTAN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMTAN.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMTAN.functionParameter.inumber.detail',\n                example: '\"4+3i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.IMTANH,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.IMTANH.description',\n        abstract: 'formula.functionList.IMTANH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMTANH.functionParameter.inumber.name',\n                detail: 'formula.functionList.IMTANH.functionParameter.inumber.detail',\n                example: '\"4+3i\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.OCT2BIN,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.OCT2BIN.description',\n        abstract: 'formula.functionList.OCT2BIN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.OCT2BIN.functionParameter.number.name',\n                detail: 'formula.functionList.OCT2BIN.functionParameter.number.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.OCT2BIN.functionParameter.places.name',\n                detail: 'formula.functionList.OCT2BIN.functionParameter.places.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.OCT2DEC,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.OCT2DEC.description',\n        abstract: 'formula.functionList.OCT2DEC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.OCT2DEC.functionParameter.number.name',\n                detail: 'formula.functionList.OCT2DEC.functionParameter.number.detail',\n                example: '54',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_ENGINEERING.OCT2HEX,\n        functionType: FunctionType.Engineering,\n        description: 'formula.functionList.OCT2HEX.description',\n        abstract: 'formula.functionList.OCT2HEX.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.OCT2HEX.functionParameter.number.name',\n                detail: 'formula.functionList.OCT2HEX.functionParameter.number.detail',\n                example: '100',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.OCT2HEX.functionParameter.places.name',\n                detail: 'formula.functionList.OCT2HEX.functionParameter.places.detail',\n                example: '4',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FUNCTION_NAMES_FINANCIAL, FunctionType, type IFunctionInfo } from '@univerjs/engine-formula';\n\nexport const FUNCTION_LIST_FINANCIAL: IFunctionInfo[] = [\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.ACCRINT,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.ACCRINT.description',\n        abstract: 'formula.functionList.ACCRINT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ACCRINT.functionParameter.issue.name',\n                detail: 'formula.functionList.ACCRINT.functionParameter.issue.detail',\n                example: '39508',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ACCRINT.functionParameter.firstInterest.name',\n                detail: 'formula.functionList.ACCRINT.functionParameter.firstInterest.detail',\n                example: '39691',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ACCRINT.functionParameter.settlement.name',\n                detail: 'formula.functionList.ACCRINT.functionParameter.settlement.detail',\n                example: '39569',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ACCRINT.functionParameter.rate.name',\n                detail: 'formula.functionList.ACCRINT.functionParameter.rate.detail',\n                example: '0.1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ACCRINT.functionParameter.par.name',\n                detail: 'formula.functionList.ACCRINT.functionParameter.par.detail',\n                example: '1000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ACCRINT.functionParameter.frequency.name',\n                detail: 'formula.functionList.ACCRINT.functionParameter.frequency.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ACCRINT.functionParameter.basis.name',\n                detail: 'formula.functionList.ACCRINT.functionParameter.basis.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ACCRINT.functionParameter.calcMethod.name',\n                detail: 'formula.functionList.ACCRINT.functionParameter.calcMethod.detail',\n                example: 'true',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.ACCRINTM,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.ACCRINTM.description',\n        abstract: 'formula.functionList.ACCRINTM.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ACCRINTM.functionParameter.issue.name',\n                detail: 'formula.functionList.ACCRINTM.functionParameter.issue.detail',\n                example: '\"2008-4-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ACCRINTM.functionParameter.settlement.name',\n                detail: 'formula.functionList.ACCRINTM.functionParameter.settlement.detail',\n                example: '\"2008-6-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ACCRINTM.functionParameter.rate.name',\n                detail: 'formula.functionList.ACCRINTM.functionParameter.rate.detail',\n                example: '0.1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ACCRINTM.functionParameter.par.name',\n                detail: 'formula.functionList.ACCRINTM.functionParameter.par.detail',\n                example: '1000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ACCRINTM.functionParameter.basis.name',\n                detail: 'formula.functionList.ACCRINTM.functionParameter.basis.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.AMORDEGRC,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.AMORDEGRC.description',\n        abstract: 'formula.functionList.AMORDEGRC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.AMORDEGRC.functionParameter.number1.name',\n                detail: 'formula.functionList.AMORDEGRC.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AMORDEGRC.functionParameter.number2.name',\n                detail: 'formula.functionList.AMORDEGRC.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.AMORLINC,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.AMORLINC.description',\n        abstract: 'formula.functionList.AMORLINC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.AMORLINC.functionParameter.cost.name',\n                detail: 'formula.functionList.AMORLINC.functionParameter.cost.detail',\n                example: '2400',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AMORLINC.functionParameter.datePurchased.name',\n                detail: 'formula.functionList.AMORLINC.functionParameter.datePurchased.detail',\n                example: '39679',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AMORLINC.functionParameter.firstPeriod.name',\n                detail: 'formula.functionList.AMORLINC.functionParameter.firstPeriod.detail',\n                example: '39813',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AMORLINC.functionParameter.salvage.name',\n                detail: 'formula.functionList.AMORLINC.functionParameter.salvage.detail',\n                example: '300',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AMORLINC.functionParameter.period.name',\n                detail: 'formula.functionList.AMORLINC.functionParameter.period.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AMORLINC.functionParameter.rate.name',\n                detail: 'formula.functionList.AMORLINC.functionParameter.rate.detail',\n                example: '0.15',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AMORLINC.functionParameter.basis.name',\n                detail: 'formula.functionList.AMORLINC.functionParameter.basis.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.COUPDAYBS,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.COUPDAYBS.description',\n        abstract: 'formula.functionList.COUPDAYBS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COUPDAYBS.functionParameter.settlement.name',\n                detail: 'formula.functionList.COUPDAYBS.functionParameter.settlement.detail',\n                example: '\"2011-1-25\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPDAYBS.functionParameter.maturity.name',\n                detail: 'formula.functionList.COUPDAYBS.functionParameter.maturity.detail',\n                example: '\"2011-11-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPDAYBS.functionParameter.frequency.name',\n                detail: 'formula.functionList.COUPDAYBS.functionParameter.frequency.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPDAYBS.functionParameter.basis.name',\n                detail: 'formula.functionList.COUPDAYBS.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.COUPDAYS,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.COUPDAYS.description',\n        abstract: 'formula.functionList.COUPDAYS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COUPDAYS.functionParameter.settlement.name',\n                detail: 'formula.functionList.COUPDAYS.functionParameter.settlement.detail',\n                example: '\"2011-1-25\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPDAYS.functionParameter.maturity.name',\n                detail: 'formula.functionList.COUPDAYS.functionParameter.maturity.detail',\n                example: '\"2011-11-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPDAYS.functionParameter.frequency.name',\n                detail: 'formula.functionList.COUPDAYS.functionParameter.frequency.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPDAYS.functionParameter.basis.name',\n                detail: 'formula.functionList.COUPDAYS.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.COUPDAYSNC,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.COUPDAYSNC.description',\n        abstract: 'formula.functionList.COUPDAYSNC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COUPDAYSNC.functionParameter.settlement.name',\n                detail: 'formula.functionList.COUPDAYSNC.functionParameter.settlement.detail',\n                example: '\"2011-1-25\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPDAYSNC.functionParameter.maturity.name',\n                detail: 'formula.functionList.COUPDAYSNC.functionParameter.maturity.detail',\n                example: '\"2011-11-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPDAYSNC.functionParameter.frequency.name',\n                detail: 'formula.functionList.COUPDAYSNC.functionParameter.frequency.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPDAYSNC.functionParameter.basis.name',\n                detail: 'formula.functionList.COUPDAYSNC.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.COUPNCD,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.COUPNCD.description',\n        abstract: 'formula.functionList.COUPNCD.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COUPNCD.functionParameter.settlement.name',\n                detail: 'formula.functionList.COUPNCD.functionParameter.settlement.detail',\n                example: '\"2011-1-25\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPNCD.functionParameter.maturity.name',\n                detail: 'formula.functionList.COUPNCD.functionParameter.maturity.detail',\n                example: '\"2011-11-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPNCD.functionParameter.frequency.name',\n                detail: 'formula.functionList.COUPNCD.functionParameter.frequency.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPNCD.functionParameter.basis.name',\n                detail: 'formula.functionList.COUPNCD.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.COUPNUM,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.COUPNUM.description',\n        abstract: 'formula.functionList.COUPNUM.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COUPNUM.functionParameter.settlement.name',\n                detail: 'formula.functionList.COUPNUM.functionParameter.settlement.detail',\n                example: '\"2011-1-25\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPNUM.functionParameter.maturity.name',\n                detail: 'formula.functionList.COUPNUM.functionParameter.maturity.detail',\n                example: '\"2011-11-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPNUM.functionParameter.frequency.name',\n                detail: 'formula.functionList.COUPNUM.functionParameter.frequency.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPNUM.functionParameter.basis.name',\n                detail: 'formula.functionList.COUPNUM.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.COUPPCD,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.COUPPCD.description',\n        abstract: 'formula.functionList.COUPPCD.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COUPPCD.functionParameter.settlement.name',\n                detail: 'formula.functionList.COUPPCD.functionParameter.settlement.detail',\n                example: '\"2011-1-25\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPPCD.functionParameter.maturity.name',\n                detail: 'formula.functionList.COUPPCD.functionParameter.maturity.detail',\n                example: '\"2011-11-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPPCD.functionParameter.frequency.name',\n                detail: 'formula.functionList.COUPPCD.functionParameter.frequency.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUPPCD.functionParameter.basis.name',\n                detail: 'formula.functionList.COUPPCD.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.CUMIPMT,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.CUMIPMT.description',\n        abstract: 'formula.functionList.CUMIPMT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CUMIPMT.functionParameter.rate.name',\n                detail: 'formula.functionList.CUMIPMT.functionParameter.rate.detail',\n                example: '0.09/12',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUMIPMT.functionParameter.nper.name',\n                detail: 'formula.functionList.CUMIPMT.functionParameter.nper.detail',\n                example: '30*12',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUMIPMT.functionParameter.pv.name',\n                detail: 'formula.functionList.CUMIPMT.functionParameter.pv.detail',\n                example: '125000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUMIPMT.functionParameter.startPeriod.name',\n                detail: 'formula.functionList.CUMIPMT.functionParameter.startPeriod.detail',\n                example: '13',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUMIPMT.functionParameter.endPeriod.name',\n                detail: 'formula.functionList.CUMIPMT.functionParameter.endPeriod.detail',\n                example: '24',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUMIPMT.functionParameter.type.name',\n                detail: 'formula.functionList.CUMIPMT.functionParameter.type.detail',\n                example: '0',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.CUMPRINC,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.CUMPRINC.description',\n        abstract: 'formula.functionList.CUMPRINC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CUMPRINC.functionParameter.rate.name',\n                detail: 'formula.functionList.CUMPRINC.functionParameter.rate.detail',\n                example: '0.09/12',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUMPRINC.functionParameter.nper.name',\n                detail: 'formula.functionList.CUMPRINC.functionParameter.nper.detail',\n                example: '30*12',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUMPRINC.functionParameter.pv.name',\n                detail: 'formula.functionList.CUMPRINC.functionParameter.pv.detail',\n                example: '125000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUMPRINC.functionParameter.startPeriod.name',\n                detail: 'formula.functionList.CUMPRINC.functionParameter.startPeriod.detail',\n                example: '13',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUMPRINC.functionParameter.endPeriod.name',\n                detail: 'formula.functionList.CUMPRINC.functionParameter.endPeriod.detail',\n                example: '24',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CUMPRINC.functionParameter.type.name',\n                detail: 'formula.functionList.CUMPRINC.functionParameter.type.detail',\n                example: '0',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.DB,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.DB.description',\n        abstract: 'formula.functionList.DB.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DB.functionParameter.cost.name',\n                detail: 'formula.functionList.DB.functionParameter.cost.detail',\n                example: '10000000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DB.functionParameter.salvage.name',\n                detail: 'formula.functionList.DB.functionParameter.salvage.detail',\n                example: '1000000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DB.functionParameter.life.name',\n                detail: 'formula.functionList.DB.functionParameter.life.detail',\n                example: '6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DB.functionParameter.period.name',\n                detail: 'formula.functionList.DB.functionParameter.period.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DB.functionParameter.month.name',\n                detail: 'formula.functionList.DB.functionParameter.month.detail',\n                example: '7',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.DDB,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.DDB.description',\n        abstract: 'formula.functionList.DDB.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DDB.functionParameter.cost.name',\n                detail: 'formula.functionList.DDB.functionParameter.cost.detail',\n                example: '24000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DDB.functionParameter.salvage.name',\n                detail: 'formula.functionList.DDB.functionParameter.salvage.detail',\n                example: '3000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DDB.functionParameter.life.name',\n                detail: 'formula.functionList.DDB.functionParameter.life.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DDB.functionParameter.period.name',\n                detail: 'formula.functionList.DDB.functionParameter.period.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DDB.functionParameter.factor.name',\n                detail: 'formula.functionList.DDB.functionParameter.factor.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.DISC,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.DISC.description',\n        abstract: 'formula.functionList.DISC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DISC.functionParameter.settlement.name',\n                detail: 'formula.functionList.DISC.functionParameter.settlement.detail',\n                example: '\"2018-7-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DISC.functionParameter.maturity.name',\n                detail: 'formula.functionList.DISC.functionParameter.maturity.detail',\n                example: '\"2048-1-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DISC.functionParameter.pr.name',\n                detail: 'formula.functionList.DISC.functionParameter.pr.detail',\n                example: '97.975',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DISC.functionParameter.redemption.name',\n                detail: 'formula.functionList.DISC.functionParameter.redemption.detail',\n                example: '100',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DISC.functionParameter.basis.name',\n                detail: 'formula.functionList.DISC.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.DOLLARDE,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.DOLLARDE.description',\n        abstract: 'formula.functionList.DOLLARDE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DOLLARDE.functionParameter.fractionalDollar.name',\n                detail: 'formula.functionList.DOLLARDE.functionParameter.fractionalDollar.detail',\n                example: '1.02',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DOLLARDE.functionParameter.fraction.name',\n                detail: 'formula.functionList.DOLLARDE.functionParameter.fraction.detail',\n                example: '16',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.DOLLARFR,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.DOLLARFR.description',\n        abstract: 'formula.functionList.DOLLARFR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DOLLARFR.functionParameter.decimalDollar.name',\n                detail: 'formula.functionList.DOLLARFR.functionParameter.decimalDollar.detail',\n                example: '1.125',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DOLLARFR.functionParameter.fraction.name',\n                detail: 'formula.functionList.DOLLARFR.functionParameter.fraction.detail',\n                example: '16',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.DURATION,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.DURATION.description',\n        abstract: 'formula.functionList.DURATION.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DURATION.functionParameter.settlement.name',\n                detail: 'formula.functionList.DURATION.functionParameter.settlement.detail',\n                example: '\"2018-7-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DURATION.functionParameter.maturity.name',\n                detail: 'formula.functionList.DURATION.functionParameter.maturity.detail',\n                example: '\"2048-1-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DURATION.functionParameter.coupon.name',\n                detail: 'formula.functionList.DURATION.functionParameter.coupon.detail',\n                example: '0.08',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DURATION.functionParameter.yld.name',\n                detail: 'formula.functionList.DURATION.functionParameter.yld.detail',\n                example: '0.09',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DURATION.functionParameter.frequency.name',\n                detail: 'formula.functionList.DURATION.functionParameter.frequency.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DURATION.functionParameter.basis.name',\n                detail: 'formula.functionList.DURATION.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.EFFECT,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.EFFECT.description',\n        abstract: 'formula.functionList.EFFECT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.EFFECT.functionParameter.nominalRate.name',\n                detail: 'formula.functionList.EFFECT.functionParameter.nominalRate.detail',\n                example: '0.0525',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.EFFECT.functionParameter.npery.name',\n                detail: 'formula.functionList.EFFECT.functionParameter.npery.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.FV,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.FV.description',\n        abstract: 'formula.functionList.FV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FV.functionParameter.rate.name',\n                detail: 'formula.functionList.FV.functionParameter.rate.detail',\n                example: '0.06/12',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FV.functionParameter.nper.name',\n                detail: 'formula.functionList.FV.functionParameter.nper.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FV.functionParameter.pmt.name',\n                detail: 'formula.functionList.FV.functionParameter.pmt.detail',\n                example: '-200',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FV.functionParameter.pv.name',\n                detail: 'formula.functionList.FV.functionParameter.pv.detail',\n                example: '-500',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FV.functionParameter.type.name',\n                detail: 'formula.functionList.FV.functionParameter.type.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.FVSCHEDULE,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.FVSCHEDULE.description',\n        abstract: 'formula.functionList.FVSCHEDULE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FVSCHEDULE.functionParameter.principal.name',\n                detail: 'formula.functionList.FVSCHEDULE.functionParameter.principal.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FVSCHEDULE.functionParameter.schedule.name',\n                detail: 'formula.functionList.FVSCHEDULE.functionParameter.schedule.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.INTRATE,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.INTRATE.description',\n        abstract: 'formula.functionList.INTRATE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.INTRATE.functionParameter.settlement.name',\n                detail: 'formula.functionList.INTRATE.functionParameter.settlement.detail',\n                example: '\"2008-2-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.INTRATE.functionParameter.maturity.name',\n                detail: 'formula.functionList.INTRATE.functionParameter.maturity.detail',\n                example: '\"2008-5-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.INTRATE.functionParameter.investment.name',\n                detail: 'formula.functionList.INTRATE.functionParameter.investment.detail',\n                example: '10000000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.INTRATE.functionParameter.redemption.name',\n                detail: 'formula.functionList.INTRATE.functionParameter.redemption.detail',\n                example: '10144200',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.INTRATE.functionParameter.basis.name',\n                detail: 'formula.functionList.INTRATE.functionParameter.basis.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.IPMT,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.IPMT.description',\n        abstract: 'formula.functionList.IPMT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IPMT.functionParameter.rate.name',\n                detail: 'formula.functionList.IPMT.functionParameter.rate.detail',\n                example: '0.1/12',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IPMT.functionParameter.per.name',\n                detail: 'formula.functionList.IPMT.functionParameter.per.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IPMT.functionParameter.nper.name',\n                detail: 'formula.functionList.IPMT.functionParameter.nper.detail',\n                example: '3*12',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IPMT.functionParameter.pv.name',\n                detail: 'formula.functionList.IPMT.functionParameter.pv.detail',\n                example: '80000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IPMT.functionParameter.fv.name',\n                detail: 'formula.functionList.IPMT.functionParameter.fv.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IPMT.functionParameter.type.name',\n                detail: 'formula.functionList.IPMT.functionParameter.type.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.IRR,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.IRR.description',\n        abstract: 'formula.functionList.IRR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IRR.functionParameter.values.name',\n                detail: 'formula.functionList.IRR.functionParameter.values.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IRR.functionParameter.guess.name',\n                detail: 'formula.functionList.IRR.functionParameter.guess.detail',\n                example: '0.1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.ISPMT,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.ISPMT.description',\n        abstract: 'formula.functionList.ISPMT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISPMT.functionParameter.rate.name',\n                detail: 'formula.functionList.ISPMT.functionParameter.rate.detail',\n                example: '0.1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ISPMT.functionParameter.per.name',\n                detail: 'formula.functionList.ISPMT.functionParameter.per.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ISPMT.functionParameter.nper.name',\n                detail: 'formula.functionList.ISPMT.functionParameter.nper.detail',\n                example: '5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ISPMT.functionParameter.pv.name',\n                detail: 'formula.functionList.ISPMT.functionParameter.pv.detail',\n                example: '1000',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.MDURATION,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.MDURATION.description',\n        abstract: 'formula.functionList.MDURATION.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MDURATION.functionParameter.settlement.name',\n                detail: 'formula.functionList.MDURATION.functionParameter.settlement.detail',\n                example: '\"2018-7-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MDURATION.functionParameter.maturity.name',\n                detail: 'formula.functionList.MDURATION.functionParameter.maturity.detail',\n                example: '\"2048-1-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MDURATION.functionParameter.coupon.name',\n                detail: 'formula.functionList.MDURATION.functionParameter.coupon.detail',\n                example: '0.08',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MDURATION.functionParameter.yld.name',\n                detail: 'formula.functionList.MDURATION.functionParameter.yld.detail',\n                example: '0.09',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MDURATION.functionParameter.frequency.name',\n                detail: 'formula.functionList.MDURATION.functionParameter.frequency.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MDURATION.functionParameter.basis.name',\n                detail: 'formula.functionList.MDURATION.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.MIRR,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.MIRR.description',\n        abstract: 'formula.functionList.MIRR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MIRR.functionParameter.values.name',\n                detail: 'formula.functionList.MIRR.functionParameter.values.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MIRR.functionParameter.financeRate.name',\n                detail: 'formula.functionList.MIRR.functionParameter.financeRate.detail',\n                example: '0.1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MIRR.functionParameter.reinvestRate.name',\n                detail: 'formula.functionList.MIRR.functionParameter.reinvestRate.detail',\n                example: '0.12',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.NOMINAL,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.NOMINAL.description',\n        abstract: 'formula.functionList.NOMINAL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NOMINAL.functionParameter.effectRate.name',\n                detail: 'formula.functionList.NOMINAL.functionParameter.effectRate.detail',\n                example: '0.053543',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NOMINAL.functionParameter.npery.name',\n                detail: 'formula.functionList.NOMINAL.functionParameter.npery.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.NPER,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.NPER.description',\n        abstract: 'formula.functionList.NPER.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NPER.functionParameter.rate.name',\n                detail: 'formula.functionList.NPER.functionParameter.rate.detail',\n                example: '0.12/12',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NPER.functionParameter.pmt.name',\n                detail: 'formula.functionList.NPER.functionParameter.pmt.detail',\n                example: '-100',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NPER.functionParameter.pv.name',\n                detail: 'formula.functionList.NPER.functionParameter.pv.detail',\n                example: '-1000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NPER.functionParameter.fv.name',\n                detail: 'formula.functionList.NPER.functionParameter.fv.detail',\n                example: '10000',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NPER.functionParameter.type.name',\n                detail: 'formula.functionList.NPER.functionParameter.type.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.NPV,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.NPV.description',\n        abstract: 'formula.functionList.NPV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NPV.functionParameter.rate.name',\n                detail: 'formula.functionList.NPV.functionParameter.rate.detail',\n                example: '0.1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NPV.functionParameter.value1.name',\n                detail: 'formula.functionList.NPV.functionParameter.value1.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NPV.functionParameter.value2.name',\n                detail: 'formula.functionList.NPV.functionParameter.value2.detail',\n                example: '-9000',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.ODDFPRICE,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.ODDFPRICE.description',\n        abstract: 'formula.functionList.ODDFPRICE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ODDFPRICE.functionParameter.settlement.name',\n                detail: 'formula.functionList.ODDFPRICE.functionParameter.settlement.detail',\n                example: '\"2008-11-11\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFPRICE.functionParameter.maturity.name',\n                detail: 'formula.functionList.ODDFPRICE.functionParameter.maturity.detail',\n                example: '\"2021-3-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFPRICE.functionParameter.issue.name',\n                detail: 'formula.functionList.ODDFPRICE.functionParameter.issue.detail',\n                example: '\"2008-10-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFPRICE.functionParameter.firstCoupon.name',\n                detail: 'formula.functionList.ODDFPRICE.functionParameter.firstCoupon.detail',\n                example: '\"2009-3-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFPRICE.functionParameter.rate.name',\n                detail: 'formula.functionList.ODDFPRICE.functionParameter.rate.detail',\n                example: '0.0785',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFPRICE.functionParameter.yld.name',\n                detail: 'formula.functionList.ODDFPRICE.functionParameter.yld.detail',\n                example: '0.0625',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFPRICE.functionParameter.redemption.name',\n                detail: 'formula.functionList.ODDFPRICE.functionParameter.redemption.detail',\n                example: '100',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFPRICE.functionParameter.frequency.name',\n                detail: 'formula.functionList.ODDFPRICE.functionParameter.frequency.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFPRICE.functionParameter.basis.name',\n                detail: 'formula.functionList.ODDFPRICE.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.ODDFYIELD,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.ODDFYIELD.description',\n        abstract: 'formula.functionList.ODDFYIELD.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ODDFYIELD.functionParameter.settlement.name',\n                detail: 'formula.functionList.ODDFYIELD.functionParameter.settlement.detail',\n                example: '\"2008-11-11\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFYIELD.functionParameter.maturity.name',\n                detail: 'formula.functionList.ODDFYIELD.functionParameter.maturity.detail',\n                example: '\"2021-3-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFYIELD.functionParameter.issue.name',\n                detail: 'formula.functionList.ODDFYIELD.functionParameter.issue.detail',\n                example: '\"2008-10-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFYIELD.functionParameter.firstCoupon.name',\n                detail: 'formula.functionList.ODDFYIELD.functionParameter.firstCoupon.detail',\n                example: '\"2009-3-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFYIELD.functionParameter.rate.name',\n                detail: 'formula.functionList.ODDFYIELD.functionParameter.rate.detail',\n                example: '0.0575',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFYIELD.functionParameter.pr.name',\n                detail: 'formula.functionList.ODDFYIELD.functionParameter.pr.detail',\n                example: '84.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFYIELD.functionParameter.redemption.name',\n                detail: 'formula.functionList.ODDFYIELD.functionParameter.redemption.detail',\n                example: '100',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFYIELD.functionParameter.frequency.name',\n                detail: 'formula.functionList.ODDFYIELD.functionParameter.frequency.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDFYIELD.functionParameter.basis.name',\n                detail: 'formula.functionList.ODDFYIELD.functionParameter.basis.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.ODDLPRICE,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.ODDLPRICE.description',\n        abstract: 'formula.functionList.ODDLPRICE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ODDLPRICE.functionParameter.settlement.name',\n                detail: 'formula.functionList.ODDLPRICE.functionParameter.settlement.detail',\n                example: '\"2008-11-11\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDLPRICE.functionParameter.maturity.name',\n                detail: 'formula.functionList.ODDLPRICE.functionParameter.maturity.detail',\n                example: '\"2021-3-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDLPRICE.functionParameter.lastInterest.name',\n                detail: 'formula.functionList.ODDLPRICE.functionParameter.lastInterest.detail',\n                example: '\"2009-3-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDLPRICE.functionParameter.rate.name',\n                detail: 'formula.functionList.ODDLPRICE.functionParameter.rate.detail',\n                example: '0.0785',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDLPRICE.functionParameter.yld.name',\n                detail: 'formula.functionList.ODDLPRICE.functionParameter.yld.detail',\n                example: '0.0625',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDLPRICE.functionParameter.redemption.name',\n                detail: 'formula.functionList.ODDLPRICE.functionParameter.redemption.detail',\n                example: '100',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDLPRICE.functionParameter.frequency.name',\n                detail: 'formula.functionList.ODDLPRICE.functionParameter.frequency.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDLPRICE.functionParameter.basis.name',\n                detail: 'formula.functionList.ODDLPRICE.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.ODDLYIELD,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.ODDLYIELD.description',\n        abstract: 'formula.functionList.ODDLYIELD.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ODDLYIELD.functionParameter.settlement.name',\n                detail: 'formula.functionList.ODDLYIELD.functionParameter.settlement.detail',\n                example: '\"2008-11-11\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDLYIELD.functionParameter.maturity.name',\n                detail: 'formula.functionList.ODDLYIELD.functionParameter.maturity.detail',\n                example: '\"2021-3-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDLYIELD.functionParameter.lastInterest.name',\n                detail: 'formula.functionList.ODDLYIELD.functionParameter.lastInterest.detail',\n                example: '\"2008-10-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDLYIELD.functionParameter.rate.name',\n                detail: 'formula.functionList.ODDLYIELD.functionParameter.rate.detail',\n                example: '0.0575',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDLYIELD.functionParameter.pr.name',\n                detail: 'formula.functionList.ODDLYIELD.functionParameter.pr.detail',\n                example: '84.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDLYIELD.functionParameter.redemption.name',\n                detail: 'formula.functionList.ODDLYIELD.functionParameter.redemption.detail',\n                example: '100',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDLYIELD.functionParameter.frequency.name',\n                detail: 'formula.functionList.ODDLYIELD.functionParameter.frequency.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ODDLYIELD.functionParameter.basis.name',\n                detail: 'formula.functionList.ODDLYIELD.functionParameter.basis.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.PDURATION,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.PDURATION.description',\n        abstract: 'formula.functionList.PDURATION.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PDURATION.functionParameter.rate.name',\n                detail: 'formula.functionList.PDURATION.functionParameter.rate.detail',\n                example: '0.025',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PDURATION.functionParameter.pv.name',\n                detail: 'formula.functionList.PDURATION.functionParameter.pv.detail',\n                example: '2000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PDURATION.functionParameter.fv.name',\n                detail: 'formula.functionList.PDURATION.functionParameter.fv.detail',\n                example: '2200',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.PMT,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.PMT.description',\n        abstract: 'formula.functionList.PMT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PMT.functionParameter.rate.name',\n                detail: 'formula.functionList.PMT.functionParameter.rate.detail',\n                example: '0.08/12',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PMT.functionParameter.nper.name',\n                detail: 'formula.functionList.PMT.functionParameter.nper.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PMT.functionParameter.pv.name',\n                detail: 'formula.functionList.PMT.functionParameter.pv.detail',\n                example: '10000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PMT.functionParameter.fv.name',\n                detail: 'formula.functionList.PMT.functionParameter.fv.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PMT.functionParameter.type.name',\n                detail: 'formula.functionList.PMT.functionParameter.type.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.PPMT,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.PPMT.description',\n        abstract: 'formula.functionList.PPMT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PPMT.functionParameter.rate.name',\n                detail: 'formula.functionList.PPMT.functionParameter.rate.detail',\n                example: '0.1/12',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PPMT.functionParameter.per.name',\n                detail: 'formula.functionList.PPMT.functionParameter.per.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PPMT.functionParameter.nper.name',\n                detail: 'formula.functionList.PPMT.functionParameter.nper.detail',\n                example: '3*12',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PPMT.functionParameter.pv.name',\n                detail: 'formula.functionList.PPMT.functionParameter.pv.detail',\n                example: '80000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PPMT.functionParameter.fv.name',\n                detail: 'formula.functionList.PPMT.functionParameter.fv.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PPMT.functionParameter.type.name',\n                detail: 'formula.functionList.PPMT.functionParameter.type.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.PRICE,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.PRICE.description',\n        abstract: 'formula.functionList.PRICE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PRICE.functionParameter.settlement.name',\n                detail: 'formula.functionList.PRICE.functionParameter.settlement.detail',\n                example: '\"2008-11-11\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRICE.functionParameter.maturity.name',\n                detail: 'formula.functionList.PRICE.functionParameter.maturity.detail',\n                example: '\"2021-3-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRICE.functionParameter.rate.name',\n                detail: 'formula.functionList.PRICE.functionParameter.rate.detail',\n                example: '0.0785',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRICE.functionParameter.yld.name',\n                detail: 'formula.functionList.PRICE.functionParameter.yld.detail',\n                example: '0.0625',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRICE.functionParameter.redemption.name',\n                detail: 'formula.functionList.PRICE.functionParameter.redemption.detail',\n                example: '100',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRICE.functionParameter.frequency.name',\n                detail: 'formula.functionList.PRICE.functionParameter.frequency.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRICE.functionParameter.basis.name',\n                detail: 'formula.functionList.PRICE.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.PRICEDISC,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.PRICEDISC.description',\n        abstract: 'formula.functionList.PRICEDISC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PRICEDISC.functionParameter.settlement.name',\n                detail: 'formula.functionList.PRICEDISC.functionParameter.settlement.detail',\n                example: '\"2008-11-11\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRICEDISC.functionParameter.maturity.name',\n                detail: 'formula.functionList.PRICEDISC.functionParameter.maturity.detail',\n                example: '\"2021-3-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRICEDISC.functionParameter.discount.name',\n                detail: 'formula.functionList.PRICEDISC.functionParameter.discount.detail',\n                example: '0.0625',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRICEDISC.functionParameter.redemption.name',\n                detail: 'formula.functionList.PRICEDISC.functionParameter.redemption.detail',\n                example: '100',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRICEDISC.functionParameter.basis.name',\n                detail: 'formula.functionList.PRICEDISC.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.PRICEMAT,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.PRICEMAT.description',\n        abstract: 'formula.functionList.PRICEMAT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PRICEMAT.functionParameter.settlement.name',\n                detail: 'formula.functionList.PRICEMAT.functionParameter.settlement.detail',\n                example: '\"2008-11-11\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRICEMAT.functionParameter.maturity.name',\n                detail: 'formula.functionList.PRICEMAT.functionParameter.maturity.detail',\n                example: '\"2021-3-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRICEMAT.functionParameter.issue.name',\n                detail: 'formula.functionList.PRICEMAT.functionParameter.issue.detail',\n                example: '\"2008-10-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRICEMAT.functionParameter.rate.name',\n                detail: 'formula.functionList.PRICEMAT.functionParameter.rate.detail',\n                example: '0.0785',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRICEMAT.functionParameter.yld.name',\n                detail: 'formula.functionList.PRICEMAT.functionParameter.yld.detail',\n                example: '0.0625',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRICEMAT.functionParameter.basis.name',\n                detail: 'formula.functionList.PRICEMAT.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.PV,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.PV.description',\n        abstract: 'formula.functionList.PV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PV.functionParameter.rate.name',\n                detail: 'formula.functionList.PV.functionParameter.rate.detail',\n                example: '0.02',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PV.functionParameter.nper.name',\n                detail: 'formula.functionList.PV.functionParameter.nper.detail',\n                example: '12',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PV.functionParameter.pmt.name',\n                detail: 'formula.functionList.PV.functionParameter.pmt.detail',\n                example: '100',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PV.functionParameter.fv.name',\n                detail: 'formula.functionList.PV.functionParameter.fv.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PV.functionParameter.type.name',\n                detail: 'formula.functionList.PV.functionParameter.type.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.RATE,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.RATE.description',\n        abstract: 'formula.functionList.RATE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.RATE.functionParameter.nper.name',\n                detail: 'formula.functionList.RATE.functionParameter.nper.detail',\n                example: '4*12',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RATE.functionParameter.pmt.name',\n                detail: 'formula.functionList.RATE.functionParameter.pmt.detail',\n                example: '-200',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RATE.functionParameter.pv.name',\n                detail: 'formula.functionList.RATE.functionParameter.pv.detail',\n                example: '8000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RATE.functionParameter.fv.name',\n                detail: 'formula.functionList.RATE.functionParameter.fv.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RATE.functionParameter.type.name',\n                detail: 'formula.functionList.RATE.functionParameter.type.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RATE.functionParameter.guess.name',\n                detail: 'formula.functionList.RATE.functionParameter.guess.detail',\n                example: '0.1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.RECEIVED,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.RECEIVED.description',\n        abstract: 'formula.functionList.RECEIVED.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.RECEIVED.functionParameter.settlement.name',\n                detail: 'formula.functionList.RECEIVED.functionParameter.settlement.detail',\n                example: '\"2008-2-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RECEIVED.functionParameter.maturity.name',\n                detail: 'formula.functionList.RECEIVED.functionParameter.maturity.detail',\n                example: '\"2008-3-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RECEIVED.functionParameter.investment.name',\n                detail: 'formula.functionList.RECEIVED.functionParameter.investment.detail',\n                example: '10000000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RECEIVED.functionParameter.discount.name',\n                detail: 'formula.functionList.RECEIVED.functionParameter.discount.detail',\n                example: '0.0575',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RECEIVED.functionParameter.basis.name',\n                detail: 'formula.functionList.RECEIVED.functionParameter.basis.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.RRI,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.RRI.description',\n        abstract: 'formula.functionList.RRI.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.RRI.functionParameter.nper.name',\n                detail: 'formula.functionList.RRI.functionParameter.nper.detail',\n                example: '96',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RRI.functionParameter.pv.name',\n                detail: 'formula.functionList.RRI.functionParameter.pv.detail',\n                example: '10000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RRI.functionParameter.fv.name',\n                detail: 'formula.functionList.RRI.functionParameter.fv.detail',\n                example: '11000',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.SLN,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.SLN.description',\n        abstract: 'formula.functionList.SLN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SLN.functionParameter.cost.name',\n                detail: 'formula.functionList.SLN.functionParameter.cost.detail',\n                example: '300000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SLN.functionParameter.salvage.name',\n                detail: 'formula.functionList.SLN.functionParameter.salvage.detail',\n                example: '75000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SLN.functionParameter.life.name',\n                detail: 'formula.functionList.SLN.functionParameter.life.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.SYD,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.SYD.description',\n        abstract: 'formula.functionList.SYD.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SYD.functionParameter.cost.name',\n                detail: 'formula.functionList.SYD.functionParameter.cost.detail',\n                example: '300000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SYD.functionParameter.salvage.name',\n                detail: 'formula.functionList.SYD.functionParameter.salvage.detail',\n                example: '75000',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SYD.functionParameter.life.name',\n                detail: 'formula.functionList.SYD.functionParameter.life.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SYD.functionParameter.per.name',\n                detail: 'formula.functionList.SYD.functionParameter.per.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.TBILLEQ,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.TBILLEQ.description',\n        abstract: 'formula.functionList.TBILLEQ.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TBILLEQ.functionParameter.settlement.name',\n                detail: 'formula.functionList.TBILLEQ.functionParameter.settlement.detail',\n                example: '\"2008-3-31\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TBILLEQ.functionParameter.maturity.name',\n                detail: 'formula.functionList.TBILLEQ.functionParameter.maturity.detail',\n                example: '\"2008-6-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TBILLEQ.functionParameter.discount.name',\n                detail: 'formula.functionList.TBILLEQ.functionParameter.discount.detail',\n                example: '0.0914',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.TBILLPRICE,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.TBILLPRICE.description',\n        abstract: 'formula.functionList.TBILLPRICE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TBILLPRICE.functionParameter.settlement.name',\n                detail: 'formula.functionList.TBILLPRICE.functionParameter.settlement.detail',\n                example: '\"2008-3-31\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TBILLPRICE.functionParameter.maturity.name',\n                detail: 'formula.functionList.TBILLPRICE.functionParameter.maturity.detail',\n                example: '\"2008-6-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TBILLPRICE.functionParameter.discount.name',\n                detail: 'formula.functionList.TBILLPRICE.functionParameter.discount.detail',\n                example: '0.0914',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.TBILLYIELD,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.TBILLYIELD.description',\n        abstract: 'formula.functionList.TBILLYIELD.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TBILLYIELD.functionParameter.settlement.name',\n                detail: 'formula.functionList.TBILLYIELD.functionParameter.settlement.detail',\n                example: '\"2008-3-31\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TBILLYIELD.functionParameter.maturity.name',\n                detail: 'formula.functionList.TBILLYIELD.functionParameter.maturity.detail',\n                example: '\"2008-6-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TBILLYIELD.functionParameter.pr.name',\n                detail: 'formula.functionList.TBILLYIELD.functionParameter.pr.detail',\n                example: '98.45',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.VDB,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.VDB.description',\n        abstract: 'formula.functionList.VDB.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.VDB.functionParameter.cost.name',\n                detail: 'formula.functionList.VDB.functionParameter.cost.detail',\n                example: '2400',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VDB.functionParameter.salvage.name',\n                detail: 'formula.functionList.VDB.functionParameter.salvage.detail',\n                example: '300',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VDB.functionParameter.life.name',\n                detail: 'formula.functionList.VDB.functionParameter.life.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VDB.functionParameter.startPeriod.name',\n                detail: 'formula.functionList.VDB.functionParameter.startPeriod.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VDB.functionParameter.endPeriod.name',\n                detail: 'formula.functionList.VDB.functionParameter.endPeriod.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VDB.functionParameter.factor.name',\n                detail: 'formula.functionList.VDB.functionParameter.factor.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VDB.functionParameter.noSwitch.name',\n                detail: 'formula.functionList.VDB.functionParameter.noSwitch.detail',\n                example: 'false',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.XIRR,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.XIRR.description',\n        abstract: 'formula.functionList.XIRR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.XIRR.functionParameter.values.name',\n                detail: 'formula.functionList.XIRR.functionParameter.values.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.XIRR.functionParameter.dates.name',\n                detail: 'formula.functionList.XIRR.functionParameter.dates.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.XIRR.functionParameter.guess.name',\n                detail: 'formula.functionList.XIRR.functionParameter.guess.detail',\n                example: '0.1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.XNPV,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.XNPV.description',\n        abstract: 'formula.functionList.XNPV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.XNPV.functionParameter.rate.name',\n                detail: 'formula.functionList.XNPV.functionParameter.rate.detail',\n                example: '0.1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.XNPV.functionParameter.values.name',\n                detail: 'formula.functionList.XNPV.functionParameter.values.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.XNPV.functionParameter.dates.name',\n                detail: 'formula.functionList.XNPV.functionParameter.dates.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.YIELD,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.YIELD.description',\n        abstract: 'formula.functionList.YIELD.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.YIELD.functionParameter.settlement.name',\n                detail: 'formula.functionList.YIELD.functionParameter.settlement.detail',\n                example: '\"2008-11-11\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YIELD.functionParameter.maturity.name',\n                detail: 'formula.functionList.YIELD.functionParameter.maturity.detail',\n                example: '\"2021-3-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YIELD.functionParameter.rate.name',\n                detail: 'formula.functionList.YIELD.functionParameter.rate.detail',\n                example: '0.0785',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YIELD.functionParameter.pr.name',\n                detail: 'formula.functionList.YIELD.functionParameter.pr.detail',\n                example: '98.45',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YIELD.functionParameter.redemption.name',\n                detail: 'formula.functionList.YIELD.functionParameter.redemption.detail',\n                example: '100',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YIELD.functionParameter.frequency.name',\n                detail: 'formula.functionList.YIELD.functionParameter.frequency.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YIELD.functionParameter.basis.name',\n                detail: 'formula.functionList.YIELD.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.YIELDDISC,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.YIELDDISC.description',\n        abstract: 'formula.functionList.YIELDDISC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.YIELDDISC.functionParameter.settlement.name',\n                detail: 'formula.functionList.YIELDDISC.functionParameter.settlement.detail',\n                example: '\"2008-11-11\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YIELDDISC.functionParameter.maturity.name',\n                detail: 'formula.functionList.YIELDDISC.functionParameter.maturity.detail',\n                example: '\"2021-3-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YIELDDISC.functionParameter.pr.name',\n                detail: 'formula.functionList.YIELDDISC.functionParameter.pr.detail',\n                example: '98.45',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YIELDDISC.functionParameter.redemption.name',\n                detail: 'formula.functionList.YIELDDISC.functionParameter.redemption.detail',\n                example: '100',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YIELDDISC.functionParameter.basis.name',\n                detail: 'formula.functionList.YIELDDISC.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_FINANCIAL.YIELDMAT,\n        functionType: FunctionType.Financial,\n        description: 'formula.functionList.YIELDMAT.description',\n        abstract: 'formula.functionList.YIELDMAT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.YIELDMAT.functionParameter.settlement.name',\n                detail: 'formula.functionList.YIELDMAT.functionParameter.settlement.detail',\n                example: '\"2008-11-11\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YIELDMAT.functionParameter.maturity.name',\n                detail: 'formula.functionList.YIELDMAT.functionParameter.maturity.detail',\n                example: '\"2021-3-1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YIELDMAT.functionParameter.issue.name',\n                detail: 'formula.functionList.YIELDMAT.functionParameter.issue.detail',\n                example: '\"2008-10-15\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YIELDMAT.functionParameter.rate.name',\n                detail: 'formula.functionList.YIELDMAT.functionParameter.rate.detail',\n                example: '0.0785',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YIELDMAT.functionParameter.pr.name',\n                detail: 'formula.functionList.YIELDMAT.functionParameter.pr.detail',\n                example: '98.45',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.YIELDMAT.functionParameter.basis.name',\n                detail: 'formula.functionList.YIELDMAT.functionParameter.basis.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FUNCTION_NAMES_INFORMATION, FunctionType, type IFunctionInfo } from '@univerjs/engine-formula';\n\nexport const FUNCTION_LIST_INFORMATION: IFunctionInfo[] = [\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.CELL,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.CELL.description',\n        abstract: 'formula.functionList.CELL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CELL.functionParameter.infoType.name',\n                detail: 'formula.functionList.CELL.functionParameter.infoType.detail',\n                example: '\"type\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CELL.functionParameter.reference.name',\n                detail: 'formula.functionList.CELL.functionParameter.reference.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ERROR_TYPE,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ERROR_TYPE.description',\n        abstract: 'formula.functionList.ERROR_TYPE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ERROR_TYPE.functionParameter.errorVal.name',\n                detail: 'formula.functionList.ERROR_TYPE.functionParameter.errorVal.detail',\n                example: '\"#NULL!\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.INFO,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.INFO.description',\n        abstract: 'formula.functionList.INFO.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.INFO.functionParameter.number1.name',\n                detail: 'formula.functionList.INFO.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.INFO.functionParameter.number2.name',\n                detail: 'formula.functionList.INFO.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISBETWEEN,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISBETWEEN.description',\n        abstract: 'formula.functionList.ISBETWEEN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISBETWEEN.functionParameter.valueToCompare.name',\n                detail: 'formula.functionList.ISBETWEEN.functionParameter.valueToCompare.detail',\n                example: '7.9',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ISBETWEEN.functionParameter.lowerValue.name',\n                detail: 'formula.functionList.ISBETWEEN.functionParameter.lowerValue.detail',\n                example: '1.2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ISBETWEEN.functionParameter.upperValue.name',\n                detail: 'formula.functionList.ISBETWEEN.functionParameter.upperValue.detail',\n                example: '12.45',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ISBETWEEN.functionParameter.lowerValueIsInclusive.name',\n                detail: 'formula.functionList.ISBETWEEN.functionParameter.lowerValueIsInclusive.detail',\n                example: 'true',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ISBETWEEN.functionParameter.upperValueIsInclusive.name',\n                detail: 'formula.functionList.ISBETWEEN.functionParameter.upperValueIsInclusive.detail',\n                example: 'true',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISBLANK,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISBLANK.description',\n        abstract: 'formula.functionList.ISBLANK.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISBLANK.functionParameter.value.name',\n                detail: 'formula.functionList.ISBLANK.functionParameter.value.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISDATE,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISDATE.description',\n        abstract: 'formula.functionList.ISDATE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISDATE.functionParameter.value.name',\n                detail: 'formula.functionList.ISDATE.functionParameter.value.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISEMAIL,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISEMAIL.description',\n        abstract: 'formula.functionList.ISEMAIL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISEMAIL.functionParameter.value.name',\n                detail: 'formula.functionList.ISEMAIL.functionParameter.value.detail',\n                example: '\"developer@univer.ai\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISERR,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISERR.description',\n        abstract: 'formula.functionList.ISERR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISERR.functionParameter.value.name',\n                detail: 'formula.functionList.ISERR.functionParameter.value.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISERROR,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISERROR.description',\n        abstract: 'formula.functionList.ISERROR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISERROR.functionParameter.value.name',\n                detail: 'formula.functionList.ISERROR.functionParameter.value.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISEVEN,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISEVEN.description',\n        abstract: 'formula.functionList.ISEVEN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISEVEN.functionParameter.value.name',\n                detail: 'formula.functionList.ISEVEN.functionParameter.value.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISFORMULA,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISFORMULA.description',\n        abstract: 'formula.functionList.ISFORMULA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISFORMULA.functionParameter.reference.name',\n                detail: 'formula.functionList.ISFORMULA.functionParameter.reference.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISLOGICAL,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISLOGICAL.description',\n        abstract: 'formula.functionList.ISLOGICAL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISLOGICAL.functionParameter.value.name',\n                detail: 'formula.functionList.ISLOGICAL.functionParameter.value.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISNA,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISNA.description',\n        abstract: 'formula.functionList.ISNA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISNA.functionParameter.value.name',\n                detail: 'formula.functionList.ISNA.functionParameter.value.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISNONTEXT,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISNONTEXT.description',\n        abstract: 'formula.functionList.ISNONTEXT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISNONTEXT.functionParameter.value.name',\n                detail: 'formula.functionList.ISNONTEXT.functionParameter.value.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISNUMBER,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISNUMBER.description',\n        abstract: 'formula.functionList.ISNUMBER.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISNUMBER.functionParameter.value.name',\n                detail: 'formula.functionList.ISNUMBER.functionParameter.value.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISODD,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISODD.description',\n        abstract: 'formula.functionList.ISODD.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISODD.functionParameter.value.name',\n                detail: 'formula.functionList.ISODD.functionParameter.value.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISOMITTED,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISOMITTED.description',\n        abstract: 'formula.functionList.ISOMITTED.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISOMITTED.functionParameter.number1.name',\n                detail: 'formula.functionList.ISOMITTED.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ISOMITTED.functionParameter.number2.name',\n                detail: 'formula.functionList.ISOMITTED.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISREF,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISREF.description',\n        abstract: 'formula.functionList.ISREF.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISREF.functionParameter.value.name',\n                detail: 'formula.functionList.ISREF.functionParameter.value.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISTEXT,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISTEXT.description',\n        abstract: 'formula.functionList.ISTEXT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISTEXT.functionParameter.value.name',\n                detail: 'formula.functionList.ISTEXT.functionParameter.value.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.ISURL,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.ISURL.description',\n        abstract: 'formula.functionList.ISURL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISURL.functionParameter.value.name',\n                detail: 'formula.functionList.ISURL.functionParameter.value.detail',\n                example: '\"univer.ai\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.N,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.N.description',\n        abstract: 'formula.functionList.N.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.N.functionParameter.value.name',\n                detail: 'formula.functionList.N.functionParameter.value.detail',\n                example: '7',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.NA,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.NA.description',\n        abstract: 'formula.functionList.NA.abstract',\n        functionParameter: [\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.SHEET,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.SHEET.description',\n        abstract: 'formula.functionList.SHEET.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SHEET.functionParameter.value.name',\n                detail: 'formula.functionList.SHEET.functionParameter.value.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.SHEETS,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.SHEETS.description',\n        abstract: 'formula.functionList.SHEETS.abstract',\n        functionParameter: [\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_INFORMATION.TYPE,\n        functionType: FunctionType.Information,\n        description: 'formula.functionList.TYPE.description',\n        abstract: 'formula.functionList.TYPE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TYPE.functionParameter.value.name',\n                detail: 'formula.functionList.TYPE.functionParameter.value.detail',\n                example: 'A2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FUNCTION_NAMES_LOGICAL, FunctionType, type IFunctionInfo } from '@univerjs/engine-formula';\n\nexport const FUNCTION_LIST_LOGICAL: IFunctionInfo[] = [\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.AND,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.AND.description',\n        abstract: 'formula.functionList.AND.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.AND.functionParameter.logical1.name',\n                detail: 'formula.functionList.AND.functionParameter.logical1.detail',\n                example: 'A1=1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AND.functionParameter.logical2.name',\n                detail: 'formula.functionList.AND.functionParameter.logical2.detail',\n                example: 'A2=2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.BYCOL,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.BYCOL.description',\n        abstract: 'formula.functionList.BYCOL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BYCOL.functionParameter.array.name',\n                detail: 'formula.functionList.BYCOL.functionParameter.array.detail',\n                example: 'A1:C2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BYCOL.functionParameter.lambda.name',\n                detail: 'formula.functionList.BYCOL.functionParameter.lambda.detail',\n                example: 'LAMBDA(array, MAX(array))',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.BYROW,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.BYROW.description',\n        abstract: 'formula.functionList.BYROW.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BYROW.functionParameter.array.name',\n                detail: 'formula.functionList.BYROW.functionParameter.array.detail',\n                example: 'A1:C2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BYROW.functionParameter.lambda.name',\n                detail: 'formula.functionList.BYROW.functionParameter.lambda.detail',\n                example: 'LAMBDA(array, MAX(array))',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.FALSE,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.FALSE.description',\n        abstract: 'formula.functionList.FALSE.abstract',\n        functionParameter: [\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.IF,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.IF.description',\n        abstract: 'formula.functionList.IF.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IF.functionParameter.logicalTest.name',\n                detail: 'formula.functionList.IF.functionParameter.logicalTest.detail',\n                example: 'A2 = \"foo\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IF.functionParameter.valueIfTrue.name',\n                detail: 'formula.functionList.IF.functionParameter.valueIfTrue.detail',\n                example: '\"A2 is foo\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IF.functionParameter.valueIfFalse.name',\n                detail: 'formula.functionList.IF.functionParameter.valueIfFalse.detail',\n                example: '\"A2 is not foo\"',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.IFERROR,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.IFERROR.description',\n        abstract: 'formula.functionList.IFERROR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IFERROR.functionParameter.value.name',\n                detail: 'formula.functionList.IFERROR.functionParameter.value.detail',\n                example: 'A2/B2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IFERROR.functionParameter.valueIfError.name',\n                detail: 'formula.functionList.IFERROR.functionParameter.valueIfError.detail',\n                example: 'Error in calculation',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.IFNA,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.IFNA.description',\n        abstract: 'formula.functionList.IFNA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IFNA.functionParameter.value.name',\n                detail: 'formula.functionList.IFNA.functionParameter.value.detail',\n                example: 'VLOOKUP(C3,C6:D11,2,FALSE)',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IFNA.functionParameter.valueIfNa.name',\n                detail: 'formula.functionList.IFNA.functionParameter.valueIfNa.detail',\n                example: '\"Not Found\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.IFS,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.IFS.description',\n        abstract: 'formula.functionList.IFS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IFS.functionParameter.logicalTest1.name',\n                detail: 'formula.functionList.IFS.functionParameter.logicalTest1.detail',\n                example: 'A2 = \"foo\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IFS.functionParameter.valueIfTrue1.name',\n                detail: 'formula.functionList.IFS.functionParameter.valueIfTrue1.detail',\n                example: '\"A2 is foo\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IFS.functionParameter.logicalTest2.name',\n                detail: 'formula.functionList.IFS.functionParameter.logicalTest2.detail',\n                example: 'F2=1',\n                require: 0,\n                repeat: 1,\n            },\n            {\n                name: 'formula.functionList.IFS.functionParameter.valueIfTrue2.name',\n                detail: 'formula.functionList.IFS.functionParameter.valueIfTrue2.detail',\n                example: 'D2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.LAMBDA,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.LAMBDA.description',\n        abstract: 'formula.functionList.LAMBDA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LAMBDA.functionParameter.parameter.name',\n                detail: 'formula.functionList.LAMBDA.functionParameter.parameter.detail',\n                example: '[x, y, \u2026,]',\n                require: 0,\n                repeat: 1,\n            },\n            {\n                name: 'formula.functionList.LAMBDA.functionParameter.calculation.name',\n                detail: 'formula.functionList.LAMBDA.functionParameter.calculation.detail',\n                example: 'x+y',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.LET,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.LET.description',\n        abstract: 'formula.functionList.LET.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LET.functionParameter.name1.name',\n                detail: 'formula.functionList.LET.functionParameter.name1.detail',\n                example: 'x',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LET.functionParameter.nameValue1.name',\n                detail: 'formula.functionList.LET.functionParameter.nameValue1.detail',\n                example: '5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LET.functionParameter.calculationOrName2.name',\n                detail: 'formula.functionList.LET.functionParameter.calculationOrName2.detail',\n                example: 'y',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LET.functionParameter.nameValue2.name',\n                detail: 'formula.functionList.LET.functionParameter.nameValue2.detail',\n                example: '6',\n                require: 0,\n                repeat: 1,\n            },\n            {\n                name: 'formula.functionList.LET.functionParameter.calculationOrName3.name',\n                detail: 'formula.functionList.LET.functionParameter.calculationOrName3.detail',\n                example: 'SUM(x,y)',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.MAKEARRAY,\n        aliasFunctionName: 'formula.functionList.MAKEARRAY.aliasFunctionName',\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.MAKEARRAY.description',\n        abstract: 'formula.functionList.MAKEARRAY.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MAKEARRAY.functionParameter.number1.name',\n                detail: 'formula.functionList.MAKEARRAY.functionParameter.number1.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MAKEARRAY.functionParameter.number2.name',\n                detail: 'formula.functionList.MAKEARRAY.functionParameter.number2.detail',\n                example: '7',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MAKEARRAY.functionParameter.value3.name',\n                detail: 'formula.functionList.MAKEARRAY.functionParameter.value3.detail',\n                example: 'LAMBDA(r,c, r*c)',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.MAP,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.MAP.description',\n        abstract: 'formula.functionList.MAP.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MAP.functionParameter.array1.name',\n                detail: 'formula.functionList.MAP.functionParameter.array1.detail',\n                example: 'D2:D11',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MAP.functionParameter.array2.name',\n                detail: 'formula.functionList.MAP.functionParameter.array2.detail',\n                example: 'E2:E11',\n                require: 0,\n                repeat: 1,\n            },\n            {\n                name: 'formula.functionList.MAP.functionParameter.lambda.name',\n                detail: 'formula.functionList.MAP.functionParameter.lambda.detail',\n                example: 'LAMBDA(s,c,AND(s=\"Large\",c=\"Red\"))',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.NOT,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.NOT.description',\n        abstract: 'formula.functionList.NOT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NOT.functionParameter.logical.name',\n                detail: 'formula.functionList.NOT.functionParameter.logical.detail',\n                example: 'A2>100',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.OR,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.OR.description',\n        abstract: 'formula.functionList.OR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.OR.functionParameter.logical1.name',\n                detail: 'formula.functionList.OR.functionParameter.logical1.detail',\n                example: 'A1=1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.OR.functionParameter.logical2.name',\n                detail: 'formula.functionList.OR.functionParameter.logical2.detail',\n                example: 'A2=2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.REDUCE,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.REDUCE.description',\n        abstract: 'formula.functionList.REDUCE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.REDUCE.functionParameter.initialValue.name',\n                detail: 'formula.functionList.REDUCE.functionParameter.initialValue.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.REDUCE.functionParameter.array.name',\n                detail: 'formula.functionList.REDUCE.functionParameter.array.detail',\n                example: 'A1:C2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.REDUCE.functionParameter.lambda.name',\n                detail: 'formula.functionList.REDUCE.functionParameter.lambda.detail',\n                example: 'LAMBDA(a,b,a+b^2)',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.SCAN,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.SCAN.description',\n        abstract: 'formula.functionList.SCAN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SCAN.functionParameter.initialValue.name',\n                detail: 'formula.functionList.SCAN.functionParameter.initialValue.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SCAN.functionParameter.array.name',\n                detail: 'formula.functionList.SCAN.functionParameter.array.detail',\n                example: 'A1:C2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SCAN.functionParameter.lambda.name',\n                detail: 'formula.functionList.SCAN.functionParameter.lambda.detail',\n                example: 'LAMBDA(a,b,a+b^2)',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.SWITCH,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.SWITCH.description',\n        abstract: 'formula.functionList.SWITCH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SWITCH.functionParameter.expression.name',\n                detail: 'formula.functionList.SWITCH.functionParameter.expression.detail',\n                example: 'WEEKDAY(A2)',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SWITCH.functionParameter.value1.name',\n                detail: 'formula.functionList.SWITCH.functionParameter.value1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SWITCH.functionParameter.result1.name',\n                detail: 'formula.functionList.SWITCH.functionParameter.result1.detail',\n                example: '\"Sunday\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SWITCH.functionParameter.defaultOrValue2.name',\n                detail: 'formula.functionList.SWITCH.functionParameter.defaultOrValue2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n            {\n                name: 'formula.functionList.SWITCH.functionParameter.result2.name',\n                detail: 'formula.functionList.SWITCH.functionParameter.result2.detail',\n                example: '\"Monday\"',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.TRUE,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.TRUE.description',\n        abstract: 'formula.functionList.TRUE.abstract',\n        functionParameter: [\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOGICAL.XOR,\n        functionType: FunctionType.Logical,\n        description: 'formula.functionList.XOR.description',\n        abstract: 'formula.functionList.XOR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.XOR.functionParameter.logical1.name',\n                detail: 'formula.functionList.XOR.functionParameter.logical1.detail',\n                example: '3>0',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.XOR.functionParameter.logical2.name',\n                detail: 'formula.functionList.XOR.functionParameter.logical2.detail',\n                example: '2<9',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FUNCTION_NAMES_LOOKUP, FunctionType, type IFunctionInfo } from '@univerjs/engine-formula';\n\nexport const FUNCTION_LIST_LOOKUP: IFunctionInfo[] = [\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.ADDRESS,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.ADDRESS.description',\n        abstract: 'formula.functionList.ADDRESS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ADDRESS.functionParameter.row_num.name',\n                detail: 'formula.functionList.ADDRESS.functionParameter.row_num.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ADDRESS.functionParameter.column_num.name',\n                detail: 'formula.functionList.ADDRESS.functionParameter.column_num.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ADDRESS.functionParameter.abs_num.name',\n                detail: 'formula.functionList.ADDRESS.functionParameter.abs_num.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ADDRESS.functionParameter.a1.name',\n                detail: 'formula.functionList.ADDRESS.functionParameter.a1.detail',\n                example: 'TRUE',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ADDRESS.functionParameter.sheet_text.name',\n                detail: 'formula.functionList.ADDRESS.functionParameter.sheet_text.detail',\n                example: '\"Sheet2\"',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.AREAS,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.AREAS.description',\n        abstract: 'formula.functionList.AREAS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.AREAS.functionParameter.reference.name',\n                detail: 'formula.functionList.AREAS.functionParameter.reference.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.CHOOSE,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.CHOOSE.description',\n        abstract: 'formula.functionList.CHOOSE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CHOOSE.functionParameter.indexNum.name',\n                detail: 'formula.functionList.CHOOSE.functionParameter.indexNum.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CHOOSE.functionParameter.value1.name',\n                detail: 'formula.functionList.CHOOSE.functionParameter.value1.detail',\n                example: '\"Hello\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CHOOSE.functionParameter.value2.name',\n                detail: 'formula.functionList.CHOOSE.functionParameter.value2.detail',\n                example: '\"Univer\"',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.CHOOSECOLS,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.CHOOSECOLS.description',\n        abstract: 'formula.functionList.CHOOSECOLS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CHOOSECOLS.functionParameter.array.name',\n                detail: 'formula.functionList.CHOOSECOLS.functionParameter.array.detail',\n                example: 'A1:C2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CHOOSECOLS.functionParameter.colNum1.name',\n                detail: 'formula.functionList.CHOOSECOLS.functionParameter.colNum1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CHOOSECOLS.functionParameter.colNum2.name',\n                detail: 'formula.functionList.CHOOSECOLS.functionParameter.colNum2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.CHOOSEROWS,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.CHOOSEROWS.description',\n        abstract: 'formula.functionList.CHOOSEROWS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CHOOSEROWS.functionParameter.array.name',\n                detail: 'formula.functionList.CHOOSEROWS.functionParameter.array.detail',\n                example: 'A1:C2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CHOOSEROWS.functionParameter.rowNum1.name',\n                detail: 'formula.functionList.CHOOSEROWS.functionParameter.rowNum1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CHOOSEROWS.functionParameter.rowNum2.name',\n                detail: 'formula.functionList.CHOOSEROWS.functionParameter.rowNum2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.COLUMN,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.COLUMN.description',\n        abstract: 'formula.functionList.COLUMN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COLUMN.functionParameter.reference.name',\n                detail: 'formula.functionList.COLUMN.functionParameter.reference.detail',\n                example: 'A1:A20',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.COLUMNS,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.COLUMNS.description',\n        abstract: 'formula.functionList.COLUMNS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COLUMNS.functionParameter.array.name',\n                detail: 'formula.functionList.COLUMNS.functionParameter.array.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.DROP,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.DROP.description',\n        abstract: 'formula.functionList.DROP.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DROP.functionParameter.array.name',\n                detail: 'formula.functionList.DROP.functionParameter.array.detail',\n                example: 'A2:C4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DROP.functionParameter.rows.name',\n                detail: 'formula.functionList.DROP.functionParameter.rows.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DROP.functionParameter.columns.name',\n                detail: 'formula.functionList.DROP.functionParameter.columns.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.EXPAND,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.EXPAND.description',\n        abstract: 'formula.functionList.EXPAND.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.EXPAND.functionParameter.array.name',\n                detail: 'formula.functionList.EXPAND.functionParameter.array.detail',\n                example: 'A2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.EXPAND.functionParameter.rows.name',\n                detail: 'formula.functionList.EXPAND.functionParameter.rows.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.EXPAND.functionParameter.columns.name',\n                detail: 'formula.functionList.EXPAND.functionParameter.columns.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.EXPAND.functionParameter.padWith.name',\n                detail: 'formula.functionList.EXPAND.functionParameter.padWith.detail',\n                example: '\"-\"',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.FILTER,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.FILTER.description',\n        abstract: 'formula.functionList.FILTER.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FILTER.functionParameter.array.name',\n                detail: 'formula.functionList.FILTER.functionParameter.array.detail',\n                example: 'A5:D20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FILTER.functionParameter.include.name',\n                detail: 'formula.functionList.FILTER.functionParameter.include.detail',\n                example: '(C5:C20=\"Apple\")*(A5:A20=\"East\")',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FILTER.functionParameter.ifEmpty.name',\n                detail: 'formula.functionList.FILTER.functionParameter.ifEmpty.detail',\n                example: '\"\"',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.FORMULATEXT,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.FORMULATEXT.description',\n        abstract: 'formula.functionList.FORMULATEXT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FORMULATEXT.functionParameter.reference.name',\n                detail: 'formula.functionList.FORMULATEXT.functionParameter.reference.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.GETPIVOTDATA,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.GETPIVOTDATA.description',\n        abstract: 'formula.functionList.GETPIVOTDATA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.GETPIVOTDATA.functionParameter.number1.name',\n                detail: 'formula.functionList.GETPIVOTDATA.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GETPIVOTDATA.functionParameter.number2.name',\n                detail: 'formula.functionList.GETPIVOTDATA.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.HLOOKUP,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.HLOOKUP.description',\n        abstract: 'formula.functionList.HLOOKUP.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.HLOOKUP.functionParameter.lookupValue.name',\n                detail: 'formula.functionList.HLOOKUP.functionParameter.lookupValue.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.HLOOKUP.functionParameter.tableArray.name',\n                detail: 'formula.functionList.HLOOKUP.functionParameter.tableArray.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.HLOOKUP.functionParameter.rowIndexNum.name',\n                detail: 'formula.functionList.HLOOKUP.functionParameter.rowIndexNum.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.HLOOKUP.functionParameter.rangeLookup.name',\n                detail: 'formula.functionList.HLOOKUP.functionParameter.rangeLookup.detail',\n                example: 'false',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.HSTACK,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.HSTACK.description',\n        abstract: 'formula.functionList.HSTACK.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.HSTACK.functionParameter.array1.name',\n                detail: 'formula.functionList.HSTACK.functionParameter.array1.detail',\n                example: 'A2:C3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.HSTACK.functionParameter.array2.name',\n                detail: 'formula.functionList.HSTACK.functionParameter.array2.detail',\n                example: 'E2:G3',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.HYPERLINK,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.HYPERLINK.description',\n        abstract: 'formula.functionList.HYPERLINK.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.HYPERLINK.functionParameter.number1.name',\n                detail: 'formula.functionList.HYPERLINK.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.HYPERLINK.functionParameter.number2.name',\n                detail: 'formula.functionList.HYPERLINK.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.IMAGE,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.IMAGE.description',\n        abstract: 'formula.functionList.IMAGE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.IMAGE.functionParameter.number1.name',\n                detail: 'formula.functionList.IMAGE.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.IMAGE.functionParameter.number2.name',\n                detail: 'formula.functionList.IMAGE.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.INDEX,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.INDEX.description',\n        abstract: 'formula.functionList.INDEX.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.INDEX.functionParameter.reference.name',\n                detail: 'formula.functionList.INDEX.functionParameter.reference.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.INDEX.functionParameter.rowNum.name',\n                detail: 'formula.functionList.INDEX.functionParameter.rowNum.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.INDEX.functionParameter.columnNum.name',\n                detail: 'formula.functionList.INDEX.functionParameter.columnNum.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.INDEX.functionParameter.areaNum.name',\n                detail: 'formula.functionList.INDEX.functionParameter.areaNum.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.INDIRECT,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.INDIRECT.description',\n        abstract: 'formula.functionList.INDIRECT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.INDIRECT.functionParameter.refText.name',\n                detail: 'formula.functionList.INDIRECT.functionParameter.refText.detail',\n                example: '\"A1\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.INDIRECT.functionParameter.a1.name',\n                detail: 'formula.functionList.INDIRECT.functionParameter.a1.detail',\n                example: 'TRUE',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.LOOKUP,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.LOOKUP.description',\n        abstract: 'formula.functionList.LOOKUP.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LOOKUP.functionParameter.lookupValue.name',\n                detail: 'formula.functionList.LOOKUP.functionParameter.lookupValue.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LOOKUP.functionParameter.lookupVectorOrArray.name',\n                detail: 'formula.functionList.LOOKUP.functionParameter.lookupVectorOrArray.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LOOKUP.functionParameter.resultVector.name',\n                detail: 'formula.functionList.LOOKUP.functionParameter.resultVector.detail',\n                example: 'A1:A20',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.MATCH,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.MATCH.description',\n        abstract: 'formula.functionList.MATCH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MATCH.functionParameter.lookupValue.name',\n                detail: 'formula.functionList.MATCH.functionParameter.lookupValue.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MATCH.functionParameter.lookupArray.name',\n                detail: 'formula.functionList.MATCH.functionParameter.lookupArray.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MATCH.functionParameter.matchType.name',\n                detail: 'formula.functionList.MATCH.functionParameter.matchType.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.OFFSET,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.OFFSET.description',\n        abstract: 'formula.functionList.OFFSET.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.OFFSET.functionParameter.reference.name',\n                detail: 'formula.functionList.OFFSET.functionParameter.reference.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.OFFSET.functionParameter.rows.name',\n                detail: 'formula.functionList.OFFSET.functionParameter.rows.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.OFFSET.functionParameter.cols.name',\n                detail: 'formula.functionList.OFFSET.functionParameter.cols.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.OFFSET.functionParameter.height.name',\n                detail: 'formula.functionList.OFFSET.functionParameter.height.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.OFFSET.functionParameter.width.name',\n                detail: 'formula.functionList.OFFSET.functionParameter.width.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.ROW,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.ROW.description',\n        abstract: 'formula.functionList.ROW.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ROW.functionParameter.reference.name',\n                detail: 'formula.functionList.ROW.functionParameter.reference.detail',\n                example: 'A1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.ROWS,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.ROWS.description',\n        abstract: 'formula.functionList.ROWS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ROWS.functionParameter.array.name',\n                detail: 'formula.functionList.ROWS.functionParameter.array.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.RTD,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.RTD.description',\n        abstract: 'formula.functionList.RTD.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.RTD.functionParameter.number1.name',\n                detail: 'formula.functionList.RTD.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RTD.functionParameter.number2.name',\n                detail: 'formula.functionList.RTD.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.SORT,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.SORT.description',\n        abstract: 'formula.functionList.SORT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SORT.functionParameter.array.name',\n                detail: 'formula.functionList.SORT.functionParameter.array.detail',\n                example: 'A2:A17',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SORT.functionParameter.sortIndex.name',\n                detail: 'formula.functionList.SORT.functionParameter.sortIndex.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SORT.functionParameter.sortOrder.name',\n                detail: 'formula.functionList.SORT.functionParameter.sortOrder.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SORT.functionParameter.byCol.name',\n                detail: 'formula.functionList.SORT.functionParameter.byCol.detail',\n                example: 'false',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.SORTBY,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.SORTBY.description',\n        abstract: 'formula.functionList.SORTBY.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SORTBY.functionParameter.array.name',\n                detail: 'formula.functionList.SORTBY.functionParameter.array.detail',\n                example: 'D2:D9',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SORTBY.functionParameter.byArray1.name',\n                detail: 'formula.functionList.SORTBY.functionParameter.byArray1.detail',\n                example: 'E2:E9',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SORTBY.functionParameter.sortOrder1.name',\n                detail: 'formula.functionList.SORTBY.functionParameter.sortOrder1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SORTBY.functionParameter.byArray2.name',\n                detail: 'formula.functionList.SORTBY.functionParameter.byArray2.detail',\n                example: 'E2:E9',\n                require: 0,\n                repeat: 1,\n            },\n            {\n                name: 'formula.functionList.SORTBY.functionParameter.sortOrder2.name',\n                detail: 'formula.functionList.SORTBY.functionParameter.sortOrder2.detail',\n                example: '1',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.TAKE,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.TAKE.description',\n        abstract: 'formula.functionList.TAKE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TAKE.functionParameter.array.name',\n                detail: 'formula.functionList.TAKE.functionParameter.array.detail',\n                example: 'A2:C4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TAKE.functionParameter.rows.name',\n                detail: 'formula.functionList.TAKE.functionParameter.rows.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TAKE.functionParameter.columns.name',\n                detail: 'formula.functionList.TAKE.functionParameter.columns.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.TOCOL,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.TOCOL.description',\n        abstract: 'formula.functionList.TOCOL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TOCOL.functionParameter.array.name',\n                detail: 'formula.functionList.TOCOL.functionParameter.array.detail',\n                example: 'A2:D4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TOCOL.functionParameter.ignore.name',\n                detail: 'formula.functionList.TOCOL.functionParameter.ignore.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TOCOL.functionParameter.scanByColumn.name',\n                detail: 'formula.functionList.TOCOL.functionParameter.scanByColumn.detail',\n                example: 'TRUE',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.TOROW,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.TOROW.description',\n        abstract: 'formula.functionList.TOROW.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TOROW.functionParameter.array.name',\n                detail: 'formula.functionList.TOROW.functionParameter.array.detail',\n                example: 'A2:D4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TOROW.functionParameter.ignore.name',\n                detail: 'formula.functionList.TOROW.functionParameter.ignore.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TOROW.functionParameter.scanByColumn.name',\n                detail: 'formula.functionList.TOROW.functionParameter.scanByColumn.detail',\n                example: 'TRUE',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.TRANSPOSE,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.TRANSPOSE.description',\n        abstract: 'formula.functionList.TRANSPOSE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TRANSPOSE.functionParameter.array.name',\n                detail: 'formula.functionList.TRANSPOSE.functionParameter.array.detail',\n                example: 'A2:F9',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.UNIQUE,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.UNIQUE.description',\n        abstract: 'formula.functionList.UNIQUE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.UNIQUE.functionParameter.array.name',\n                detail: 'formula.functionList.UNIQUE.functionParameter.array.detail',\n                example: 'A2:A12',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.UNIQUE.functionParameter.byCol.name',\n                detail: 'formula.functionList.UNIQUE.functionParameter.byCol.detail',\n                example: 'false',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.UNIQUE.functionParameter.exactlyOnce.name',\n                detail: 'formula.functionList.UNIQUE.functionParameter.exactlyOnce.detail',\n                example: 'false',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.VLOOKUP,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.VLOOKUP.description',\n        abstract: 'formula.functionList.VLOOKUP.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.VLOOKUP.functionParameter.lookupValue.name',\n                detail: 'formula.functionList.VLOOKUP.functionParameter.lookupValue.detail',\n                example: 'B2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VLOOKUP.functionParameter.tableArray.name',\n                detail: 'formula.functionList.VLOOKUP.functionParameter.tableArray.detail',\n                example: 'C2:E7',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VLOOKUP.functionParameter.colIndexNum.name',\n                detail: 'formula.functionList.VLOOKUP.functionParameter.colIndexNum.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VLOOKUP.functionParameter.rangeLookup.name',\n                detail: 'formula.functionList.VLOOKUP.functionParameter.rangeLookup.detail',\n                example: 'TRUE',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.VSTACK,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.VSTACK.description',\n        abstract: 'formula.functionList.VSTACK.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.VSTACK.functionParameter.array1.name',\n                detail: 'formula.functionList.VSTACK.functionParameter.array1.detail',\n                example: 'A2:C3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VSTACK.functionParameter.array2.name',\n                detail: 'formula.functionList.VSTACK.functionParameter.array2.detail',\n                example: 'E2:G3',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.WRAPCOLS,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.WRAPCOLS.description',\n        abstract: 'formula.functionList.WRAPCOLS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.WRAPCOLS.functionParameter.vector.name',\n                detail: 'formula.functionList.WRAPCOLS.functionParameter.vector.detail',\n                example: 'A2:G2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WRAPCOLS.functionParameter.wrapCount.name',\n                detail: 'formula.functionList.WRAPCOLS.functionParameter.wrapCount.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WRAPCOLS.functionParameter.padWith.name',\n                detail: 'formula.functionList.WRAPCOLS.functionParameter.padWith.detail',\n                example: '\"x\"',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.WRAPROWS,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.WRAPROWS.description',\n        abstract: 'formula.functionList.WRAPROWS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.WRAPROWS.functionParameter.vector.name',\n                detail: 'formula.functionList.WRAPROWS.functionParameter.vector.detail',\n                example: 'A2:G2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WRAPROWS.functionParameter.wrapCount.name',\n                detail: 'formula.functionList.WRAPROWS.functionParameter.wrapCount.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WRAPROWS.functionParameter.padWith.name',\n                detail: 'formula.functionList.WRAPROWS.functionParameter.padWith.detail',\n                example: '\"x\"',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.XLOOKUP,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.XLOOKUP.description',\n        abstract: 'formula.functionList.XLOOKUP.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.XLOOKUP.functionParameter.lookupValue.name',\n                detail: 'formula.functionList.XLOOKUP.functionParameter.lookupValue.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.XLOOKUP.functionParameter.lookupArray.name',\n                detail: 'formula.functionList.XLOOKUP.functionParameter.lookupArray.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.XLOOKUP.functionParameter.returnArray.name',\n                detail: 'formula.functionList.XLOOKUP.functionParameter.returnArray.detail',\n                example: 'B1:B20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.XLOOKUP.functionParameter.ifNotFound.name',\n                detail: 'formula.functionList.XLOOKUP.functionParameter.ifNotFound.detail',\n                example: 'default',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.XLOOKUP.functionParameter.matchMode.name',\n                detail: 'formula.functionList.XLOOKUP.functionParameter.matchMode.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.XLOOKUP.functionParameter.searchMode.name',\n                detail: 'formula.functionList.XLOOKUP.functionParameter.searchMode.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_LOOKUP.XMATCH,\n        functionType: FunctionType.Lookup,\n        description: 'formula.functionList.XMATCH.description',\n        abstract: 'formula.functionList.XMATCH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.XMATCH.functionParameter.lookupValue.name',\n                detail: 'formula.functionList.XMATCH.functionParameter.lookupValue.detail',\n                example: 'B1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.XMATCH.functionParameter.lookupArray.name',\n                detail: 'formula.functionList.XMATCH.functionParameter.lookupArray.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.XMATCH.functionParameter.matchMode.name',\n                detail: 'formula.functionList.XMATCH.functionParameter.matchMode.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.XMATCH.functionParameter.searchMode.name',\n                detail: 'formula.functionList.XMATCH.functionParameter.searchMode.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IFunctionInfo } from '@univerjs/engine-formula';\nimport { FUNCTION_NAMES_MATH, FunctionType } from '@univerjs/engine-formula';\n\nexport const FUNCTION_LIST_MATH: IFunctionInfo[] = [\n    {\n        functionName: FUNCTION_NAMES_MATH.ABS,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ABS.description',\n        abstract: 'formula.functionList.ABS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ABS.functionParameter.number.name',\n                detail: 'formula.functionList.ABS.functionParameter.number.detail',\n                example: '-2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ACOS,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ACOS.description',\n        abstract: 'formula.functionList.ACOS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ACOS.functionParameter.number.name',\n                detail: 'formula.functionList.ACOS.functionParameter.number.detail',\n                example: '0',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ACOSH,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ACOSH.description',\n        abstract: 'formula.functionList.ACOSH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ACOSH.functionParameter.number.name',\n                detail: 'formula.functionList.ACOSH.functionParameter.number.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ACOT,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ACOT.description',\n        abstract: 'formula.functionList.ACOT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ACOT.functionParameter.number.name',\n                detail: 'formula.functionList.ACOT.functionParameter.number.detail',\n                example: '0',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ACOTH,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ACOTH.description',\n        abstract: 'formula.functionList.ACOTH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ACOTH.functionParameter.number.name',\n                detail: 'formula.functionList.ACOTH.functionParameter.number.detail',\n                example: '6',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.AGGREGATE,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.AGGREGATE.description',\n        abstract: 'formula.functionList.AGGREGATE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.AGGREGATE.functionParameter.number1.name',\n                detail: 'formula.functionList.AGGREGATE.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AGGREGATE.functionParameter.number2.name',\n                detail: 'formula.functionList.AGGREGATE.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ARABIC,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ARABIC.description',\n        abstract: 'formula.functionList.ARABIC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ARABIC.functionParameter.text.name',\n                detail: 'formula.functionList.ARABIC.functionParameter.text.detail',\n                example: '\"LVII\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ASIN,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ASIN.description',\n        abstract: 'formula.functionList.ASIN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ASIN.functionParameter.number.name',\n                detail: 'formula.functionList.ASIN.functionParameter.number.detail',\n                example: '0',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ASINH,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ASINH.description',\n        abstract: 'formula.functionList.ASINH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ASINH.functionParameter.number.name',\n                detail: 'formula.functionList.ASINH.functionParameter.number.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ATAN,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ATAN.description',\n        abstract: 'formula.functionList.ATAN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ATAN.functionParameter.number.name',\n                detail: 'formula.functionList.ATAN.functionParameter.number.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ATAN2,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ATAN2.description',\n        abstract: 'formula.functionList.ATAN2.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ATAN2.functionParameter.xNum.name',\n                detail: 'formula.functionList.ATAN2.functionParameter.xNum.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ATAN2.functionParameter.yNum.name',\n                detail: 'formula.functionList.ATAN2.functionParameter.yNum.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ATANH,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ATANH.description',\n        abstract: 'formula.functionList.ATANH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ATANH.functionParameter.number.name',\n                detail: 'formula.functionList.ATANH.functionParameter.number.detail',\n                example: '0.1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.BASE,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.BASE.description',\n        abstract: 'formula.functionList.BASE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BASE.functionParameter.number.name',\n                detail: 'formula.functionList.BASE.functionParameter.number.detail',\n                example: '15',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BASE.functionParameter.radix.name',\n                detail: 'formula.functionList.BASE.functionParameter.radix.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BASE.functionParameter.minLength.name',\n                detail: 'formula.functionList.BASE.functionParameter.minLength.detail',\n                example: '10',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.CEILING,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.CEILING.description',\n        abstract: 'formula.functionList.CEILING.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CEILING.functionParameter.number.name',\n                detail: 'formula.functionList.CEILING.functionParameter.number.detail',\n                example: '2.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CEILING.functionParameter.significance.name',\n                detail: 'formula.functionList.CEILING.functionParameter.significance.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.CEILING_MATH,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.CEILING_MATH.description',\n        abstract: 'formula.functionList.CEILING_MATH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CEILING_MATH.functionParameter.number.name',\n                detail: 'formula.functionList.CEILING_MATH.functionParameter.number.detail',\n                example: '-5.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CEILING_MATH.functionParameter.significance.name',\n                detail: 'formula.functionList.CEILING_MATH.functionParameter.significance.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CEILING_MATH.functionParameter.mode.name',\n                detail: 'formula.functionList.CEILING_MATH.functionParameter.mode.detail',\n                example: '-1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.CEILING_PRECISE,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.CEILING_PRECISE.description',\n        abstract: 'formula.functionList.CEILING_PRECISE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CEILING_PRECISE.functionParameter.number.name',\n                detail: 'formula.functionList.CEILING_PRECISE.functionParameter.number.detail',\n                example: '4.3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CEILING_PRECISE.functionParameter.significance.name',\n                detail: 'formula.functionList.CEILING_PRECISE.functionParameter.significance.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.COMBIN,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.COMBIN.description',\n        abstract: 'formula.functionList.COMBIN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COMBIN.functionParameter.number.name',\n                detail: 'formula.functionList.COMBIN.functionParameter.number.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COMBIN.functionParameter.numberChosen.name',\n                detail: 'formula.functionList.COMBIN.functionParameter.numberChosen.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.COMBINA,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.COMBINA.description',\n        abstract: 'formula.functionList.COMBINA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COMBINA.functionParameter.number.name',\n                detail: 'formula.functionList.COMBINA.functionParameter.number.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COMBINA.functionParameter.numberChosen.name',\n                detail: 'formula.functionList.COMBINA.functionParameter.numberChosen.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.COS,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.COS.description',\n        abstract: 'formula.functionList.COS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COS.functionParameter.number.name',\n                detail: 'formula.functionList.COS.functionParameter.number.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.COSH,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.COSH.description',\n        abstract: 'formula.functionList.COSH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COSH.functionParameter.number.name',\n                detail: 'formula.functionList.COSH.functionParameter.number.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.COT,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.COT.description',\n        abstract: 'formula.functionList.COT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COT.functionParameter.number.name',\n                detail: 'formula.functionList.COT.functionParameter.number.detail',\n                example: '30',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.COTH,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.COTH.description',\n        abstract: 'formula.functionList.COTH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COTH.functionParameter.number.name',\n                detail: 'formula.functionList.COTH.functionParameter.number.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.CSC,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.CSC.description',\n        abstract: 'formula.functionList.CSC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CSC.functionParameter.number.name',\n                detail: 'formula.functionList.CSC.functionParameter.number.detail',\n                example: '15',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.CSCH,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.CSCH.description',\n        abstract: 'formula.functionList.CSCH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CSCH.functionParameter.number.name',\n                detail: 'formula.functionList.CSCH.functionParameter.number.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.DECIMAL,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.DECIMAL.description',\n        abstract: 'formula.functionList.DECIMAL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DECIMAL.functionParameter.text.name',\n                detail: 'formula.functionList.DECIMAL.functionParameter.text.detail',\n                example: '\"FF\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DECIMAL.functionParameter.radix.name',\n                detail: 'formula.functionList.DECIMAL.functionParameter.radix.detail',\n                example: '16',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.DEGREES,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.DEGREES.description',\n        abstract: 'formula.functionList.DEGREES.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DEGREES.functionParameter.angle.name',\n                detail: 'formula.functionList.DEGREES.functionParameter.angle.detail',\n                example: 'PI()',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.EVEN,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.EVEN.description',\n        abstract: 'formula.functionList.EVEN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.EVEN.functionParameter.number.name',\n                detail: 'formula.functionList.EVEN.functionParameter.number.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.EXP,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.EXP.description',\n        abstract: 'formula.functionList.EXP.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.EXP.functionParameter.number.name',\n                detail: 'formula.functionList.EXP.functionParameter.number.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.FACT,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.FACT.description',\n        abstract: 'formula.functionList.FACT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FACT.functionParameter.number.name',\n                detail: 'formula.functionList.FACT.functionParameter.number.detail',\n                example: '5',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.FACTDOUBLE,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.FACTDOUBLE.description',\n        abstract: 'formula.functionList.FACTDOUBLE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FACTDOUBLE.functionParameter.number.name',\n                detail: 'formula.functionList.FACTDOUBLE.functionParameter.number.detail',\n                example: '6',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.FLOOR,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.FLOOR.description',\n        abstract: 'formula.functionList.FLOOR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FLOOR.functionParameter.number.name',\n                detail: 'formula.functionList.FLOOR.functionParameter.number.detail',\n                example: '3.7',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FLOOR.functionParameter.significance.name',\n                detail: 'formula.functionList.FLOOR.functionParameter.significance.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.FLOOR_MATH,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.FLOOR_MATH.description',\n        abstract: 'formula.functionList.FLOOR_MATH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FLOOR_MATH.functionParameter.number.name',\n                detail: 'formula.functionList.FLOOR_MATH.functionParameter.number.detail',\n                example: '-5.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FLOOR_MATH.functionParameter.significance.name',\n                detail: 'formula.functionList.FLOOR_MATH.functionParameter.significance.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FLOOR_MATH.functionParameter.mode.name',\n                detail: 'formula.functionList.FLOOR_MATH.functionParameter.mode.detail',\n                example: '-1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.FLOOR_PRECISE,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.FLOOR_PRECISE.description',\n        abstract: 'formula.functionList.FLOOR_PRECISE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FLOOR_PRECISE.functionParameter.number.name',\n                detail: 'formula.functionList.FLOOR_PRECISE.functionParameter.number.detail',\n                example: '-3.2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FLOOR_PRECISE.functionParameter.significance.name',\n                detail: 'formula.functionList.FLOOR_PRECISE.functionParameter.significance.detail',\n                example: '-1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.GCD,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.GCD.description',\n        abstract: 'formula.functionList.GCD.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.GCD.functionParameter.number1.name',\n                detail: 'formula.functionList.GCD.functionParameter.number1.detail',\n                example: '5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GCD.functionParameter.number2.name',\n                detail: 'formula.functionList.GCD.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.INT,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.INT.description',\n        abstract: 'formula.functionList.INT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.INT.functionParameter.number.name',\n                detail: 'formula.functionList.INT.functionParameter.number.detail',\n                example: '8.9',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ISO_CEILING,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ISO_CEILING.description',\n        abstract: 'formula.functionList.ISO_CEILING.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ISO_CEILING.functionParameter.number1.name',\n                detail: 'formula.functionList.ISO_CEILING.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ISO_CEILING.functionParameter.number2.name',\n                detail: 'formula.functionList.ISO_CEILING.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.LCM,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.LCM.description',\n        abstract: 'formula.functionList.LCM.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LCM.functionParameter.number1.name',\n                detail: 'formula.functionList.LCM.functionParameter.number1.detail',\n                example: '5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LCM.functionParameter.number2.name',\n                detail: 'formula.functionList.LCM.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.LET,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.LET.description',\n        abstract: 'formula.functionList.LET.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LET.functionParameter.number1.name',\n                detail: 'formula.functionList.LET.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LET.functionParameter.number2.name',\n                detail: 'formula.functionList.LET.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.LN,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.LN.description',\n        abstract: 'formula.functionList.LN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LN.functionParameter.number.name',\n                detail: 'formula.functionList.LN.functionParameter.number.detail',\n                example: 'EXP(3)',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.LOG,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.LOG.description',\n        abstract: 'formula.functionList.LOG.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LOG.functionParameter.number.name',\n                detail: 'formula.functionList.LOG.functionParameter.number.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LOG.functionParameter.base.name',\n                detail: 'formula.functionList.LOG.functionParameter.base.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.LOG10,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.LOG10.description',\n        abstract: 'formula.functionList.LOG10.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LOG10.functionParameter.number.name',\n                detail: 'formula.functionList.LOG10.functionParameter.number.detail',\n                example: '100000',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.MDETERM,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.MDETERM.description',\n        abstract: 'formula.functionList.MDETERM.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MDETERM.functionParameter.array.name',\n                detail: 'formula.functionList.MDETERM.functionParameter.array.detail',\n                example: 'A1:C3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.MINVERSE,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.MINVERSE.description',\n        abstract: 'formula.functionList.MINVERSE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MINVERSE.functionParameter.array.name',\n                detail: 'formula.functionList.MINVERSE.functionParameter.array.detail',\n                example: 'A1:C3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.MMULT,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.MMULT.description',\n        abstract: 'formula.functionList.MMULT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MMULT.functionParameter.array1.name',\n                detail: 'formula.functionList.MMULT.functionParameter.array1.detail',\n                example: 'A2:B3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MMULT.functionParameter.array2.name',\n                detail: 'formula.functionList.MMULT.functionParameter.array2.detail',\n                example: 'A5:B6',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.MOD,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.MOD.description',\n        abstract: 'formula.functionList.MOD.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MOD.functionParameter.number.name',\n                detail: 'formula.functionList.MOD.functionParameter.number.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MOD.functionParameter.divisor.name',\n                detail: 'formula.functionList.MOD.functionParameter.divisor.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.MROUND,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.MROUND.description',\n        abstract: 'formula.functionList.MROUND.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MROUND.functionParameter.number.name',\n                detail: 'formula.functionList.MROUND.functionParameter.number.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MROUND.functionParameter.multiple.name',\n                detail: 'formula.functionList.MROUND.functionParameter.multiple.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.MULTINOMIAL,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.MULTINOMIAL.description',\n        abstract: 'formula.functionList.MULTINOMIAL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MULTINOMIAL.functionParameter.number1.name',\n                detail: 'formula.functionList.MULTINOMIAL.functionParameter.number1.detail',\n                example: '5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MULTINOMIAL.functionParameter.number2.name',\n                detail: 'formula.functionList.MULTINOMIAL.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.MUNIT,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.MUNIT.description',\n        abstract: 'formula.functionList.MUNIT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MUNIT.functionParameter.dimension.name',\n                detail: 'formula.functionList.MUNIT.functionParameter.dimension.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ODD,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ODD.description',\n        abstract: 'formula.functionList.ODD.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ODD.functionParameter.number.name',\n                detail: 'formula.functionList.ODD.functionParameter.number.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.PI,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.PI.description',\n        abstract: 'formula.functionList.PI.abstract',\n        functionParameter: [\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.POWER,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.POWER.description',\n        abstract: 'formula.functionList.POWER.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.POWER.functionParameter.number.name',\n                detail: 'formula.functionList.POWER.functionParameter.number.detail',\n                example: '5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.POWER.functionParameter.power.name',\n                detail: 'formula.functionList.POWER.functionParameter.power.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.PRODUCT,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.PRODUCT.description',\n        abstract: 'formula.functionList.PRODUCT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PRODUCT.functionParameter.number1.name',\n                detail: 'formula.functionList.PRODUCT.functionParameter.number1.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PRODUCT.functionParameter.number2.name',\n                detail: 'formula.functionList.PRODUCT.functionParameter.number2.detail',\n                example: 'A2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.QUOTIENT,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.QUOTIENT.description',\n        abstract: 'formula.functionList.QUOTIENT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.QUOTIENT.functionParameter.numerator.name',\n                detail: 'formula.functionList.QUOTIENT.functionParameter.numerator.detail',\n                example: '5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.QUOTIENT.functionParameter.denominator.name',\n                detail: 'formula.functionList.QUOTIENT.functionParameter.denominator.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.RADIANS,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.RADIANS.description',\n        abstract: 'formula.functionList.RADIANS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.RADIANS.functionParameter.angle.name',\n                detail: 'formula.functionList.RADIANS.functionParameter.angle.detail',\n                example: '270',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.RAND,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.RAND.description',\n        abstract: 'formula.functionList.RAND.abstract',\n        functionParameter: [\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.RANDARRAY,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.RANDARRAY.description',\n        abstract: 'formula.functionList.RANDARRAY.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.RANDARRAY.functionParameter.rows.name',\n                detail: 'formula.functionList.RANDARRAY.functionParameter.rows.detail',\n                example: '5',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RANDARRAY.functionParameter.columns.name',\n                detail: 'formula.functionList.RANDARRAY.functionParameter.columns.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RANDARRAY.functionParameter.min.name',\n                detail: 'formula.functionList.RANDARRAY.functionParameter.min.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RANDARRAY.functionParameter.max.name',\n                detail: 'formula.functionList.RANDARRAY.functionParameter.max.detail',\n                example: '100',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RANDARRAY.functionParameter.wholeNumber.name',\n                detail: 'formula.functionList.RANDARRAY.functionParameter.wholeNumber.detail',\n                example: 'TRUE',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.RANDBETWEEN,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.RANDBETWEEN.description',\n        abstract: 'formula.functionList.RANDBETWEEN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.RANDBETWEEN.functionParameter.bottom.name',\n                detail: 'formula.functionList.RANDBETWEEN.functionParameter.bottom.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RANDBETWEEN.functionParameter.top.name',\n                detail: 'formula.functionList.RANDBETWEEN.functionParameter.top.detail',\n                example: '100',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ROMAN,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ROMAN.description',\n        abstract: 'formula.functionList.ROMAN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ROMAN.functionParameter.number.name',\n                detail: 'formula.functionList.ROMAN.functionParameter.number.detail',\n                example: '499',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ROMAN.functionParameter.form.name',\n                detail: 'formula.functionList.ROMAN.functionParameter.form.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ROUND,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ROUND.description',\n        abstract: 'formula.functionList.ROUND.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ROUND.functionParameter.number.name',\n                detail: 'formula.functionList.ROUND.functionParameter.number.detail',\n                example: '2.15',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ROUND.functionParameter.numDigits.name',\n                detail: 'formula.functionList.ROUND.functionParameter.numDigits.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ROUNDBANK,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ROUNDBANK.description',\n        abstract: 'formula.functionList.ROUNDBANK.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ROUNDBANK.functionParameter.number.name',\n                detail: 'formula.functionList.ROUNDBANK.functionParameter.number.detail',\n                example: '2.345',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ROUNDBANK.functionParameter.numDigits.name',\n                detail: 'formula.functionList.ROUNDBANK.functionParameter.numDigits.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ROUNDDOWN,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ROUNDDOWN.description',\n        abstract: 'formula.functionList.ROUNDDOWN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ROUNDDOWN.functionParameter.number.name',\n                detail: 'formula.functionList.ROUNDDOWN.functionParameter.number.detail',\n                example: '3.2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ROUNDDOWN.functionParameter.numDigits.name',\n                detail: 'formula.functionList.ROUNDDOWN.functionParameter.numDigits.detail',\n                example: '0',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.ROUNDUP,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.ROUNDUP.description',\n        abstract: 'formula.functionList.ROUNDUP.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ROUNDUP.functionParameter.number.name',\n                detail: 'formula.functionList.ROUNDUP.functionParameter.number.detail',\n                example: '3.2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ROUNDUP.functionParameter.numDigits.name',\n                detail: 'formula.functionList.ROUNDUP.functionParameter.numDigits.detail',\n                example: '0',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SEC,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SEC.description',\n        abstract: 'formula.functionList.SEC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SEC.functionParameter.number.name',\n                detail: 'formula.functionList.SEC.functionParameter.number.detail',\n                example: '30',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SECH,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SECH.description',\n        abstract: 'formula.functionList.SECH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SECH.functionParameter.number.name',\n                detail: 'formula.functionList.SECH.functionParameter.number.detail',\n                example: '30',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SERIESSUM,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SERIESSUM.description',\n        abstract: 'formula.functionList.SERIESSUM.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SERIESSUM.functionParameter.x.name',\n                detail: 'formula.functionList.SERIESSUM.functionParameter.x.detail',\n                example: '0.785398163',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SERIESSUM.functionParameter.n.name',\n                detail: 'formula.functionList.SERIESSUM.functionParameter.n.detail',\n                example: '0',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SERIESSUM.functionParameter.m.name',\n                detail: 'formula.functionList.SERIESSUM.functionParameter.m.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SERIESSUM.functionParameter.coefficients.name',\n                detail: 'formula.functionList.SERIESSUM.functionParameter.coefficients.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SEQUENCE,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SEQUENCE.description',\n        abstract: 'formula.functionList.SEQUENCE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SEQUENCE.functionParameter.rows.name',\n                detail: 'formula.functionList.SEQUENCE.functionParameter.rows.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SEQUENCE.functionParameter.columns.name',\n                detail: 'formula.functionList.SEQUENCE.functionParameter.columns.detail',\n                example: '5',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SEQUENCE.functionParameter.start.name',\n                detail: 'formula.functionList.SEQUENCE.functionParameter.start.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SEQUENCE.functionParameter.step.name',\n                detail: 'formula.functionList.SEQUENCE.functionParameter.step.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SIGN,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SIGN.description',\n        abstract: 'formula.functionList.SIGN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SIGN.functionParameter.number.name',\n                detail: 'formula.functionList.SIGN.functionParameter.number.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SIN,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SIN.description',\n        abstract: 'formula.functionList.SIN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SIN.functionParameter.number.name',\n                detail: 'formula.functionList.SIN.functionParameter.number.detail',\n                example: '30*PI()/180',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SINH,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SINH.description',\n        abstract: 'formula.functionList.SINH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SINH.functionParameter.number.name',\n                detail: 'formula.functionList.SINH.functionParameter.number.detail',\n                example: '0.0342*1.03',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SQRT,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SQRT.description',\n        abstract: 'formula.functionList.SQRT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SQRT.functionParameter.number.name',\n                detail: 'formula.functionList.SQRT.functionParameter.number.detail',\n                example: '16',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SQRTPI,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SQRTPI.description',\n        abstract: 'formula.functionList.SQRTPI.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SQRTPI.functionParameter.number.name',\n                detail: 'formula.functionList.SQRTPI.functionParameter.number.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SUBTOTAL,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SUBTOTAL.description',\n        abstract: 'formula.functionList.SUBTOTAL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SUBTOTAL.functionParameter.functionNum.name',\n                detail: 'formula.functionList.SUBTOTAL.functionParameter.functionNum.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUBTOTAL.functionParameter.ref1.name',\n                detail: 'formula.functionList.SUBTOTAL.functionParameter.ref1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUBTOTAL.functionParameter.ref2.name',\n                detail: 'formula.functionList.SUBTOTAL.functionParameter.ref2.detail',\n                example: 'B1:B20',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SUM,\n        aliasFunctionName: 'formula.functionList.SUM.aliasFunctionName',\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SUM.description',\n        abstract: 'formula.functionList.SUM.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SUM.functionParameter.number1.name',\n                detail: 'formula.functionList.SUM.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUM.functionParameter.number2.name',\n                detail: 'formula.functionList.SUM.functionParameter.number2.detail',\n                example: 'B2:B10',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SUMIF,\n        aliasFunctionName: 'formula.functionList.SUMIF.aliasFunctionName',\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SUMIF.description',\n        abstract: 'formula.functionList.SUMIF.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SUMIF.functionParameter.range.name',\n                detail: 'formula.functionList.SUMIF.functionParameter.range.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUMIF.functionParameter.criteria.name',\n                detail: 'formula.functionList.SUMIF.functionParameter.criteria.detail',\n                example: '\">5\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUMIF.functionParameter.sumRange.name',\n                detail: 'formula.functionList.SUMIF.functionParameter.sumRange.detail',\n                example: 'B1:B20',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SUMIFS,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SUMIFS.description',\n        abstract: 'formula.functionList.SUMIFS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SUMIFS.functionParameter.sumRange.name',\n                detail: 'formula.functionList.SUMIFS.functionParameter.sumRange.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUMIFS.functionParameter.criteriaRange1.name',\n                detail: 'formula.functionList.SUMIFS.functionParameter.criteriaRange1.detail',\n                example: 'B1:B20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUMIFS.functionParameter.criteria1.name',\n                detail: 'formula.functionList.SUMIFS.functionParameter.criteria1.detail',\n                example: '\">10\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUMIFS.functionParameter.criteriaRange2.name',\n                detail: 'formula.functionList.SUMIFS.functionParameter.criteriaRange2.detail',\n                example: 'C1:C20',\n                require: 0,\n                repeat: 1,\n            },\n            {\n                name: 'formula.functionList.SUMIFS.functionParameter.criteria2.name',\n                detail: 'formula.functionList.SUMIFS.functionParameter.criteria2.detail',\n                example: '\"<20\"',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SUMPRODUCT,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SUMPRODUCT.description',\n        abstract: 'formula.functionList.SUMPRODUCT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SUMPRODUCT.functionParameter.array1.name',\n                detail: 'formula.functionList.SUMPRODUCT.functionParameter.array1.detail',\n                example: 'C2:C5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUMPRODUCT.functionParameter.array2.name',\n                detail: 'formula.functionList.SUMPRODUCT.functionParameter.array2.detail',\n                example: 'D2:D5',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SUMSQ,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SUMSQ.description',\n        abstract: 'formula.functionList.SUMSQ.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SUMSQ.functionParameter.number1.name',\n                detail: 'formula.functionList.SUMSQ.functionParameter.number1.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUMSQ.functionParameter.number2.name',\n                detail: 'formula.functionList.SUMSQ.functionParameter.number2.detail',\n                example: '4',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SUMX2MY2,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SUMX2MY2.description',\n        abstract: 'formula.functionList.SUMX2MY2.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SUMX2MY2.functionParameter.arrayX.name',\n                detail: 'formula.functionList.SUMX2MY2.functionParameter.arrayX.detail',\n                example: 'A2:A8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUMX2MY2.functionParameter.arrayY.name',\n                detail: 'formula.functionList.SUMX2MY2.functionParameter.arrayY.detail',\n                example: 'B2:B8',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SUMX2PY2,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SUMX2PY2.description',\n        abstract: 'formula.functionList.SUMX2PY2.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SUMX2PY2.functionParameter.arrayX.name',\n                detail: 'formula.functionList.SUMX2PY2.functionParameter.arrayX.detail',\n                example: 'A2:A8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUMX2PY2.functionParameter.arrayY.name',\n                detail: 'formula.functionList.SUMX2PY2.functionParameter.arrayY.detail',\n                example: 'B2:B8',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.SUMXMY2,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.SUMXMY2.description',\n        abstract: 'formula.functionList.SUMXMY2.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SUMXMY2.functionParameter.arrayX.name',\n                detail: 'formula.functionList.SUMXMY2.functionParameter.arrayX.detail',\n                example: 'A2:A8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUMXMY2.functionParameter.arrayY.name',\n                detail: 'formula.functionList.SUMXMY2.functionParameter.arrayY.detail',\n                example: 'B2:B8',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.TAN,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.TAN.description',\n        abstract: 'formula.functionList.TAN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TAN.functionParameter.number.name',\n                detail: 'formula.functionList.TAN.functionParameter.number.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.TANH,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.TANH.description',\n        abstract: 'formula.functionList.TANH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TANH.functionParameter.number.name',\n                detail: 'formula.functionList.TANH.functionParameter.number.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_MATH.TRUNC,\n        functionType: FunctionType.Math,\n        description: 'formula.functionList.TRUNC.description',\n        abstract: 'formula.functionList.TRUNC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TRUNC.functionParameter.number.name',\n                detail: 'formula.functionList.TRUNC.functionParameter.number.detail',\n                example: '0.45',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TRUNC.functionParameter.numDigits.name',\n                detail: 'formula.functionList.TRUNC.functionParameter.numDigits.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IFunctionInfo } from '@univerjs/engine-formula';\nimport { FUNCTION_NAMES_STATISTICAL, FunctionType } from '@univerjs/engine-formula';\n\nexport const FUNCTION_LIST_STATISTICAL: IFunctionInfo[] = [\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.AVEDEV,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.AVEDEV.description',\n        abstract: 'formula.functionList.AVEDEV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.AVEDEV.functionParameter.number1.name',\n                detail: 'formula.functionList.AVEDEV.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AVEDEV.functionParameter.number2.name',\n                detail: 'formula.functionList.AVEDEV.functionParameter.number2.detail',\n                example: 'B1:B20',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.AVERAGE,\n        aliasFunctionName: 'formula.functionList.AVERAGE.aliasFunctionName',\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.AVERAGE.description',\n        abstract: 'formula.functionList.AVERAGE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.AVERAGE.functionParameter.number1.name',\n                detail: 'formula.functionList.AVERAGE.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AVERAGE.functionParameter.number2.name',\n                detail: 'formula.functionList.AVERAGE.functionParameter.number2.detail',\n                example: 'B1:B20',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.AVERAGE_WEIGHTED,\n        aliasFunctionName: 'formula.functionList.AVERAGE_WEIGHTED.aliasFunctionName',\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.AVERAGE_WEIGHTED.description',\n        abstract: 'formula.functionList.AVERAGE_WEIGHTED.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.AVERAGE_WEIGHTED.functionParameter.values.name',\n                detail: 'formula.functionList.AVERAGE_WEIGHTED.functionParameter.values.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AVERAGE_WEIGHTED.functionParameter.weights.name',\n                detail: 'formula.functionList.AVERAGE_WEIGHTED.functionParameter.weights.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AVERAGE_WEIGHTED.functionParameter.additionalValues.name',\n                detail: 'formula.functionList.AVERAGE_WEIGHTED.functionParameter.additionalValues.detail',\n                example: '20',\n                require: 0,\n                repeat: 1,\n            },\n            {\n                name: 'formula.functionList.AVERAGE_WEIGHTED.functionParameter.additionalWeights.name',\n                detail: 'formula.functionList.AVERAGE_WEIGHTED.functionParameter.additionalWeights.detail',\n                example: '3',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.AVERAGEA,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.AVERAGEA.description',\n        abstract: 'formula.functionList.AVERAGEA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.AVERAGEA.functionParameter.value1.name',\n                detail: 'formula.functionList.AVERAGEA.functionParameter.value1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AVERAGEA.functionParameter.value2.name',\n                detail: 'formula.functionList.AVERAGEA.functionParameter.value2.detail',\n                example: 'B1:B20',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.AVERAGEIF,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.AVERAGEIF.description',\n        abstract: 'formula.functionList.AVERAGEIF.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.AVERAGEIF.functionParameter.range.name',\n                detail: 'formula.functionList.AVERAGEIF.functionParameter.range.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AVERAGEIF.functionParameter.criteria.name',\n                detail: 'formula.functionList.AVERAGEIF.functionParameter.criteria.detail',\n                example: '\">5\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AVERAGEIF.functionParameter.averageRange.name',\n                detail: 'formula.functionList.AVERAGEIF.functionParameter.averageRange.detail',\n                example: 'B1:B20',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.AVERAGEIFS,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.AVERAGEIFS.description',\n        abstract: 'formula.functionList.AVERAGEIFS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.AVERAGEIFS.functionParameter.averageRange.name',\n                detail: 'formula.functionList.AVERAGEIFS.functionParameter.averageRange.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AVERAGEIFS.functionParameter.criteriaRange1.name',\n                detail: 'formula.functionList.AVERAGEIFS.functionParameter.criteriaRange1.detail',\n                example: 'B1:B20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AVERAGEIFS.functionParameter.criteria1.name',\n                detail: 'formula.functionList.AVERAGEIFS.functionParameter.criteria1.detail',\n                example: '\">10\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.AVERAGEIFS.functionParameter.criteriaRange2.name',\n                detail: 'formula.functionList.AVERAGEIFS.functionParameter.criteriaRange2.detail',\n                example: 'C1:C20',\n                require: 0,\n                repeat: 1,\n            },\n            {\n                name: 'formula.functionList.AVERAGEIFS.functionParameter.criteria2.name',\n                detail: 'formula.functionList.AVERAGEIFS.functionParameter.criteria2.detail',\n                example: '\"<20\"',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.BETA_DIST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.BETA_DIST.description',\n        abstract: 'formula.functionList.BETA_DIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BETA_DIST.functionParameter.x.name',\n                detail: 'formula.functionList.BETA_DIST.functionParameter.x.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETA_DIST.functionParameter.alpha.name',\n                detail: 'formula.functionList.BETA_DIST.functionParameter.alpha.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETA_DIST.functionParameter.beta.name',\n                detail: 'formula.functionList.BETA_DIST.functionParameter.beta.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETA_DIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.BETA_DIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETA_DIST.functionParameter.A.name',\n                detail: 'formula.functionList.BETA_DIST.functionParameter.A.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETA_DIST.functionParameter.B.name',\n                detail: 'formula.functionList.BETA_DIST.functionParameter.B.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.BETA_INV,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.BETA_INV.description',\n        abstract: 'formula.functionList.BETA_INV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BETA_INV.functionParameter.probability.name',\n                detail: 'formula.functionList.BETA_INV.functionParameter.probability.detail',\n                example: '0.685470581',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETA_INV.functionParameter.alpha.name',\n                detail: 'formula.functionList.BETA_INV.functionParameter.alpha.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETA_INV.functionParameter.beta.name',\n                detail: 'formula.functionList.BETA_INV.functionParameter.beta.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETA_INV.functionParameter.A.name',\n                detail: 'formula.functionList.BETA_INV.functionParameter.A.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BETA_INV.functionParameter.B.name',\n                detail: 'formula.functionList.BETA_INV.functionParameter.B.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.BINOM_DIST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.BINOM_DIST.description',\n        abstract: 'formula.functionList.BINOM_DIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BINOM_DIST.functionParameter.numberS.name',\n                detail: 'formula.functionList.BINOM_DIST.functionParameter.numberS.detail',\n                example: '6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BINOM_DIST.functionParameter.trials.name',\n                detail: 'formula.functionList.BINOM_DIST.functionParameter.trials.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BINOM_DIST.functionParameter.probabilityS.name',\n                detail: 'formula.functionList.BINOM_DIST.functionParameter.probabilityS.detail',\n                example: '0.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BINOM_DIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.BINOM_DIST.functionParameter.cumulative.detail',\n                example: 'false',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.BINOM_DIST_RANGE,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.BINOM_DIST_RANGE.description',\n        abstract: 'formula.functionList.BINOM_DIST_RANGE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BINOM_DIST_RANGE.functionParameter.trials.name',\n                detail: 'formula.functionList.BINOM_DIST_RANGE.functionParameter.trials.detail',\n                example: '60',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BINOM_DIST_RANGE.functionParameter.probabilityS.name',\n                detail: 'formula.functionList.BINOM_DIST_RANGE.functionParameter.probabilityS.detail',\n                example: '0.75',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BINOM_DIST_RANGE.functionParameter.numberS.name',\n                detail: 'formula.functionList.BINOM_DIST_RANGE.functionParameter.numberS.detail',\n                example: '45',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BINOM_DIST_RANGE.functionParameter.numberS2.name',\n                detail: 'formula.functionList.BINOM_DIST_RANGE.functionParameter.numberS2.detail',\n                example: '50',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.BINOM_INV,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.BINOM_INV.description',\n        abstract: 'formula.functionList.BINOM_INV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BINOM_INV.functionParameter.trials.name',\n                detail: 'formula.functionList.BINOM_INV.functionParameter.trials.detail',\n                example: '6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BINOM_INV.functionParameter.probabilityS.name',\n                detail: 'formula.functionList.BINOM_INV.functionParameter.probabilityS.detail',\n                example: '0.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.BINOM_INV.functionParameter.alpha.name',\n                detail: 'formula.functionList.BINOM_INV.functionParameter.alpha.detail',\n                example: '0.75',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.CHISQ_DIST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.CHISQ_DIST.description',\n        abstract: 'formula.functionList.CHISQ_DIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CHISQ_DIST.functionParameter.x.name',\n                detail: 'formula.functionList.CHISQ_DIST.functionParameter.x.detail',\n                example: '0.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CHISQ_DIST.functionParameter.degFreedom.name',\n                detail: 'formula.functionList.CHISQ_DIST.functionParameter.degFreedom.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CHISQ_DIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.CHISQ_DIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.CHISQ_DIST_RT,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.CHISQ_DIST_RT.description',\n        abstract: 'formula.functionList.CHISQ_DIST_RT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CHISQ_DIST_RT.functionParameter.x.name',\n                detail: 'formula.functionList.CHISQ_DIST_RT.functionParameter.x.detail',\n                example: '0.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CHISQ_DIST_RT.functionParameter.degFreedom.name',\n                detail: 'formula.functionList.CHISQ_DIST_RT.functionParameter.degFreedom.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.CHISQ_INV,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.CHISQ_INV.description',\n        abstract: 'formula.functionList.CHISQ_INV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CHISQ_INV.functionParameter.probability.name',\n                detail: 'formula.functionList.CHISQ_INV.functionParameter.probability.detail',\n                example: '0.93',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CHISQ_INV.functionParameter.degFreedom.name',\n                detail: 'formula.functionList.CHISQ_INV.functionParameter.degFreedom.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.CHISQ_INV_RT,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.CHISQ_INV_RT.description',\n        abstract: 'formula.functionList.CHISQ_INV_RT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CHISQ_INV_RT.functionParameter.probability.name',\n                detail: 'formula.functionList.CHISQ_INV_RT.functionParameter.probability.detail',\n                example: '0.93',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CHISQ_INV_RT.functionParameter.degFreedom.name',\n                detail: 'formula.functionList.CHISQ_INV_RT.functionParameter.degFreedom.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.CHISQ_TEST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.CHISQ_TEST.description',\n        abstract: 'formula.functionList.CHISQ_TEST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CHISQ_TEST.functionParameter.actualRange.name',\n                detail: 'formula.functionList.CHISQ_TEST.functionParameter.actualRange.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CHISQ_TEST.functionParameter.expectedRange.name',\n                detail: 'formula.functionList.CHISQ_TEST.functionParameter.expectedRange.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.CONFIDENCE_NORM,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.CONFIDENCE_NORM.description',\n        abstract: 'formula.functionList.CONFIDENCE_NORM.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CONFIDENCE_NORM.functionParameter.alpha.name',\n                detail: 'formula.functionList.CONFIDENCE_NORM.functionParameter.alpha.detail',\n                example: '0.05',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CONFIDENCE_NORM.functionParameter.standardDev.name',\n                detail: 'formula.functionList.CONFIDENCE_NORM.functionParameter.standardDev.detail',\n                example: '2.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CONFIDENCE_NORM.functionParameter.size.name',\n                detail: 'formula.functionList.CONFIDENCE_NORM.functionParameter.size.detail',\n                example: '50',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.CONFIDENCE_T,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.CONFIDENCE_T.description',\n        abstract: 'formula.functionList.CONFIDENCE_T.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CONFIDENCE_T.functionParameter.alpha.name',\n                detail: 'formula.functionList.CONFIDENCE_T.functionParameter.alpha.detail',\n                example: '0.05',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CONFIDENCE_T.functionParameter.standardDev.name',\n                detail: 'formula.functionList.CONFIDENCE_T.functionParameter.standardDev.detail',\n                example: '2.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CONFIDENCE_T.functionParameter.size.name',\n                detail: 'formula.functionList.CONFIDENCE_T.functionParameter.size.detail',\n                example: '50',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.CORREL,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.CORREL.description',\n        abstract: 'formula.functionList.CORREL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CORREL.functionParameter.array1.name',\n                detail: 'formula.functionList.CORREL.functionParameter.array1.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CORREL.functionParameter.array2.name',\n                detail: 'formula.functionList.CORREL.functionParameter.array2.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.COUNT,\n        aliasFunctionName: 'formula.functionList.COUNT.aliasFunctionName',\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.COUNT.description',\n        abstract: 'formula.functionList.COUNT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COUNT.functionParameter.value1.name',\n                detail: 'formula.functionList.COUNT.functionParameter.value1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUNT.functionParameter.value2.name',\n                detail: 'formula.functionList.COUNT.functionParameter.value2.detail',\n                example: 'B2:B10',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.COUNTA,\n        aliasFunctionName: 'formula.functionList.COUNTA.aliasFunctionName',\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.COUNTA.description',\n        abstract: 'formula.functionList.COUNTA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COUNTA.functionParameter.number1.name',\n                detail: 'formula.functionList.COUNTA.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUNTA.functionParameter.number2.name',\n                detail: 'formula.functionList.COUNTA.functionParameter.number2.detail',\n                example: 'B2:B10',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.COUNTBLANK,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.COUNTBLANK.description',\n        abstract: 'formula.functionList.COUNTBLANK.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COUNTBLANK.functionParameter.range.name',\n                detail: 'formula.functionList.COUNTBLANK.functionParameter.range.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.COUNTIF,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.COUNTIF.description',\n        abstract: 'formula.functionList.COUNTIF.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COUNTIF.functionParameter.range.name',\n                detail: 'formula.functionList.COUNTIF.functionParameter.range.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUNTIF.functionParameter.criteria.name',\n                detail: 'formula.functionList.COUNTIF.functionParameter.criteria.detail',\n                example: '\">5\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.COUNTIFS,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.COUNTIFS.description',\n        abstract: 'formula.functionList.COUNTIFS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COUNTIFS.functionParameter.criteriaRange1.name',\n                detail: 'formula.functionList.COUNTIFS.functionParameter.criteriaRange1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUNTIFS.functionParameter.criteria1.name',\n                detail: 'formula.functionList.COUNTIFS.functionParameter.criteria1.detail',\n                example: '\">10\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COUNTIFS.functionParameter.criteriaRange2.name',\n                detail: 'formula.functionList.COUNTIFS.functionParameter.criteriaRange2.detail',\n                example: 'B1:B20',\n                require: 0,\n                repeat: 1,\n            },\n            {\n                name: 'formula.functionList.COUNTIFS.functionParameter.criteria2.name',\n                detail: 'formula.functionList.COUNTIFS.functionParameter.criteria2.detail',\n                example: '\"<20\"',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.COVARIANCE_P,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.COVARIANCE_P.description',\n        abstract: 'formula.functionList.COVARIANCE_P.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COVARIANCE_P.functionParameter.array1.name',\n                detail: 'formula.functionList.COVARIANCE_P.functionParameter.array1.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COVARIANCE_P.functionParameter.array2.name',\n                detail: 'formula.functionList.COVARIANCE_P.functionParameter.array2.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.COVARIANCE_S,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.COVARIANCE_S.description',\n        abstract: 'formula.functionList.COVARIANCE_S.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.COVARIANCE_S.functionParameter.array1.name',\n                detail: 'formula.functionList.COVARIANCE_S.functionParameter.array1.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.COVARIANCE_S.functionParameter.array2.name',\n                detail: 'formula.functionList.COVARIANCE_S.functionParameter.array2.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.DEVSQ,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.DEVSQ.description',\n        abstract: 'formula.functionList.DEVSQ.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DEVSQ.functionParameter.number1.name',\n                detail: 'formula.functionList.DEVSQ.functionParameter.number1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DEVSQ.functionParameter.number2.name',\n                detail: 'formula.functionList.DEVSQ.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.EXPON_DIST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.EXPON_DIST.description',\n        abstract: 'formula.functionList.EXPON_DIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.EXPON_DIST.functionParameter.x.name',\n                detail: 'formula.functionList.EXPON_DIST.functionParameter.x.detail',\n                example: '0.2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.EXPON_DIST.functionParameter.lambda.name',\n                detail: 'formula.functionList.EXPON_DIST.functionParameter.lambda.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.EXPON_DIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.EXPON_DIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.F_DIST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.F_DIST.description',\n        abstract: 'formula.functionList.F_DIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.F_DIST.functionParameter.x.name',\n                detail: 'formula.functionList.F_DIST.functionParameter.x.detail',\n                example: '15.2069',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.F_DIST.functionParameter.degFreedom1.name',\n                detail: 'formula.functionList.F_DIST.functionParameter.degFreedom1.detail',\n                example: '6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.F_DIST.functionParameter.degFreedom2.name',\n                detail: 'formula.functionList.F_DIST.functionParameter.degFreedom2.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.F_DIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.F_DIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.F_DIST_RT,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.F_DIST_RT.description',\n        abstract: 'formula.functionList.F_DIST_RT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.F_DIST_RT.functionParameter.x.name',\n                detail: 'formula.functionList.F_DIST_RT.functionParameter.x.detail',\n                example: '15.2069',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.F_DIST_RT.functionParameter.degFreedom1.name',\n                detail: 'formula.functionList.F_DIST_RT.functionParameter.degFreedom1.detail',\n                example: '6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.F_DIST_RT.functionParameter.degFreedom2.name',\n                detail: 'formula.functionList.F_DIST_RT.functionParameter.degFreedom2.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.F_INV,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.F_INV.description',\n        abstract: 'formula.functionList.F_INV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.F_INV.functionParameter.probability.name',\n                detail: 'formula.functionList.F_INV.functionParameter.probability.detail',\n                example: '0.01',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.F_INV.functionParameter.degFreedom1.name',\n                detail: 'formula.functionList.F_INV.functionParameter.degFreedom1.detail',\n                example: '6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.F_INV.functionParameter.degFreedom2.name',\n                detail: 'formula.functionList.F_INV.functionParameter.degFreedom2.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.F_INV_RT,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.F_INV_RT.description',\n        abstract: 'formula.functionList.F_INV_RT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.F_INV_RT.functionParameter.probability.name',\n                detail: 'formula.functionList.F_INV_RT.functionParameter.probability.detail',\n                example: '0.01',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.F_INV_RT.functionParameter.degFreedom1.name',\n                detail: 'formula.functionList.F_INV_RT.functionParameter.degFreedom1.detail',\n                example: '6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.F_INV_RT.functionParameter.degFreedom2.name',\n                detail: 'formula.functionList.F_INV_RT.functionParameter.degFreedom2.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.F_TEST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.F_TEST.description',\n        abstract: 'formula.functionList.F_TEST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.F_TEST.functionParameter.array1.name',\n                detail: 'formula.functionList.F_TEST.functionParameter.array1.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.F_TEST.functionParameter.array2.name',\n                detail: 'formula.functionList.F_TEST.functionParameter.array2.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.FISHER,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.FISHER.description',\n        abstract: 'formula.functionList.FISHER.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FISHER.functionParameter.x.name',\n                detail: 'formula.functionList.FISHER.functionParameter.x.detail',\n                example: '0.75',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.FISHERINV,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.FISHERINV.description',\n        abstract: 'formula.functionList.FISHERINV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FISHERINV.functionParameter.y.name',\n                detail: 'formula.functionList.FISHERINV.functionParameter.y.detail',\n                example: '0.75',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.FORECAST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.FORECAST.description',\n        abstract: 'formula.functionList.FORECAST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FORECAST.functionParameter.x.name',\n                detail: 'formula.functionList.FORECAST.functionParameter.x.detail',\n                example: '30',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FORECAST.functionParameter.knownYs.name',\n                detail: 'formula.functionList.FORECAST.functionParameter.knownYs.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FORECAST.functionParameter.knownXs.name',\n                detail: 'formula.functionList.FORECAST.functionParameter.knownXs.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.FORECAST_ETS,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.FORECAST_ETS.description',\n        abstract: 'formula.functionList.FORECAST_ETS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FORECAST_ETS.functionParameter.number1.name',\n                detail: 'formula.functionList.FORECAST_ETS.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FORECAST_ETS.functionParameter.number2.name',\n                detail: 'formula.functionList.FORECAST_ETS.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.FORECAST_ETS_CONFINT,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.FORECAST_ETS_CONFINT.description',\n        abstract: 'formula.functionList.FORECAST_ETS_CONFINT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FORECAST_ETS_CONFINT.functionParameter.number1.name',\n                detail: 'formula.functionList.FORECAST_ETS_CONFINT.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FORECAST_ETS_CONFINT.functionParameter.number2.name',\n                detail: 'formula.functionList.FORECAST_ETS_CONFINT.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.FORECAST_ETS_SEASONALITY,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.FORECAST_ETS_SEASONALITY.description',\n        abstract: 'formula.functionList.FORECAST_ETS_SEASONALITY.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FORECAST_ETS_SEASONALITY.functionParameter.number1.name',\n                detail: 'formula.functionList.FORECAST_ETS_SEASONALITY.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FORECAST_ETS_SEASONALITY.functionParameter.number2.name',\n                detail: 'formula.functionList.FORECAST_ETS_SEASONALITY.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.FORECAST_ETS_STAT,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.FORECAST_ETS_STAT.description',\n        abstract: 'formula.functionList.FORECAST_ETS_STAT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FORECAST_ETS_STAT.functionParameter.number1.name',\n                detail: 'formula.functionList.FORECAST_ETS_STAT.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FORECAST_ETS_STAT.functionParameter.number2.name',\n                detail: 'formula.functionList.FORECAST_ETS_STAT.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.FORECAST_LINEAR,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.FORECAST_LINEAR.description',\n        abstract: 'formula.functionList.FORECAST_LINEAR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FORECAST_LINEAR.functionParameter.x.name',\n                detail: 'formula.functionList.FORECAST_LINEAR.functionParameter.x.detail',\n                example: '30',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FORECAST_LINEAR.functionParameter.knownYs.name',\n                detail: 'formula.functionList.FORECAST_LINEAR.functionParameter.knownYs.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FORECAST_LINEAR.functionParameter.knownXs.name',\n                detail: 'formula.functionList.FORECAST_LINEAR.functionParameter.knownXs.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.FREQUENCY,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.FREQUENCY.description',\n        abstract: 'formula.functionList.FREQUENCY.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FREQUENCY.functionParameter.dataArray.name',\n                detail: 'formula.functionList.FREQUENCY.functionParameter.dataArray.detail',\n                example: 'A2:A10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FREQUENCY.functionParameter.binsArray.name',\n                detail: 'formula.functionList.FREQUENCY.functionParameter.binsArray.detail',\n                example: 'B2:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.GAMMA,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.GAMMA.description',\n        abstract: 'formula.functionList.GAMMA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.GAMMA.functionParameter.number.name',\n                detail: 'formula.functionList.GAMMA.functionParameter.number.detail',\n                example: '2.5',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.GAMMA_DIST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.GAMMA_DIST.description',\n        abstract: 'formula.functionList.GAMMA_DIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.GAMMA_DIST.functionParameter.x.name',\n                detail: 'formula.functionList.GAMMA_DIST.functionParameter.x.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GAMMA_DIST.functionParameter.alpha.name',\n                detail: 'formula.functionList.GAMMA_DIST.functionParameter.alpha.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GAMMA_DIST.functionParameter.beta.name',\n                detail: 'formula.functionList.GAMMA_DIST.functionParameter.beta.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GAMMA_DIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.GAMMA_DIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.GAMMA_INV,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.GAMMA_INV.description',\n        abstract: 'formula.functionList.GAMMA_INV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.GAMMA_INV.functionParameter.probability.name',\n                detail: 'formula.functionList.GAMMA_INV.functionParameter.probability.detail',\n                example: '0.068094',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GAMMA_INV.functionParameter.alpha.name',\n                detail: 'formula.functionList.GAMMA_INV.functionParameter.alpha.detail',\n                example: '9',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GAMMA_INV.functionParameter.beta.name',\n                detail: 'formula.functionList.GAMMA_INV.functionParameter.beta.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.GAMMALN,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.GAMMALN.description',\n        abstract: 'formula.functionList.GAMMALN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.GAMMALN.functionParameter.x.name',\n                detail: 'formula.functionList.GAMMALN.functionParameter.x.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.GAMMALN_PRECISE,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.GAMMALN_PRECISE.description',\n        abstract: 'formula.functionList.GAMMALN_PRECISE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.GAMMALN_PRECISE.functionParameter.x.name',\n                detail: 'formula.functionList.GAMMALN_PRECISE.functionParameter.x.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.GAUSS,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.GAUSS.description',\n        abstract: 'formula.functionList.GAUSS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.GAUSS.functionParameter.z.name',\n                detail: 'formula.functionList.GAUSS.functionParameter.z.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.GEOMEAN,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.GEOMEAN.description',\n        abstract: 'formula.functionList.GEOMEAN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.GEOMEAN.functionParameter.number1.name',\n                detail: 'formula.functionList.GEOMEAN.functionParameter.number1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GEOMEAN.functionParameter.number2.name',\n                detail: 'formula.functionList.GEOMEAN.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.GROWTH,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.GROWTH.description',\n        abstract: 'formula.functionList.GROWTH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.GROWTH.functionParameter.knownYs.name',\n                detail: 'formula.functionList.GROWTH.functionParameter.knownYs.detail',\n                example: 'B2:B7',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GROWTH.functionParameter.knownXs.name',\n                detail: 'formula.functionList.GROWTH.functionParameter.knownXs.detail',\n                example: 'A2:A7',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GROWTH.functionParameter.newXs.name',\n                detail: 'formula.functionList.GROWTH.functionParameter.newXs.detail',\n                example: 'A9:A10',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.GROWTH.functionParameter.constb.name',\n                detail: 'formula.functionList.GROWTH.functionParameter.constb.detail',\n                example: 'true',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.HARMEAN,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.HARMEAN.description',\n        abstract: 'formula.functionList.HARMEAN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.HARMEAN.functionParameter.number1.name',\n                detail: 'formula.functionList.HARMEAN.functionParameter.number1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.HARMEAN.functionParameter.number2.name',\n                detail: 'formula.functionList.HARMEAN.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.HYPGEOM_DIST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.HYPGEOM_DIST.description',\n        abstract: 'formula.functionList.HYPGEOM_DIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.HYPGEOM_DIST.functionParameter.sampleS.name',\n                detail: 'formula.functionList.HYPGEOM_DIST.functionParameter.sampleS.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.HYPGEOM_DIST.functionParameter.numberSample.name',\n                detail: 'formula.functionList.HYPGEOM_DIST.functionParameter.numberSample.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.HYPGEOM_DIST.functionParameter.populationS.name',\n                detail: 'formula.functionList.HYPGEOM_DIST.functionParameter.populationS.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.HYPGEOM_DIST.functionParameter.numberPop.name',\n                detail: 'formula.functionList.HYPGEOM_DIST.functionParameter.numberPop.detail',\n                example: '20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.HYPGEOM_DIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.HYPGEOM_DIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.INTERCEPT,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.INTERCEPT.description',\n        abstract: 'formula.functionList.INTERCEPT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.INTERCEPT.functionParameter.knownYs.name',\n                detail: 'formula.functionList.INTERCEPT.functionParameter.knownYs.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.INTERCEPT.functionParameter.knownXs.name',\n                detail: 'formula.functionList.INTERCEPT.functionParameter.knownXs.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.KURT,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.KURT.description',\n        abstract: 'formula.functionList.KURT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.KURT.functionParameter.number1.name',\n                detail: 'formula.functionList.KURT.functionParameter.number1.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.KURT.functionParameter.number2.name',\n                detail: 'formula.functionList.KURT.functionParameter.number2.detail',\n                example: '4',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.LARGE,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.LARGE.description',\n        abstract: 'formula.functionList.LARGE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LARGE.functionParameter.array.name',\n                detail: 'formula.functionList.LARGE.functionParameter.array.detail',\n                example: 'A2:B6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LARGE.functionParameter.k.name',\n                detail: 'formula.functionList.LARGE.functionParameter.k.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.LINEST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.LINEST.description',\n        abstract: 'formula.functionList.LINEST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LINEST.functionParameter.knownYs.name',\n                detail: 'formula.functionList.LINEST.functionParameter.knownYs.detail',\n                example: 'B2:B7',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LINEST.functionParameter.knownXs.name',\n                detail: 'formula.functionList.LINEST.functionParameter.knownXs.detail',\n                example: 'A2:A7',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LINEST.functionParameter.constb.name',\n                detail: 'formula.functionList.LINEST.functionParameter.constb.detail',\n                example: 'true',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LINEST.functionParameter.stats.name',\n                detail: 'formula.functionList.LINEST.functionParameter.stats.detail',\n                example: 'true',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.LOGEST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.LOGEST.description',\n        abstract: 'formula.functionList.LOGEST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LOGEST.functionParameter.knownYs.name',\n                detail: 'formula.functionList.LOGEST.functionParameter.knownYs.detail',\n                example: 'B2:B7',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LOGEST.functionParameter.knownXs.name',\n                detail: 'formula.functionList.LOGEST.functionParameter.knownXs.detail',\n                example: 'A2:A7',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LOGEST.functionParameter.constb.name',\n                detail: 'formula.functionList.LOGEST.functionParameter.constb.detail',\n                example: 'true',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LOGEST.functionParameter.stats.name',\n                detail: 'formula.functionList.LOGEST.functionParameter.stats.detail',\n                example: 'true',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.LOGNORM_DIST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.LOGNORM_DIST.description',\n        abstract: 'formula.functionList.LOGNORM_DIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LOGNORM_DIST.functionParameter.x.name',\n                detail: 'formula.functionList.LOGNORM_DIST.functionParameter.x.detail',\n                example: '42',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LOGNORM_DIST.functionParameter.mean.name',\n                detail: 'formula.functionList.LOGNORM_DIST.functionParameter.mean.detail',\n                example: '40',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LOGNORM_DIST.functionParameter.standardDev.name',\n                detail: 'formula.functionList.LOGNORM_DIST.functionParameter.standardDev.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LOGNORM_DIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.LOGNORM_DIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.LOGNORM_INV,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.LOGNORM_INV.description',\n        abstract: 'formula.functionList.LOGNORM_INV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LOGNORM_INV.functionParameter.probability.name',\n                detail: 'formula.functionList.LOGNORM_INV.functionParameter.probability.detail',\n                example: '0.908789',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LOGNORM_INV.functionParameter.mean.name',\n                detail: 'formula.functionList.LOGNORM_INV.functionParameter.mean.detail',\n                example: '40',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LOGNORM_INV.functionParameter.standardDev.name',\n                detail: 'formula.functionList.LOGNORM_INV.functionParameter.standardDev.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.MARGINOFERROR,\n        aliasFunctionName: 'formula.functionList.MARGINOFERROR.aliasFunctionName',\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.MARGINOFERROR.description',\n        abstract: 'formula.functionList.MARGINOFERROR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MARGINOFERROR.functionParameter.range.name',\n                detail: 'formula.functionList.MARGINOFERROR.functionParameter.range.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MARGINOFERROR.functionParameter.confidence.name',\n                detail: 'formula.functionList.MARGINOFERROR.functionParameter.confidence.detail',\n                example: '0.95',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.MAX,\n        aliasFunctionName: 'formula.functionList.MAX.aliasFunctionName',\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.MAX.description',\n        abstract: 'formula.functionList.MAX.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MAX.functionParameter.number1.name',\n                detail: 'formula.functionList.MAX.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MAX.functionParameter.number2.name',\n                detail: 'formula.functionList.MAX.functionParameter.number2.detail',\n                example: 'B2:B10',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.MAXA,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.MAXA.description',\n        abstract: 'formula.functionList.MAXA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MAXA.functionParameter.value1.name',\n                detail: 'formula.functionList.MAXA.functionParameter.value1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MAXA.functionParameter.value2.name',\n                detail: 'formula.functionList.MAXA.functionParameter.value2.detail',\n                example: 'B1:B20',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.MAXIFS,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.MAXIFS.description',\n        abstract: 'formula.functionList.MAXIFS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MAXIFS.functionParameter.maxRange.name',\n                detail: 'formula.functionList.MAXIFS.functionParameter.maxRange.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MAXIFS.functionParameter.criteriaRange1.name',\n                detail: 'formula.functionList.MAXIFS.functionParameter.criteriaRange1.detail',\n                example: 'B1:B20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MAXIFS.functionParameter.criteria1.name',\n                detail: 'formula.functionList.MAXIFS.functionParameter.criteria1.detail',\n                example: '\">10\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MAXIFS.functionParameter.criteriaRange2.name',\n                detail: 'formula.functionList.MAXIFS.functionParameter.criteriaRange2.detail',\n                example: 'C1:C20',\n                require: 0,\n                repeat: 1,\n            },\n            {\n                name: 'formula.functionList.MAXIFS.functionParameter.criteria2.name',\n                detail: 'formula.functionList.MAXIFS.functionParameter.criteria2.detail',\n                example: '\"<20\"',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.MEDIAN,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.MEDIAN.description',\n        abstract: 'formula.functionList.MEDIAN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MEDIAN.functionParameter.number1.name',\n                detail: 'formula.functionList.MEDIAN.functionParameter.number1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MEDIAN.functionParameter.number2.name',\n                detail: 'formula.functionList.MEDIAN.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.MIN,\n        aliasFunctionName: 'formula.functionList.MIN.aliasFunctionName',\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.MIN.description',\n        abstract: 'formula.functionList.MIN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MIN.functionParameter.number1.name',\n                detail: 'formula.functionList.MIN.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MIN.functionParameter.number2.name',\n                detail: 'formula.functionList.MIN.functionParameter.number2.detail',\n                example: 'B2:B10',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.MINA,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.MINA.description',\n        abstract: 'formula.functionList.MINA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MINA.functionParameter.value1.name',\n                detail: 'formula.functionList.MINA.functionParameter.value1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MINA.functionParameter.value2.name',\n                detail: 'formula.functionList.MINA.functionParameter.value2.detail',\n                example: 'B1:B20',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.MINIFS,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.MINIFS.description',\n        abstract: 'formula.functionList.MINIFS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MINIFS.functionParameter.minRange.name',\n                detail: 'formula.functionList.MINIFS.functionParameter.minRange.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MINIFS.functionParameter.criteriaRange1.name',\n                detail: 'formula.functionList.MINIFS.functionParameter.criteriaRange1.detail',\n                example: 'B1:B20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MINIFS.functionParameter.criteria1.name',\n                detail: 'formula.functionList.MINIFS.functionParameter.criteria1.detail',\n                example: '\">10\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MINIFS.functionParameter.criteriaRange2.name',\n                detail: 'formula.functionList.MINIFS.functionParameter.criteriaRange2.detail',\n                example: 'C1:C20',\n                require: 0,\n                repeat: 1,\n            },\n            {\n                name: 'formula.functionList.MINIFS.functionParameter.criteria2.name',\n                detail: 'formula.functionList.MINIFS.functionParameter.criteria2.detail',\n                example: '\"<20\"',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.MODE_MULT,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.MODE_MULT.description',\n        abstract: 'formula.functionList.MODE_MULT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MODE_MULT.functionParameter.number1.name',\n                detail: 'formula.functionList.MODE_MULT.functionParameter.number1.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MODE_MULT.functionParameter.number2.name',\n                detail: 'formula.functionList.MODE_MULT.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.MODE_SNGL,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.MODE_SNGL.description',\n        abstract: 'formula.functionList.MODE_SNGL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MODE_SNGL.functionParameter.number1.name',\n                detail: 'formula.functionList.MODE_SNGL.functionParameter.number1.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MODE_SNGL.functionParameter.number2.name',\n                detail: 'formula.functionList.MODE_SNGL.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.NEGBINOM_DIST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.NEGBINOM_DIST.description',\n        abstract: 'formula.functionList.NEGBINOM_DIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NEGBINOM_DIST.functionParameter.numberF.name',\n                detail: 'formula.functionList.NEGBINOM_DIST.functionParameter.numberF.detail',\n                example: '10',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NEGBINOM_DIST.functionParameter.numberS.name',\n                detail: 'formula.functionList.NEGBINOM_DIST.functionParameter.numberS.detail',\n                example: '5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NEGBINOM_DIST.functionParameter.probabilityS.name',\n                detail: 'formula.functionList.NEGBINOM_DIST.functionParameter.probabilityS.detail',\n                example: '0.25',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NEGBINOM_DIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.NEGBINOM_DIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.NORM_DIST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.NORM_DIST.description',\n        abstract: 'formula.functionList.NORM_DIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NORM_DIST.functionParameter.x.name',\n                detail: 'formula.functionList.NORM_DIST.functionParameter.x.detail',\n                example: '42',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NORM_DIST.functionParameter.mean.name',\n                detail: 'formula.functionList.NORM_DIST.functionParameter.mean.detail',\n                example: '40',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NORM_DIST.functionParameter.standardDev.name',\n                detail: 'formula.functionList.NORM_DIST.functionParameter.standardDev.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NORM_DIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.NORM_DIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.NORM_INV,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.NORM_INV.description',\n        abstract: 'formula.functionList.NORM_INV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NORM_INV.functionParameter.probability.name',\n                detail: 'formula.functionList.NORM_INV.functionParameter.probability.detail',\n                example: '0.908789',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NORM_INV.functionParameter.mean.name',\n                detail: 'formula.functionList.NORM_INV.functionParameter.mean.detail',\n                example: '40',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NORM_INV.functionParameter.standardDev.name',\n                detail: 'formula.functionList.NORM_INV.functionParameter.standardDev.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.NORM_S_DIST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.NORM_S_DIST.description',\n        abstract: 'formula.functionList.NORM_S_DIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NORM_S_DIST.functionParameter.z.name',\n                detail: 'formula.functionList.NORM_S_DIST.functionParameter.z.detail',\n                example: '1.333333',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NORM_S_DIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.NORM_S_DIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.NORM_S_INV,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.NORM_S_INV.description',\n        abstract: 'formula.functionList.NORM_S_INV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NORM_S_INV.functionParameter.probability.name',\n                detail: 'formula.functionList.NORM_S_INV.functionParameter.probability.detail',\n                example: '0.908789',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.PEARSON,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.PEARSON.description',\n        abstract: 'formula.functionList.PEARSON.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PEARSON.functionParameter.array1.name',\n                detail: 'formula.functionList.PEARSON.functionParameter.array1.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PEARSON.functionParameter.array2.name',\n                detail: 'formula.functionList.PEARSON.functionParameter.array2.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.PERCENTILE_EXC,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.PERCENTILE_EXC.description',\n        abstract: 'formula.functionList.PERCENTILE_EXC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PERCENTILE_EXC.functionParameter.array.name',\n                detail: 'formula.functionList.PERCENTILE_EXC.functionParameter.array.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PERCENTILE_EXC.functionParameter.k.name',\n                detail: 'formula.functionList.PERCENTILE_EXC.functionParameter.k.detail',\n                example: '0.3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.PERCENTILE_INC,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.PERCENTILE_INC.description',\n        abstract: 'formula.functionList.PERCENTILE_INC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PERCENTILE_INC.functionParameter.array.name',\n                detail: 'formula.functionList.PERCENTILE_INC.functionParameter.array.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PERCENTILE_INC.functionParameter.k.name',\n                detail: 'formula.functionList.PERCENTILE_INC.functionParameter.k.detail',\n                example: '0.3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.PERCENTRANK_EXC,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.PERCENTRANK_EXC.description',\n        abstract: 'formula.functionList.PERCENTRANK_EXC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PERCENTRANK_EXC.functionParameter.array.name',\n                detail: 'formula.functionList.PERCENTRANK_EXC.functionParameter.array.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PERCENTRANK_EXC.functionParameter.x.name',\n                detail: 'formula.functionList.PERCENTRANK_EXC.functionParameter.x.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PERCENTRANK_EXC.functionParameter.significance.name',\n                detail: 'formula.functionList.PERCENTRANK_EXC.functionParameter.significance.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.PERCENTRANK_INC,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.PERCENTRANK_INC.description',\n        abstract: 'formula.functionList.PERCENTRANK_INC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PERCENTRANK_INC.functionParameter.array.name',\n                detail: 'formula.functionList.PERCENTRANK_INC.functionParameter.array.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PERCENTRANK_INC.functionParameter.x.name',\n                detail: 'formula.functionList.PERCENTRANK_INC.functionParameter.x.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PERCENTRANK_INC.functionParameter.significance.name',\n                detail: 'formula.functionList.PERCENTRANK_INC.functionParameter.significance.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.PERMUT,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.PERMUT.description',\n        abstract: 'formula.functionList.PERMUT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PERMUT.functionParameter.number.name',\n                detail: 'formula.functionList.PERMUT.functionParameter.number.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PERMUT.functionParameter.numberChosen.name',\n                detail: 'formula.functionList.PERMUT.functionParameter.numberChosen.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.PERMUTATIONA,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.PERMUTATIONA.description',\n        abstract: 'formula.functionList.PERMUTATIONA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PERMUT.functionParameter.number.name',\n                detail: 'formula.functionList.PERMUT.functionParameter.number.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PERMUT.functionParameter.numberChosen.name',\n                detail: 'formula.functionList.PERMUT.functionParameter.numberChosen.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.PHI,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.PHI.description',\n        abstract: 'formula.functionList.PHI.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PHI.functionParameter.x.name',\n                detail: 'formula.functionList.PHI.functionParameter.x.detail',\n                example: '0.75',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.POISSON_DIST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.POISSON_DIST.description',\n        abstract: 'formula.functionList.POISSON_DIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.POISSON_DIST.functionParameter.x.name',\n                detail: 'formula.functionList.POISSON_DIST.functionParameter.x.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.POISSON_DIST.functionParameter.mean.name',\n                detail: 'formula.functionList.POISSON_DIST.functionParameter.mean.detail',\n                example: '5',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.POISSON_DIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.POISSON_DIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.PROB,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.PROB.description',\n        abstract: 'formula.functionList.PROB.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PROB.functionParameter.xRange.name',\n                detail: 'formula.functionList.PROB.functionParameter.xRange.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PROB.functionParameter.probRange.name',\n                detail: 'formula.functionList.PROB.functionParameter.probRange.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PROB.functionParameter.lowerLimit.name',\n                detail: 'formula.functionList.PROB.functionParameter.lowerLimit.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PROB.functionParameter.upperLimit.name',\n                detail: 'formula.functionList.PROB.functionParameter.upperLimit.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.QUARTILE_EXC,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.QUARTILE_EXC.description',\n        abstract: 'formula.functionList.QUARTILE_EXC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.QUARTILE_EXC.functionParameter.array.name',\n                detail: 'formula.functionList.QUARTILE_EXC.functionParameter.array.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.QUARTILE_EXC.functionParameter.quart.name',\n                detail: 'formula.functionList.QUARTILE_EXC.functionParameter.quart.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.QUARTILE_INC,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.QUARTILE_INC.description',\n        abstract: 'formula.functionList.QUARTILE_INC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.QUARTILE_INC.functionParameter.array.name',\n                detail: 'formula.functionList.QUARTILE_INC.functionParameter.array.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.QUARTILE_INC.functionParameter.quart.name',\n                detail: 'formula.functionList.QUARTILE_INC.functionParameter.quart.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.RANK_AVG,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.RANK_AVG.description',\n        abstract: 'formula.functionList.RANK_AVG.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.RANK_AVG.functionParameter.number.name',\n                detail: 'formula.functionList.RANK_AVG.functionParameter.number.detail',\n                example: 'A3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RANK_AVG.functionParameter.ref.name',\n                detail: 'formula.functionList.RANK_AVG.functionParameter.ref.detail',\n                example: 'A2:A6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RANK_AVG.functionParameter.order.name',\n                detail: 'formula.functionList.RANK_AVG.functionParameter.order.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.RANK_EQ,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.RANK_EQ.description',\n        abstract: 'formula.functionList.RANK_EQ.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.RANK_EQ.functionParameter.number.name',\n                detail: 'formula.functionList.RANK_EQ.functionParameter.number.detail',\n                example: 'A3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RANK_EQ.functionParameter.ref.name',\n                detail: 'formula.functionList.RANK_EQ.functionParameter.ref.detail',\n                example: 'A2:A6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RANK_EQ.functionParameter.order.name',\n                detail: 'formula.functionList.RANK_EQ.functionParameter.order.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.RSQ,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.RSQ.description',\n        abstract: 'formula.functionList.RSQ.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.RSQ.functionParameter.array1.name',\n                detail: 'formula.functionList.RSQ.functionParameter.array1.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RSQ.functionParameter.array2.name',\n                detail: 'formula.functionList.RSQ.functionParameter.array2.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.SKEW,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.SKEW.description',\n        abstract: 'formula.functionList.SKEW.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SKEW.functionParameter.number1.name',\n                detail: 'formula.functionList.SKEW.functionParameter.number1.detail',\n                example: 'A1:C3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SKEW.functionParameter.number2.name',\n                detail: 'formula.functionList.SKEW.functionParameter.number2.detail',\n                example: '4',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.SKEW_P,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.SKEW_P.description',\n        abstract: 'formula.functionList.SKEW_P.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SKEW_P.functionParameter.number1.name',\n                detail: 'formula.functionList.SKEW_P.functionParameter.number1.detail',\n                example: 'A1:C3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SKEW_P.functionParameter.number2.name',\n                detail: 'formula.functionList.SKEW_P.functionParameter.number2.detail',\n                example: '4',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.SLOPE,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.SLOPE.description',\n        abstract: 'formula.functionList.SLOPE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SLOPE.functionParameter.knownYs.name',\n                detail: 'formula.functionList.SLOPE.functionParameter.knownYs.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SLOPE.functionParameter.knownXs.name',\n                detail: 'formula.functionList.SLOPE.functionParameter.knownXs.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.SMALL,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.SMALL.description',\n        abstract: 'formula.functionList.SMALL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SMALL.functionParameter.array.name',\n                detail: 'formula.functionList.SMALL.functionParameter.array.detail',\n                example: 'A2:B6',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SMALL.functionParameter.k.name',\n                detail: 'formula.functionList.SMALL.functionParameter.k.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.STANDARDIZE,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.STANDARDIZE.description',\n        abstract: 'formula.functionList.STANDARDIZE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.STANDARDIZE.functionParameter.x.name',\n                detail: 'formula.functionList.STANDARDIZE.functionParameter.x.detail',\n                example: '42',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.STANDARDIZE.functionParameter.mean.name',\n                detail: 'formula.functionList.STANDARDIZE.functionParameter.mean.detail',\n                example: '40',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.STANDARDIZE.functionParameter.standardDev.name',\n                detail: 'formula.functionList.STANDARDIZE.functionParameter.standardDev.detail',\n                example: '1.5',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.STDEV_P,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.STDEV_P.description',\n        abstract: 'formula.functionList.STDEV_P.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.STDEV_P.functionParameter.number1.name',\n                detail: 'formula.functionList.STDEV_P.functionParameter.number1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.STDEV_P.functionParameter.number2.name',\n                detail: 'formula.functionList.STDEV_P.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.STDEV_S,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.STDEV_S.description',\n        abstract: 'formula.functionList.STDEV_S.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.STDEV_S.functionParameter.number1.name',\n                detail: 'formula.functionList.STDEV_S.functionParameter.number1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.STDEV_S.functionParameter.number2.name',\n                detail: 'formula.functionList.STDEV_S.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.STDEVA,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.STDEVA.description',\n        abstract: 'formula.functionList.STDEVA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.STDEVA.functionParameter.value1.name',\n                detail: 'formula.functionList.STDEVA.functionParameter.value1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.STDEVA.functionParameter.value2.name',\n                detail: 'formula.functionList.STDEVA.functionParameter.value2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.STDEVPA,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.STDEVPA.description',\n        abstract: 'formula.functionList.STDEVPA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.STDEVPA.functionParameter.value1.name',\n                detail: 'formula.functionList.STDEVPA.functionParameter.value1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.STDEVPA.functionParameter.value2.name',\n                detail: 'formula.functionList.STDEVPA.functionParameter.value2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.STEYX,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.STEYX.description',\n        abstract: 'formula.functionList.STEYX.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.STEYX.functionParameter.knownYs.name',\n                detail: 'formula.functionList.STEYX.functionParameter.knownYs.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.STEYX.functionParameter.knownXs.name',\n                detail: 'formula.functionList.STEYX.functionParameter.knownXs.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.T_DIST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.T_DIST.description',\n        abstract: 'formula.functionList.T_DIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.T_DIST.functionParameter.x.name',\n                detail: 'formula.functionList.T_DIST.functionParameter.x.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.T_DIST.functionParameter.degFreedom.name',\n                detail: 'formula.functionList.T_DIST.functionParameter.degFreedom.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.T_DIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.T_DIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.T_DIST_2T,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.T_DIST_2T.description',\n        abstract: 'formula.functionList.T_DIST_2T.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.T_DIST_2T.functionParameter.x.name',\n                detail: 'formula.functionList.T_DIST_2T.functionParameter.x.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.T_DIST_2T.functionParameter.degFreedom.name',\n                detail: 'formula.functionList.T_DIST_2T.functionParameter.degFreedom.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.T_DIST_RT,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.T_DIST_RT.description',\n        abstract: 'formula.functionList.T_DIST_RT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.T_DIST_RT.functionParameter.x.name',\n                detail: 'formula.functionList.T_DIST_RT.functionParameter.x.detail',\n                example: '8',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.T_DIST_RT.functionParameter.degFreedom.name',\n                detail: 'formula.functionList.T_DIST_RT.functionParameter.degFreedom.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.T_INV,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.T_INV.description',\n        abstract: 'formula.functionList.T_INV.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.T_INV.functionParameter.probability.name',\n                detail: 'formula.functionList.T_INV.functionParameter.probability.detail',\n                example: '0.75',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.T_INV.functionParameter.degFreedom.name',\n                detail: 'formula.functionList.T_INV.functionParameter.degFreedom.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.T_INV_2T,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.T_INV_2T.description',\n        abstract: 'formula.functionList.T_INV_2T.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.T_INV_2T.functionParameter.probability.name',\n                detail: 'formula.functionList.T_INV_2T.functionParameter.probability.detail',\n                example: '0.75',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.T_INV_2T.functionParameter.degFreedom.name',\n                detail: 'formula.functionList.T_INV_2T.functionParameter.degFreedom.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.T_TEST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.T_TEST.description',\n        abstract: 'formula.functionList.T_TEST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.T_TEST.functionParameter.array1.name',\n                detail: 'formula.functionList.T_TEST.functionParameter.array1.detail',\n                example: 'A1:A4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.T_TEST.functionParameter.array2.name',\n                detail: 'formula.functionList.T_TEST.functionParameter.array2.detail',\n                example: 'B1:B4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.T_TEST.functionParameter.tails.name',\n                detail: 'formula.functionList.T_TEST.functionParameter.tails.detail',\n                example: '2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.T_TEST.functionParameter.type.name',\n                detail: 'formula.functionList.T_TEST.functionParameter.type.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.TREND,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.TREND.description',\n        abstract: 'formula.functionList.TREND.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TREND.functionParameter.knownYs.name',\n                detail: 'formula.functionList.TREND.functionParameter.knownYs.detail',\n                example: 'B2:B7',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TREND.functionParameter.knownXs.name',\n                detail: 'formula.functionList.TREND.functionParameter.knownXs.detail',\n                example: 'A2:A7',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TREND.functionParameter.newXs.name',\n                detail: 'formula.functionList.TREND.functionParameter.newXs.detail',\n                example: 'A9:A10',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TREND.functionParameter.constb.name',\n                detail: 'formula.functionList.TREND.functionParameter.constb.detail',\n                example: 'true',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.TRIMMEAN,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.TRIMMEAN.description',\n        abstract: 'formula.functionList.TRIMMEAN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TRIMMEAN.functionParameter.array.name',\n                detail: 'formula.functionList.TRIMMEAN.functionParameter.array.detail',\n                example: 'A2:A12',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TRIMMEAN.functionParameter.percent.name',\n                detail: 'formula.functionList.TRIMMEAN.functionParameter.percent.detail',\n                example: '0.2',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.VAR_P,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.VAR_P.description',\n        abstract: 'formula.functionList.VAR_P.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.VAR_P.functionParameter.number1.name',\n                detail: 'formula.functionList.VAR_P.functionParameter.number1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VAR_P.functionParameter.number2.name',\n                detail: 'formula.functionList.VAR_P.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.VAR_S,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.VAR_S.description',\n        abstract: 'formula.functionList.VAR_S.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.VAR_S.functionParameter.number1.name',\n                detail: 'formula.functionList.VAR_S.functionParameter.number1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VAR_S.functionParameter.number2.name',\n                detail: 'formula.functionList.VAR_S.functionParameter.number2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.VARA,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.VARA.description',\n        abstract: 'formula.functionList.VARA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.VARA.functionParameter.value1.name',\n                detail: 'formula.functionList.VARA.functionParameter.value1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VARA.functionParameter.value2.name',\n                detail: 'formula.functionList.VARA.functionParameter.value2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.VARPA,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.VARPA.description',\n        abstract: 'formula.functionList.VARPA.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.VARPA.functionParameter.value1.name',\n                detail: 'formula.functionList.VARPA.functionParameter.value1.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VARPA.functionParameter.value2.name',\n                detail: 'formula.functionList.VARPA.functionParameter.value2.detail',\n                example: '2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.WEIBULL_DIST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.WEIBULL_DIST.description',\n        abstract: 'formula.functionList.WEIBULL_DIST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.WEIBULL_DIST.functionParameter.x.name',\n                detail: 'formula.functionList.WEIBULL_DIST.functionParameter.x.detail',\n                example: '105',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WEIBULL_DIST.functionParameter.alpha.name',\n                detail: 'formula.functionList.WEIBULL_DIST.functionParameter.alpha.detail',\n                example: '20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WEIBULL_DIST.functionParameter.beta.name',\n                detail: 'formula.functionList.WEIBULL_DIST.functionParameter.beta.detail',\n                example: '100',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WEIBULL_DIST.functionParameter.cumulative.name',\n                detail: 'formula.functionList.WEIBULL_DIST.functionParameter.cumulative.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_STATISTICAL.Z_TEST,\n        functionType: FunctionType.Statistical,\n        description: 'formula.functionList.Z_TEST.description',\n        abstract: 'formula.functionList.Z_TEST.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.Z_TEST.functionParameter.array.name',\n                detail: 'formula.functionList.Z_TEST.functionParameter.array.detail',\n                example: 'A2:A11',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.Z_TEST.functionParameter.x.name',\n                detail: 'formula.functionList.Z_TEST.functionParameter.x.detail',\n                example: '4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.Z_TEST.functionParameter.sigma.name',\n                detail: 'formula.functionList.Z_TEST.functionParameter.sigma.detail',\n                example: '10',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IFunctionInfo } from '@univerjs/engine-formula';\nimport { FUNCTION_NAMES_TEXT, FunctionType } from '@univerjs/engine-formula';\n\nexport const FUNCTION_LIST_TEXT: IFunctionInfo[] = [\n    {\n        functionName: FUNCTION_NAMES_TEXT.ASC,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.ASC.description',\n        abstract: 'formula.functionList.ASC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ASC.functionParameter.text.name',\n                detail: 'formula.functionList.ASC.functionParameter.text.detail',\n                example: '\"\uFF35\uFF4E\uFF49\uFF56\uFF45\uFF52\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.ARRAYTOTEXT,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.ARRAYTOTEXT.description',\n        abstract: 'formula.functionList.ARRAYTOTEXT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ARRAYTOTEXT.functionParameter.array.name',\n                detail: 'formula.functionList.ARRAYTOTEXT.functionParameter.array.detail',\n                example: 'A2:B4',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.ARRAYTOTEXT.functionParameter.format.name',\n                detail: 'formula.functionList.ARRAYTOTEXT.functionParameter.format.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.BAHTTEXT,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.BAHTTEXT.description',\n        abstract: 'formula.functionList.BAHTTEXT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.BAHTTEXT.functionParameter.number.name',\n                detail: 'formula.functionList.BAHTTEXT.functionParameter.number.detail',\n                example: '1234',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.CHAR,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.CHAR.description',\n        abstract: 'formula.functionList.CHAR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CHAR.functionParameter.number.name',\n                detail: 'formula.functionList.CHAR.functionParameter.number.detail',\n                example: '65',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.CLEAN,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.CLEAN.description',\n        abstract: 'formula.functionList.CLEAN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CLEAN.functionParameter.text.name',\n                detail: 'formula.functionList.CLEAN.functionParameter.text.detail',\n                example: 'CHAR(1)&\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.CODE,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.CODE.description',\n        abstract: 'formula.functionList.CODE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CODE.functionParameter.text.name',\n                detail: 'formula.functionList.CODE.functionParameter.text.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.CONCAT,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.CONCAT.description',\n        abstract: 'formula.functionList.CONCAT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CONCAT.functionParameter.text1.name',\n                detail: 'formula.functionList.CONCAT.functionParameter.text1.detail',\n                example: '\"Hello\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CONCAT.functionParameter.text2.name',\n                detail: 'formula.functionList.CONCAT.functionParameter.text2.detail',\n                example: '\"Univer\"',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.CONCATENATE,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.CONCATENATE.description',\n        abstract: 'formula.functionList.CONCATENATE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CONCATENATE.functionParameter.text1.name',\n                detail: 'formula.functionList.CONCATENATE.functionParameter.text1.detail',\n                example: 'A1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CONCATENATE.functionParameter.text2.name',\n                detail: 'formula.functionList.CONCATENATE.functionParameter.text2.detail',\n                example: 'A2',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.DBCS,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.DBCS.description',\n        abstract: 'formula.functionList.DBCS.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DBCS.functionParameter.text.name',\n                detail: 'formula.functionList.DBCS.functionParameter.text.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.DOLLAR,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.DOLLAR.description',\n        abstract: 'formula.functionList.DOLLAR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.DOLLAR.functionParameter.number.name',\n                detail: 'formula.functionList.DOLLAR.functionParameter.number.detail',\n                example: '1234.567',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.DOLLAR.functionParameter.decimals.name',\n                detail: 'formula.functionList.DOLLAR.functionParameter.decimals.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.EXACT,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.EXACT.description',\n        abstract: 'formula.functionList.EXACT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.EXACT.functionParameter.text1.name',\n                detail: 'formula.functionList.EXACT.functionParameter.text1.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.EXACT.functionParameter.text2.name',\n                detail: 'formula.functionList.EXACT.functionParameter.text2.detail',\n                example: '\"univer\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.FIND,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.FIND.description',\n        abstract: 'formula.functionList.FIND.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FIND.functionParameter.findText.name',\n                detail: 'formula.functionList.FIND.functionParameter.findText.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FIND.functionParameter.withinText.name',\n                detail: 'formula.functionList.FIND.functionParameter.withinText.detail',\n                example: '\"Hello Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FIND.functionParameter.startNum.name',\n                detail: 'formula.functionList.FIND.functionParameter.startNum.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.FINDB,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.FINDB.description',\n        abstract: 'formula.functionList.FINDB.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FINDB.functionParameter.findText.name',\n                detail: 'formula.functionList.FINDB.functionParameter.findText.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FINDB.functionParameter.withinText.name',\n                detail: 'formula.functionList.FINDB.functionParameter.withinText.detail',\n                example: '\"Hello Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FINDB.functionParameter.startNum.name',\n                detail: 'formula.functionList.FINDB.functionParameter.startNum.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.FIXED,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.FIXED.description',\n        abstract: 'formula.functionList.FIXED.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FIXED.functionParameter.number.name',\n                detail: 'formula.functionList.FIXED.functionParameter.number.detail',\n                example: '1234.567',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FIXED.functionParameter.decimals.name',\n                detail: 'formula.functionList.FIXED.functionParameter.decimals.detail',\n                example: '2',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FIXED.functionParameter.noCommas.name',\n                detail: 'formula.functionList.FIXED.functionParameter.noCommas.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.LEFT,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.LEFT.description',\n        abstract: 'formula.functionList.LEFT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LEFT.functionParameter.text.name',\n                detail: 'formula.functionList.LEFT.functionParameter.text.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LEFT.functionParameter.numChars.name',\n                detail: 'formula.functionList.LEFT.functionParameter.numChars.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.LEFTB,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.LEFTB.description',\n        abstract: 'formula.functionList.LEFTB.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LEFTB.functionParameter.text.name',\n                detail: 'formula.functionList.LEFTB.functionParameter.text.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.LEFTB.functionParameter.numBytes.name',\n                detail: 'formula.functionList.LEFTB.functionParameter.numBytes.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.LEN,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.LEN.description',\n        abstract: 'formula.functionList.LEN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LEN.functionParameter.text.name',\n                detail: 'formula.functionList.LEN.functionParameter.text.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.LENB,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.LENB.description',\n        abstract: 'formula.functionList.LENB.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LENB.functionParameter.text.name',\n                detail: 'formula.functionList.LENB.functionParameter.text.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.LOWER,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.LOWER.description',\n        abstract: 'formula.functionList.LOWER.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.LOWER.functionParameter.text.name',\n                detail: 'formula.functionList.LOWER.functionParameter.text.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.MID,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.MID.description',\n        abstract: 'formula.functionList.MID.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MID.functionParameter.text.name',\n                detail: 'formula.functionList.MID.functionParameter.text.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MID.functionParameter.startNum.name',\n                detail: 'formula.functionList.MID.functionParameter.startNum.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MID.functionParameter.numChars.name',\n                detail: 'formula.functionList.MID.functionParameter.numChars.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.MIDB,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.MIDB.description',\n        abstract: 'formula.functionList.MIDB.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.MIDB.functionParameter.text.name',\n                detail: 'formula.functionList.MIDB.functionParameter.text.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MIDB.functionParameter.startNum.name',\n                detail: 'formula.functionList.MIDB.functionParameter.startNum.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.MIDB.functionParameter.numBytes.name',\n                detail: 'formula.functionList.MIDB.functionParameter.numBytes.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.NUMBERSTRING,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.NUMBERSTRING.description',\n        abstract: 'formula.functionList.NUMBERSTRING.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NUMBERSTRING.functionParameter.number.name',\n                detail: 'formula.functionList.NUMBERSTRING.functionParameter.number.detail',\n                example: '123',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NUMBERSTRING.functionParameter.type.name',\n                detail: 'formula.functionList.NUMBERSTRING.functionParameter.type.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.NUMBERVALUE,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.NUMBERVALUE.description',\n        abstract: 'formula.functionList.NUMBERVALUE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.NUMBERVALUE.functionParameter.text.name',\n                detail: 'formula.functionList.NUMBERVALUE.functionParameter.text.detail',\n                example: '\"2.500,27\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NUMBERVALUE.functionParameter.decimalSeparator.name',\n                detail: 'formula.functionList.NUMBERVALUE.functionParameter.decimalSeparator.detail',\n                example: '\",\"',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.NUMBERVALUE.functionParameter.groupSeparator.name',\n                detail: 'formula.functionList.NUMBERVALUE.functionParameter.groupSeparator.detail',\n                example: '\".\"',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.PHONETIC,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.PHONETIC.description',\n        abstract: 'formula.functionList.PHONETIC.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PHONETIC.functionParameter.number1.name',\n                detail: 'formula.functionList.PHONETIC.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.PHONETIC.functionParameter.number2.name',\n                detail: 'formula.functionList.PHONETIC.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.PROPER,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.PROPER.description',\n        abstract: 'formula.functionList.PROPER.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.PROPER.functionParameter.text.name',\n                detail: 'formula.functionList.PROPER.functionParameter.text.detail',\n                example: '\"hello univer\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.REGEXEXTRACT,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.REGEXEXTRACT.description',\n        abstract: 'formula.functionList.REGEXEXTRACT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.REGEXEXTRACT.functionParameter.text.name',\n                detail: 'formula.functionList.REGEXEXTRACT.functionParameter.text.detail',\n                example: '\"abcdefg\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.REGEXEXTRACT.functionParameter.regularExpression.name',\n                detail: 'formula.functionList.REGEXEXTRACT.functionParameter.regularExpression.detail',\n                example: '\"c.*f\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.REGEXMATCH,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.REGEXMATCH.description',\n        abstract: 'formula.functionList.REGEXMATCH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.REGEXMATCH.functionParameter.text.name',\n                detail: 'formula.functionList.REGEXMATCH.functionParameter.text.detail',\n                example: '\"Spreadsheets\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.REGEXMATCH.functionParameter.regularExpression.name',\n                detail: 'formula.functionList.REGEXMATCH.functionParameter.regularExpression.detail',\n                example: '\"S.r\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.REGEXREPLACE,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.REGEXREPLACE.description',\n        abstract: 'formula.functionList.REGEXREPLACE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.REGEXREPLACE.functionParameter.text.name',\n                detail: 'formula.functionList.REGEXREPLACE.functionParameter.text.detail',\n                example: '\"abcedfg\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.REGEXREPLACE.functionParameter.regularExpression.name',\n                detail: 'formula.functionList.REGEXREPLACE.functionParameter.regularExpression.detail',\n                example: '\"a.*d\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.REGEXREPLACE.functionParameter.replacement.name',\n                detail: 'formula.functionList.REGEXREPLACE.functionParameter.replacement.detail',\n                example: '\"xyz\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.REPLACE,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.REPLACE.description',\n        abstract: 'formula.functionList.REPLACE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.REPLACE.functionParameter.oldText.name',\n                detail: 'formula.functionList.REPLACE.functionParameter.oldText.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.REPLACE.functionParameter.startNum.name',\n                detail: 'formula.functionList.REPLACE.functionParameter.startNum.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.REPLACE.functionParameter.numChars.name',\n                detail: 'formula.functionList.REPLACE.functionParameter.numChars.detail',\n                example: '0',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.REPLACE.functionParameter.newText.name',\n                detail: 'formula.functionList.REPLACE.functionParameter.newText.detail',\n                example: '\"Hello \"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.REPLACEB,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.REPLACEB.description',\n        abstract: 'formula.functionList.REPLACEB.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.REPLACEB.functionParameter.oldText.name',\n                detail: 'formula.functionList.REPLACEB.functionParameter.oldText.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.REPLACEB.functionParameter.startNum.name',\n                detail: 'formula.functionList.REPLACEB.functionParameter.startNum.detail',\n                example: '1',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.REPLACEB.functionParameter.numBytes.name',\n                detail: 'formula.functionList.REPLACEB.functionParameter.numBytes.detail',\n                example: '0',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.REPLACEB.functionParameter.newText.name',\n                detail: 'formula.functionList.REPLACEB.functionParameter.newText.detail',\n                example: '\"Hello \"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.REPT,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.REPT.description',\n        abstract: 'formula.functionList.REPT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.REPT.functionParameter.text.name',\n                detail: 'formula.functionList.REPT.functionParameter.text.detail',\n                example: '\"*-\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.REPT.functionParameter.numberTimes.name',\n                detail: 'formula.functionList.REPT.functionParameter.numberTimes.detail',\n                example: '3',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.RIGHT,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.RIGHT.description',\n        abstract: 'formula.functionList.RIGHT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.RIGHT.functionParameter.text.name',\n                detail: 'formula.functionList.RIGHT.functionParameter.text.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RIGHT.functionParameter.numChars.name',\n                detail: 'formula.functionList.RIGHT.functionParameter.numChars.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.RIGHTB,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.RIGHTB.description',\n        abstract: 'formula.functionList.RIGHTB.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.RIGHTB.functionParameter.text.name',\n                detail: 'formula.functionList.RIGHTB.functionParameter.text.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.RIGHTB.functionParameter.numBytes.name',\n                detail: 'formula.functionList.RIGHTB.functionParameter.numBytes.detail',\n                example: '3',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.SEARCH,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.SEARCH.description',\n        abstract: 'formula.functionList.SEARCH.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SEARCH.functionParameter.findText.name',\n                detail: 'formula.functionList.SEARCH.functionParameter.findText.detail',\n                example: '\"univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SEARCH.functionParameter.withinText.name',\n                detail: 'formula.functionList.SEARCH.functionParameter.withinText.detail',\n                example: '\"Hello Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SEARCH.functionParameter.startNum.name',\n                detail: 'formula.functionList.SEARCH.functionParameter.startNum.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.SEARCHB,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.SEARCHB.description',\n        abstract: 'formula.functionList.SEARCHB.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SEARCHB.functionParameter.findText.name',\n                detail: 'formula.functionList.SEARCHB.functionParameter.findText.detail',\n                example: '\"univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SEARCHB.functionParameter.withinText.name',\n                detail: 'formula.functionList.SEARCHB.functionParameter.withinText.detail',\n                example: '\"Hello Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SEARCHB.functionParameter.startNum.name',\n                detail: 'formula.functionList.SEARCHB.functionParameter.startNum.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.SUBSTITUTE,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.SUBSTITUTE.description',\n        abstract: 'formula.functionList.SUBSTITUTE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.SUBSTITUTE.functionParameter.text.name',\n                detail: 'formula.functionList.SUBSTITUTE.functionParameter.text.detail',\n                example: '\"Hello Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUBSTITUTE.functionParameter.oldText.name',\n                detail: 'formula.functionList.SUBSTITUTE.functionParameter.oldText.detail',\n                example: '\"Hello\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUBSTITUTE.functionParameter.newText.name',\n                detail: 'formula.functionList.SUBSTITUTE.functionParameter.newText.detail',\n                example: '\"Hi\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.SUBSTITUTE.functionParameter.instanceNum.name',\n                detail: 'formula.functionList.SUBSTITUTE.functionParameter.instanceNum.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.T,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.T.description',\n        abstract: 'formula.functionList.T.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.T.functionParameter.value.name',\n                detail: 'formula.functionList.T.functionParameter.value.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.TEXT,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.TEXT.description',\n        abstract: 'formula.functionList.TEXT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TEXT.functionParameter.value.name',\n                detail: 'formula.functionList.TEXT.functionParameter.value.detail',\n                example: '1.23',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXT.functionParameter.formatText.name',\n                detail: 'formula.functionList.TEXT.functionParameter.formatText.detail',\n                example: '\"$0.00\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.TEXTAFTER,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.TEXTAFTER.description',\n        abstract: 'formula.functionList.TEXTAFTER.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TEXTAFTER.functionParameter.text.name',\n                detail: 'formula.functionList.TEXTAFTER.functionParameter.text.detail',\n                example: '\"Red riding hood\u2019s, red hood\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTAFTER.functionParameter.delimiter.name',\n                detail: 'formula.functionList.TEXTAFTER.functionParameter.delimiter.detail',\n                example: '\"hood\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTAFTER.functionParameter.instanceNum.name',\n                detail: 'formula.functionList.TEXTAFTER.functionParameter.instanceNum.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTAFTER.functionParameter.matchMode.name',\n                detail: 'formula.functionList.TEXTAFTER.functionParameter.matchMode.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTAFTER.functionParameter.matchEnd.name',\n                detail: 'formula.functionList.TEXTAFTER.functionParameter.matchEnd.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTAFTER.functionParameter.ifNotFound.name',\n                detail: 'formula.functionList.TEXTAFTER.functionParameter.ifNotFound.detail',\n                example: '\"not found\"',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.TEXTBEFORE,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.TEXTBEFORE.description',\n        abstract: 'formula.functionList.TEXTBEFORE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TEXTBEFORE.functionParameter.text.name',\n                detail: 'formula.functionList.TEXTBEFORE.functionParameter.text.detail',\n                example: '\"Red riding hood\u2019s, red hood\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTBEFORE.functionParameter.delimiter.name',\n                detail: 'formula.functionList.TEXTBEFORE.functionParameter.delimiter.detail',\n                example: '\"hood\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTBEFORE.functionParameter.instanceNum.name',\n                detail: 'formula.functionList.TEXTBEFORE.functionParameter.instanceNum.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTBEFORE.functionParameter.matchMode.name',\n                detail: 'formula.functionList.TEXTBEFORE.functionParameter.matchMode.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTBEFORE.functionParameter.matchEnd.name',\n                detail: 'formula.functionList.TEXTBEFORE.functionParameter.matchEnd.detail',\n                example: '0',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTBEFORE.functionParameter.ifNotFound.name',\n                detail: 'formula.functionList.TEXTBEFORE.functionParameter.ifNotFound.detail',\n                example: '\"not found\"',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.TEXTJOIN,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.TEXTJOIN.description',\n        abstract: 'formula.functionList.TEXTJOIN.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TEXTJOIN.functionParameter.delimiter.name',\n                detail: 'formula.functionList.TEXTJOIN.functionParameter.delimiter.detail',\n                example: '\", \"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTJOIN.functionParameter.ignoreEmpty.name',\n                detail: 'formula.functionList.TEXTJOIN.functionParameter.ignoreEmpty.detail',\n                example: 'true',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTJOIN.functionParameter.text1.name',\n                detail: 'formula.functionList.TEXTJOIN.functionParameter.text1.detail',\n                example: '\"Hi\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTJOIN.functionParameter.text2.name',\n                detail: 'formula.functionList.TEXTJOIN.functionParameter.text2.detail',\n                example: '\"Univer\"',\n                require: 0,\n                repeat: 1,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.TEXTSPLIT,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.TEXTSPLIT.description',\n        abstract: 'formula.functionList.TEXTSPLIT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TEXTSPLIT.functionParameter.text.name',\n                detail: 'formula.functionList.TEXTSPLIT.functionParameter.text.detail',\n                example: 'A1:C2',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTSPLIT.functionParameter.colDelimiter.name',\n                detail: 'formula.functionList.TEXTSPLIT.functionParameter.colDelimiter.detail',\n                example: '\",\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTSPLIT.functionParameter.rowDelimiter.name',\n                detail: 'formula.functionList.TEXTSPLIT.functionParameter.rowDelimiter.detail',\n                example: '\";\"',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTSPLIT.functionParameter.ignoreEmpty.name',\n                detail: 'formula.functionList.TEXTSPLIT.functionParameter.ignoreEmpty.detail',\n                example: '',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTSPLIT.functionParameter.matchMode.name',\n                detail: 'formula.functionList.TEXTSPLIT.functionParameter.matchMode.detail',\n                example: '',\n                require: 0,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.TEXTSPLIT.functionParameter.padWith.name',\n                detail: 'formula.functionList.TEXTSPLIT.functionParameter.padWith.detail',\n                example: '',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.TRIM,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.TRIM.description',\n        abstract: 'formula.functionList.TRIM.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.TRIM.functionParameter.text.name',\n                detail: 'formula.functionList.TRIM.functionParameter.text.detail',\n                example: '\" Hello  Univer \"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.UNICHAR,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.UNICHAR.description',\n        abstract: 'formula.functionList.UNICHAR.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.UNICHAR.functionParameter.number.name',\n                detail: 'formula.functionList.UNICHAR.functionParameter.number.detail',\n                example: '65',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.UNICODE,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.UNICODE.description',\n        abstract: 'formula.functionList.UNICODE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.UNICODE.functionParameter.text.name',\n                detail: 'formula.functionList.UNICODE.functionParameter.text.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.UPPER,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.UPPER.description',\n        abstract: 'formula.functionList.UPPER.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.UPPER.functionParameter.text.name',\n                detail: 'formula.functionList.UPPER.functionParameter.text.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.VALUE,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.VALUE.description',\n        abstract: 'formula.functionList.VALUE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.VALUE.functionParameter.text.name',\n                detail: 'formula.functionList.VALUE.functionParameter.text.detail',\n                example: '\"123\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.VALUETOTEXT,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.VALUETOTEXT.description',\n        abstract: 'formula.functionList.VALUETOTEXT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.VALUETOTEXT.functionParameter.value.name',\n                detail: 'formula.functionList.VALUETOTEXT.functionParameter.value.detail',\n                example: '\"Univer\"',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.VALUETOTEXT.functionParameter.format.name',\n                detail: 'formula.functionList.VALUETOTEXT.functionParameter.format.detail',\n                example: '1',\n                require: 0,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.CALL,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.CALL.description',\n        abstract: 'formula.functionList.CALL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.CALL.functionParameter.number1.name',\n                detail: 'formula.functionList.CALL.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.CALL.functionParameter.number2.name',\n                detail: 'formula.functionList.CALL.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.EUROCONVERT,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.EUROCONVERT.description',\n        abstract: 'formula.functionList.EUROCONVERT.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.EUROCONVERT.functionParameter.number1.name',\n                detail: 'formula.functionList.EUROCONVERT.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.EUROCONVERT.functionParameter.number2.name',\n                detail: 'formula.functionList.EUROCONVERT.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_TEXT.REGISTER_ID,\n        functionType: FunctionType.Text,\n        description: 'formula.functionList.REGISTER_ID.description',\n        abstract: 'formula.functionList.REGISTER_ID.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.REGISTER_ID.functionParameter.number1.name',\n                detail: 'formula.functionList.REGISTER_ID.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.REGISTER_ID.functionParameter.number2.name',\n                detail: 'formula.functionList.REGISTER_ID.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IFunctionInfo } from '@univerjs/engine-formula';\n\nexport const FUNCTION_LIST_UNIVER: IFunctionInfo[] = [];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FUNCTION_NAMES_WEB, FunctionType, type IFunctionInfo } from '@univerjs/engine-formula';\n\nexport const FUNCTION_LIST_WEB: IFunctionInfo[] = [\n    {\n        functionName: FUNCTION_NAMES_WEB.ENCODEURL,\n        functionType: FunctionType.Web,\n        description: 'formula.functionList.ENCODEURL.description',\n        abstract: 'formula.functionList.ENCODEURL.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.ENCODEURL.functionParameter.text.name',\n                detail: 'formula.functionList.ENCODEURL.functionParameter.text.detail',\n                example: '\"https://univer.ai/\"',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n\n    {\n        functionName: FUNCTION_NAMES_WEB.FILTERXML,\n        functionType: FunctionType.Web,\n        description: 'formula.functionList.FILTERXML.description',\n        abstract: 'formula.functionList.FILTERXML.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.FILTERXML.functionParameter.number1.name',\n                detail: 'formula.functionList.FILTERXML.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.FILTERXML.functionParameter.number2.name',\n                detail: 'formula.functionList.FILTERXML.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n    {\n        functionName: FUNCTION_NAMES_WEB.WEBSERVICE,\n        functionType: FunctionType.Web,\n        description: 'formula.functionList.WEBSERVICE.description',\n        abstract: 'formula.functionList.WEBSERVICE.abstract',\n        functionParameter: [\n            {\n                name: 'formula.functionList.WEBSERVICE.functionParameter.number1.name',\n                detail: 'formula.functionList.WEBSERVICE.functionParameter.number1.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n            {\n                name: 'formula.functionList.WEBSERVICE.functionParameter.number2.name',\n                detail: 'formula.functionList.WEBSERVICE.functionParameter.number2.detail',\n                example: 'A1:A20',\n                require: 1,\n                repeat: 0,\n            },\n        ],\n    },\n];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IFunctionInfo } from '@univerjs/engine-formula';\n\nimport { FUNCTION_LIST_ARRAY } from './array';\nimport { FUNCTION_LIST_COMPATIBILITY } from './compatibility';\nimport { FUNCTION_LIST_CUBE } from './cube';\nimport { FUNCTION_LIST_DATABASE } from './database';\nimport { FUNCTION_LIST_DATE } from './date';\nimport { FUNCTION_LIST_ENGINEERING } from './engineering';\nimport { FUNCTION_LIST_FINANCIAL } from './financial';\nimport { FUNCTION_LIST_INFORMATION } from './information';\nimport { FUNCTION_LIST_LOGICAL } from './logical';\nimport { FUNCTION_LIST_LOOKUP } from './lookup';\nimport { FUNCTION_LIST_MATH } from './math';\nimport { FUNCTION_LIST_STATISTICAL } from './statistical';\nimport { FUNCTION_LIST_TEXT } from './text';\nimport { FUNCTION_LIST_UNIVER } from './univer';\nimport { FUNCTION_LIST_WEB } from './web';\n\nexport const FUNCTION_LIST: IFunctionInfo[] = [\n    ...FUNCTION_LIST_FINANCIAL,\n    ...FUNCTION_LIST_DATE,\n    ...FUNCTION_LIST_MATH,\n    ...FUNCTION_LIST_STATISTICAL,\n    ...FUNCTION_LIST_LOOKUP,\n    ...FUNCTION_LIST_DATABASE,\n    ...FUNCTION_LIST_TEXT,\n    ...FUNCTION_LIST_LOGICAL,\n    ...FUNCTION_LIST_INFORMATION,\n    ...FUNCTION_LIST_ENGINEERING,\n    ...FUNCTION_LIST_CUBE,\n    ...FUNCTION_LIST_COMPATIBILITY,\n    ...FUNCTION_LIST_WEB,\n    ...FUNCTION_LIST_ARRAY,\n    ...FUNCTION_LIST_UNIVER,\n];\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { LocaleService } from '@univerjs/core';\nimport type { IFunctionInfo, IFunctionParam } from '@univerjs/engine-formula';\n\nexport function getFunctionTypeValues(\n    enumObj: any,\n    localeService: LocaleService\n): Array<{ label: string; value: string }> {\n    // Exclude the DefinedName key\n    return Object.keys(enumObj)\n        .filter((key) => isNaN(Number(key)) && key !== 'DefinedName')\n        .map((key) => ({\n            label: localeService.t(`formula.functionType.${key.toLocaleLowerCase()}`),\n            value: `${enumObj[key]}`,\n        }));\n}\n\nexport function getFunctionName(item: IFunctionInfo, localeService: LocaleService) {\n    let functionName = '';\n    if (item.aliasFunctionName) {\n        functionName = localeService.t(item.aliasFunctionName);\n\n        if (functionName === item.aliasFunctionName) {\n            functionName = item.functionName;\n        }\n    } else {\n        functionName = item.functionName;\n    }\n\n    return functionName;\n}\n\nexport function generateParam(param: IFunctionParam) {\n    if (!param.require && !param.repeat) {\n        return `[${param.name}]`;\n    } else if (param.require && !param.repeat) {\n        return param.name;\n    } else if (!param.require && param.repeat) {\n        return `[${param.name},...]`;\n    } else if (param.require && param.repeat) {\n        return `${param.name},...`;\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IDisposable } from '@univerjs/core';\nimport type { IFunctionInfo, IFunctionNames } from '@univerjs/engine-formula';\nimport type { IUniverSheetsFormulaBaseConfig } from '../controllers/config.schema';\nimport { createIdentifier, IConfigService, Inject, LocaleService, toDisposable } from '@univerjs/core';\n\nimport {\n    functionArray,\n    functionCompatibility,\n    functionCube,\n    functionDatabase,\n    functionDate,\n    functionEngineering,\n    functionFinancial,\n    functionInformation,\n    functionLogical,\n    functionLookup,\n    functionMath,\n    functionMeta,\n    functionStatistical,\n    functionText,\n    FunctionType,\n    functionUniver,\n    functionWeb,\n    IFunctionService,\n    isReferenceStrings,\n} from '@univerjs/engine-formula';\nimport { PLUGIN_CONFIG_KEY_BASE } from '../controllers/config.schema';\nimport { FUNCTION_LIST } from './function-list/function-list';\nimport { getFunctionName } from './utils';\n\nexport interface ISearchItem {\n    name: string;\n    desc: string;\n}\n\nexport interface IDescriptionService {\n    /**\n     * get all descriptions\n     */\n    getDescriptions(): Map<IFunctionNames, IFunctionInfo>;\n\n    hasFunction(searchText: string): boolean;\n\n    /**\n     * get function info by name\n     * @param searchText\n     */\n    getFunctionInfo(searchText: string): IFunctionInfo | undefined;\n\n    /**\n     * get search list by name\n     * @param searchText\n     * @returns\n     */\n    getSearchListByName(searchText: string): ISearchItem[];\n\n    /**\n     * get search list by name, from first letter\n     * @param searchText\n     * @returns\n     */\n    getSearchListByNameFirstLetter(searchText: string): ISearchItem[];\n\n    /**\n     * get search list by type, if type is -1, return all\n     * @param type\n     * @returns\n     */\n    getSearchListByType(type: number): ISearchItem[];\n\n    /**\n     * register descriptions\n     * @param functionList\n     */\n    registerDescriptions(functionList: IFunctionInfo[]): IDisposable;\n\n    /**\n     * unregister descriptions\n     * @param functionList\n     */\n    unregisterDescriptions(functionNames: string[]): void;\n\n    /**\n     * check if has description\n     * @param name\n     */\n    hasDescription(name: string): boolean;\n\n    /**\n     * check if has defined name description\n     * @param name\n     */\n    hasDefinedNameDescription(name: string): boolean;\n\n    /**\n     * check if is formula defined name\n     * @param name\n     */\n    isFormulaDefinedName(name: string): boolean;\n}\n\nexport const IDescriptionService = createIdentifier<IDescriptionService>('formula.description-service');\n\nexport class DescriptionService implements IDescriptionService, IDisposable {\n    private _descriptions: IFunctionInfo[] = [];\n\n    constructor(\n        @IFunctionService private readonly _functionService: IFunctionService,\n        @Inject(LocaleService) private readonly _localeService: LocaleService,\n        @IConfigService private readonly _configService: IConfigService\n    ) {\n        this._initialize();\n    }\n\n    dispose(): void {\n        this._localeService.localeChanged$.complete();\n    }\n\n    getDescriptions() {\n        return this._functionService.getDescriptions();\n    }\n\n    hasFunction(searchText: string) {\n        const functionList = this._functionService.getDescriptions();\n        return functionList.get(searchText.toLocaleUpperCase()) !== undefined;\n    }\n\n    getFunctionInfo(searchText: string) {\n        const functionList = this._functionService.getDescriptions();\n        return functionList.get(searchText.toLocaleUpperCase());\n    }\n\n    getSearchListByName(searchText: string) {\n        const searchList: ISearchItem[] = [];\n        const functionList = this._functionService.getDescriptions();\n        const _searchText = searchText.toLocaleUpperCase().trim();\n        functionList.forEach((item) => {\n            const { functionName, abstract, functionType } = item;\n            // Exclude DefinedName\n            if ((functionName.toLocaleUpperCase().indexOf(_searchText) > -1) && functionType !== FunctionType.DefinedName) {\n                searchList.push({ name: functionName, desc: abstract });\n            }\n        });\n\n        return searchList;\n    }\n\n    getSearchListByNameFirstLetter(searchText: string) {\n        const searchList: ISearchItem[] = [];\n        const functionList = this._functionService.getDescriptions();\n        const _searchText = searchText.toLocaleUpperCase().trim();\n        functionList.forEach((item) => {\n            const { functionName, abstract } = item;\n            if (functionName.toLocaleUpperCase().indexOf(_searchText) === 0) {\n                searchList.push({ name: functionName, desc: abstract });\n            }\n        });\n\n        return searchList;\n    }\n\n    getSearchListByType(type: number) {\n        const searchList: ISearchItem[] = [];\n        const functionList = this._functionService.getDescriptions();\n        functionList.forEach((item) => {\n            const { functionName, functionType, abstract } = item;\n            // Exclude DefinedName\n            if ((functionType === type || type === -1) && functionType !== FunctionType.DefinedName) {\n                searchList.push({ name: functionName, desc: abstract });\n            }\n        });\n\n        return searchList;\n    }\n\n    registerDescriptions(description: IFunctionInfo[]): IDisposable {\n        this._descriptions = this._descriptions.concat(description);\n        this._registerDescriptions();\n\n        return toDisposable(() => {\n            const functionNames = description.map((item) => item.functionName);\n            this.unregisterDescriptions(functionNames);\n        });\n    }\n\n    unregisterDescriptions(functionNames: string[]) {\n        this._descriptions = this._descriptions.filter((item) => !functionNames.includes(item.functionName));\n\n        this._functionService.unregisterDescriptions(...functionNames);\n    }\n\n    hasDescription(name: string) {\n        return this._descriptions.some((item) => item.functionName === name);\n    }\n\n    hasDefinedNameDescription(name: string) {\n        return this._descriptions.some((item) => item.functionName === name && item.functionType === FunctionType.DefinedName);\n    }\n\n    isFormulaDefinedName(name: string) {\n        const items = this._descriptions.filter((item) => item.functionName === name && item.functionType === FunctionType.DefinedName);\n        if (items.length === 0) {\n            return false;\n        }\n\n        const token = items[0].description;\n        return !isReferenceStrings(token);\n    }\n\n    private _initialize() {\n        this._localeService.localeChanged$.subscribe(() => {\n            this._registerDescriptions();\n        });\n\n        this._initDescription();\n        this._registerDescriptions();\n    }\n\n    private _initDescription() {\n        // TODO@Dushusir: Remove filtering after all formulas have been implemented\n        const functions = [\n            ...functionArray,\n            ...functionCompatibility,\n            ...functionCube,\n            ...functionDatabase,\n            ...functionDate,\n            ...functionEngineering,\n            ...functionFinancial,\n            ...functionInformation,\n            ...functionLogical,\n            ...functionLookup,\n            ...functionMath,\n            ...functionMeta,\n            ...functionStatistical,\n            ...functionText,\n            ...functionUniver,\n            ...functionWeb,\n        ].map((item) => item[1]) as IFunctionNames[];\n\n        const filterFunctionList = FUNCTION_LIST.filter((item) => {\n            return functions.includes(item.functionName as IFunctionNames);\n        });\n\n        const config = this._configService.getConfig<IUniverSheetsFormulaBaseConfig>(PLUGIN_CONFIG_KEY_BASE);\n        this._descriptions = filterFunctionList.concat(config?.description ?? []);\n    }\n\n    private _registerDescriptions() {\n        const localeService = this._localeService;\n\n        const functionListLocale = this._descriptions.map((functionInfo) => ({\n            functionName: getFunctionName(functionInfo, localeService),\n            functionType: functionInfo.functionType,\n            description: localeService.t(functionInfo.description),\n            abstract: localeService.t(functionInfo.abstract),\n            functionParameter: functionInfo.functionParameter.map((item) => ({\n                name: localeService.t(item.name),\n                detail: localeService.t(item.detail),\n                example: item.example,\n                require: item.require,\n                repeat: item.repeat,\n            })),\n        }));\n\n        this._functionService.registerDescriptions(...functionListLocale);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommandInfo, IExecutionOptions, Nullable, Workbook } from '@univerjs/core';\nimport type { IFunctionInfo, ISetDefinedNameMutationParam } from '@univerjs/engine-formula';\nimport {\n    Disposable,\n    ICommandService,\n    IUniverInstanceService,\n    toDisposable,\n    UniverInstanceType,\n} from '@univerjs/core';\nimport { FunctionType, IDefinedNamesService, RemoveDefinedNameMutation, SetDefinedNameMutation } from '@univerjs/engine-formula';\nimport { SCOPE_WORKBOOK_VALUE_DEFINED_NAME, SetWorksheetActiveOperation } from '@univerjs/sheets';\n\nimport { IDescriptionService } from '../services/description.service';\n\n/**\n * header highlight\n * column menu: show, hover and mousedown event\n */\nexport class DefinedNameController extends Disposable {\n    private _preUnitId: Nullable<string> = null;\n\n    constructor(\n        @IDescriptionService private readonly _descriptionService: IDescriptionService,\n        @IDefinedNamesService private readonly _definedNamesService: IDefinedNamesService,\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @ICommandService private readonly _commandService: ICommandService\n\n    ) {\n        super();\n\n        this._initialize();\n    }\n\n    private _initialize() {\n        this._descriptionListener();\n\n        this._changeUnitListener();\n\n        this._changeSheetListener();\n    }\n\n    private _descriptionListener() {\n        toDisposable(\n            this._definedNamesService.update$.subscribe(() => {\n                this._registerDescriptions();\n            })\n        );\n    }\n\n    private _changeUnitListener() {\n        toDisposable(\n            this._univerInstanceService.getCurrentTypeOfUnit$<Workbook>(UniverInstanceType.UNIVER_SHEET).subscribe(() => {\n                this._unRegisterDescriptions();\n                this._registerDescriptions();\n            })\n        );\n    }\n\n    private _changeSheetListener() {\n        this.disposeWithMe(\n            this._commandService.onCommandExecuted((command: ICommandInfo, options?: IExecutionOptions) => {\n                if (options?.fromCollab) {\n                    return;\n                }\n\n                if (command.id === SetWorksheetActiveOperation.id) {\n                    this._unregisterDescriptionsForNotInSheetId();\n                    this._registerDescriptions();\n                }\n                // Since command interception will supplement mutation, it is necessary to monitor mutation changes here\n                // SetDefinedNameMutation and RemoveDefinedNameMutation already cover all possible Defined Name updates\n                else if (command.id === SetDefinedNameMutation.id) {\n                    const param = command.params as ISetDefinedNameMutationParam;\n                    this._registerDescription(param);\n                } else if (command.id === RemoveDefinedNameMutation.id) {\n                    const param = command.params as ISetDefinedNameMutationParam;\n                    this._unregisterDescription(param);\n                }\n            })\n        );\n    }\n\n    private _registerDescription(param: ISetDefinedNameMutationParam) {\n        const { unitId, sheetId } = this._getUnitIdAndSheetId();\n\n        if (unitId == null || sheetId == null) {\n            return;\n        }\n\n        const { name, comment, formulaOrRefString, localSheetId } = param;\n        if (!this._descriptionService.hasDescription(name) && (localSheetId == null || localSheetId === SCOPE_WORKBOOK_VALUE_DEFINED_NAME || localSheetId === sheetId)) {\n            this._descriptionService.registerDescriptions([{\n                functionName: name,\n                description: formulaOrRefString + (comment || ''),\n                abstract: formulaOrRefString,\n                functionType: FunctionType.DefinedName,\n                functionParameter: [],\n            }]);\n        }\n    }\n\n    private _unregisterDescription(param: ISetDefinedNameMutationParam) {\n        const { name } = param;\n        this._descriptionService.unregisterDescriptions([name]);\n    }\n\n    private _unRegisterDescriptions() {\n        if (this._preUnitId == null) {\n            return;\n        }\n        const definedNames = this._definedNamesService.getDefinedNameMap(this._preUnitId);\n\n        if (definedNames == null) {\n            return;\n        }\n\n        const functionList: string[] = [];\n        Array.from(Object.values(definedNames)).forEach((value) => {\n            const { name } = value;\n            functionList.push(name);\n        });\n\n        this._descriptionService.unregisterDescriptions(functionList);\n\n        this._preUnitId = null;\n    }\n\n    private _getUnitIdAndSheetId() {\n        const workbook = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!;\n        if (workbook == null) {\n            return {};\n        }\n        const worksheet = workbook.getActiveSheet();\n\n        if (worksheet == null) {\n            return {};\n        }\n\n        return {\n            unitId: workbook.getUnitId(),\n            sheetId: worksheet.getSheetId(),\n        };\n    }\n\n    private _registerDescriptions() {\n        const { unitId, sheetId } = this._getUnitIdAndSheetId();\n\n        if (unitId == null || sheetId == null) {\n            return;\n        }\n\n        const definedNames = this._definedNamesService.getDefinedNameMap(unitId);\n        if (!definedNames) {\n            return;\n        }\n\n        const functionList: IFunctionInfo[] = [];\n\n        this._preUnitId = unitId;\n\n        Array.from(Object.values(definedNames)).forEach((value) => {\n            const { name, comment, formulaOrRefString, localSheetId } = value;\n            if (!this._descriptionService.hasDescription(name) && (localSheetId == null || localSheetId === SCOPE_WORKBOOK_VALUE_DEFINED_NAME || localSheetId === sheetId)) {\n                functionList.push({\n                    functionName: name,\n                    description: formulaOrRefString + (comment || ''),\n                    abstract: formulaOrRefString,\n                    functionType: FunctionType.DefinedName,\n                    functionParameter: [],\n                });\n            }\n        });\n\n        this._descriptionService.registerDescriptions(functionList);\n    }\n\n    private _unregisterDescriptionsForNotInSheetId() {\n        const { unitId, sheetId } = this._getUnitIdAndSheetId();\n\n        if (unitId == null || sheetId == null) {\n            return;\n        }\n\n        const definedNames = this._definedNamesService.getDefinedNameMap(unitId);\n        if (!definedNames) {\n            return;\n        }\n\n        const functionList: string[] = [];\n\n        Array.from(Object.values(definedNames)).forEach((value) => {\n            const { name, localSheetId } = value;\n            if (localSheetId !== SCOPE_WORKBOOK_VALUE_DEFINED_NAME && localSheetId !== sheetId) {\n                functionList.push(name);\n            }\n        });\n\n        this._descriptionService.unregisterDescriptions(functionList);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, ICellData, ICommand, IRange } from '@univerjs/core';\nimport type { ISetRangeValuesCommandParams } from '@univerjs/sheets';\nimport { CommandType, ICommandService, ObjectMatrix, Tools } from '@univerjs/core';\nimport { SetRangeValuesCommand } from '@univerjs/sheets';\n\nexport interface IInsertFunction {\n    /**\n     * The range into which the function is to be inserted\n     */\n    range: IRange;\n\n    /**\n     * Where there is a function id, other locations reference this function id\n     */\n    primary: {\n        row: number;\n        column: number;\n    };\n\n    /**\n     * Function name\n     */\n    formula: string;\n}\n\nexport interface IInsertFunctionCommandParams {\n    list: IInsertFunction[];\n    listOfRangeHasNumber?: IInsertFunction[];\n}\n\nexport const InsertFunctionCommand: ICommand = {\n    id: 'formula.command.insert-function',\n    type: CommandType.COMMAND,\n    handler: async (accessor: IAccessor, params: IInsertFunctionCommandParams) => {\n        const { list, listOfRangeHasNumber } = params;\n        const commandService = accessor.get(ICommandService);\n        const cellMatrix = new ObjectMatrix<ICellData>();\n\n        // Insert function when the range cell has no number value\n        list.forEach((item) => {\n            const { range, primary, formula } = item;\n            const { row, column } = primary;\n            const formulaId = Tools.generateRandomId(6);\n            cellMatrix.setValue(row, column, {\n                f: formula,\n                si: formulaId,\n            });\n\n            const { startRow, startColumn, endRow, endColumn } = range;\n            for (let i = startRow; i <= endRow; i++) {\n                for (let j = startColumn; j <= endColumn; j++) {\n                    if (i !== row || j !== column) {\n                        cellMatrix.setValue(i, j, {\n                            si: formulaId,\n                        });\n                    }\n                }\n            }\n        });\n\n        // Insert function when the range cell has number value\n        if (listOfRangeHasNumber && listOfRangeHasNumber.length > 0) {\n            listOfRangeHasNumber.forEach((item) => {\n                const { primary, formula } = item;\n                cellMatrix.setValue(primary.row, primary.column, {\n                    f: formula,\n                });\n            });\n        }\n\n        const setRangeValuesParams: ISetRangeValuesCommandParams = {\n            value: cellMatrix.getData(),\n        };\n\n        return commandService.executeCommand(SetRangeValuesCommand.id, setRangeValuesParams);\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IMutation } from '@univerjs/core';\nimport { CommandType } from '@univerjs/core';\n\nexport interface IOtherFormulaMarkDirtyParams { [unitId: string]: { [sunUnitId: string]: { [formulaId: string]: boolean } } }\n\nexport const OtherFormulaMarkDirty: IMutation<IOtherFormulaMarkDirtyParams> = {\n    type: CommandType.MUTATION,\n    id: 'sheet.mutation.data-validation-formula-mark-dirty',\n    handler() {\n        return true;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Disposable, ICommandService } from '@univerjs/core';\nimport { InsertFunctionCommand } from '../commands/commands/insert-function.command';\nimport { OtherFormulaMarkDirty } from '../commands/mutations/formula.mutation';\n\nexport class FormulaController extends Disposable {\n    constructor(\n        @ICommandService private readonly _commandService: ICommandService\n    ) {\n        super();\n\n        [\n            InsertFunctionCommand,\n            OtherFormulaMarkDirty,\n        ].forEach((c) => this._commandService.registerCommand(c));\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, Nullable } from '@univerjs/core';\nimport type { IRemoveOtherFormulaMutationParams, ISetFormulaCalculationResultMutation, ISetOtherFormulaMutationParams } from '@univerjs/engine-formula';\nimport type { IOtherFormulaMarkDirtyParams } from '../commands/mutations/formula.mutation';\nimport type { IOtherFormulaResult } from './formula-common';\nimport { Disposable, ICommandService, Inject, LifecycleService, ObjectMatrix, Tools } from '@univerjs/core';\nimport { IActiveDirtyManagerService, RemoveOtherFormulaMutation, SetFormulaCalculationResultMutation, SetOtherFormulaMutation } from '@univerjs/engine-formula';\nimport { BehaviorSubject, bufferWhen, filter, Subject } from 'rxjs';\nimport { OtherFormulaMarkDirty } from '../commands/mutations/formula.mutation';\nimport { FormulaResultStatus } from './formula-common';\n\nexport class RegisterOtherFormulaService extends Disposable {\n    private _formulaCacheMap: Map<string, Map<string, Map<string, IOtherFormulaResult>>> = new Map();\n\n    private _formulaChangeWithRange$ = new Subject<{ unitId: string; subUnitId: string; formulaText: string; formulaId: string; ranges: IRange[] }>();\n    public formulaChangeWithRange$ = this._formulaChangeWithRange$.asObservable();\n\n    // FIXME: this design could be improved.\n    private _formulaResult$ = new Subject<Record<string, Record<string, IOtherFormulaResult[]>>>();\n    public formulaResult$ = this._formulaResult$.asObservable();\n\n    public calculateStarted$ = new BehaviorSubject(false);\n\n    constructor(\n        @ICommandService private readonly _commandService: ICommandService,\n        @IActiveDirtyManagerService private _activeDirtyManagerService: IActiveDirtyManagerService,\n        @Inject(LifecycleService) private readonly _lifecycleService: LifecycleService\n    ) {\n        super();\n        this._initFormulaRegister();\n        this._initFormulaCalculationResultChange();\n    }\n\n    override dispose(): void {\n        super.dispose();\n\n        this._formulaChangeWithRange$.complete();\n        this._formulaResult$.complete();\n        this.calculateStarted$.complete();\n    }\n\n    private _ensureCacheMap(unitId: string, subUnitId: string) {\n        let unitMap = this._formulaCacheMap.get(unitId);\n\n        if (!unitMap) {\n            unitMap = new Map();\n            this._formulaCacheMap.set(unitId, unitMap);\n        }\n\n        let subUnitMap = unitMap.get(subUnitId);\n\n        if (!subUnitMap) {\n            subUnitMap = new Map();\n            unitMap.set(subUnitId, subUnitMap);\n        }\n\n        return subUnitMap;\n    }\n\n    private _createFormulaId(unitId: string, subUnitId: string) {\n        return `formula.${unitId}_${subUnitId}_${Tools.generateRandomId(8)}`;\n    }\n\n    private _initFormulaRegister() {\n        this._activeDirtyManagerService.register(\n            OtherFormulaMarkDirty.id,\n            {\n                commandId: OtherFormulaMarkDirty.id,\n                getDirtyData(commandInfo) {\n                    const params = commandInfo.params as IOtherFormulaMarkDirtyParams;\n                    return {\n                        dirtyUnitOtherFormulaMap: params,\n                    };\n                },\n            }\n        );\n\n        const handleRegister = (option: { unitId: string; subUnitId: string; formulaText: string; formulaId: string; ranges: IRange[] }) => {\n            const { unitId, subUnitId, formulaText, formulaId, ranges } = option;\n            const cacheMap = this._ensureCacheMap(unitId, subUnitId);\n            // formula already deleted\n            if (!cacheMap.has(formulaId)) {\n                return;\n            }\n\n            const params: ISetOtherFormulaMutationParams = {\n                unitId,\n                subUnitId,\n                formulaMap: {\n                    [formulaId]: {\n                        f: formulaText,\n                        ranges,\n                    },\n                },\n            };\n\n            this._commandService.executeCommand(SetOtherFormulaMutation.id, params).then(() => {\n                this._commandService.executeCommand(\n                    OtherFormulaMarkDirty.id,\n                    { [unitId]: { [subUnitId]: { [formulaId]: true } } }\n                );\n            });\n        };\n\n        this.disposeWithMe(\n            this._formulaChangeWithRange$\n                .pipe(bufferWhen(() => this.calculateStarted$.pipe(filter((calculateStarted) => calculateStarted))))\n                .subscribe((options) => options.forEach(handleRegister))\n        );\n\n        this.disposeWithMe(\n            this._formulaChangeWithRange$\n                .pipe(filter(() => this.calculateStarted$.getValue()))\n                .subscribe(handleRegister)\n        );\n    }\n\n    private _initFormulaCalculationResultChange() {\n        // Gets the result of the formula calculation and caches it\n        this.disposeWithMe(this._commandService.onCommandExecuted((commandInfo) => {\n            if (commandInfo.id === SetFormulaCalculationResultMutation.id) {\n                const params = commandInfo.params as ISetFormulaCalculationResultMutation;\n\n                const { unitOtherData } = params;\n                const results: Record<string, Record<string, IOtherFormulaResult[]>> = {};\n                for (const unitId in unitOtherData) {\n                    const unitData = unitOtherData[unitId];\n                    const unitResults: Record<string, IOtherFormulaResult[]> = {};\n                    results[unitId] = unitResults;\n                    for (const subUnitId in unitData) {\n                        const cacheMap = this._ensureCacheMap(unitId, subUnitId);\n                        const subUnitData = unitData[subUnitId];\n                        const subUnitResults: IOtherFormulaResult[] = [];\n                        unitResults[subUnitId] = subUnitResults;\n                        for (const formulaId in subUnitData) {\n                            const current = subUnitData[formulaId];\n                            if (cacheMap.has(formulaId)) {\n                                const item = cacheMap.get(formulaId);\n\n                                if (!item) {\n                                    continue;\n                                }\n\n                                if (!item.result) {\n                                    item.result = {};\n                                }\n\n                                const resultMatrix = new ObjectMatrix(current);\n                                const resultObject = new ObjectMatrix(item.result);\n\n                                resultMatrix.forValue((row, col, value) => {\n                                    resultObject.setValue(row, col, value);\n                                });\n\n                                item.status = FormulaResultStatus.SUCCESS;\n                                item.callbacks.forEach((callback) => {\n                                    callback(current);\n                                });\n                                item.callbacks.clear();\n                                subUnitResults.push(item);\n                            }\n                        }\n                    }\n                }\n                this._formulaResult$.next(results);\n            }\n        }));\n    }\n\n    registerFormulaWithRange(unitId: string, subUnitId: string, formulaText: string, ranges: IRange[] = [{ startRow: 0, endRow: 0, startColumn: 0, endColumn: 0 }], extra?: Record<string, any>) {\n        const formulaId = this._createFormulaId(unitId, subUnitId);\n        const cacheMap = this._ensureCacheMap(unitId, subUnitId);\n\n        cacheMap.set(formulaId, {\n            result: undefined,\n            status: FormulaResultStatus.WAIT,\n            formulaId,\n            callbacks: new Set(),\n            extra,\n        });\n\n        this._formulaChangeWithRange$.next({\n            unitId,\n            subUnitId,\n            formulaText,\n            formulaId,\n            ranges,\n        });\n        return formulaId;\n    }\n\n    deleteFormula(unitId: string, subUnitId: string, formulaIdList: string[]) {\n        const params: IRemoveOtherFormulaMutationParams = {\n            unitId,\n            subUnitId,\n            formulaIdList,\n        };\n        this._commandService.executeCommand(RemoveOtherFormulaMutation.id, params);\n        const cacheMap = this._ensureCacheMap(unitId, subUnitId);\n        formulaIdList.forEach((id) => cacheMap.delete(id));\n    }\n\n    getFormulaValue(unitId: string, subUnitId: string, formulaId: string): Promise<Nullable<IOtherFormulaResult>> {\n        const cacheMap = this._ensureCacheMap(unitId, subUnitId);\n        const item = cacheMap.get(formulaId);\n        if (!item) {\n            return Promise.resolve(null);\n        }\n\n        if (item.status === FormulaResultStatus.SUCCESS || item.status === FormulaResultStatus.ERROR) {\n            return Promise.resolve(item);\n        }\n\n        return new Promise((resolve) => {\n            item.callbacks.add(() => {\n                resolve(cacheMap.get(formulaId));\n            });\n        });\n    }\n\n    getFormulaValueSync(unitId: string, subUnitId: string, formulaId: string): Nullable<IOtherFormulaResult> {\n        const cacheMap = this._ensureCacheMap(unitId, subUnitId);\n        return cacheMap.get(formulaId);\n    }\n\n    markFormulaDirty(unitId: string, subUnitId: string, formulaId: string) {\n        const cache = this.getFormulaValueSync(unitId, subUnitId, formulaId);\n        if (!cache) return;\n        cache.status = FormulaResultStatus.WAIT;\n        this._commandService.executeCommand(\n            OtherFormulaMarkDirty.id,\n            { [unitId]: { [subUnitId]: { [formulaId]: true } } }\n        );\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommandInfo, IUnitRange, Nullable } from '@univerjs/core';\nimport type {\n    IDirtyUnitFeatureMap,\n    IDirtyUnitOtherFormulaMap,\n    IDirtyUnitSheetNameMap,\n    IExecutionInProgressParams,\n    IFormulaDirtyData,\n    ISetFormulaCalculationNotificationMutation,\n    ISetFormulaCalculationStartMutation,\n} from '@univerjs/engine-formula';\nimport type { ISetRangeValuesMutationParams } from '@univerjs/sheets';\nimport type { IUniverSheetsFormulaBaseConfig } from './config.schema';\nimport { Disposable, ICommandService, IConfigService, ILogService, Inject, LocaleService } from '@univerjs/core';\nimport {\n    ENGINE_FORMULA_CYCLE_REFERENCE_COUNT,\n    FormulaDataModel,\n    FormulaExecutedStateType,\n    FormulaExecuteStageType,\n    IActiveDirtyManagerService,\n    SetFormulaCalculationNotificationMutation,\n    SetFormulaCalculationStartMutation,\n    SetFormulaCalculationStopMutation,\n} from '@univerjs/engine-formula';\nimport {\n    ClearSelectionFormatCommand,\n    SetBorderCommand,\n    SetRangeValuesMutation,\n    SetStyleCommand,\n} from '@univerjs/sheets';\nimport { BehaviorSubject } from 'rxjs';\nimport { RegisterOtherFormulaService } from '../services/register-other-formula.service';\nimport { CalculationMode, PLUGIN_CONFIG_KEY_BASE } from './config.schema';\n\n/**\n * This interface is for the progress bar to display the calculation progress.\n */\nexport interface ICalculationProgress {\n    /** Task that already completed. */\n    done: number;\n    /** The total number of formulas need to calculate. */\n    count: number;\n    /** The label of the calculation progress. */\n    label?: string;\n}\n\nconst NilProgress: ICalculationProgress = { done: 0, count: 0 };\n\nconst lo = { onlyLocal: true };\n\nexport class TriggerCalculationController extends Disposable {\n    private _waitingCommandQueue: ICommandInfo[] = [];\n\n    private _executingDirtyData: IFormulaDirtyData = {\n        forceCalculation: false,\n        dirtyRanges: [],\n        dirtyNameMap: {},\n        dirtyDefinedNameMap: {},\n        dirtyUnitFeatureMap: {},\n        dirtyUnitOtherFormulaMap: {},\n        clearDependencyTreeCache: {},\n    };\n\n    private _setTimeoutKey: NodeJS.Timeout | number = -1;\n\n    private _startExecutionTime: number = 0;\n\n    private _totalCalculationTaskCount: number = 0;\n\n    private _doneCalculationTaskCount: number = 0;\n\n    private _executionInProgressParams: Nullable<IExecutionInProgressParams> = null;\n\n    private _restartCalculation = false;\n\n    /**\n     * The mark of forced calculation. If a new mutation triggers dirty area calculation during the forced calculation process, forced calculation is still required.\n     */\n    private _forceCalculating = false;\n\n    private readonly _progress$ = new BehaviorSubject<ICalculationProgress>(NilProgress);\n\n    readonly progress$ = this._progress$.asObservable();\n\n    private _emitProgress(label?: string): void {\n        this._progress$.next({ done: this._doneCalculationTaskCount, count: this._totalCalculationTaskCount, label });\n    }\n\n    private _startProgress(): void {\n        this._doneCalculationTaskCount = 0;\n        this._totalCalculationTaskCount = 1;\n\n        const analyzing = this._localeService.t('formula.progress.analyzing');\n        this._emitProgress(analyzing);\n    }\n\n    private _calculateProgress(label: string): void {\n        if (this._executionInProgressParams) {\n            const { totalFormulasToCalculate, completedFormulasCount, totalArrayFormulasToCalculate, completedArrayFormulasCount } = this._executionInProgressParams;\n            this._doneCalculationTaskCount = completedFormulasCount + completedArrayFormulasCount;\n            this._totalCalculationTaskCount = totalFormulasToCalculate + totalArrayFormulasToCalculate;\n\n            if (this._totalCalculationTaskCount === 0) {\n                return;\n            }\n\n            this._emitProgress(label);\n        }\n    }\n\n    private _completeProgress(): void {\n        this._doneCalculationTaskCount = this._totalCalculationTaskCount = 1;\n\n        const done = this._localeService.t('formula.progress.done');\n        this._emitProgress(done);\n    }\n\n    clearProgress(): void {\n        this._doneCalculationTaskCount = 0;\n        this._totalCalculationTaskCount = 0;\n        this._emitProgress();\n    }\n\n    constructor(\n        @ICommandService private readonly _commandService: ICommandService,\n        @IActiveDirtyManagerService private readonly _activeDirtyManagerService: IActiveDirtyManagerService,\n        @ILogService private readonly _logService: ILogService,\n        @IConfigService private readonly _configService: IConfigService,\n        @Inject(FormulaDataModel) private readonly _formulaDataModel: FormulaDataModel,\n        @Inject(LocaleService) private readonly _localeService: LocaleService,\n        @Inject(RegisterOtherFormulaService) private readonly _registerOtherFormulaService: RegisterOtherFormulaService\n    ) {\n        super();\n\n        this._commandExecutedListener();\n        this._initialExecuteFormulaProcessListener();\n        this._initialExecuteFormula();\n    }\n\n    override dispose(): void {\n        super.dispose();\n\n        this._progress$.next(NilProgress);\n        this._progress$.complete();\n        // clear timer when disposed\n        clearTimeout(this._setTimeoutKey);\n    }\n\n    private _getCalculationMode(): CalculationMode {\n        const config = this._configService.getConfig<IUniverSheetsFormulaBaseConfig>(PLUGIN_CONFIG_KEY_BASE);\n        return config?.initialFormulaComputing ?? CalculationMode.WHEN_EMPTY;\n    }\n\n    private _commandExecutedListener() {\n        // The filtering information is not synchronized to the worker and must be passed in from the main thread each time\n        this.disposeWithMe(\n            this._commandService.beforeCommandExecuted((command: ICommandInfo) => {\n                if (command.id === SetFormulaCalculationStartMutation.id) {\n                    const params = command.params as ISetFormulaCalculationStartMutation;\n\n                    params.rowData = this._formulaDataModel.getHiddenRowsFiltered();\n                }\n            })\n        );\n\n        this.disposeWithMe(\n            this._commandService.onCommandExecuted((command: ICommandInfo, options) => {\n                if (!this._activeDirtyManagerService.get(command.id)) {\n                    return;\n                }\n\n                if (command.id === SetRangeValuesMutation.id) {\n                    const params = command.params as ISetRangeValuesMutationParams;\n\n                    if (\n                        (options && options.onlyLocal === true) ||\n                        params.trigger === SetStyleCommand.id ||\n                        params.trigger === SetBorderCommand.id ||\n                        params.trigger === ClearSelectionFormatCommand.id\n                    ) {\n                        return;\n                    }\n                }\n\n                this._waitingCommandQueue.push(command);\n\n                clearTimeout(this._setTimeoutKey);\n\n                this._setTimeoutKey = setTimeout(() => {\n                    const dirtyData = this._generateDirty(this._waitingCommandQueue);\n                    this._executingDirtyData = this._mergeDirty(this._executingDirtyData, dirtyData);\n\n                    if (this._executionInProgressParams == null) {\n                        this._commandService.executeCommand(SetFormulaCalculationStartMutation.id, { ...this._executingDirtyData }, lo);\n                    } else {\n                        this._restartCalculation = true;\n                        this._commandService.executeCommand(SetFormulaCalculationStopMutation.id, {});\n                    }\n\n                    this._waitingCommandQueue = [];\n                }, 100);\n            })\n        );\n    }\n\n    private _generateDirty(commands: ICommandInfo[]) {\n        const allDirtyRanges: IUnitRange[] = [];\n        const allDirtyNameMap: IDirtyUnitSheetNameMap = {};\n        const allDirtyDefinedNameMap: IDirtyUnitSheetNameMap = {};\n        const allDirtyUnitFeatureMap: IDirtyUnitFeatureMap = {};\n        const allDirtyUnitOtherFormulaMap: IDirtyUnitOtherFormulaMap = {};\n        const allClearDependencyTreeCache: IDirtyUnitSheetNameMap = {};\n\n        // const numfmtItemMap: INumfmtItemMap = Tools.deepClone(this._formulaDataModel.getNumfmtItemMap());\n\n        for (const command of commands) {\n            const conversion = this._activeDirtyManagerService.get(command.id);\n\n            if (conversion == null) {\n                continue;\n            }\n\n            const params = conversion.getDirtyData(command);\n\n            const { dirtyRanges, dirtyNameMap, dirtyDefinedNameMap, dirtyUnitFeatureMap, dirtyUnitOtherFormulaMap, clearDependencyTreeCache } = params;\n\n            if (dirtyRanges != null) {\n                this._mergeDirtyRanges(allDirtyRanges, dirtyRanges);\n            }\n\n            if (dirtyNameMap != null) {\n                this._mergeDirtyNameMap(allDirtyNameMap, dirtyNameMap);\n            }\n\n            if (dirtyDefinedNameMap != null) {\n                this._mergeDirtyNameMap(allDirtyDefinedNameMap, dirtyDefinedNameMap);\n            }\n\n            if (dirtyUnitFeatureMap != null) {\n                this._mergeDirtyUnitFeatureOrOtherFormulaMap(allDirtyUnitFeatureMap, dirtyUnitFeatureMap);\n            }\n\n            if (dirtyUnitOtherFormulaMap != null) {\n                this._mergeDirtyUnitFeatureOrOtherFormulaMap(allDirtyUnitOtherFormulaMap, dirtyUnitOtherFormulaMap);\n            }\n\n            if (clearDependencyTreeCache != null) {\n                this._mergeDirtyNameMap(allClearDependencyTreeCache, clearDependencyTreeCache);\n            }\n        }\n\n        return {\n            dirtyRanges: allDirtyRanges,\n            dirtyNameMap: allDirtyNameMap,\n            dirtyDefinedNameMap: allDirtyDefinedNameMap,\n            dirtyUnitFeatureMap: allDirtyUnitFeatureMap,\n            dirtyUnitOtherFormulaMap: allDirtyUnitOtherFormulaMap,\n            forceCalculation: false,\n            clearDependencyTreeCache: allClearDependencyTreeCache,\n            maxIteration: (this._configService.getConfig(ENGINE_FORMULA_CYCLE_REFERENCE_COUNT)) as number | undefined,\n            // numfmtItemMap,\n        };\n    }\n\n    private _mergeDirty(dirtyData1: IFormulaDirtyData, dirtyData2: IFormulaDirtyData) {\n        const allDirtyRanges: IUnitRange[] = [...dirtyData1.dirtyRanges, ...dirtyData2.dirtyRanges];\n        const allDirtyNameMap: IDirtyUnitSheetNameMap = { ...dirtyData1.dirtyNameMap };\n        const allDirtyDefinedNameMap: IDirtyUnitSheetNameMap = { ...dirtyData1.dirtyDefinedNameMap };\n        const allDirtyUnitFeatureMap: IDirtyUnitFeatureMap = { ...dirtyData1.dirtyUnitFeatureMap };\n        const allDirtyUnitOtherFormulaMap: IDirtyUnitOtherFormulaMap = { ...dirtyData1.dirtyUnitOtherFormulaMap };\n        const allClearDependencyTreeCache: IDirtyUnitSheetNameMap = { ...dirtyData1.clearDependencyTreeCache };\n\n        this._mergeDirtyNameMap(allDirtyNameMap, dirtyData2.dirtyNameMap);\n        this._mergeDirtyNameMap(allDirtyDefinedNameMap, dirtyData2.dirtyDefinedNameMap);\n        this._mergeDirtyUnitFeatureOrOtherFormulaMap(allDirtyUnitFeatureMap, dirtyData2.dirtyUnitFeatureMap);\n        this._mergeDirtyUnitFeatureOrOtherFormulaMap(allDirtyUnitOtherFormulaMap, dirtyData2.dirtyUnitOtherFormulaMap);\n        this._mergeDirtyNameMap(allClearDependencyTreeCache, dirtyData2.clearDependencyTreeCache);\n\n        const maxIteration = dirtyData1.maxIteration || dirtyData2.maxIteration;\n\n        return {\n            dirtyRanges: allDirtyRanges,\n            dirtyNameMap: allDirtyNameMap,\n            dirtyDefinedNameMap: allDirtyDefinedNameMap,\n            dirtyUnitFeatureMap: allDirtyUnitFeatureMap,\n            dirtyUnitOtherFormulaMap: allDirtyUnitOtherFormulaMap,\n            forceCalculation: !!this._forceCalculating,\n            clearDependencyTreeCache: allClearDependencyTreeCache,\n            maxIteration,\n        };\n    }\n\n    /**\n     * dirtyRanges may overlap with the ranges in allDirtyRanges and need to be deduplicated\n     * @param allDirtyRanges\n     * @param dirtyRanges\n     */\n    private _mergeDirtyRanges(allDirtyRanges: IUnitRange[], dirtyRanges: IUnitRange[]) {\n        for (const range of dirtyRanges) {\n            let isDuplicate = false;\n            for (const existingRange of allDirtyRanges) {\n                // Check if the ranges are in the same unit and sheet\n                if (range.unitId === existingRange.unitId && range.sheetId === existingRange.sheetId) {\n                    // Check if the ranges overlap\n                    const { startRow, startColumn, endRow, endColumn } = range.range;\n                    const { startRow: existingStartRow, startColumn: existingStartColumn, endRow: existingEndRow, endColumn: existingEndColumn } = existingRange.range;\n                    if (\n                        startRow === existingStartRow &&\n                        startColumn === existingStartColumn &&\n                        endRow === existingEndRow &&\n                        endColumn === existingEndColumn\n                    ) {\n                        isDuplicate = true;\n                        break;\n                    }\n                }\n            }\n            if (!isDuplicate) {\n                allDirtyRanges.push(range);\n            }\n        }\n    }\n\n    private _mergeDirtyNameMap(allDirtyNameMap: IDirtyUnitSheetNameMap, dirtyNameMap: IDirtyUnitSheetNameMap) {\n        Object.keys(dirtyNameMap).forEach((unitId) => {\n            if (allDirtyNameMap[unitId] == null) {\n                allDirtyNameMap[unitId] = {};\n            }\n\n            Object.keys(dirtyNameMap[unitId]!).forEach((sheetId) => {\n                if (dirtyNameMap[unitId]?.[sheetId]) {\n                    allDirtyNameMap[unitId]![sheetId] = dirtyNameMap[unitId]![sheetId];\n                }\n            });\n        });\n    }\n\n    private _mergeDirtyUnitFeatureOrOtherFormulaMap(\n        allDirtyUnitFeatureOrOtherFormulaMap: IDirtyUnitFeatureMap | IDirtyUnitOtherFormulaMap,\n        dirtyUnitFeatureOrOtherFormulaMap: IDirtyUnitFeatureMap | IDirtyUnitOtherFormulaMap\n    ) {\n        Object.keys(dirtyUnitFeatureOrOtherFormulaMap).forEach((unitId) => {\n            if (allDirtyUnitFeatureOrOtherFormulaMap[unitId] == null) {\n                allDirtyUnitFeatureOrOtherFormulaMap[unitId] = {};\n            }\n            Object.keys(dirtyUnitFeatureOrOtherFormulaMap[unitId]!).forEach((sheetId) => {\n                if (allDirtyUnitFeatureOrOtherFormulaMap[unitId]![sheetId] == null) {\n                    allDirtyUnitFeatureOrOtherFormulaMap[unitId]![sheetId] = {};\n                }\n                Object.keys(dirtyUnitFeatureOrOtherFormulaMap[unitId]![sheetId]).forEach((featureIdOrFormulaId) => {\n                    allDirtyUnitFeatureOrOtherFormulaMap[unitId]![sheetId][featureIdOrFormulaId] =\n                        dirtyUnitFeatureOrOtherFormulaMap[unitId]![sheetId]![featureIdOrFormulaId] || false;\n                });\n            });\n        });\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    private _initialExecuteFormulaProcessListener() {\n        // Assignment operation after formula calculation.\n        let startDependencyTimer: NodeJS.Timeout | null = null;\n        let calculationProcessCount = 0; // Multiple calculations are performed in parallel, but only one progress bar is displayed, and the progress is only closed after the last calculation is completed.\n\n        this.disposeWithMe(\n\n            // eslint-disable-next-line max-lines-per-function, complexity\n            this._commandService.onCommandExecuted((command: ICommandInfo) => {\n                if (command.id === SetFormulaCalculationStartMutation.id) {\n                    const { forceCalculation = false } = command.params as ISetFormulaCalculationStartMutation;\n\n                    if (forceCalculation) {\n                        this._forceCalculating = true;\n                    }\n                } else if (command.id === SetFormulaCalculationStopMutation.id) {\n                    this.clearProgress();\n                }\n\n                if (command.id !== SetFormulaCalculationNotificationMutation.id) {\n                    return;\n                }\n\n                const params = command.params as ISetFormulaCalculationNotificationMutation;\n\n                if (params.stageInfo != null) {\n                    const {\n                        stage,\n                    } = params.stageInfo;\n\n                    if (stage === FormulaExecuteStageType.START) {\n                        // When calculations are started multiple times in succession, only the first time is recognized\n                        if (calculationProcessCount === 0) {\n                            this._startExecutionTime = performance.now();\n                        }\n\n                        // Increment the calculation process count and assign a new ID\n                        calculationProcessCount++;\n\n                        // Clear any existing timer to prevent duplicate executions\n                        if (startDependencyTimer !== null) {\n                            clearTimeout(startDependencyTimer);\n                            startDependencyTimer = null;\n                        }\n\n                        // If the total calculation time exceeds 1s, a progress bar is displayed.\n                        startDependencyTimer = setTimeout(() => {\n                            startDependencyTimer = null;\n                            this._startProgress();\n                        }, 1000);\n                    } else if (stage === FormulaExecuteStageType.CURRENTLY_CALCULATING) {\n                        this._executionInProgressParams = params.stageInfo;\n\n                        if (startDependencyTimer === null) {\n                            const calculating = this._localeService.t('formula.progress.calculating');\n                            this._calculateProgress(calculating);\n                        }\n                    } else if (stage === FormulaExecuteStageType.START_DEPENDENCY_ARRAY_FORMULA) {\n                        this._executionInProgressParams = params.stageInfo;\n\n                        if (startDependencyTimer === null) {\n                            const arrayAnalysis = this._localeService.t('formula.progress.array-analysis');\n                            this._calculateProgress(arrayAnalysis);\n                        }\n                    } else if (stage === FormulaExecuteStageType.CURRENTLY_CALCULATING_ARRAY_FORMULA) {\n                        this._executionInProgressParams = params.stageInfo;\n\n                        if (startDependencyTimer === null) {\n                            const arrayCalculation = this._localeService.t('formula.progress.array-calculation');\n                            this._calculateProgress(arrayCalculation);\n                        }\n                    }\n                } else {\n                    const state = params.functionsExecutedState;\n                    let result = '';\n\n                    // Decrement the calculation process count\n                    calculationProcessCount--;\n\n                    switch (state) {\n                        case FormulaExecutedStateType.NOT_EXECUTED:\n                            result = 'No tasks are being executed anymore';\n                            this._resetExecutingDirtyData();\n                            break;\n                        case FormulaExecutedStateType.STOP_EXECUTION:\n                            result = 'The execution of the formula has been stopped';\n                            calculationProcessCount = 0;\n                            break;\n                        case FormulaExecutedStateType.SUCCESS:\n                            result = 'Formula calculation succeeded';\n\n                            // When the calculation is stopped and then a successful calculation is triggered, the value is -1\n                            if (calculationProcessCount === 0 || calculationProcessCount === -1) {\n                                result += `. Total time consumed: ${performance.now() - this._startExecutionTime} ms`;\n                            }\n\n                            this._resetExecutingDirtyData();\n                            break;\n                        case FormulaExecutedStateType.INITIAL:\n                            result = 'Waiting for calculation';\n                            this._resetExecutingDirtyData();\n                            break;\n                    }\n\n                    // When the calculation is stopped and then a successful calculation is triggered, the value is -1\n                    if (calculationProcessCount === 0 || calculationProcessCount === -1) {\n                        if (startDependencyTimer) {\n                            // The total calculation time does not exceed 1s, and the progress bar is not displayed.\n                            clearTimeout(startDependencyTimer);\n                            startDependencyTimer = null;\n                            this.clearProgress();\n                        } else {\n                            // Manually hide the progress bar only if no other calculations are in process\n                            this._completeProgress();\n                        }\n\n                        calculationProcessCount = 0;\n                        this._doneCalculationTaskCount = 0;\n                        this._totalCalculationTaskCount = 0;\n                        this._forceCalculating = false;\n                    }\n\n                    if (state === FormulaExecutedStateType.STOP_EXECUTION && this._restartCalculation) {\n                        this._restartCalculation = false;\n                        this._commandService.executeCommand(\n                            SetFormulaCalculationStartMutation.id,\n                            {\n                                ...this._executingDirtyData,\n                            },\n                            lo\n                        );\n                    } else {\n                        this._executionInProgressParams = null;\n                    }\n\n                    this._logService.debug('[TriggerCalculationController]', result);\n                }\n            })\n        );\n    }\n\n    private _resetExecutingDirtyData() {\n        this._executingDirtyData = {\n            dirtyRanges: [],\n            dirtyNameMap: {},\n            dirtyDefinedNameMap: {},\n            dirtyUnitFeatureMap: {},\n            dirtyUnitOtherFormulaMap: {},\n            forceCalculation: false,\n            clearDependencyTreeCache: {},\n        };\n    }\n\n    private _initialExecuteFormula() {\n        const calculationMode = this._getCalculationMode();\n        const params = this._getDirtyDataByCalculationMode(calculationMode);\n        this._commandService.executeCommand(SetFormulaCalculationStartMutation.id, params, lo);\n\n        this._registerOtherFormulaService.calculateStarted$.next(true);\n    }\n\n    private _getDirtyDataByCalculationMode(calculationMode: CalculationMode): IFormulaDirtyData {\n        const forceCalculation = calculationMode === CalculationMode.FORCED;\n\n        // loop all sheets cell data, and get the dirty data\n        const dirtyRanges: IUnitRange[] = calculationMode === CalculationMode.WHEN_EMPTY ? this._formulaDataModel.getFormulaDirtyRanges() : [];\n\n        const dirtyNameMap: IDirtyUnitSheetNameMap = {};\n        const dirtyDefinedNameMap: IDirtyUnitSheetNameMap = {};\n        const dirtyUnitFeatureMap: IDirtyUnitFeatureMap = {};\n        const dirtyUnitOtherFormulaMap: IDirtyUnitOtherFormulaMap = {};\n        const clearDependencyTreeCache: IDirtyUnitSheetNameMap = {};\n\n        return {\n            forceCalculation,\n            dirtyRanges,\n            dirtyNameMap,\n            dirtyDefinedNameMap,\n            dirtyUnitFeatureMap,\n            dirtyUnitOtherFormulaMap,\n            clearDependencyTreeCache,\n            maxIteration: this._configService.getConfig(ENGINE_FORMULA_CYCLE_REFERENCE_COUNT) as number | undefined,\n        };\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange } from '@univerjs/core';\nimport type { IArrayFormulaRangeType, IArrayFormulaUnitCellType, IFormulaData } from '@univerjs/engine-formula';\n\nexport interface IRefRangeWithPosition {\n    row: number;\n    column: number;\n    range: IRange;\n}\n\nexport function checkFormulaDataNull(formulaData: IFormulaData, unitId: string, sheetId: string) {\n    if (formulaData == null || formulaData[unitId] == null || formulaData[unitId]?.[sheetId] == null) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function removeFormulaData(formulaData: IFormulaData | IArrayFormulaRangeType | IArrayFormulaUnitCellType, unitId: string, sheetId?: string) {\n    if (sheetId) {\n        if (formulaData && formulaData[unitId] && formulaData[unitId]?.[sheetId]) {\n            delete formulaData[unitId]![sheetId];\n            return {\n                [unitId]: {\n                    [sheetId]: null,\n                },\n            };\n        }\n    } else {\n        if (formulaData && formulaData[unitId]) {\n            delete formulaData[unitId];\n            return {\n                [unitId]: null,\n            };\n        }\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, IMutationInfo, IObjectMatrixPrimitiveType, IRange, Nullable } from '@univerjs/core';\nimport type { IFormulaData, IFormulaDataItem, IRangeChange, ISequenceNode } from '@univerjs/engine-formula';\nimport type { ISetRangeValuesMutationParams } from '@univerjs/sheets';\nimport { cellToRange, Direction, isFormulaId, isFormulaString, ObjectMatrix, Rectangle, Tools } from '@univerjs/core';\nimport { deserializeRangeWithSheetWithCache, sequenceNodeType, serializeRangeToRefString } from '@univerjs/engine-formula';\nimport { EffectRefRangId, handleDeleteRangeMoveLeft, handleDeleteRangeMoveUp, handleInsertCol, handleInsertRangeMoveDown, handleInsertRangeMoveRight, handleInsertRow, handleIRemoveCol, handleIRemoveRow, handleMoveCols, handleMoveRange, handleMoveRows, runRefRangeMutations, SetRangeValuesMutation } from '@univerjs/sheets';\nimport { checkFormulaDataNull } from './offset-formula-data';\n\nexport enum FormulaReferenceMoveType {\n    MoveRange, // range\n    MoveRows, // move rows\n    MoveCols, // move columns\n    InsertRow, // row\n    InsertColumn, // column\n    RemoveRow, // row\n    RemoveColumn, // column\n    DeleteMoveLeft, // range\n    DeleteMoveUp, // range\n    InsertMoveDown, // range\n    InsertMoveRight, // range\n    SetName,\n    RemoveSheet,\n    SetDefinedName, // update defined name\n    RemoveDefinedName, // remove defined name\n}\n\nexport interface IFormulaReferenceMoveParam {\n    type: FormulaReferenceMoveType;\n    unitId: string;\n    sheetId: string;\n    range?: IRange;\n    from?: IRange;\n    to?: IRange;\n    sheetName?: string;\n    definedNameId?: string; // defined name id\n    definedName?: string; // new defined name\n}\n\nconst formulaReferenceSheetList = [\n    FormulaReferenceMoveType.SetName,\n    FormulaReferenceMoveType.RemoveSheet,\n    FormulaReferenceMoveType.SetDefinedName,\n    FormulaReferenceMoveType.RemoveDefinedName,\n];\n\nexport function getFormulaReferenceMoveUndoRedo(oldFormulaData: IFormulaData, newFormulaData: IFormulaData, formulaReferenceMoveParam: IFormulaReferenceMoveParam) {\n    const { type } = formulaReferenceMoveParam;\n\n    if (formulaReferenceSheetList.includes(type)) {\n        return getFormulaReferenceSheet(oldFormulaData, newFormulaData);\n    } else {\n        return getFormulaReferenceRange(oldFormulaData, newFormulaData, formulaReferenceMoveParam);\n    }\n}\n\nexport function getFormulaReferenceSheet(oldFormulaData: IFormulaData, newFormulaData: IFormulaData) {\n    const undos: IMutationInfo[] = [];\n    const redos: IMutationInfo[] = [];\n\n    Object.keys(newFormulaData).forEach((unitId) => {\n        const newSheetData = newFormulaData[unitId];\n        const oldSheetData = oldFormulaData[unitId];\n\n        if (newSheetData == null) {\n            return true;\n        }\n\n        if (oldSheetData == null) {\n            return true;\n        }\n\n        Object.keys(newSheetData).forEach((subUnitId) => {\n            const newSheetFormula = new ObjectMatrix(newSheetData[subUnitId] || {});\n            const oldSheetFormula = new ObjectMatrix(oldSheetData[subUnitId] || {});\n            const redoFormulaMatrix = new ObjectMatrix<Nullable<ICellData>>();\n            const undoFormulaMatrix = new ObjectMatrix<Nullable<ICellData>>();\n\n            newSheetFormula.forValue((r, c, cell) => {\n                if (cell == null) {\n                    return true;\n                }\n                const newValue = formulaDataItemToCellData(cell);\n\n                if (newValue === null) {\n                    return;\n                }\n\n                redoFormulaMatrix.setValue(r, c, newValue);\n                undoFormulaMatrix.setValue(r, c, oldSheetFormula.getValue(r, c));\n            });\n\n            if (redoFormulaMatrix.getSizeOf() === 0) {\n                return;\n            }\n\n            const redoSetRangeValuesMutationParams: ISetRangeValuesMutationParams = {\n                subUnitId,\n                unitId,\n                cellValue: redoFormulaMatrix.getMatrix(),\n            };\n\n            const redoMutation = {\n                id: SetRangeValuesMutation.id,\n                params: redoSetRangeValuesMutationParams,\n            };\n\n            redos.push(redoMutation);\n\n            const undoSetRangeValuesMutationParams: ISetRangeValuesMutationParams = {\n                subUnitId,\n                unitId,\n                cellValue: undoFormulaMatrix.getMatrix(),\n            };\n\n            const undoMutation = {\n                id: SetRangeValuesMutation.id,\n                params: undoSetRangeValuesMutationParams,\n            };\n\n            undos.push(undoMutation);\n        });\n    });\n\n    return {\n        undos,\n        redos,\n    };\n}\n\nexport function getFormulaReferenceRange(oldFormulaData: IFormulaData, newFormulaData: IFormulaData, formulaReferenceMoveParam: IFormulaReferenceMoveParam) {\n    const { redoFormulaData, undoFormulaData } = refRangeFormula(oldFormulaData, newFormulaData, formulaReferenceMoveParam);\n\n        // If the formula data is the same, no operation is required\n    if (Tools.diffValue(redoFormulaData, undoFormulaData)) {\n        return {\n            undos: [],\n            redos: [],\n        };\n    }\n\n    const redos: IMutationInfo[] = [];\n    const undos: IMutationInfo[] = [];\n\n    Object.keys(redoFormulaData).forEach((unitId) => {\n        Object.keys(redoFormulaData[unitId]).forEach((subUnitId) => {\n            if (Object.keys(redoFormulaData[unitId][subUnitId]).length !== 0) {\n                const redoSetRangeValuesMutationParams: ISetRangeValuesMutationParams = {\n                    subUnitId,\n                    unitId,\n                    cellValue: redoFormulaData[unitId][subUnitId],\n                };\n                const redoMutation = {\n                    id: SetRangeValuesMutation.id,\n                    params: redoSetRangeValuesMutationParams,\n                };\n                redos.push(redoMutation);\n            }\n        });\n    });\n\n    Object.keys(undoFormulaData).forEach((unitId) => {\n        Object.keys(undoFormulaData[unitId]).forEach((subUnitId) => {\n            if (Object.keys(undoFormulaData[unitId][subUnitId]).length !== 0) {\n                const undoSetRangeValuesMutationParams: ISetRangeValuesMutationParams = {\n                    subUnitId,\n                    unitId,\n                    cellValue: undoFormulaData[unitId][subUnitId],\n                };\n                const undoMutation = {\n                    id: SetRangeValuesMutation.id,\n                    params: undoSetRangeValuesMutationParams,\n                };\n                undos.push(undoMutation);\n            }\n        });\n    });\n\n    return {\n        undos,\n        redos,\n    };\n}\n\n/**\n * For different Command operations, it may be necessary to perform traversal in reverse or in forward order, so first determine the type of Command and then perform traversal.\n * @param oldFormulaData\n * @param newFormulaData\n * @param formulaReferenceMoveParam\n * @returns\n */\nexport function refRangeFormula(oldFormulaData: IFormulaData, newFormulaData: IFormulaData, formulaReferenceMoveParam: IFormulaReferenceMoveParam) {\n    const redoFormulaData: Record<string, Record<string, IObjectMatrixPrimitiveType<Nullable<ICellData>>>> = {};\n    const undoFormulaData: Record<string, Record<string, IObjectMatrixPrimitiveType<Nullable<ICellData>>>> = {};\n\n    const { type, unitId: targetUnitId, sheetId, range, from, to } = formulaReferenceMoveParam;\n\n    // Iterate over all unitId in oldFormulaData\n    const allUnitIds = new Set([...Object.keys(oldFormulaData), ...Object.keys(newFormulaData)]);\n\n    allUnitIds.forEach((unitId) => {\n        if (checkFormulaDataNull(oldFormulaData, unitId, sheetId)) {\n            return;\n        }\n\n        const allSheetIds = new Set([\n            ...Object.keys(oldFormulaData[unitId] || {}),\n            ...Object.keys(newFormulaData[unitId] || {}),\n        ]);\n\n        allSheetIds.forEach((currentSheetId) => {\n            const currentOldFormulaData = oldFormulaData[unitId]?.[currentSheetId];\n            const currentNewFormulaData = newFormulaData[unitId]?.[currentSheetId];\n\n            const oldFormulaMatrix = new ObjectMatrix(currentOldFormulaData || {});\n            const newFormulaMatrix = new ObjectMatrix(currentNewFormulaData || {});\n\n            let rangeList: IRangeChange[] = [];\n\n            // If the sheet where the range is changed is different from the current sheet, the position will not be changed.\n            // Simply get the data from newFormulaMatrix to update the range.\n            if (unitId !== targetUnitId || currentSheetId !== sheetId) {\n                rangeList = processFormulaRange(newFormulaMatrix);\n            } else {\n                rangeList = processFormulaChanges(oldFormulaMatrix, type, from, to, range);\n            }\n\n            const sheetRedoFormulaData = getRedoFormulaData(rangeList, oldFormulaMatrix, newFormulaMatrix);\n            const sheetUndoFormulaData = getUndoFormulaData(rangeList, oldFormulaMatrix);\n\n            if (!redoFormulaData[unitId]) {\n                redoFormulaData[unitId] = {};\n            }\n            if (!undoFormulaData[unitId]) {\n                undoFormulaData[unitId] = {};\n            }\n\n            redoFormulaData[unitId][currentSheetId] = {\n                ...redoFormulaData[unitId][currentSheetId],\n                ...sheetRedoFormulaData,\n            };\n            undoFormulaData[unitId][currentSheetId] = {\n                ...undoFormulaData[unitId][currentSheetId],\n                ...sheetUndoFormulaData,\n            };\n        });\n    });\n\n    return {\n        redoFormulaData,\n        undoFormulaData,\n    };\n}\n\nfunction processFormulaChanges(oldFormulaMatrix: ObjectMatrix<Nullable<IFormulaDataItem>>, type: FormulaReferenceMoveType, from: Nullable<IRange>, to: Nullable<IRange>, range: Nullable<IRange>) {\n    // When undoing and redoing, the traversal order may be different. Record the range list of all single formula offsets, and then retrieve the traversal as needed.\n    const rangeList: IRangeChange[] = [];\n\n    oldFormulaMatrix.forValue((row, column, cell) => {\n        // Offset is only needed when there is a formula\n        if (cell == null || !isFormulaDataItem(cell)) return true;\n\n        const oldCell = cellToRange(row, column);\n        let newCell = null;\n        let isReverse = false;\n\n        // Handle moves\n        if ([FormulaReferenceMoveType.MoveRange, FormulaReferenceMoveType.MoveRows, FormulaReferenceMoveType.MoveCols].includes(type)) {\n            newCell = handleMove(type, from, to, oldCell);\n        } else if (range !== undefined && range !== null) { // Handle inserts and deletes\n            const result = handleInsertDelete(type, range, oldCell);\n            // When removing a cell containing a formula, newCell is null, but the formula value of oldCell is required when undoing it, newCell can be null\n            newCell = result.newCell;\n            isReverse = result.isReverse;\n        }\n\n        // Don't intercept newCell null here\n\n        // Note: The formula may only update the reference and not offset the position. The situation where the position is not shifted cannot be intercepted here.\n        isReverse ? rangeList.unshift({ oldCell, newCell }) : rangeList.push({ oldCell, newCell });\n    });\n\n    return rangeList;\n}\n\nfunction processFormulaRange(newFormulaMatrix: ObjectMatrix<Nullable<IFormulaDataItem>>) {\n    const rangeList: IRangeChange[] = [];\n\n    newFormulaMatrix.forValue((row, column, cell) => {\n        if (cell == null || !isFormulaDataItem(cell)) return true;\n\n        const newCell = cellToRange(row, column);\n\n        rangeList.push({ oldCell: newCell, newCell });\n    });\n\n    return rangeList;\n}\n\nfunction handleMove(type: FormulaReferenceMoveType, from: Nullable<IRange>, to: Nullable<IRange>, oldCell: IRange) {\n    if (from == null || to == null) {\n        return null;\n    }\n\n    switch (type) {\n        case FormulaReferenceMoveType.MoveRange:\n\n            return handleRefMoveRange(from, to, oldCell);\n        case FormulaReferenceMoveType.MoveRows:\n\n            return handleRefMoveRows(from, to, oldCell);\n        case FormulaReferenceMoveType.MoveCols:\n\n            return handleRefMoveCols(from, to, oldCell);\n        default:\n            return null;\n    }\n}\n\nfunction handleInsertDelete(type: FormulaReferenceMoveType, range: IRange, oldCell: IRange) {\n    let newCell: IRange | null = null;\n    let isReverse = false;\n\n    switch (type) {\n        case FormulaReferenceMoveType.InsertRow:\n            newCell = handleRefInsertRow(range, oldCell);\n            isReverse = true;\n            break;\n        case FormulaReferenceMoveType.InsertColumn:\n            newCell = handleRefInsertCol(range, oldCell);\n            isReverse = true;\n            break;\n        case FormulaReferenceMoveType.RemoveRow:\n            newCell = handleRefRemoveRow(range, oldCell);\n            break;\n        case FormulaReferenceMoveType.RemoveColumn:\n            newCell = handleRefRemoveCol(range, oldCell);\n            break;\n        case FormulaReferenceMoveType.DeleteMoveLeft:\n            newCell = handleRefDeleteMoveLeft(range, oldCell);\n            break;\n        case FormulaReferenceMoveType.DeleteMoveUp:\n            newCell = handleRefDeleteMoveUp(range, oldCell);\n            break;\n        case FormulaReferenceMoveType.InsertMoveDown:\n            newCell = handleRefInsertMoveDown(range, oldCell);\n            isReverse = true;\n            break;\n        case FormulaReferenceMoveType.InsertMoveRight:\n            newCell = handleRefInsertMoveRight(range, oldCell);\n            isReverse = true;\n            break;\n        default:\n            break;\n    }\n\n    return { newCell, isReverse };\n}\n\nfunction handleRefMoveRange(from: IRange, to: IRange, oldCell: IRange) {\n    const operators = handleMoveRange(\n        {\n            id: EffectRefRangId.MoveRangeCommandId,\n            params: { toRange: to, fromRange: from },\n        },\n        oldCell\n    );\n\n    return runRefRangeMutations(operators, oldCell);\n}\n\nfunction handleRefMoveRows(from: IRange, to: IRange, oldCell: IRange) {\n    const operators = handleMoveRows(\n        {\n            id: EffectRefRangId.MoveRowsCommandId,\n            params: { toRange: to, fromRange: from },\n        },\n        oldCell\n    );\n\n    return runRefRangeMutations(operators, oldCell);\n}\n\nfunction handleRefMoveCols(from: IRange, to: IRange, oldCell: IRange) {\n    const operators = handleMoveCols(\n        {\n            id: EffectRefRangId.MoveColsCommandId,\n            params: { toRange: to, fromRange: from },\n        },\n        oldCell\n    );\n\n    return runRefRangeMutations(operators, oldCell);\n}\n\nfunction handleRefInsertRow(range: IRange, oldCell: IRange) {\n    const operators = handleInsertRow(\n        {\n            id: EffectRefRangId.InsertRowCommandId,\n            params: { range, unitId: '', subUnitId: '', direction: Direction.DOWN },\n        },\n        oldCell\n    );\n\n    return runRefRangeMutations(operators, oldCell);\n}\n\nfunction handleRefInsertCol(range: IRange, oldCell: IRange) {\n    const operators = handleInsertCol(\n        {\n            id: EffectRefRangId.InsertColCommandId,\n            params: { range, unitId: '', subUnitId: '', direction: Direction.RIGHT },\n        },\n        oldCell\n    );\n\n    return runRefRangeMutations(operators, oldCell);\n}\n\nfunction handleRefRemoveRow(range: IRange, oldCell: IRange) {\n    const operators = handleIRemoveRow(\n        {\n            id: EffectRefRangId.RemoveRowCommandId,\n            params: { range },\n        },\n        oldCell\n    );\n\n    return runRefRangeMutations(operators, oldCell);\n}\n\nfunction handleRefRemoveCol(range: IRange, oldCell: IRange) {\n    const operators = handleIRemoveCol(\n        {\n            id: EffectRefRangId.RemoveColCommandId,\n            params: { range },\n        },\n        oldCell\n    );\n\n    return runRefRangeMutations(operators, oldCell);\n}\n\nfunction handleRefDeleteMoveLeft(range: IRange, oldCell: IRange) {\n    const operators = handleDeleteRangeMoveLeft(\n        {\n            id: EffectRefRangId.DeleteRangeMoveLeftCommandId,\n            params: { range },\n        },\n        oldCell\n    );\n\n    return runRefRangeMutations(operators, oldCell);\n}\n\nfunction handleRefDeleteMoveUp(range: IRange, oldCell: IRange) {\n    const operators = handleDeleteRangeMoveUp(\n        {\n            id: EffectRefRangId.DeleteRangeMoveUpCommandId,\n            params: { range },\n        },\n        oldCell\n    );\n\n    return runRefRangeMutations(operators, oldCell);\n}\n\nfunction handleRefInsertMoveDown(range: IRange, oldCell: IRange) {\n    const operators = handleInsertRangeMoveDown(\n        {\n            id: EffectRefRangId.InsertRangeMoveDownCommandId,\n            params: { range },\n        },\n        oldCell\n    );\n\n    return runRefRangeMutations(operators, oldCell);\n}\n\nfunction handleRefInsertMoveRight(range: IRange, oldCell: IRange) {\n    const operators = handleInsertRangeMoveRight(\n        {\n            id: EffectRefRangId.InsertRangeMoveRightCommandId,\n            params: { range },\n        },\n        oldCell\n    );\n\n    return runRefRangeMutations(operators, oldCell);\n}\n\n/**\n * Delete the old value at the old position on the match, and add the new value at the new position (the new value first checks whether the old position has offset content, if so, use the new offset content, if not, take the old value)\n * @param rangeList\n * @param oldFormulaData\n * @param newFormulaData\n */\nfunction getRedoFormulaData(rangeList: IRangeChange[], oldFormulaMatrix: ObjectMatrix<Nullable<IFormulaDataItem>>, newFormulaMatrix: ObjectMatrix<Nullable<IFormulaDataItem>>) {\n    const redoFormulaData = new ObjectMatrix<Nullable<ICellData>>({});\n\n    rangeList.forEach((item) => {\n        const { oldCell, newCell } = item;\n\n        const { startRow: oldStartRow, startColumn: oldStartColumn } = oldCell;\n\n        const newFormula = newFormulaMatrix.getValue(oldStartRow, oldStartColumn) || oldFormulaMatrix.getValue(oldStartRow, oldStartColumn);\n        // Use the formula result value to update the data to ensure accuracy, otherwise the new formula cannot be inferred from #REF\n        const newValue = formulaDataItemToCellData(newFormula);\n\n        redoFormulaData.setValue(oldStartRow, oldStartColumn, { f: null, si: null });\n\n        if (newCell) {\n            const { startRow: newStartRow, startColumn: newStartColumn } = newCell;\n            redoFormulaData.setValue(newStartRow, newStartColumn, newValue);\n        }\n    });\n\n    return redoFormulaData.getMatrix();\n}\n\n/**\n * The old position on the match saves the old value, and the new position delete value\uFF08for formulaData\uFF09\n * @param rangeList\n * @param oldFormulaData\n * @param newFormulaData\n */\nfunction getUndoFormulaData(rangeList: IRangeChange[], oldFormulaMatrix: ObjectMatrix<Nullable<IFormulaDataItem>>) {\n    const undoFormulaData = new ObjectMatrix<Nullable<ICellData>>({});\n\n    // Maintaining the correct assignment order prevents overwriting data\n    rangeList.reverse().forEach((item) => {\n        const { oldCell, newCell } = item;\n\n        const { startRow: oldStartRow, startColumn: oldStartColumn } = oldCell;\n\n        const oldFormula = oldFormulaMatrix.getValue(oldStartRow, oldStartColumn);\n        const oldValue = formulaDataItemToCellData(oldFormula);\n\n        if (newCell) {\n            const { startRow: newStartRow, startColumn: newStartColumn } = newCell;\n            undoFormulaData.setValue(newStartRow, newStartColumn, { f: null, si: null });\n        }\n\n        undoFormulaData.setValue(oldStartRow, oldStartColumn, oldValue);\n    });\n\n    return undoFormulaData.getMatrix();\n}\n\n/**\n * Transfer the formulaDataItem to the cellData\n * \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n * \u2502        IFormulaDataItem        \u2502     ICellData   \u2502\n * \u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2524\n * \u2502 f                \u2502 si  \u2502 x \u2502 y \u2502 f         \u2502 si  \u2502\n * \u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2524\n * \u2502 =SUM(1)          \u2502     \u2502   \u2502   \u2502 =SUM(1)   \u2502     \u2502\n * \u2502                  \u2502 id1 \u2502   \u2502   \u2502           \u2502 id1 \u2502\n * \u2502 =SUM(1)          \u2502 id1 \u2502   \u2502   \u2502 =SUM(1)   \u2502 id1 \u2502\n * \u2502 =SUM(1)          \u2502 id1 \u2502 0 \u2502 0 \u2502 =SUM(1)   \u2502 id1 \u2502\n * \u2502 =SUM(1)          \u2502 id1 \u2502 0 \u2502 1 \u2502           \u2502 id1 \u2502\n * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n */\nexport function formulaDataItemToCellData(formulaDataItem: Nullable<IFormulaDataItem>): Nullable<ICellData> {\n    if (formulaDataItem == null) {\n        return;\n    }\n    const { f, si, x = 0, y = 0 } = formulaDataItem;\n    const checkFormulaString = isFormulaString(f);\n    const checkFormulaId = isFormulaId(si);\n\n    if (!checkFormulaString && !checkFormulaId) {\n        return {\n            f: null,\n            si: null,\n        };\n    }\n\n    const cellData: ICellData = {};\n\n    if (checkFormulaId) {\n        cellData.si = si;\n    }\n\n    if (checkFormulaString && x === 0 && y === 0) {\n        cellData.f = f;\n    }\n\n    if (cellData.f === undefined) {\n        cellData.f = null;\n    }\n\n    if (cellData.si === undefined) {\n        cellData.si = null;\n    }\n\n    return cellData;\n}\n\n/**\n * Convert formulaData to cellData\n * @param formulaData\n * @returns\n */\nexport function formulaDataToCellData(formulaData: IObjectMatrixPrimitiveType<IFormulaDataItem | null>): IObjectMatrixPrimitiveType<Nullable<ICellData>> {\n    const cellData = new ObjectMatrix<Nullable<ICellData>>({});\n    const formulaDataMatrix = new ObjectMatrix(formulaData);\n\n    formulaDataMatrix.forValue((r, c, formulaDataItem) => {\n        const cellDataItem = formulaDataItemToCellData(formulaDataItem);\n\n        // Originally matrix clone would filter out undefined, but after changing to getMatrix, you need to filter manually here\n        if (!cellDataItem) {\n            return;\n        }\n\n        cellData.setValue(r, c, cellDataItem);\n    });\n\n    return cellData.getMatrix();\n}\n\nexport function isFormulaDataItem(cell: IFormulaDataItem) {\n    const formulaString = cell?.f || '';\n    const formulaId = cell?.si || '';\n\n    const checkFormulaString = isFormulaString(formulaString);\n    const checkFormulaId = isFormulaId(formulaId);\n\n    if (checkFormulaString || checkFormulaId) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function checkIsSameUnitAndSheet(\n    userUnitId: string,\n    userSheetId: string,\n    currentFormulaUnitId: string,\n    currentFormulaSheetId: string,\n    sequenceRangeUnitId: string,\n    sequenceRangeSheetId: string\n) {\n    if (\n        (sequenceRangeUnitId == null || sequenceRangeUnitId.length === 0) &&\n        (sequenceRangeSheetId == null || sequenceRangeSheetId.length === 0)\n    ) {\n        if (userUnitId === currentFormulaUnitId && userSheetId === currentFormulaSheetId) {\n            return true;\n        }\n    } else if (\n        (userUnitId === sequenceRangeUnitId || sequenceRangeUnitId == null || sequenceRangeUnitId.length === 0) &&\n        userSheetId === sequenceRangeSheetId\n    ) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function updateRefOffset(\n    sequenceNodes: Array<string | ISequenceNode>,\n    refChangeIds: number[],\n    refOffsetX: number = 0,\n    refOffsetY: number = 0\n) {\n    const newSequenceNodes: Array<string | ISequenceNode> = [];\n    for (let i = 0, len = sequenceNodes.length; i < len; i++) {\n        const node = sequenceNodes[i];\n        if (typeof node === 'string' || node.nodeType !== sequenceNodeType.REFERENCE || refChangeIds.includes(i)) {\n            newSequenceNodes.push(node);\n            continue;\n        }\n\n        const { token } = node;\n\n        const sequenceGrid = deserializeRangeWithSheetWithCache(token);\n\n        const { range, sheetName, unitId: sequenceUnitId } = sequenceGrid;\n\n        const newRange = Rectangle.moveOffset(range, refOffsetX, refOffsetY);\n\n        newSequenceNodes.push({\n            ...node,\n            token: serializeRangeToRefString({\n                range: newRange,\n                unitId: sequenceUnitId,\n                sheetName,\n            }),\n        });\n    }\n\n    return newSequenceNodes;\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n    IRange,\n    IUnitRange,\n    Nullable,\n} from '@univerjs/core';\nimport {\n    Direction,\n    getIntersectRange,\n    RANGE_TYPE,\n    Rectangle,\n} from '@univerjs/core';\n\nimport { ErrorType, serializeRangeToRefString } from '@univerjs/engine-formula';\n\nimport {\n    EffectRefRangId,\n    handleDeleteRangeMoveLeft,\n    handleDeleteRangeMoveUp,\n    handleInsertCol,\n    handleInsertRangeMoveDown,\n    handleInsertRangeMoveRight,\n    handleInsertRow,\n    handleIRemoveCol,\n    handleIRemoveRow,\n    handleMoveCols,\n    handleMoveRange,\n    handleMoveRows,\n    runRefRangeMutations,\n} from '@univerjs/sheets';\nimport { checkIsSameUnitAndSheet, FormulaReferenceMoveType, type IFormulaReferenceMoveParam } from './ref-range-formula';\n\nexport interface IUnitRangeWithOffset extends IUnitRange {\n    refOffsetX: number;\n    refOffsetY: number;\n    sheetName: string;\n}\n\nexport enum OriginRangeEdgeType {\n    UP,\n    DOWN,\n    LEFT,\n    RIGHT,\n    ALL,\n}\n\n// eslint-disable-next-line max-lines-per-function, complexity\nexport function getNewRangeByMoveParam(\n    unitRangeWidthOffset: IUnitRangeWithOffset,\n    formulaReferenceMoveParam: IFormulaReferenceMoveParam,\n    currentFormulaUnitId: string,\n    currentFormulaSheetId: string\n) {\n    const { type, unitId: userUnitId, sheetId: userSheetId, range, from, to } = formulaReferenceMoveParam;\n\n    const {\n        range: unitRange,\n        sheetId: sequenceRangeSheetId,\n        unitId: sequenceRangeUnitId,\n        sheetName: sequenceRangeSheetName,\n        refOffsetX,\n        refOffsetY,\n    } = unitRangeWidthOffset;\n\n    if (\n        !checkIsSameUnitAndSheet(\n            userUnitId,\n            userSheetId,\n            currentFormulaUnitId,\n            currentFormulaSheetId,\n            sequenceRangeUnitId,\n            sequenceRangeSheetId\n        )\n    ) {\n        return;\n    }\n\n    const sequenceRange = Rectangle.moveOffset(unitRange, refOffsetX, refOffsetY);\n    let newRange: Nullable<IRange> = null;\n\n    if (type === FormulaReferenceMoveType.MoveRange) {\n        if (from == null || to == null) {\n            return;\n        }\n\n        const moveEdge = checkMoveEdge(sequenceRange, from);\n\n        const remainRange = getIntersectRange(sequenceRange, from);\n\n        if (remainRange == null || moveEdge !== OriginRangeEdgeType.ALL) {\n            return;\n        }\n\n        const operators = handleMoveRange(\n            { id: EffectRefRangId.MoveRangeCommandId, params: { toRange: to, fromRange: from } },\n            remainRange\n        );\n\n        const result = runRefRangeMutations(operators, remainRange);\n\n        if (result == null) {\n            return ErrorType.REF;\n        }\n\n        newRange = getMoveNewRange(moveEdge, result, from, to, sequenceRange, remainRange);\n    } else if (type === FormulaReferenceMoveType.MoveRows) {\n        if (from == null || to == null) {\n            return;\n        }\n\n        const moveEdge = checkMoveEdge(sequenceRange, from);\n\n        let remainRange = getIntersectRange(sequenceRange, from);\n\n        if (\n            remainRange == null &&\n            ((from.endRow < sequenceRange.startRow && to.endRow < sequenceRange.startRow) || (from.startRow > sequenceRange.endRow && to.startRow > sequenceRange.endRow))\n        ) {\n            return;\n        }\n\n        if (remainRange == null) {\n            remainRange = {\n                startRow: sequenceRange.startRow,\n                endRow: sequenceRange.endRow,\n                startColumn: sequenceRange.startColumn,\n                endColumn: sequenceRange.endColumn,\n                rangeType: RANGE_TYPE.NORMAL,\n            };\n        }\n\n        const operators = handleMoveRows(\n            { id: EffectRefRangId.MoveRowsCommandId, params: { toRange: to, fromRange: from } },\n            remainRange\n        );\n\n        const result = runRefRangeMutations(operators, remainRange);\n\n        if (result == null) {\n            return ErrorType.REF;\n        }\n\n        newRange = getMoveNewRange(moveEdge, result, from, to, sequenceRange, remainRange);\n    } else if (type === FormulaReferenceMoveType.MoveCols) {\n        if (from == null || to == null) {\n            return;\n        }\n\n        const moveEdge = checkMoveEdge(sequenceRange, from);\n\n        let remainRange = getIntersectRange(sequenceRange, from);\n\n        if (\n            remainRange == null &&\n            ((from.endColumn < sequenceRange.startColumn && to.endColumn < sequenceRange.startColumn) || (from.startColumn > sequenceRange.endColumn && to.startColumn > sequenceRange.endColumn))\n        ) {\n            return;\n        }\n\n        if (remainRange == null) {\n            remainRange = {\n                startRow: sequenceRange.startRow,\n                endRow: sequenceRange.endRow,\n                startColumn: sequenceRange.startColumn,\n                endColumn: sequenceRange.endColumn,\n                rangeType: RANGE_TYPE.NORMAL,\n            };\n        }\n\n        const operators = handleMoveCols(\n            { id: EffectRefRangId.MoveColsCommandId, params: { toRange: to, fromRange: from } },\n            remainRange\n        );\n\n        const result = runRefRangeMutations(operators, remainRange);\n\n        if (result == null) {\n            return ErrorType.REF;\n        }\n\n        newRange = getMoveNewRange(moveEdge, result, from, to, sequenceRange, remainRange);\n    }\n\n    if (range != null) {\n        if (type === FormulaReferenceMoveType.InsertRow) {\n            const operators = handleInsertRow(\n                {\n                    id: EffectRefRangId.InsertRowCommandId,\n                    params: { range, unitId: '', subUnitId: '', direction: Direction.DOWN },\n                },\n                sequenceRange\n            );\n\n            const result = runRefRangeMutations(operators, sequenceRange);\n\n            if (result == null) {\n                return;\n            }\n\n            newRange = {\n                ...sequenceRange,\n                ...result,\n            };\n        } else if (type === FormulaReferenceMoveType.InsertColumn) {\n            const operators = handleInsertCol(\n                {\n                    id: EffectRefRangId.InsertColCommandId,\n                    params: { range, unitId: '', subUnitId: '', direction: Direction.RIGHT },\n                },\n                sequenceRange\n            );\n\n            const result = runRefRangeMutations(operators, sequenceRange);\n\n            if (result == null) {\n                return;\n            }\n\n            newRange = {\n                ...sequenceRange,\n                ...result,\n            };\n        } else if (type === FormulaReferenceMoveType.RemoveRow) {\n            const operators = handleIRemoveRow(\n                {\n                    id: EffectRefRangId.RemoveRowCommandId,\n                    params: { range },\n                },\n                sequenceRange\n            );\n\n            const result = runRefRangeMutations(operators, sequenceRange);\n\n            if (result == null) {\n                return ErrorType.REF;\n            }\n\n            newRange = {\n                ...sequenceRange,\n                ...result,\n            };\n        } else if (type === FormulaReferenceMoveType.RemoveColumn) {\n            const operators = handleIRemoveCol(\n                {\n                    id: EffectRefRangId.RemoveColCommandId,\n                    params: { range },\n                },\n                sequenceRange\n            );\n\n            const result = runRefRangeMutations(operators, sequenceRange);\n\n            if (result == null) {\n                return ErrorType.REF;\n            }\n\n            newRange = {\n                ...sequenceRange,\n                ...result,\n            };\n        } else if (type === FormulaReferenceMoveType.DeleteMoveLeft) {\n            const operators = handleDeleteRangeMoveLeft(\n                {\n                    id: EffectRefRangId.DeleteRangeMoveLeftCommandId,\n                    params: { range },\n                },\n                sequenceRange\n            );\n\n            const result = runRefRangeMutations(operators, sequenceRange);\n\n            if (result == null) {\n                return ErrorType.REF;\n            }\n\n            newRange = {\n                ...sequenceRange,\n                ...result,\n            };\n        } else if (type === FormulaReferenceMoveType.DeleteMoveUp) {\n            const operators = handleDeleteRangeMoveUp(\n                {\n                    id: EffectRefRangId.DeleteRangeMoveUpCommandId,\n                    params: { range },\n                },\n                sequenceRange\n            );\n\n            const result = runRefRangeMutations(operators, sequenceRange);\n\n            if (result == null) {\n                return ErrorType.REF;\n            }\n\n            newRange = {\n                ...sequenceRange,\n                ...result,\n            };\n        } else if (type === FormulaReferenceMoveType.InsertMoveDown) {\n            const operators = handleInsertRangeMoveDown(\n                {\n                    id: EffectRefRangId.InsertRangeMoveDownCommandId,\n                    params: { range },\n                },\n                sequenceRange\n            );\n\n            const result = runRefRangeMutations(operators, sequenceRange);\n\n            if (result == null) {\n                return;\n            }\n\n            newRange = {\n                ...sequenceRange,\n                ...result,\n            };\n        } else if (type === FormulaReferenceMoveType.InsertMoveRight) {\n            const operators = handleInsertRangeMoveRight(\n                {\n                    id: EffectRefRangId.InsertRangeMoveRightCommandId,\n                    params: { range },\n                },\n                sequenceRange\n            );\n\n            const result = runRefRangeMutations(operators, sequenceRange);\n\n            if (result == null) {\n                return;\n            }\n\n            newRange = {\n                ...sequenceRange,\n                ...result,\n            };\n        }\n    }\n\n    if (newRange == null) {\n        return;\n    }\n\n    return serializeRangeToRefString({\n        range: newRange,\n        sheetName: sequenceRangeSheetName,\n        unitId: sequenceRangeUnitId,\n    });\n}\n\n/**\n *  Calculate the new ref information for the moving selection.\n * @param moveEdge  the 'from' range lie on the edge of the original range, or does it completely cover the original range\n * @param result The original range is divided by 'from' and moved to a new position range.\n * @param from The initial range of the moving selection.\n * @param to The result range after moving the initial range.\n * @param origin The original target range.\n * @param remain \"The range subtracted from the initial range by 'from'.\n * @returns\n */\n// eslint-disable-next-line\nfunction getMoveNewRange(\n    moveEdge: Nullable<OriginRangeEdgeType>,\n    result: IRange,\n    from: IRange,\n    to: IRange,\n    origin: IRange,\n    remain: IRange\n) {\n    const { startRow, endRow, startColumn, endColumn, rangeType } = getStartEndValue(result);\n\n    const {\n        startRow: fromStartRow,\n        startColumn: fromStartColumn,\n        endRow: fromEndRow,\n        endColumn: fromEndColumn,\n        rangeType: fromRangeType = RANGE_TYPE.NORMAL,\n    } = getStartEndValue(from);\n\n    const { startRow: toStartRow, startColumn: toStartColumn, endRow: toEndRow, endColumn: toEndColumn } = getStartEndValue(to);\n\n    const {\n        startRow: remainStartRow,\n        endRow: remainEndRow,\n        startColumn: remainStartColumn,\n        endColumn: remainEndColumn,\n    } = getStartEndValue(remain);\n\n    const {\n        startRow: originStartRow,\n        endRow: originEndRow,\n        startColumn: originStartColumn,\n        endColumn: originEndColumn,\n        rangeType: originRangeType = RANGE_TYPE.NORMAL,\n    } = getStartEndValue(origin);\n\n    const newRange = { ...origin };\n\n    function rowsCover(): boolean {\n        if (rangeType === RANGE_TYPE.COLUMN && originRangeType === RANGE_TYPE.COLUMN) {\n            return true;\n        }\n        return startColumn >= originStartColumn && endColumn <= originEndColumn;\n    }\n\n    function columnsCover(): boolean {\n        if (rangeType === RANGE_TYPE.ROW && originRangeType === RANGE_TYPE.ROW) {\n            return true;\n        }\n        return startRow >= originStartRow && endRow <= originEndRow;\n    }\n\n    if (moveEdge === OriginRangeEdgeType.UP) {\n        if (rowsCover()) {\n            if (startRow < originStartRow) {\n                newRange.startRow = startRow;\n            } else if (startRow >= originEndRow) {\n                newRange.endRow -= fromEndRow + 1 - originStartRow;\n            } else {\n                return;\n            }\n        } else {\n            return;\n        }\n    } else if (moveEdge === OriginRangeEdgeType.DOWN) {\n        if (rowsCover()) {\n            if (endRow > originEndRow) {\n                newRange.endRow = endRow;\n            } else if (endRow <= originStartRow) {\n                newRange.startRow += originEndRow - fromStartRow + 1;\n            } else {\n                return;\n            }\n        } else {\n            return;\n        }\n    } else if (moveEdge === OriginRangeEdgeType.LEFT) {\n        if (columnsCover()) {\n            if (startColumn < originStartColumn) {\n                newRange.startColumn = startColumn;\n            } else if (startColumn >= originEndColumn) {\n                newRange.endColumn -= fromEndColumn + 1 - originStartColumn;\n            } else {\n                return;\n            }\n        } else {\n            return;\n        }\n    } else if (moveEdge === OriginRangeEdgeType.RIGHT) {\n        if (columnsCover()) {\n            if (endColumn > originEndColumn) {\n                newRange.endColumn = endColumn;\n            } else if (endColumn <= originStartColumn) {\n                newRange.startColumn += originEndColumn - fromStartColumn + 1;\n            } else {\n                return;\n            }\n        } else {\n            return;\n        }\n    } else if (moveEdge === OriginRangeEdgeType.ALL) {\n        newRange.startRow = startRow;\n        newRange.startColumn = startColumn;\n        newRange.endRow = endRow;\n        newRange.endColumn = endColumn;\n    } else if ((fromStartColumn <= originStartColumn && fromEndColumn >= originEndColumn) || (fromRangeType === RANGE_TYPE.ROW && originRangeType === RANGE_TYPE.ROW)) { // For the entire row, originStartColumn and originEndColumn may be NaN\n        if (from.endRow < originStartRow) {\n            if (toStartRow >= originStartRow) {\n                newRange.startRow -= fromEndRow - fromStartRow + 1;\n            }\n            if (toStartRow >= originEndRow) {\n                newRange.endRow -= fromEndRow - fromStartRow + 1;\n            }\n        } else if (from.startRow > originEndRow) {\n            if (toEndRow <= originEndRow) {\n                newRange.endRow += fromEndRow - fromStartRow + 1;\n            }\n            if (toEndRow <= originStartRow) {\n                newRange.startRow += fromEndRow - fromStartRow + 1;\n            }\n        } else if (from.startRow >= originStartRow && from.endRow <= originEndRow) { // from range is in the middle of the original range\n            if (toStartRow <= originStartRow) {\n                newRange.startRow += fromEndRow - fromStartRow + 1;\n            } else if (toStartRow >= originEndRow) {\n                newRange.endRow -= fromEndRow - fromStartRow + 1;\n            }\n        }\n    } else if ((fromStartRow <= originStartRow && fromEndRow >= originEndRow) || (fromRangeType === RANGE_TYPE.COLUMN && originRangeType === RANGE_TYPE.COLUMN)) { // For the entire column, originStartRow and originEndRow may be NaN\n        if (from.endColumn < originStartColumn) {\n            if (toStartColumn >= originStartColumn) {\n                newRange.startColumn -= fromEndColumn - fromStartColumn + 1;\n            }\n            if (toStartColumn >= originEndColumn) {\n                newRange.endColumn -= fromEndColumn - fromStartColumn + 1;\n            }\n        } else if (from.startColumn > originEndColumn) {\n            if (toEndColumn <= originEndColumn) {\n                newRange.endColumn += fromEndColumn - fromStartColumn + 1;\n            }\n            if (toEndColumn <= originStartColumn) {\n                newRange.startColumn += fromEndColumn - fromStartColumn + 1;\n            }\n        } else if (from.startColumn >= originStartColumn && from.endColumn <= originEndColumn) { // from range is in the middle of the original range\n            if (toStartColumn <= originStartColumn) {\n                newRange.startColumn += fromEndColumn - fromStartColumn + 1;\n            } else if (toStartColumn >= originEndColumn) {\n                newRange.endColumn -= fromEndColumn - fromStartColumn + 1;\n            }\n        }\n    } else if (\n        ((toStartColumn <= remainEndColumn + 1 && toEndColumn >= originEndColumn) ||\n           (toStartColumn <= originStartColumn && toEndColumn >= remainStartColumn - 1)) &&\n       toStartRow <= originStartRow &&\n       toEndRow >= originEndRow\n    ) {\n        newRange.startRow = startRow;\n        newRange.startColumn = startColumn;\n        newRange.endRow = endRow;\n        newRange.endColumn = endColumn;\n    } else if (\n        ((toStartRow <= remainEndRow + 1 && toEndRow >= originEndRow) ||\n           (toStartRow <= originStartRow && toEndRow >= remainStartRow - 1)) &&\n       toStartColumn <= originStartColumn &&\n       toEndColumn >= originEndColumn\n    ) {\n        newRange.startRow = startRow;\n        newRange.startColumn = startColumn;\n        newRange.endRow = endRow;\n        newRange.endColumn = endColumn;\n    } else {\n        // By default, the offset of result is taken\n        newRange.startRow = startRow;\n        newRange.startColumn = startColumn;\n        newRange.endRow = endRow;\n        newRange.endColumn = endColumn;\n    }\n\n    return newRange;\n}\n\n/**\n * Determine the range of the moving selection,\n * and check if it is at the edge of the reference range of the formula.\n * @param originRange\n * @param fromRange\n */\nexport function checkMoveEdge(originRange: IRange, fromRange: IRange): Nullable<OriginRangeEdgeType> {\n    const startRow = getStartValue(originRange.startRow);\n    const endRow = getEndValue(originRange.endRow);\n    const startColumn = getStartValue(originRange.startColumn);\n    const endColumn = getEndValue(originRange.endColumn);\n\n    const fromStartRow = getStartValue(fromRange.startRow);\n    const fromEndRow = getEndValue(fromRange.endRow);\n    const fromStartColumn = getStartValue(fromRange.startColumn);\n    const fromEndColumn = getEndValue(fromRange.endColumn);\n\n    function rowsCover(): boolean {\n        if (originRange.rangeType === RANGE_TYPE.COLUMN && fromRange.rangeType === RANGE_TYPE.COLUMN) {\n            return true;\n        }\n        return startRow >= fromStartRow && endRow <= fromEndRow;\n    }\n\n    function columnsCover(): boolean {\n        if (originRange.rangeType === RANGE_TYPE.ROW && fromRange.rangeType === RANGE_TYPE.ROW) {\n            return true;\n        }\n        return startColumn >= fromStartColumn && endColumn <= fromEndColumn;\n    }\n\n    function allCover(): boolean {\n        return originRange.rangeType === RANGE_TYPE.ALL && fromRange.rangeType === RANGE_TYPE.ALL;\n    }\n\n    if ((rowsCover() && columnsCover()) || allCover()) {\n        return OriginRangeEdgeType.ALL;\n    }\n\n    if (\n        columnsCover() &&\n            startRow >= fromStartRow &&\n            startRow <= fromEndRow &&\n            endRow > fromEndRow\n    ) {\n        return OriginRangeEdgeType.UP;\n    }\n\n    if (\n        columnsCover() &&\n            endRow >= fromStartRow &&\n            endRow <= fromEndRow &&\n            startRow < fromStartRow\n    ) {\n        return OriginRangeEdgeType.DOWN;\n    }\n\n    if (\n        rowsCover() &&\n            startColumn >= fromStartColumn &&\n            startColumn <= fromEndColumn &&\n            endColumn > fromEndColumn\n    ) {\n        return OriginRangeEdgeType.LEFT;\n    }\n\n    if (\n        rowsCover() &&\n            endColumn >= fromStartColumn &&\n            endColumn <= fromEndColumn &&\n            startColumn < fromStartColumn\n    ) {\n        return OriginRangeEdgeType.RIGHT;\n    }\n\n    return null; // Return null if no edge type matches\n}\n\n// Helper functions to get start values, treating NaN as unbounded\nfunction getStartValue(value: number): number {\n    // If value is NaN, treat as -Infinity (unbounded start)\n    return isNaN(value) ? -Infinity : value;\n}\n\n// Helper functions to get end values, treating NaN as unbounded\nfunction getEndValue(value: number): number {\n    // If value is NaN, treat as Infinity (unbounded end)\n    return isNaN(value) ? Infinity : value;\n}\n\nfunction getStartEndValue(range: IRange) {\n    const { startRow, endRow, startColumn, endColumn } = range;\n    return {\n        ...range,\n        startRow: getStartValue(startRow),\n        endRow: getEndValue(endRow),\n        startColumn: getStartValue(startColumn),\n        endColumn: getEndValue(endColumn),\n    };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n    ICommandInfo,\n    Nullable,\n    Workbook,\n} from '@univerjs/core';\n\nimport type { ISetDefinedNameMutationParam } from '@univerjs/engine-formula';\n\nimport type {\n    IDeleteRangeMoveLeftCommandParams,\n    IDeleteRangeMoveUpCommandParams,\n    IInsertColCommandParams,\n    IInsertRowCommandParams,\n    IMoveColsCommandParams,\n    IMoveRangeCommandParams,\n    IMoveRowsCommandParams,\n    InsertRangeMoveDownCommandParams,\n    InsertRangeMoveRightCommandParams,\n    IRemoveRowColCommandParams,\n    IRemoveSheetCommandParams,\n    ISetWorksheetNameCommandParams,\n} from '@univerjs/sheets';\nimport {\n    RANGE_TYPE,\n} from '@univerjs/core';\nimport {\n    DeleteRangeMoveLeftCommand,\n    DeleteRangeMoveUpCommand,\n    InsertColCommand,\n    InsertRangeMoveDownCommand,\n    InsertRangeMoveRightCommand,\n    InsertRowCommand,\n    MoveColsCommand,\n    MoveRangeCommand,\n    MoveRowsCommand,\n    RemoveColCommand,\n    RemoveDefinedNameCommand,\n    RemoveRowCommand,\n    RemoveSheetCommand,\n    SetDefinedNameCommand,\n    SetWorksheetNameCommand,\n} from '@univerjs/sheets';\nimport { FormulaReferenceMoveType, type IFormulaReferenceMoveParam } from './ref-range-formula';\n\nexport function getReferenceMoveParams(workbook: Workbook, command: ICommandInfo) {\n    const { id } = command;\n    let result: Nullable<IFormulaReferenceMoveParam> = null;\n\n    switch (id) {\n        case MoveRangeCommand.id:\n            result = handleRefMoveRange(command as ICommandInfo<IMoveRangeCommandParams>, workbook);\n            break;\n        case MoveRowsCommand.id:\n            result = handleRefMoveRows(command as ICommandInfo<IMoveRowsCommandParams>, workbook);\n            break;\n        case MoveColsCommand.id:\n            result = handleRefMoveCols(command as ICommandInfo<IMoveColsCommandParams>, workbook);\n            break;\n        case InsertRowCommand.id:\n            result = handleRefInsertRow(command as ICommandInfo<IInsertRowCommandParams>);\n            break;\n        case InsertColCommand.id:\n            result = handleRefInsertCol(command as ICommandInfo<IInsertColCommandParams>);\n            break;\n        case InsertRangeMoveRightCommand.id:\n            result = handleRefInsertRangeMoveRight(command as ICommandInfo<InsertRangeMoveRightCommandParams>, workbook);\n            break;\n        case InsertRangeMoveDownCommand.id:\n            result = handleRefInsertRangeMoveDown(command as ICommandInfo<InsertRangeMoveDownCommandParams>, workbook);\n            break;\n        case RemoveRowCommand.id:\n            result = handleRefRemoveRow(command as ICommandInfo<IRemoveRowColCommandParams>, workbook);\n            break;\n        case RemoveColCommand.id:\n            result = handleRefRemoveCol(command as ICommandInfo<IRemoveRowColCommandParams>, workbook);\n            break;\n        case DeleteRangeMoveUpCommand.id:\n            result = handleRefDeleteRangeMoveUp(command as ICommandInfo<IDeleteRangeMoveUpCommandParams>, workbook);\n            break;\n        case DeleteRangeMoveLeftCommand.id:\n            result = handleRefDeleteRangeMoveLeft(command as ICommandInfo<IDeleteRangeMoveLeftCommandParams>, workbook);\n            break;\n        case SetWorksheetNameCommand.id:\n            result = handleRefSetWorksheetName(command as ICommandInfo<ISetWorksheetNameCommandParams>, workbook);\n            break;\n        case RemoveSheetCommand.id:\n            result = handleRefRemoveWorksheet(command as ICommandInfo<IRemoveSheetCommandParams>, workbook);\n            break;\n        case SetDefinedNameCommand.id:\n            result = handleRefSetDefinedName(command as ICommandInfo<ISetDefinedNameMutationParam>, workbook);\n            break;\n        case RemoveDefinedNameCommand.id:\n            result = handleRefRemoveDefinedName(command as ICommandInfo<ISetDefinedNameMutationParam>, workbook);\n            break;\n    }\n\n    return result;\n}\n\nfunction getCurrentSheetInfo(workbook: Workbook) {\n    const unitId = workbook.getUnitId();\n    const sheetId = workbook.getActiveSheet()?.getSheetId() || '';\n\n    return {\n        unitId,\n        sheetId,\n    };\n}\n\nfunction handleRefMoveRange(command: ICommandInfo<IMoveRangeCommandParams>, workbook: Workbook) {\n    const { params } = command;\n    if (!params) return null;\n\n    const { fromRange, toRange } = params;\n    if (!fromRange || !toRange) return null;\n\n    const { unitId, sheetId } = getCurrentSheetInfo(workbook);\n\n    return {\n        type: FormulaReferenceMoveType.MoveRange,\n        from: fromRange,\n        to: toRange,\n        unitId,\n        sheetId,\n    };\n}\n\nfunction handleRefMoveRows(command: ICommandInfo<IMoveRowsCommandParams>, workbook: Workbook) {\n    const { params } = command;\n    if (!params) return null;\n\n    const {\n        fromRange: { startRow: fromStartRow, endRow: fromEndRow },\n        toRange: { startRow: toStartRow, endRow: toEndRow },\n    } = params;\n\n    const unitId = workbook.getUnitId();\n    const worksheet = workbook.getActiveSheet();\n    if (!worksheet) return null;\n\n    const sheetId = worksheet.getSheetId();\n\n    const from = {\n        startRow: fromStartRow,\n        startColumn: 0,\n        endRow: fromEndRow,\n        endColumn: worksheet.getColumnCount() - 1,\n        rangeType: RANGE_TYPE.ROW,\n    };\n    const to = {\n        startRow: toStartRow,\n        startColumn: 0,\n        endRow: toEndRow,\n        endColumn: worksheet.getColumnCount() - 1,\n        rangeType: RANGE_TYPE.ROW,\n    };\n\n    return {\n        type: FormulaReferenceMoveType.MoveRows,\n        from,\n        to,\n        unitId,\n        sheetId,\n    };\n}\n\nfunction handleRefMoveCols(command: ICommandInfo<IMoveColsCommandParams>, workbook: Workbook) {\n    const { params } = command;\n    if (!params) return null;\n\n    const {\n        fromRange: { startColumn: fromStartCol, endColumn: fromEndCol },\n        toRange: { startColumn: toStartCol, endColumn: toEndCol },\n    } = params;\n\n    const unitId = workbook.getUnitId();\n    const worksheet = workbook.getActiveSheet();\n    if (!worksheet) return null;\n\n    const sheetId = worksheet.getSheetId();\n\n    const from = {\n        startRow: 0,\n        startColumn: fromStartCol,\n        endRow: worksheet.getRowCount() - 1,\n        endColumn: fromEndCol,\n        rangeType: RANGE_TYPE.COLUMN,\n    };\n    const to = {\n        startRow: 0,\n        startColumn: toStartCol,\n        endRow: worksheet.getRowCount() - 1,\n        endColumn: toEndCol,\n        rangeType: RANGE_TYPE.COLUMN,\n    };\n\n    return {\n        type: FormulaReferenceMoveType.MoveCols,\n        from,\n        to,\n        unitId,\n        sheetId,\n    };\n}\n\nfunction handleRefInsertRow(command: ICommandInfo<IInsertRowCommandParams>) {\n    const { params } = command;\n    if (!params) return null;\n\n    const { range, unitId, subUnitId } = params;\n    return {\n        type: FormulaReferenceMoveType.InsertRow,\n        range,\n        unitId,\n        sheetId: subUnitId,\n    };\n}\n\nfunction handleRefInsertCol(command: ICommandInfo<IInsertColCommandParams>) {\n    const { params } = command;\n    if (!params) return null;\n\n    const { range, unitId, subUnitId } = params;\n    return {\n        type: FormulaReferenceMoveType.InsertColumn,\n        range,\n        unitId,\n        sheetId: subUnitId,\n    };\n}\n\nfunction handleRefInsertRangeMoveRight(command: ICommandInfo<InsertRangeMoveRightCommandParams>, workbook: Workbook) {\n    const { params } = command;\n    if (!params) return null;\n\n    const { range } = params;\n    const { unitId, sheetId } = getCurrentSheetInfo(workbook);\n\n    return {\n        type: FormulaReferenceMoveType.InsertMoveRight,\n        range,\n        unitId,\n        sheetId,\n    };\n}\n\nfunction handleRefInsertRangeMoveDown(command: ICommandInfo<InsertRangeMoveDownCommandParams>, workbook: Workbook) {\n    const { params } = command;\n    if (!params) return null;\n\n    const { range } = params;\n    const { unitId, sheetId } = getCurrentSheetInfo(workbook);\n\n    return {\n        type: FormulaReferenceMoveType.InsertMoveDown,\n        range,\n        unitId,\n        sheetId,\n    };\n}\n\nfunction handleRefRemoveRow(command: ICommandInfo<IRemoveRowColCommandParams>, workbook: Workbook) {\n    const { params } = command;\n    if (!params) return null;\n\n    const { range } = params;\n    const { unitId, sheetId } = getCurrentSheetInfo(workbook);\n\n    return {\n        type: FormulaReferenceMoveType.RemoveRow,\n        range,\n        unitId,\n        sheetId,\n    };\n}\n\nfunction handleRefRemoveCol(command: ICommandInfo<IRemoveRowColCommandParams>, workbook: Workbook) {\n    const { params } = command;\n    if (!params) return null;\n\n    const { range } = params;\n    const { unitId, sheetId } = getCurrentSheetInfo(workbook);\n\n    return {\n        type: FormulaReferenceMoveType.RemoveColumn,\n        range,\n        unitId,\n        sheetId,\n    };\n}\n\nfunction handleRefDeleteRangeMoveUp(command: ICommandInfo<IDeleteRangeMoveUpCommandParams>, workbook: Workbook) {\n    const { params } = command;\n    if (!params) return null;\n\n    const { range } = params;\n    const { unitId, sheetId } = getCurrentSheetInfo(workbook);\n\n    return {\n        type: FormulaReferenceMoveType.DeleteMoveUp,\n        range,\n        unitId,\n        sheetId,\n    };\n}\n\nfunction handleRefDeleteRangeMoveLeft(command: ICommandInfo<IDeleteRangeMoveLeftCommandParams>, workbook: Workbook) {\n    const { params } = command;\n    if (!params) return null;\n\n    const { range } = params;\n    const { unitId, sheetId } = getCurrentSheetInfo(workbook);\n\n    return {\n        type: FormulaReferenceMoveType.DeleteMoveLeft,\n        range,\n        unitId,\n        sheetId,\n    };\n}\n\nfunction handleRefSetWorksheetName(command: ICommandInfo<ISetWorksheetNameCommandParams>, workbook: Workbook) {\n    const { params } = command;\n    if (!params) return null;\n\n    const { unitId, subUnitId, name } = params;\n\n    const { unitId: workbookId, sheetId } = getCurrentSheetInfo(workbook);\n\n    return {\n        type: FormulaReferenceMoveType.SetName,\n        unitId: unitId || workbookId,\n        sheetId: subUnitId || sheetId,\n        sheetName: name,\n    };\n}\n\nfunction handleRefRemoveWorksheet(command: ICommandInfo<IRemoveSheetCommandParams>, workbook: Workbook) {\n    const { params } = command;\n    if (!params) return null;\n\n    const { unitId, subUnitId } = params;\n\n    const { unitId: workbookId, sheetId } = getCurrentSheetInfo(workbook);\n\n    return {\n        type: FormulaReferenceMoveType.RemoveSheet,\n        unitId: unitId || workbookId,\n        sheetId: subUnitId || sheetId,\n    };\n}\n\nfunction handleRefSetDefinedName(command: ICommandInfo<ISetDefinedNameMutationParam>, workbook: Workbook): Nullable<IFormulaReferenceMoveParam> {\n    const { params } = command;\n    if (!params) return null;\n\n    const { unitId, name, id } = params;\n\n    const { sheetId } = getCurrentSheetInfo(workbook);\n\n    return {\n        type: FormulaReferenceMoveType.SetDefinedName,\n        unitId,\n        sheetId,\n        definedName: name,\n        definedNameId: id,\n    };\n}\n\nfunction handleRefRemoveDefinedName(command: ICommandInfo<ISetDefinedNameMutationParam>, workbook: Workbook): Nullable<IFormulaReferenceMoveParam> {\n    const { params } = command;\n    if (!params) return null;\n\n    const { unitId, name, id } = params;\n\n    const { sheetId } = getCurrentSheetInfo(workbook);\n\n    return {\n        type: FormulaReferenceMoveType.RemoveDefinedName,\n        unitId,\n        sheetId,\n        definedName: name,\n        definedNameId: id,\n    };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IMutationInfo, Nullable, Workbook } from '@univerjs/core';\nimport type { IDefinedNamesServiceParam, ISetDefinedNameMutationParam } from '@univerjs/engine-formula';\nimport type { IUnitRangeWithOffset } from './utils/ref-range-move';\nimport {\n    Disposable,\n    Inject,\n    IUniverInstanceService,\n    UniverInstanceType,\n} from '@univerjs/core';\nimport { deserializeRangeWithSheetWithCache, ErrorType, generateStringWithSequence, IDefinedNamesService, LexerTreeBuilder, sequenceNodeType, serializeRangeToRefString, SetDefinedNameMutation } from '@univerjs/engine-formula';\nimport { RemoveDefinedNameCommand, SetDefinedNameCommand, SheetInterceptorService } from '@univerjs/sheets';\nimport { FormulaReferenceMoveType, type IFormulaReferenceMoveParam, updateRefOffset } from './utils/ref-range-formula';\nimport { getNewRangeByMoveParam } from './utils/ref-range-move';\nimport { getReferenceMoveParams } from './utils/ref-range-param';\n\nexport class UpdateDefinedNameController extends Disposable {\n    constructor(\n        @IDefinedNamesService private readonly _definedNamesService: IDefinedNamesService,\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @Inject(SheetInterceptorService) private _sheetInterceptorService: SheetInterceptorService,\n        @Inject(LexerTreeBuilder) private readonly _lexerTreeBuilder: LexerTreeBuilder\n\n    ) {\n        super();\n\n        this._initialize();\n    }\n\n    private _initialize() {\n        this._commandExecutedListener();\n    }\n\n    private _commandExecutedListener() {\n        // remove defined name when sheet is removed\n        this.disposeWithMe(\n            this._sheetInterceptorService.interceptCommand({\n                getMutations: (command) => {\n                    // Exclude processing in getReferenceMoveParams, SetDefinedNameCommand is only handled in UpdateFormulaController\n                    if (command.id === SetDefinedNameCommand.id || command.id === RemoveDefinedNameCommand.id) {\n                        return {\n                            redos: [],\n                            undos: [],\n                        };\n                    }\n\n                    const workbook = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n\n                    if (workbook == null) {\n                        return {\n                            redos: [],\n                            undos: [],\n                        };\n                    }\n\n                    const result = getReferenceMoveParams(workbook, command);\n\n                    if (!result) {\n                        return {\n                            redos: [],\n                            undos: [],\n                        };\n                    }\n\n                    return this._getUpdateDefinedNameMutations(workbook, result);\n                },\n            })\n        );\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    private _getUpdateDefinedNameMutations(workbook: Workbook, moveParams: IFormulaReferenceMoveParam) {\n        const { type, unitId, sheetId } = moveParams;\n        const definedNames = this._definedNamesService.getDefinedNameMap(unitId);\n\n        if (!definedNames) {\n            return {\n                redos: [],\n                undos: [],\n            };\n        }\n\n        const redoMutations: IMutationInfo<ISetDefinedNameMutationParam>[] = [];\n        const undoMutations: IMutationInfo<ISetDefinedNameMutationParam>[] = [];\n\n        // eslint-disable-next-line max-lines-per-function\n        Object.values(definedNames).forEach((item) => {\n            const { formulaOrRefString } = item;\n            const sequenceNodes = this._lexerTreeBuilder.sequenceNodesBuilder(formulaOrRefString);\n            if (sequenceNodes == null) {\n                return true;\n            }\n\n            let shouldModify = false;\n            const refChangeIds: number[] = [];\n            for (let i = 0, len = sequenceNodes.length; i < len; i++) {\n                const node = sequenceNodes[i];\n                if (typeof node === 'string' || node.nodeType !== sequenceNodeType.REFERENCE) {\n                    continue;\n                }\n                const { token } = node;\n\n                const sequenceGrid = deserializeRangeWithSheetWithCache(token);\n\n                const { range, sheetName, unitId: sequenceUnitId } = sequenceGrid;\n                const sequenceSheetId = workbook.getSheetBySheetName(sheetName)?.getSheetId() || '';\n\n                const sequenceUnitRangeWidthOffset: IUnitRangeWithOffset = {\n                    range,\n                    sheetId: sequenceSheetId,\n                    unitId: sequenceUnitId,\n                    sheetName,\n                    refOffsetX: 0,\n                    refOffsetY: 0,\n                };\n\n                let newRefString: Nullable<string> = null;\n\n                if (type === FormulaReferenceMoveType.RemoveSheet) {\n                    newRefString = this._removeSheet(item, unitId, sheetId);\n                } else if (type === FormulaReferenceMoveType.SetName) {\n                    const {\n                        sheetId: userSheetId,\n                        sheetName: newSheetName,\n                    } = moveParams;\n                    if (newSheetName == null) {\n                        continue;\n                    }\n\n                    if (sequenceSheetId == null || sequenceSheetId.length === 0) {\n                        continue;\n                    }\n\n                    if (userSheetId !== sequenceSheetId) {\n                        continue;\n                    }\n\n                    newRefString = serializeRangeToRefString({\n                        range,\n                        sheetName: newSheetName,\n                        unitId: sequenceUnitId,\n                    });\n                } else {\n                    newRefString = getNewRangeByMoveParam(\n                        sequenceUnitRangeWidthOffset,\n                        moveParams,\n                        unitId,\n                        sheetId\n                    );\n                }\n\n                if (newRefString != null) {\n                    sequenceNodes[i] = {\n                        ...node,\n                        token: newRefString,\n                    };\n                    shouldModify = true;\n                    refChangeIds.push(i);\n                }\n            }\n\n            if (!shouldModify) {\n                return true;\n            }\n\n            const newSequenceString = generateStringWithSequence(updateRefOffset(sequenceNodes, refChangeIds));\n\n            const redoMutation = {\n                id: SetDefinedNameMutation.id,\n                params: {\n                    unitId,\n                    ...item,\n                    formulaOrRefString: newSequenceString,\n                },\n            };\n            redoMutations.push(redoMutation);\n\n            const undoMutation = {\n                id: SetDefinedNameMutation.id,\n                params: {\n                    unitId,\n                    ...item,\n                },\n            };\n            undoMutations.push(undoMutation);\n        });\n\n        return {\n            redos: redoMutations,\n            undos: undoMutations,\n        };\n    }\n\n    private _removeSheet(item: IDefinedNamesServiceParam, unitId: string, subUnitId: string) {\n        const { formulaOrRefString } = item;\n        const sheetId = this._definedNamesService.getWorksheetByRef(unitId, formulaOrRefString)?.getSheetId();\n\n        if (sheetId === subUnitId) {\n            return ErrorType.REF;\n        }\n\n        return null;\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n    ICommandInfo,\n    IExecutionOptions,\n    IUnitRange,\n    Nullable,\n    Workbook,\n} from '@univerjs/core';\nimport type { IDirtyUnitFeatureMap, IDirtyUnitOtherFormulaMap, IDirtyUnitSheetNameMap, IFormulaData, IFormulaDataItem, IFormulaDirtyData, IUnitSheetNameMap } from '@univerjs/engine-formula';\nimport type {\n    IInsertSheetMutationParams,\n    IRemoveSheetMutationParams,\n    ISetRangeValuesMutationParams,\n} from '@univerjs/sheets';\nimport type { IUniverSheetsFormulaBaseConfig } from './config.schema';\n\nimport type { IFormulaReferenceMoveParam } from './utils/ref-range-formula';\nimport type { IUnitRangeWithOffset } from './utils/ref-range-move';\n\nimport {\n    Disposable,\n    ICommandService,\n    IConfigService,\n    Inject,\n    Injector,\n    IUniverInstanceService,\n    ObjectMatrix,\n    Tools,\n    UniverInstanceType,\n} from '@univerjs/core';\n\nimport { deserializeRangeWithSheetWithCache, ErrorType, FormulaDataModel, generateStringWithSequence, IDefinedNamesService, initSheetFormulaData, LexerTreeBuilder, sequenceNodeType, serializeRangeToRefString, SetArrayFormulaDataMutation, SetFormulaCalculationStartMutation, SetFormulaDataMutation } from '@univerjs/engine-formula';\nimport {\n    ClearSelectionFormatCommand,\n    InsertSheetMutation,\n    RemoveSheetMutation,\n    SetBorderCommand,\n    SetRangeValuesMutation,\n    SetStyleCommand,\n    SheetInterceptorService,\n} from '@univerjs/sheets';\nimport { map } from 'rxjs';\nimport { CalculationMode, PLUGIN_CONFIG_KEY_BASE } from './config.schema';\nimport { removeFormulaData } from './utils/offset-formula-data';\nimport { checkIsSameUnitAndSheet, formulaDataToCellData, FormulaReferenceMoveType, getFormulaReferenceMoveUndoRedo, updateRefOffset } from './utils/ref-range-formula';\nimport { getNewRangeByMoveParam } from './utils/ref-range-move';\nimport { getReferenceMoveParams } from './utils/ref-range-param';\n\n/**\n * Update formula process\n *\n * 1. Command intercepts, converts the command information to adapt refRange, offsets the formula content, and obtains the formula that requires offset content.\n *\n * 2. Use refRange to offset the formula position and return undo/redo data to setRangeValues mutation\n *      - Redo data: Delete the old value at the old position on the match, and add the new value at the new position (the new value first checks whether the old position has offset content, if so, use the new offset content, if not, take the old value)\n *      - Undo data: the old position on the match saves the old value, and the new position delete value. Using undos when undoing will operate the data after the offset position.\n *\n * 3. onCommandExecuted, before formula calculation, use the setRangeValues information to delete the old formulaData, ArrayFormula and ArrayFormulaCellData, and send the worker (complementary setRangeValues after collaborative conflicts, normal operation triggers formula update, undo/redo are captured and processed here)\n */\nexport class UpdateFormulaController extends Disposable {\n    constructor(\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @ICommandService private readonly _commandService: ICommandService,\n        @Inject(LexerTreeBuilder) private readonly _lexerTreeBuilder: LexerTreeBuilder,\n        @Inject(FormulaDataModel) private readonly _formulaDataModel: FormulaDataModel,\n        @Inject(SheetInterceptorService) private _sheetInterceptorService: SheetInterceptorService,\n        @IDefinedNamesService private readonly _definedNamesService: IDefinedNamesService,\n        @IConfigService private readonly _configService: IConfigService,\n        @Inject(Injector) readonly _injector: Injector\n    ) {\n        super();\n\n        this._commandExecutedListener();\n    }\n\n    private _commandExecutedListener() {\n        this.disposeWithMe(this._sheetInterceptorService.interceptCommand({\n            getMutations: (command) => this._getUpdateFormula(command),\n        }));\n\n        this.disposeWithMe(\n            this._commandService.onCommandExecuted((command: ICommandInfo) => {\n                if (!command.params) return;\n\n                if (command.id === RemoveSheetMutation.id) {\n                    const { subUnitId: sheetId, unitId } = command.params as IRemoveSheetMutationParams;\n                    this._handleWorkbookDisposed(unitId, sheetId);\n                } else if (command.id === InsertSheetMutation.id) {\n                    this._handleInsertSheetMutation(command.params as IInsertSheetMutationParams);\n                }\n            })\n        );\n\n        // Make sure to get the complete formula history data before updating, which contains the complete mapping of f and si\n        this.disposeWithMe(\n            this._commandService.beforeCommandExecuted((command: ICommandInfo, options?: IExecutionOptions) => {\n                if (command.id === SetRangeValuesMutation.id) {\n                    const params = command.params as ISetRangeValuesMutationParams;\n\n                    if (\n                        (options && options.onlyLocal === true) ||\n                        params.trigger === SetStyleCommand.id ||\n                        params.trigger === SetBorderCommand.id ||\n                        params.trigger === ClearSelectionFormatCommand.id\n                    ) {\n                        return;\n                    }\n                    this._handleSetRangeValuesMutation(params as ISetRangeValuesMutationParams);\n                }\n            })\n        );\n\n        this.disposeWithMe(this._univerInstanceService.getTypeOfUnitAdded$<Workbook>(UniverInstanceType.UNIVER_SHEET)\n            .subscribe((unit) => this._handleWorkbookAdded(unit)));\n        this.disposeWithMe(this._univerInstanceService.getTypeOfUnitDisposed$<Workbook>(UniverInstanceType.UNIVER_SHEET)\n            .pipe(map((unit) => unit.getUnitId()))\n            .subscribe((unitId) => this._handleWorkbookDisposed(unitId)));\n    }\n\n    private _handleSetRangeValuesMutation(params: ISetRangeValuesMutationParams) {\n        const { subUnitId: sheetId, unitId, cellValue } = params;\n\n        if (cellValue == null) {\n            return;\n        }\n\n        const newSheetFormulaData = this._formulaDataModel.updateFormulaData(unitId, sheetId, cellValue);\n        const newFormulaData = {\n            [unitId]: {\n                [sheetId]: newSheetFormulaData,\n            },\n        };\n\n        // update core snapshot\n        this._commandService.executeCommand(\n            SetRangeValuesMutation.id,\n            {\n                unitId,\n                subUnitId: sheetId,\n                cellValue: formulaDataToCellData(newSheetFormulaData),\n            },\n            {\n                onlyLocal: true,\n                fromFormula: true,\n            }\n        );\n\n        // update formula model\n        this._formulaDataModel.updateArrayFormulaCellData(unitId, sheetId, cellValue);\n        this._formulaDataModel.updateArrayFormulaRange(unitId, sheetId, cellValue);\n\n        // TODO@Dushusir: When the amount of data is large, the communication overhead is high. The main thread and the worker update their own models to reduce the communication overhead.\n        this._commandService.executeCommand(\n            SetFormulaDataMutation.id,\n            {\n                formulaData: newFormulaData,\n            },\n            {\n                onlyLocal: true,\n            }\n        );\n\n        this._commandService.executeCommand(\n            SetArrayFormulaDataMutation.id,\n            {\n                arrayFormulaRange: this._formulaDataModel.getArrayFormulaRange(),\n                arrayFormulaCellData: this._formulaDataModel.getArrayFormulaCellData(),\n            },\n            {\n                onlyLocal: true,\n                remove: true, // remove array formula range shape\n            }\n        );\n    }\n\n    private _handleWorkbookDisposed(unitId: string, sheetId?: string) {\n        const formulaData = this._formulaDataModel.getFormulaData();\n        const newFormulaData = removeFormulaData(formulaData, unitId, sheetId);\n\n        const arrayFormulaRange = this._formulaDataModel.getArrayFormulaRange();\n        const newArrayFormulaRange = removeFormulaData(arrayFormulaRange, unitId, sheetId);\n\n        const arrayFormulaCellData = this._formulaDataModel.getArrayFormulaCellData();\n        const newArrayFormulaCellData = removeFormulaData(arrayFormulaCellData, unitId, sheetId);\n\n        if (newFormulaData) {\n            this._commandService.executeCommand(\n                SetFormulaDataMutation.id,\n                {\n                    formulaData: newFormulaData,\n                },\n                {\n                    onlyLocal: true,\n                }\n            );\n        }\n\n        if (newArrayFormulaRange && newArrayFormulaCellData) {\n            this._commandService.executeCommand(\n                SetArrayFormulaDataMutation.id,\n                {\n                    arrayFormulaRange,\n                    arrayFormulaCellData,\n                },\n                {\n                    onlyLocal: true,\n                }\n            );\n        }\n    }\n\n    private _handleInsertSheetMutation(params: IInsertSheetMutationParams) {\n        const { sheet, unitId } = params;\n\n        const formulaData = this._formulaDataModel.getFormulaData();\n        const { id: sheetId, cellData } = sheet;\n        const cellMatrix = new ObjectMatrix(cellData);\n        const newFormulaData = initSheetFormulaData(formulaData, unitId, sheetId, cellMatrix);\n\n        this._commandService.executeCommand(\n            SetFormulaDataMutation.id,\n            {\n                formulaData: newFormulaData,\n            },\n            {\n                onlyLocal: true,\n            }\n        );\n    }\n\n    private _handleWorkbookAdded(unit: Workbook) {\n        const formulaData: IFormulaData = {};\n        const unitId = unit.getUnitId();\n        const newFormulaData: IFormulaData = { [unitId]: {} };\n\n        const worksheets = unit.getSheets();\n        worksheets.forEach((worksheet) => {\n            const cellMatrix = worksheet.getCellMatrix();\n            const sheetId = worksheet.getSheetId();\n\n            const currentSheetData = initSheetFormulaData(formulaData, unitId, sheetId, cellMatrix);\n\n            newFormulaData[unitId]![sheetId] = currentSheetData[unitId]?.[sheetId];\n        });\n\n        this._commandService.executeCommand(SetFormulaDataMutation.id, { formulaData: newFormulaData }, { onlyLocal: true });\n\n        const config = this._configService.getConfig<IUniverSheetsFormulaBaseConfig>(PLUGIN_CONFIG_KEY_BASE);\n        const calculationMode = config?.initialFormulaComputing ?? CalculationMode.WHEN_EMPTY;\n        const params = this._getDirtyDataByCalculationMode(calculationMode);\n\n        this._commandService.executeCommand(SetFormulaCalculationStartMutation.id, params, { onlyLocal: true });\n    }\n\n    private _getDirtyDataByCalculationMode(calculationMode: CalculationMode): IFormulaDirtyData {\n        const forceCalculation = calculationMode === CalculationMode.FORCED;\n\n        // loop all sheets cell data, and get the dirty data\n        const dirtyRanges: IUnitRange[] = calculationMode === CalculationMode.WHEN_EMPTY ? this._formulaDataModel.getFormulaDirtyRanges() : [];\n\n        const dirtyNameMap: IDirtyUnitSheetNameMap = {};\n        const dirtyDefinedNameMap: IDirtyUnitSheetNameMap = {};\n        const dirtyUnitFeatureMap: IDirtyUnitFeatureMap = {};\n        const dirtyUnitOtherFormulaMap: IDirtyUnitOtherFormulaMap = {};\n        const clearDependencyTreeCache: IDirtyUnitSheetNameMap = {};\n\n        return {\n            forceCalculation,\n            dirtyRanges,\n            dirtyNameMap,\n            dirtyDefinedNameMap,\n            dirtyUnitFeatureMap,\n            dirtyUnitOtherFormulaMap,\n            clearDependencyTreeCache,\n        };\n    }\n\n    private _getUpdateFormula(command: ICommandInfo) {\n        const workbook = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n\n        if (!workbook) {\n            return {\n                undos: [],\n                redos: [],\n            };\n        }\n\n        const result = getReferenceMoveParams(workbook, command);\n\n        if (result) {\n            const { unitSheetNameMap } = this._formulaDataModel.getCalculateData();\n            const oldFormulaData = this._formulaDataModel.getFormulaData();\n\n            // change formula reference\n            const { newFormulaData } = this._getFormulaReferenceMoveInfo(\n                oldFormulaData,\n                unitSheetNameMap,\n                result\n            );\n\n            const { undos, redos } = getFormulaReferenceMoveUndoRedo(oldFormulaData, newFormulaData, result);\n\n            return {\n                undos,\n                redos,\n            };\n        }\n\n        return {\n            undos: [],\n            redos: [],\n        };\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    private _getFormulaReferenceMoveInfo(\n        formulaData: IFormulaData,\n        unitSheetNameMap: IUnitSheetNameMap,\n        formulaReferenceMoveParam: IFormulaReferenceMoveParam\n    ) {\n        if (!Tools.isDefine(formulaData)) return { newFormulaData: {}, oldFormulaData: {} };\n\n        const formulaDataKeys = Object.keys(formulaData);\n\n        if (formulaDataKeys.length === 0) return { newFormulaData: {}, oldFormulaData: {} };\n\n        const oldFormulaData: IFormulaData = {};\n        const newFormulaData: IFormulaData = {};\n\n        for (const unitId of formulaDataKeys) {\n            const sheetData = formulaData[unitId];\n\n            if (sheetData == null) {\n                continue;\n            }\n\n            const sheetDataKeys = Object.keys(sheetData);\n\n            if (!Tools.isDefine(oldFormulaData[unitId])) {\n                oldFormulaData[unitId] = {};\n            }\n\n            if (!Tools.isDefine(newFormulaData[unitId])) {\n                newFormulaData[unitId] = {};\n            }\n\n            for (const sheetId of sheetDataKeys) {\n                const matrixData = new ObjectMatrix(sheetData[sheetId] || {});\n\n                const newFormulaDataItem = new ObjectMatrix<IFormulaDataItem>();\n\n                // eslint-disable-next-line max-lines-per-function, complexity\n                matrixData.forValue((row, column, formulaDataItem) => {\n                    if (!formulaDataItem) return true;\n\n                    const { f: formulaString, x, y, si } = formulaDataItem;\n\n                    const sequenceNodes = this._lexerTreeBuilder.sequenceNodesBuilder(formulaString);\n\n                    if (sequenceNodes == null) {\n                        return true;\n                    }\n\n                    let shouldModify = false;\n                    const refChangeIds: number[] = [];\n                    for (let i = 0, len = sequenceNodes.length; i < len; i++) {\n                        const node = sequenceNodes[i];\n\n                        if (typeof node === 'string') {\n                            continue;\n                        }\n\n                        const { token, nodeType } = node;\n                        const { type } = formulaReferenceMoveParam;\n\n                        // The impact of defined name changes on formula calculation\n                        // 1. ref range only changes formulaOrRefString to trigger recalculation\n                        // 2. set defined name command, change name to trigger formula update, otherwise trigger recalculation\n                        // 3. remove defined name command, change name to #REF! to trigger formula update\n                        // 4. insert defined name No processing required\n                        // 5. remove sheet,  trigger recalculation\n                        // FIXME: Why is the node type of defined name 3?\n                        if ((type === FormulaReferenceMoveType.SetDefinedName || type === FormulaReferenceMoveType.RemoveDefinedName) && (nodeType === sequenceNodeType.DEFINED_NAME || nodeType === sequenceNodeType.FUNCTION)) {\n                            const { definedNameId, definedName } = formulaReferenceMoveParam;\n                            if (definedNameId === undefined || definedName === undefined) {\n                                continue;\n                            }\n\n                            const oldDefinedName = this._definedNamesService.getValueById(unitId, definedNameId);\n                            if (oldDefinedName === undefined || oldDefinedName === null) {\n                                continue;\n                            }\n\n                            // Make sure the current token is the defined name to be updated.\n                            if (oldDefinedName.name !== token) {\n                                continue;\n                            }\n\n                            // Update the defined name in the formula, if the defined name is removed, update the token to #REF!\n                            sequenceNodes[i] = {\n                                ...node,\n                                token: type === FormulaReferenceMoveType.SetDefinedName ? definedName : ErrorType.REF,\n                            };\n                            shouldModify = true;\n                            refChangeIds.push(i);\n\n                            continue;\n                        } else if (nodeType !== sequenceNodeType.REFERENCE) {\n                            continue;\n                        }\n\n                        const sequenceGrid = deserializeRangeWithSheetWithCache(token);\n\n                        const { range, sheetName, unitId: sequenceUnitId } = sequenceGrid;\n\n                        const mapUnitId =\n                            sequenceUnitId == null || sequenceUnitId.length === 0 ? unitId : sequenceUnitId;\n\n                        const sequenceSheetId = unitSheetNameMap?.[mapUnitId]?.[sheetName] || '';\n\n                        if (\n                            !checkIsSameUnitAndSheet(\n                                formulaReferenceMoveParam.unitId,\n                                formulaReferenceMoveParam.sheetId,\n                                unitId,\n                                sheetId,\n                                sequenceUnitId,\n                                sequenceSheetId\n                            )\n                        ) {\n                            continue;\n                        }\n\n                        const sequenceUnitRangeWidthOffset: IUnitRangeWithOffset = {\n                            range,\n                            sheetId: sequenceSheetId,\n                            unitId: sequenceUnitId,\n                            sheetName,\n                            refOffsetX: x || 0,\n                            refOffsetY: y || 0,\n                        };\n\n                        let newRefString: Nullable<string> = null;\n\n                        if (type === FormulaReferenceMoveType.SetName) {\n                            const {\n                                unitId: userUnitId,\n                                sheetId: userSheetId,\n                                sheetName: newSheetName,\n                            } = formulaReferenceMoveParam;\n                            if (newSheetName == null) {\n                                continue;\n                            }\n\n                            if (sequenceSheetId == null || sequenceSheetId.length === 0) {\n                                continue;\n                            }\n\n                            if (userSheetId !== sequenceSheetId) {\n                                continue;\n                            }\n\n                            newRefString = serializeRangeToRefString({\n                                range,\n                                sheetName: newSheetName,\n                                unitId: sequenceUnitId,\n                            });\n                        } else if (type === FormulaReferenceMoveType.RemoveSheet) {\n                            const {\n                                unitId: userUnitId,\n                                sheetId: userSheetId,\n                                sheetName: newSheetName,\n                            } = formulaReferenceMoveParam;\n\n                            if (sequenceSheetId == null || sequenceSheetId.length === 0) {\n                                continue;\n                            }\n\n                            if (userSheetId !== sequenceSheetId) {\n                                continue;\n                            }\n\n                            newRefString = ErrorType.REF;\n                        } else if (type !== FormulaReferenceMoveType.SetDefinedName) {\n                            newRefString = getNewRangeByMoveParam(\n                                sequenceUnitRangeWidthOffset,\n                                formulaReferenceMoveParam,\n                                unitId,\n                                sheetId\n                            );\n                        }\n\n                        if (newRefString != null) {\n                            sequenceNodes[i] = {\n                                ...node,\n                                token: newRefString,\n                            };\n                            shouldModify = true;\n                            refChangeIds.push(i);\n                            // newRefString = ErrorType.REF;\n                        }\n                    }\n\n                    if (!shouldModify) {\n                        return true;\n                    }\n\n                    const newSequenceNodes = updateRefOffset(sequenceNodes, refChangeIds, x, y);\n\n                    newFormulaDataItem.setValue(row, column, {\n                        f: `=${generateStringWithSequence(newSequenceNodes)}`,\n                    });\n                });\n\n                if (newFormulaData[unitId]) {\n                    newFormulaData[unitId]![sheetId] = newFormulaDataItem.getData();\n                }\n            }\n        }\n\n        return { newFormulaData };\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IDisposable, IMutationInfo, IRange, Workbook } from '@univerjs/core';\nimport type { EffectRefRangeParams } from '@univerjs/sheets';\nimport { AbsoluteRefType, Disposable, DisposableCollection, getIntersectRange, Inject, Injector, isFormulaString, IUniverInstanceService, moveRangeByOffset, Rectangle, UniverInstanceType } from '@univerjs/core';\nimport { deserializeRangeWithSheetWithCache, ErrorType, generateStringWithSequence, LexerTreeBuilder, sequenceNodeType, serializeRange, serializeRangeWithSheet, serializeRangeWithSpreadsheet } from '@univerjs/engine-formula';\nimport { getSeparateEffectedRangesOnCommand, handleCommonDefaultRangeChangeWithEffectRefCommands, handleDefaultRangeChangeWithEffectRefCommands, RefRangeService } from '@univerjs/sheets';\n\nexport type FormulaChangeMap = Record<string, Record<string, Record<string, string>>>;\n\nexport type FormulaChangeCallback = (formulaString: string) => {\n    redos: IMutationInfo[];\n    undos: IMutationInfo[];\n};\n\nexport type RangeFormulaChangeCallback = (infos: { formulas: string[]; ranges: IRange[] }[]) => {\n    redos: IMutationInfo[];\n    undos: IMutationInfo[];\n};\n\nfunction getFormulaKeyOffset(lexerTreeBuilder: LexerTreeBuilder, formulaString: string, refOffsetX: number, refOffsetY: number) {\n    const sequenceNodes = lexerTreeBuilder.sequenceNodesBuilder(formulaString);\n\n    if (sequenceNodes == null) {\n        return formulaString;\n    }\n\n    const newSequenceNodes: Array<{ unitId: string; sheetName: string; range: IRange }> = [];\n\n    for (let i = 0, len = sequenceNodes.length; i < len; i++) {\n        const node = sequenceNodes[i];\n        if (typeof node === 'string' || node.nodeType !== sequenceNodeType.REFERENCE) {\n            continue;\n        }\n\n        const { token } = node;\n\n        const sequenceGrid = deserializeRangeWithSheetWithCache(token);\n\n        const { sheetName, unitId: sequenceUnitId } = sequenceGrid;\n\n        let newRange: IRange = sequenceGrid.range;\n        if (newRange.startAbsoluteRefType === AbsoluteRefType.ALL && newRange.endAbsoluteRefType === AbsoluteRefType.ALL) {\n            continue;\n        } else {\n            newRange = moveRangeByOffset(newRange, refOffsetX, refOffsetY);\n        }\n\n        newSequenceNodes.push({\n            unitId: sequenceUnitId,\n            sheetName,\n            range: newRange,\n        });\n    }\n\n    return newSequenceNodes.map((item) => `${item.unitId}!${item.sheetName}!${item.range.startRow}!${item.range.endRow}!${item.range.startColumn}!${item.range.endColumn}`).join('|');\n}\n\nexport class FormulaRefRangeService extends Disposable {\n    constructor(\n        @Inject(RefRangeService) private readonly _refRangeService: RefRangeService,\n        @Inject(LexerTreeBuilder) private readonly _lexerTreeBuilder: LexerTreeBuilder,\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @Inject(Injector) private readonly _injector: Injector\n    ) {\n        super();\n    }\n\n    transformFormulaByEffectCommand(unitId: string, subUnitId: string, formula: string, params: EffectRefRangeParams) {\n        const sequenceNodes = this._lexerTreeBuilder.sequenceNodesBuilder(formula);\n        const currentUnit = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!;\n        const currentSheet = currentUnit.getActiveSheet();\n        const currentUnitId = currentUnit.getUnitId();\n        const currentSheetId = currentSheet.getSheetId();\n\n        const transformSequenceNodes = sequenceNodes?.map((node) => {\n            if (typeof node === 'object' && node.nodeType === sequenceNodeType.REFERENCE) {\n                const gridRangeName = deserializeRangeWithSheetWithCache(node.token);\n                const { range, unitId: rangeUnitId, sheetName: rangeSheetName } = gridRangeName;\n                const workbook = this._univerInstanceService.getUnit<Workbook>(rangeUnitId || unitId);\n                const worksheet = rangeSheetName ? workbook?.getSheetBySheetName(rangeSheetName) : workbook?.getSheetBySheetId(subUnitId);\n                if (!worksheet) {\n                    throw new Error('Sheet not found');\n                }\n\n                const realUnitId = workbook!.getUnitId();\n                const realSheetId = worksheet.getSheetId();\n                if ((realUnitId !== currentUnitId) || (realSheetId !== currentSheetId)) {\n                    return node;\n                }\n                const newRange = handleDefaultRangeChangeWithEffectRefCommands(range, params);\n                let newToken = '';\n\n                if (newRange) {\n                    const offsetX = newRange.startColumn - range.startColumn;\n                    const offsetY = newRange.startRow - range.startRow;\n                    const finalRange = moveRangeByOffset(range, offsetX, offsetY);\n                    if (rangeUnitId && rangeSheetName) {\n                        newToken = serializeRangeWithSpreadsheet(rangeUnitId, rangeSheetName, finalRange);\n                    } else if (rangeSheetName) {\n                        newToken = serializeRangeWithSheet(rangeSheetName, finalRange);\n                    } else {\n                        newToken = serializeRange(finalRange);\n                    }\n                } else {\n                    newToken = ErrorType.REF;\n                }\n\n                return {\n                    ...node,\n                    token: newToken,\n                };\n            } else {\n                return node;\n            };\n        });\n\n        return transformSequenceNodes ? `=${generateStringWithSequence(transformSequenceNodes)}` : '';\n    }\n\n    registerFormula(unitId: string, subUnitId: string, formula: string, callback: FormulaChangeCallback): IDisposable {\n        const rangeMap = new Map<string, { unitId: string; subUnitId: string; range: IRange; sheetName: string }>();\n        const sequenceNodes = this._lexerTreeBuilder.sequenceNodesBuilder(formula);\n        const disposableCollection = new DisposableCollection();\n\n        const handleChange = (params: EffectRefRangeParams) => {\n            const currentUnit = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!;\n            const currentSheet = currentUnit.getActiveSheet();\n            const currentUnitId = currentUnit.getUnitId();\n            const currentSheetId = currentSheet.getSheetId();\n\n            const transformSequenceNodes = sequenceNodes?.map((node) => {\n                if (typeof node === 'object' && node.nodeType === sequenceNodeType.REFERENCE) {\n                    const rangeInfo = rangeMap.get(node.token)!;\n                    if ((rangeInfo.unitId !== currentUnitId) || (rangeInfo.subUnitId !== currentSheetId)) {\n                        return node;\n                    }\n\n                    const newRange = handleDefaultRangeChangeWithEffectRefCommands(rangeInfo.range, params);\n                    let newToken = '';\n\n                    if (newRange) {\n                        const offsetX = newRange.startColumn - rangeInfo.range.startColumn;\n                        const offsetY = newRange.startRow - rangeInfo.range.startRow;\n                        const finalRange = moveRangeByOffset(rangeInfo.range, offsetX, offsetY);\n                        if (rangeInfo.unitId && rangeInfo.sheetName) {\n                            newToken = serializeRangeWithSpreadsheet(rangeInfo.unitId, rangeInfo.sheetName, finalRange);\n                        } else if (rangeInfo.sheetName) {\n                            newToken = serializeRangeWithSheet(rangeInfo.sheetName, finalRange);\n                        } else {\n                            newToken = serializeRange(finalRange);\n                        }\n                    } else {\n                        newToken = ErrorType.REF;\n                    }\n\n                    return {\n                        ...node,\n                        token: newToken,\n                    };\n                } else {\n                    return node;\n                };\n            });\n            const newFormulaString = transformSequenceNodes && generateStringWithSequence(transformSequenceNodes);\n            return callback(`=${newFormulaString}`);\n        };\n\n        sequenceNodes?.forEach((node) => {\n            if (typeof node === 'object' && node.nodeType === sequenceNodeType.REFERENCE) {\n                const gridRangeName = deserializeRangeWithSheetWithCache(node.token);\n                const { range, unitId: rangeUnitId, sheetName: rangeSheetName } = gridRangeName;\n                const workbook = this._univerInstanceService.getUnit<Workbook>(rangeUnitId || unitId);\n                const worksheet = rangeSheetName ? workbook?.getSheetBySheetName(rangeSheetName) : workbook?.getSheetBySheetId(subUnitId);\n                if (!worksheet) {\n                    return;\n                }\n                const realUnitId = workbook!.getUnitId();\n                const realSheetId = worksheet.getSheetId();\n                const item = {\n                    unitId: realUnitId,\n                    subUnitId: realSheetId,\n                    range,\n                    sheetName: rangeSheetName,\n                };\n                rangeMap.set(node.token, item);\n                disposableCollection.add(this._refRangeService.registerRefRange(range, handleChange, realUnitId, realSheetId));\n            }\n        });\n\n        return disposableCollection;\n    }\n\n    private _getFormulaDependcy(unitId: string, subUnitId: string, formula: string | undefined, ranges: IRange[]) {\n        const nodes = isFormulaString(formula) ? this._lexerTreeBuilder.sequenceNodesBuilder(formula!) : null;\n\n        const dependencyRanges: { unitId: string; subUnitId: string; ranges: IRange[] }[] = [];\n        nodes?.forEach((node) => {\n            if (typeof node === 'object' && node.nodeType === sequenceNodeType.REFERENCE) {\n                const gridRangeName = deserializeRangeWithSheetWithCache(node.token);\n                const { range, unitId: rangeUnitId, sheetName: rangeSheetName } = gridRangeName;\n                // ignore all absolute reference\n                if (range.startAbsoluteRefType === AbsoluteRefType.ALL && range.endAbsoluteRefType === AbsoluteRefType.ALL) {\n                    return;\n                }\n                const workbook = this._univerInstanceService.getUnit<Workbook>(rangeUnitId || unitId);\n                const worksheet = rangeSheetName ? workbook?.getSheetBySheetName(rangeSheetName) : workbook?.getSheetBySheetId(subUnitId);\n                if (!worksheet) {\n                    return;\n                }\n                const realUnitId = workbook!.getUnitId();\n                const realSheetId = worksheet.getSheetId();\n                const orginStartRow = ranges[0].startRow;\n                const orginStartColumn = ranges[0].startColumn;\n                const currentStartRow = range.startRow;\n                const currentStartColumn = range.startColumn;\n\n                const offsetRanges = ranges.map((range) => ({\n                    startRow: range.startRow - orginStartRow + currentStartRow,\n                    endRow: range.endRow - orginStartRow + currentStartRow,\n                    startColumn: range.startColumn - orginStartColumn + currentStartColumn,\n                    endColumn: range.endColumn - orginStartColumn + currentStartColumn,\n                }));\n\n                dependencyRanges.push({\n                    unitId: realUnitId,\n                    subUnitId: realSheetId,\n                    ranges: offsetRanges,\n                });\n            }\n        });\n\n        return dependencyRanges;\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    registerRangeFormula(unitId: string, subUnitId: string, oldRanges: IRange[], formulas: string[], callback: RangeFormulaChangeCallback): IDisposable {\n        const disposableCollection = new DisposableCollection();\n        const formulaDeps = formulas.map((formula) => this._getFormulaDependcy(unitId, subUnitId, formula, oldRanges));\n\n        // eslint-disable-next-line max-lines-per-function\n        const handleRangeChange = (commandInfo: EffectRefRangeParams) => {\n            const orginStartRow = oldRanges[0].startRow;\n            const orginStartColumn = oldRanges[0].startColumn;\n            const deps = [{ unitId, subUnitId, ranges: oldRanges }, ...formulaDeps.flat()];\n            const matchedEffectedRanges: IRange[][] = [];\n            const effectedRanges = getSeparateEffectedRangesOnCommand(this._injector, commandInfo);\n            // 1. calculate effected ranges\n            for (const { unitId: depUnitId, subUnitId: depSubUnitId, ranges } of deps) {\n                if (depUnitId === effectedRanges.unitId && depSubUnitId === effectedRanges.subUnitId) {\n                    const intersectedRanges: IRange[] = [];\n                    const currentStartRow = ranges[0].startRow;\n                    const currentStartColumn = ranges[0].startColumn;\n                    const offsetRow = currentStartRow - orginStartRow;\n                    const offsetColumn = currentStartColumn - orginStartColumn;\n\n                    for (const range of effectedRanges.ranges) {\n                        const intersectedRange = ranges.map((r) => getIntersectRange(range, r)).filter(Boolean) as IRange[];\n                        if (intersectedRange.length > 0) {\n                            intersectedRanges.push(...intersectedRange);\n                        }\n                    }\n\n                    if (intersectedRanges.length > 0) {\n                        matchedEffectedRanges.push(\n                            intersectedRanges.map((range) => ({\n                                startRow: range.startRow - offsetRow,\n                                endRow: range.endRow - offsetRow,\n                                startColumn: range.startColumn - offsetColumn,\n                                endColumn: range.endColumn - offsetColumn,\n                            }))\n                        );\n                    }\n                }\n            }\n\n            if (matchedEffectedRanges.length > 0) {\n                // 2. split effected ranges to enusre there is no overlap\n                const ranges = Rectangle.splitIntoGrid([...matchedEffectedRanges.flat()]);\n                const noEffectRanges = Rectangle.subtractMulti(oldRanges, ranges);\n                noEffectRanges.sort((a, b) => a.startRow - b.startRow || a.startColumn - b.startColumn);\n\n                // 3. calculate every effected range to get new range and new formula\n                const keyMap = new Map<string, { formulas: { newFormula: string }[]; ranges: IRange[] }[]>();\n                for (let i = 0; i < ranges.length; i++) {\n                    const range = ranges[i];\n                    const currentRow = range.startRow;\n                    const currentColumn = range.startColumn;\n                    const offsetRow = currentRow - orginStartRow;\n                    const offsetColumn = currentColumn - orginStartColumn;\n                    const transformedRange = handleCommonDefaultRangeChangeWithEffectRefCommands(range, commandInfo).sort((a, b) => a.startRow - b.startRow || a.startColumn - b.startColumn);\n                    if (!transformedRange.length) {\n                        continue;\n                    }\n                    const transformedRow = transformedRange[0].startRow;\n                    const transformedColumn = transformedRange[0].startColumn;\n                    const transformedOffsetRow = transformedRow - orginStartRow;\n                    const transformedOffsetColumn = transformedColumn - orginStartColumn;\n\n                    const transformedFormulas = [];\n                    for (let j = 0; j < formulas.length; j++) {\n                        const formula = formulas[j];\n                        const isFormulaFormulaString = isFormulaString(formula);\n                        // 3.1 move formula ref offset to get formula string for this range before this command\n                        const formulaString = isFormulaFormulaString ? this._lexerTreeBuilder.moveFormulaRefOffset(formula!, offsetColumn, offsetRow) : formula!;\n                        // 3.2 transform formula by effect command\n                        const newFormula = isFormulaFormulaString ? this.transformFormulaByEffectCommand(unitId, subUnitId, formulaString, commandInfo) : formulaString;\n                        // 3.3 get formula key offset for this range after this command\n                        const orginFormula = getFormulaKeyOffset(this._lexerTreeBuilder, newFormula, -transformedOffsetColumn, -transformedOffsetRow);\n                        transformedFormulas.push({\n                            newFormula,\n                            orginFormula,\n                        });\n                    }\n\n                    const item = {\n                        formulas: transformedFormulas,\n                        ranges: transformedRange,\n                        key: transformedFormulas.map((item) => item.orginFormula).join('_'),\n                    };\n\n                    if (keyMap.has(item.key)) {\n                        keyMap.get(item.key)!.push(item);\n                    } else {\n                        keyMap.set(item.key, [item]);\n                    }\n                }\n\n                // 4. handle no effected ranges\n                const originKey = formulas.map((item) => getFormulaKeyOffset(this._lexerTreeBuilder, item, 0, 0)).join('_');\n                if (noEffectRanges.length > 0) {\n                    const currentRow = noEffectRanges[0].startRow;\n                    const currentColumn = noEffectRanges[0].startColumn;\n                    const noEffectFormulas = [];\n                    for (let i = 0; i < formulas.length; i++) {\n                        const formula = formulas[i];\n                        noEffectFormulas.push({\n                            newFormula: isFormulaString(formula) ? this._lexerTreeBuilder.moveFormulaRefOffset(formula, currentColumn - orginStartColumn, currentRow - orginStartRow) : formula,\n                            orginFormula: formula,\n                        });\n                    }\n\n                    const item = {\n                        formulas: noEffectFormulas,\n                        ranges: noEffectRanges,\n                        key: originKey,\n                    };\n\n                    if (keyMap.has(item.key)) {\n                        keyMap.get(item.key)!.push(item);\n                    } else {\n                        keyMap.set(item.key, [item]);\n                    }\n                }\n\n                // 5. merge effected ranges and get new formula,\n                //    if origin formula was same, means these ranges can use same formula\n                const res = [];\n                const keys = Array.from(keyMap.keys());\n                for (let i = keys.length - 1; i >= 0; i--) {\n                    const key = keys[i];\n                    const ranges = keyMap.get(key)!.sort((a, b) => a.ranges[0].startRow - b.ranges[0].startRow || a.ranges[0].startColumn - b.ranges[0].startColumn);\n                    const formulas = [];\n                    for (let j = 0; j < ranges[0].formulas.length; j++) {\n                        formulas.push(ranges[0].formulas[j].newFormula);\n                    }\n                    const newRanges = Rectangle.mergeRanges(ranges.map((item) => item.ranges).flat());\n                    newRanges.sort((a, b) => a.startRow - b.startRow || a.startColumn - b.startColumn);\n\n                    res.push({\n                        formulas,\n                        ranges: newRanges,\n                    });\n                }\n\n                return callback(res);\n            }\n\n            return {\n                undos: [],\n                redos: [],\n            };\n        };\n\n        oldRanges.forEach((range) => {\n            const disposable = this._refRangeService.registerRefRange(range, handleRangeChange, unitId, subUnitId);\n            disposableCollection.add(disposable);\n        });\n\n        [...formulaDeps.flat()].forEach(({ unitId, subUnitId, ranges }) => {\n            ranges.forEach((range) => {\n                const disposable = this._refRangeService.registerRefRange(range, handleRangeChange, unitId, subUnitId);\n                disposableCollection.add(disposable);\n            });\n        });\n\n        return disposableCollection;\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BaseFunction } from '@univerjs/engine-formula';\nimport { createIdentifier } from '@univerjs/core';\nimport { AsyncCustomFunction, CustomFunction, IFunctionService } from '@univerjs/engine-formula';\n\nexport interface IRemoteRegisterFunctionService {\n    registerFunctions(serializedFuncs: Array<[string, string]>): Promise<void>;\n    registerAsyncFunctions(serializedFuncs: Array<[string, string]>): Promise<void>;\n    unregisterFunctions(names: string[]): Promise<void>;\n}\n\nexport const RemoteRegisterFunctionServiceName = 'sheets-formula.remote-register-function.service';\nexport const IRemoteRegisterFunctionService = createIdentifier<IRemoteRegisterFunctionService>(RemoteRegisterFunctionServiceName);\n\n/**\n * This class should resident in the remote process.\n */\nexport class RemoteRegisterFunctionService implements IRemoteRegisterFunctionService {\n    constructor(\n        @IFunctionService private readonly _functionService: IFunctionService\n    ) {}\n\n    async registerFunctions(serializedFuncs: Array<[string, string]>): Promise<void> {\n        const functionList = serializedFuncs.map(([func, name]) => {\n            return createFunction(func, name);\n        });\n\n        this._functionService.registerExecutors(...functionList);\n    }\n\n    async registerAsyncFunctions(serializedFuncs: Array<[string, string]>): Promise<void> {\n        const functionList = serializedFuncs.map(([func, name]) => {\n            return createAsyncFunction(func, name);\n        });\n\n        this._functionService.registerExecutors(...functionList);\n    }\n\n    async unregisterFunctions(names: string[]): Promise<void> {\n        this._functionService.unregisterExecutors(...names);\n        this._functionService.unregisterDescriptions(...names);\n        this._functionService.deleteFormulaAstCacheKey(...names);\n    }\n}\n\nfunction createFunction(functionString: string, functionName: string) {\n    const instance = new CustomFunction(functionName);\n    // eslint-disable-next-line no-new-func\n    const functionCalculate = new Function(`return ${functionString}`)();\n    instance.calculateCustom = functionCalculate;\n    return instance as BaseFunction;\n}\n\nfunction createAsyncFunction(functionString: string, functionName: string) {\n    const instance = new AsyncCustomFunction(functionName);\n    // eslint-disable-next-line no-new-func\n    const functionCalculate = new Function(`return ${functionString}`)();\n    instance.calculateCustom = functionCalculate;\n    return instance as BaseFunction;\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IDisposable, ILocales } from '@univerjs/core';\nimport type { FormulaFunctionResultValueType, FormulaFunctionValueType, IFunctionInfo } from '@univerjs/engine-formula';\nimport { createIdentifier, Disposable, DisposableCollection, Inject, LocaleService, Optional, toDisposable } from '@univerjs/core';\nimport { AsyncCustomFunction, CustomFunction, FunctionType, IFunctionService } from '@univerjs/engine-formula';\nimport { IDescriptionService } from './description.service';\nimport { IRemoteRegisterFunctionService } from './remote/remote-register-function.service';\n\nexport type IRegisterFunction = (\n    ...arg: Array<FormulaFunctionValueType>\n) => FormulaFunctionResultValueType;\n\nexport type IRegisterAsyncFunction = (\n    ...arg: Array<FormulaFunctionValueType>\n) => Promise<FormulaFunctionResultValueType>;\n\n// [[Function, FunctionName, Description]]\nexport type IRegisterFunctionList = [[IRegisterFunction, string, string?]];\n\nexport interface IFormulaCustomFunctionService {\n    /**\n     * register descriptions\n     * @param functionList\n     */\n    registerFunctions(functionList: IRegisterFunctionList): IDisposable;\n}\n\n/**\n * Register function operation params\n */\nexport interface IRegisterFunctionParams {\n    /**\n     * i18n\n     */\n    locales?: ILocales;\n\n    /**\n     * function description\n     */\n    description?: IFunctionInfo[];\n\n    /**\n     * function calculation\n     */\n    calculate: IRegisterFunctionList;\n}\n\n/**\n * Unregister function operation params\n */\nexport interface IUnregisterFunctionParams {\n    /**\n     * Remove i18n\n     */\n    localeKeys?: string[];\n\n    /**\n     * Function name\n     */\n    functionNames: string[];\n}\n\n/**\n * This\n */\nexport interface IRegisterFunctionService {\n    /**\n     * register descriptions\n     * @param params\n     */\n    registerFunctions(params: IRegisterFunctionParams): IDisposable;\n\n    /**\n     * register a single function\n     * @param params\n     */\n    registerFunction(params: ISingleFunctionRegisterParams): IDisposable;\n\n    /**\n     * register a single async function\n     * @param params\n     */\n    registerAsyncFunction(params: ISingleFunctionRegisterParams): IDisposable;\n}\n\nexport const IRegisterFunctionService = createIdentifier<IRegisterFunctionService>(\n    'sheets-formula.register-function-service'\n);\n\nexport interface ISingleFunctionRegisterParams {\n    /**\n     * function name\n     */\n    name: string;\n    /**\n     * function calculation\n     */\n    func: IRegisterFunction | IRegisterAsyncFunction;\n    /**\n     * function description\n     */\n    description: string | IFunctionInfo;\n    /**\n     * function locales\n     */\n    locales?: ILocales;\n    /**\n     * function async\n     */\n    async?: boolean;\n}\n\nexport class RegisterFunctionService extends Disposable implements IRegisterFunctionService {\n    constructor(\n        @Inject(LocaleService) private readonly _localeService: LocaleService,\n        @Inject(IDescriptionService) private readonly _descriptionService: IDescriptionService,\n        @IFunctionService private readonly _functionService: IFunctionService,\n        @Optional(IRemoteRegisterFunctionService)\n        private readonly _remoteRegisterFunctionService?: IRemoteRegisterFunctionService\n    ) {\n        super();\n    }\n\n    registerFunction(params: ISingleFunctionRegisterParams): IDisposable {\n        return this._registerSingleFunction(params);\n    }\n\n    registerAsyncFunction(params: ISingleFunctionRegisterParams): IDisposable {\n        return this._registerSingleFunction({ ...params, async: true });\n    }\n\n    registerFunctions(params: IRegisterFunctionParams): IDisposable {\n        const { locales, description, calculate } = params;\n\n        // i18n\n        if (locales) {\n            // dispose is not supported yet\n            this._localeService.load(locales);\n        }\n\n        const disposables = new DisposableCollection();\n        if (description) {\n            disposables.add(this._descriptionService.registerDescriptions(description));\n        } else {\n            const descriptionList: IFunctionInfo[] = calculate.map(([_func, functionName, functionIntroduction]) => {\n                return {\n                    functionName,\n                    functionType: FunctionType.User,\n                    description: '',\n                    abstract: functionIntroduction || '',\n                    functionParameter: [],\n                };\n            });\n\n            disposables.add(this._functionService.registerDescriptions(...descriptionList));\n        }\n\n        // calculation\n        disposables.add(this._registerLocalExecutors(calculate));\n        if (this._remoteRegisterFunctionService) {\n            disposables.add(this._registerRemoteExecutors(calculate));\n        }\n\n        return disposables;\n    }\n\n    private _registerSingleFunction(params: ISingleFunctionRegisterParams): IDisposable {\n        const { name, func, description, locales, async = false } = params;\n        const disposables = new DisposableCollection();\n\n        // Handle i18n\n        if (locales) {\n            this._localeService.load(locales);\n        }\n\n        // Handle description\n        if (typeof description === 'string') {\n            const functionInfo: IFunctionInfo = {\n                functionName: name,\n                functionType: FunctionType.User,\n                description,\n                abstract: description || '',\n                functionParameter: [],\n            };\n            disposables.add(this._descriptionService.registerDescriptions([functionInfo]));\n        } else {\n            disposables.add(this._descriptionService.registerDescriptions([description]));\n        }\n\n        // Handle function registration\n        const instance = async ? new AsyncCustomFunction(name) : new CustomFunction(name);\n        instance.calculateCustom = func;\n        this._functionService.registerExecutors(instance);\n        disposables.add(toDisposable(() => this._functionService.unregisterExecutors(name)));\n        disposables.add(toDisposable(() => this._functionService.unregisterDescriptions(name)));\n        disposables.add(toDisposable(() => this._functionService.deleteFormulaAstCacheKey(name)));\n\n        // Handle remote registration if available\n        if (this._remoteRegisterFunctionService) {\n            this._remoteRegisterFunctionService.registerAsyncFunctions([[func.toString(), name]]);\n            disposables.add(\n                toDisposable(() => this._remoteRegisterFunctionService!.unregisterFunctions([name]))\n            );\n        }\n\n        return disposables;\n    }\n\n    private _registerLocalExecutors(list: IRegisterFunctionList): IDisposable {\n        const names = list.map(([_func, name]) => name);\n        const functions = list.map(([func, name]) => {\n            const instance = new CustomFunction(name);\n            instance.calculateCustom = func;\n            return instance;\n        });\n\n        this._functionService.registerExecutors(...functions);\n        return toDisposable(() => this._functionService.unregisterExecutors(...names));\n    }\n\n    private _registerRemoteExecutors(list: IRegisterFunctionList): IDisposable {\n        const functionNameList: string[] = []; // used to unregister functions\n        const functions = list.map(([func, name]) => {\n            functionNameList.push(name);\n            return [func.toString(), name] as [string, string];\n        });\n\n        this._remoteRegisterFunctionService!.registerFunctions(functions);\n        return toDisposable(() => this._remoteRegisterFunctionService!.unregisterFunctions(functionNameList));\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Dependency } from '@univerjs/core';\nimport type {\n    IUniverSheetsFormulaBaseConfig,\n    IUniverSheetsFormulaRemoteConfig,\n} from './controllers/config.schema';\nimport { DependentOn, IConfigService, Inject, Injector, isNodeEnv, merge, Plugin, touchDependencies, UniverInstanceType } from '@univerjs/core';\nimport { UniverFormulaEnginePlugin } from '@univerjs/engine-formula';\n\nimport { fromModule, IRPCChannelService, toModule } from '@univerjs/rpc';\n\nimport { UniverSheetsPlugin } from '@univerjs/sheets';\nimport { SHEETS_FORMULA_PLUGIN_NAME } from './common/plugin-name';\nimport { ActiveDirtyController } from './controllers/active-dirty.controller';\nimport { ArrayFormulaCellInterceptorController } from './controllers/array-formula-cell-interceptor.controller';\nimport {\n    defaultPluginBaseConfig,\n    defaultPluginRemoteConfig,\n    PLUGIN_CONFIG_KEY_BASE,\n    PLUGIN_CONFIG_KEY_REMOTE,\n} from './controllers/config.schema';\nimport { DefinedNameController } from './controllers/defined-name.controller';\nimport { FormulaController } from './controllers/formula.controller';\nimport { TriggerCalculationController } from './controllers/trigger-calculation.controller';\nimport { UpdateDefinedNameController } from './controllers/update-defined-name.controller';\nimport { UpdateFormulaController } from './controllers/update-formula.controller';\nimport { DescriptionService, IDescriptionService } from './services/description.service';\nimport { FormulaRefRangeService } from './services/formula-ref-range.service';\nimport { IRegisterFunctionService, RegisterFunctionService } from './services/register-function.service';\nimport { RegisterOtherFormulaService } from './services/register-other-formula.service';\nimport { IRemoteRegisterFunctionService, RemoteRegisterFunctionService, RemoteRegisterFunctionServiceName } from './services/remote/remote-register-function.service';\n\n@DependentOn(UniverFormulaEnginePlugin)\nexport class UniverRemoteSheetsFormulaPlugin extends Plugin {\n    static override pluginName = 'SHEET_FORMULA_REMOTE_PLUGIN';\n    static override type = UniverInstanceType.UNIVER_SHEET;\n\n    constructor(\n        private readonly _config: Partial<IUniverSheetsFormulaRemoteConfig> = defaultPluginRemoteConfig,\n        @Inject(Injector) override readonly _injector: Injector,\n        @IConfigService private readonly _configService: IConfigService\n    ) {\n        super();\n\n        // Manage the plugin configuration.\n        const { ...rest } = merge(\n            {},\n            defaultPluginRemoteConfig,\n            this._config\n        );\n        this._configService.setConfig(PLUGIN_CONFIG_KEY_REMOTE, rest);\n    }\n\n    override onStarting(): void {\n        this._injector.add([RemoteRegisterFunctionService]);\n        this._injector.get(IRPCChannelService).registerChannel(\n            RemoteRegisterFunctionServiceName,\n            fromModule(this._injector.get(RemoteRegisterFunctionService))\n        );\n    }\n}\n\n@DependentOn(UniverFormulaEnginePlugin, UniverSheetsPlugin)\nexport class UniverSheetsFormulaPlugin extends Plugin {\n    static override pluginName = SHEETS_FORMULA_PLUGIN_NAME;\n    static override type = UniverInstanceType.UNIVER_SHEET;\n\n    constructor(\n        private readonly _config: Partial<IUniverSheetsFormulaBaseConfig> = defaultPluginBaseConfig,\n        @Inject(Injector) override readonly _injector: Injector,\n        @IConfigService private readonly _configService: IConfigService\n    ) {\n        super();\n\n        // Manage the plugin configuration.\n        const { ...rest } = merge(\n            {},\n            defaultPluginBaseConfig,\n            this._config\n        );\n        this._configService.setConfig(PLUGIN_CONFIG_KEY_BASE, rest, { merge: true });\n    }\n\n    override onStarting(): void {\n        const j = this._injector;\n        const dependencies: Dependency[] = [\n            [IRegisterFunctionService, { useClass: RegisterFunctionService }],\n            [IDescriptionService, { useClass: DescriptionService }],\n            [FormulaController],\n            [FormulaRefRangeService],\n            [RegisterOtherFormulaService],\n            [ArrayFormulaCellInterceptorController],\n            [TriggerCalculationController],\n            [UpdateFormulaController],\n            [ActiveDirtyController],\n            [DefinedNameController],\n            [UpdateDefinedNameController],\n        ];\n\n        // If the plugin do not execute formula, it should delegate a remote proxy.\n        // So custom functions should be synced to that remote calculator.\n        if (this._config.notExecuteFormula) {\n            const rpcChannelService = j.get(IRPCChannelService);\n            dependencies.push([IRemoteRegisterFunctionService, {\n                useFactory: () => toModule<IRemoteRegisterFunctionService>(rpcChannelService.requestChannel(RemoteRegisterFunctionServiceName)),\n            }]);\n        }\n\n        dependencies.forEach((dependency) => j.add(dependency));\n    }\n\n    override onReady(): void {\n        touchDependencies(this._injector, [\n            [FormulaController],\n            [ActiveDirtyController],\n            [ArrayFormulaCellInterceptorController],\n            [UpdateFormulaController],\n            [UpdateDefinedNameController],\n        ]);\n\n        // There is no rendering in the nodejs environment, so initialize it here\n        if (isNodeEnv()) {\n            touchDependencies(this._injector, [\n                [TriggerCalculationController],\n            ]);\n        }\n    }\n\n    override onRendered(): void {\n        touchDependencies(this._injector, [\n            [DefinedNameController],\n        ]);\n\n        // Wait for rendering to complete before initializing formula calculation\n        if (!isNodeEnv()) {\n            touchDependencies(this._injector, [\n                [TriggerCalculationController],\n            ]);\n        }\n    }\n}\n"],
  "mappings": "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",
  "names": ["arrayFormulaRange", "handleRefMoveRange", "handleRefMoveRows", "handleRefMoveCols", "handleRefInsertRow", "handleRefInsertCol", "handleRefRemoveRow", "handleRefRemoveCol", "_a", "range", "item", "ranges", "formulas", "unitId", "subUnitId"]
}
