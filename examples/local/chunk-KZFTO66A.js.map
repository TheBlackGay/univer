{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/react-grid-layout@1.4.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-grid-layout/build/fastRGLPropsEqual.js", "../../node_modules/.pnpm/react-grid-layout@1.4.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-grid-layout/build/utils.js", "../../node_modules/.pnpm/react-grid-layout@1.4.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-grid-layout/build/calculateUtils.js", "../../node_modules/.pnpm/react-grid-layout@1.4.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-grid-layout/build/ReactGridLayoutPropTypes.js", "../../node_modules/.pnpm/react-grid-layout@1.4.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-grid-layout/build/GridItem.js", "../../node_modules/.pnpm/react-grid-layout@1.4.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-grid-layout/build/ReactGridLayout.js", "../../node_modules/.pnpm/react-grid-layout@1.4.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-grid-layout/build/responsiveUtils.js", "../../node_modules/.pnpm/react-grid-layout@1.4.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-grid-layout/build/ResponsiveReactGridLayout.js", "../../node_modules/.pnpm/react-grid-layout@1.4.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-grid-layout/build/components/WidthProvider.js", "../../node_modules/.pnpm/react-grid-layout@1.4.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/react-grid-layout/index.js", "../../packages/sheets-conditional-formatting-ui/src/commands/commands/add-average-cf.command.ts", "../../packages/sheets-conditional-formatting-ui/src/commands/commands/add-color-scale-cf.command.ts", "../../packages/sheets-conditional-formatting-ui/src/commands/commands/add-data-bar-cf.command.ts", "../../packages/sheets-conditional-formatting-ui/src/commands/commands/add-duplicate-values-cf.command.ts", "../../packages/sheets-conditional-formatting-ui/src/commands/commands/add-number-cf.command.ts", "../../packages/sheets-conditional-formatting-ui/src/commands/commands/add-rank-cf.command.ts", "../../packages/sheets-conditional-formatting-ui/src/commands/commands/add-text-cf.command.ts", "../../packages/sheets-conditional-formatting-ui/src/commands/commands/add-time-period-cf.command.ts", "../../packages/sheets-conditional-formatting-ui/src/commands/commands/add-unique-values-cf.command.ts", "../../packages/sheets-conditional-formatting-ui/src/components/panel/index.tsx", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-conditional-formatting-ui/src/components/panel/index.module.less", "../../packages/sheets-conditional-formatting-ui/src/components/panel/rule-list/index.tsx", "../../packages/sheets-conditional-formatting-ui/src/controllers/cf.i18n.controller.ts", "../../packages/sheets-conditional-formatting-ui/src/components/preview/index.tsx", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-conditional-formatting-ui/src/components/preview/index.module.less", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-conditional-formatting-ui/src/components/panel/rule-list/index.module.less", "../../packages/sheets-conditional-formatting-ui/src/components/panel/rule-edit/index.tsx", "../../packages/sheets-conditional-formatting-ui/src/components/panel/rule-edit/ColorScale.tsx", "../../packages/sheets-conditional-formatting-ui/src/components/color-picker/index.tsx", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-conditional-formatting-ui/src/components/color-picker/index.module.less", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-conditional-formatting-ui/src/components/panel/rule-edit/index.module.less", "../../packages/sheets-conditional-formatting-ui/src/components/panel/rule-edit/DataBar.tsx", "../../packages/sheets-conditional-formatting-ui/src/components/panel/rule-edit/Formula.tsx", "../../packages/sheets-conditional-formatting-ui/src/components/conditional-style-editor/index.tsx", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-conditional-formatting-ui/src/components/conditional-style-editor/index.module.less", "../../packages/sheets-conditional-formatting-ui/src/components/panel/rule-edit/HighlightCell.tsx", "../../packages/sheets-conditional-formatting-ui/src/components/wrapper-error/WrapperError.tsx", "../../packages/sheets-conditional-formatting-ui/src/components/panel/rule-edit/IconSet.tsx", "../../packages/sheets-conditional-formatting-ui/src/components/panel/rule-edit/Rank.tsx", "../../packages/sheets-conditional-formatting-ui/src/components/panel/rule-edit/type.ts", "../../packages/sheets-conditional-formatting-ui/src/controllers/cf.panel.controller.ts", "../../packages/sheets-conditional-formatting-ui/src/commands/operations/open-conditional-formatting-panel.ts", "../../packages/sheets-conditional-formatting-ui/src/controllers/cf.copy-paste.controller.ts", "../../packages/sheets-conditional-formatting-ui/src/controllers/cf.permission.controller.ts", "../../packages/sheets-conditional-formatting-ui/src/controllers/cf.ref-range.controller.ts", "../../packages/sheets-conditional-formatting-ui/src/controllers/cf.render.controller.ts", "../../packages/sheets-conditional-formatting-ui/src/controllers/config.schema.ts", "../../packages/sheets-conditional-formatting-ui/src/mobile-plugin.ts", "../../packages/sheets-conditional-formatting-ui/src/controllers/cf.auto-fill.controller.ts", "../../packages/sheets-conditional-formatting-ui/src/controllers/cf.clear.controller.ts", "../../packages/sheets-conditional-formatting-ui/src/controllers/cf.editor.controller.ts", "../../packages/sheets-conditional-formatting-ui/src/menu/manage-rule.ts", "../../packages/sheets-conditional-formatting-ui/src/controllers/menu.schema.ts", "../../packages/sheets-conditional-formatting-ui/src/controllers/cf.menu.controller.ts", "../../packages/sheets-conditional-formatting-ui/src/controllers/cf.painter.controller.ts", "../../packages/sheets-conditional-formatting-ui/src/controllers/cf.viewport.controller.ts", "../../packages/sheets-conditional-formatting-ui/src/plugin.ts"],
  "sourcesContent": ["// this file was prevaled\nmodule.exports = function fastRGLPropsEqual(a, b, isEqualImpl) {\n  if (a === b) return true;\n  return a.className === b.className && isEqualImpl(a.style, b.style) && a.width === b.width && a.autoSize === b.autoSize && a.cols === b.cols && a.draggableCancel === b.draggableCancel && a.draggableHandle === b.draggableHandle && isEqualImpl(a.verticalCompact, b.verticalCompact) && isEqualImpl(a.compactType, b.compactType) && isEqualImpl(a.layout, b.layout) && isEqualImpl(a.margin, b.margin) && isEqualImpl(a.containerPadding, b.containerPadding) && a.rowHeight === b.rowHeight && a.maxRows === b.maxRows && a.isBounded === b.isBounded && a.isDraggable === b.isDraggable && a.isResizable === b.isResizable && a.allowOverlap === b.allowOverlap && a.preventCollision === b.preventCollision && a.useCSSTransforms === b.useCSSTransforms && a.transformScale === b.transformScale && a.isDroppable === b.isDroppable && isEqualImpl(a.resizeHandles, b.resizeHandles) && isEqualImpl(a.resizeHandle, b.resizeHandle) && a.onLayoutChange === b.onLayoutChange && a.onDragStart === b.onDragStart && a.onDrag === b.onDrag && a.onDragStop === b.onDragStop && a.onResizeStart === b.onResizeStart && a.onResize === b.onResize && a.onResizeStop === b.onResizeStop && a.onDrop === b.onDrop && isEqualImpl(a.droppingItem, b.droppingItem) && isEqualImpl(a.innerRef, b.innerRef);\n};", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bottom = bottom;\nexports.childrenEqual = childrenEqual;\nexports.cloneLayout = cloneLayout;\nexports.cloneLayoutItem = cloneLayoutItem;\nexports.collides = collides;\nexports.compact = compact;\nexports.compactItem = compactItem;\nexports.compactType = compactType;\nexports.correctBounds = correctBounds;\nexports.fastPositionEqual = fastPositionEqual;\nexports.fastRGLPropsEqual = void 0;\nexports.getAllCollisions = getAllCollisions;\nexports.getFirstCollision = getFirstCollision;\nexports.getLayoutItem = getLayoutItem;\nexports.getStatics = getStatics;\nexports.modifyLayout = modifyLayout;\nexports.moveElement = moveElement;\nexports.moveElementAwayFromCollision = moveElementAwayFromCollision;\nexports.noop = void 0;\nexports.perc = perc;\nexports.resizeItemInDirection = resizeItemInDirection;\nexports.setTopLeft = setTopLeft;\nexports.setTransform = setTransform;\nexports.sortLayoutItems = sortLayoutItems;\nexports.sortLayoutItemsByColRow = sortLayoutItemsByColRow;\nexports.sortLayoutItemsByRowCol = sortLayoutItemsByRowCol;\nexports.synchronizeLayoutWithChildren = synchronizeLayoutWithChildren;\nexports.validateLayout = validateLayout;\nexports.withLayoutItem = withLayoutItem;\nvar _fastEquals = require(\"fast-equals\");\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/*:: import type {\n  ChildrenArray as ReactChildrenArray,\n  Element as ReactElement\n} from \"react\";*/\n/*:: export type ResizeHandleAxis =\n  | \"s\"\n  | \"w\"\n  | \"e\"\n  | \"n\"\n  | \"sw\"\n  | \"nw\"\n  | \"se\"\n  | \"ne\";*/\n/*:: export type LayoutItem = {\n  w: number,\n  h: number,\n  x: number,\n  y: number,\n  i: string,\n  minW?: number,\n  minH?: number,\n  maxW?: number,\n  maxH?: number,\n  moved?: boolean,\n  static?: boolean,\n  isDraggable?: ?boolean,\n  isResizable?: ?boolean,\n  resizeHandles?: Array<ResizeHandleAxis>,\n  isBounded?: ?boolean\n};*/\n/*:: export type Layout = $ReadOnlyArray<LayoutItem>;*/\n/*:: export type Position = {\n  left: number,\n  top: number,\n  width: number,\n  height: number\n};*/\n/*:: export type ReactDraggableCallbackData = {\n  node: HTMLElement,\n  x?: number,\n  y?: number,\n  deltaX: number,\n  deltaY: number,\n  lastX?: number,\n  lastY?: number\n};*/\n/*:: export type PartialPosition = { left: number, top: number };*/\n/*:: export type DroppingPosition = { left: number, top: number, e: Event };*/\n/*:: export type Size = { width: number, height: number };*/\n/*:: export type GridDragEvent = {\n  e: Event,\n  node: HTMLElement,\n  newPosition: PartialPosition\n};*/\n/*:: export type GridResizeEvent = {\n  e: Event,\n  node: HTMLElement,\n  size: Size,\n  handle: string\n};*/\n/*:: export type DragOverEvent = MouseEvent & {\n  nativeEvent: {\n    layerX: number,\n    layerY: number,\n    ...Event\n  }\n};*/\n/*:: export type Pick<FromType, Properties: { [string]: 0 }> = $Exact<\n  $ObjMapi<Properties, <K, V>(k: K, v: V) => $ElementType<FromType, K>>\n>;*/\n// Helpful port from TS\n/*:: type REl = ReactElement<any>;*/\n/*:: export type ReactChildren = ReactChildrenArray<REl>;*/\n/*:: export type EventCallback = (\n  Layout,\n  oldItem: ?LayoutItem,\n  newItem: ?LayoutItem,\n  placeholder: ?LayoutItem,\n  Event,\n  ?HTMLElement\n) => void;*/\n// All callbacks are of the signature (layout, oldItem, newItem, placeholder, e).\n/*:: export type CompactType = ?(\"horizontal\" | \"vertical\");*/\nconst isProduction = process.env.NODE_ENV === \"production\";\nconst DEBUG = false;\n\n/**\n * Return the bottom coordinate of the layout.\n *\n * @param  {Array} layout Layout array.\n * @return {Number}       Bottom coordinate.\n */\nfunction bottom(layout /*: Layout*/) /*: number*/{\n  let max = 0,\n    bottomY;\n  for (let i = 0, len = layout.length; i < len; i++) {\n    bottomY = layout[i].y + layout[i].h;\n    if (bottomY > max) max = bottomY;\n  }\n  return max;\n}\nfunction cloneLayout(layout /*: Layout*/) /*: Layout*/{\n  const newLayout = Array(layout.length);\n  for (let i = 0, len = layout.length; i < len; i++) {\n    newLayout[i] = cloneLayoutItem(layout[i]);\n  }\n  return newLayout;\n}\n\n// Modify a layoutItem inside a layout. Returns a new Layout,\n// does not mutate. Carries over all other LayoutItems unmodified.\nfunction modifyLayout(layout /*: Layout*/, layoutItem /*: LayoutItem*/) /*: Layout*/{\n  const newLayout = Array(layout.length);\n  for (let i = 0, len = layout.length; i < len; i++) {\n    if (layoutItem.i === layout[i].i) {\n      newLayout[i] = layoutItem;\n    } else {\n      newLayout[i] = layout[i];\n    }\n  }\n  return newLayout;\n}\n\n// Function to be called to modify a layout item.\n// Does defensive clones to ensure the layout is not modified.\nfunction withLayoutItem(layout /*: Layout*/, itemKey /*: string*/, cb /*: LayoutItem => LayoutItem*/) /*: [Layout, ?LayoutItem]*/{\n  let item = getLayoutItem(layout, itemKey);\n  if (!item) return [layout, null];\n  item = cb(cloneLayoutItem(item)); // defensive clone then modify\n  // FIXME could do this faster if we already knew the index\n  layout = modifyLayout(layout, item);\n  return [layout, item];\n}\n\n// Fast path to cloning, since this is monomorphic\nfunction cloneLayoutItem(layoutItem /*: LayoutItem*/) /*: LayoutItem*/{\n  return {\n    w: layoutItem.w,\n    h: layoutItem.h,\n    x: layoutItem.x,\n    y: layoutItem.y,\n    i: layoutItem.i,\n    minW: layoutItem.minW,\n    maxW: layoutItem.maxW,\n    minH: layoutItem.minH,\n    maxH: layoutItem.maxH,\n    moved: Boolean(layoutItem.moved),\n    static: Boolean(layoutItem.static),\n    // These can be null/undefined\n    isDraggable: layoutItem.isDraggable,\n    isResizable: layoutItem.isResizable,\n    resizeHandles: layoutItem.resizeHandles,\n    isBounded: layoutItem.isBounded\n  };\n}\n\n/**\n * Comparing React `children` is a bit difficult. This is a good way to compare them.\n * This will catch differences in keys, order, and length.\n */\nfunction childrenEqual(a /*: ReactChildren*/, b /*: ReactChildren*/) /*: boolean*/{\n  return (0, _fastEquals.deepEqual)(_react.default.Children.map(a, c => c?.key), _react.default.Children.map(b, c => c?.key)) && (0, _fastEquals.deepEqual)(_react.default.Children.map(a, c => c?.props[\"data-grid\"]), _react.default.Children.map(b, c => c?.props[\"data-grid\"]));\n}\n\n/**\n * See `fastRGLPropsEqual.js`.\n * We want this to run as fast as possible - it is called often - and to be\n * resilient to new props that we add. So rather than call lodash.isEqual,\n * which isn't suited to comparing props very well, we use this specialized\n * function in conjunction with preval to generate the fastest possible comparison\n * function, tuned for exactly our props.\n */\n/*:: type FastRGLPropsEqual = (Object, Object, Function) => boolean;*/\nconst fastRGLPropsEqual /*: FastRGLPropsEqual*/ = exports.fastRGLPropsEqual = require(\"./fastRGLPropsEqual\");\n\n// Like the above, but a lot simpler.\nfunction fastPositionEqual(a /*: Position*/, b /*: Position*/) /*: boolean*/{\n  return a.left === b.left && a.top === b.top && a.width === b.width && a.height === b.height;\n}\n\n/**\n * Given two layoutitems, check if they collide.\n */\nfunction collides(l1 /*: LayoutItem*/, l2 /*: LayoutItem*/) /*: boolean*/{\n  if (l1.i === l2.i) return false; // same element\n  if (l1.x + l1.w <= l2.x) return false; // l1 is left of l2\n  if (l1.x >= l2.x + l2.w) return false; // l1 is right of l2\n  if (l1.y + l1.h <= l2.y) return false; // l1 is above l2\n  if (l1.y >= l2.y + l2.h) return false; // l1 is below l2\n  return true; // boxes overlap\n}\n\n/**\n * Given a layout, compact it. This involves going down each y coordinate and removing gaps\n * between items.\n *\n * Does not modify layout items (clones). Creates a new layout array.\n *\n * @param  {Array} layout Layout.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout\n *   vertically.\n * @param  {Boolean} allowOverlap When `true`, allows overlapping grid items.\n * @return {Array}       Compacted Layout.\n */\nfunction compact(layout /*: Layout*/, compactType /*: CompactType*/, cols /*: number*/, allowOverlap /*: ?boolean*/) /*: Layout*/{\n  // Statics go in the compareWith array right away so items flow around them.\n  const compareWith = getStatics(layout);\n  // We go through the items by row and column.\n  const sorted = sortLayoutItems(layout, compactType);\n  // Holding for new items.\n  const out = Array(layout.length);\n  for (let i = 0, len = sorted.length; i < len; i++) {\n    let l = cloneLayoutItem(sorted[i]);\n\n    // Don't move static elements\n    if (!l.static) {\n      l = compactItem(compareWith, l, compactType, cols, sorted, allowOverlap);\n\n      // Add to comparison array. We only collide with items before this one.\n      // Statics are already in this array.\n      compareWith.push(l);\n    }\n\n    // Add to output array to make sure they still come out in the right order.\n    out[layout.indexOf(sorted[i])] = l;\n\n    // Clear moved flag, if it exists.\n    l.moved = false;\n  }\n  return out;\n}\nconst heightWidth = {\n  x: \"w\",\n  y: \"h\"\n};\n/**\n * Before moving item down, it will check if the movement will cause collisions and move those items down before.\n */\nfunction resolveCompactionCollision(layout /*: Layout*/, item /*: LayoutItem*/, moveToCoord /*: number*/, axis /*: \"x\" | \"y\"*/) {\n  const sizeProp = heightWidth[axis];\n  item[axis] += 1;\n  const itemIndex = layout.map(layoutItem => {\n    return layoutItem.i;\n  }).indexOf(item.i);\n\n  // Go through each item we collide with.\n  for (let i = itemIndex + 1; i < layout.length; i++) {\n    const otherItem = layout[i];\n    // Ignore static items\n    if (otherItem.static) continue;\n\n    // Optimization: we can break early if we know we're past this el\n    // We can do this b/c it's a sorted layout\n    if (otherItem.y > item.y + item.h) break;\n    if (collides(item, otherItem)) {\n      resolveCompactionCollision(layout, otherItem, moveToCoord + item[sizeProp], axis);\n    }\n  }\n  item[axis] = moveToCoord;\n}\n\n/**\n * Compact an item in the layout.\n *\n * Modifies item.\n *\n */\nfunction compactItem(compareWith /*: Layout*/, l /*: LayoutItem*/, compactType /*: CompactType*/, cols /*: number*/, fullLayout /*: Layout*/, allowOverlap /*: ?boolean*/) /*: LayoutItem*/{\n  const compactV = compactType === \"vertical\";\n  const compactH = compactType === \"horizontal\";\n  if (compactV) {\n    // Bottom 'y' possible is the bottom of the layout.\n    // This allows you to do nice stuff like specify {y: Infinity}\n    // This is here because the layout must be sorted in order to get the correct bottom `y`.\n    l.y = Math.min(bottom(compareWith), l.y);\n    // Move the element up as far as it can go without colliding.\n    while (l.y > 0 && !getFirstCollision(compareWith, l)) {\n      l.y--;\n    }\n  } else if (compactH) {\n    // Move the element left as far as it can go without colliding.\n    while (l.x > 0 && !getFirstCollision(compareWith, l)) {\n      l.x--;\n    }\n  }\n\n  // Move it down, and keep moving it down if it's colliding.\n  let collides;\n  // Checking the compactType null value to avoid breaking the layout when overlapping is allowed.\n  while ((collides = getFirstCollision(compareWith, l)) && !(compactType === null && allowOverlap)) {\n    if (compactH) {\n      resolveCompactionCollision(fullLayout, l, collides.x + collides.w, \"x\");\n    } else {\n      resolveCompactionCollision(fullLayout, l, collides.y + collides.h, \"y\");\n    }\n    // Since we can't grow without bounds horizontally, if we've overflown, let's move it down and try again.\n    if (compactH && l.x + l.w > cols) {\n      l.x = cols - l.w;\n      l.y++;\n      // ALso move element as left as we can\n      while (l.x > 0 && !getFirstCollision(compareWith, l)) {\n        l.x--;\n      }\n    }\n  }\n\n  // Ensure that there are no negative positions\n  l.y = Math.max(l.y, 0);\n  l.x = Math.max(l.x, 0);\n  return l;\n}\n\n/**\n * Given a layout, make sure all elements fit within its bounds.\n *\n * Modifies layout items.\n *\n * @param  {Array} layout Layout array.\n * @param  {Number} bounds Number of columns.\n */\nfunction correctBounds(layout /*: Layout*/, bounds /*: { cols: number }*/) /*: Layout*/{\n  const collidesWith = getStatics(layout);\n  for (let i = 0, len = layout.length; i < len; i++) {\n    const l = layout[i];\n    // Overflows right\n    if (l.x + l.w > bounds.cols) l.x = bounds.cols - l.w;\n    // Overflows left\n    if (l.x < 0) {\n      l.x = 0;\n      l.w = bounds.cols;\n    }\n    if (!l.static) collidesWith.push(l);else {\n      // If this is static and collides with other statics, we must move it down.\n      // We have to do something nicer than just letting them overlap.\n      while (getFirstCollision(collidesWith, l)) {\n        l.y++;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * Get a layout item by ID. Used so we can override later on if necessary.\n *\n * @param  {Array}  layout Layout array.\n * @param  {String} id     ID\n * @return {LayoutItem}    Item at ID.\n */\nfunction getLayoutItem(layout /*: Layout*/, id /*: string*/) /*: ?LayoutItem*/{\n  for (let i = 0, len = layout.length; i < len; i++) {\n    if (layout[i].i === id) return layout[i];\n  }\n}\n\n/**\n * Returns the first item this layout collides with.\n * It doesn't appear to matter which order we approach this from, although\n * perhaps that is the wrong thing to do.\n *\n * @param  {Object} layoutItem Layout item.\n * @return {Object|undefined}  A colliding layout item, or undefined.\n */\nfunction getFirstCollision(layout /*: Layout*/, layoutItem /*: LayoutItem*/) /*: ?LayoutItem*/{\n  for (let i = 0, len = layout.length; i < len; i++) {\n    if (collides(layout[i], layoutItem)) return layout[i];\n  }\n}\nfunction getAllCollisions(layout /*: Layout*/, layoutItem /*: LayoutItem*/) /*: Array<LayoutItem>*/{\n  return layout.filter(l => collides(l, layoutItem));\n}\n\n/**\n * Get all static elements.\n * @param  {Array} layout Array of layout objects.\n * @return {Array}        Array of static layout items..\n */\nfunction getStatics(layout /*: Layout*/) /*: Array<LayoutItem>*/{\n  return layout.filter(l => l.static);\n}\n\n/**\n * Move an element. Responsible for doing cascading movements of other elements.\n *\n * Modifies layout items.\n *\n * @param  {Array}      layout            Full layout to modify.\n * @param  {LayoutItem} l                 element to move.\n * @param  {Number}     [x]               X position in grid units.\n * @param  {Number}     [y]               Y position in grid units.\n */\nfunction moveElement(layout /*: Layout*/, l /*: LayoutItem*/, x /*: ?number*/, y /*: ?number*/, isUserAction /*: ?boolean*/, preventCollision /*: ?boolean*/, compactType /*: CompactType*/, cols /*: number*/, allowOverlap /*: ?boolean*/) /*: Layout*/{\n  // If this is static and not explicitly enabled as draggable,\n  // no move is possible, so we can short-circuit this immediately.\n  if (l.static && l.isDraggable !== true) return layout;\n\n  // Short-circuit if nothing to do.\n  if (l.y === y && l.x === x) return layout;\n  log(`Moving element ${l.i} to [${String(x)},${String(y)}] from [${l.x},${l.y}]`);\n  const oldX = l.x;\n  const oldY = l.y;\n\n  // This is quite a bit faster than extending the object\n  if (typeof x === \"number\") l.x = x;\n  if (typeof y === \"number\") l.y = y;\n  l.moved = true;\n\n  // If this collides with anything, move it.\n  // When doing this comparison, we have to sort the items we compare with\n  // to ensure, in the case of multiple collisions, that we're getting the\n  // nearest collision.\n  let sorted = sortLayoutItems(layout, compactType);\n  const movingUp = compactType === \"vertical\" && typeof y === \"number\" ? oldY >= y : compactType === \"horizontal\" && typeof x === \"number\" ? oldX >= x : false;\n  // $FlowIgnore acceptable modification of read-only array as it was recently cloned\n  if (movingUp) sorted = sorted.reverse();\n  const collisions = getAllCollisions(sorted, l);\n  const hasCollisions = collisions.length > 0;\n\n  // We may have collisions. We can short-circuit if we've turned off collisions or\n  // allowed overlap.\n  if (hasCollisions && allowOverlap) {\n    // Easy, we don't need to resolve collisions. But we *did* change the layout,\n    // so clone it on the way out.\n    return cloneLayout(layout);\n  } else if (hasCollisions && preventCollision) {\n    // If we are preventing collision but not allowing overlap, we need to\n    // revert the position of this element so it goes to where it came from, rather\n    // than the user's desired location.\n    log(`Collision prevented on ${l.i}, reverting.`);\n    l.x = oldX;\n    l.y = oldY;\n    l.moved = false;\n    return layout; // did not change so don't clone\n  }\n\n  // Move each item that collides away from this element.\n  for (let i = 0, len = collisions.length; i < len; i++) {\n    const collision = collisions[i];\n    log(`Resolving collision between ${l.i} at [${l.x},${l.y}] and ${collision.i} at [${collision.x},${collision.y}]`);\n\n    // Short circuit so we can't infinite loop\n    if (collision.moved) continue;\n\n    // Don't move static items - we have to move *this* element away\n    if (collision.static) {\n      layout = moveElementAwayFromCollision(layout, collision, l, isUserAction, compactType, cols);\n    } else {\n      layout = moveElementAwayFromCollision(layout, l, collision, isUserAction, compactType, cols);\n    }\n  }\n  return layout;\n}\n\n/**\n * This is where the magic needs to happen - given a collision, move an element away from the collision.\n * We attempt to move it up if there's room, otherwise it goes below.\n *\n * @param  {Array} layout            Full layout to modify.\n * @param  {LayoutItem} collidesWith Layout item we're colliding with.\n * @param  {LayoutItem} itemToMove   Layout item we're moving.\n */\nfunction moveElementAwayFromCollision(layout /*: Layout*/, collidesWith /*: LayoutItem*/, itemToMove /*: LayoutItem*/, isUserAction /*: ?boolean*/, compactType /*: CompactType*/, cols /*: number*/) /*: Layout*/{\n  const compactH = compactType === \"horizontal\";\n  // Compact vertically if not set to horizontal\n  const compactV = compactType === \"vertical\";\n  const preventCollision = collidesWith.static; // we're already colliding (not for static items)\n\n  // If there is enough space above the collision to put this element, move it there.\n  // We only do this on the main collision as this can get funky in cascades and cause\n  // unwanted swapping behavior.\n  if (isUserAction) {\n    // Reset isUserAction flag because we're not in the main collision anymore.\n    isUserAction = false;\n\n    // Make a mock item so we don't modify the item here, only modify in moveElement.\n    const fakeItem /*: LayoutItem*/ = {\n      x: compactH ? Math.max(collidesWith.x - itemToMove.w, 0) : itemToMove.x,\n      y: compactV ? Math.max(collidesWith.y - itemToMove.h, 0) : itemToMove.y,\n      w: itemToMove.w,\n      h: itemToMove.h,\n      i: \"-1\"\n    };\n    const firstCollision = getFirstCollision(layout, fakeItem);\n    const collisionNorth = firstCollision && firstCollision.y + firstCollision.h > collidesWith.y;\n    const collisionWest = firstCollision && collidesWith.x + collidesWith.w > firstCollision.x;\n\n    // No collision? If so, we can go up there; otherwise, we'll end up moving down as normal\n    if (!firstCollision) {\n      log(`Doing reverse collision on ${itemToMove.i} up to [${fakeItem.x},${fakeItem.y}].`);\n      return moveElement(layout, itemToMove, compactH ? fakeItem.x : undefined, compactV ? fakeItem.y : undefined, isUserAction, preventCollision, compactType, cols);\n    } else if (collisionNorth && compactV) {\n      return moveElement(layout, itemToMove, undefined, collidesWith.y + 1, isUserAction, preventCollision, compactType, cols);\n    } else if (collisionNorth && compactType == null) {\n      collidesWith.y = itemToMove.y;\n      itemToMove.y = itemToMove.y + itemToMove.h;\n      return layout;\n    } else if (collisionWest && compactH) {\n      return moveElement(layout, collidesWith, itemToMove.x, undefined, isUserAction, preventCollision, compactType, cols);\n    }\n  }\n  const newX = compactH ? itemToMove.x + 1 : undefined;\n  const newY = compactV ? itemToMove.y + 1 : undefined;\n  if (newX == null && newY == null) {\n    return layout;\n  }\n  return moveElement(layout, itemToMove, compactH ? itemToMove.x + 1 : undefined, compactV ? itemToMove.y + 1 : undefined, isUserAction, preventCollision, compactType, cols);\n}\n\n/**\n * Helper to convert a number to a percentage string.\n *\n * @param  {Number} num Any number\n * @return {String}     That number as a percentage.\n */\nfunction perc(num /*: number*/) /*: string*/{\n  return num * 100 + \"%\";\n}\n\n/**\n * Helper functions to constrain dimensions of a GridItem\n */\nconst constrainWidth = (left /*: number*/, currentWidth /*: number*/, newWidth /*: number*/, containerWidth /*: number*/) => {\n  return left + newWidth > containerWidth ? currentWidth : newWidth;\n};\nconst constrainHeight = (top /*: number*/, currentHeight /*: number*/, newHeight /*: number*/) => {\n  return top < 0 ? currentHeight : newHeight;\n};\nconst constrainLeft = (left /*: number*/) => Math.max(0, left);\nconst constrainTop = (top /*: number*/) => Math.max(0, top);\nconst resizeNorth = (currentSize, _ref, _containerWidth) => {\n  let {\n    left,\n    height,\n    width\n  } = _ref;\n  const top = currentSize.top - (height - currentSize.height);\n  return {\n    left,\n    width,\n    height: constrainHeight(top, currentSize.height, height),\n    top: constrainTop(top)\n  };\n};\nconst resizeEast = (currentSize, _ref2, containerWidth) => {\n  let {\n    top,\n    left,\n    height,\n    width\n  } = _ref2;\n  return {\n    top,\n    height,\n    width: constrainWidth(currentSize.left, currentSize.width, width, containerWidth),\n    left: constrainLeft(left)\n  };\n};\nconst resizeWest = (currentSize, _ref3, containerWidth) => {\n  let {\n    top,\n    height,\n    width\n  } = _ref3;\n  const left = currentSize.left - (width - currentSize.width);\n  return {\n    height,\n    width: left < 0 ? currentSize.width : constrainWidth(currentSize.left, currentSize.width, width, containerWidth),\n    top: constrainTop(top),\n    left: constrainLeft(left)\n  };\n};\nconst resizeSouth = (currentSize, _ref4, containerWidth) => {\n  let {\n    top,\n    left,\n    height,\n    width\n  } = _ref4;\n  return {\n    width,\n    left,\n    height: constrainHeight(top, currentSize.height, height),\n    top: constrainTop(top)\n  };\n};\nconst resizeNorthEast = function () {\n  return resizeNorth(arguments.length <= 0 ? undefined : arguments[0], resizeEast(...arguments), arguments.length <= 2 ? undefined : arguments[2]);\n};\nconst resizeNorthWest = function () {\n  return resizeNorth(arguments.length <= 0 ? undefined : arguments[0], resizeWest(...arguments), arguments.length <= 2 ? undefined : arguments[2]);\n};\nconst resizeSouthEast = function () {\n  return resizeSouth(arguments.length <= 0 ? undefined : arguments[0], resizeEast(...arguments), arguments.length <= 2 ? undefined : arguments[2]);\n};\nconst resizeSouthWest = function () {\n  return resizeSouth(arguments.length <= 0 ? undefined : arguments[0], resizeWest(...arguments), arguments.length <= 2 ? undefined : arguments[2]);\n};\nconst ordinalResizeHandlerMap = {\n  n: resizeNorth,\n  ne: resizeNorthEast,\n  e: resizeEast,\n  se: resizeSouthEast,\n  s: resizeSouth,\n  sw: resizeSouthWest,\n  w: resizeWest,\n  nw: resizeNorthWest\n};\n\n/**\n * Helper for clamping width and position when resizing an item.\n */\nfunction resizeItemInDirection(direction /*: ResizeHandleAxis*/, currentSize /*: Position*/, newSize /*: Position*/, containerWidth /*: number*/) /*: Position*/{\n  const ordinalHandler = ordinalResizeHandlerMap[direction];\n  // Shouldn't be possible given types; that said, don't fail hard\n  if (!ordinalHandler) return newSize;\n  return ordinalHandler(currentSize, {\n    ...currentSize,\n    ...newSize\n  }, containerWidth);\n}\nfunction setTransform(_ref5 /*:: */) /*: Object*/{\n  let {\n    top,\n    left,\n    width,\n    height\n  } /*: Position*/ = _ref5 /*: Position*/;\n  // Replace unitless items with px\n  const translate = `translate(${left}px,${top}px)`;\n  return {\n    transform: translate,\n    WebkitTransform: translate,\n    MozTransform: translate,\n    msTransform: translate,\n    OTransform: translate,\n    width: `${width}px`,\n    height: `${height}px`,\n    position: \"absolute\"\n  };\n}\nfunction setTopLeft(_ref6 /*:: */) /*: Object*/{\n  let {\n    top,\n    left,\n    width,\n    height\n  } /*: Position*/ = _ref6 /*: Position*/;\n  return {\n    top: `${top}px`,\n    left: `${left}px`,\n    width: `${width}px`,\n    height: `${height}px`,\n    position: \"absolute\"\n  };\n}\n\n/**\n * Get layout items sorted from top left to right and down.\n *\n * @return {Array} Array of layout objects.\n * @return {Array}        Layout, sorted static items first.\n */\nfunction sortLayoutItems(layout /*: Layout*/, compactType /*: CompactType*/) /*: Layout*/{\n  if (compactType === \"horizontal\") return sortLayoutItemsByColRow(layout);\n  if (compactType === \"vertical\") return sortLayoutItemsByRowCol(layout);else return layout;\n}\n\n/**\n * Sort layout items by row ascending and column ascending.\n *\n * Does not modify Layout.\n */\nfunction sortLayoutItemsByRowCol(layout /*: Layout*/) /*: Layout*/{\n  // Slice to clone array as sort modifies\n  return layout.slice(0).sort(function (a, b) {\n    if (a.y > b.y || a.y === b.y && a.x > b.x) {\n      return 1;\n    } else if (a.y === b.y && a.x === b.x) {\n      // Without this, we can get different sort results in IE vs. Chrome/FF\n      return 0;\n    }\n    return -1;\n  });\n}\n\n/**\n * Sort layout items by column ascending then row ascending.\n *\n * Does not modify Layout.\n */\nfunction sortLayoutItemsByColRow(layout /*: Layout*/) /*: Layout*/{\n  return layout.slice(0).sort(function (a, b) {\n    if (a.x > b.x || a.x === b.x && a.y > b.y) {\n      return 1;\n    }\n    return -1;\n  });\n}\n\n/**\n * Generate a layout using the initialLayout and children as a template.\n * Missing entries will be added, extraneous ones will be truncated.\n *\n * Does not modify initialLayout.\n *\n * @param  {Array}  initialLayout Layout passed in through props.\n * @param  {String} breakpoint    Current responsive breakpoint.\n * @param  {?String} compact      Compaction option.\n * @return {Array}                Working layout.\n */\nfunction synchronizeLayoutWithChildren(initialLayout /*: Layout*/, children /*: ReactChildren*/, cols /*: number*/, compactType /*: CompactType*/, allowOverlap /*: ?boolean*/) /*: Layout*/{\n  initialLayout = initialLayout || [];\n\n  // Generate one layout item per child.\n  const layout /*: LayoutItem[]*/ = [];\n  _react.default.Children.forEach(children, (child /*: ReactElement<any>*/) => {\n    // Child may not exist\n    if (child?.key == null) return;\n    const exists = getLayoutItem(initialLayout, String(child.key));\n    const g = child.props[\"data-grid\"];\n    // Don't overwrite the layout item if it's already in the initial layout.\n    // If it has a `data-grid` property, prefer that over what's in the layout.\n    if (exists && g == null) {\n      layout.push(cloneLayoutItem(exists));\n    } else {\n      // Hey, this item has a data-grid property, use it.\n      if (g) {\n        if (!isProduction) {\n          validateLayout([g], \"ReactGridLayout.children\");\n        }\n        // FIXME clone not really necessary here\n        layout.push(cloneLayoutItem({\n          ...g,\n          i: child.key\n        }));\n      } else {\n        // Nothing provided: ensure this is added to the bottom\n        // FIXME clone not really necessary here\n        layout.push(cloneLayoutItem({\n          w: 1,\n          h: 1,\n          x: 0,\n          y: bottom(layout),\n          i: String(child.key)\n        }));\n      }\n    }\n  });\n\n  // Correct the layout.\n  const correctedLayout = correctBounds(layout, {\n    cols: cols\n  });\n  return allowOverlap ? correctedLayout : compact(correctedLayout, compactType, cols);\n}\n\n/**\n * Validate a layout. Throws errors.\n *\n * @param  {Array}  layout        Array of layout items.\n * @param  {String} [contextName] Context name for errors.\n * @throw  {Error}                Validation error.\n */\nfunction validateLayout(layout /*: Layout*/) /*: void*/{\n  let contextName /*: string*/ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Layout\";\n  const subProps = [\"x\", \"y\", \"w\", \"h\"];\n  if (!Array.isArray(layout)) throw new Error(contextName + \" must be an array!\");\n  for (let i = 0, len = layout.length; i < len; i++) {\n    const item = layout[i];\n    for (let j = 0; j < subProps.length; j++) {\n      if (typeof item[subProps[j]] !== \"number\") {\n        throw new Error(\"ReactGridLayout: \" + contextName + \"[\" + i + \"].\" + subProps[j] + \" must be a number!\");\n      }\n    }\n  }\n}\n\n// Legacy support for verticalCompact: false\nfunction compactType(props /*: ?{ verticalCompact: boolean, compactType: CompactType }*/) /*: CompactType*/{\n  const {\n    verticalCompact,\n    compactType\n  } = props || {};\n  return verticalCompact === false ? null : compactType;\n}\nfunction log() {\n  if (!DEBUG) return;\n  // eslint-disable-next-line no-console\n  console.log(...arguments);\n}\nconst noop = () => {};\nexports.noop = noop;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcGridColWidth = calcGridColWidth;\nexports.calcGridItemPosition = calcGridItemPosition;\nexports.calcGridItemWHPx = calcGridItemWHPx;\nexports.calcWH = calcWH;\nexports.calcXY = calcXY;\nexports.clamp = clamp;\n/*:: import type { Position } from \"./utils\";*/\n/*:: export type PositionParams = {\n  margin: [number, number],\n  containerPadding: [number, number],\n  containerWidth: number,\n  cols: number,\n  rowHeight: number,\n  maxRows: number\n};*/\n// Helper for generating column width\nfunction calcGridColWidth(positionParams /*: PositionParams*/) /*: number*/{\n  const {\n    margin,\n    containerPadding,\n    containerWidth,\n    cols\n  } = positionParams;\n  return (containerWidth - margin[0] * (cols - 1) - containerPadding[0] * 2) / cols;\n}\n\n// This can either be called:\n// calcGridItemWHPx(w, colWidth, margin[0])\n// or\n// calcGridItemWHPx(h, rowHeight, margin[1])\nfunction calcGridItemWHPx(gridUnits /*: number*/, colOrRowSize /*: number*/, marginPx /*: number*/) /*: number*/{\n  // 0 * Infinity === NaN, which causes problems with resize contraints\n  if (!Number.isFinite(gridUnits)) return gridUnits;\n  return Math.round(colOrRowSize * gridUnits + Math.max(0, gridUnits - 1) * marginPx);\n}\n\n/**\n * Return position on the page given an x, y, w, h.\n * left, top, width, height are all in pixels.\n * @param  {PositionParams} positionParams  Parameters of grid needed for coordinates calculations.\n * @param  {Number}  x                      X coordinate in grid units.\n * @param  {Number}  y                      Y coordinate in grid units.\n * @param  {Number}  w                      W coordinate in grid units.\n * @param  {Number}  h                      H coordinate in grid units.\n * @return {Position}                       Object containing coords.\n */\nfunction calcGridItemPosition(positionParams /*: PositionParams*/, x /*: number*/, y /*: number*/, w /*: number*/, h /*: number*/, state /*: ?Object*/) /*: Position*/{\n  const {\n    margin,\n    containerPadding,\n    rowHeight\n  } = positionParams;\n  const colWidth = calcGridColWidth(positionParams);\n  const out = {};\n\n  // If resizing, use the exact width and height as returned from resizing callbacks.\n  if (state && state.resizing) {\n    out.width = Math.round(state.resizing.width);\n    out.height = Math.round(state.resizing.height);\n  }\n  // Otherwise, calculate from grid units.\n  else {\n    out.width = calcGridItemWHPx(w, colWidth, margin[0]);\n    out.height = calcGridItemWHPx(h, rowHeight, margin[1]);\n  }\n\n  // If dragging, use the exact width and height as returned from dragging callbacks.\n  if (state && state.dragging) {\n    out.top = Math.round(state.dragging.top);\n    out.left = Math.round(state.dragging.left);\n  } else if (state && state.resizing && typeof state.resizing.top === \"number\" && typeof state.resizing.left === \"number\") {\n    out.top = Math.round(state.resizing.top);\n    out.left = Math.round(state.resizing.left);\n  }\n  // Otherwise, calculate from grid units.\n  else {\n    out.top = Math.round((rowHeight + margin[1]) * y + containerPadding[1]);\n    out.left = Math.round((colWidth + margin[0]) * x + containerPadding[0]);\n  }\n  return out;\n}\n\n/**\n * Translate x and y coordinates from pixels to grid units.\n * @param  {PositionParams} positionParams  Parameters of grid needed for coordinates calculations.\n * @param  {Number} top                     Top position (relative to parent) in pixels.\n * @param  {Number} left                    Left position (relative to parent) in pixels.\n * @param  {Number} w                       W coordinate in grid units.\n * @param  {Number} h                       H coordinate in grid units.\n * @return {Object}                         x and y in grid units.\n */\nfunction calcXY(positionParams /*: PositionParams*/, top /*: number*/, left /*: number*/, w /*: number*/, h /*: number*/) /*: { x: number, y: number }*/{\n  const {\n    margin,\n    cols,\n    rowHeight,\n    maxRows\n  } = positionParams;\n  const colWidth = calcGridColWidth(positionParams);\n\n  // left = colWidth * x + margin * (x + 1)\n  // l = cx + m(x+1)\n  // l = cx + mx + m\n  // l - m = cx + mx\n  // l - m = x(c + m)\n  // (l - m) / (c + m) = x\n  // x = (left - margin) / (coldWidth + margin)\n  let x = Math.round((left - margin[0]) / (colWidth + margin[0]));\n  let y = Math.round((top - margin[1]) / (rowHeight + margin[1]));\n\n  // Capping\n  x = clamp(x, 0, cols - w);\n  y = clamp(y, 0, maxRows - h);\n  return {\n    x,\n    y\n  };\n}\n\n/**\n * Given a height and width in pixel values, calculate grid units.\n * @param  {PositionParams} positionParams  Parameters of grid needed for coordinates calcluations.\n * @param  {Number} height                  Height in pixels.\n * @param  {Number} width                   Width in pixels.\n * @param  {Number} x                       X coordinate in grid units.\n * @param  {Number} y                       Y coordinate in grid units.\n * @param {String} handle Resize Handle.\n * @return {Object}                         w, h as grid units.\n */\nfunction calcWH(positionParams /*: PositionParams*/, width /*: number*/, height /*: number*/, x /*: number*/, y /*: number*/, handle /*: string*/) /*: { w: number, h: number }*/{\n  const {\n    margin,\n    maxRows,\n    cols,\n    rowHeight\n  } = positionParams;\n  const colWidth = calcGridColWidth(positionParams);\n\n  // width = colWidth * w - (margin * (w - 1))\n  // ...\n  // w = (width + margin) / (colWidth + margin)\n  let w = Math.round((width + margin[0]) / (colWidth + margin[0]));\n  let h = Math.round((height + margin[1]) / (rowHeight + margin[1]));\n\n  // Capping\n  let _w = clamp(w, 0, cols - x);\n  let _h = clamp(h, 0, maxRows - y);\n  if ([\"sw\", \"w\", \"nw\"].indexOf(handle) !== -1) {\n    _w = clamp(w, 0, cols);\n  }\n  if ([\"nw\", \"n\", \"ne\"].indexOf(handle) !== -1) {\n    _h = clamp(h, 0, maxRows);\n  }\n  return {\n    w: _w,\n    h: _h\n  };\n}\n\n// Similar to _.clamp\nfunction clamp(num /*: number*/, lowerBound /*: number*/, upperBound /*: number*/) /*: number*/{\n  return Math.max(Math.min(num, upperBound), lowerBound);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resizeHandleType = exports.resizeHandleAxesType = exports.default = void 0;\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/*:: import type {\n  Ref,\n  ChildrenArray as ReactChildrenArray,\n  Element as ReactElement\n} from \"react\";*/\n/*:: import type {\n  DragOverEvent,\n  EventCallback,\n  CompactType,\n  Layout,\n  LayoutItem,\n  ResizeHandleAxis\n} from \"./utils\";*/\n/*:: export type ReactRef<T: HTMLElement> = {|\n  +current: T | null\n|};*/\n// util\n/*:: export type ResizeHandle =\n  | ReactElement<any>\n  | ((\n      resizeHandleAxis: ResizeHandleAxis,\n      ref: ReactRef<HTMLElement>\n    ) => ReactElement<any>);*/\n// Defines which resize handles should be rendered (default: 'se')\n// Allows for any combination of:\n// 's' - South handle (bottom-center)\n// 'w' - West handle (left-center)\n// 'e' - East handle (right-center)\n// 'n' - North handle (top-center)\n// 'sw' - Southwest handle (bottom-left)\n// 'nw' - Northwest handle (top-left)\n// 'se' - Southeast handle (bottom-right)\n// 'ne' - Northeast handle (top-right)\nconst resizeHandleAxesType /*: ReactPropsChainableTypeChecker*/ = exports.resizeHandleAxesType = _propTypes.default.arrayOf(_propTypes.default.oneOf([\"s\", \"w\", \"e\", \"n\", \"sw\", \"nw\", \"se\", \"ne\"]));\n// Custom component for resize handles\nconst resizeHandleType /*: ReactPropsChainableTypeChecker*/ = exports.resizeHandleType = _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]);\n/*:: export type Props = {|\n  className: string,\n  style: Object,\n  width: number,\n  autoSize: boolean,\n  cols: number,\n  draggableCancel: string,\n  draggableHandle: string,\n  verticalCompact: boolean,\n  compactType: CompactType,\n  layout: Layout,\n  margin: [number, number],\n  containerPadding: ?[number, number],\n  rowHeight: number,\n  maxRows: number,\n  isBounded: boolean,\n  isDraggable: boolean,\n  isResizable: boolean,\n  isDroppable: boolean,\n  preventCollision: boolean,\n  useCSSTransforms: boolean,\n  transformScale: number,\n  droppingItem: $Shape<LayoutItem>,\n  resizeHandles: ResizeHandleAxis[],\n  resizeHandle?: ResizeHandle,\n  allowOverlap: boolean,\n\n  // Callbacks\n  onLayoutChange: Layout => void,\n  onDrag: EventCallback,\n  onDragStart: EventCallback,\n  onDragStop: EventCallback,\n  onResize: EventCallback,\n  onResizeStart: EventCallback,\n  onResizeStop: EventCallback,\n  onDropDragOver: (e: DragOverEvent) => ?({| w?: number, h?: number |} | false),\n  onDrop: (layout: Layout, item: ?LayoutItem, e: Event) => void,\n  children: ReactChildrenArray<ReactElement<any>>,\n  innerRef?: Ref<\"div\">\n|};*/\n/*:: export type DefaultProps = $Diff<\n  Props,\n  {\n    children: ReactChildrenArray<ReactElement<any>>,\n    width: number\n  }\n>;*/\nvar _default = exports.default = {\n  //\n  // Basic props\n  //\n  className: _propTypes.default.string,\n  style: _propTypes.default.object,\n  // This can be set explicitly. If it is not set, it will automatically\n  // be set to the container width. Note that resizes will *not* cause this to adjust.\n  // If you need that behavior, use WidthProvider.\n  width: _propTypes.default.number,\n  // If true, the container height swells and contracts to fit contents\n  autoSize: _propTypes.default.bool,\n  // # of cols.\n  cols: _propTypes.default.number,\n  // A selector that will not be draggable.\n  draggableCancel: _propTypes.default.string,\n  // A selector for the draggable handler\n  draggableHandle: _propTypes.default.string,\n  // Deprecated\n  verticalCompact: function (props /*: Props*/) {\n    if (props.verticalCompact === false && process.env.NODE_ENV !== \"production\") {\n      console.warn(\n      // eslint-disable-line no-console\n      \"`verticalCompact` on <ReactGridLayout> is deprecated and will be removed soon. \" + 'Use `compactType`: \"horizontal\" | \"vertical\" | null.');\n    }\n  },\n  // Choose vertical or hotizontal compaction\n  compactType: (_propTypes.default.oneOf([\"vertical\", \"horizontal\"]) /*: ReactPropsChainableTypeChecker*/),\n  // layout is an array of object with the format:\n  // {x: Number, y: Number, w: Number, h: Number, i: String}\n  layout: function (props /*: Props*/) {\n    var layout = props.layout;\n    // I hope you're setting the data-grid property on the grid items\n    if (layout === undefined) return;\n    require(\"./utils\").validateLayout(layout, \"layout\");\n  },\n  //\n  // Grid Dimensions\n  //\n\n  // Margin between items [x, y] in px\n  margin: (_propTypes.default.arrayOf(_propTypes.default.number) /*: ReactPropsChainableTypeChecker*/),\n  // Padding inside the container [x, y] in px\n  containerPadding: (_propTypes.default.arrayOf(_propTypes.default.number) /*: ReactPropsChainableTypeChecker*/),\n  // Rows have a static height, but you can change this based on breakpoints if you like\n  rowHeight: _propTypes.default.number,\n  // Default Infinity, but you can specify a max here if you like.\n  // Note that this isn't fully fleshed out and won't error if you specify a layout that\n  // extends beyond the row capacity. It will, however, not allow users to drag/resize\n  // an item past the barrier. They can push items beyond the barrier, though.\n  // Intentionally not documented for this reason.\n  maxRows: _propTypes.default.number,\n  //\n  // Flags\n  //\n  isBounded: _propTypes.default.bool,\n  isDraggable: _propTypes.default.bool,\n  isResizable: _propTypes.default.bool,\n  // If true, grid can be placed one over the other.\n  allowOverlap: _propTypes.default.bool,\n  // If true, grid items won't change position when being dragged over.\n  preventCollision: _propTypes.default.bool,\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes.default.bool,\n  // parent layout transform scale\n  transformScale: _propTypes.default.number,\n  // If true, an external element can trigger onDrop callback with a specific grid position as a parameter\n  isDroppable: _propTypes.default.bool,\n  // Resize handle options\n  resizeHandles: resizeHandleAxesType,\n  resizeHandle: resizeHandleType,\n  //\n  // Callbacks\n  //\n\n  // Callback so you can save the layout. Calls after each drag & resize stops.\n  onLayoutChange: _propTypes.default.func,\n  // Calls when drag starts. Callback is of the signature (layout, oldItem, newItem, placeholder, e, ?node).\n  // All callbacks below have the same signature. 'start' and 'stop' callbacks omit the 'placeholder'.\n  onDragStart: _propTypes.default.func,\n  // Calls on each drag movement.\n  onDrag: _propTypes.default.func,\n  // Calls when drag is complete.\n  onDragStop: _propTypes.default.func,\n  //Calls when resize starts.\n  onResizeStart: _propTypes.default.func,\n  // Calls when resize movement happens.\n  onResize: _propTypes.default.func,\n  // Calls when resize is complete.\n  onResizeStop: _propTypes.default.func,\n  // Calls when some element is dropped.\n  onDrop: _propTypes.default.func,\n  //\n  // Other validations\n  //\n\n  droppingItem: (_propTypes.default.shape({\n    i: _propTypes.default.string.isRequired,\n    w: _propTypes.default.number.isRequired,\n    h: _propTypes.default.number.isRequired\n  }) /*: ReactPropsChainableTypeChecker*/),\n  // Children must not have duplicate keys.\n  children: function (props /*: Props*/, propName /*: string*/) {\n    const children = props[propName];\n\n    // Check children keys for duplicates. Throw if found.\n    const keys = {};\n    _react.default.Children.forEach(children, function (child) {\n      if (child?.key == null) return;\n      if (keys[child.key]) {\n        throw new Error('Duplicate child key \"' + child.key + '\" found! This will cause problems in ReactGridLayout.');\n      }\n      keys[child.key] = true;\n    });\n  },\n  // Optional ref for getting a reference for the wrapping div.\n  innerRef: _propTypes.default.any\n};", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactDraggable = require(\"react-draggable\");\nvar _reactResizable = require(\"react-resizable\");\nvar _utils = require(\"./utils\");\nvar _calculateUtils = require(\"./calculateUtils\");\nvar _ReactGridLayoutPropTypes = require(\"./ReactGridLayoutPropTypes\");\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*:: import type { Element as ReactElement, Node as ReactNode } from \"react\";*/\n/*:: import type {\n  ReactDraggableCallbackData,\n  GridDragEvent,\n  GridResizeEvent,\n  DroppingPosition,\n  Position,\n  ResizeHandleAxis\n} from \"./utils\";*/\n/*:: import type { PositionParams } from \"./calculateUtils\";*/\n/*:: import type { ResizeHandle, ReactRef } from \"./ReactGridLayoutPropTypes\";*/\n/*:: type PartialPosition = { top: number, left: number };*/\n/*:: type GridItemCallback<Data: GridDragEvent | GridResizeEvent> = (\n  i: string,\n  w: number,\n  h: number,\n  Data\n) => void;*/\n/*:: type ResizeCallbackData = {\n  node: HTMLElement,\n  size: Position,\n  handle: ResizeHandleAxis\n};*/\n/*:: type GridItemResizeCallback = (\n  e: Event,\n  data: ResizeCallbackData,\n  position: Position\n) => void;*/\n/*:: type State = {\n  resizing: ?{ top: number, left: number, width: number, height: number },\n  dragging: ?{ top: number, left: number },\n  className: string\n};*/\n/*:: type Props = {\n  children: ReactElement<any>,\n  cols: number,\n  containerWidth: number,\n  margin: [number, number],\n  containerPadding: [number, number],\n  rowHeight: number,\n  maxRows: number,\n  isDraggable: boolean,\n  isResizable: boolean,\n  isBounded: boolean,\n  static?: boolean,\n  useCSSTransforms?: boolean,\n  usePercentages?: boolean,\n  transformScale: number,\n  droppingPosition?: DroppingPosition,\n\n  className: string,\n  style?: Object,\n  // Draggability\n  cancel: string,\n  handle: string,\n\n  x: number,\n  y: number,\n  w: number,\n  h: number,\n\n  minW: number,\n  maxW: number,\n  minH: number,\n  maxH: number,\n  i: string,\n\n  resizeHandles?: ResizeHandleAxis[],\n  resizeHandle?: ResizeHandle,\n\n  onDrag?: GridItemCallback<GridDragEvent>,\n  onDragStart?: GridItemCallback<GridDragEvent>,\n  onDragStop?: GridItemCallback<GridDragEvent>,\n  onResize?: GridItemCallback<GridResizeEvent>,\n  onResizeStart?: GridItemCallback<GridResizeEvent>,\n  onResizeStop?: GridItemCallback<GridResizeEvent>\n};*/\n/*:: type DefaultProps = {\n  className: string,\n  cancel: string,\n  handle: string,\n  minH: number,\n  minW: number,\n  maxH: number,\n  maxW: number,\n  transformScale: number\n};*/\n/**\n * An individual item within a ReactGridLayout.\n */\nclass GridItem extends _react.default.Component /*:: <Props, State>*/{\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", {\n      resizing: null,\n      dragging: null,\n      className: \"\"\n    });\n    _defineProperty(this, \"elementRef\", /*#__PURE__*/_react.default.createRef());\n    /**\n     * onDragStart event handler\n     * @param  {Event}  e             event data\n     * @param  {Object} callbackData  an object with node, delta and position information\n     */\n    _defineProperty(this, \"onDragStart\", (e, _ref) => {\n      let {\n        node\n      } = _ref;\n      const {\n        onDragStart,\n        transformScale\n      } = this.props;\n      if (!onDragStart) return;\n      const newPosition /*: PartialPosition*/ = {\n        top: 0,\n        left: 0\n      };\n\n      // TODO: this wont work on nested parents\n      const {\n        offsetParent\n      } = node;\n      if (!offsetParent) return;\n      const parentRect = offsetParent.getBoundingClientRect();\n      const clientRect = node.getBoundingClientRect();\n      const cLeft = clientRect.left / transformScale;\n      const pLeft = parentRect.left / transformScale;\n      const cTop = clientRect.top / transformScale;\n      const pTop = parentRect.top / transformScale;\n      newPosition.left = cLeft - pLeft + offsetParent.scrollLeft;\n      newPosition.top = cTop - pTop + offsetParent.scrollTop;\n      this.setState({\n        dragging: newPosition\n      });\n\n      // Call callback with this data\n      const {\n        x,\n        y\n      } = (0, _calculateUtils.calcXY)(this.getPositionParams(), newPosition.top, newPosition.left, this.props.w, this.props.h);\n      return onDragStart.call(this, this.props.i, x, y, {\n        e,\n        node,\n        newPosition\n      });\n    });\n    /**\n     * onDrag event handler\n     * @param  {Event}  e             event data\n     * @param  {Object} callbackData  an object with node, delta and position information\n     */\n    _defineProperty(this, \"onDrag\", (e, _ref2) => {\n      let {\n        node,\n        deltaX,\n        deltaY\n      } = _ref2;\n      const {\n        onDrag\n      } = this.props;\n      if (!onDrag) return;\n      if (!this.state.dragging) {\n        throw new Error(\"onDrag called before onDragStart.\");\n      }\n      let top = this.state.dragging.top + deltaY;\n      let left = this.state.dragging.left + deltaX;\n      const {\n        isBounded,\n        i,\n        w,\n        h,\n        containerWidth\n      } = this.props;\n      const positionParams = this.getPositionParams();\n\n      // Boundary calculations; keeps items within the grid\n      if (isBounded) {\n        const {\n          offsetParent\n        } = node;\n        if (offsetParent) {\n          const {\n            margin,\n            rowHeight,\n            containerPadding\n          } = this.props;\n          const bottomBoundary = offsetParent.clientHeight - (0, _calculateUtils.calcGridItemWHPx)(h, rowHeight, margin[1]);\n          top = (0, _calculateUtils.clamp)(top - containerPadding[1], 0, bottomBoundary);\n          const colWidth = (0, _calculateUtils.calcGridColWidth)(positionParams);\n          const rightBoundary = containerWidth - (0, _calculateUtils.calcGridItemWHPx)(w, colWidth, margin[0]);\n          left = (0, _calculateUtils.clamp)(left - containerPadding[0], 0, rightBoundary);\n        }\n      }\n      const newPosition /*: PartialPosition*/ = {\n        top,\n        left\n      };\n      this.setState({\n        dragging: newPosition\n      });\n\n      // Call callback with this data\n      const {\n        containerPadding\n      } = this.props;\n      const {\n        x,\n        y\n      } = (0, _calculateUtils.calcXY)(positionParams, top - containerPadding[1], left - containerPadding[0], w, h);\n      return onDrag.call(this, i, x, y, {\n        e,\n        node,\n        newPosition\n      });\n    });\n    /**\n     * onDragStop event handler\n     * @param  {Event}  e             event data\n     * @param  {Object} callbackData  an object with node, delta and position information\n     */\n    _defineProperty(this, \"onDragStop\", (e, _ref3) => {\n      let {\n        node\n      } = _ref3;\n      const {\n        onDragStop\n      } = this.props;\n      if (!onDragStop) return;\n      if (!this.state.dragging) {\n        throw new Error(\"onDragEnd called before onDragStart.\");\n      }\n      const {\n        w,\n        h,\n        i,\n        containerPadding\n      } = this.props;\n      const {\n        left,\n        top\n      } = this.state.dragging;\n      const newPosition /*: PartialPosition*/ = {\n        top,\n        left\n      };\n      this.setState({\n        dragging: null\n      });\n      const {\n        x,\n        y\n      } = (0, _calculateUtils.calcXY)(this.getPositionParams(), top - containerPadding[1], left - containerPadding[0], w, h);\n      return onDragStop.call(this, i, x, y, {\n        e,\n        node,\n        newPosition\n      });\n    });\n    /**\n     * onResizeStop event handler\n     * @param  {Event}  e             event data\n     * @param  {Object} callbackData  an object with node and size information\n     */\n    _defineProperty(this, \"onResizeStop\", (e, callbackData, position) => this.onResizeHandler(e, callbackData, position, \"onResizeStop\"));\n    // onResizeStart event handler\n    _defineProperty(this, \"onResizeStart\", (e, callbackData, position) => this.onResizeHandler(e, callbackData, position, \"onResizeStart\"));\n    // onResize event handler\n    _defineProperty(this, \"onResize\", (e, callbackData, position) => this.onResizeHandler(e, callbackData, position, \"onResize\"));\n  }\n  shouldComponentUpdate(nextProps /*: Props*/, nextState /*: State*/) /*: boolean*/{\n    // We can't deeply compare children. If the developer memoizes them, we can\n    // use this optimization.\n    if (this.props.children !== nextProps.children) return true;\n    if (this.props.droppingPosition !== nextProps.droppingPosition) return true;\n    // TODO memoize these calculations so they don't take so long?\n    const oldPosition = (0, _calculateUtils.calcGridItemPosition)(this.getPositionParams(this.props), this.props.x, this.props.y, this.props.w, this.props.h, this.state);\n    const newPosition = (0, _calculateUtils.calcGridItemPosition)(this.getPositionParams(nextProps), nextProps.x, nextProps.y, nextProps.w, nextProps.h, nextState);\n    return !(0, _utils.fastPositionEqual)(oldPosition, newPosition) || this.props.useCSSTransforms !== nextProps.useCSSTransforms;\n  }\n  componentDidMount() {\n    this.moveDroppingItem({});\n  }\n  componentDidUpdate(prevProps /*: Props*/) {\n    this.moveDroppingItem(prevProps);\n  }\n\n  // When a droppingPosition is present, this means we should fire a move event, as if we had moved\n  // this element by `x, y` pixels.\n  moveDroppingItem(prevProps /*: Props*/) {\n    const {\n      droppingPosition\n    } = this.props;\n    if (!droppingPosition) return;\n    const node = this.elementRef.current;\n    // Can't find DOM node (are we unmounted?)\n    if (!node) return;\n    const prevDroppingPosition = prevProps.droppingPosition || {\n      left: 0,\n      top: 0\n    };\n    const {\n      dragging\n    } = this.state;\n    const shouldDrag = dragging && droppingPosition.left !== prevDroppingPosition.left || droppingPosition.top !== prevDroppingPosition.top;\n    if (!dragging) {\n      this.onDragStart(droppingPosition.e, {\n        node,\n        deltaX: droppingPosition.left,\n        deltaY: droppingPosition.top\n      });\n    } else if (shouldDrag) {\n      const deltaX = droppingPosition.left - dragging.left;\n      const deltaY = droppingPosition.top - dragging.top;\n      this.onDrag(droppingPosition.e, {\n        node,\n        deltaX,\n        deltaY\n      });\n    }\n  }\n  getPositionParams() /*: PositionParams*/{\n    let props /*: Props*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n    return {\n      cols: props.cols,\n      containerPadding: props.containerPadding,\n      containerWidth: props.containerWidth,\n      margin: props.margin,\n      maxRows: props.maxRows,\n      rowHeight: props.rowHeight\n    };\n  }\n\n  /**\n   * This is where we set the grid item's absolute placement. It gets a little tricky because we want to do it\n   * well when server rendering, and the only way to do that properly is to use percentage width/left because\n   * we don't know exactly what the browser viewport is.\n   * Unfortunately, CSS Transforms, which are great for performance, break in this instance because a percentage\n   * left is relative to the item itself, not its container! So we cannot use them on the server rendering pass.\n   *\n   * @param  {Object} pos Position object with width, height, left, top.\n   * @return {Object}     Style object.\n   */\n  createStyle(pos /*: Position*/) /*: { [key: string]: ?string }*/{\n    const {\n      usePercentages,\n      containerWidth,\n      useCSSTransforms\n    } = this.props;\n    let style;\n    // CSS Transforms support (default)\n    if (useCSSTransforms) {\n      style = (0, _utils.setTransform)(pos);\n    } else {\n      // top,left (slow)\n      style = (0, _utils.setTopLeft)(pos);\n\n      // This is used for server rendering.\n      if (usePercentages) {\n        style.left = (0, _utils.perc)(pos.left / containerWidth);\n        style.width = (0, _utils.perc)(pos.width / containerWidth);\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Mix a Draggable instance into a child.\n   * @param  {Element} child    Child element.\n   * @return {Element}          Child wrapped in Draggable.\n   */\n  mixinDraggable(child /*: ReactElement<any>*/, isDraggable /*: boolean*/) /*: ReactElement<any>*/{\n    return /*#__PURE__*/_react.default.createElement(_reactDraggable.DraggableCore, {\n      disabled: !isDraggable,\n      onStart: this.onDragStart,\n      onDrag: this.onDrag,\n      onStop: this.onDragStop,\n      handle: this.props.handle,\n      cancel: \".react-resizable-handle\" + (this.props.cancel ? \",\" + this.props.cancel : \"\"),\n      scale: this.props.transformScale,\n      nodeRef: this.elementRef\n    }, child);\n  }\n\n  /**\n   * Utility function to setup callback handler definitions for\n   * similarily structured resize events.\n   */\n  curryResizeHandler(position /*: Position*/, handler /*: Function*/) /*: Function*/{\n    return (e /*: Event*/, data /*: ResizeCallbackData*/) => /*: Function*/handler(e, data, position);\n  }\n\n  /**\n   * Mix a Resizable instance into a child.\n   * @param  {Element} child    Child element.\n   * @param  {Object} position  Position object (pixel values)\n   * @return {Element}          Child wrapped in Resizable.\n   */\n  mixinResizable(child /*: ReactElement<any>*/, position /*: Position*/, isResizable /*: boolean*/) /*: ReactElement<any>*/{\n    const {\n      cols,\n      minW,\n      minH,\n      maxW,\n      maxH,\n      transformScale,\n      resizeHandles,\n      resizeHandle\n    } = this.props;\n    const positionParams = this.getPositionParams();\n\n    // This is the max possible width - doesn't go to infinity because of the width of the window\n    const maxWidth = (0, _calculateUtils.calcGridItemPosition)(positionParams, 0, 0, cols, 0).width;\n\n    // Calculate min/max constraints using our min & maxes\n    const mins = (0, _calculateUtils.calcGridItemPosition)(positionParams, 0, 0, minW, minH);\n    const maxes = (0, _calculateUtils.calcGridItemPosition)(positionParams, 0, 0, maxW, maxH);\n    const minConstraints = [mins.width, mins.height];\n    const maxConstraints = [Math.min(maxes.width, maxWidth), Math.min(maxes.height, Infinity)];\n    return /*#__PURE__*/_react.default.createElement(_reactResizable.Resizable\n    // These are opts for the resize handle itself\n    , {\n      draggableOpts: {\n        disabled: !isResizable\n      },\n      className: isResizable ? undefined : \"react-resizable-hide\",\n      width: position.width,\n      height: position.height,\n      minConstraints: minConstraints,\n      maxConstraints: maxConstraints,\n      onResizeStop: this.curryResizeHandler(position, this.onResizeStop),\n      onResizeStart: this.curryResizeHandler(position, this.onResizeStart),\n      onResize: this.curryResizeHandler(position, this.onResize),\n      transformScale: transformScale,\n      resizeHandles: resizeHandles,\n      handle: resizeHandle\n    }, child);\n  }\n  /**\n   * Wrapper around resize events to provide more useful data.\n   */\n  onResizeHandler(e /*: Event*/, _ref4 /*:: */,\n  // 'size' is updated position\n  position /*: Position*/,\n  // existing position\n  handlerName /*: string*/) /*: void*/{\n    let {\n      node,\n      size,\n      handle\n    } /*: ResizeCallbackData*/ = _ref4 /*: ResizeCallbackData*/;\n    const handler = this.props[handlerName];\n    if (!handler) return;\n    const {\n      x,\n      y,\n      i,\n      maxH,\n      minH,\n      containerWidth\n    } = this.props;\n    const {\n      minW,\n      maxW\n    } = this.props;\n\n    // Clamping of dimensions based on resize direction\n    let updatedSize = size;\n    if (node) {\n      updatedSize = (0, _utils.resizeItemInDirection)(handle, position, size, containerWidth);\n      this.setState({\n        resizing: handlerName === \"onResizeStop\" ? null : updatedSize\n      });\n    }\n\n    // Get new XY based on pixel size\n    let {\n      w,\n      h\n    } = (0, _calculateUtils.calcWH)(this.getPositionParams(), updatedSize.width, updatedSize.height, x, y, handle);\n\n    // Min/max capping.\n    // minW should be at least 1 (TODO propTypes validation?)\n    w = (0, _calculateUtils.clamp)(w, Math.max(minW, 1), maxW);\n    h = (0, _calculateUtils.clamp)(h, minH, maxH);\n    handler.call(this, i, w, h, {\n      e,\n      node,\n      size: updatedSize,\n      handle\n    });\n  }\n  render() /*: ReactNode*/{\n    const {\n      x,\n      y,\n      w,\n      h,\n      isDraggable,\n      isResizable,\n      droppingPosition,\n      useCSSTransforms\n    } = this.props;\n    const pos = (0, _calculateUtils.calcGridItemPosition)(this.getPositionParams(), x, y, w, h, this.state);\n    const child = _react.default.Children.only(this.props.children);\n\n    // Create the child element. We clone the existing element but modify its className and style.\n    let newChild = /*#__PURE__*/_react.default.cloneElement(child, {\n      ref: this.elementRef,\n      className: (0, _clsx.default)(\"react-grid-item\", child.props.className, this.props.className, {\n        static: this.props.static,\n        resizing: Boolean(this.state.resizing),\n        \"react-draggable\": isDraggable,\n        \"react-draggable-dragging\": Boolean(this.state.dragging),\n        dropping: Boolean(droppingPosition),\n        cssTransforms: useCSSTransforms\n      }),\n      // We can set the width and height on the child, but unfortunately we can't set the position.\n      style: {\n        ...this.props.style,\n        ...child.props.style,\n        ...this.createStyle(pos)\n      }\n    });\n\n    // Resizable support. This is usually on but the user can toggle it off.\n    newChild = this.mixinResizable(newChild, pos, isResizable);\n\n    // Draggable support. This is always on, except for with placeholders.\n    newChild = this.mixinDraggable(newChild, isDraggable);\n    return newChild;\n  }\n}\nexports.default = GridItem;\n_defineProperty(GridItem, \"propTypes\", {\n  // Children must be only a single element\n  children: _propTypes.default.element,\n  // General grid attributes\n  cols: _propTypes.default.number.isRequired,\n  containerWidth: _propTypes.default.number.isRequired,\n  rowHeight: _propTypes.default.number.isRequired,\n  margin: _propTypes.default.array.isRequired,\n  maxRows: _propTypes.default.number.isRequired,\n  containerPadding: _propTypes.default.array.isRequired,\n  // These are all in grid units\n  x: _propTypes.default.number.isRequired,\n  y: _propTypes.default.number.isRequired,\n  w: _propTypes.default.number.isRequired,\n  h: _propTypes.default.number.isRequired,\n  // All optional\n  minW: function (props /*: Props*/, propName /*: string*/) {\n    const value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"minWidth not Number\");\n    if (value > props.w || value > props.maxW) return new Error(\"minWidth larger than item width/maxWidth\");\n  },\n  maxW: function (props /*: Props*/, propName /*: string*/) {\n    const value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"maxWidth not Number\");\n    if (value < props.w || value < props.minW) return new Error(\"maxWidth smaller than item width/minWidth\");\n  },\n  minH: function (props /*: Props*/, propName /*: string*/) {\n    const value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"minHeight not Number\");\n    if (value > props.h || value > props.maxH) return new Error(\"minHeight larger than item height/maxHeight\");\n  },\n  maxH: function (props /*: Props*/, propName /*: string*/) {\n    const value = props[propName];\n    if (typeof value !== \"number\") return new Error(\"maxHeight not Number\");\n    if (value < props.h || value < props.minH) return new Error(\"maxHeight smaller than item height/minHeight\");\n  },\n  // ID is nice to have for callbacks\n  i: _propTypes.default.string.isRequired,\n  // Resize handle options\n  resizeHandles: _ReactGridLayoutPropTypes.resizeHandleAxesType,\n  resizeHandle: _ReactGridLayoutPropTypes.resizeHandleType,\n  // Functions\n  onDragStop: _propTypes.default.func,\n  onDragStart: _propTypes.default.func,\n  onDrag: _propTypes.default.func,\n  onResizeStop: _propTypes.default.func,\n  onResizeStart: _propTypes.default.func,\n  onResize: _propTypes.default.func,\n  // Flags\n  isDraggable: _propTypes.default.bool.isRequired,\n  isResizable: _propTypes.default.bool.isRequired,\n  isBounded: _propTypes.default.bool.isRequired,\n  static: _propTypes.default.bool,\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes.default.bool.isRequired,\n  transformScale: _propTypes.default.number,\n  // Others\n  className: _propTypes.default.string,\n  // Selector for draggable handle\n  handle: _propTypes.default.string,\n  // Selector for draggable cancel (see react-draggable)\n  cancel: _propTypes.default.string,\n  // Current position of a dropping element\n  droppingPosition: _propTypes.default.shape({\n    e: _propTypes.default.object.isRequired,\n    left: _propTypes.default.number.isRequired,\n    top: _propTypes.default.number.isRequired\n  })\n});\n_defineProperty(GridItem, \"defaultProps\", {\n  className: \"\",\n  cancel: \"\",\n  handle: \"\",\n  minH: 1,\n  minW: 1,\n  maxH: Infinity,\n  maxW: Infinity,\n  transformScale: 1\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _fastEquals = require(\"fast-equals\");\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _utils = require(\"./utils\");\nvar _calculateUtils = require(\"./calculateUtils\");\nvar _GridItem = _interopRequireDefault(require(\"./GridItem\"));\nvar _ReactGridLayoutPropTypes = _interopRequireDefault(require(\"./ReactGridLayoutPropTypes\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*:: import type {\n  ChildrenArray as ReactChildrenArray,\n  Element as ReactElement\n} from \"react\";*/\n/*:: import type {\n  CompactType,\n  GridResizeEvent,\n  GridDragEvent,\n  DragOverEvent,\n  Layout,\n  DroppingPosition,\n  LayoutItem\n} from \"./utils\";*/\n// Types\n/*:: import type { PositionParams } from \"./calculateUtils\";*/\n/*:: type State = {\n  activeDrag: ?LayoutItem,\n  layout: Layout,\n  mounted: boolean,\n  oldDragItem: ?LayoutItem,\n  oldLayout: ?Layout,\n  oldResizeItem: ?LayoutItem,\n  resizing: boolean,\n  droppingDOMNode: ?ReactElement<any>,\n  droppingPosition?: DroppingPosition,\n  // Mirrored props\n  children: ReactChildrenArray<ReactElement<any>>,\n  compactType?: CompactType,\n  propsLayout?: Layout\n};*/\n/*:: import type { Props, DefaultProps } from \"./ReactGridLayoutPropTypes\";*/\n// End Types\nconst layoutClassName = \"react-grid-layout\";\nlet isFirefox = false;\n// Try...catch will protect from navigator not existing (e.g. node) or a bad implementation of navigator\ntry {\n  isFirefox = /firefox/i.test(navigator.userAgent);\n} catch (e) {\n  /* Ignore */\n}\n\n/**\n * A reactive, fluid grid layout with draggable, resizable components.\n */\n\nclass ReactGridLayout extends React.Component /*:: <Props, State>*/{\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", {\n      activeDrag: null,\n      layout: (0, _utils.synchronizeLayoutWithChildren)(this.props.layout, this.props.children, this.props.cols,\n      // Legacy support for verticalCompact: false\n      (0, _utils.compactType)(this.props), this.props.allowOverlap),\n      mounted: false,\n      oldDragItem: null,\n      oldLayout: null,\n      oldResizeItem: null,\n      resizing: false,\n      droppingDOMNode: null,\n      children: []\n    });\n    _defineProperty(this, \"dragEnterCounter\", 0);\n    /**\n     * When dragging starts\n     * @param {String} i Id of the child\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDragStart\", (i /*: string*/, x /*: number*/, y /*: number*/, _ref /*:: */) => {\n      let {\n        e,\n        node\n      } /*: GridDragEvent*/ = _ref /*: GridDragEvent*/;\n      const {\n        layout\n      } = this.state;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Create placeholder (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        placeholder: true,\n        i: i\n      };\n      this.setState({\n        oldDragItem: (0, _utils.cloneLayoutItem)(l),\n        oldLayout: layout,\n        activeDrag: placeholder\n      });\n      return this.props.onDragStart(layout, l, l, null, e, node);\n    });\n    /**\n     * Each drag movement create a new dragelement and move the element to the dragged location\n     * @param {String} i Id of the child\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDrag\", (i, x, y, _ref2) => {\n      let {\n        e,\n        node\n      } = _ref2;\n      const {\n        oldDragItem\n      } = this.state;\n      let {\n        layout\n      } = this.state;\n      const {\n        cols,\n        allowOverlap,\n        preventCollision\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Create placeholder (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        placeholder: true,\n        i: i\n      };\n\n      // Move the element to the dragged location.\n      const isUserAction = true;\n      layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n      this.props.onDrag(layout, oldDragItem, l, placeholder, e, node);\n      this.setState({\n        layout: allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols),\n        activeDrag: placeholder\n      });\n    });\n    /**\n     * When dragging stops, figure out which position the element is closest to and update its x and y.\n     * @param  {String} i Index of the child.\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDragStop\", (i, x, y, _ref3) => {\n      let {\n        e,\n        node\n      } = _ref3;\n      if (!this.state.activeDrag) return;\n      const {\n        oldDragItem\n      } = this.state;\n      let {\n        layout\n      } = this.state;\n      const {\n        cols,\n        preventCollision,\n        allowOverlap\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Move the element here\n      const isUserAction = true;\n      layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n\n      // Set state\n      const newLayout = allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols);\n      this.props.onDragStop(newLayout, oldDragItem, l, null, e, node);\n      const {\n        oldLayout\n      } = this.state;\n      this.setState({\n        activeDrag: null,\n        layout: newLayout,\n        oldDragItem: null,\n        oldLayout: null\n      });\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    });\n    _defineProperty(this, \"onResizeStart\", (i, w, h, _ref4) => {\n      let {\n        e,\n        node\n      } = _ref4;\n      const {\n        layout\n      } = this.state;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n      this.setState({\n        oldResizeItem: (0, _utils.cloneLayoutItem)(l),\n        oldLayout: this.state.layout,\n        resizing: true\n      });\n      this.props.onResizeStart(layout, l, l, null, e, node);\n    });\n    _defineProperty(this, \"onResize\", (i, w, h, _ref5) => {\n      let {\n        e,\n        node,\n        size,\n        handle\n      } = _ref5;\n      const {\n        oldResizeItem\n      } = this.state;\n      const {\n        layout\n      } = this.state;\n      const {\n        cols,\n        preventCollision,\n        allowOverlap\n      } = this.props;\n      let shouldMoveItem = false;\n      let finalLayout;\n      let x;\n      let y;\n      const [newLayout, l] = (0, _utils.withLayoutItem)(layout, i, l => {\n        let hasCollisions;\n        x = l.x;\n        y = l.y;\n        if ([\"sw\", \"w\", \"nw\", \"n\", \"ne\"].indexOf(handle) !== -1) {\n          if ([\"sw\", \"nw\", \"w\"].indexOf(handle) !== -1) {\n            x = l.x + (l.w - w);\n            w = l.x !== x && x < 0 ? l.w : w;\n            x = x < 0 ? 0 : x;\n          }\n          if ([\"ne\", \"n\", \"nw\"].indexOf(handle) !== -1) {\n            y = l.y + (l.h - h);\n            h = l.y !== y && y < 0 ? l.h : h;\n            y = y < 0 ? 0 : y;\n          }\n          shouldMoveItem = true;\n        }\n\n        // Something like quad tree should be used\n        // to find collisions faster\n        if (preventCollision && !allowOverlap) {\n          const collisions = (0, _utils.getAllCollisions)(layout, {\n            ...l,\n            w,\n            h,\n            x,\n            y\n          }).filter(layoutItem => layoutItem.i !== l.i);\n          hasCollisions = collisions.length > 0;\n\n          // If we're colliding, we need adjust the placeholder.\n          if (hasCollisions) {\n            // Reset layoutItem dimensions if there were collisions\n            y = l.y;\n            h = l.h;\n            x = l.x;\n            w = l.w;\n            shouldMoveItem = false;\n          }\n        }\n        l.w = w;\n        l.h = h;\n        return l;\n      });\n\n      // Shouldn't ever happen, but typechecking makes it necessary\n      if (!l) return;\n      finalLayout = newLayout;\n      if (shouldMoveItem) {\n        // Move the element to the new position.\n        const isUserAction = true;\n        finalLayout = (0, _utils.moveElement)(newLayout, l, x, y, isUserAction, this.props.preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n      }\n\n      // Create placeholder element (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        static: true,\n        i: i\n      };\n      this.props.onResize(finalLayout, oldResizeItem, l, placeholder, e, node);\n\n      // Re-compact the newLayout and set the drag placeholder.\n      this.setState({\n        layout: allowOverlap ? finalLayout : (0, _utils.compact)(finalLayout, (0, _utils.compactType)(this.props), cols),\n        activeDrag: placeholder\n      });\n    });\n    _defineProperty(this, \"onResizeStop\", (i, w, h, _ref6) => {\n      let {\n        e,\n        node\n      } = _ref6;\n      const {\n        layout,\n        oldResizeItem\n      } = this.state;\n      const {\n        cols,\n        allowOverlap\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n\n      // Set state\n      const newLayout = allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols);\n      this.props.onResizeStop(newLayout, oldResizeItem, l, null, e, node);\n      const {\n        oldLayout\n      } = this.state;\n      this.setState({\n        activeDrag: null,\n        layout: newLayout,\n        oldResizeItem: null,\n        oldLayout: null,\n        resizing: false\n      });\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    });\n    // Called while dragging an element. Part of browser native drag/drop API.\n    // Native event target might be the layout itself, or an element within the layout.\n    _defineProperty(this, \"onDragOver\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n\n      // we should ignore events from layout's children in Firefox\n      // to avoid unpredictable jumping of a dropping placeholder\n      // FIXME remove this hack\n      if (isFirefox &&\n      // $FlowIgnore can't figure this out\n      !e.nativeEvent.target?.classList.contains(layoutClassName)) {\n        return false;\n      }\n      const {\n        droppingItem,\n        onDropDragOver,\n        margin,\n        cols,\n        rowHeight,\n        maxRows,\n        width,\n        containerPadding,\n        transformScale\n      } = this.props;\n      // Allow user to customize the dropping item or short-circuit the drop based on the results\n      // of the `onDragOver(e: Event)` callback.\n      const onDragOverResult = onDropDragOver?.(e);\n      if (onDragOverResult === false) {\n        if (this.state.droppingDOMNode) {\n          this.removeDroppingPlaceholder();\n        }\n        return false;\n      }\n      const finalDroppingItem = {\n        ...droppingItem,\n        ...onDragOverResult\n      };\n      const {\n        layout\n      } = this.state;\n\n      // $FlowIgnore missing def\n      const gridRect = e.currentTarget.getBoundingClientRect(); // The grid's position in the viewport\n\n      // Calculate the mouse position relative to the grid\n      const layerX = e.clientX - gridRect.left;\n      const layerY = e.clientY - gridRect.top;\n      const droppingPosition = {\n        left: layerX / transformScale,\n        top: layerY / transformScale,\n        e\n      };\n      if (!this.state.droppingDOMNode) {\n        const positionParams /*: PositionParams*/ = {\n          cols,\n          margin,\n          maxRows,\n          rowHeight,\n          containerWidth: width,\n          containerPadding: containerPadding || margin\n        };\n        const calculatedPosition = (0, _calculateUtils.calcXY)(positionParams, layerY, layerX, finalDroppingItem.w, finalDroppingItem.h);\n        this.setState({\n          droppingDOMNode: /*#__PURE__*/React.createElement(\"div\", {\n            key: finalDroppingItem.i\n          }),\n          droppingPosition,\n          layout: [...layout, {\n            ...finalDroppingItem,\n            x: calculatedPosition.x,\n            y: calculatedPosition.y,\n            static: false,\n            isDraggable: true\n          }]\n        });\n      } else if (this.state.droppingPosition) {\n        const {\n          left,\n          top\n        } = this.state.droppingPosition;\n        const shouldUpdatePosition = left != layerX || top != layerY;\n        if (shouldUpdatePosition) {\n          this.setState({\n            droppingPosition\n          });\n        }\n      }\n    });\n    _defineProperty(this, \"removeDroppingPlaceholder\", () => {\n      const {\n        droppingItem,\n        cols\n      } = this.props;\n      const {\n        layout\n      } = this.state;\n      const newLayout = (0, _utils.compact)(layout.filter(l => l.i !== droppingItem.i), (0, _utils.compactType)(this.props), cols, this.props.allowOverlap);\n      this.setState({\n        layout: newLayout,\n        droppingDOMNode: null,\n        activeDrag: null,\n        droppingPosition: undefined\n      });\n    });\n    _defineProperty(this, \"onDragLeave\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      this.dragEnterCounter--;\n\n      // onDragLeave can be triggered on each layout's child.\n      // But we know that count of dragEnter and dragLeave events\n      // will be balanced after leaving the layout's container\n      // so we can increase and decrease count of dragEnter and\n      // when it'll be equal to 0 we'll remove the placeholder\n      if (this.dragEnterCounter === 0) {\n        this.removeDroppingPlaceholder();\n      }\n    });\n    _defineProperty(this, \"onDragEnter\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      this.dragEnterCounter++;\n    });\n    _defineProperty(this, \"onDrop\", (e /*: Event*/) => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      const {\n        droppingItem\n      } = this.props;\n      const {\n        layout\n      } = this.state;\n      const item = layout.find(l => l.i === droppingItem.i);\n\n      // reset dragEnter counter on drop\n      this.dragEnterCounter = 0;\n      this.removeDroppingPlaceholder();\n      this.props.onDrop(layout, item, e);\n    });\n  }\n  componentDidMount() {\n    this.setState({\n      mounted: true\n    });\n    // Possibly call back with layout on mount. This should be done after correcting the layout width\n    // to ensure we don't rerender with the wrong width.\n    this.onLayoutMaybeChanged(this.state.layout, this.props.layout);\n  }\n  static getDerivedStateFromProps(nextProps /*: Props*/, prevState /*: State*/) /*: $Shape<State> | null*/{\n    let newLayoutBase;\n    if (prevState.activeDrag) {\n      return null;\n    }\n\n    // Legacy support for compactType\n    // Allow parent to set layout directly.\n    if (!(0, _fastEquals.deepEqual)(nextProps.layout, prevState.propsLayout) || nextProps.compactType !== prevState.compactType) {\n      newLayoutBase = nextProps.layout;\n    } else if (!(0, _utils.childrenEqual)(nextProps.children, prevState.children)) {\n      // If children change, also regenerate the layout. Use our state\n      // as the base in case because it may be more up to date than\n      // what is in props.\n      newLayoutBase = prevState.layout;\n    }\n\n    // We need to regenerate the layout.\n    if (newLayoutBase) {\n      const newLayout = (0, _utils.synchronizeLayoutWithChildren)(newLayoutBase, nextProps.children, nextProps.cols, (0, _utils.compactType)(nextProps), nextProps.allowOverlap);\n      return {\n        layout: newLayout,\n        // We need to save these props to state for using\n        // getDerivedStateFromProps instead of componentDidMount (in which we would get extra rerender)\n        compactType: nextProps.compactType,\n        children: nextProps.children,\n        propsLayout: nextProps.layout\n      };\n    }\n    return null;\n  }\n  shouldComponentUpdate(nextProps /*: Props*/, nextState /*: State*/) /*: boolean*/{\n    return (\n      // NOTE: this is almost always unequal. Therefore the only way to get better performance\n      // from SCU is if the user intentionally memoizes children. If they do, and they can\n      // handle changes properly, performance will increase.\n      this.props.children !== nextProps.children || !(0, _utils.fastRGLPropsEqual)(this.props, nextProps, _fastEquals.deepEqual) || this.state.activeDrag !== nextState.activeDrag || this.state.mounted !== nextState.mounted || this.state.droppingPosition !== nextState.droppingPosition\n    );\n  }\n  componentDidUpdate(prevProps /*: Props*/, prevState /*: State*/) {\n    if (!this.state.activeDrag) {\n      const newLayout = this.state.layout;\n      const oldLayout = prevState.layout;\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    }\n  }\n\n  /**\n   * Calculates a pixel value for the container.\n   * @return {String} Container height in pixels.\n   */\n  containerHeight() /*: ?string*/{\n    if (!this.props.autoSize) return;\n    const nbRow = (0, _utils.bottom)(this.state.layout);\n    const containerPaddingY = this.props.containerPadding ? this.props.containerPadding[1] : this.props.margin[1];\n    return nbRow * this.props.rowHeight + (nbRow - 1) * this.props.margin[1] + containerPaddingY * 2 + \"px\";\n  }\n  onLayoutMaybeChanged(newLayout /*: Layout*/, oldLayout /*: ?Layout*/) {\n    if (!oldLayout) oldLayout = this.state.layout;\n    if (!(0, _fastEquals.deepEqual)(oldLayout, newLayout)) {\n      this.props.onLayoutChange(newLayout);\n    }\n  }\n  /**\n   * Create a placeholder object.\n   * @return {Element} Placeholder div.\n   */\n  placeholder() /*: ?ReactElement<any>*/{\n    const {\n      activeDrag\n    } = this.state;\n    if (!activeDrag) return null;\n    const {\n      width,\n      cols,\n      margin,\n      containerPadding,\n      rowHeight,\n      maxRows,\n      useCSSTransforms,\n      transformScale\n    } = this.props;\n\n    // {...this.state.activeDrag} is pretty slow, actually\n    return /*#__PURE__*/React.createElement(_GridItem.default, {\n      w: activeDrag.w,\n      h: activeDrag.h,\n      x: activeDrag.x,\n      y: activeDrag.y,\n      i: activeDrag.i,\n      className: `react-grid-placeholder ${this.state.resizing ? \"placeholder-resizing\" : \"\"}`,\n      containerWidth: width,\n      cols: cols,\n      margin: margin,\n      containerPadding: containerPadding || margin,\n      maxRows: maxRows,\n      rowHeight: rowHeight,\n      isDraggable: false,\n      isResizable: false,\n      isBounded: false,\n      useCSSTransforms: useCSSTransforms,\n      transformScale: transformScale\n    }, /*#__PURE__*/React.createElement(\"div\", null));\n  }\n\n  /**\n   * Given a grid item, set its style attributes & surround in a <Draggable>.\n   * @param  {Element} child React element.\n   * @return {Element}       Element wrapped in draggable and properly placed.\n   */\n  processGridItem(child /*: ReactElement<any>*/, isDroppingItem /*: boolean*/) /*: ?ReactElement<any>*/{\n    if (!child || !child.key) return;\n    const l = (0, _utils.getLayoutItem)(this.state.layout, String(child.key));\n    if (!l) return null;\n    const {\n      width,\n      cols,\n      margin,\n      containerPadding,\n      rowHeight,\n      maxRows,\n      isDraggable,\n      isResizable,\n      isBounded,\n      useCSSTransforms,\n      transformScale,\n      draggableCancel,\n      draggableHandle,\n      resizeHandles,\n      resizeHandle\n    } = this.props;\n    const {\n      mounted,\n      droppingPosition\n    } = this.state;\n\n    // Determine user manipulations possible.\n    // If an item is static, it can't be manipulated by default.\n    // Any properties defined directly on the grid item will take precedence.\n    const draggable = typeof l.isDraggable === \"boolean\" ? l.isDraggable : !l.static && isDraggable;\n    const resizable = typeof l.isResizable === \"boolean\" ? l.isResizable : !l.static && isResizable;\n    const resizeHandlesOptions = l.resizeHandles || resizeHandles;\n\n    // isBounded set on child if set on parent, and child is not explicitly false\n    const bounded = draggable && isBounded && l.isBounded !== false;\n    return /*#__PURE__*/React.createElement(_GridItem.default, {\n      containerWidth: width,\n      cols: cols,\n      margin: margin,\n      containerPadding: containerPadding || margin,\n      maxRows: maxRows,\n      rowHeight: rowHeight,\n      cancel: draggableCancel,\n      handle: draggableHandle,\n      onDragStop: this.onDragStop,\n      onDragStart: this.onDragStart,\n      onDrag: this.onDrag,\n      onResizeStart: this.onResizeStart,\n      onResize: this.onResize,\n      onResizeStop: this.onResizeStop,\n      isDraggable: draggable,\n      isResizable: resizable,\n      isBounded: bounded,\n      useCSSTransforms: useCSSTransforms && mounted,\n      usePercentages: !mounted,\n      transformScale: transformScale,\n      w: l.w,\n      h: l.h,\n      x: l.x,\n      y: l.y,\n      i: l.i,\n      minH: l.minH,\n      minW: l.minW,\n      maxH: l.maxH,\n      maxW: l.maxW,\n      static: l.static,\n      droppingPosition: isDroppingItem ? droppingPosition : undefined,\n      resizeHandles: resizeHandlesOptions,\n      resizeHandle: resizeHandle\n    }, child);\n  }\n  render() /*: React.Element<\"div\">*/{\n    const {\n      className,\n      style,\n      isDroppable,\n      innerRef\n    } = this.props;\n    const mergedClassName = (0, _clsx.default)(layoutClassName, className);\n    const mergedStyle = {\n      height: this.containerHeight(),\n      ...style\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: innerRef,\n      className: mergedClassName,\n      style: mergedStyle,\n      onDrop: isDroppable ? this.onDrop : _utils.noop,\n      onDragLeave: isDroppable ? this.onDragLeave : _utils.noop,\n      onDragEnter: isDroppable ? this.onDragEnter : _utils.noop,\n      onDragOver: isDroppable ? this.onDragOver : _utils.noop\n    }, React.Children.map(this.props.children, child => this.processGridItem(child)), isDroppable && this.state.droppingDOMNode && this.processGridItem(this.state.droppingDOMNode, true), this.placeholder());\n  }\n}\nexports.default = ReactGridLayout;\n// TODO publish internal ReactClass displayName transform\n_defineProperty(ReactGridLayout, \"displayName\", \"ReactGridLayout\");\n// Refactored to another module to make way for preval\n_defineProperty(ReactGridLayout, \"propTypes\", _ReactGridLayoutPropTypes.default);\n_defineProperty(ReactGridLayout, \"defaultProps\", {\n  autoSize: true,\n  cols: 12,\n  className: \"\",\n  style: {},\n  draggableHandle: \"\",\n  draggableCancel: \"\",\n  containerPadding: null,\n  rowHeight: 150,\n  maxRows: Infinity,\n  // infinite vertical growth\n  layout: [],\n  margin: [10, 10],\n  isBounded: false,\n  isDraggable: true,\n  isResizable: true,\n  allowOverlap: false,\n  isDroppable: false,\n  useCSSTransforms: true,\n  transformScale: 1,\n  verticalCompact: true,\n  compactType: \"vertical\",\n  preventCollision: false,\n  droppingItem: {\n    i: \"__dropping-elem__\",\n    h: 1,\n    w: 1\n  },\n  resizeHandles: [\"se\"],\n  onLayoutChange: _utils.noop,\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragStop: _utils.noop,\n  onResizeStart: _utils.noop,\n  onResize: _utils.noop,\n  onResizeStop: _utils.noop,\n  onDrop: _utils.noop,\n  onDropDragOver: _utils.noop\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findOrGenerateResponsiveLayout = findOrGenerateResponsiveLayout;\nexports.getBreakpointFromWidth = getBreakpointFromWidth;\nexports.getColsFromBreakpoint = getColsFromBreakpoint;\nexports.sortBreakpoints = sortBreakpoints;\nvar _utils = require(\"./utils\");\n/*:: import type { CompactType, Layout } from \"./utils\";*/\n/*:: export type Breakpoint = string;*/\n/*:: export type DefaultBreakpoints = \"lg\" | \"md\" | \"sm\" | \"xs\" | \"xxs\";*/\n/*:: export type ResponsiveLayout<T: Breakpoint> = {\n  +[breakpoint: T]: Layout\n};*/\n// + indicates read-only\n/*:: export type Breakpoints<T: Breakpoint> = {\n  +[breakpoint: T]: number\n};*/\n/*:: export type OnLayoutChangeCallback = (\n  Layout,\n  { [key: Breakpoint]: Layout }\n) => void;*/\n/**\n * Given a width, find the highest breakpoint that matches is valid for it (width > breakpoint).\n *\n * @param  {Object} breakpoints Breakpoints object (e.g. {lg: 1200, md: 960, ...})\n * @param  {Number} width Screen width.\n * @return {String}       Highest breakpoint that is less than width.\n */\nfunction getBreakpointFromWidth(breakpoints /*: Breakpoints<Breakpoint>*/, width /*: number*/) /*: Breakpoint*/{\n  const sorted = sortBreakpoints(breakpoints);\n  let matching = sorted[0];\n  for (let i = 1, len = sorted.length; i < len; i++) {\n    const breakpointName = sorted[i];\n    if (width > breakpoints[breakpointName]) matching = breakpointName;\n  }\n  return matching;\n}\n\n/**\n * Given a breakpoint, get the # of cols set for it.\n * @param  {String} breakpoint Breakpoint name.\n * @param  {Object} cols       Map of breakpoints to cols.\n * @return {Number}            Number of cols.\n */\nfunction getColsFromBreakpoint(breakpoint /*: Breakpoint*/, cols /*: Breakpoints<Breakpoint>*/) /*: number*/{\n  if (!cols[breakpoint]) {\n    throw new Error(\"ResponsiveReactGridLayout: `cols` entry for breakpoint \" + breakpoint + \" is missing!\");\n  }\n  return cols[breakpoint];\n}\n\n/**\n * Given existing layouts and a new breakpoint, find or generate a new layout.\n *\n * This finds the layout above the new one and generates from it, if it exists.\n *\n * @param  {Object} layouts     Existing layouts.\n * @param  {Array} breakpoints All breakpoints.\n * @param  {String} breakpoint New breakpoint.\n * @param  {String} breakpoint Last breakpoint (for fallback).\n * @param  {Number} cols       Column count at new breakpoint.\n * @param  {Boolean} verticalCompact Whether or not to compact the layout\n *   vertically.\n * @return {Array}             New layout.\n */\nfunction findOrGenerateResponsiveLayout(layouts /*: ResponsiveLayout<Breakpoint>*/, breakpoints /*: Breakpoints<Breakpoint>*/, breakpoint /*: Breakpoint*/, lastBreakpoint /*: Breakpoint*/, cols /*: number*/, compactType /*: CompactType*/) /*: Layout*/{\n  // If it already exists, just return it.\n  if (layouts[breakpoint]) return (0, _utils.cloneLayout)(layouts[breakpoint]);\n  // Find or generate the next layout\n  let layout = layouts[lastBreakpoint];\n  const breakpointsSorted = sortBreakpoints(breakpoints);\n  const breakpointsAbove = breakpointsSorted.slice(breakpointsSorted.indexOf(breakpoint));\n  for (let i = 0, len = breakpointsAbove.length; i < len; i++) {\n    const b = breakpointsAbove[i];\n    if (layouts[b]) {\n      layout = layouts[b];\n      break;\n    }\n  }\n  layout = (0, _utils.cloneLayout)(layout || []); // clone layout so we don't modify existing items\n  return (0, _utils.compact)((0, _utils.correctBounds)(layout, {\n    cols: cols\n  }), compactType, cols);\n}\n\n/**\n * Given breakpoints, return an array of breakpoints sorted by width. This is usually\n * e.g. ['xxs', 'xs', 'sm', ...]\n *\n * @param  {Object} breakpoints Key/value pair of breakpoint names to widths.\n * @return {Array}              Sorted breakpoints.\n */\nfunction sortBreakpoints(breakpoints /*: Breakpoints<Breakpoint>*/) /*: Array<Breakpoint>*/{\n  const keys /*: Array<string>*/ = Object.keys(breakpoints);\n  return keys.sort(function (a, b) {\n    return breakpoints[a] - breakpoints[b];\n  });\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _fastEquals = require(\"fast-equals\");\nvar _utils = require(\"./utils\");\nvar _responsiveUtils = require(\"./responsiveUtils\");\nvar _ReactGridLayout = _interopRequireDefault(require(\"./ReactGridLayout\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); } /*:: import { type Layout, type Pick } from \"./utils\";*/ /*:: import { type ResponsiveLayout, type OnLayoutChangeCallback, type Breakpoints } from \"./responsiveUtils\";*/\n// $FlowFixMe[method-unbinding]\nconst type = obj => Object.prototype.toString.call(obj);\n\n/**\n * Get a value of margin or containerPadding.\n *\n * @param  {Array | Object} param Margin | containerPadding, e.g. [10, 10] | {lg: [10, 10], ...}.\n * @param  {String} breakpoint   Breakpoint: lg, md, sm, xs and etc.\n * @return {Array}\n */\nfunction getIndentationValue /*:: <T: ?[number, number]>*/(param /*: { [key: string]: T } | T*/, breakpoint /*: string*/) /*: T*/{\n  // $FlowIgnore TODO fix this typedef\n  if (param == null) return null;\n  // $FlowIgnore TODO fix this typedef\n  return Array.isArray(param) ? param : param[breakpoint];\n}\n/*:: type State = {\n  layout: Layout,\n  breakpoint: string,\n  cols: number,\n  layouts?: ResponsiveLayout<string>\n};*/\n/*:: type Props<Breakpoint: string = string> = {|\n  ...React.ElementConfig<typeof ReactGridLayout>,\n\n  // Responsive config\n  breakpoint?: ?Breakpoint,\n  breakpoints: Breakpoints<Breakpoint>,\n  cols: { [key: Breakpoint]: number },\n  layouts: ResponsiveLayout<Breakpoint>,\n  width: number,\n  margin: { [key: Breakpoint]: [number, number] } | [number, number],\n  /* prettier-ignore *-/\n  containerPadding: { [key: Breakpoint]: ?[number, number] } | ?[number, number],\n\n  // Callbacks\n  onBreakpointChange: (Breakpoint, cols: number) => void,\n  onLayoutChange: OnLayoutChangeCallback,\n  onWidthChange: (\n    containerWidth: number,\n    margin: [number, number],\n    cols: number,\n    containerPadding: ?[number, number]\n  ) => void\n|};*/\n/*:: type DefaultProps = Pick<\n  Props<>,\n  {|\n    allowOverlap: 0,\n    breakpoints: 0,\n    cols: 0,\n    containerPadding: 0,\n    layouts: 0,\n    margin: 0,\n    onBreakpointChange: 0,\n    onLayoutChange: 0,\n    onWidthChange: 0\n  |}\n>;*/\nclass ResponsiveReactGridLayout extends React.Component\n/*:: <\n  Props<>,\n  State\n>*/\n{\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", this.generateInitialState());\n    // wrap layouts so we do not need to pass layouts to child\n    _defineProperty(this, \"onLayoutChange\", (layout /*: Layout*/) => {\n      this.props.onLayoutChange(layout, {\n        ...this.props.layouts,\n        [this.state.breakpoint]: layout\n      });\n    });\n  }\n  generateInitialState() /*: State*/{\n    const {\n      width,\n      breakpoints,\n      layouts,\n      cols\n    } = this.props;\n    const breakpoint = (0, _responsiveUtils.getBreakpointFromWidth)(breakpoints, width);\n    const colNo = (0, _responsiveUtils.getColsFromBreakpoint)(breakpoint, cols);\n    // verticalCompact compatibility, now deprecated\n    const compactType = this.props.verticalCompact === false ? null : this.props.compactType;\n    // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\n    // for this layout.\n    const initialLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, breakpoint, breakpoint, colNo, compactType);\n    return {\n      layout: initialLayout,\n      breakpoint: breakpoint,\n      cols: colNo\n    };\n  }\n  static getDerivedStateFromProps(nextProps /*: Props<*>*/, prevState /*: State*/) /*: ?$Shape<State>*/{\n    if (!(0, _fastEquals.deepEqual)(nextProps.layouts, prevState.layouts)) {\n      // Allow parent to set layouts directly.\n      const {\n        breakpoint,\n        cols\n      } = prevState;\n\n      // Since we're setting an entirely new layout object, we must generate a new responsive layout\n      // if one does not exist.\n      const newLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(nextProps.layouts, nextProps.breakpoints, breakpoint, breakpoint, cols, nextProps.compactType);\n      return {\n        layout: newLayout,\n        layouts: nextProps.layouts\n      };\n    }\n    return null;\n  }\n  componentDidUpdate(prevProps /*: Props<*>*/) {\n    // Allow parent to set width or breakpoint directly.\n    if (this.props.width != prevProps.width || this.props.breakpoint !== prevProps.breakpoint || !(0, _fastEquals.deepEqual)(this.props.breakpoints, prevProps.breakpoints) || !(0, _fastEquals.deepEqual)(this.props.cols, prevProps.cols)) {\n      this.onWidthChange(prevProps);\n    }\n  }\n  /**\n   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\n   * Width changes are necessary to figure out the widget widths.\n   */\n  onWidthChange(prevProps /*: Props<*>*/) {\n    const {\n      breakpoints,\n      cols,\n      layouts,\n      compactType\n    } = this.props;\n    const newBreakpoint = this.props.breakpoint || (0, _responsiveUtils.getBreakpointFromWidth)(this.props.breakpoints, this.props.width);\n    const lastBreakpoint = this.state.breakpoint;\n    const newCols /*: number*/ = (0, _responsiveUtils.getColsFromBreakpoint)(newBreakpoint, cols);\n    const newLayouts = {\n      ...layouts\n    };\n\n    // Breakpoint change\n    if (lastBreakpoint !== newBreakpoint || prevProps.breakpoints !== breakpoints || prevProps.cols !== cols) {\n      // Preserve the current layout if the current breakpoint is not present in the next layouts.\n      if (!(lastBreakpoint in newLayouts)) newLayouts[lastBreakpoint] = (0, _utils.cloneLayout)(this.state.layout);\n\n      // Find or generate a new layout.\n      let layout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(newLayouts, breakpoints, newBreakpoint, lastBreakpoint, newCols, compactType);\n\n      // This adds missing items.\n      layout = (0, _utils.synchronizeLayoutWithChildren)(layout, this.props.children, newCols, compactType, this.props.allowOverlap);\n\n      // Store the new layout.\n      newLayouts[newBreakpoint] = layout;\n\n      // callbacks\n      this.props.onLayoutChange(layout, newLayouts);\n      this.props.onBreakpointChange(newBreakpoint, newCols);\n      this.setState({\n        breakpoint: newBreakpoint,\n        layout: layout,\n        cols: newCols\n      });\n    }\n    const margin = getIndentationValue(this.props.margin, newBreakpoint);\n    const containerPadding = getIndentationValue(this.props.containerPadding, newBreakpoint);\n\n    //call onWidthChange on every change of width, not only on breakpoint changes\n    this.props.onWidthChange(this.props.width, margin, newCols, containerPadding);\n  }\n  render() /*: React.Element<typeof ReactGridLayout>*/{\n    /* eslint-disable no-unused-vars */\n    const {\n      breakpoint,\n      breakpoints,\n      cols,\n      layouts,\n      margin,\n      containerPadding,\n      onBreakpointChange,\n      onLayoutChange,\n      onWidthChange,\n      ...other\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    return /*#__PURE__*/React.createElement(_ReactGridLayout.default, _extends({}, other, {\n      // $FlowIgnore should allow nullable here due to DefaultProps\n      margin: getIndentationValue(margin, this.state.breakpoint),\n      containerPadding: getIndentationValue(containerPadding, this.state.breakpoint),\n      onLayoutChange: this.onLayoutChange,\n      layout: this.state.layout,\n      cols: this.state.cols\n    }));\n  }\n}\nexports.default = ResponsiveReactGridLayout;\n// This should only include propTypes needed in this code; RGL itself\n// will do validation of the rest props passed to it.\n_defineProperty(ResponsiveReactGridLayout, \"propTypes\", {\n  //\n  // Basic props\n  //\n\n  // Optional, but if you are managing width yourself you may want to set the breakpoint\n  // yourself as well.\n  breakpoint: _propTypes.default.string,\n  // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\n  breakpoints: _propTypes.default.object,\n  allowOverlap: _propTypes.default.bool,\n  // # of cols. This is a breakpoint -> cols map\n  cols: _propTypes.default.object,\n  // # of margin. This is a breakpoint -> margin map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Margin between items [x, y] in px\n  // e.g. [10, 10]\n  margin: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n  // # of containerPadding. This is a breakpoint -> containerPadding map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Padding inside the container [x, y] in px\n  // e.g. [10, 10]\n  containerPadding: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n  // layouts is an object mapping breakpoints to layouts.\n  // e.g. {lg: Layout, md: Layout, ...}\n  layouts(props /*: Props<>*/, propName /*: string*/) {\n    if (type(props[propName]) !== \"[object Object]\") {\n      throw new Error(\"Layout property must be an object. Received: \" + type(props[propName]));\n    }\n    Object.keys(props[propName]).forEach(key => {\n      if (!(key in props.breakpoints)) {\n        throw new Error(\"Each key in layouts must align with a key in breakpoints.\");\n      }\n      (0, _utils.validateLayout)(props.layouts[key], \"layouts.\" + key);\n    });\n  },\n  // The width of this component.\n  // Required in this propTypes stanza because generateInitialState() will fail without it.\n  width: _propTypes.default.number.isRequired,\n  //\n  // Callbacks\n  //\n\n  // Calls back with breakpoint and new # cols\n  onBreakpointChange: _propTypes.default.func,\n  // Callback so you can save the layout.\n  // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n  onLayoutChange: _propTypes.default.func,\n  // Calls back with (containerWidth, margin, cols, containerPadding)\n  onWidthChange: _propTypes.default.func\n});\n_defineProperty(ResponsiveReactGridLayout, \"defaultProps\", {\n  breakpoints: {\n    lg: 1200,\n    md: 996,\n    sm: 768,\n    xs: 480,\n    xxs: 0\n  },\n  cols: {\n    lg: 12,\n    md: 10,\n    sm: 6,\n    xs: 4,\n    xxs: 2\n  },\n  containerPadding: {\n    lg: null,\n    md: null,\n    sm: null,\n    xs: null,\n    xxs: null\n  },\n  layouts: {},\n  margin: [10, 10],\n  allowOverlap: false,\n  onBreakpointChange: _utils.noop,\n  onLayoutChange: _utils.noop,\n  onWidthChange: _utils.noop\n});", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = WidthProvideRGL;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _resizeObserverPolyfill = _interopRequireDefault(require(\"resize-observer-polyfill\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*:: import type { ReactRef } from \"../ReactGridLayoutPropTypes\";*/\n/*:: type WPDefaultProps = {|\n  measureBeforeMount: boolean\n|};*/\n/*:: type WPProps = {|\n  className?: string,\n  style?: Object,\n  ...WPDefaultProps\n|};*/\n// eslint-disable-next-line no-unused-vars\n/*:: type WPState = {|\n  width: number\n|};*/\n/*:: type ComposedProps<Config> = {|\n  ...Config,\n  measureBeforeMount?: boolean,\n  className?: string,\n  style?: Object,\n  width?: number\n|};*/\nconst layoutClassName = \"react-grid-layout\";\n\n/*\n * A simple HOC that provides facility for listening to container resizes.\n *\n * The Flow type is pretty janky here. I can't just spread `WPProps` into this returned object - I wish I could - but it triggers\n * a flow bug of some sort that causes it to stop typechecking.\n */\nfunction WidthProvideRGL /*:: <Config>*/(ComposedComponent /*: React.AbstractComponent<Config>*/) /*: React.AbstractComponent<ComposedProps<Config>>*/{\n  var _class;\n  return _class = class WidthProvider extends React.Component\n  /*:: <\n      ComposedProps<Config>,\n      WPState\n    >*/\n  {\n    constructor() {\n      super(...arguments);\n      _defineProperty(this, \"state\", {\n        width: 1280\n      });\n      _defineProperty(this, \"elementRef\", /*#__PURE__*/React.createRef());\n      _defineProperty(this, \"mounted\", false);\n      _defineProperty(this, \"resizeObserver\", void 0);\n    }\n    componentDidMount() {\n      this.mounted = true;\n      this.resizeObserver = new _resizeObserverPolyfill.default(entries => {\n        const node = this.elementRef.current;\n        if (node instanceof HTMLElement) {\n          const width = entries[0].contentRect.width;\n          this.setState({\n            width\n          });\n        }\n      });\n      const node = this.elementRef.current;\n      if (node instanceof HTMLElement) {\n        this.resizeObserver.observe(node);\n      }\n    }\n    componentWillUnmount() {\n      this.mounted = false;\n      const node = this.elementRef.current;\n      if (node instanceof HTMLElement) {\n        this.resizeObserver.unobserve(node);\n      }\n      this.resizeObserver.disconnect();\n    }\n    render() {\n      const {\n        measureBeforeMount,\n        ...rest\n      } = this.props;\n      if (measureBeforeMount && !this.mounted) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: (0, _clsx.default)(this.props.className, layoutClassName),\n          style: this.props.style\n          // $FlowIgnore ref types\n          ,\n          ref: this.elementRef\n        });\n      }\n      return /*#__PURE__*/React.createElement(ComposedComponent, _extends({\n        innerRef: this.elementRef\n      }, rest, this.state));\n    }\n  }, _defineProperty(_class, \"defaultProps\", {\n    measureBeforeMount: false\n  }), _defineProperty(_class, \"propTypes\", {\n    // If true, will not render children until mounted. Useful for getting the exact width before\n    // rendering, to prevent any unsightly resizing.\n    measureBeforeMount: _propTypes.default.bool\n  }), _class;\n}", "module.exports = require(\"./build/ReactGridLayout\").default;\nmodule.exports.utils = require(\"./build/utils\");\nmodule.exports.calculateUtils = require(\"./build/calculateUtils\");\nmodule.exports.Responsive =\n  require(\"./build/ResponsiveReactGridLayout\").default;\nmodule.exports.Responsive.utils = require(\"./build/responsiveUtils\");\nmodule.exports.WidthProvider =\n  require(\"./build/components/WidthProvider\").default;\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand, IRange } from '@univerjs/core';\nimport type { IAddConditionalRuleMutationParams, IAverageHighlightCell, IConditionFormattingRule } from '@univerjs/sheets-conditional-formatting';\nimport {\n    CommandType,\n    ICommandService,\n    IUniverInstanceService,\n} from '@univerjs/core';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { AddConditionalRuleMutation, CFRuleType, CFSubRuleType, ConditionalFormattingRuleModel } from '@univerjs/sheets-conditional-formatting';\n\ninterface IAddAverageCfParams {\n    ranges: IRange[];\n    stopIfTrue?: boolean;\n    style: IAverageHighlightCell['style'];\n    operator: IAverageHighlightCell['operator'];\n}\nexport const AddAverageCfCommand: ICommand<IAddAverageCfParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheet.command.add-average-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { ranges, style, stopIfTrue, operator } = params;\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        const commandService = accessor.get(ICommandService);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n\n        const target = getSheetCommandTarget(univerInstanceService);\n        if (!target) return false;\n\n        const { unitId, subUnitId } = target;\n        const cfId = conditionalFormattingRuleModel.createCfId(unitId, subUnitId);\n        const rule: IConditionFormattingRule = {\n            ranges,\n            cfId,\n            stopIfTrue: !!stopIfTrue,\n            rule: {\n                type: CFRuleType.highlightCell,\n                subType: CFSubRuleType.average,\n                operator,\n                style,\n            },\n        };\n        const result = commandService.executeCommand(AddConditionalRuleMutation.id, { unitId, subUnitId, rule } as IAddConditionalRuleMutationParams);\n        return result;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand, IRange } from '@univerjs/core';\nimport type { IAddConditionalRuleMutationParams, IColorScale, IConditionFormattingRule } from '@univerjs/sheets-conditional-formatting';\nimport {\n    CommandType,\n    ICommandService,\n    IUniverInstanceService,\n} from '@univerjs/core';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { AddConditionalRuleMutation, CFRuleType, ConditionalFormattingRuleModel } from '@univerjs/sheets-conditional-formatting';\n\ninterface IAddColorScaleConditionalRuleParams {\n    ranges: IRange[];\n    stopIfTrue?: boolean;\n    config: IColorScale['config'];\n\n}\nexport const AddColorScaleConditionalRuleCommand: ICommand<IAddColorScaleConditionalRuleParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheet.command.add-color-scale-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { ranges, config, stopIfTrue } = params;\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        const commandService = accessor.get(ICommandService);\n\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n\n        const target = getSheetCommandTarget(univerInstanceService);\n        if (!target) return false;\n\n        const { unitId, subUnitId } = target;\n        const cfId = conditionalFormattingRuleModel.createCfId(unitId, subUnitId);\n        const rule: IConditionFormattingRule = {\n            ranges,\n            cfId,\n            stopIfTrue: !!stopIfTrue,\n            rule: {\n                type: CFRuleType.colorScale,\n                config,\n            },\n        };\n        return commandService.executeCommand(AddConditionalRuleMutation.id, { unitId, subUnitId, rule } as IAddConditionalRuleMutationParams);\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand, IRange } from '@univerjs/core';\nimport type { IAddConditionalRuleMutationParams, IConditionFormattingRule, IDataBar } from '@univerjs/sheets-conditional-formatting';\nimport {\n    CommandType,\n    ICommandService,\n    IUniverInstanceService,\n} from '@univerjs/core';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { AddConditionalRuleMutation, CFRuleType, ConditionalFormattingRuleModel } from '@univerjs/sheets-conditional-formatting';\n\ninterface IAddUniqueValuesConditionalRuleParams {\n    ranges: IRange[];\n    stopIfTrue?: boolean;\n    min: IDataBar['config']['min'];\n    max: IDataBar['config']['max'];\n    nativeColor: IDataBar['config']['nativeColor'];\n    positiveColor: IDataBar['config']['positiveColor'];\n    isGradient: IDataBar['config']['isGradient'];\n    isShowValue: IDataBar['isShowValue'];\n\n}\nexport const AddDataBarConditionalRuleCommand: ICommand<IAddUniqueValuesConditionalRuleParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheet.command.add-data-bar-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { ranges, min, max, nativeColor, positiveColor, isGradient, stopIfTrue, isShowValue } = params;\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n\n        const target = getSheetCommandTarget(univerInstanceService);\n        if (!target) return false;\n\n        const { unitId, subUnitId } = target;\n        const commandService = accessor.get(ICommandService);\n\n        const cfId = conditionalFormattingRuleModel.createCfId(unitId, subUnitId);\n        const rule: IConditionFormattingRule = {\n            ranges,\n            cfId,\n            stopIfTrue: !!stopIfTrue,\n            rule: {\n                type: CFRuleType.dataBar,\n                isShowValue,\n                config: {\n                    min,\n                    max,\n                    nativeColor,\n                    positiveColor,\n                    isGradient,\n                },\n            },\n        };\n        return commandService.executeCommand(AddConditionalRuleMutation.id, { unitId, subUnitId, rule } as IAddConditionalRuleMutationParams);\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand, IRange } from '@univerjs/core';\nimport type { IAddConditionalRuleMutationParams, IConditionFormattingRule, IHighlightCell } from '@univerjs/sheets-conditional-formatting';\nimport {\n    CommandType,\n    ICommandService,\n    IUniverInstanceService,\n} from '@univerjs/core';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { AddConditionalRuleMutation, CFRuleType, CFSubRuleType, ConditionalFormattingRuleModel } from '@univerjs/sheets-conditional-formatting';\n\ninterface IAddDuplicateValuesConditionalRuleParams {\n    ranges: IRange[];\n    stopIfTrue?: boolean;\n    style: IHighlightCell['style'];\n}\nexport const AddDuplicateValuesCfCommand: ICommand<IAddDuplicateValuesConditionalRuleParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheet.command.add-duplicate-values-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { ranges, style, stopIfTrue } = params;\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        const commandService = accessor.get(ICommandService);\n\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n\n        const target = getSheetCommandTarget(univerInstanceService);\n        if (!target) return false;\n\n        const { unitId, subUnitId } = target;\n        const cfId = conditionalFormattingRuleModel.createCfId(unitId, subUnitId);\n        const rule: IConditionFormattingRule = {\n            ranges,\n            cfId,\n            stopIfTrue: !!stopIfTrue,\n            rule: {\n                type: CFRuleType.highlightCell,\n                subType: CFSubRuleType.duplicateValues,\n                style,\n            },\n        };\n        return commandService.executeCommand(AddConditionalRuleMutation.id, { unitId, subUnitId, rule } as IAddConditionalRuleMutationParams);\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand, IRange } from '@univerjs/core';\nimport type { IAddConditionalRuleMutationParams, IConditionFormattingRule, INumberHighlightCell } from '@univerjs/sheets-conditional-formatting';\nimport {\n    CommandType,\n    ICommandService,\n    IUniverInstanceService,\n} from '@univerjs/core';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { AddConditionalRuleMutation, CFNumberOperator, CFRuleType, CFSubRuleType, ConditionalFormattingRuleModel } from '@univerjs/sheets-conditional-formatting';\n\ninterface IAddNumberCfParams {\n    ranges: IRange[];\n    stopIfTrue?: boolean;\n    style: INumberHighlightCell['style'];\n    operator: INumberHighlightCell['operator'];\n    value: number | [number, number];\n}\nexport const AddNumberCfCommand: ICommand<IAddNumberCfParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheet.command.add-number-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { ranges, style, stopIfTrue, operator, value } = params;\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        const commandService = accessor.get(ICommandService);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n        const target = getSheetCommandTarget(univerInstanceService);\n        if (!target) return false;\n\n        const { unitId, subUnitId } = target;\n        const cfId = conditionalFormattingRuleModel.createCfId(unitId, subUnitId);\n        let rule: IConditionFormattingRule;\n        if ([CFNumberOperator.between, CFNumberOperator.notBetween].includes(operator)) {\n            const _value = value as [number, number];\n            if (_value.length !== 2 || !Array.isArray(_value)) {\n                return false;\n            }\n            rule = {\n                ranges,\n                cfId,\n                stopIfTrue: !!stopIfTrue,\n                rule: {\n                    type: CFRuleType.highlightCell,\n                    subType: CFSubRuleType.number,\n                    operator: operator as CFNumberOperator.between | CFNumberOperator.notBetween,\n                    style,\n                    value: _value as [number, number],\n                },\n            };\n        } else {\n            const _value = value as number;\n            if (typeof _value !== 'number') {\n                return false;\n            }\n            rule = {\n                ranges,\n                cfId,\n                stopIfTrue: !!stopIfTrue,\n                rule: {\n                    type: CFRuleType.highlightCell,\n                    subType: CFSubRuleType.number,\n                    operator: operator as any,\n                    style,\n                    value: _value,\n                },\n            };\n        }\n        return commandService.executeCommand(AddConditionalRuleMutation.id, { unitId, subUnitId, rule } as IAddConditionalRuleMutationParams);\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand, IRange } from '@univerjs/core';\nimport type { IAddConditionalRuleMutationParams, IConditionFormattingRule, IRankHighlightCell } from '@univerjs/sheets-conditional-formatting';\nimport {\n    CommandType,\n    ICommandService,\n    IUniverInstanceService,\n} from '@univerjs/core';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { AddConditionalRuleMutation, CFRuleType, CFSubRuleType, ConditionalFormattingRuleModel } from '@univerjs/sheets-conditional-formatting';\n\ninterface IAddRankCfParams {\n    ranges: IRange[];\n    stopIfTrue?: boolean;\n    style: IRankHighlightCell['style'];\n    isPercent: boolean;\n    isBottom: boolean;\n    value: number;\n\n}\nexport const AddRankCfCommand: ICommand<IAddRankCfParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheet.command.add-rank-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { ranges, style, stopIfTrue, isPercent, isBottom, value } = params;\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n        const commandService = accessor.get(ICommandService);\n\n        const target = getSheetCommandTarget(univerInstanceService);\n        if (!target) return false;\n\n        const { unitId, subUnitId } = target;\n        const cfId = conditionalFormattingRuleModel.createCfId(unitId, subUnitId);\n        const rule: IConditionFormattingRule = {\n            ranges,\n            cfId,\n            stopIfTrue: !!stopIfTrue,\n            rule: {\n                type: CFRuleType.highlightCell,\n                subType: CFSubRuleType.rank,\n                isPercent,\n                isBottom,\n                style,\n                value,\n            },\n        };\n        return commandService.executeCommand(AddConditionalRuleMutation.id, { unitId, subUnitId, rule } as IAddConditionalRuleMutationParams);\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand, IRange } from '@univerjs/core';\nimport type { IAddConditionalRuleMutationParams, IConditionFormattingRule, ITextHighlightCell } from '@univerjs/sheets-conditional-formatting';\nimport {\n    CommandType,\n    ICommandService,\n    IUniverInstanceService,\n\n} from '@univerjs/core';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { AddConditionalRuleMutation, CFRuleType, CFSubRuleType, ConditionalFormattingRuleModel } from '@univerjs/sheets-conditional-formatting';\n\ninterface IAddAverageCfParams {\n    ranges: IRange[];\n    stopIfTrue?: boolean;\n    style: ITextHighlightCell['style'];\n    operator: ITextHighlightCell['operator'];\n    value: ITextHighlightCell['value'];\n}\nexport const AddTextCfCommand: ICommand<IAddAverageCfParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheet.command.add-text-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { ranges, style, stopIfTrue, operator, value } = params;\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n\n        const target = getSheetCommandTarget(univerInstanceService);\n        if (!target) return false;\n\n        const { unitId, subUnitId } = target;\n        const commandService = accessor.get(ICommandService);\n\n        const cfId = conditionalFormattingRuleModel.createCfId(unitId, subUnitId);\n        const rule: IConditionFormattingRule = {\n            ranges,\n            cfId,\n            stopIfTrue: !!stopIfTrue,\n            rule: {\n                type: CFRuleType.highlightCell,\n                subType: CFSubRuleType.text,\n                operator,\n                style,\n                value,\n            },\n        };\n        return commandService.executeCommand(AddConditionalRuleMutation.id, { unitId, subUnitId, rule } as IAddConditionalRuleMutationParams);\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand, IRange } from '@univerjs/core';\nimport type { IAddConditionalRuleMutationParams, IConditionFormattingRule, ITimePeriodHighlightCell } from '@univerjs/sheets-conditional-formatting';\nimport {\n    CommandType,\n    ICommandService,\n    IUniverInstanceService,\n} from '@univerjs/core';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { AddConditionalRuleMutation, CFRuleType, CFSubRuleType, ConditionalFormattingRuleModel } from '@univerjs/sheets-conditional-formatting';\n\ninterface IAddTimePeriodCf {\n    ranges: IRange[];\n    stopIfTrue?: boolean;\n    style: ITimePeriodHighlightCell['style'];\n    operator: ITimePeriodHighlightCell['operator'];\n\n}\nexport const AddTimePeriodCfCommand: ICommand<IAddTimePeriodCf> = {\n    type: CommandType.COMMAND,\n    id: 'sheet.command.add-time-period-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { ranges, style, stopIfTrue, operator } = params;\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n        const commandService = accessor.get(ICommandService);\n\n        const target = getSheetCommandTarget(univerInstanceService);\n        if (!target) return false;\n\n        const { unitId, subUnitId } = target;\n        const cfId = conditionalFormattingRuleModel.createCfId(unitId, subUnitId);\n        const rule: IConditionFormattingRule<ITimePeriodHighlightCell> = {\n            ranges,\n            cfId,\n            stopIfTrue: !!stopIfTrue,\n            rule: {\n                type: CFRuleType.highlightCell,\n                subType: CFSubRuleType.timePeriod,\n                operator,\n                style,\n            },\n        };\n        return commandService.executeCommand(AddConditionalRuleMutation.id, { unitId, subUnitId, rule } as IAddConditionalRuleMutationParams);\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand, IRange } from '@univerjs/core';\nimport type { IAddConditionalRuleMutationParams, IConditionFormattingRule, IHighlightCell } from '@univerjs/sheets-conditional-formatting';\nimport {\n    CommandType,\n    ICommandService,\n    IUniverInstanceService,\n} from '@univerjs/core';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { AddConditionalRuleMutation, CFRuleType, CFSubRuleType, ConditionalFormattingRuleModel } from '@univerjs/sheets-conditional-formatting';\n\ninterface IAddUniqueValuesConditionalRuleParams {\n    ranges: IRange[];\n    stopIfTrue?: boolean;\n    style: IHighlightCell['style'];\n}\nexport const AddUniqueValuesCfCommand: ICommand<IAddUniqueValuesConditionalRuleParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheet.command.add-uniqueValues-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { ranges, style, stopIfTrue } = params;\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n        const commandService = accessor.get(ICommandService);\n\n        const target = getSheetCommandTarget(univerInstanceService);\n        if (!target) return false;\n\n        const { unitId, subUnitId } = target;\n        const cfId = conditionalFormattingRuleModel.createCfId(unitId, subUnitId);\n        const rule: IConditionFormattingRule = {\n            ranges,\n            cfId,\n            stopIfTrue: !!stopIfTrue,\n            rule: {\n                type: CFRuleType.highlightCell,\n                subType: CFSubRuleType.uniqueValues,\n                style,\n            },\n        };\n        return commandService.executeCommand(AddConditionalRuleMutation.id, { unitId, subUnitId, rule } as IAddConditionalRuleMutationParams);\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState } from 'react';\nimport type { IConditionFormattingRule } from '@univerjs/sheets-conditional-formatting';\nimport styles from './index.module.less';\nimport { RuleList } from './rule-list';\nimport { RuleEdit } from './rule-edit';\n\ninterface IConditionFormattingPanelProps { rule?: IConditionFormattingRule };\n\nexport const ConditionFormattingPanel = (props: IConditionFormattingPanelProps) => {\n    const [currentEditRule, currentEditRuleSet] = useState<IConditionFormattingRule | undefined>(props.rule);\n    const [isShowRuleEditor, isShowRuleEditorSet] = useState(!!props.rule);\n\n    const createCfRule = () => {\n        isShowRuleEditorSet(true);\n    };\n\n    const handleCancel = () => {\n        isShowRuleEditorSet(false);\n        currentEditRuleSet(undefined);\n    };\n\n    const handleRuleClick = (rule: IConditionFormattingRule) => {\n        currentEditRuleSet(rule);\n        isShowRuleEditorSet(true);\n    };\n\n    return (\n        <div className={styles.conditionalFormattingWrap}>\n            {isShowRuleEditor\n                ? (\n                    <RuleEdit onCancel={handleCancel} rule={currentEditRule} />\n                )\n                : (\n                    <RuleList onClick={handleRuleClick} onCreate={createCfRule} />\n                )}\n        </div>\n    );\n};\n", "export default {\n  \"conditionalFormattingWrap\": \"univer-conditional-formatting-wrap\",\n  \"cfRuleItem\": \"univer-cf-rule-item\",\n  \"preview\": \"univer-preview\",\n  \"createRule\": \"univer-create-rule\",\n  \"button\": \"univer-button\",\n  \"title\": \"univer-title\",\n  \"label\": \"univer-label\",\n  \"labelContainer\": \"univer-label-container\",\n  \"inputWidth\": \"univer-input-width\",\n  \"mTBase\": \"univer-m-t-base\",\n  \"mTSm\": \"univer-m-t-sm\",\n  \"mTXl\": \"univer-m-t-xl\",\n  \"mLSm\": \"univer-m-l-sm\",\n  \"mLXl\": \"univer-m-l-xl\",\n  \"mLXxs\": \"univer-m-l-xxs\",\n  \"mL0\": \"univer-m-l-0\",\n  \"mR0\": \"univer-m-r-0\"\n};import \"ni:sha-256;AvINDjRg-lYF4KP36c8yJjhFBiVv-bm37Btq0Pa1A1I\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, Workbook } from '@univerjs/core';\nimport type { IConditionFormattingRule, IDeleteCfCommandParams, IMoveCfCommandParams } from '@univerjs/sheets-conditional-formatting';\nimport { ICommandService, Injector, IUniverInstanceService, LocaleService, Rectangle, UniverInstanceType } from '@univerjs/core';\nimport { clsx, Select, Tooltip } from '@univerjs/design';\nimport { serializeRange } from '@univerjs/engine-formula';\nimport { DeleteSingle, IncreaseSingle, SequenceSingle } from '@univerjs/icons';\nimport { checkRangesEditablePermission, SetSelectionsOperation, SetWorksheetActiveOperation, SheetsSelectionsService } from '@univerjs/sheets';\nimport {\n    AddConditionalRuleMutation,\n    CFRuleType,\n    CFSubRuleType,\n    ClearWorksheetCfCommand,\n    ConditionalFormattingRuleModel,\n    DeleteCfCommand,\n    DeleteConditionalRuleMutation,\n    MoveCfCommand,\n    MoveConditionalRuleMutation,\n    SetConditionalRuleMutation,\n} from '@univerjs/sheets-conditional-formatting';\nimport { useHighlightRange } from '@univerjs/sheets-ui';\nimport { ISidebarService, useDependency, useObservable } from '@univerjs/ui';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport GridLayout from 'react-grid-layout';\nimport { debounceTime, Observable } from 'rxjs';\nimport { ConditionalFormattingI18nController } from '../../../controllers/cf.i18n.controller';\nimport { Preview } from '../../preview';\nimport styles from './index.module.less';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\ninterface IRuleListProps {\n    onClick: (rule: IConditionFormattingRule) => void;\n    onCreate: () => void;\n};\nconst getRuleDescribe = (rule: IConditionFormattingRule, localeService: LocaleService) => {\n    const ruleConfig = rule.rule;\n    switch (ruleConfig.type) {\n        case CFRuleType.colorScale: {\n            return localeService.t('sheet.cf.ruleType.colorScale');\n        }\n        case CFRuleType.dataBar: {\n            return localeService.t('sheet.cf.ruleType.dataBar');\n        }\n        case CFRuleType.iconSet: {\n            return localeService.t('sheet.cf.ruleType.iconSet');\n        }\n        case CFRuleType.highlightCell: {\n            switch (ruleConfig.subType) {\n                case CFSubRuleType.average: {\n                    const operator = ruleConfig.operator;\n                    return localeService.t(`sheet.cf.preview.describe.${operator}`, localeService.t('sheet.cf.subRuleType.average'));\n                }\n                case CFSubRuleType.duplicateValues: {\n                    return localeService.t('sheet.cf.subRuleType.duplicateValues');\n                }\n                case CFSubRuleType.uniqueValues: {\n                    return localeService.t('sheet.cf.subRuleType.uniqueValues');\n                }\n                case CFSubRuleType.number: {\n                    const operator = ruleConfig.operator;\n                    return localeService.t(`sheet.cf.preview.describe.${operator}`, ...Array.isArray(ruleConfig.value) ? (ruleConfig.value.map((e) => String(e))) : [String(ruleConfig.value || '')]);\n                }\n                case CFSubRuleType.text: {\n                    const operator = ruleConfig.operator;\n                    return localeService.t(`sheet.cf.preview.describe.${operator}`, ruleConfig.value || '');\n                }\n\n                case CFSubRuleType.timePeriod: {\n                    const operator = ruleConfig.operator;\n                    return localeService.t(`sheet.cf.preview.describe.${operator}`);\n                }\n                case CFSubRuleType.rank: {\n                    if (ruleConfig.isPercent) {\n                        if (ruleConfig.isBottom) {\n                            return localeService.t('sheet.cf.preview.describe.bottomNPercent', String(ruleConfig.value));\n                        } else {\n                            return localeService.t('sheet.cf.preview.describe.topNPercent', String(ruleConfig.value));\n                        }\n                    } else {\n                        if (ruleConfig.isBottom) {\n                            return localeService.t('sheet.cf.preview.describe.bottomN', String(ruleConfig.value));\n                        } else {\n                            return localeService.t('sheet.cf.preview.describe.topN', String(ruleConfig.value));\n                        }\n                    }\n                }\n                case CFSubRuleType.formula: {\n                    return localeService.t('sheet.cf.ruleType.formula');\n                }\n            }\n        }\n    }\n};\n\nlet defaultWidth = 0;\nexport const RuleList = (props: IRuleListProps) => {\n    const { onClick } = props;\n    const conditionalFormattingRuleModel = useDependency(ConditionalFormattingRuleModel);\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const selectionManagerService = useDependency(SheetsSelectionsService);\n    const commandService = useDependency(ICommandService);\n    const localeService = useDependency(LocaleService);\n    const injector = useDependency(Injector);\n    const sidebarService = useDependency(ISidebarService);\n\n    const conditionalFormattingI18nController = useDependency(ConditionalFormattingI18nController);\n\n    const workbook = useObservable(() => univerInstanceService.getCurrentTypeOfUnit$<Workbook>(UniverInstanceType.UNIVER_SHEET), undefined, undefined, [])!;\n    const unitId = workbook.getUnitId();\n    const worksheet = workbook.getActiveSheet();\n    if (!worksheet) {\n        throw new Error('No active sheet found');\n    }\n\n    const subUnitId = worksheet.getSheetId();\n\n    const [currentRuleRanges, currentRuleRangesSet] = useState<IRange[]>([]);\n    const [selectValue, setSelectValue] = useState('2');\n    const [fetchRuleListId, setFetchRuleListId] = useState(0);\n    const [draggingId, setDraggingId] = useState<number>(-1);\n    const [layoutWidth, setLayoutWidth] = useState(defaultWidth);\n    const layoutContainerRef = useRef<HTMLDivElement>(null);\n\n    const selectOption = [\n        { label: localeService.t('sheet.cf.panel.workSheet'), value: '2' },\n        { label: localeService.t('sheet.cf.panel.selectedRange'), value: '1' },\n    ];\n\n    const getRuleList = () => {\n        const ruleList = conditionalFormattingRuleModel.getSubunitRules(unitId, subUnitId);\n        if (!ruleList || !ruleList.length) {\n            return [];\n        }\n        if (selectValue === '1') {\n            const selection = selectionManagerService.getCurrentLastSelection();\n            if (!selection) {\n                return [];\n            }\n            const range = selection.range;\n            const _ruleList = ruleList.filter((rule) => {\n                return rule.ranges.some((ruleRange) => Rectangle.intersects(ruleRange, range));\n            });\n            return _ruleList;\n        } else if (selectValue === '2') {\n            return [...ruleList];\n        }\n        return [];\n    };\n\n    const [ruleList, ruleListSet] = useState(getRuleList);\n\n    useHighlightRange(currentRuleRanges);\n\n    useEffect(() => {\n        const disposable = commandService.onCommandExecuted((commandInfo) => {\n            if (commandInfo.id === SetWorksheetActiveOperation.id) {\n                setFetchRuleListId(Math.random());\n            }\n        });\n        return () => disposable.dispose();\n    });\n\n    useEffect(() => {\n        ruleListSet(getRuleList);\n    }, [selectValue, fetchRuleListId, unitId, subUnitId]);\n\n    useEffect(() => {\n        if (selectValue === '2') {\n            return;\n        }\n        const subscription =\n            new Observable<null>((commandSubscribe) => {\n                const commandList = [SetSelectionsOperation.id, AddConditionalRuleMutation.id, SetConditionalRuleMutation.id, DeleteConditionalRuleMutation.id, MoveConditionalRuleMutation.id];\n                const disposable = commandService.onCommandExecuted((commandInfo) => {\n                    const { id, params } = commandInfo;\n                    const unitId = univerInstanceService.getCurrentUnitOfType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getUnitId();\n                    if (commandList.includes(id) && (params as { unitId: string }).unitId === unitId) {\n                        commandSubscribe.next(null);\n                    }\n                });\n                return () => disposable.dispose();\n            }).pipe(debounceTime(16)).subscribe(() => {\n                ruleListSet(getRuleList);\n            });\n        return () => {\n            subscription.unsubscribe();\n        };\n    }, [univerInstanceService, selectValue, unitId, subUnitId]);\n\n    useEffect(() => {\n        const dispose = conditionalFormattingRuleModel.$ruleChange.subscribe(() => {\n            setFetchRuleListId(Math.random());\n        });\n        return () => dispose.unsubscribe();\n    }, [conditionalFormattingRuleModel]);\n\n    useEffect(() => {\n        // Because univer-sidebar contains animations, accurate width values can not be obtained in real time\u3002\n        // Also set a global width as the default width to avoid a gap before the first calculation.\n        const getWidth = () => {\n            // 8 is padding-left\n            const width = Math.max(0, (layoutContainerRef.current?.getBoundingClientRect().width ?? 0) - 8);\n            defaultWidth = width;\n            return width;\n        };\n        const observer = new Observable((subscribe) => {\n            const targetElement = sidebarService.getContainer();\n            if (targetElement) {\n                let time = setTimeout(() => {\n                    subscribe.next();\n                }, 150);\n                const clearTime = () => {\n                    time && clearTimeout(time);\n                    time = null as any;\n                };\n                const handle: any = (e: TransitionEvent) => {\n                    if (e.propertyName === 'width') {\n                        clearTime();\n                        subscribe.next();\n                    }\n                };\n                targetElement.addEventListener('transitionend', handle);\n                return () => {\n                    clearTime();\n                    targetElement.removeEventListener('transitionend', handle);\n                };\n            }\n        });\n        const subscription = observer.pipe(debounceTime(16)).subscribe(() => {\n            setLayoutWidth(getWidth());\n        });\n        return () => {\n            subscription.unsubscribe();\n        };\n    }, []);\n\n    const handleDelete = (rule: IConditionFormattingRule) => {\n        const unitId = univerInstanceService.getCurrentUnitOfType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getUnitId();\n        const subUnitId = univerInstanceService.getCurrentUnitOfType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getActiveSheet()?.getSheetId();\n        if (!unitId || !subUnitId) {\n            throw new Error('No active sheet found');\n        }\n        commandService.executeCommand(DeleteCfCommand.id, { unitId, subUnitId, cfId: rule.cfId } as IDeleteCfCommandParams);\n    };\n\n    const handleDragStart = (_layout: unknown, from: { y: number }) => {\n        setDraggingId(from.y);\n    };\n\n    const handleDragStop = (_layout: unknown, from: { y: number }, to: { y: number }) => {\n        setDraggingId(-1);\n        const unitId = univerInstanceService.getCurrentUnitOfType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getUnitId();\n        const subUnitId = univerInstanceService.getCurrentUnitOfType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getActiveSheet()?.getSheetId();\n        if (!unitId || !subUnitId) {\n            throw new Error('No active sheet found');\n        }\n\n        const getSaveIndex = (index: number) => {\n            const length = ruleList.length;\n            return Math.min(length - 1, Math.max(0, index));\n        };\n        const cfId = ruleList[getSaveIndex(from.y)].cfId;\n        const targetCfId = ruleList[getSaveIndex(to.y)].cfId;\n        if (cfId !== targetCfId) {\n            commandService.executeCommand(MoveCfCommand.id, { unitId, subUnitId, start: { id: cfId, type: 'self' }, end: { id: targetCfId, type: to.y > from.y ? 'after' : 'before' } } as IMoveCfCommandParams);\n        }\n    };\n\n    const handleCreate = () => {\n        props.onCreate();\n    };\n\n    const handleClear = () => {\n        if (selectValue === '2') {\n            commandService.executeCommand(ClearWorksheetCfCommand.id);\n        } else if (selectValue === '1') {\n            const list = ruleList.map((rule) => ({ unitId, subUnitId, cfId: rule.cfId }));\n            list.forEach((config) => {\n                commandService.executeCommand(DeleteCfCommand.id, config);\n            });\n        }\n    };\n    const ruleListByPermissionCheck = useMemo(() => {\n        const workbook = univerInstanceService.getCurrentUnitOfType<Workbook>(UniverInstanceType.UNIVER_SHEET)!;\n        const worksheet = workbook.getActiveSheet();\n        return ruleList.filter((rule) => {\n            const ranges = rule.ranges;\n            const hasPermission = checkRangesEditablePermission(injector, workbook.getUnitId(), worksheet.getSheetId(), ranges);\n            return hasPermission;\n        });\n    }, [ruleList]);\n\n    const layout = ruleListByPermissionCheck.map((rule, index) => ({ i: rule.cfId, x: 0, w: 12, y: index, h: 1, isResizable: false }));\n\n    const isHasAllRuleEditPermission = useMemo(() => {\n        const workbook = univerInstanceService.getCurrentUnitOfType<Workbook>(UniverInstanceType.UNIVER_SHEET)!;\n        const worksheet = workbook.getActiveSheet();\n        return ruleList.every((rule) => {\n            const ranges = rule.ranges;\n            const hasPermission = checkRangesEditablePermission(injector, workbook.getUnitId(), worksheet.getSheetId(), ranges);\n            return hasPermission;\n        });\n    }, [ruleList]);\n\n    return (\n        <div className={styles.cfRuleList}>\n            <div className={styles.ruleSelector}>\n                <div>\n                    {conditionalFormattingI18nController.tWithReactNode(\n                        'sheet.cf.panel.managerRuleSelect',\n                        <Select\n                            className={styles.select}\n                            options={selectOption}\n                            value={selectValue}\n                            onChange={(v) => { setSelectValue(v); }}\n                        />\n                    ).map((ele, index) => <span key={index}>{ele}</span>)}\n                </div>\n                <div className={styles.btnList}>\n                    <Tooltip title={localeService.t('sheet.cf.panel.createRule')} placement=\"bottom\">\n                        <div\n                            className={styles.icon}\n                            onClick={handleCreate}\n                        >\n                            <IncreaseSingle />\n                        </div>\n                    </Tooltip>\n                    {(ruleList.length && isHasAllRuleEditPermission)\n                        ? (\n                            <Tooltip title={localeService.t('sheet.cf.panel.clear')} placement=\"bottom\">\n                                <div\n                                    className={clsx(styles.gap, styles.icon)}\n                                    onClick={handleClear}\n                                >\n                                    <DeleteSingle />\n                                </div>\n                            </Tooltip>\n                        )\n                        : (\n                            <div className={clsx(styles.gap, styles.disabled)}>\n                                <DeleteSingle />\n                            </div>\n                        )}\n\n                </div>\n\n            </div>\n            <div ref={layoutContainerRef} className={styles.gridLayoutWrap}>\n                {layoutWidth\n                    ? (\n                        <GridLayout\n                            draggableHandle=\".draggableHandle\"\n                            layout={layout}\n                            cols={12}\n                            rowHeight={60}\n                            width={layoutWidth}\n                            margin={[0, 10]}\n                            onDragStop={handleDragStop}\n                            onDragStart={handleDragStart}\n                        >\n                            {ruleListByPermissionCheck?.map((rule, index) => {\n                                return (\n                                    <div key={`${rule.cfId}`}>\n                                        <div\n                                            className={clsx(styles.ruleItem, {\n                                                [styles.active]: draggingId === index,\n                                            })}\n                                            onMouseMove={() => {\n                                                rule.ranges !== currentRuleRanges && currentRuleRangesSet(rule.ranges);\n                                            }}\n                                            onMouseLeave={() => currentRuleRangesSet([])}\n                                            onClick={() => {\n                                                onClick(rule);\n                                            }}\n                                        >\n                                            <div\n                                                className={clsx(styles.draggableHandle, 'draggableHandle')}\n                                                onClick={(e) => e.stopPropagation()}\n                                            >\n                                                <SequenceSingle />\n                                            </div>\n                                            <div className={styles.ruleDescribe}>\n                                                <div className={styles.ruleType}>\n                                                    {getRuleDescribe(rule, localeService)}\n                                                </div>\n                                                <div className={styles.ruleRange}>\n                                                    {rule.ranges.map((range) => serializeRange(range)).join(',')}\n                                                </div>\n                                            </div>\n                                            <div className={styles.preview}>\n                                                <Preview rule={rule.rule} />\n                                            </div>\n                                            <div\n                                                className={clsx(styles.deleteItem, {\n                                                    [styles.active]: draggingId === index,\n                                                })}\n                                                onClick={(e) => {\n                                                    e.stopPropagation();\n                                                    handleDelete(rule);\n                                                    currentRuleRangesSet([]);\n                                                }}\n                                            >\n                                                <DeleteSingle />\n                                            </div>\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </GridLayout>\n                    )\n                    : null}\n            </div>\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ReactNode } from 'react';\nimport { Disposable, Inject, LocaleService } from '@univerjs/core';\n\nexport class ConditionalFormattingI18nController extends Disposable {\n    constructor(@Inject(LocaleService) private _localeService: LocaleService) {\n        super();\n        this._initLocal();\n    }\n\n    private _initLocal = () => {\n    };\n\n    public tWithReactNode(key: string, ...args: (ReactNode | string)[]) {\n        const locale = this._localeService.getLocales();\n        const keys = key.split('.');\n        const resolvedValue = locale && this._localeService.resolveKeyPath(locale, keys);\n        if (typeof resolvedValue === 'string') {\n            const result: (string | ReactNode)[] = [];\n            this._findReplaceIndex(resolvedValue).forEach((item, index, list) => {\n                const preItem = list[index - 1] || { startIndex: 0, endIndex: -1 };\n                if (preItem.endIndex + 1 < item.startIndex) {\n                    const text = resolvedValue.slice(preItem.endIndex + 1, item.startIndex);\n                    text && result.push(text);\n                }\n                args[item.key] && result.push(args[item.key]);\n                if (index === list.length - 1) {\n                    const text = resolvedValue.slice(item.endIndex + 1);\n                    text && result.push(text);\n                }\n            });\n            return result;\n        }\n        return [];\n    }\n\n    private _findReplaceIndex = (text: string) => {\n        const reg = /\\{([^}]+)?\\}/g;\n        const result: { startIndex: number; key: number; endIndex: number }[] = [];\n        let currentValue = reg.exec(text);\n        while (currentValue) {\n            result.push({\n                startIndex: currentValue.index,\n                key: Number(currentValue[1]),\n                endIndex: currentValue.index + currentValue[0].length - 1,\n            });\n            currentValue = reg.exec(text);\n        }\n        return result;\n    };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IConditionalFormattingRuleConfig } from '@univerjs/sheets-conditional-formatting';\nimport { BooleanNumber, ColorKit } from '@univerjs/core';\nimport { SlashSingle } from '@univerjs/icons';\nimport { CFRuleType, DEFAULT_BG_COLOR, DEFAULT_FONT_COLOR, defaultDataBarNativeColor, defaultDataBarPositiveColor, getColorScaleFromValue, iconMap } from '@univerjs/sheets-conditional-formatting';\nimport React, { useMemo } from 'react';\nimport styles from './index.module.less';\n\nexport const Preview = (props: { rule?: IConditionalFormattingRuleConfig }) => {\n    const rule = props.rule;\n    if (!rule) {\n        return null;\n    }\n    const colorList = useMemo(() => {\n        if (rule.type === CFRuleType.colorScale) {\n            const config = rule.config.map((c, index) => ({ color: new ColorKit(c.color), value: index }));\n            const maxValue = config.length - 1;\n            const valueList = new Array(5).fill('').map((_v, index, arr) => index * maxValue / (arr.length - 1));\n            return valueList.map((value) => getColorScaleFromValue(config, value));\n        }\n        return null;\n    }, [rule]);\n    const iconSet = useMemo(() => {\n        if (rule.type === CFRuleType.iconSet) {\n            return rule.config.map((item) => {\n                const iconList = iconMap[item.iconType];\n                return iconList && iconList[Number(item.iconId)];\n            });\n        }\n    }, [rule]);\n    switch (rule.type) {\n        case CFRuleType.dataBar:\n        {\n            const { isGradient } = rule.config;\n            const commonStyle = { width: '50%', height: '100%' };\n            const positiveColor = isGradient ? `linear-gradient(to right, ${rule.config.positiveColor || defaultDataBarPositiveColor}, rgb(255 255 255))` : rule.config.positiveColor;\n            const nativeColor = isGradient ? `linear-gradient(to right,  rgb(255 255 255),${rule.config.nativeColor || defaultDataBarNativeColor})` : rule.config.nativeColor;\n            return (\n                <div className={styles.cfPreview}>\n                    <div style={{ ...commonStyle, background: nativeColor, border: `1px solid ${rule.config.nativeColor || defaultDataBarNativeColor}` }} />\n                    <div style={{ ...commonStyle, background: positiveColor, border: `1px solid ${rule.config.positiveColor || defaultDataBarPositiveColor}` }} />\n                </div>\n            );\n        }\n\n        case CFRuleType.colorScale: {\n            return colorList && (\n                <div className={styles.cfPreview}>\n                    {colorList.map((item, index) => (\n                        <div key={index} style={{ width: `${100 / colorList.length}%`, height: '100%', background: item }} />\n                    ))}\n                </div>\n            );\n        }\n        case CFRuleType.iconSet: {\n            return iconSet && (\n                <div className={styles.cfPreview}>\n                    {iconSet.map((base64, index) => (base64 ? <img style={{ height: '100%' }} key={index} src={base64} /> : <SlashSingle key={index} />))}\n                </div>\n            );\n        }\n        case CFRuleType.highlightCell: {\n            const { ul, st, it, bl, bg, cl } = rule.style;\n            const isUnderline = ul?.s === BooleanNumber.TRUE;\n            const isStrikethrough = st?.s === BooleanNumber.TRUE;\n            const isItalic = it === BooleanNumber.TRUE;\n            const isBold = bl === BooleanNumber.TRUE;\n            const bgColor = bg?.rgb ?? DEFAULT_BG_COLOR;\n            const fontColor = cl?.rgb ?? DEFAULT_FONT_COLOR;\n            const style = {\n                fontWeight: isBold ? 'bold' : undefined,\n                fontStyle: isItalic ? 'italic' : undefined,\n                textDecoration: `${isUnderline ? 'underline' : ''} ${isStrikethrough ? 'line-through' : ''}`.replace(/^ /, '') || undefined,\n                backgroundColor: bgColor,\n                color: fontColor,\n            };\n            return (\n                <div style={style} className={styles.cfPreview}>\n                    123\n                </div>\n            );\n        }\n    }\n    return null;\n};\n", "export default {\n  \"cfPreview\": \"univer-cf-preview\"\n};import \"ni:sha-256;HF1ReSjv1KPFIvDKTg3NLQ-ffDVDkeuEXFzHhAh8k1A\";", "export default {\n  \"cfRuleList\": \"univer-cf-rule-list\",\n  \"ruleSelector\": \"univer-rule-selector\",\n  \"select\": \"univer-select\",\n  \"selectSelector\": \"univer-select-selector\",\n  \"selectSelectionItem\": \"univer-select-selection-item\",\n  \"selectSelectionSearchInput\": \"univer-select-selection-search-input\",\n  \"btnList\": \"univer-btn-list\",\n  \"gap\": \"univer-gap\",\n  \"icon\": \"univer-icon\",\n  \"disabled\": \"univer-disabled\",\n  \"ruleItem\": \"univer-rule-item\",\n  \"ruleDescribe\": \"univer-rule-describe\",\n  \"ruleType\": \"univer-rule-type\",\n  \"ruleRange\": \"univer-rule-range\",\n  \"active\": \"univer-active\",\n  \"draggableHandle\": \"univer-draggableHandle\",\n  \"deleteItem\": \"univer-delete-item\",\n  \"gridLayoutWrap\": \"univer-grid-layout-wrap\",\n  \"reactGridItem\": \"univer-react-grid-item\"\n};import \"ni:sha-256;H-wmTU7eruN-uX2fZCoB8C1iCVzoImVBUoP0aZIM0m0\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, Workbook } from '@univerjs/core';\nimport type { IRemoveSheetMutationParams } from '@univerjs/sheets';\nimport type { IAddCfCommandParams, IConditionFormattingRule, ISetCfCommandParams } from '@univerjs/sheets-conditional-formatting';\nimport type { IStyleEditorProps } from './type';\nimport { ICommandService, InterceptorManager, IUniverInstanceService, LocaleService, UniverInstanceType } from '@univerjs/core';\nimport { Button, Select } from '@univerjs/design';\nimport { deserializeRangeWithSheet, serializeRange } from '@univerjs/engine-formula';\nimport { RemoveSheetMutation, setEndForRange, SetWorksheetActiveOperation, SheetsSelectionsService } from '@univerjs/sheets';\nimport { AddCfCommand, CFRuleType, CFSubRuleType, ConditionalFormattingRuleModel, SetCfCommand } from '@univerjs/sheets-conditional-formatting';\nimport { RangeSelector } from '@univerjs/sheets-formula-ui';\nimport { useDependency } from '@univerjs/ui';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport styleBase from '../index.module.less';\nimport { ColorScaleStyleEditor } from './ColorScale';\nimport { DataBarStyleEditor } from './DataBar';\nimport { FormulaStyleEditor } from './Formula';\nimport { HighlightCellStyleEditor } from './HighlightCell';\nimport { IconSet } from './IconSet';\nimport styles from './index.module.less';\nimport { RankStyleEditor } from './Rank';\nimport { beforeSubmit, submit } from './type';\n\ninterface IRuleEditProps {\n    rule?: IConditionFormattingRule;\n    onCancel: () => void;\n}\n\nconst getUnitId = (univerInstanceService: IUniverInstanceService) => univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getUnitId();\nconst getSubUnitId = (univerInstanceService: IUniverInstanceService) => univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getActiveSheet()?.getSheetId();\n\nexport const RuleEdit = (props: IRuleEditProps) => {\n    const localeService = useDependency(LocaleService);\n    const commandService = useDependency(ICommandService);\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const conditionalFormattingRuleModel = useDependency(ConditionalFormattingRuleModel);\n    const selectionManagerService = useDependency(SheetsSelectionsService);\n    const unitId = getUnitId(univerInstanceService);\n    const subUnitId = getSubUnitId(univerInstanceService);\n\n    const [errorText, errorTextSet] = useState<string | undefined>(undefined);\n    const rangeResult = useRef<IRange[]>(props.rule?.ranges ?? []);\n\n    const rangeString = useMemo(() => {\n        let ranges = props.rule?.ranges;\n        if (!ranges?.length) {\n            ranges = selectionManagerService.getCurrentSelections()?.map((s) => s.range) ?? [];\n        }\n        rangeResult.current = ranges;\n        if (!ranges?.length) {\n            return '';\n        }\n        return ranges.map((range) => {\n            const v = serializeRange(range);\n            return v === 'NaN' ? '' : v;\n        }).filter((r) => !!r).join(',');\n    }, [props.rule]);\n\n    const options = [\n        { label: localeService.t('sheet.cf.ruleType.highlightCell'), value: '1' },\n        { label: localeService.t('sheet.cf.panel.rankAndAverage'), value: '2' },\n        { label: localeService.t('sheet.cf.ruleType.dataBar'), value: '3' },\n        { label: localeService.t('sheet.cf.ruleType.colorScale'), value: '4' },\n        { label: localeService.t('sheet.cf.ruleType.formula'), value: '5' },\n        { label: localeService.t('sheet.cf.ruleType.iconSet'), value: '6' },\n    ];\n\n    const [ruleType, ruleTypeSet] = useState(() => {\n        const type = props.rule?.rule.type;\n        const defaultType = options[0].value;\n        if (!type) {\n            return defaultType;\n        }\n        switch (type) {\n            case CFRuleType.highlightCell: {\n                const subType = props.rule?.rule.subType;\n                switch (subType) {\n                    case CFSubRuleType.number:\n                    case CFSubRuleType.text:\n                    case CFSubRuleType.duplicateValues:\n                    case CFSubRuleType.uniqueValues:\n                    case CFSubRuleType.timePeriod: {\n                        return '1';\n                    }\n                    case CFSubRuleType.average:\n                    case CFSubRuleType.rank: {\n                        return '2';\n                    }\n                    case CFSubRuleType.formula: {\n                        return '5';\n                    }\n                }\n                break;\n            }\n            case CFRuleType.dataBar: {\n                return '3';\n            }\n            case CFRuleType.colorScale: {\n                return '4';\n            }\n            case CFRuleType.iconSet: {\n                return '6';\n            }\n        }\n        return defaultType;\n    });\n    const result = useRef<Parameters<IStyleEditorProps['onChange']>>(undefined);\n    const interceptorManager = useMemo(() => {\n        const _interceptorManager = new InterceptorManager({ beforeSubmit, submit });\n        return _interceptorManager;\n    }, []);\n\n    const StyleEditor = useMemo(() => {\n        switch (ruleType) {\n            case '1': {\n                return HighlightCellStyleEditor;\n            }\n            case '2': {\n                return RankStyleEditor;\n            }\n            case '3': {\n                return DataBarStyleEditor;\n            }\n            case '4': {\n                return ColorScaleStyleEditor;\n            }\n            case '5': {\n                return FormulaStyleEditor;\n            }\n            case '6': {\n                return IconSet;\n            }\n            default: {\n                return HighlightCellStyleEditor;\n            }\n        }\n    }, [ruleType]);\n\n    useEffect(() => {\n        // If the child table which  the rule being edited is deleted, exit edit mode\n        const disposable = commandService.onCommandExecuted((commandInfo) => {\n            if (commandInfo.id === RemoveSheetMutation.id) {\n                const params = commandInfo.params as IRemoveSheetMutationParams;\n                if (params.subUnitId === subUnitId && params.unitId === unitId) {\n                    props.onCancel();\n                }\n            }\n            if (commandInfo.id === SetWorksheetActiveOperation.id) {\n                props.onCancel();\n            }\n        });\n        return () => disposable.dispose();\n    }, []);\n\n    const onStyleChange = (config: unknown) => {\n        result.current = config as Parameters<IStyleEditorProps['onChange']>;\n    };\n\n    const onRangeSelectorChange = (rangeString: string) => {\n        const result = rangeString.split(',').filter((e) => !!e).map(deserializeRangeWithSheet).map((item) => item.range);\n        rangeResult.current = result;\n    };\n\n    const handleSubmit = () => {\n        if (errorText) {\n            return;\n        }\n        const getRanges = () => {\n            const worksheet = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getActiveSheet();\n            if (!worksheet) {\n                throw new Error('No active sheet found');\n            }\n            const ranges = rangeResult.current.map((range) => setEndForRange(range, worksheet.getRowCount(), worksheet.getColumnCount()));\n            const result = ranges.filter((range) => !(Number.isNaN(range.startRow) || Number.isNaN(range.startColumn)));\n            return result;\n        };\n        const ranges = getRanges();\n        const beforeSubmitResult = interceptorManager.fetchThroughInterceptors(interceptorManager.getInterceptPoints().beforeSubmit)(true, null);\n        if (beforeSubmitResult) {\n            const result = interceptorManager.fetchThroughInterceptors(interceptorManager.getInterceptPoints().submit)(null, null);\n            if (result) {\n                // When you switch the child table, you need to fetch it again here, instead of using the\n                const unitId = getUnitId(univerInstanceService);\n                const subUnitId = getSubUnitId(univerInstanceService);\n                if (!unitId || !subUnitId) {\n                    throw new Error('No active sheet found');\n                }\n                let rule = {} as IConditionFormattingRule;\n                if (props.rule && props.rule.cfId) {\n                    rule = { ...props.rule, ranges, rule: result };\n                    commandService.executeCommand(SetCfCommand.id, { unitId, subUnitId, rule } as ISetCfCommandParams);\n                    props.onCancel();\n                } else {\n                    const cfId = conditionalFormattingRuleModel.createCfId(unitId, subUnitId);\n                    rule = { cfId, ranges, rule: result, stopIfTrue: false };\n                    commandService.executeCommand(AddCfCommand.id, { unitId, subUnitId, rule } as IAddCfCommandParams);\n                    props.onCancel();\n                }\n            }\n        }\n    };\n\n    const handleCancel = () => {\n        props.onCancel();\n    };\n\n    const handleVerify = (v: boolean, rangeText: string) => {\n        if (v) {\n            if (rangeText.length < 1) {\n                errorTextSet(localeService.t('sheet.cf.errorMessage.rangeError'));\n            } else {\n                errorTextSet(undefined);\n            }\n        } else {\n            errorTextSet(localeService.t('sheet.cf.errorMessage.rangeError'));\n        }\n    };\n    return (\n        <div className={styles.cfRuleStyleEditor}>\n            <div className={styleBase.title}>{localeService.t('sheet.cf.panel.range')}</div>\n            <div\n                className={`\n                  ${styleBase.mTBase}\n                `}\n            >\n                <RangeSelector\n                    unitId={unitId}\n                    subUnitId={subUnitId}\n                    initialValue={rangeString}\n                    onChange={(_, text) => onRangeSelectorChange(text)}\n                    onVerify={handleVerify}\n                />\n                {errorText && <div className={styles.cfErrorText}>{errorText}</div>}\n            </div>\n            <div className={styleBase.title}>{localeService.t('sheet.cf.panel.styleType')}</div>\n            <div className={styleBase.mTBase}>\n                <Select className={styles.width100} value={ruleType} options={options} onChange={(e) => ruleTypeSet(e)} />\n            </div>\n            <StyleEditor interceptorManager={interceptorManager} rule={props.rule?.rule as any} onChange={onStyleChange} />\n            <div\n                className={`\n                  ${styleBase.mTBase}\n                  ${styles.btnList}\n                `}\n            >\n                <Button size=\"small\" onClick={handleCancel}>{localeService.t('sheet.cf.panel.cancel')}</Button>\n                <Button className={styleBase.mLSm} size=\"small\" type=\"primary\" onClick={handleSubmit}>{localeService.t('sheet.cf.panel.submit')}</Button>\n            </div>\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Workbook } from '@univerjs/core';\nimport type { IColorScale, IConditionalFormattingRuleConfig } from '@univerjs/sheets-conditional-formatting';\nimport type { IStyleEditorProps } from './type';\nimport { IUniverInstanceService, LocaleService, UniverInstanceType } from '@univerjs/core';\nimport { clsx, InputNumber, Select } from '@univerjs/design';\nimport { CFRuleType, CFValueType, createDefaultValueByValueType } from '@univerjs/sheets-conditional-formatting';\nimport { FormulaEditor } from '@univerjs/sheets-formula-ui';\nimport { useDependency, useSidebarClick } from '@univerjs/ui';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { ColorPicker } from '../../color-picker';\nimport { Preview } from '../../preview';\nimport stylesBase from '../index.module.less';\nimport styles from './index.module.less';\n\nconst createOptionItem = (text: string, localeService: LocaleService) => ({ label: localeService.t(`sheet.cf.valueType.${text}`), value: text });\n\nconst TextInput = (props: { id: string; type: CFValueType | 'none'; value: number | string; onChange: (v: number | string) => void; className: string }) => {\n    const { type, className, onChange, id, value } = props;\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const unitId = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getUnitId();\n    const subUnitId = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getActiveSheet()?.getSheetId();\n    const formulaInitValue = useMemo(() => {\n        return String(value).startsWith('=') ? String(value) : '=';\n    }, [value]);\n    const config = useMemo(() => {\n        if ([CFValueType.max, CFValueType.min, 'none'].includes(type as CFValueType)) {\n            return { disabled: true };\n        }\n        if ([CFValueType.percent, CFValueType.percentile].includes(type as CFValueType)) {\n            return {\n                min: 0,\n                max: 100,\n            };\n        }\n        return {\n            min: Number.MIN_SAFE_INTEGER,\n            max: Number.MAX_SAFE_INTEGER,\n        };\n    }, [type]);\n\n    const formulaEditorActionsRef = useRef<Parameters<typeof FormulaEditor>[0]['actions']>({});\n    const [isFocusFormulaEditor, isFocusFormulaEditorSet] = useState(false);\n\n    useSidebarClick((e: MouseEvent) => {\n        const handleOutClick = formulaEditorActionsRef.current?.handleOutClick;\n        handleOutClick && handleOutClick(e, () => isFocusFormulaEditorSet(false));\n    });\n\n    if (type === CFValueType.formula) {\n        return (\n            <div style={{ width: '100%', marginLeft: 4 }}>\n                <FormulaEditor\n                    initValue={formulaInitValue as any}\n                    unitId={unitId}\n                    subUnitId={subUnitId}\n                    isFocus={isFocusFormulaEditor}\n                    onChange={(v = '') => {\n                        const formula = v || '';\n                        onChange(formula);\n                    }}\n                    onFocus={() => isFocusFormulaEditorSet(true)}\n                    actions={formulaEditorActionsRef.current}\n                />\n            </div>\n        );\n    } else {\n        return <InputNumber className={className} value={Number(props.value) || 0} onChange={(v) => props.onChange(v || 0)} {...config} />;\n    }\n};\nexport const ColorScaleStyleEditor = (props: IStyleEditorProps) => {\n    const { interceptorManager } = props;\n    const localeService = useDependency(LocaleService);\n\n    const rule = props.rule?.type === CFRuleType.colorScale ? props.rule : undefined as IColorScale | undefined;\n    const commonOptions = [createOptionItem(CFValueType.num, localeService), createOptionItem(CFValueType.percent, localeService), createOptionItem(CFValueType.percentile, localeService), createOptionItem(CFValueType.formula, localeService)];\n    const minOptions = [createOptionItem(CFValueType.min, localeService), ...commonOptions];\n    const medianOptions = [createOptionItem('none', localeService), ...commonOptions];\n    const maxOptions = [createOptionItem(CFValueType.max, localeService), ...commonOptions];\n\n    const [minType, minTypeSet] = useState(() => {\n        const defaultV = CFValueType.min;\n        if (!rule) {\n            return defaultV;\n        }\n        return rule.config[0]?.value.type || defaultV;\n    });\n    const [medianType, medianTypeSet] = useState<CFValueType | 'none'>(() => {\n        const defaultV = 'none';\n        if (!rule) {\n            return defaultV;\n        }\n        if (rule.config.length !== 3) {\n            return defaultV;\n        }\n        return rule.config[1]?.value.type || defaultV;\n    });\n    const [maxType, maxTypeSet] = useState(() => {\n        const defaultV = CFValueType.max;\n        if (!rule) {\n            return defaultV;\n        }\n        return rule.config[rule.config.length - 1]?.value.type || defaultV;\n    });\n\n    const [minValue, minValueSet] = useState(() => {\n        const defaultV = 10;\n        if (!rule) {\n            return defaultV;\n        }\n        const valueConfig = rule.config[0];\n        return valueConfig?.value.value === undefined ? defaultV : valueConfig?.value.value;\n    });\n    const [medianValue, medianValueSet] = useState(() => {\n        const defaultV = 50;\n        if (!rule) {\n            return defaultV;\n        }\n        if (rule.config.length !== 3) {\n            return defaultV;\n        }\n        const v = rule.config[1]?.value.value;\n        return v === undefined ? defaultV : v;\n    });\n    const [maxValue, maxValueSet] = useState(() => {\n        const defaultV = 90;\n        if (!rule) {\n            return defaultV;\n        }\n        const v = rule.config[rule.config.length - 1]?.value.value;\n        return v === undefined ? defaultV : v;\n    });\n\n    const [minColor, minColorSet] = useState(() => {\n        const defaultV = '#d0d9fb';\n        if (!rule) {\n            return defaultV;\n        }\n        return rule.config[0]?.color || defaultV;\n    });\n    const [medianColor, medianColorSet] = useState(() => {\n        const defaultV = '#7790f3';\n        if (!rule) {\n            return defaultV;\n        }\n        if (rule.config.length !== 3) {\n            return defaultV;\n        }\n        return rule.config[1]?.color || defaultV;\n    });\n    const [maxColor, maxColorSet] = useState(() => {\n        const defaultV = '#2e55ef';\n        if (!rule) {\n            return defaultV;\n        }\n        return rule.config[rule.config.length - 1]?.color || defaultV;\n    });\n\n    const getResult = useMemo(() => (option: {\n        minType: typeof minType;\n        medianType: typeof medianType;\n        maxType: typeof maxType;\n        minValue: number | string;\n        medianValue: number | string;\n        maxValue: number | string;\n        minColor: string;\n        medianColor: string;\n        maxColor: string;\n    }) => {\n        const { minType, medianType, maxType, minValue, medianValue, maxValue, minColor, medianColor, maxColor } = option;\n        const list = [];\n        list.push({ color: minColor, value: { type: minType, value: minValue } });\n        medianType !== 'none' && list.push({ color: medianColor, value: { type: medianType, value: medianValue } });\n        list.push({ color: maxColor, value: { type: maxType, value: maxValue } });\n        const config: IColorScale['config'] = list.map((item, index) => ({ ...item, index }));\n        return { config, type: CFRuleType.colorScale };\n    }, []);\n\n    useEffect(() => {\n        const dispose = interceptorManager.intercept(interceptorManager.getInterceptPoints().submit, {\n            handler() {\n                return getResult({ minType, medianType, maxType, minValue, medianValue, maxValue, minColor, medianColor, maxColor });\n            },\n        });\n        return dispose as () => void;\n    }, [getResult, minType, medianType, maxType, minValue, medianValue, maxValue, minColor, medianColor, maxColor, interceptorManager]);\n\n    const handleChange = (option: {\n        minType: typeof minType;\n        medianType: typeof medianType;\n        maxType: typeof maxType;\n        minValue: number | string;\n        medianValue: number | string;\n        maxValue: number | string;\n        minColor: string;\n        medianColor: string;\n        maxColor: string;\n    }) => {\n        props.onChange(getResult(option));\n    };\n    return (\n        <div>\n            <div className={stylesBase.title}>{localeService.t('sheet.cf.panel.styleRule')}</div>\n            <div\n                className={`\n                  ${styles.cfPreviewWrap}\n                `}\n            >\n                <Preview rule={getResult({ minType, medianType, maxType, minValue, medianValue, maxValue, minColor, medianColor, maxColor }) as IConditionalFormattingRuleConfig} />\n            </div>\n            <div className={stylesBase.label}>{localeService.t('sheet.cf.valueType.min')}</div>\n            <div\n                className={clsx(`\n                  ${stylesBase.labelContainer}\n                  ${stylesBase.mTSm}\n                `, 'univer-box-border univer-h-7')}\n            >\n                <Select\n                    style={{ flexShrink: 0 }}\n                    options={minOptions}\n                    value={minType}\n                    onChange={(v) => {\n                        minTypeSet(v as CFValueType);\n                        const value = createDefaultValueByValueType(v as CFValueType, 10);\n                        minValueSet(value);\n                        handleChange({ minType: v as CFValueType, medianType, maxType, minValue: value, medianValue, maxValue, minColor, medianColor, maxColor });\n                    }}\n                />\n                <TextInput\n                    id=\"min\"\n                    className={`\n                      ${stylesBase.mLXxs}\n                    `}\n                    value={minValue}\n                    type={minType}\n                    onChange={(v) => {\n                        minValueSet(v);\n                        handleChange({ minType, medianType, maxType, minValue: v, medianValue, maxValue, minColor, medianColor, maxColor });\n                    }}\n                />\n                <ColorPicker\n                    className={stylesBase.mLXxs}\n                    color={minColor}\n                    onChange={(v) => {\n                        minColorSet(v);\n                        handleChange({ minType, medianType, maxType, minValue, medianValue, maxValue, minColor: v, medianColor, maxColor });\n                    }}\n                />\n            </div>\n            <div className={stylesBase.label}>{localeService.t('sheet.cf.panel.medianValue')}</div>\n            <div\n                className={clsx(`\n                  ${stylesBase.labelContainer}\n                  ${stylesBase.mTSm}\n                `, 'univer-box-border univer-h-7')}\n            >\n                <Select\n                    style={{ flexShrink: 0 }}\n                    options={medianOptions}\n                    value={medianType}\n                    onChange={(v) => {\n                        medianTypeSet(v as CFValueType);\n                        const value = createDefaultValueByValueType(v as CFValueType, 50);\n                        medianValueSet(value);\n                        handleChange({ minType, medianType: v as CFValueType, maxType, minValue, medianValue: value, maxValue, minColor, medianColor, maxColor });\n                    }}\n                />\n\n                <TextInput\n                    id=\"median\"\n                    className={`\n                      ${stylesBase.mLXxs}\n                    `}\n                    value={medianValue}\n                    type={medianType}\n                    onChange={(v) => {\n                        medianValueSet(v);\n                        handleChange({ minType, medianType, maxType, minValue, medianValue: v, maxValue, minColor, medianColor, maxColor });\n                    }}\n                />\n                {medianType !== 'none' && (\n                    <ColorPicker\n                        className={stylesBase.mLXxs}\n                        color={medianColor}\n                        onChange={(v) => {\n                            medianColorSet(v);\n                            handleChange({ minType, medianType, maxType, minValue, medianValue, maxValue, minColor, medianColor: v, maxColor });\n                        }}\n                    />\n                )}\n\n            </div>\n            <div className={stylesBase.label}>{localeService.t('sheet.cf.valueType.max')}</div>\n            <div\n                className={clsx(`\n                  ${stylesBase.labelContainer}\n                  ${stylesBase.mTSm}\n                `, 'univer-box-border univer-h-7')}\n            >\n                <Select\n                    style={{ flexShrink: 0 }}\n                    options={maxOptions}\n                    value={maxType}\n                    onChange={(v) => {\n                        maxTypeSet(v as CFValueType);\n                        const value = createDefaultValueByValueType(v as CFValueType, 90);\n                        maxValueSet(value);\n                        handleChange({ minType, medianType, maxType: v as CFValueType, minValue, medianValue, maxValue: value, minColor, medianColor, maxColor });\n                    }}\n                />\n                <TextInput\n                    id=\"max\"\n                    className={`\n                      ${stylesBase.mLXxs}\n                    `}\n                    value={maxValue}\n                    type={maxType}\n                    onChange={(v) => {\n                        maxValueSet(v);\n                        handleChange({ minType, medianType, maxType, minValue, medianValue, maxValue: v, minColor, medianColor, maxColor });\n                    }}\n                />\n                <ColorPicker\n                    className={stylesBase.mLXxs}\n                    color={maxColor}\n                    onChange={(v) => {\n                        maxColorSet(v);\n                        handleChange({ minType, medianType, maxType, minValue, medianValue, maxValue, minColor, medianColor, maxColor: v });\n                    }}\n                />\n            </div>\n\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ColorKit } from '@univerjs/core';\nimport { Dropdown, ColorPicker as OriginColorPicker } from '@univerjs/design';\nimport { MoreDownSingle } from '@univerjs/icons';\nimport { ComponentManager, useDependency } from '@univerjs/ui';\nimport React, { useMemo } from 'react';\n\nimport styles from './index.module.less';\n\ninterface IColorPickerProps {\n    color: string;\n    onChange: (color: string) => void;\n    disable?: boolean;\n    iconId?: string;\n    className?: string;\n    isNeedDropdownIcon?: boolean;\n};\n\nexport const ColorPicker = (props: IColorPickerProps) => {\n    const { color, onChange, disable = false, iconId = 'PaintBucket', className, isNeedDropdownIcon = true } = props;\n    const componentManager = useDependency(ComponentManager);\n\n    const colorKit = useMemo(() => new ColorKit(color), [color]);\n    const Icon = componentManager.get(iconId);\n\n    return Icon && (!disable\n        ? (\n            <Dropdown\n                overlay={(\n                    <div className=\"univer-rounded-lg univer-p-4\">\n                        <OriginColorPicker value={color} onChange={onChange} />\n                    </div>\n                )}\n            >\n                <span\n                    className={`\n                      ${styles.cfColorPickerIcon}\n                      ${className}\n                    `}\n                >\n                    <Icon extend={{ colorChannel1: colorKit.isValid ? color : 'rgb(var(--primary-color))' }} />\n                    {isNeedDropdownIcon && <MoreDownSingle className={styles.iconDropdown} />}\n                </span>\n            </Dropdown>\n        )\n        : <Icon className={className} extend={{ colorChannel1: colorKit.isValid ? color : 'rgb(var(--primary-color))' }} />);\n};\n", "export default {\n  \"cfColorPicker\": \"univer-cf-color-picker\",\n  \"cfColorPickerIcon\": \"univer-cf-color-picker-icon\",\n  \"iconDropdown\": \"univer-icon-dropdown\"\n};import \"ni:sha-256;QW179_h-Y8SRCS8zjRWUOQtWTNiWtMzLbRyD68eW5CY\";", "export default {\n  \"cfRuleStyleEditor\": \"univer-cf-rule-style-editor\",\n  \"cfErrorText\": \"univer-cf-error-text\",\n  \"cfPreviewWrap\": \"univer-cf-preview-wrap\",\n  \"text\": \"univer-text\",\n  \"positionRelative\": \"univer-position-relative\",\n  \"btnList\": \"univer-btn-list\",\n  \"utilItem\": \"univer-util-item\",\n  \"iconSet\": \"univer-icon-set\",\n  \"renderConfig\": \"univer-render-config\",\n  \"flex\": \"univer-flex\",\n  \"width45\": \"univer-width45\",\n  \"iconWrap\": \"univer-icon-wrap\",\n  \"icon\": \"univer-icon\",\n  \"dropdownIcon\": \"univer-dropdown-icon\",\n  \"errorInput\": \"univer-error-input\",\n  \"errorText\": \"univer-error-text\",\n  \"iconGroupList\": \"univer-icon-group-list\",\n  \"title\": \"univer-title\",\n  \"group\": \"univer-group\",\n  \"itemContent\": \"univer-item-content\",\n  \"itemWrap\": \"univer-item-wrap\",\n  \"item\": \"univer-item\",\n  \"iconItemListWrap\": \"univer-icon-item-list-wrap\",\n  \"none\": \"univer-none\",\n  \"iconItemList\": \"univer-icon-item-list\",\n  \"width100\": \"univer-width100\",\n  \"stress\": \"univer-stress\"\n};import \"ni:sha-256;JoUeWctHOG54d3xeXeUFElHNYa8haGULCu5KGzEMk9I\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Workbook } from '@univerjs/core';\nimport type { IConditionalFormattingRuleConfig, IValueConfig } from '@univerjs/sheets-conditional-formatting';\nimport type { IStyleEditorProps } from './type';\nimport { IUniverInstanceService, LocaleService, UniverInstanceType } from '@univerjs/core';\nimport { Checkbox, InputNumber, Radio, RadioGroup, Select } from '@univerjs/design';\nimport { CFRuleType, CFValueType, createDefaultValueByValueType, defaultDataBarNativeColor, defaultDataBarPositiveColor } from '@univerjs/sheets-conditional-formatting';\n\nimport { FormulaEditor } from '@univerjs/sheets-formula-ui';\nimport { useDependency, useSidebarClick } from '@univerjs/ui';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { ColorPicker } from '../../color-picker';\nimport { Preview } from '../../preview';\nimport stylesBase from '../index.module.less';\nimport styles from './index.module.less';\n\nconst createOptionItem = (text: CFValueType, localeService: LocaleService) => ({ label: localeService.t(`sheet.cf.valueType.${text}`), value: text });\n\nconst InputText = (props: { disabled?: boolean; id: string; className: string; type: CFValueType; value: string | number; onChange: (v: string | number) => void }) => {\n    const { onChange, className, value, type, id, disabled = false } = props;\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const unitId = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getUnitId();\n    const subUnitId = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getActiveSheet()?.getSheetId();\n\n    const formulaEditorActionsRef = useRef<Parameters<typeof FormulaEditor>[0]['actions']>({});\n    const [isFocusFormulaEditor, isFocusFormulaEditorSet] = useState(false);\n\n    useSidebarClick((e: MouseEvent) => {\n        const handleOutClick = formulaEditorActionsRef.current?.handleOutClick;\n        handleOutClick && handleOutClick(e, () => isFocusFormulaEditorSet(false));\n    });\n\n    const _value = useRef(value);\n    const config = useMemo(() => {\n        if ([CFValueType.percentile, CFValueType.percent].includes(type)) {\n            return {\n                max: 100,\n                min: 0,\n            };\n        }\n        return {\n            min: Number.MIN_SAFE_INTEGER,\n            max: Number.MAX_SAFE_INTEGER,\n        };\n    }, [type]);\n    if (type === CFValueType.formula) {\n        const v = String(_value.current).startsWith('=') ? String(_value.current) || '' : '=';\n        return (\n            <div style={{ width: '100%', marginLeft: 12 }}>\n                <FormulaEditor\n                    initValue={v as any}\n                    unitId={unitId}\n                    subUnitId={subUnitId}\n                    isFocus={isFocusFormulaEditor}\n                    onChange={(v = '') => {\n                        const formula = v || '';\n                        onChange(formula);\n                    }}\n                    onFocus={() => isFocusFormulaEditorSet(true)}\n                    actions={formulaEditorActionsRef.current}\n                />\n            </div>\n        );\n    }\n    return (\n        <InputNumber\n            className={className}\n            value={Number(value) || 0}\n            disabled={disabled}\n            onChange={(v) => {\n                onChange(v || 0);\n            }}\n            {...config}\n        />\n    );\n};\nexport const DataBarStyleEditor = (props: IStyleEditorProps) => {\n    const { interceptorManager } = props;\n    const localeService = useDependency(LocaleService);\n\n    const rule = props.rule?.type === CFRuleType.dataBar ? props.rule : undefined;\n    const [isGradient, isGradientSet] = useState(() => {\n        const defaultV = '0';\n        if (!rule) {\n            return defaultV;\n        }\n        return rule.config?.isGradient ? '1' : '0';\n    });\n    const [positiveColor, positiveColorSet] = useState(() => {\n        if (!rule) {\n            return defaultDataBarPositiveColor;\n        }\n        return rule.config?.positiveColor || defaultDataBarPositiveColor;\n    });\n    const [nativeColor, nativeColorSet] = useState(() => {\n        if (!rule) {\n            return defaultDataBarNativeColor;\n        }\n        return rule.config?.nativeColor || defaultDataBarNativeColor;\n    });\n    const commonOptions = [createOptionItem(CFValueType.num, localeService), createOptionItem(CFValueType.percent, localeService), createOptionItem(CFValueType.percentile, localeService), createOptionItem(CFValueType.formula, localeService)];\n    const minOptions = [createOptionItem(CFValueType.min, localeService), ...commonOptions];\n    const maxOptions = [createOptionItem(CFValueType.max, localeService), ...commonOptions];\n    const [minValueType, minValueTypeSet] = useState<CFValueType>(() => {\n        const defaultV = minOptions[0].value as CFValueType;\n        if (!rule) {\n            return defaultV;\n        }\n        return rule.config?.min.type || defaultV;\n    });\n    const [maxValueType, maxValueTypeSet] = useState<CFValueType>(() => {\n        const defaultV = maxOptions[0].value as CFValueType;\n        if (!rule) {\n            return defaultV;\n        }\n        return rule.config?.max.type || defaultV;\n    });\n    const [minValue, minValueSet] = useState(() => {\n        const defaultV = 0;\n        if (!rule) {\n            return defaultV;\n        }\n        const value = rule.config?.min || {};\n        if (value.type === CFValueType.formula) {\n            return value.value || '=';\n        }\n        return value.value || defaultV;\n    });\n    const [maxValue, maxValueSet] = useState(() => {\n        const defaultV = 100;\n        if (!rule) {\n            return defaultV;\n        }\n        const value = rule.config?.max || {};\n        if (value.type === CFValueType.formula) {\n            return value.value || '=';\n        }\n        return value.value === undefined ? defaultV : value.value;\n    });\n\n    const [isShowValue, isShowValueSet] = useState(() => {\n        const defaultV = true;\n        if (!rule) {\n            return defaultV;\n        }\n        return rule.isShowValue === undefined ? defaultV : !!rule.isShowValue;\n    });\n\n    const getResult = (option: {\n        minValueType: CFValueType;\n        minValue: number | string;\n        maxValueType: CFValueType;\n        maxValue: number | string;\n        isGradient: string;\n        positiveColor: string;\n        isShowValue: boolean;\n        nativeColor: string;\n    }) => {\n        const config: {\n            min: IValueConfig;\n            max: IValueConfig;\n            isGradient: boolean;\n            positiveColor: string;\n            nativeColor: string;\n        } = {\n            min: { type: option.minValueType, value: option.minValue },\n            max: { type: option.maxValueType, value: option.maxValue },\n            isGradient: option.isGradient === '1',\n            positiveColor: option.positiveColor || defaultDataBarPositiveColor,\n            nativeColor: option.nativeColor || defaultDataBarNativeColor,\n        };\n        return { config, type: CFRuleType.dataBar, isShowValue: option.isShowValue };\n    };\n    useEffect(() => {\n        const dispose = interceptorManager.intercept(interceptorManager.getInterceptPoints().submit, {\n            handler() {\n                return getResult({ isGradient, minValue, minValueType, maxValue, maxValueType, positiveColor, nativeColor, isShowValue });\n            },\n        });\n        return dispose as () => void;\n    }, [isGradient, minValue, minValueType, maxValue, maxValueType, positiveColor, nativeColor, interceptorManager, isShowValue]);\n\n    const _handleChange = (option: {\n        minValueType: CFValueType;\n        minValue: number | string;\n        maxValueType: CFValueType;\n        maxValue: number | string;\n        isGradient: string;\n        positiveColor: string;\n        isShowValue: boolean;\n        nativeColor: string;\n    }) => {\n        props.onChange(getResult(option));\n    };\n\n    const handlePositiveColorChange = (color: string) => {\n        positiveColorSet(color);\n\n        _handleChange({ isGradient, minValue, minValueType, maxValue, maxValueType, positiveColor: color, nativeColor, isShowValue });\n    };\n    const handleNativeColorChange = (color: string) => {\n        nativeColorSet(color);\n        _handleChange({ isGradient, minValue, minValueType, maxValue, maxValueType, positiveColor, nativeColor: color, isShowValue });\n    };\n\n    const isShowInput = (type: string) => {\n        return commonOptions.map((item) => item.value).includes(type as CFValueType);\n    };\n\n    return (\n        <div>\n            <div className={stylesBase.title}>\n                {localeService.t('sheet.cf.panel.styleRule')}\n            </div>\n            <div\n                className={`\n                  ${styles.cfPreviewWrap}\n                `}\n            >\n                <Preview rule={getResult({ isGradient, minValue, minValueType, maxValue, maxValueType, positiveColor, nativeColor, isShowValue }) as IConditionalFormattingRuleConfig} />\n            </div>\n            <div>\n                <div className={stylesBase.label}>\n                    {localeService.t('sheet.cf.panel.fillType')}\n                </div>\n\n                <div\n                    className={`\n                      ${stylesBase.mTSm}\n                      ${stylesBase.mLXxs}\n                      ${stylesBase.labelContainer}\n                    `}\n                >\n                    <RadioGroup\n                        value={isGradient}\n                        onChange={(v) => {\n                            isGradientSet(v as string);\n                            _handleChange({ isGradient: v as string, minValue, minValueType, maxValue, maxValueType, positiveColor, nativeColor, isShowValue });\n                        }}\n                    >\n                        <Radio value=\"0\">\n                            <span className={styles.text}>{localeService.t('sheet.cf.panel.pureColor')}</span>\n                        </Radio>\n                        <Radio value=\"1\">\n                            <span className={styles.text}>{localeService.t('sheet.cf.panel.gradient')}</span>\n                        </Radio>\n                    </RadioGroup>\n                    <div\n                        className={`\n                          ${styles.utilItem}\n                          ${stylesBase.mLXl}\n                        `}\n                    >\n                        <Checkbox\n                            checked={!isShowValue}\n                            onChange={(v) => {\n                                isShowValueSet(!v);\n                                _handleChange({ isGradient: v as string, minValue, minValueType, maxValue, maxValueType, positiveColor, nativeColor, isShowValue: !v });\n                            }}\n                        />\n                        {localeService.t('sheet.cf.panel.onlyShowDataBar')}\n                    </div>\n                </div>\n            </div>\n            <div>\n                <div className={stylesBase.label}>{localeService.t('sheet.cf.panel.colorSet')}</div>\n                <div\n                    className={`\n                      ${stylesBase.labelContainer}\n                      ${stylesBase.mTSm}\n                      ${stylesBase.mLXxs}\n                    `}\n                >\n                    <div\n                        className={`\n                          ${stylesBase.labelContainer}\n                        `}\n                    >\n                        <div\n                            className={`\n                              ${styles.text}\n                            `}\n                        >\n                            {localeService.t('sheet.cf.panel.native')}\n                        </div>\n                        <ColorPicker\n                            color={nativeColor}\n                            onChange={handleNativeColorChange}\n                        />\n                    </div>\n                    <div\n                        className={`\n                          ${stylesBase.labelContainer}\n                          ${stylesBase.mLSm}\n                        `}\n                    >\n                        <div\n                            className={`\n                              ${styles.text}\n                            `}\n                        >\n                            {localeService.t('sheet.cf.panel.positive')}\n                        </div>\n                        <ColorPicker\n                            color={positiveColor}\n                            onChange={handlePositiveColorChange}\n                        />\n                    </div>\n                </div>\n\n            </div>\n            <div>\n                <div className={stylesBase.label}>{localeService.t('sheet.cf.valueType.min')}</div>\n                <div\n                    className={`\n                      ${stylesBase.mTSm}\n                      ${stylesBase.labelContainer}\n                    `}\n                >\n                    <Select\n                        style={{ width: '50%', flexShrink: 0 }}\n                        options={minOptions}\n                        value={minValueType}\n                        onChange={(v) => {\n                            minValueTypeSet(v as CFValueType);\n                            const value = createDefaultValueByValueType(v as CFValueType, 10);\n                            minValueSet(value);\n                            _handleChange({ isGradient, minValue: value, minValueType: v as CFValueType, maxValue, maxValueType, positiveColor, nativeColor, isShowValue });\n                        }}\n                    />\n\n                    <InputText\n                        disabled={!isShowInput(minValueType)}\n                        id=\"min\"\n                        type={minValueType}\n                        className={stylesBase.mLSm}\n                        value={minValue}\n                        onChange={(v) => {\n                            minValueSet(v || 0);\n                            _handleChange({ isGradient, minValue: v || 0, minValueType, maxValue, maxValueType, positiveColor, nativeColor, isShowValue });\n                        }}\n                    />\n                </div>\n                <div className={stylesBase.label}>{localeService.t('sheet.cf.valueType.max')}</div>\n                <div\n                    className={`\n                      ${stylesBase.mTSm}\n                      ${stylesBase.labelContainer}\n                    `}\n                >\n                    <Select\n                        style={{ width: '50%', flexShrink: 0 }}\n                        options={maxOptions}\n                        value={maxValueType}\n                        onChange={(v) => {\n                            maxValueTypeSet(v as CFValueType);\n                            const value = createDefaultValueByValueType(v as CFValueType, 90);\n                            maxValueSet(value);\n                            _handleChange({ isGradient, minValue, minValueType, maxValue: value, maxValueType: v as CFValueType, positiveColor, nativeColor, isShowValue });\n                        }}\n                    />\n                    <InputText\n                        disabled={!isShowInput(maxValueType)}\n                        id=\"max\"\n                        type={maxValueType}\n                        className={stylesBase.mLSm}\n                        value={maxValue}\n                        onChange={(v) => {\n                            maxValueSet(v || 0);\n                            _handleChange({ isGradient, minValue, minValueType, maxValue: v || 0, maxValueType, positiveColor, nativeColor, isShowValue });\n                        }}\n                    />\n                </div>\n            </div>\n\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Workbook } from '@univerjs/core';\nimport type { IAverageHighlightCell, IConditionalFormattingRuleConfig, IHighlightCell, IRankHighlightCell } from '@univerjs/sheets-conditional-formatting';\nimport type { IStyleEditorProps } from './type';\nimport { IUniverInstanceService, LocaleService, UniverInstanceType } from '@univerjs/core';\nimport { CFRuleType, CFSubRuleType } from '@univerjs/sheets-conditional-formatting';\nimport { FormulaEditor } from '@univerjs/sheets-formula-ui';\nimport { useDependency, useSidebarClick } from '@univerjs/ui';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { ConditionalStyleEditor } from '../../conditional-style-editor';\nimport { Preview } from '../../preview';\nimport stylesBase from '../index.module.less';\nimport styles from './index.module.less';\n\nexport const FormulaStyleEditor = (props: IStyleEditorProps) => {\n    const { onChange, interceptorManager } = props;\n    const localeService = useDependency(LocaleService);\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const workbook = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!;\n    const worksheet = workbook.getActiveSheet();\n\n    const rule = props.rule?.type === CFRuleType.highlightCell ? props.rule : undefined as IRankHighlightCell | IAverageHighlightCell | undefined;\n\n    const divEleRef = useRef<HTMLDivElement>(null);\n    const [isFocusFormulaEditor, isFocusFormulaEditorSet] = useState(false);\n    const formulaEditorActionsRef = useRef<Parameters<typeof FormulaEditor>[0]['actions']>({});\n    const [style, styleSet] = useState<IHighlightCell['style']>({});\n    const [formula, formulaSet] = useState(() => {\n        if (rule?.subType === CFSubRuleType.formula) {\n            return rule.value;\n        }\n        return '=';\n    });\n    const [formulaError, formulaErrorSet] = useState<string | undefined>(undefined);\n\n    const getResult = (config: {\n        style: IHighlightCell['style'];\n        formula: string;\n    }) => {\n        return {\n            style: config.style,\n            value: formula,\n            type: CFRuleType.highlightCell,\n            subType: CFSubRuleType.formula,\n        };\n    };\n    useEffect(() => {\n        const dispose = interceptorManager.intercept(interceptorManager.getInterceptPoints().submit, {\n            handler() {\n                return getResult({ style, formula });\n            },\n        });\n        return dispose as () => void;\n    }, [style, formula, interceptorManager]);\n\n    useEffect(() => {\n        const dispose = interceptorManager.intercept(interceptorManager.getInterceptPoints().beforeSubmit, {\n            handler: (v, _c, next) => {\n                if (formulaError || formula.length === 1 || !formula.startsWith('=')) {\n                    formulaErrorSet(localeService.t('sheet.cf.errorMessage.formulaError'));\n                    return false;\n                }\n                return next(v);\n            },\n        });\n        return dispose as () => void;\n    }, [formulaError, formula]);\n\n    const _onChange = (config: {\n        formula: string;\n        style: IHighlightCell['style'];\n    }) => {\n        onChange(getResult(config));\n    };\n\n    useSidebarClick((e: MouseEvent) => {\n        const handleOutClick = formulaEditorActionsRef.current?.handleOutClick;\n        handleOutClick && handleOutClick(e, () => isFocusFormulaEditorSet(false));\n    });\n\n    return (\n        <div ref={divEleRef}>\n            <div\n                className={`\n                  ${stylesBase.title}\n                  ${stylesBase.mTBase}\n                `}\n            >\n                {localeService.t('sheet.cf.panel.styleRule')}\n            </div>\n            <div\n                className={`\n                  ${stylesBase.mTSm}\n                `}\n            >\n\n                <FormulaEditor\n                    onChange={(formula) => {\n                        formulaSet(formula);\n                        _onChange({ style, formula });\n                    }}\n                    onVerify={(result, formula) => {\n                        if (!result || formula.length === 1) {\n                            formulaErrorSet(localeService.t('sheet.cf.errorMessage.formulaError'));\n                        } else {\n                            formulaErrorSet(undefined);\n                        }\n                    }}\n                    errorText={formulaError}\n                    onFocus={() => { isFocusFormulaEditorSet(true); }}\n                    actions={formulaEditorActionsRef.current}\n                    isFocus={isFocusFormulaEditor}\n                    initValue={formula as any}\n                    unitId={workbook.getUnitId()}\n                    subUnitId={worksheet?.getSheetId()}\n                />\n\n            </div>\n\n            <div\n                className={`\n                  ${styles.cfPreviewWrap}\n                `}\n            >\n                <Preview rule={getResult({ style, formula }) as IConditionalFormattingRuleConfig} />\n            </div>\n            <ConditionalStyleEditor\n                style={rule?.style}\n                className={`\n                  ${stylesBase.mTSm}\n                `}\n                onChange={(v) => {\n                    styleSet(v);\n                    _onChange({ style: v, formula });\n                }}\n            />\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IHighlightCell } from '@univerjs/sheets-conditional-formatting';\nimport { BooleanNumber } from '@univerjs/core';\nimport { clsx } from '@univerjs/design';\nimport { removeUndefinedAttr } from '@univerjs/sheets-conditional-formatting';\nimport { ComponentManager, useDependency } from '@univerjs/ui';\nimport { useEffect, useState } from 'react';\nimport { ColorPicker } from '../color-picker';\nimport styles from './index.module.less';\n\ninterface IConditionalStyleEditorProps {\n    className?: string;\n    style?: IHighlightCell['style'];\n    onChange: (style: IHighlightCell['style']) => void;\n};\n\nconst getAnotherBooleanNumber = (v: BooleanNumber | undefined) => {\n    return [BooleanNumber.FALSE, undefined].includes(v) ? BooleanNumber.TRUE : BooleanNumber.FALSE;\n};\nconst getBooleanFromNumber = (v: BooleanNumber) => v !== BooleanNumber.FALSE;\nexport const ConditionalStyleEditor = (props: IConditionalStyleEditorProps) => {\n    const { style, onChange, className } = props;\n    const componentManager = useDependency(ComponentManager);\n    const [isBold, isBoldSet] = useState<BooleanNumber | undefined>(() => {\n        const defaultV = undefined;\n        if (!style?.bl) {\n            return defaultV;\n        }\n        return style.bl;\n    });\n    const [isItalic, isItalicSet] = useState<BooleanNumber | undefined>(() => {\n        const defaultV = undefined;\n        if (!style?.it) {\n            return defaultV;\n        }\n        return style.it;\n    });\n    const [isUnderline, isUnderlineSet] = useState<BooleanNumber | undefined>(() => {\n        const defaultV = undefined;\n        if (!style?.ul) {\n            return defaultV;\n        }\n        return style.ul.s;\n    });\n    const [isStrikethrough, isStrikethroughSet] = useState<BooleanNumber | undefined>(() => {\n        const defaultV = undefined;\n        if (!style?.st) {\n            return defaultV;\n        }\n        return style.st.s;\n    });\n    const [fontColor, fontColorSet] = useState(() => {\n        const defaultV = '#2f56ef';\n        if (!style?.cl?.rgb) {\n            return defaultV;\n        }\n        return style.cl.rgb;\n    });\n    const [bgColor, bgColorSet] = useState(() => {\n        const defaultV = '#e8ecfc';\n        if (!style?.bg?.rgb) {\n            return defaultV;\n        }\n        return style.bg.rgb;\n    });\n    const BoldSingleIcon = componentManager.get('BoldSingle');\n    const ItalicSingleIcon = componentManager.get('ItalicSingle');\n    const UnderlineSingleIcon = componentManager.get('UnderlineSingle');\n    const StrikethroughSingle = componentManager.get('StrikethroughSingle');\n    useEffect(() => {\n        const resultStyle: IHighlightCell['style'] = {\n            bl: isBold,\n            it: isItalic,\n        };\n        if (fontColor !== undefined) {\n            resultStyle.cl = { rgb: fontColor };\n        }\n        if (bgColor !== undefined) {\n            resultStyle.bg = { rgb: bgColor };\n        }\n        if (isStrikethrough !== undefined) {\n            resultStyle.st = { s: isStrikethrough };\n        }\n        if (isUnderline !== undefined) {\n            resultStyle.ul = { s: isUnderline };\n        }\n        onChange(removeUndefinedAttr(resultStyle));\n    }, [isBold, isItalic, isUnderline, isStrikethrough, fontColor, bgColor]);\n    return (\n        <div\n            className={clsx(styles.cfStyleEdit, className)}\n        >\n            {BoldSingleIcon && (\n                <div\n                    className={clsx({ [styles.isActive]: getBooleanFromNumber(isBold || BooleanNumber.FALSE) }, styles.buttonItem)}\n                    onClick={() => isBoldSet(getAnotherBooleanNumber(isBold))}\n                >\n                    <BoldSingleIcon />\n                </div>\n            )}\n            {ItalicSingleIcon && (\n                <div\n                    className={clsx({ [styles.isActive]: getBooleanFromNumber(isItalic || BooleanNumber.FALSE) }, styles.buttonItem)}\n                    onClick={() => isItalicSet(getAnotherBooleanNumber(isItalic))}\n                >\n                    <ItalicSingleIcon />\n                </div>\n            )}\n            {UnderlineSingleIcon && (\n                <div\n                    className={clsx({ [styles.isActive]: getBooleanFromNumber(isUnderline || BooleanNumber.FALSE) }, styles.buttonItem)}\n                    onClick={() => isUnderlineSet(getAnotherBooleanNumber(isUnderline))}\n                >\n                    <UnderlineSingleIcon />\n                </div>\n            )}\n            {StrikethroughSingle && (\n                <div\n                    className={clsx({ [styles.isActive]: getBooleanFromNumber(isStrikethrough || BooleanNumber.FALSE) }, styles.buttonItem)}\n                    onClick={() => isStrikethroughSet(getAnotherBooleanNumber(isStrikethrough))}\n                >\n                    <StrikethroughSingle />\n                </div>\n            )}\n            <ColorPicker color={fontColor} onChange={fontColorSet} iconId=\"FontColor\" />\n            <ColorPicker color={bgColor} onChange={bgColorSet} iconId=\"PaintBucket\" />\n        </div>\n    );\n};\n", "export default {\n  \"cfStyleEdit\": \"univer-cf-style-edit\",\n  \"buttonItem\": \"univer-button-item\",\n  \"isActive\": \"univer-isActive\"\n};import \"ni:sha-256;x0_r5O3FdML_jj9yChL0oEJ5fH4iG6kQ5oHktj1rUBg\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n    IConditionalFormattingRuleConfig,\n    IHighlightCell,\n    INumberHighlightCell,\n    ITextHighlightCell,\n    ITimePeriodHighlightCell,\n} from '@univerjs/sheets-conditional-formatting';\nimport type { IStyleEditorProps } from './type';\nimport { LocaleService } from '@univerjs/core';\nimport { Input, InputNumber, Select } from '@univerjs/design';\nimport {\n    CFNumberOperator,\n    CFRuleType,\n    CFSubRuleType,\n    CFTextOperator,\n    CFTimePeriodOperator,\n    createDefaultValue,\n} from '@univerjs/sheets-conditional-formatting';\nimport { useDependency } from '@univerjs/ui';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ConditionalStyleEditor } from '../../conditional-style-editor';\nimport { Preview } from '../../preview';\nimport { WrapperError } from '../../wrapper-error/WrapperError';\nimport stylesBase from '../index.module.less';\nimport styles from './index.module.less';\n\nconst createOptionItem = (text: string, localeService: LocaleService) => ({ label: localeService.t(`sheet.cf.operator.${text}`), value: text });\ntype IValue = number | string | [number, number];\ntype IResult = (Pick<ITextHighlightCell | INumberHighlightCell | ITimePeriodHighlightCell, 'operator' | 'subType'>) & { value?: IValue };\n\nconst HighlightCellInput = (props: {\n    type: IResult['subType'] | CFSubRuleType.duplicateValues | CFSubRuleType.uniqueValues;\n    operator?: IResult['operator'];\n    interceptorManager: IStyleEditorProps['interceptorManager'];\n    rule?: IHighlightCell;\n    value: IValue;\n    onChange: (value: IValue) => void;\n}) => {\n    const { type, operator, onChange, value, interceptorManager } = props;\n\n    const localeService = useDependency(LocaleService);\n    const [inputNumberValue, inputNumberValueSet] = useState(() => typeof value === 'number' ? value : 0);\n    const [numberError, numberErrorSet] = useState('');\n\n    const [inputTextValue, inputTextValueSet] = useState(() => typeof value === 'string' ? value : '');\n    const [textError, textErrorSet] = useState('');\n    const [inputNumberMin, inputNumberMinSet] = useState(() => Array.isArray(value) ? value[0] === undefined ? 0 : value[0] : 0);\n    const [numberMinError, numberMinErrorSet] = useState('');\n\n    const [inputNumberMax, inputNumberMaxSet] = useState(() => Array.isArray(value) ? value[1] === undefined ? 100 : value[1] : 100);\n    const [numberMaxError, numberMaxErrorSet] = useState('');\n\n    useEffect(() => {\n        switch (type) {\n            case CFSubRuleType.text: {\n                if ([CFTextOperator.beginsWith, CFTextOperator.endsWith, CFTextOperator.containsText, CFTextOperator.notContainsText, CFTextOperator.equal, CFTextOperator.notEqual].includes(operator as CFTextOperator)) {\n                    onChange(inputTextValue);\n                }\n                break;\n            }\n            case CFSubRuleType.number: {\n                if ([CFNumberOperator.equal, CFNumberOperator.notEqual, CFNumberOperator.greaterThan, CFNumberOperator.greaterThanOrEqual, CFNumberOperator.lessThan, CFNumberOperator.lessThanOrEqual].includes(operator as CFNumberOperator)) {\n                    onChange(inputNumberValue);\n                }\n                if ([CFNumberOperator.between, CFNumberOperator.notBetween].includes(operator as CFNumberOperator)) {\n                    onChange([inputNumberMin, inputNumberMax]);\n                }\n                break;\n            }\n        }\n    }, [type]);\n\n    useEffect(() => {\n        const dispose = interceptorManager.intercept(interceptorManager.getInterceptPoints().beforeSubmit, {\n            handler: (v, _c, next) => {\n                switch (type) {\n                    case CFSubRuleType.text: {\n                        if ([CFTextOperator.beginsWith, CFTextOperator.containsText, CFTextOperator.endsWith, CFTextOperator.notEqual, CFTextOperator.notContainsText, CFTextOperator.equal].includes(operator as any)) {\n                            if (!inputTextValue) {\n                                textErrorSet(localeService.t('sheet.cf.errorMessage.notBlank'));\n                                return false;\n                            }\n                            return next(v);\n                        }\n                    }\n                }\n                return next(v);\n            },\n        });\n        return () => {\n            dispose();\n        };\n    }, [type, inputNumberValue, inputTextValue, operator]);\n\n    switch (type) {\n        case CFSubRuleType.text: {\n            if ([CFTextOperator.beginsWith, CFTextOperator.endsWith, CFTextOperator.containsText, CFTextOperator.notContainsText, CFTextOperator.equal, CFTextOperator.notEqual].includes(operator as CFTextOperator)) {\n                const _onChange = (value: string) => {\n                    inputTextValueSet(value);\n                    onChange(value);\n                };\n                return (\n                    <div\n                        className={`\n                          ${stylesBase.mTSm}\n                        `}\n                    >\n                        <WrapperError errorText={textError}>\n                            <Input\n                                className={styles.width100}\n                                value={inputTextValue}\n                                onChange={(v) => {\n                                    textErrorSet('');\n                                    _onChange(v);\n                                }}\n                            />\n                        </WrapperError>\n                    </div>\n                );\n            }\n            break;\n        }\n        case CFSubRuleType.number: {\n            if ([CFNumberOperator.equal, CFNumberOperator.notEqual, CFNumberOperator.greaterThan, CFNumberOperator.greaterThanOrEqual, CFNumberOperator.lessThan, CFNumberOperator.lessThanOrEqual].includes(operator as CFNumberOperator)) {\n                const _onChange = (value: number | null) => {\n                    inputNumberValueSet(value || 0);\n                    onChange(value || 0);\n                    numberErrorSet('');\n                };\n                return (\n                    <div\n                        className={`\n                          ${stylesBase.mTSm}\n                        `}\n                    >\n                        <WrapperError errorText={numberError}>\n                            <InputNumber min={Number.MIN_SAFE_INTEGER} max={Number.MAX_SAFE_INTEGER} className={styles.width100} value={inputNumberValue} onChange={_onChange} />\n                        </WrapperError>\n                    </div>\n                );\n            }\n            if ([CFNumberOperator.between, CFNumberOperator.notBetween].includes(operator as CFNumberOperator)) {\n                const onChangeMin = (_value: number | null) => {\n                    inputNumberMinSet(_value || 0);\n                    const value: [number, number] = [_value || 0, inputNumberMax];\n                    onChange(value);\n                    numberMinErrorSet('');\n                };\n                const onChangeMax = (_value: number | null) => {\n                    inputNumberMaxSet(_value || 0);\n                    const value: [number, number] = [inputNumberMin, _value || 0];\n                    onChange(value);\n                    numberMaxErrorSet('');\n                };\n                return (\n                    <div\n                        className={`\n                          ${stylesBase.mTSm}\n                          ${stylesBase.labelContainer}\n                        `}\n                    >\n                        <WrapperError errorText={numberMinError}>\n                            <InputNumber min={Number.MIN_SAFE_INTEGER} max={Number.MAX_SAFE_INTEGER} value={inputNumberMin} onChange={onChangeMin} />\n                        </WrapperError>\n                        <WrapperError errorText={numberMaxError}>\n                            <InputNumber\n                                min={Number.MIN_SAFE_INTEGER}\n                                max={Number.MAX_SAFE_INTEGER}\n                                className={`\n                                  ${stylesBase.mLSm}\n                                `}\n                                value={inputNumberMax}\n                                onChange={onChangeMax}\n                            />\n                        </WrapperError>\n\n                    </div>\n                );\n            }\n        }\n    }\n    return null;\n};\nconst getOperatorOptions = (type: CFSubRuleType.duplicateValues | CFSubRuleType.uniqueValues | CFSubRuleType.number | CFSubRuleType.text | CFSubRuleType.timePeriod | CFSubRuleType.formula, localeService: LocaleService) => {\n    switch (type) {\n        case CFSubRuleType.text: {\n            return [\n                createOptionItem(CFTextOperator.containsText, localeService),\n                createOptionItem(CFTextOperator.notContainsText, localeService),\n                createOptionItem(CFTextOperator.beginsWith, localeService),\n                createOptionItem(CFTextOperator.endsWith, localeService),\n                createOptionItem(CFTextOperator.equal, localeService),\n                createOptionItem(CFTextOperator.notEqual, localeService),\n                createOptionItem(CFTextOperator.containsBlanks, localeService),\n                createOptionItem(CFTextOperator.notContainsBlanks, localeService),\n                createOptionItem(CFTextOperator.containsErrors, localeService),\n                createOptionItem(CFTextOperator.notContainsErrors, localeService),\n            ];\n        }\n        case CFSubRuleType.number: {\n            return [\n                createOptionItem(CFNumberOperator.between, localeService),\n                createOptionItem(CFNumberOperator.notBetween, localeService),\n                createOptionItem(CFNumberOperator.equal, localeService),\n                createOptionItem(CFNumberOperator.notEqual, localeService),\n                createOptionItem(CFNumberOperator.greaterThan, localeService),\n                createOptionItem(CFNumberOperator.greaterThanOrEqual, localeService),\n                createOptionItem(CFNumberOperator.lessThan, localeService),\n                createOptionItem(CFNumberOperator.lessThanOrEqual, localeService),\n            ];\n        }\n        case CFSubRuleType.timePeriod: {\n            return [\n                createOptionItem(CFTimePeriodOperator.yesterday, localeService),\n                createOptionItem(CFTimePeriodOperator.today, localeService),\n                createOptionItem(CFTimePeriodOperator.tomorrow, localeService),\n                createOptionItem(CFTimePeriodOperator.last7Days, localeService),\n                createOptionItem(CFTimePeriodOperator.lastWeek, localeService),\n                createOptionItem(CFTimePeriodOperator.thisWeek, localeService),\n                createOptionItem(CFTimePeriodOperator.nextWeek, localeService),\n                createOptionItem(CFTimePeriodOperator.lastMonth, localeService),\n                createOptionItem(CFTimePeriodOperator.thisMonth, localeService),\n                createOptionItem(CFTimePeriodOperator.nextMonth, localeService),\n            ];\n        }\n    }\n};\nexport const HighlightCellStyleEditor = (props: IStyleEditorProps<any, ITextHighlightCell | INumberHighlightCell | ITimePeriodHighlightCell>) => {\n    const { interceptorManager, onChange } = props;\n    const localeService = useDependency(LocaleService);\n\n    const rule = props.rule?.type === CFRuleType.highlightCell ? props.rule : undefined;\n    const [subType, subTypeSet] = useState<CFSubRuleType.number | CFSubRuleType.text | CFSubRuleType.timePeriod | CFSubRuleType.duplicateValues | CFSubRuleType.uniqueValues>(() => {\n        const defaultV = CFSubRuleType.text;\n        if (!rule) {\n            return defaultV;\n        }\n        return rule.subType || defaultV;\n    });\n\n    const typeOptions = [{\n        value: CFSubRuleType.text,\n        label: localeService.t('sheet.cf.subRuleType.text'),\n    }, {\n        value: CFSubRuleType.number,\n        label: localeService.t('sheet.cf.subRuleType.number'),\n    }, {\n        value: CFSubRuleType.timePeriod,\n        label: localeService.t('sheet.cf.subRuleType.timePeriod'),\n    }, {\n        value: CFSubRuleType.duplicateValues,\n        label: localeService.t('sheet.cf.subRuleType.duplicateValues'),\n    }, {\n        value: CFSubRuleType.uniqueValues,\n        label: localeService.t('sheet.cf.subRuleType.uniqueValues'),\n    }];\n\n    const operatorOptions = useMemo(() => getOperatorOptions(subType, localeService), [subType]);\n\n    const [operator, operatorSet] = useState<IResult['operator'] | undefined>(() => {\n        const defaultV = operatorOptions ? operatorOptions[0].value as IResult['operator'] : undefined;\n        if (!rule) {\n            return defaultV;\n        }\n        return rule.operator || defaultV;\n    });\n\n    const [value, valueSet] = useState<IValue>(() => {\n        const defaultV = '';\n        if (!rule) {\n            return defaultV;\n        }\n        const v = (rule as ITextHighlightCell | INumberHighlightCell).value ?? createDefaultValue(rule.subType, rule.operator);\n        return v;\n    });\n\n    const [style, styleSet] = useState<IHighlightCell['style']>({});\n\n    const getResult = useMemo(() => (option: { subType?: string; operator?: string; value?: IValue; style?: IHighlightCell['style'] }) => {\n        switch (option.subType || subType) {\n            case CFSubRuleType.text: {\n                if ([CFTextOperator.beginsWith, CFTextOperator.endsWith, CFTextOperator.containsText, CFTextOperator.notContainsText, CFTextOperator.equal, CFTextOperator.notEqual].includes(operator as CFTextOperator)) {\n                    return {\n                        type: CFRuleType.highlightCell,\n                        subType: option.subType ?? subType,\n                        operator: option.operator ?? operator,\n                        style: option.style ?? style,\n                        value: option.value ?? value,\n                    };\n                }\n                break;\n            }\n            case CFSubRuleType.number: {\n                if ([CFNumberOperator.equal, CFNumberOperator.notEqual, CFNumberOperator.greaterThan, CFNumberOperator.greaterThanOrEqual, CFNumberOperator.lessThan, CFNumberOperator.lessThanOrEqual].includes(operator as CFNumberOperator)) {\n                    return {\n                        type: CFRuleType.highlightCell,\n                        subType: option.subType ?? subType,\n                        operator: option.operator ?? operator,\n                        style: option.style ?? style,\n                        value: option.value ?? value,\n                    };\n                }\n                if ([CFNumberOperator.between, CFNumberOperator.notBetween].includes(operator as CFNumberOperator)) {\n                    return {\n                        type: CFRuleType.highlightCell,\n                        subType: option.subType ?? subType,\n                        operator: option.operator ?? operator,\n                        style: option.style ?? style,\n                        value: option.value ?? value,\n                    };\n                }\n                break;\n            }\n        }\n        return {\n            type: CFRuleType.highlightCell,\n            subType: option.subType ?? subType,\n            operator: option.operator ?? operator,\n            style: option.style ?? style,\n        };\n    }, [subType, operator, value, style]);\n\n    useEffect(() => {\n        const dispose = interceptorManager.intercept(interceptorManager.getInterceptPoints().submit, {\n            handler() {\n                return getResult({});\n            },\n        });\n        return dispose as () => void;\n    }, [getResult, interceptorManager]);\n\n    useEffect(() => {\n        if (!typeOptions.some((item) => item.value === subType)) {\n            subTypeSet(typeOptions[0].value as CFSubRuleType.text);\n        }\n    }, [typeOptions]);\n\n    const onTypeChange = (v: string) => {\n        const _subType = v as typeof subType;\n        const operatorList = getOperatorOptions(_subType, localeService);\n        const _operator = operatorList && operatorList[0].value as typeof operator;\n        subTypeSet(_subType);\n        operatorSet(_operator);\n        _operator && valueSet(createDefaultValue(_subType, _operator));\n        onChange(getResult({ subType: _subType, operator: _operator }));\n    };\n\n    const onOperatorChange = (v: string) => {\n        const _operator = v as typeof operator;\n        operatorSet(_operator);\n        onChange(getResult({ operator: _operator }));\n    };\n\n    const onInputChange = (value: number | string | [number, number]) => {\n        valueSet(value);\n        onChange(getResult({ value }));\n    };\n\n    const inputRenderKey = useMemo(() => {\n        return `${subType}_${operator}_${Math.random()}`;\n    }, [subType, operator]);\n\n    return (\n        <div>\n            <div\n                className={`\n                  ${stylesBase.title}\n                  ${stylesBase.mTBase}\n                `}\n            >\n                {localeService.t('sheet.cf.panel.styleRule')}\n            </div>\n            <Select\n                className={`\n                  ${stylesBase.mTSm}\n                  ${styles.width100}\n                `}\n                onChange={onTypeChange}\n                value={subType}\n                options={typeOptions}\n            />\n            {operatorOptions?.length && (\n                <Select\n                    className={`\n                      ${stylesBase.mTSm}\n                      ${styles.width100}\n                    `}\n                    onChange={onOperatorChange}\n                    value={operator || ''}\n                    options={operatorOptions}\n                />\n            )}\n            <HighlightCellInput key={inputRenderKey} value={value} interceptorManager={interceptorManager} type={subType} operator={operator} rule={rule} onChange={onInputChange} />\n            <div\n                className={`\n                  ${styles.cfPreviewWrap}\n                `}\n            >\n                <Preview rule={getResult({}) as IConditionalFormattingRuleConfig} />\n            </div>\n            <ConditionalStyleEditor\n                style={rule?.style}\n                className={`\n                  ${stylesBase.mLXxs}\n                `}\n                onChange={(v) => {\n                    styleSet(v);\n                    onChange(getResult({ style: v }));\n                }}\n            />\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\n\n// TODO@gggpound: Error checking needs to be implemented by the form control\nexport const WrapperError = (props: {\n    errorText: string;\n    children: React.ReactElement;\n}) => {\n    return (\n        <div style={{ position: 'relative' }}>\n            <div style={{\n                position: 'absolute',\n                zIndex: 999,\n                bottom: '-13px',\n                fontSize: '10px',\n                color: 'red',\n            }}\n            >\n                {props.errorText}\n            </div>\n            {props.children}\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Workbook } from '@univerjs/core';\nimport type { IIconSet, IIconType } from '@univerjs/sheets-conditional-formatting';\nimport type { IStyleEditorProps } from './type';\n\nimport { get, IUniverInstanceService, LocaleService, set, Tools, UniverInstanceType } from '@univerjs/core';\nimport { Checkbox, clsx, Dropdown, InputNumber, Select } from '@univerjs/design';\nimport { MoreDownSingle, SlashSingle } from '@univerjs/icons';\nimport {\n    CFNumberOperator,\n    CFRuleType,\n    CFSubRuleType,\n    CFValueType,\n    compareWithNumber,\n    createDefaultValue,\n    EMPTY_ICON_TYPE,\n    getOppositeOperator,\n    iconGroup,\n    iconMap,\n} from '@univerjs/sheets-conditional-formatting';\n\nimport { FormulaEditor } from '@univerjs/sheets-formula-ui';\nimport { ILayoutService, useDependency, useScrollYOverContainer, useSidebarClick } from '@univerjs/ui';\n\nimport React, { forwardRef, useEffect, useMemo, useRef, useState } from 'react';\n\nimport stylesBase from '../index.module.less';\nimport styles from './index.module.less';\n\nconst getIcon = (iconType: string, iconId: string | number) => {\n    const arr = iconMap[iconType] || [];\n    return arr[Number(iconId)] || '';\n};\n\nconst TextInput = (props: { id: number; type: CFValueType; value: number | string; onChange: (v: number | string) => void; error?: string }) => {\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const unitId = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getUnitId();\n    const subUnitId = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getActiveSheet()?.getSheetId();\n    const className = useMemo(() => {\n        if (props.error) {\n            return styles.errorInput;\n        }\n        return '';\n    }, [props.error]);\n\n    const formulaEditorActionsRef = useRef<Parameters<typeof FormulaEditor>[0]['actions']>({});\n    const [isFocusFormulaEditor, isFocusFormulaEditorSet] = useState(false);\n\n    useSidebarClick((e: MouseEvent) => {\n        const handleOutClick = formulaEditorActionsRef.current?.handleOutClick;\n        handleOutClick && handleOutClick(e, () => isFocusFormulaEditorSet(false));\n    });\n    return (\n        <div className={styles.positionRelative}>\n            {props.type !== CFValueType.formula\n                ? (\n                    <>\n                        <InputNumber className={className} value={Number(props.value) || 0} onChange={(v) => props.onChange(v ?? 0)} />\n                        {props.error && (\n                            <div className={styles.errorText}>\n                                {props.error}\n                            </div>\n                        )}\n                    </>\n                )\n                : (\n                    <div style={{ width: '100%' }}>\n                        <FormulaEditor\n                            initValue={String(props.value) as any}\n                            unitId={unitId}\n                            subUnitId={subUnitId}\n                            isFocus={isFocusFormulaEditor}\n                            onChange={(v = '') => {\n                                const formula = v || '';\n                                props.onChange(formula);\n                            }}\n                            onFocus={() => isFocusFormulaEditorSet(true)}\n                            actions={formulaEditorActionsRef.current}\n                        />\n                    </div>\n                )}\n        </div>\n    );\n};\nconst createDefaultConfigItem = (iconType: IIconType, index: number, list: unknown[]): IIconSet['config'][number] => ({\n    operator: CFNumberOperator.greaterThan,\n    value: { type: CFValueType.num, value: (list.length - 1 - index) * 10 },\n    iconType,\n    iconId: String(index),\n});\n\ninterface IconGroupListProps {\n    onClick: (iconType: IIconType) => void;\n    iconType?: IIconType;\n};\nconst IconGroupList = forwardRef<HTMLDivElement, IconGroupListProps>((props, ref) => {\n    const localeService = useDependency(LocaleService);\n\n    const handleClick = (iconType: IIconType) => {\n        props.onClick(iconType);\n    };\n    return (\n        <div ref={ref} className={styles.iconGroupList}>\n            {iconGroup.map((group, index) => {\n                return (\n                    <div key={index} className={styles.group}>\n                        <div className={styles.title}>{localeService.t(group.title)}</div>\n                        <div className={styles.itemContent}>\n                            {group.group.map((groupItem) => {\n                                return (\n                                    <div className={styles.itemWrap} key={groupItem.name} onClick={() => { handleClick(groupItem.name); }}>\n                                        <div className={styles.item}>\n                                            {groupItem.list.map((base64, index) => <img className={styles.icon} key={index} src={base64} />)}\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n\n                    </div>\n                );\n            })}\n        </div>\n    );\n});\n\nconst IconItemList = (props: { onClick: (iconType: IIconType, iconId: string) => void; iconType?: IIconType; iconId: string }) => {\n    const list = useMemo(() => {\n        const result: { iconType: IIconType; iconId: string; base64: string }[] = [];\n        for (const key in iconMap) {\n            const list = iconMap[key as IIconType];\n            const iconType = key as IIconType;\n            list.forEach((base64, index) => {\n                result.push({\n                    iconType,\n                    base64,\n                    iconId: String(index),\n                });\n            });\n        }\n        return result;\n    }, []);\n    const handleClick = (item: typeof list[0]) => {\n        props.onClick(item.iconType, item.iconId);\n    };\n    return (\n        <div className={styles.iconItemListWrap}>\n            <div className={styles.none} onClick={() => handleClick({ iconType: EMPTY_ICON_TYPE as any, iconId: '', base64: '' })}>\n                <SlashSingle className={styles.icon} />\n                <span>\u65E0\u5355\u5143\u683C\u56FE\u6807</span>\n            </div>\n            <div className={styles.iconItemList}>\n                {list.map((item) => (\n                    <div key={`${item.iconType}_${item.iconId}`} className={styles.item}>\n                        <img\n                            onClick={() => handleClick(item)}\n                            className={`\n                              ${styles.icon}\n                            `}\n                            src={item.base64}\n                        />\n                    </div>\n                ))}\n            </div>\n        </div>\n\n    );\n};\n\nconst IconSetRuleEdit = (props: {\n    configList: IIconSet['config'];\n    onChange: (keys: string[], value: unknown) => void;\n    errorMap?: Record<string, string>;\n}) => {\n    const { onChange, configList, errorMap = {} } = props;\n    const localeService = useDependency(LocaleService);\n\n    const options = [{ label: localeService.t(`sheet.cf.symbol.${CFNumberOperator.greaterThan}`), value: CFNumberOperator.greaterThan }, { label: localeService.t(`sheet.cf.symbol.${CFNumberOperator.greaterThanOrEqual}`), value: CFNumberOperator.greaterThanOrEqual }];\n    const valueTypeOptions = [\n        { label: localeService.t(`sheet.cf.valueType.${CFValueType.num}`), value: CFValueType.num },\n        { label: localeService.t(`sheet.cf.valueType.${CFValueType.percent}`), value: CFValueType.percent },\n        { label: localeService.t(`sheet.cf.valueType.${CFValueType.percentile}`), value: CFValueType.percentile },\n        { label: localeService.t(`sheet.cf.valueType.${CFValueType.formula}`), value: CFValueType.formula },\n\n    ];\n    const handleValueValueChange = (v: number | string, index: number) => {\n        onChange([String(index), 'value', 'value'], v);\n    };\n\n    const handleOperatorChange = (operator: CFNumberOperator, index: number) => {\n        onChange([String(index), 'operator'], operator);\n        const defaultValue = createDefaultValue(CFSubRuleType.number, operator) as number;\n        handleValueValueChange(defaultValue, index);\n    };\n\n    const handleValueTypeChange = (v: string, index: number) => {\n        onChange([String(index), 'value', 'type'], v);\n        const item = configList[index];\n        const defaultValue = createDefaultValue(CFSubRuleType.number, item.operator) as number;\n        handleValueValueChange(defaultValue, index);\n    };\n    const render = useMemo(() => {\n        return configList.map((item, index) => {\n            const error = errorMap[index];\n            const icon = getIcon(item.iconType, item.iconId);\n            const isEnd = index === configList.length - 1;\n            const isFirst = index === 0;\n            const preItem = configList[index - 1];\n            const lessThanText = preItem?.value.type === CFValueType.formula ? localeService.t('sheet.cf.valueType.formula') : preItem?.value.value;\n\n            const handleIconClick = (iconType: IIconType, iconId: string) => {\n                const value = { ...item, iconId, iconType } as typeof item;\n                onChange([String(index)], value);\n            };\n            return (\n                <div\n                    key={index}\n                    className={`\n                      ${index ? stylesBase.mTXl : stylesBase.mTSm}\n                    `}\n                >\n                    <div\n                        className={`\n                          ${stylesBase.label}\n                          ${styles.flex}\n                        `}\n                    >\n                        <div\n                            className={`\n                              ${styles.width45}\n                            `}\n                        >\n                            {localeService.t('sheet.cf.iconSet.icon')}\n                            {index + 1}\n                        </div>\n\n                        <div\n                            className={`\n                              ${styles.width45}\n                            `}\n                        >\n                            <>\n                                {!isFirst && !isEnd && localeService.t('sheet.cf.iconSet.rule')}\n                                {!isFirst && !isEnd && (\n                                    <span className={styles.stress}>\n                                        (\n                                        {localeService.t('sheet.cf.iconSet.when')}\n                                        {localeService.t(`sheet.cf.symbol.${getOppositeOperator(preItem.operator)}`)}\n                                        {lessThanText}\n                                        {isEnd ? '' : ` ${localeService.t('sheet.cf.iconSet.and')} `}\n                                        )\n                                    </span>\n                                )}\n\n                            </>\n\n                        </div>\n\n                    </div>\n                    <div\n                        className={`\n                          ${styles.flex}\n                          ${stylesBase.mTSm}\n                        `}\n                    >\n                        <div\n                            className={`\n                              ${styles.iconWrap}\n                              ${styles.width45}\n                            `}\n                        >\n                            <Dropdown\n                                overlay={(\n                                    <div className=\"univer-rounded-lg univer-p-4\">\n                                        <IconItemList onClick={handleIconClick} iconId={item.iconId} iconType={item.iconType} />\n                                    </div>\n                                )}\n                            >\n                                <div className={clsx(styles.dropdownIcon, 'univer-box-border univer-h-7')}>\n                                    {icon ? <img src={icon} className={styles.icon} /> : <SlashSingle className={styles.icon} />}\n                                    <MoreDownSingle />\n                                </div>\n                            </Dropdown>\n\n                        </div>\n                        {!isEnd\n                            ? (\n                                <Select\n                                    className={`\n                                      ${stylesBase.mL0}\n                                      ${styles.width45}\n                                      ${stylesBase.mR0}\n                                    `}\n                                    options={options}\n                                    value={item.operator}\n                                    onChange={(v) => { handleOperatorChange(v as CFNumberOperator, index); }}\n                                />\n                            )\n                            : (\n                                <div\n                                    className={`\n                                      ${styles.width45}\n                                      ${stylesBase.label}\n                                    `}\n                                    style={{ marginTop: 0 }}\n                                >\n                                    {localeService.t('sheet.cf.iconSet.rule')}\n                                    <span className={styles.stress}>\n                                        (\n                                        {localeService.t('sheet.cf.iconSet.when')}\n                                        {localeService.t(`sheet.cf.symbol.${getOppositeOperator(preItem.operator)}`)}\n                                        {lessThanText}\n                                        {isEnd ? '' : ` ${localeService.t('sheet.cf.iconSet.and')} `}\n                                        )\n                                    </span>\n                                </div>\n                            )}\n                    </div>\n                    {!isEnd\n                        ? (\n                            <>\n                                <div\n                                    className={`\n                                      ${stylesBase.mTSm}\n                                      ${stylesBase.label}\n                                      ${styles.flex}\n                                    `}\n                                >\n                                    <div\n                                        className={`\n                                          ${styles.width45}\n                                        `}\n                                    >\n                                        {localeService.t('sheet.cf.iconSet.type')}\n                                    </div>\n                                    <div\n                                        className={`\n                                          ${styles.width45}\n                                        `}\n                                    >\n                                        {localeService.t('sheet.cf.iconSet.value')}\n                                    </div>\n                                </div>\n                                <div\n                                    className={`\n                                      ${stylesBase.mTSm}\n                                      ${styles.flex}\n                                    `}\n                                >\n                                    <Select\n                                        style={{ flexShrink: 0 }}\n                                        className={`\n                                          ${styles.width45}\n                                          ${stylesBase.mL0}\n                                        `}\n                                        options={valueTypeOptions}\n                                        value={item.value.type}\n                                        onChange={(v) => { handleValueTypeChange(v as CFNumberOperator, index); }}\n                                    />\n                                    <div\n                                        className={`\n                                          ${stylesBase.mL0}\n                                          ${styles.width45}\n                                        `}\n                                    >\n                                        <TextInput\n                                            id={index}\n                                            type={item.value.type}\n                                            error={error}\n                                            value={item.value.value || ''}\n                                            onChange={(v) => handleValueValueChange(v, index)}\n                                        />\n                                    </div>\n\n                                </div>\n                            </>\n                        )\n                        : <div />}\n\n                </div>\n            );\n        });\n    }, [configList, errorMap]);\n    return render;\n};\nexport const IconSet = (props: IStyleEditorProps<unknown, IIconSet>) => {\n    const { interceptorManager } = props;\n    const rule = props.rule?.type === CFRuleType.iconSet ? props.rule : undefined;\n    const localeService = useDependency(LocaleService);\n    const [errorMap, errorMapSet] = useState<Record<string, string>>({});\n    const [currentIconType, currentIconTypeSet] = useState<IIconType>(() => {\n        const defaultV = Object.keys(iconMap)[0] as IIconType;\n        if (rule && rule.config.length) {\n            const type = rule.config[0].iconType;\n            const isNotSame = rule.config.some((item) => item.iconType !== type);\n            if (!isNotSame) {\n                return type;\n            }\n        }\n        return defaultV;\n    });\n\n    const [configList, configListSet] = useState(() => {\n        if (rule && rule.config.length) {\n            return Tools.deepClone(rule?.config);\n        }\n        const list = iconMap[currentIconType] || [];\n        return new Array(list.length).fill('').map((_e, index, list) => {\n            if (index === list.length - 1) {\n                // The last condition is actually the complement of the above conditions,\n                // packages/sheets-conditional-formatting/src/services/calculate-unit/icon-set.ts\n                return {\n                    operator: CFNumberOperator.lessThanOrEqual,\n                    value: { type: CFValueType.num, value: Number.MAX_SAFE_INTEGER },\n                    iconType: currentIconType,\n                    iconId: String(index),\n                };\n            }\n            return createDefaultConfigItem(currentIconType, index, list);\n        });\n    });\n\n    const [isShowValue, isShowValueSet] = useState(() => {\n        if (!rule) {\n            return true;\n        }\n        return !!rule.isShowValue;\n    });\n\n    const previewIcon = useMemo(() => {\n        const list = configList.map((item) => {\n            return getIcon(item.iconType, item.iconId);\n        });\n        return (\n            <div className={styles.iconWrap}>\n                {list.map((icon, index) => (icon\n                    ? (\n                        <img\n                            className={styles.icon}\n                            key={index}\n                            src={icon}\n                        />\n                    )\n                    : <SlashSingle className={styles.icon} key={index} />))}\n            </div>\n        );\n    }, [configList]);\n\n    const checkResult = (_configList: typeof configList) => {\n        const isTypeSame = _configList.reduce((pre, cur, index) => {\n            if ((pre.preType && !pre.result) || _configList.length - 1 === index) {\n                return pre;\n            }\n\n            if (cur.value.type === CFValueType.formula) {\n                return {\n                    preType: CFValueType.formula,\n                    result: false,\n                };\n            }\n            if (pre.preType) {\n                return {\n                    result: pre.preType === cur.value.type,\n                    preType: cur.value.type,\n                };\n            } else {\n                return {\n                    result: true,\n                    preType: cur.value.type,\n                };\n            }\n        }, { result: true, preType: '' }).result;\n        if (isTypeSame && [CFValueType.num, CFValueType.percent, CFValueType.percentile].includes(_configList[0].value.type)) {\n            const result: Record<string, string> = {};\n            _configList.forEach((item, index, arr) => {\n                const preIndex = index - 1;\n                if (preIndex < 0 || index === arr.length - 1) {\n                    return;\n                }\n                const preItem = _configList[index - 1];\n                const preOperator = getOppositeOperator(preItem.operator);\n                if (!compareWithNumber({ operator: preOperator, value: preItem.value.value as number }, item.value.value as number)) {\n                    result[index] = `${localeService.t(`sheet.cf.form.${preOperator}`, String(preItem.value.value))} `;\n                }\n            });\n            return result;\n        }\n        return {};\n    };\n    const handleChange = (keys: string[], v: unknown) => {\n        const oldV = get(configList, keys);\n        if (oldV !== v) {\n            set(configList, keys, v);\n            configListSet([...configList]);\n            errorMapSet(checkResult(configList));\n        }\n    };\n    const handleClickIconList = (iconType: IIconType) => {\n        currentIconTypeSet(iconType);\n        const list = iconMap[iconType] || [];\n        const config = new Array(list.length).fill('').map((_e, index, list) => createDefaultConfigItem(iconType, index, list));\n        configListSet(config);\n        errorMapSet(checkResult(config));\n    };\n\n    useEffect(() => {\n        const dispose = interceptorManager.intercept(interceptorManager.getInterceptPoints().submit, {\n            handler() {\n                const result: IIconSet = { type: CFRuleType.iconSet, isShowValue, config: configList } as IIconSet;\n                return result;\n            },\n        });\n        return () => {\n            dispose();\n        };\n    }, [isShowValue, configList, interceptorManager]);\n\n    useEffect(() => {\n        const dispose = interceptorManager.intercept(interceptorManager.getInterceptPoints().beforeSubmit, {\n            handler() {\n                const keys = Object.keys(errorMap);\n                return keys.length === 0;\n            },\n        });\n        return () => {\n            dispose();\n        };\n    }, [isShowValue, configList, interceptorManager, errorMap]);\n\n    const reverseIcon = () => {\n        const iconList = configList.map((item) => ({ ...item }));\n        configList.forEach((item, index) => {\n            const mirrorIndex = configList.length - 1 - index;\n            const newIcon = iconList[mirrorIndex];\n            item.iconId = newIcon.iconId;\n            item.iconType = newIcon.iconType;\n        });\n        configListSet([...configList]);\n    };\n    const layoutService = useDependency(ILayoutService);\n    const [iconGroupListEl, setIconGroupListEl] = useState<HTMLDivElement>();\n\n    useScrollYOverContainer(iconGroupListEl, layoutService.rootContainerElement);\n\n    return (\n        <div className={styles.iconSet}>\n            <div className={stylesBase.title}>{localeService.t('sheet.cf.panel.styleRule')}</div>\n            <div\n                className={`\n                  ${stylesBase.mTSm}\n                `}\n            >\n                <Dropdown\n                    overlay={(\n                        <div className=\"univer-rounded-lg univer-p-4\">\n                            <IconGroupList\n                                ref={(el) => {\n                                    !iconGroupListEl && el && setIconGroupListEl(el);\n                                }}\n                                iconType={currentIconType}\n                                onClick={handleClickIconList}\n                            />\n                        </div>\n                    )}\n                >\n                    <div className={clsx(styles.dropdownIcon, 'univer-box-border univer-h-7 univer-w-auto')}>\n                        {previewIcon}\n                        <MoreDownSingle />\n                    </div>\n                </Dropdown>\n            </div>\n            <div\n                className={`\n                  ${stylesBase.mTSm}\n                  ${styles.renderConfig}\n                `}\n            >\n                <div className={styles.utilItem}>\n                    <Checkbox onChange={reverseIcon} />\n                    {localeService.t('sheet.cf.iconSet.reverseIconOrder')}\n                </div>\n                <div\n                    className={`\n                      ${styles.utilItem}\n                      ${stylesBase.mLXl}\n                    `}\n                >\n                    <Checkbox checked={!isShowValue} onChange={(v) => { isShowValueSet(!v); }} />\n                    {localeService.t('sheet.cf.iconSet.onlyShowIcon')}\n                </div>\n            </div>\n            <IconSetRuleEdit errorMap={errorMap} onChange={handleChange} configList={configList} />\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAverageHighlightCell, IConditionalFormattingRuleConfig, IHighlightCell, IRankHighlightCell } from '@univerjs/sheets-conditional-formatting';\nimport type { IStyleEditorProps } from './type';\nimport { LocaleService } from '@univerjs/core';\nimport { Checkbox, InputNumber, Select } from '@univerjs/design';\nimport { CFNumberOperator, CFRuleType, CFSubRuleType } from '@univerjs/sheets-conditional-formatting';\nimport { useDependency } from '@univerjs/ui';\nimport React, { useEffect, useState } from 'react';\nimport { ConditionalStyleEditor } from '../../conditional-style-editor';\nimport { Preview } from '../../preview';\nimport stylesBase from '../index.module.less';\nimport styles from './index.module.less';\n\nexport const RankStyleEditor = (props: IStyleEditorProps) => {\n    const { onChange, interceptorManager } = props;\n    const localeService = useDependency(LocaleService);\n\n    const rule = props.rule?.type === CFRuleType.highlightCell ? props.rule : undefined as IRankHighlightCell | IAverageHighlightCell | undefined;\n    const options = [{ label: localeService.t('sheet.cf.panel.isNotBottom'), value: 'isNotBottom' }, { label: localeService.t('sheet.cf.panel.isBottom'), value: 'isBottom' }, { label: localeService.t('sheet.cf.panel.greaterThanAverage'), value: 'greaterThanAverage' }, { label: localeService.t('sheet.cf.panel.lessThanAverage'), value: 'lessThanAverage' }];\n\n    const [type, typeSet] = useState(() => {\n        const defaultV = options[0].value;\n        const type = rule?.type;\n        if (!rule) {\n            return defaultV;\n        }\n        switch (type) {\n            case CFRuleType.highlightCell:{\n                const subType = rule.subType;\n                switch (subType) {\n                    case CFSubRuleType.average:{\n                        if ([CFNumberOperator.greaterThan, CFNumberOperator.greaterThanOrEqual].includes(rule.operator)) {\n                            return 'greaterThanAverage';\n                        }\n                        if ([CFNumberOperator.lessThan, CFNumberOperator.lessThanOrEqual].includes(rule.operator)) {\n                            return 'lessThanAverage';\n                        }\n                        return defaultV;\n                    }\n                    case CFSubRuleType.rank:{\n                        if (rule.isBottom) {\n                            return 'isBottom';\n                        } else {\n                            return 'isNotBottom';\n                        }\n                    }\n                }\n            }\n        }\n        return defaultV;\n    });\n    const [value, valueSet] = useState(() => {\n        const defaultV = 10;\n        const type = rule?.type;\n        if (!rule) {\n            return defaultV;\n        }\n        switch (type) {\n            case CFRuleType.highlightCell:{\n                const subType = rule.subType;\n                switch (subType) {\n                    case CFSubRuleType.rank:{\n                        return rule.value || defaultV;\n                    }\n                }\n            }\n        }\n        return defaultV;\n    });\n    const [isPercent, isPercentSet] = useState(() => {\n        const defaultV = false;\n        const type = rule?.type;\n        if (!rule) {\n            return defaultV;\n        }\n        switch (type) {\n            case CFRuleType.highlightCell:{\n                const subType = rule.subType;\n                switch (subType) {\n                    case CFSubRuleType.rank:{\n                        return rule.isPercent || defaultV;\n                    }\n                }\n            }\n        }\n        return defaultV;\n    });\n\n    const [style, styleSet] = useState<IHighlightCell['style']>({});\n\n    const getResult = (config: {\n        type: string;\n        isPercent: boolean;\n        value: number;\n        style: IHighlightCell['style'];\n    }) => {\n        const { type, isPercent, value, style } = config;\n        if (type === 'isNotBottom') {\n            return { type: CFRuleType.highlightCell, subType: CFSubRuleType.rank, isPercent, isBottom: false, value, style };\n        }\n        if (type === 'isBottom') {\n            return { type: CFRuleType.highlightCell, subType: CFSubRuleType.rank, isPercent, isBottom: true, value, style };\n        }\n        if (type === 'greaterThanAverage') {\n            return { type: CFRuleType.highlightCell, subType: CFSubRuleType.average, operator: CFNumberOperator.greaterThan, style };\n        }\n        if (type === 'lessThanAverage') {\n            return { type: CFRuleType.highlightCell, subType: CFSubRuleType.average, operator: CFNumberOperator.lessThan, style };\n        }\n    };\n    useEffect(() => {\n        const dispose = interceptorManager.intercept(interceptorManager.getInterceptPoints().submit, {\n            handler() {\n                return getResult({ type, isPercent, value, style });\n            },\n        });\n        return dispose as () => void;\n    }, [type, isPercent, value, style, interceptorManager]);\n\n    const _onChange = (config: {\n        type: string;\n        isPercent: boolean;\n        value: number;\n        style: IHighlightCell['style'];\n    }) => {\n        onChange(getResult(config));\n    };\n    return (\n        <div>\n            <div\n                className={`\n                  ${stylesBase.title}\n                  ${stylesBase.mTBase}\n                `}\n            >\n                {localeService.t('sheet.cf.panel.styleRule')}\n            </div>\n            <Select\n                className={`\n                  ${styles.width100}\n                  ${stylesBase.mTSm}\n                `}\n                value={type}\n                options={options}\n                onChange={(v) => {\n                    typeSet(v);\n                    _onChange({ type: v, isPercent, value, style });\n                }}\n            />\n            {['isNotBottom', 'isBottom'].includes(type) && (\n                <div\n                    className={`\n                      ${stylesBase.labelContainer}\n                      ${stylesBase.mTSm}\n                    `}\n                >\n                    <InputNumber\n                        min={1}\n                        max={1000}\n                        value={value}\n                        onChange={(v) => {\n                            const value = v || 0;\n                            valueSet(value);\n                            _onChange({ type, isPercent, value, style });\n                        }}\n                    />\n                    <div\n                        className={`\n                          ${stylesBase.mLSm}\n                          ${stylesBase.labelContainer}\n                          ${styles.text}\n                        `}\n                    >\n                        <Checkbox\n                            checked={isPercent}\n                            onChange={(v) => {\n                                isPercentSet(!!v);\n                                _onChange({ type, isPercent: !!v, value, style });\n                            }}\n                        />\n                        {localeService.t('sheet.cf.valueType.percent')}\n                    </div>\n\n                </div>\n            )}\n            <div\n                className={`\n                  ${styles.cfPreviewWrap}\n                `}\n            >\n                <Preview rule={getResult({ type, isPercent, value, style }) as IConditionalFormattingRuleConfig} />\n            </div>\n            <ConditionalStyleEditor\n                style={rule?.style}\n                className={`\n                  ${stylesBase.mTSm}\n                `}\n                onChange={(v) => {\n                    styleSet(v);\n                    _onChange({ type, isPercent, value, style: v });\n                }}\n            />\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInterceptorKey } from '@univerjs/core';\nimport type { InterceptorManager } from '@univerjs/core';\nimport type { IConditionalFormattingRuleConfig } from '@univerjs/sheets-conditional-formatting';\n\nexport const beforeSubmit = createInterceptorKey<boolean, null>('beforeSubmit');\nexport const submit = createInterceptorKey<any, null>('submit');\n\nexport interface IStyleEditorProps<S = any, R = IConditionalFormattingRuleConfig> {\n    onChange: (style: S) => void;\n    rule?: R;\n    interceptorManager: InterceptorManager<{ beforeSubmit: typeof beforeSubmit; submit: typeof submit }>;\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IDisposable } from '@univerjs/core';\nimport type { IConditionFormattingRule } from '@univerjs/sheets-conditional-formatting';\nimport { Disposable, generateRandomId, Inject, Injector, IUniverInstanceService, LocaleService, UniverInstanceType } from '@univerjs/core';\nimport { ComponentManager, ISidebarService } from '@univerjs/ui';\nimport { ConditionFormattingPanel } from '../components/panel';\n\nconst CF_PANEL_KEY = 'sheet.conditional.formatting.panel';\n\nexport class ConditionalFormattingPanelController extends Disposable {\n    private _sidebarDisposable: IDisposable | null = null;\n\n    constructor(\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @Inject(Injector) private _injector: Injector,\n        @Inject(ComponentManager) private _componentManager: ComponentManager,\n        @Inject(ISidebarService) private _sidebarService: ISidebarService,\n        @Inject(LocaleService) private _localeService: LocaleService\n    ) {\n        super();\n\n        this._initPanel();\n\n        this.disposeWithMe(\n            this._univerInstanceService.getCurrentTypeOfUnit$(UniverInstanceType.UNIVER_SHEET).subscribe((sheet) => {\n                if (!sheet) this._sidebarDisposable?.dispose();\n            })\n        );\n        this.disposeWithMe(this._sidebarService.sidebarOptions$.subscribe((info) => {\n            if (info.id === CF_PANEL_KEY) {\n                if (!info.visible) {\n                    setTimeout(() => {\n                        this._sidebarService.sidebarOptions$.next({ visible: false });\n                    });\n                }\n            }\n        }));\n    }\n\n    openPanel(rule?: IConditionFormattingRule) {\n        const props = {\n            id: CF_PANEL_KEY,\n            header: { title: this._localeService.t('sheet.cf.title') },\n            children: {\n                label: CF_PANEL_KEY,\n                rule,\n                key: generateRandomId(4),\n            },\n            onClose: () => this._sidebarDisposable = null,\n        };\n\n        this._sidebarDisposable = this._sidebarService.open(props);\n    }\n\n    private _initPanel() {\n        this._componentManager.register(CF_PANEL_KEY, ConditionFormattingPanel);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, ICommand } from '@univerjs/core';\nimport type { IClearRangeCfParams, IColorScale, IConditionFormattingRule, IDataBar, IFormulaHighlightCell, IIconSet, IRankHighlightCell } from '@univerjs/sheets-conditional-formatting';\nimport { CommandType, ICommandService } from '@univerjs/core';\nimport { SheetsSelectionsService } from '@univerjs/sheets';\nimport { CFRuleType, CFSubRuleType, ClearRangeCfCommand, ClearWorksheetCfCommand, createDefaultRule } from '@univerjs/sheets-conditional-formatting';\nimport { ConditionalFormattingPanelController } from '../../controllers/cf.panel.controller';\n\ninterface IOpenConditionalFormattingOperatorParams {\n    value: number;\n}\n\nexport enum CF_MENU_OPERATION {\n    createRule = 1,\n    viewRule,\n    highlightCell,\n    rank,\n    formula,\n    colorScale,\n    dataBar,\n    icon,\n    clearRangeRules,\n    clearWorkSheetRules,\n}\n\nexport const OpenConditionalFormattingOperator: ICommand = {\n    id: 'sheet.operation.open.conditional.formatting.panel',\n    type: CommandType.OPERATION,\n    handler: (accessor: IAccessor, params: IOpenConditionalFormattingOperatorParams) => {\n        const conditionalFormattingMenuController = accessor.get(ConditionalFormattingPanelController);\n        const selectionManagerService = accessor.get(SheetsSelectionsService);\n        const commandService = accessor.get(ICommandService);\n\n        const ranges = selectionManagerService.getCurrentSelections()?.map((s) => s.range) || [];\n\n        const type = params.value;\n        switch (type) {\n            case CF_MENU_OPERATION.highlightCell:{\n                conditionalFormattingMenuController.openPanel({ ...createDefaultRule(), ranges });\n                break;\n            }\n            case CF_MENU_OPERATION.rank:{\n                const rule = {\n                    ...createDefaultRule,\n                    ranges,\n                    rule: {\n                        type: CFRuleType.highlightCell,\n                        subType: CFSubRuleType.rank,\n                    },\n                } as IConditionFormattingRule<IRankHighlightCell>;\n                conditionalFormattingMenuController.openPanel(rule);\n                break;\n            }\n            case CF_MENU_OPERATION.formula:{\n                const rule = {\n                    ...createDefaultRule,\n                    ranges,\n                    rule: {\n                        type: CFRuleType.highlightCell,\n                        subType: CFSubRuleType.formula,\n                        value: '=',\n                    },\n                } as IConditionFormattingRule<IFormulaHighlightCell>;\n                conditionalFormattingMenuController.openPanel(rule);\n                break;\n            }\n            case CF_MENU_OPERATION.colorScale:{\n                const rule = {\n                    ...createDefaultRule,\n                    ranges,\n                    rule: {\n                        type: CFRuleType.colorScale,\n                        config: [],\n                    },\n                } as unknown as IConditionFormattingRule<IColorScale>;\n                conditionalFormattingMenuController.openPanel(rule);\n                break;\n            }\n            case CF_MENU_OPERATION.dataBar:{\n                const rule = {\n                    ...createDefaultRule,\n                    ranges,\n                    rule: {\n                        type: CFRuleType.dataBar,\n                        isShowValue: true,\n                    },\n                } as unknown as IConditionFormattingRule<IDataBar>;\n                conditionalFormattingMenuController.openPanel(rule);\n                break;\n            }\n            case CF_MENU_OPERATION.icon:{\n                const rule = {\n                    ...createDefaultRule,\n                    ranges,\n                    rule: {\n                        type: CFRuleType.iconSet,\n                        config: [],\n                        isShowValue: true,\n                    },\n                } as unknown as IConditionFormattingRule<IIconSet>;\n                conditionalFormattingMenuController.openPanel(rule);\n                break;\n            }\n            case CF_MENU_OPERATION.viewRule:{\n                conditionalFormattingMenuController.openPanel();\n                break;\n            }\n            case CF_MENU_OPERATION.createRule:{\n                conditionalFormattingMenuController.openPanel({ ...createDefaultRule(), ranges });\n                break;\n            }\n            case CF_MENU_OPERATION.clearRangeRules:{\n                commandService.executeCommand(ClearRangeCfCommand.id, { ranges } as IClearRangeCfParams);\n\n                break;\n            }\n            case CF_MENU_OPERATION.clearWorkSheetRules:{\n                commandService.executeCommand(ClearWorksheetCfCommand.id);\n                break;\n            }\n        }\n\n        return true;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, Nullable, Workbook } from '@univerjs/core';\nimport type { IAddConditionalRuleMutationParams, IConditionalFormattingRuleConfig, IConditionFormattingRule, IDeleteConditionalRuleMutationParams, ISetConditionalRuleMutationParams } from '@univerjs/sheets-conditional-formatting';\nimport type { IDiscreteRange, IPasteHookValueType } from '@univerjs/sheets-ui';\nimport {\n    Disposable,\n    Inject,\n    Injector,\n    IUniverInstanceService,\n    ObjectMatrix,\n    Range,\n    Rectangle,\n    Tools,\n    UniverInstanceType,\n} from '@univerjs/core';\nimport {\n    createTopMatrixFromMatrix,\n    findAllRectangle,\n    rangeToDiscreteRange,\n} from '@univerjs/sheets';\nimport { AddConditionalRuleMutation, AddConditionalRuleMutationUndoFactory, ConditionalFormattingRuleModel, ConditionalFormattingViewModel, DeleteConditionalRuleMutation, DeleteConditionalRuleMutationUndoFactory, SetConditionalRuleMutation, setConditionalRuleMutationUndoFactory, SHEET_CONDITIONAL_FORMATTING_PLUGIN } from '@univerjs/sheets-conditional-formatting';\nimport { COPY_TYPE, getRepeatRange, ISheetClipboardService, PREDEFINED_HOOK_NAME, virtualizeDiscreteRanges } from '@univerjs/sheets-ui';\n\nexport class ConditionalFormattingCopyPasteController extends Disposable {\n    private _copyInfo: Nullable<{\n        matrix: ObjectMatrix<string[]>;\n        info: {\n            unitId: string;\n            subUnitId: string;\n            cfMap: Record<string, IConditionalFormattingRuleConfig>;\n        };\n    }>;\n\n    constructor(\n        @Inject(ISheetClipboardService) private _sheetClipboardService: ISheetClipboardService,\n        @Inject(ConditionalFormattingRuleModel) private _conditionalFormattingRuleModel: ConditionalFormattingRuleModel,\n        @Inject(Injector) private _injector: Injector,\n        @Inject(ConditionalFormattingViewModel) private _conditionalFormattingViewModel: ConditionalFormattingViewModel,\n\n        @Inject(IUniverInstanceService) private _univerInstanceService: IUniverInstanceService\n    ) {\n        super();\n        this._initClipboardHook();\n    }\n\n    private _initClipboardHook() {\n        this.disposeWithMe(\n            this._sheetClipboardService.addClipboardHook({\n                id: SHEET_CONDITIONAL_FORMATTING_PLUGIN,\n                onBeforeCopy: (unitId, subUnitId, range) => this._collectConditionalRule(unitId, subUnitId, range),\n                onPasteCells: (pasteFrom, pasteTo, data, payload) => {\n                    const { copyType = COPY_TYPE.COPY, pasteType } = payload;\n                    const { range: copyRange } = pasteFrom || {};\n                    const { range: pastedRange } = pasteTo;\n                    return this._generateConditionalFormattingMutations(pastedRange, { copyType, pasteType, copyRange });\n                },\n            })\n        );\n    }\n\n    private _collectConditionalRule(unitId: string, subUnitId: string, range: IRange) {\n        const matrix = new ObjectMatrix<string[]>();\n        const cfMap: Record<string, IConditionalFormattingRuleConfig> = {};\n        this._copyInfo = {\n            matrix,\n            info: {\n                unitId,\n                subUnitId,\n                cfMap,\n            },\n        };\n\n        const discreteRange = this._injector.invoke((accessor) => {\n            return rangeToDiscreteRange(range, accessor, unitId, subUnitId);\n        });\n        if (!discreteRange) {\n            return;\n        }\n        const { rows, cols } = discreteRange;\n        const cfIdSet: Set<string> = new Set();\n        rows.forEach((row, rowIndex) => {\n            cols.forEach((col, colIndex) => {\n                const cellCfList = this._conditionalFormattingViewModel.getCellCfs(unitId, subUnitId, row, col);\n                if (!cellCfList) {\n                    return;\n                }\n                cellCfList.forEach((item) => cfIdSet.add(item.cfId));\n                matrix.setValue(rowIndex, colIndex, cellCfList.map((item) => item.cfId));\n            });\n        });\n        cfIdSet.forEach((cfId) => {\n            const rule = this._conditionalFormattingRuleModel.getRule(unitId, subUnitId, cfId);\n            if (rule) {\n                cfMap[cfId] = rule.rule;\n            }\n        });\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    private _generateConditionalFormattingMutations(\n        pastedRange: IDiscreteRange,\n        copyInfo: {\n            copyType: COPY_TYPE;\n            copyRange?: IDiscreteRange;\n            pasteType: IPasteHookValueType;\n        }\n    ) {\n        const workbook = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!;\n        const sheet = workbook.getActiveSheet();\n        const unitId = workbook.getUnitId();\n        if (!sheet) return { redos: [], undos: [] };\n\n        const subUnitId = sheet.getSheetId();\n        if (copyInfo.copyType === COPY_TYPE.CUT) {\n            // This do not need to deal with clipping.\n            // move range had handle this case .\n            // to see cf.ref-range.controller.ts\n            this._copyInfo = null;\n            return { redos: [], undos: [] };\n        }\n        if (!this._copyInfo || !copyInfo.copyRange) {\n            return { redos: [], undos: [] };\n        }\n\n        const specialPastes: IPasteHookValueType[] = [\n            PREDEFINED_HOOK_NAME.SPECIAL_PASTE_FORMAT,\n            PREDEFINED_HOOK_NAME.DEFAULT_PASTE,\n            PREDEFINED_HOOK_NAME.SPECIAL_PASTE_BESIDES_BORDER,\n        ];\n\n        if (\n            !specialPastes.includes(\n                copyInfo.pasteType\n            )\n        ) {\n            return { redos: [], undos: [] };\n        }\n\n        const { ranges: [vCopyRange, vPastedRange], mapFunc } = virtualizeDiscreteRanges([copyInfo.copyRange, pastedRange]);\n        const repeatRange = getRepeatRange(vCopyRange, vPastedRange, true);\n        const effectedConditionalFormattingRuleMatrix: Record<string, ObjectMatrix<1>> = {};\n        Range.foreach(vPastedRange, (row, col) => {\n            const { row: realRow, col: realCol } = mapFunc(row, col);\n            const cellCfList = this._conditionalFormattingViewModel.getCellCfs(unitId, subUnitId, realRow, realCol);\n            if (cellCfList) {\n                cellCfList.forEach((item) => {\n                    if (!effectedConditionalFormattingRuleMatrix[item.cfId]) {\n                        const ruleMatrix = new ObjectMatrix<1>();\n                        effectedConditionalFormattingRuleMatrix[item.cfId] = ruleMatrix;\n                        const rule = this._conditionalFormattingRuleModel.getRule(unitId, subUnitId, item.cfId);\n                        rule?.ranges.forEach((range) => {\n                            Range.foreach(range, (row, col) => {\n                                ruleMatrix.setValue(row, col, 1);\n                            });\n                        });\n                    }\n                    effectedConditionalFormattingRuleMatrix[item.cfId].realDeleteValue(realRow, realCol);\n                });\n            }\n        });\n\n        const { matrix, info } = this._copyInfo;\n        const waitAddRule: IConditionFormattingRule[] = [];\n        let nextCfId = this._conditionalFormattingRuleModel.createCfId(unitId, subUnitId);\n        const cacheCfIdMap: Record<string, IConditionFormattingRule> = {};\n        /**\n         used to match the conditional formatting in the current worksheet with the same conditional formatting\n         configuration in the copy range, and if this worksheet does not exist,\n         a new cf is created based on the current worksheet.\n         */\n        const getCurrentSheetCfRule = (copyRangeCfId: string) => {\n            if (cacheCfIdMap[copyRangeCfId]) {\n                return cacheCfIdMap[copyRangeCfId];\n            }\n            const oldRule = info?.cfMap[copyRangeCfId];\n            const targetRule = [...(this._conditionalFormattingRuleModel.getSubunitRules(unitId, subUnitId) || []), ...waitAddRule].find((rule) => {\n                return Tools.diffValue(rule.rule, oldRule);\n            });\n            if (targetRule) {\n                cacheCfIdMap[copyRangeCfId] = targetRule;\n                return targetRule;\n            } else {\n                const rule: IConditionFormattingRule = {\n                    rule: oldRule,\n                    cfId: nextCfId,\n                    ranges: [],\n                    stopIfTrue: false,\n                };\n                cacheCfIdMap[copyRangeCfId] = rule;\n                waitAddRule.push(rule);\n                nextCfId = `${Number(nextCfId) + 1}`;\n                return rule;\n            }\n        };\n\n        repeatRange.forEach((item) => {\n            matrix &&\n                matrix.forValue((row, col, copyRangeCfIdList) => {\n                    const range = Rectangle.getPositionRange(\n                        {\n                            startRow: row,\n                            endRow: row,\n                            startColumn: col,\n                            endColumn: col,\n                        },\n                        item.startRange\n                    );\n\n                    const { row: _row, col: _col } = mapFunc(range.startRow, range.startColumn);\n\n                    copyRangeCfIdList.forEach((cfId) => {\n                        if (!effectedConditionalFormattingRuleMatrix[cfId]) {\n                            const rule = getCurrentSheetCfRule(cfId);\n                            const ruleMatrix = new ObjectMatrix<1>();\n                            effectedConditionalFormattingRuleMatrix[cfId] = ruleMatrix;\n                            rule.ranges.forEach((range) => {\n                                Range.foreach(range, (row, col) => {\n                                    ruleMatrix.setValue(row, col, 1);\n                                });\n                            });\n                        }\n                        effectedConditionalFormattingRuleMatrix[cfId].setValue(_row, _col, 1);\n                    });\n                });\n        });\n        const redos = [];\n        const undos = [];\n        for (const cfId in effectedConditionalFormattingRuleMatrix) {\n            const matrix = effectedConditionalFormattingRuleMatrix[cfId];\n            const ranges = findAllRectangle(createTopMatrixFromMatrix(matrix));\n            if (!ranges.length) {\n                const deleteParams: IDeleteConditionalRuleMutationParams = {\n                    unitId,\n                    subUnitId,\n                    cfId,\n                };\n                redos.push({ id: DeleteConditionalRuleMutation.id, params: deleteParams });\n                undos.push(...DeleteConditionalRuleMutationUndoFactory(this._injector, deleteParams));\n            }\n            if (waitAddRule.some((rule) => rule.cfId === cfId)) {\n                const rule = getCurrentSheetCfRule(cfId);\n                const addParams: IAddConditionalRuleMutationParams = {\n                    unitId,\n                    subUnitId,\n                    rule: { ...rule, ranges },\n                };\n                redos.push({ id: AddConditionalRuleMutation.id, params: addParams });\n                undos.push(AddConditionalRuleMutationUndoFactory(this._injector, addParams));\n            } else {\n                const rule = this._conditionalFormattingRuleModel.getRule(unitId, subUnitId, cfId);\n                if (!rule) {\n                    continue;\n                }\n                const setParams: ISetConditionalRuleMutationParams = {\n                    unitId,\n                    subUnitId,\n                    rule: { ...rule, ranges },\n                };\n                redos.push({ id: SetConditionalRuleMutation.id, params: setParams });\n                undos.push(...setConditionalRuleMutationUndoFactory(this._injector, setParams));\n            }\n        }\n        return {\n            redos,\n            undos,\n        };\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommandInfo } from '@univerjs/core';\nimport type { IAddCfCommandParams } from '@univerjs/sheets-conditional-formatting';\nimport { Disposable, ICommandService, Inject, LocaleService } from '@univerjs/core';\nimport { RangeProtectionPermissionEditPoint, SheetPermissionCheckController, WorkbookEditablePermission, WorksheetEditPermission, WorksheetSetCellStylePermission } from '@univerjs/sheets';\nimport { AddCfCommand } from '@univerjs/sheets-conditional-formatting';\n\nexport class ConditionalFormattingPermissionController extends Disposable {\n    constructor(\n        @Inject(LocaleService) private _localeService: LocaleService,\n        @ICommandService private readonly _commandService: ICommandService,\n        @Inject(SheetPermissionCheckController) private readonly _sheetPermissionCheckController: SheetPermissionCheckController\n\n    ) {\n        super();\n\n        this._commandExecutedListener();\n    }\n\n    private _commandExecutedListener() {\n        this.disposeWithMe(\n            this._commandService.beforeCommandExecuted((command: ICommandInfo) => {\n                if (command.id === AddCfCommand.id) {\n                    const permission = this._sheetPermissionCheckController.permissionCheckWithRanges({\n                        workbookTypes: [WorkbookEditablePermission],\n                        rangeTypes: [RangeProtectionPermissionEditPoint],\n                        worksheetTypes: [WorksheetEditPermission, WorksheetSetCellStylePermission],\n                    }, (command.params as IAddCfCommandParams).rule.ranges);\n                    if (!permission) {\n                        this._sheetPermissionCheckController.blockExecuteWithoutPermission(this._localeService.t('permission.dialog.setStyleErr'));\n                    }\n                }\n            })\n        );\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, Workbook } from '@univerjs/core';\nimport type { EffectRefRangeParams } from '@univerjs/sheets';\nimport type { IConditionFormattingRule, IDeleteConditionalRuleMutationParams, ISetConditionalRuleMutationParams } from '@univerjs/sheets-conditional-formatting';\nimport { Disposable, Inject, Injector, IUniverInstanceService, toDisposable, UniverInstanceType } from '@univerjs/core';\nimport { handleDefaultRangeChangeWithEffectRefCommands, RefRangeService } from '@univerjs/sheets';\nimport { ConditionalFormattingRuleModel, DeleteConditionalRuleMutation, DeleteConditionalRuleMutationUndoFactory, isRangesEqual, SetConditionalRuleMutation, setConditionalRuleMutationUndoFactory } from '@univerjs/sheets-conditional-formatting';\n\nexport class SheetsCfRefRangeController extends Disposable {\n    constructor(\n        @Inject(ConditionalFormattingRuleModel) private _conditionalFormattingRuleModel: ConditionalFormattingRuleModel,\n        @Inject(IUniverInstanceService) private _univerInstanceService: IUniverInstanceService,\n        @Inject(Injector) private _injector: Injector,\n        @Inject(RefRangeService) private _refRangeService: RefRangeService\n    ) {\n        super();\n\n        this._initRefRange();\n    }\n\n    private _initRefRange() {\n        const disposableMap: Map<string, () => void> = new Map();\n        const getCfIdWithUnitId = (unitID: string, subUnitId: string, cfId: string) => `${unitID}_${subUnitId}_${cfId}`;\n        const register = (unitId: string, subUnitId: string, rule: IConditionFormattingRule) => {\n            const handleRangeChange = (commandInfo: EffectRefRangeParams) => {\n                const oldRanges = [...rule.ranges];\n                const resultRanges = oldRanges.map((range) => {\n                    return handleDefaultRangeChangeWithEffectRefCommands(range, commandInfo) as IRange;\n                }).filter((range) => !!range);\n                const isEqual = isRangesEqual(resultRanges, oldRanges);\n                if (isEqual) {\n                    return { redos: [], undos: [] };\n                }\n                if (resultRanges.length) {\n                    const redoParams: ISetConditionalRuleMutationParams = { unitId, subUnitId, rule: { ...rule, ranges: resultRanges } };\n                    const redos = [{ id: SetConditionalRuleMutation.id, params: redoParams }];\n                    const undos = setConditionalRuleMutationUndoFactory(this._injector, redoParams);\n                    return { redos, undos };\n                } else {\n                    const redoParams: IDeleteConditionalRuleMutationParams = { unitId, subUnitId, cfId: rule.cfId };\n                    const redos = [{ id: DeleteConditionalRuleMutation.id, params: redoParams }];\n                    const undos = DeleteConditionalRuleMutationUndoFactory(this._injector, redoParams);\n                    return { redos, undos };\n                }\n            };\n            const disposeList: (() => void)[] = [];\n            rule.ranges.forEach((range) => {\n                const disposable = this._refRangeService.registerRefRange(range, handleRangeChange);\n                disposeList.push(() => disposable.dispose());\n            });\n            disposableMap.set(getCfIdWithUnitId(unitId, subUnitId, rule.cfId), () => disposeList.forEach((dispose) => dispose()));\n        };\n\n        this.disposeWithMe(this._conditionalFormattingRuleModel.$ruleChange.subscribe((option) => {\n            const { unitId, subUnitId, rule } = option;\n            const workbook = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!;\n            const worksheet = workbook.getActiveSheet();\n            if (option.unitId !== workbook.getUnitId() || option.subUnitId !== worksheet?.getSheetId()) {\n                return;\n            }\n            switch (option.type) {\n                case 'add':{\n                    register(option.unitId, option.subUnitId, option.rule);\n                    break;\n                }\n                case 'delete':{\n                    const dispose = disposableMap.get(getCfIdWithUnitId(unitId, subUnitId, rule.cfId));\n                    dispose && dispose();\n                    break;\n                }\n                case 'set':{\n                    const dispose = disposableMap.get(getCfIdWithUnitId(unitId, subUnitId, rule.cfId));\n                    dispose && dispose();\n                            // and to add\n                    register(option.unitId, option.subUnitId, option.rule);\n                }\n            }\n        }));\n\n        this.disposeWithMe(toDisposable(() => {\n            disposableMap.forEach((item) => {\n                item();\n            });\n            disposableMap.clear();\n        }));\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellDataForSheetInterceptor, Workbook } from '@univerjs/core';\nimport type { IConditionalFormattingCellData, IConditionFormattingRule } from '@univerjs/sheets-conditional-formatting';\nimport { Disposable, Inject, InterceptorEffectEnum, IUniverInstanceService, UniverInstanceType } from '@univerjs/core';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { INTERCEPTOR_POINT, SheetInterceptorService } from '@univerjs/sheets';\nimport { ConditionalFormattingRuleModel, ConditionalFormattingService, ConditionalFormattingViewModel, DEFAULT_PADDING, DEFAULT_WIDTH } from '@univerjs/sheets-conditional-formatting';\nimport { SheetSkeletonManagerService } from '@univerjs/sheets-ui';\nimport { merge } from 'rxjs';\nimport { bufferTime, filter } from 'rxjs/operators';\n\nexport class SheetsCfRenderController extends Disposable {\n    /**\n     * When a set operation is triggered multiple times over a short period of time, it may result in some callbacks not being disposed,and caused a render cache exception.\n     * The solution here is to store all the asynchronous tasks and focus on processing after the last callback\n     */\n    private _ruleChangeCacheMap: Map<string, Array<{ oldRule: IConditionFormattingRule; rule: IConditionFormattingRule; dispose: () => boolean }>> = new Map();\n    constructor(@Inject(SheetInterceptorService) private _sheetInterceptorService: SheetInterceptorService, @Inject(ConditionalFormattingService) private _conditionalFormattingService: ConditionalFormattingService, @Inject(IUniverInstanceService) private _univerInstanceService: IUniverInstanceService, @Inject(IRenderManagerService) private _renderManagerService: IRenderManagerService, @Inject(ConditionalFormattingViewModel) private _conditionalFormattingViewModel: ConditionalFormattingViewModel, @Inject(ConditionalFormattingRuleModel) private _conditionalFormattingRuleModel: ConditionalFormattingRuleModel) {\n        super();\n\n        this._initViewModelInterceptor();\n        this._initSkeleton();\n        this.disposeWithMe(() => {\n            this._ruleChangeCacheMap.clear();\n        });\n    }\n\n    private _markDirtySkeleton() {\n        const unitId = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getUnitId();\n        this._renderManagerService.getRenderById(unitId)?.with(SheetSkeletonManagerService).reCalculate();\n        this._renderManagerService.getRenderById(unitId)?.mainComponent?.makeDirty();\n    }\n\n    private _initSkeleton() {\n        this.disposeWithMe(merge(this._conditionalFormattingRuleModel.$ruleChange, this._conditionalFormattingViewModel.markDirty$)\n            .pipe(\n                bufferTime(16),\n                filter((v) => !!v.length),\n                filter((v) => {\n                    const workbook = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n                    if (!workbook) return false;\n\n                    const worksheet = workbook.getActiveSheet();\n                    if (!worksheet) return false;\n\n                    return v.filter((item) => item.unitId === workbook.getUnitId() && item.subUnitId === worksheet.getSheetId()).length > 0;\n                })\n            ).subscribe(() => this._markDirtySkeleton()));\n    }\n\n    private _initViewModelInterceptor() {\n        this.disposeWithMe(this._sheetInterceptorService.intercept(INTERCEPTOR_POINT.CELL_CONTENT, {\n            effect: InterceptorEffectEnum.Style,\n            handler: (cell, context, next) => {\n                const result = this._conditionalFormattingService.composeStyle(context.unitId, context.subUnitId, context.row, context.col);\n                if (!result) {\n                    return next(cell);\n                }\n                const styleMap = context.workbook.getStyles();\n                const defaultStyle = (typeof cell?.s === 'string' ? styleMap.get(cell?.s) : cell?.s) || {};\n                const s = { ...defaultStyle };\n                const cloneCell = { ...cell, s } as IConditionalFormattingCellData & ICellDataForSheetInterceptor;\n                if (result.style) {\n                    Object.assign(s, result.style);\n                }\n                if (!cloneCell.fontRenderExtension) {\n                    cloneCell.fontRenderExtension = {};\n                    if (result.isShowValue !== undefined) {\n                        cloneCell.fontRenderExtension.isSkip = !result.isShowValue;\n                    }\n                }\n                if (result.dataBar) {\n                    cloneCell.dataBar = result.dataBar;\n                }\n                if (result.iconSet) {\n                    cloneCell.iconSet = result.iconSet;\n                    cloneCell.fontRenderExtension.leftOffset = DEFAULT_PADDING + DEFAULT_WIDTH;\n                }\n\n                return next(cloneCell);\n            },\n            priority: 10,\n        }));\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { MenuConfig } from '@univerjs/ui';\n\nexport const SHEETS_CONDITIONAL_FORMATTING_UI_PLUGIN_CONFIG_KEY = 'sheets-conditional-formatting-ui.config';\n\nexport const configSymbol = Symbol(SHEETS_CONDITIONAL_FORMATTING_UI_PLUGIN_CONFIG_KEY);\n\nexport interface IUniverSheetsConditionalFormattingUIConfig {\n    menu?: MenuConfig;\n}\n\nexport const defaultPluginConfig: IUniverSheetsConditionalFormattingUIConfig = {};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IUniverSheetsConditionalFormattingUIConfig } from './controllers/config.schema';\nimport {\n    DependentOn,\n    ICommandService,\n    IConfigService,\n    Inject,\n    Injector,\n    merge,\n    Plugin,\n    UniverInstanceType,\n} from '@univerjs/core';\nimport { SHEET_CONDITIONAL_FORMATTING_PLUGIN, UniverSheetsConditionalFormattingPlugin } from '@univerjs/sheets-conditional-formatting';\nimport { AddAverageCfCommand } from './commands/commands/add-average-cf.command';\nimport { AddColorScaleConditionalRuleCommand } from './commands/commands/add-color-scale-cf.command';\nimport { AddDataBarConditionalRuleCommand } from './commands/commands/add-data-bar-cf.command';\nimport { AddDuplicateValuesCfCommand } from './commands/commands/add-duplicate-values-cf.command';\nimport { AddNumberCfCommand } from './commands/commands/add-number-cf.command';\nimport { AddRankCfCommand } from './commands/commands/add-rank-cf.command';\nimport { AddTextCfCommand } from './commands/commands/add-text-cf.command';\nimport { AddTimePeriodCfCommand } from './commands/commands/add-time-period-cf.command';\nimport { AddUniqueValuesCfCommand } from './commands/commands/add-unique-values-cf.command';\n\nimport { OpenConditionalFormattingOperator } from './commands/operations/open-conditional-formatting-panel';\nimport { ConditionalFormattingCopyPasteController } from './controllers/cf.copy-paste.controller';\nimport { ConditionalFormattingI18nController } from './controllers/cf.i18n.controller';\nimport { ConditionalFormattingPermissionController } from './controllers/cf.permission.controller';\nimport { SheetsCfRefRangeController } from './controllers/cf.ref-range.controller';\nimport { SheetsCfRenderController } from './controllers/cf.render.controller';\nimport { defaultPluginConfig, SHEETS_CONDITIONAL_FORMATTING_UI_PLUGIN_CONFIG_KEY } from './controllers/config.schema';\n\n@DependentOn(UniverSheetsConditionalFormattingPlugin)\nexport class UniverSheetsConditionalFormattingMobileUIPlugin extends Plugin {\n    static override pluginName = `${SHEET_CONDITIONAL_FORMATTING_PLUGIN}_MOBILE_UI_PLUGIN`;\n    static override type = UniverInstanceType.UNIVER_SHEET;\n\n    constructor(\n        private readonly _config: Partial<IUniverSheetsConditionalFormattingUIConfig> = defaultPluginConfig,\n        @Inject(Injector) override readonly _injector: Injector,\n        @Inject(ICommandService) private _commandService: ICommandService,\n        @IConfigService private readonly _configService: IConfigService\n    ) {\n        super();\n\n        // Manage the plugin configuration.\n        const { menu, ...rest } = merge(\n            {},\n            defaultPluginConfig,\n            this._config\n        );\n        if (menu) {\n            this._configService.setConfig('menu', menu, { merge: true });\n        }\n        this._configService.setConfig(SHEETS_CONDITIONAL_FORMATTING_UI_PLUGIN_CONFIG_KEY, rest);\n\n        this._initCommand();\n\n        this._injector.add([SheetsCfRenderController]);\n        this._injector.add([SheetsCfRefRangeController]);\n        this._injector.add([ConditionalFormattingCopyPasteController]);\n        this._injector.add([ConditionalFormattingPermissionController]);\n        this._injector.add([ConditionalFormattingI18nController]);\n    }\n\n    private _initCommand() {\n        [\n            AddAverageCfCommand,\n            AddColorScaleConditionalRuleCommand,\n            AddDataBarConditionalRuleCommand,\n            AddDuplicateValuesCfCommand,\n            AddNumberCfCommand,\n            AddRankCfCommand,\n            AddTextCfCommand,\n            AddTimePeriodCfCommand,\n            AddUniqueValuesCfCommand,\n            OpenConditionalFormattingOperator,\n        ].forEach((m) => {\n            this._commandService.registerCommand(m);\n        });\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IMutationInfo, IRange, Workbook } from '@univerjs/core';\nimport type { IDeleteConditionalRuleMutationParams, ISetConditionalRuleMutationParams } from '@univerjs/sheets-conditional-formatting';\nimport type { IDiscreteRange, ISheetAutoFillHook } from '@univerjs/sheets-ui';\nimport { Disposable, Inject, Injector, IUniverInstanceService, ObjectMatrix, Range, Rectangle, UniverInstanceType } from '@univerjs/core';\nimport { createTopMatrixFromMatrix, findAllRectangle } from '@univerjs/sheets';\nimport { ConditionalFormattingRuleModel, ConditionalFormattingViewModel, DeleteConditionalRuleMutation, DeleteConditionalRuleMutationUndoFactory, SetConditionalRuleMutation, setConditionalRuleMutationUndoFactory, SHEET_CONDITIONAL_FORMATTING_PLUGIN } from '@univerjs/sheets-conditional-formatting';\nimport { APPLY_TYPE, getAutoFillRepeatRange, IAutoFillService, virtualizeDiscreteRanges } from '@univerjs/sheets-ui';\n\nexport class ConditionalFormattingAutoFillController extends Disposable {\n    constructor(\n        @Inject(Injector) private _injector: Injector,\n        @Inject(IUniverInstanceService) private _univerInstanceService: IUniverInstanceService,\n        @Inject(IAutoFillService) private _autoFillService: IAutoFillService,\n        @Inject(ConditionalFormattingRuleModel) private _conditionalFormattingRuleModel: ConditionalFormattingRuleModel,\n        @Inject(ConditionalFormattingViewModel) private _conditionalFormattingViewModel: ConditionalFormattingViewModel\n    ) {\n        super();\n\n        this._initAutoFill();\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    private _initAutoFill() {\n        const noopReturnFunc = () => ({ redos: [], undos: [] });\n        // eslint-disable-next-line max-lines-per-function\n        const loopFunc = (\n            sourceStartCell: { row: number; col: number },\n            targetStartCell: { row: number; col: number },\n            relativeRange: IRange,\n            matrixMap: Map<string, ObjectMatrix<1>>,\n            mapFunc: (row: number, col: number) => ({ row: number; col: number })\n        ) => {\n            const unitId = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getUnitId();\n            const subUnitId = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getActiveSheet()?.getSheetId();\n            if (!unitId || !subUnitId) {\n                return;\n            }\n\n            const sourceRange = {\n                startRow: sourceStartCell.row,\n                startColumn: sourceStartCell.col,\n                endColumn: sourceStartCell.col,\n                endRow: sourceStartCell.row,\n            };\n            const targetRange = {\n                startRow: targetStartCell.row,\n                startColumn: targetStartCell.col,\n                endColumn: targetStartCell.col,\n                endRow: targetStartCell.row,\n            };\n\n            Range.foreach(relativeRange, (row, col) => {\n                const sourcePositionRange = Rectangle.getPositionRange(\n                    {\n                        startRow: row,\n                        startColumn: col,\n                        endColumn: col,\n                        endRow: row,\n                    },\n                    sourceRange\n                );\n                const targetPositionRange = Rectangle.getPositionRange(\n                    {\n                        startRow: row,\n                        startColumn: col,\n                        endColumn: col,\n                        endRow: row,\n                    },\n                    targetRange\n                );\n                const { row: sourceRow, col: sourceCol } = mapFunc(sourcePositionRange.startRow, sourcePositionRange.startColumn);\n                const sourceCellCf = this._conditionalFormattingViewModel.getCellCfs(\n                    unitId,\n                    subUnitId,\n                    sourceRow,\n                    sourceCol\n                );\n                const { row: targetRow, col: targetCol } = mapFunc(targetPositionRange.startRow, targetPositionRange.startColumn);\n                const targetCellCf = this._conditionalFormattingViewModel.getCellCfs(\n                    unitId,\n                    subUnitId,\n                    targetRow,\n                    targetCol\n                );\n                if (targetCellCf) {\n                    targetCellCf.forEach((cf) => {\n                        let matrix = matrixMap.get(cf.cfId);\n                        if (!matrixMap.get(cf.cfId)) {\n                            const rule = this._conditionalFormattingRuleModel.getRule(unitId, subUnitId, cf.cfId);\n                            if (!rule) {\n                                return;\n                            }\n                            matrix = new ObjectMatrix();\n                            rule.ranges.forEach((range) => {\n                                Range.foreach(range, (row, col) => {\n                                    matrix!.setValue(row, col, 1);\n                                });\n                            });\n                            matrixMap.set(cf.cfId, matrix);\n                        }\n                        matrix!.realDeleteValue(targetRow, targetCol);\n                    });\n                }\n\n                if (sourceCellCf) {\n                    sourceCellCf.forEach((cf) => {\n                        let matrix = matrixMap.get(cf.cfId);\n                        if (!matrixMap.get(cf.cfId)) {\n                            const rule = this._conditionalFormattingRuleModel.getRule(unitId, subUnitId, cf.cfId);\n                            if (!rule) {\n                                return;\n                            }\n                            matrix = new ObjectMatrix();\n                            rule.ranges.forEach((range) => {\n                                Range.foreach(range, (row, col) => {\n                                    matrix!.setValue(row, col, 1);\n                                });\n                            });\n                            matrixMap.set(cf.cfId, matrix);\n                        }\n                        matrix!.setValue(targetRow, targetCol, 1);\n                    });\n                }\n            });\n        };\n\n        const generalApplyFunc = (sourceRange: IDiscreteRange, targetRange: IDiscreteRange) => {\n            const unitId = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)?.getUnitId();\n            const subUnitId = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)?.getActiveSheet()?.getSheetId();\n            const matrixMap: Map<string, ObjectMatrix<1>> = new Map();\n\n            const redos: IMutationInfo[] = [];\n            const undos: IMutationInfo[] = [];\n            if (!unitId || !subUnitId) {\n                return noopReturnFunc();\n            }\n\n            const virtualRange = virtualizeDiscreteRanges([sourceRange, targetRange]);\n            const [vSourceRange, vTargetRange] = virtualRange.ranges;\n            const { mapFunc } = virtualRange;\n\n            const sourceStartCell = {\n                row: vSourceRange.startRow,\n                col: vSourceRange.startColumn,\n            };\n\n            const repeats = getAutoFillRepeatRange(vSourceRange, vTargetRange);\n            repeats.forEach((repeat) => {\n                loopFunc(sourceStartCell, repeat.repeatStartCell, repeat.relativeRange, matrixMap, mapFunc);\n            });\n            matrixMap.forEach((item, cfId) => {\n                const rule = this._conditionalFormattingRuleModel.getRule(unitId, subUnitId, cfId);\n                if (!rule) {\n                    return;\n                }\n                const ranges = findAllRectangle(createTopMatrixFromMatrix(item));\n                if (ranges.length) {\n                    const params: ISetConditionalRuleMutationParams = {\n                        unitId,\n                        subUnitId,\n                        rule: { ...rule, ranges },\n                    };\n                    redos.push({ id: SetConditionalRuleMutation.id, params });\n                    undos.push(...setConditionalRuleMutationUndoFactory(this._injector, params));\n                } else {\n                    const params: IDeleteConditionalRuleMutationParams = {\n                        unitId,\n                        subUnitId,\n                        cfId: rule.cfId,\n                    };\n                    redos.push({ id: DeleteConditionalRuleMutation.id, params });\n                    undos.push(...DeleteConditionalRuleMutationUndoFactory(this._injector, params));\n                }\n            });\n            return {\n                undos,\n                redos,\n            };\n        };\n\n        const hook: ISheetAutoFillHook = {\n            id: SHEET_CONDITIONAL_FORMATTING_PLUGIN,\n            onFillData: (location, direction, applyType) => {\n                if (applyType === APPLY_TYPE.COPY || applyType === APPLY_TYPE.ONLY_FORMAT || applyType === APPLY_TYPE.SERIES) {\n                    const { source, target } = location;\n                    return generalApplyFunc(source, target);\n                }\n\n                return noopReturnFunc();\n            },\n        };\n\n        this.disposeWithMe(this._autoFillService.addHook(hook));\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IMutationInfo, IRange, Workbook } from '@univerjs/core';\nimport type { IConditionalFormattingRuleConfig, IConditionFormattingRule, IDeleteConditionalRuleMutationParams, ISetConditionalRuleMutationParams } from '@univerjs/sheets-conditional-formatting';\nimport { Disposable, Inject, Injector, IUniverInstanceService, Rectangle, UniverInstanceType } from '@univerjs/core';\nimport { ClearSelectionAllCommand, ClearSelectionFormatCommand, RangeMergeUtil, SheetInterceptorService, SheetsSelectionsService } from '@univerjs/sheets';\nimport { ConditionalFormattingRuleModel, DeleteConditionalRuleMutation, DeleteConditionalRuleMutationUndoFactory, SetConditionalRuleMutation, setConditionalRuleMutationUndoFactory } from '@univerjs/sheets-conditional-formatting';\n\nexport class ConditionalFormattingClearController extends Disposable {\n    constructor(\n        @Inject(Injector) private _injector: Injector,\n        @Inject(IUniverInstanceService) private _univerInstanceService: IUniverInstanceService,\n        @Inject(SheetInterceptorService) private _sheetInterceptorService: SheetInterceptorService,\n        @Inject(SheetsSelectionsService) private _selectionManagerService: SheetsSelectionsService,\n        @Inject(ConditionalFormattingRuleModel) private _conditionalFormattingRuleModel: ConditionalFormattingRuleModel\n\n    ) {\n        super();\n\n        this._init();\n    }\n\n    private _init() {\n        this.disposeWithMe(this._sheetInterceptorService.interceptCommand({\n            getMutations: (commandInfo) => {\n                const redos: IMutationInfo[] = [];\n                const undos: IMutationInfo[] = [];\n                const defaultV = { redos, undos };\n                if ([ClearSelectionFormatCommand.id, ClearSelectionAllCommand.id].includes(commandInfo.id)) {\n                    const ranges = this._selectionManagerService.getCurrentSelections()?.map((s) => s.range);\n                    if (!ranges) {\n                        return defaultV;\n                    }\n                    const workbook = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!;\n                    const worksheet = workbook.getActiveSheet();\n                    if (!worksheet) {\n                        return defaultV;\n                    }\n                    const unitId = workbook.getUnitId();\n                    const subUnitId = worksheet.getSheetId();\n\n                    const allRules = this._conditionalFormattingRuleModel.getSubunitRules(unitId, subUnitId);\n                    if (!allRules || !allRules.length) {\n                        return defaultV;\n                    }\n                    const { redos: interceptRedos, undos: interceptUndos } = generateClearCfMutations(this._injector, allRules, ranges, unitId, subUnitId);\n                    redos.push(...interceptRedos);\n                    undos.push(...interceptUndos);\n                }\n                return defaultV;\n            },\n        }));\n\n        this.disposeWithMe(this._sheetInterceptorService.interceptRanges({\n            getMutations: ({ unitId, subUnitId, ranges }) => {\n                const redos: IMutationInfo[] = [];\n                const undos: IMutationInfo[] = [];\n                const emptyInterceptorArr = { redos, undos };\n                if (!ranges || !ranges.length) {\n                    return emptyInterceptorArr;\n                }\n                const allRules = this._conditionalFormattingRuleModel.getSubunitRules(unitId, subUnitId);\n                if (!allRules || !allRules.length) {\n                    return emptyInterceptorArr;\n                }\n                const { redos: interceptRedos, undos: interceptUndos } = generateClearCfMutations(this._injector, allRules, ranges, unitId, subUnitId);\n                redos.push(...interceptRedos);\n                undos.push(...interceptUndos);\n\n                return emptyInterceptorArr;\n            },\n        }));\n    }\n}\n\nexport function generateClearCfMutations(injector: Injector, allRules: IConditionFormattingRule<IConditionalFormattingRuleConfig>[], ranges: IRange[], unitId: string, subUnitId: string) {\n    const redos: IMutationInfo[] = [];\n    const undos: IMutationInfo[] = [];\n    allRules.filter((rule) => {\n        return ranges.some((range) => rule.ranges.some((ruleRange) => Rectangle.getIntersects(ruleRange, range)));\n    }).forEach((rule) => {\n        const mergeUtil = new RangeMergeUtil();\n        const mergeRanges = mergeUtil.add(...rule.ranges).subtract(...ranges).merge();\n        if (mergeRanges.length) {\n            const redo: IMutationInfo<ISetConditionalRuleMutationParams> = {\n                id: SetConditionalRuleMutation.id,\n                params: {\n                    unitId,\n                    subUnitId,\n                    rule: { ...rule, ranges: mergeRanges },\n                },\n            };\n            const undo = setConditionalRuleMutationUndoFactory(injector, redo.params);\n            redos.push(redo);\n            undos.push(...undo);\n        } else {\n            const redo: IMutationInfo<IDeleteConditionalRuleMutationParams> = {\n                id: DeleteConditionalRuleMutation.id,\n                params: {\n                    unitId,\n                    subUnitId,\n                    cfId: rule.cfId,\n                },\n            };\n            const undo = DeleteConditionalRuleMutationUndoFactory(injector, redo.params);\n            redos.push(redo);\n            undos.push(...undo);\n        }\n    });\n    return { redos, undos };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Disposable,\n    Inject,\n    toDisposable,\n} from '@univerjs/core';\nimport { AFTER_CELL_EDIT, SheetInterceptorService } from '@univerjs/sheets';\nimport { ConditionalFormattingService } from '@univerjs/sheets-conditional-formatting';\n\nexport class ConditionalFormattingEditorController extends Disposable {\n    constructor(\n        @Inject(SheetInterceptorService) private readonly _sheetInterceptorService: SheetInterceptorService,\n        @Inject(ConditionalFormattingService) private readonly _conditionalFormattingService: ConditionalFormattingService\n    ) {\n        super();\n\n        this._initInterceptorEditorEnd();\n    }\n\n    /**\n     * Process the  values after  edit\n     * @private\n     * @memberof NumfmtService\n     */\n    private _initInterceptorEditorEnd() {\n        this.disposeWithMe(\n            toDisposable(\n                this._sheetInterceptorService.writeCellInterceptor.intercept(\n                    AFTER_CELL_EDIT,\n                    {\n                        handler: (value, context, next) => {\n                            if (!value) {\n                                next(value);\n                            }\n                            const result = this._conditionalFormattingService.composeStyle(context.unitId, context.subUnitId, context.row, context.col);\n                            const cfStyle = result?.style ?? {};\n                            const keys = Object.keys(cfStyle);\n                            if (value?.p) {\n                                value.p.body?.textRuns?.forEach((item) => {\n                                    if (item.ts) {\n                                        keys.forEach((key) => {\n                                            delete item.ts?.[key as keyof typeof item.ts];\n                                        });\n                                    }\n                                });\n                                return next(value);\n                            } else {\n                                const s = { ...(typeof value?.s === 'string' ? context.workbook.getStyles().get(value.s) : value?.s) || {} };\n                                keys.forEach((key) => {\n                                    delete s[key as keyof typeof s];\n                                });\n                                const cellData = { ...value, s: { ...s } };\n                                return next(cellData);\n                            }\n                        },\n                    }\n                )\n            )\n        );\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, Workbook } from '@univerjs/core';\nimport type { IMenuSelectorItem } from '@univerjs/ui';\nimport { ICommandService, IUniverInstanceService, Rectangle, UniverInstanceType } from '@univerjs/core';\nimport { checkRangesEditablePermission, RangeProtectionPermissionEditPoint, SetWorksheetActiveOperation, SheetsSelectionsService, WorkbookEditablePermission, WorksheetEditPermission, WorksheetSetCellStylePermission } from '@univerjs/sheets';\nimport { AddConditionalRuleMutation, ConditionalFormattingRuleModel, DeleteConditionalRuleMutation, MoveConditionalRuleMutation, SetConditionalRuleMutation } from '@univerjs/sheets-conditional-formatting';\n\nimport { getCurrentRangeDisable$ } from '@univerjs/sheets-ui';\nimport { getMenuHiddenObservable, MenuItemType } from '@univerjs/ui';\nimport { merge, Observable } from 'rxjs';\n\nimport { debounceTime } from 'rxjs/operators';\nimport { CF_MENU_OPERATION, OpenConditionalFormattingOperator } from '../commands/operations/open-conditional-formatting-panel';\n\nconst commandList = [\n    SetWorksheetActiveOperation.id,\n    AddConditionalRuleMutation.id,\n    SetConditionalRuleMutation.id,\n    DeleteConditionalRuleMutation.id,\n    MoveConditionalRuleMutation.id,\n];\n\nconst commonSelections = [\n    {\n        label: {\n            name: 'sheet.cf.ruleType.highlightCell',\n            selectable: false,\n        },\n        value: CF_MENU_OPERATION.highlightCell,\n    },\n    {\n        label: {\n            name: 'sheet.cf.panel.rankAndAverage',\n            selectable: false,\n        },\n        value: CF_MENU_OPERATION.rank,\n    },\n    {\n        label: {\n            name: 'sheet.cf.ruleType.formula',\n            selectable: false,\n        },\n        value: CF_MENU_OPERATION.formula,\n    },\n    {\n        label: {\n            name: 'sheet.cf.ruleType.colorScale',\n            selectable: false,\n        },\n        value: CF_MENU_OPERATION.colorScale,\n    },\n    {\n        label: {\n            name: 'sheet.cf.ruleType.dataBar',\n            selectable: false,\n        },\n        value: CF_MENU_OPERATION.dataBar,\n    },\n    {\n        label: {\n            name: 'sheet.cf.ruleType.iconSet',\n            selectable: false,\n        },\n        value: CF_MENU_OPERATION.icon,\n    },\n    {\n        label: {\n            name: 'sheet.cf.menu.manageConditionalFormatting',\n            selectable: false,\n        },\n        value: CF_MENU_OPERATION.viewRule,\n    },\n    {\n        label: {\n            name: 'sheet.cf.menu.createConditionalFormatting',\n            selectable: false,\n        },\n        value: CF_MENU_OPERATION.createRule,\n    },\n    {\n        label: {\n            name: 'sheet.cf.menu.clearRangeRules',\n            selectable: false,\n        },\n        value: CF_MENU_OPERATION.clearRangeRules,\n        disabled: false,\n    },\n    {\n        label: {\n            name: 'sheet.cf.menu.clearWorkSheetRules',\n            selectable: false,\n        },\n        value: CF_MENU_OPERATION.clearWorkSheetRules,\n    },\n];\n\n// eslint-disable-next-line max-lines-per-function\nexport const FactoryManageConditionalFormattingRule = (accessor: IAccessor): IMenuSelectorItem => {\n    const selectionManagerService = accessor.get(SheetsSelectionsService);\n    const commandService = accessor.get(ICommandService);\n    const univerInstanceService = accessor.get(IUniverInstanceService);\n    const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n\n    const clearRangeEnable$ = new Observable<boolean>((subscriber) => merge(\n        selectionManagerService.selectionMoveEnd$,\n        selectionManagerService.selectionSet$,\n        new Observable<null>((commandSubscribe) => {\n            const disposable = commandService.onCommandExecuted((commandInfo) => {\n                const { id, params } = commandInfo;\n                const unitId = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)?.getUnitId();\n                if (commandList.includes(id) && (params as { unitId: string }).unitId === unitId) {\n                    commandSubscribe.next(null);\n                }\n            });\n            return () => disposable.dispose();\n        })\n    ).pipe(debounceTime(16)).subscribe(() => {\n        const ranges = selectionManagerService.getCurrentSelections()?.map((selection) => selection.range) || [];\n        const workbook = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n        if (!workbook) return;\n        const worksheet = workbook.getActiveSheet();\n        if (!worksheet) return;\n\n        const allRule = conditionalFormattingRuleModel.getSubunitRules(workbook.getUnitId(), worksheet.getSheetId()) || [];\n        const ruleList = allRule.filter((rule) => rule.ranges.some((ruleRange) => ranges.some((range) => Rectangle.intersects(range, ruleRange))));\n        const hasPermission = ruleList.map((rule) => rule.ranges).every((ranges) => {\n            return checkRangesEditablePermission(accessor, workbook.getUnitId(), worksheet.getSheetId(), ranges);\n        });\n        subscriber.next(hasPermission);\n    }));\n    const clearSheetEnable$ = new Observable<boolean>((subscriber) =>\n        new Observable<null>((commandSubscribe) => {\n            const disposable = commandService.onCommandExecuted((commandInfo) => {\n                const { id, params } = commandInfo;\n                const unitId = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)?.getUnitId();\n                if (commandList.includes(id) && (params as { unitId: string }).unitId === unitId) {\n                    commandSubscribe.next(null);\n                }\n            });\n            return () => disposable.dispose();\n        }).pipe(debounceTime(16)).subscribe(() => {\n            const workbook = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n            if (!workbook) return;\n            const worksheet = workbook.getActiveSheet();\n            if (!worksheet) return;\n\n            const allRule = conditionalFormattingRuleModel.getSubunitRules(workbook.getUnitId(), worksheet.getSheetId()) || [];\n            if (!allRule.length) {\n                subscriber.next(false);\n                return false;\n            }\n\n            const hasPermission = allRule.map((rule) => rule.ranges).every((ranges) => {\n                return checkRangesEditablePermission(accessor, workbook.getUnitId(), worksheet.getSheetId(), ranges);\n            });\n            subscriber.next(hasPermission);\n        })\n    );\n    const selections$ = new Observable((subscriber) => {\n        clearRangeEnable$.subscribe((v) => {\n            const item = commonSelections.find((item) => item.value === CF_MENU_OPERATION.clearRangeRules);\n            if (item) {\n                item.disabled = !v;\n                subscriber.next(commonSelections);\n            }\n        });\n        clearSheetEnable$.subscribe((v) => {\n            const item = commonSelections.find((item) => item.value === CF_MENU_OPERATION.clearWorkSheetRules);\n            if (item) {\n                item.disabled = !v;\n                subscriber.next(commonSelections);\n            }\n        });\n        subscriber.next(commonSelections);\n    });\n    return {\n        id: OpenConditionalFormattingOperator.id,\n        type: MenuItemType.SELECTOR,\n        icon: 'Conditions',\n        tooltip: 'sheet.cf.title',\n        selections: selections$,\n        hidden$: getMenuHiddenObservable(accessor, UniverInstanceType.UNIVER_SHEET),\n        disabled$: getCurrentRangeDisable$(accessor, { workbookTypes: [WorkbookEditablePermission], worksheetTypes: [WorksheetSetCellStylePermission, WorksheetEditPermission], rangeTypes: [RangeProtectionPermissionEditPoint] }),\n    } as IMenuSelectorItem;\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { MenuSchemaType } from '@univerjs/ui';\nimport { RibbonStartGroup } from '@univerjs/ui';\nimport { OpenConditionalFormattingOperator } from '../commands/operations/open-conditional-formatting-panel';\nimport { FactoryManageConditionalFormattingRule } from '../menu/manage-rule';\n\nexport const menuSchema: MenuSchemaType = {\n    [RibbonStartGroup.FORMULAS_INSERT]: {\n        [OpenConditionalFormattingOperator.id]: {\n            order: 0,\n            menuItemFactory: FactoryManageConditionalFormattingRule,\n        },\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IDisposable } from '@univerjs/core';\nimport { Disposable, Inject, Injector } from '@univerjs/core';\nimport { IMenuManagerService } from '@univerjs/ui';\nimport { menuSchema } from './menu.schema';\n\nexport class ConditionalFormattingMenuController extends Disposable {\n    private _sidebarDisposable: IDisposable | null = null;\n\n    constructor(\n        @Inject(Injector) private _injector: Injector,\n        @IMenuManagerService private readonly _menuManagerService: IMenuManagerService\n    ) {\n        super();\n\n        this._menuManagerService.mergeMenu(menuSchema);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IMutationInfo, IRange, Nullable, Workbook } from '@univerjs/core';\nimport type { IAddConditionalRuleMutationParams, IDeleteConditionalRuleMutationParams, ISetConditionalRuleMutationParams } from '@univerjs/sheets-conditional-formatting';\nimport type { IFormatPainterHook } from '@univerjs/sheets-ui';\nimport { Disposable, Inject, Injector, IUniverInstanceService, ObjectMatrix, Range, Rectangle, Tools, UniverInstanceType } from '@univerjs/core';\nimport { createTopMatrixFromMatrix, findAllRectangle, SheetsSelectionsService } from '@univerjs/sheets';\nimport { AddConditionalRuleMutation, AddConditionalRuleMutationUndoFactory, ConditionalFormattingRuleModel, ConditionalFormattingViewModel, DeleteConditionalRuleMutation, DeleteConditionalRuleMutationUndoFactory, SetConditionalRuleMutation, setConditionalRuleMutationUndoFactory, SHEET_CONDITIONAL_FORMATTING_PLUGIN } from '@univerjs/sheets-conditional-formatting';\nimport { FormatPainterStatus, IFormatPainterService } from '@univerjs/sheets-ui';\n\nconst repeatByRange = (sourceRange: IRange, targetRange: IRange) => {\n    const getRowLength = (range: IRange) => range.endRow - range.startRow + 1;\n    const getColLength = (range: IRange) => range.endColumn - range.startColumn + 1;\n    const rowMod = getRowLength(targetRange) % getRowLength(sourceRange);\n    const colMod = getColLength(targetRange) % getColLength(sourceRange);\n    const repeatRow = Math.floor(getRowLength(targetRange) / getRowLength(sourceRange));\n    const repeatCol = Math.floor(getColLength(targetRange) / getColLength(sourceRange));\n    const repeatList: Array<{ startRange: IRange; repeatRelativeRange: IRange }> = [];\n    const repeatRelativeRange: IRange = {\n        startRow: 0,\n        endRow: getRowLength(sourceRange) - 1,\n        startColumn: 0,\n        endColumn: getColLength(sourceRange) - 1,\n    };\n    // If the target area is a single cell, copy the entire source area.\n    if (getRowLength(targetRange) === 1 && getColLength(targetRange) === 1) {\n        const startRange: IRange = {\n            startRow: targetRange.startRow,\n            endRow: targetRange.startRow,\n            startColumn: targetRange.startColumn,\n            endColumn: targetRange.startColumn,\n        };\n        repeatList.push({ repeatRelativeRange, startRange });\n        return repeatList;\n    }\n\n    for (let countRow = 0; countRow < (repeatRow + (rowMod ? 0.1 : 0)); countRow++) {\n        for (let countCol = 0; countCol < (repeatCol + (colMod ? 0.1 : 0)); countCol++) {\n            const row = getRowLength(sourceRange) * (countRow);\n            const col = getColLength(sourceRange) * (countCol);\n            const startRange: IRange = {\n                startRow: row + targetRange.startRow,\n                endRow: row + targetRange.startRow,\n                startColumn: col + targetRange.startColumn,\n                endColumn: col + targetRange.startColumn,\n            };\n            let _repeatRelativeRange = repeatRelativeRange;\n            if (countRow === repeatRow && rowMod) {\n                _repeatRelativeRange = { ..._repeatRelativeRange };\n                _repeatRelativeRange.endRow = _repeatRelativeRange.endRow - (getRowLength(sourceRange) - rowMod);\n            }\n            if (countCol === repeatCol && colMod) {\n                _repeatRelativeRange = { ..._repeatRelativeRange };\n                _repeatRelativeRange.endColumn = _repeatRelativeRange.endColumn - (getColLength(sourceRange) - colMod);\n            }\n            repeatList.push({ repeatRelativeRange: _repeatRelativeRange, startRange });\n        }\n    }\n    return repeatList;\n};\n\nexport class ConditionalFormattingPainterController extends Disposable {\n    private _painterConfig: Nullable<{ unitId: string; subUnitId: string; range: IRange }> = null;\n    constructor(\n        @Inject(Injector) private _injector: Injector,\n        @Inject(IUniverInstanceService) private _univerInstanceService: IUniverInstanceService,\n        @Inject(IFormatPainterService) private _formatPainterService: IFormatPainterService,\n        @Inject(SheetsSelectionsService) private _sheetsSelectionsService: SheetsSelectionsService,\n        @Inject(ConditionalFormattingRuleModel) private _conditionalFormattingRuleModel: ConditionalFormattingRuleModel,\n\n        @Inject(ConditionalFormattingViewModel) private _conditionalFormattingViewModel: ConditionalFormattingViewModel\n\n    ) {\n        super();\n\n        this._initFormattingPainter();\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    private _initFormattingPainter() {\n        const noopReturnFunc = () => ({ redos: [], undos: [] });\n        // eslint-disable-next-line max-lines-per-function\n        const loopFunc = (\n            sourceStartCell: { row: number; col: number },\n            targetStartCell: { row: number; col: number },\n            relativeRange: IRange,\n            matrixMap: Map<string, ObjectMatrix<1>>,\n            config: {\n                targetUnitId: string;\n                targetSubUnitId: string;\n            }\n        ) => {\n            const { unitId: sourceUnitId, subUnitId: sourceSubUnitId } = this._painterConfig!;\n            const { targetUnitId, targetSubUnitId } = config;\n\n            const sourceRange = {\n                startRow: sourceStartCell.row,\n                startColumn: sourceStartCell.col,\n                endColumn: sourceStartCell.col,\n                endRow: sourceStartCell.row,\n            };\n            const targetRange = {\n                startRow: targetStartCell.row,\n                startColumn: targetStartCell.col,\n                endColumn: targetStartCell.col,\n                endRow: targetStartCell.row,\n            };\n\n            Range.foreach(relativeRange, (row, col) => {\n                const sourcePositionRange = Rectangle.getPositionRange(\n                    {\n                        startRow: row,\n                        startColumn: col,\n                        endColumn: col,\n                        endRow: row,\n                    },\n                    sourceRange\n                );\n                const targetPositionRange = Rectangle.getPositionRange(\n                    {\n                        startRow: row,\n                        startColumn: col,\n                        endColumn: col,\n                        endRow: row,\n                    },\n                    targetRange\n                );\n\n                const sourceCellCf = this._conditionalFormattingViewModel.getCellCfs(\n                    sourceUnitId,\n                    sourceSubUnitId,\n                    sourcePositionRange.startRow,\n                    sourcePositionRange.startColumn\n                );\n\n                const targetCellCf = this._conditionalFormattingViewModel.getCellCfs(\n                    targetUnitId,\n                    targetSubUnitId,\n                    targetPositionRange.startRow,\n                    targetPositionRange.startColumn\n                );\n\n                if (targetCellCf) {\n                    targetCellCf.forEach((cf) => {\n                        let matrix = matrixMap.get(cf.cfId);\n                        if (!matrixMap.get(cf.cfId)) {\n                            const rule = this._conditionalFormattingRuleModel.getRule(targetUnitId, targetSubUnitId, cf.cfId);\n                            if (!rule) {\n                                return;\n                            }\n                            matrix = new ObjectMatrix();\n                            rule.ranges.forEach((range) => {\n                                Range.foreach(range, (row, col) => {\n                                    matrix!.setValue(row, col, 1);\n                                });\n                            });\n                            matrixMap.set(cf.cfId, matrix);\n                        }\n                        matrix!.realDeleteValue(targetPositionRange.startRow, targetPositionRange.startColumn);\n                    });\n                }\n\n                if (sourceCellCf) {\n                    sourceCellCf.forEach((cf) => {\n                        const matrix = matrixMap.get(cf.cfId);\n                        matrix && matrix.setValue(targetPositionRange.startRow, targetPositionRange.startColumn, 1);\n                    });\n                }\n            });\n        };\n        // eslint-disable-next-line max-lines-per-function\n        const generalApplyFunc = (targetUnitId: string, targetSubUnitId: string, targetRange: IRange) => {\n            const { range: sourceRange, unitId: sourceUnitId, subUnitId: sourceSubUnitId } = this._painterConfig!;\n            const isSkipSheet = targetUnitId !== sourceUnitId || sourceSubUnitId !== targetSubUnitId;\n            const matrixMap: Map<string, ObjectMatrix<1>> = new Map();\n\n            const redos: IMutationInfo[] = [];\n            const undos: IMutationInfo[] = [];\n            if (!targetUnitId || !targetSubUnitId || !sourceUnitId || !sourceSubUnitId) {\n                return noopReturnFunc();\n            }\n            const ruleList = this._conditionalFormattingRuleModel.getSubunitRules(sourceUnitId, sourceSubUnitId) ?? [];\n            ruleList?.forEach((rule) => {\n                const { ranges, cfId } = rule;\n                if (ranges.some((range) => Rectangle.intersects(sourceRange, range))) {\n                    const matrix = new ObjectMatrix<1>();\n                    if (!isSkipSheet) {\n                        ranges.forEach((range) => {\n                            Range.foreach(range, (row, col) => {\n                                matrix.setValue(row, col, 1);\n                            });\n                        });\n                    }\n                    matrixMap.set(cfId, matrix);\n                }\n            });\n\n            const sourceStartCell = {\n                row: sourceRange.startRow,\n                col: sourceRange.startColumn,\n            };\n\n            const repeats = repeatByRange(sourceRange, targetRange);\n\n            repeats.forEach((repeat) => {\n                loopFunc(sourceStartCell, { row: repeat.startRange.startRow, col: repeat.startRange.startColumn }, repeat.repeatRelativeRange, matrixMap, { targetUnitId, targetSubUnitId });\n            });\n\n            matrixMap.forEach((item, cfId) => {\n                if (!isSkipSheet) {\n                    const rule = this._conditionalFormattingRuleModel.getRule(sourceUnitId, sourceSubUnitId, cfId);\n                    if (!rule) {\n                        return;\n                    }\n                    const ranges = findAllRectangle(createTopMatrixFromMatrix(item));\n                    if (ranges.length) {\n                        const params: ISetConditionalRuleMutationParams = {\n                            unitId: sourceUnitId,\n                            subUnitId: sourceSubUnitId,\n                            rule: { ...rule, ranges },\n                        };\n                        redos.push({ id: SetConditionalRuleMutation.id, params });\n                        undos.push(...setConditionalRuleMutationUndoFactory(this._injector, params));\n                    } else {\n                        const params: IDeleteConditionalRuleMutationParams = {\n                            unitId: sourceUnitId,\n                            subUnitId: sourceSubUnitId,\n                            cfId: rule.cfId,\n                        };\n                        redos.push({ id: DeleteConditionalRuleMutation.id, params });\n                        undos.push(...DeleteConditionalRuleMutationUndoFactory(this._injector, params));\n                    }\n                } else {\n                    const rule = this._conditionalFormattingRuleModel.getRule(targetUnitId, targetSubUnitId, cfId);\n                    const ranges = findAllRectangle(createTopMatrixFromMatrix(item));\n                    if (!rule) {\n                        if (ranges.length) {\n                            const sourceRule = this._conditionalFormattingRuleModel.getRule(sourceUnitId, sourceSubUnitId, cfId);\n                            if (sourceRule) {\n                                const params: IAddConditionalRuleMutationParams = {\n                                    unitId: targetUnitId,\n                                    subUnitId: targetSubUnitId,\n                                    rule: {\n                                        ...Tools.deepClone(sourceRule),\n                                        cfId: this._conditionalFormattingRuleModel.createCfId(targetUnitId, targetSubUnitId),\n                                        ranges,\n                                    },\n                                };\n                                redos.push({ id: AddConditionalRuleMutation.id, params });\n                                undos.push(AddConditionalRuleMutationUndoFactory(this._injector, params));\n                            }\n                        }\n                    } else {\n                        if (ranges.length) {\n                            const params: ISetConditionalRuleMutationParams = {\n                                unitId: targetUnitId,\n                                subUnitId: targetSubUnitId,\n                                rule: { ...rule, ranges },\n                            };\n                            redos.push({ id: SetConditionalRuleMutation.id, params });\n                            undos.push(...setConditionalRuleMutationUndoFactory(this._injector, params));\n                        } else {\n                            const params: IDeleteConditionalRuleMutationParams = {\n                                unitId: targetUnitId,\n                                subUnitId: targetSubUnitId,\n                                cfId: rule.cfId,\n                            };\n                            redos.push({ id: DeleteConditionalRuleMutation.id, params });\n                            undos.push(...DeleteConditionalRuleMutationUndoFactory(this._injector, params));\n                        }\n                    }\n                }\n            });\n            return {\n                undos,\n                redos,\n            };\n        };\n\n        const hook: IFormatPainterHook = {\n            id: SHEET_CONDITIONAL_FORMATTING_PLUGIN,\n            onStatusChange: (status) => {\n                switch (status) {\n                    case FormatPainterStatus.INFINITE:\n                    case FormatPainterStatus.ONCE: {\n                        const unitId = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)?.getUnitId();\n                        const subUnitId = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)?.getActiveSheet()?.getSheetId();\n                        const selection = this._sheetsSelectionsService.getCurrentLastSelection();\n                        const range = selection?.range;\n                        if (unitId && subUnitId && range) {\n                            this._painterConfig = { unitId, subUnitId, range };\n                        }\n                        break;\n                    }\n                    case FormatPainterStatus.OFF: {\n                        this._painterConfig = null;\n                        break;\n                    }\n                }\n            },\n            onApply: (unitId, subUnitId, targetRange) => {\n                if (this._painterConfig) {\n                    return generalApplyFunc(unitId, subUnitId, targetRange);\n                }\n                return {\n                    redos: [],\n                    undos: [],\n                };\n            },\n        };\n\n        this._formatPainterService.addHook(hook);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Workbook } from '@univerjs/core';\nimport { Disposable, Inject, IUniverInstanceService, UniverInstanceType } from '@univerjs/core';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { CONDITIONAL_FORMATTING_VIEWPORT_CACHE_LENGTH, ConditionalFormattingViewModel } from '@univerjs/sheets-conditional-formatting';\nimport { SheetSkeletonManagerService } from '@univerjs/sheets-ui';\n\nexport class ConditionalFormattingViewportController extends Disposable {\n    constructor(\n        @Inject(ConditionalFormattingViewModel) private _conditionalFormattingViewModel: ConditionalFormattingViewModel,\n        @IUniverInstanceService private _univerInstanceService: IUniverInstanceService,\n        @IRenderManagerService private _renderManagerService: IRenderManagerService\n    ) {\n        super();\n        this._init();\n    }\n\n    private _init() {\n        const unit = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n        const bindUnit = (unit: Workbook) => {\n            const unitId = unit.getUnitId();\n            const render = this._renderManagerService.getRenderById(unitId);\n            if (!render) {\n                return;\n            }\n            const sheetSkeletonManagerService = render.with(SheetSkeletonManagerService);\n            this.disposeWithMe(sheetSkeletonManagerService.currentSkeleton$.subscribe((s) => {\n                if (s) {\n                    const range = s.skeleton.rowColumnSegment;\n                    const col = range.endColumn - range.startColumn + 1;\n                    const row = range.endRow - range.startRow + 1;\n                    const length = row * col * 9;\n                    const result = Math.max(CONDITIONAL_FORMATTING_VIEWPORT_CACHE_LENGTH, length);\n                    this._conditionalFormattingViewModel.setCacheLength(result);\n                }\n            }));\n        };\n\n        if (unit) {\n            bindUnit(unit);\n        }\n        this._univerInstanceService.getCurrentTypeOfUnit$<Workbook>(UniverInstanceType.UNIVER_SHEET).subscribe((unit) => {\n            if (!unit) {\n                return;\n            }\n            bindUnit(unit);\n        });\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IUniverSheetsConditionalFormattingUIConfig } from './controllers/config.schema';\nimport {\n    DependentOn,\n    ICommandService,\n    IConfigService,\n    Inject,\n    Injector,\n    merge,\n    Plugin,\n    registerDependencies,\n    touchDependencies,\n    UniverInstanceType,\n} from '@univerjs/core';\nimport { SHEET_CONDITIONAL_FORMATTING_PLUGIN, UniverSheetsConditionalFormattingPlugin } from '@univerjs/sheets-conditional-formatting';\nimport { AddAverageCfCommand } from './commands/commands/add-average-cf.command';\nimport { AddColorScaleConditionalRuleCommand } from './commands/commands/add-color-scale-cf.command';\nimport { AddDataBarConditionalRuleCommand } from './commands/commands/add-data-bar-cf.command';\nimport { AddDuplicateValuesCfCommand } from './commands/commands/add-duplicate-values-cf.command';\nimport { AddNumberCfCommand } from './commands/commands/add-number-cf.command';\nimport { AddRankCfCommand } from './commands/commands/add-rank-cf.command';\nimport { AddTextCfCommand } from './commands/commands/add-text-cf.command';\nimport { AddTimePeriodCfCommand } from './commands/commands/add-time-period-cf.command';\nimport { AddUniqueValuesCfCommand } from './commands/commands/add-unique-values-cf.command';\n\nimport { OpenConditionalFormattingOperator } from './commands/operations/open-conditional-formatting-panel';\nimport { ConditionalFormattingAutoFillController } from './controllers/cf.auto-fill.controller';\nimport { ConditionalFormattingClearController } from './controllers/cf.clear.controller';\nimport { ConditionalFormattingCopyPasteController } from './controllers/cf.copy-paste.controller';\nimport { ConditionalFormattingEditorController } from './controllers/cf.editor.controller';\nimport { ConditionalFormattingI18nController } from './controllers/cf.i18n.controller';\nimport { ConditionalFormattingMenuController } from './controllers/cf.menu.controller';\nimport { ConditionalFormattingPainterController } from './controllers/cf.painter.controller';\nimport { ConditionalFormattingPanelController } from './controllers/cf.panel.controller';\nimport { ConditionalFormattingPermissionController } from './controllers/cf.permission.controller';\nimport { SheetsCfRefRangeController } from './controllers/cf.ref-range.controller';\nimport { SheetsCfRenderController } from './controllers/cf.render.controller';\nimport { ConditionalFormattingViewportController } from './controllers/cf.viewport.controller';\nimport { defaultPluginConfig, SHEETS_CONDITIONAL_FORMATTING_UI_PLUGIN_CONFIG_KEY } from './controllers/config.schema';\n\n@DependentOn(UniverSheetsConditionalFormattingPlugin)\nexport class UniverSheetsConditionalFormattingUIPlugin extends Plugin {\n    static override pluginName = `${SHEET_CONDITIONAL_FORMATTING_PLUGIN}_UI_PLUGIN`;\n    static override type = UniverInstanceType.UNIVER_SHEET;\n\n    constructor(\n        private readonly _config: Partial<IUniverSheetsConditionalFormattingUIConfig> = defaultPluginConfig,\n        @Inject(Injector) override readonly _injector: Injector,\n        @Inject(ICommandService) private _commandService: ICommandService,\n        @IConfigService private readonly _configService: IConfigService\n    ) {\n        super();\n\n        // Manage the plugin configuration.\n        const { menu, ...rest } = merge(\n            {},\n            defaultPluginConfig,\n            this._config\n        );\n        if (menu) {\n            this._configService.setConfig('menu', menu, { merge: true });\n        }\n        this._configService.setConfig(SHEETS_CONDITIONAL_FORMATTING_UI_PLUGIN_CONFIG_KEY, rest);\n\n        this._initCommand();\n    }\n\n    override onStarting(): void {\n        registerDependencies(this._injector, [\n            [SheetsCfRenderController],\n            [SheetsCfRefRangeController],\n            [ConditionalFormattingCopyPasteController],\n            [ConditionalFormattingAutoFillController],\n            [ConditionalFormattingPermissionController],\n            [ConditionalFormattingPanelController],\n            [ConditionalFormattingMenuController],\n            [ConditionalFormattingI18nController],\n            [ConditionalFormattingEditorController],\n            [ConditionalFormattingClearController],\n            [ConditionalFormattingPainterController],\n            [ConditionalFormattingViewportController],\n        ]);\n\n        touchDependencies(this._injector, [\n            [SheetsCfRenderController],\n        ]);\n    }\n\n    override onReady(): void {\n        touchDependencies(this._injector, [\n            [ConditionalFormattingMenuController],\n            [ConditionalFormattingPanelController],\n        ]);\n    }\n\n    override onRendered(): void {\n        touchDependencies(this._injector, [\n            [ConditionalFormattingAutoFillController],\n            [ConditionalFormattingClearController],\n            [ConditionalFormattingCopyPasteController],\n            [ConditionalFormattingEditorController],\n            [ConditionalFormattingI18nController],\n            [ConditionalFormattingPainterController],\n            [ConditionalFormattingPermissionController],\n            [SheetsCfRefRangeController],\n            [ConditionalFormattingViewportController],\n        ]);\n    }\n\n    private _initCommand() {\n        [\n            AddAverageCfCommand,\n            AddColorScaleConditionalRuleCommand,\n            AddDataBarConditionalRuleCommand,\n            AddDuplicateValuesCfCommand,\n            AddNumberCfCommand,\n            AddRankCfCommand,\n            AddTextCfCommand,\n            AddTimePeriodCfCommand,\n            AddUniqueValuesCfCommand,\n            OpenConditionalFormattingOperator,\n        ].forEach((m) => {\n            this._commandService.registerCommand(m);\n        });\n    }\n}\n"],
  "mappings": "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",
  "names": ["compactType", "collides", "containerPadding", "React", "e", "l", "React", "e", "React", "e", "node", "import_react", "import_react", "index_module_default", "index_module_default", "index_module_default", "import_jsx_runtime", "ruleList", "commandList", "unitId", "subUnitId", "workbook", "worksheet", "index_module_default", "GridLayout", "import_react", "import_react", "import_react", "index_module_default", "import_jsx_runtime", "ColorPicker", "index_module_default", "index_module_default", "import_jsx_runtime", "_a", "minType", "medianType", "maxType", "minValue", "medianValue", "maxValue", "minColor", "medianColor", "maxColor", "index_module_default", "ColorPicker", "import_react", "import_jsx_runtime", "createOptionItem", "_a", "v", "index_module_default", "ColorPicker", "import_react", "import_react", "index_module_default", "import_jsx_runtime", "index_module_default", "ColorPicker", "import_jsx_runtime", "_a", "formula", "index_module_default", "import_react", "import_jsx_runtime", "import_jsx_runtime", "createOptionItem", "value", "index_module_default", "_a", "import_react", "import_jsx_runtime", "TextInput", "index_module_default", "_a", "index_module_default", "index", "list", "TextInput", "import_react", "import_jsx_runtime", "type", "isPercent", "value", "style", "index_module_default", "import_jsx_runtime", "_a", "_b", "_c", "rangeString", "result", "ranges", "unitId", "subUnitId", "index_module_default", "import_jsx_runtime", "row", "col", "range", "matrix", "row", "col", "_a", "ranges", "item", "row", "col", "unit"]
}
