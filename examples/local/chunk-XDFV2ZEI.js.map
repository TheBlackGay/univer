{
  "version": 3,
  "sources": ["../../packages/sheets-hyper-link/src/controllers/config.schema.ts", "../../packages/sheets-hyper-link/src/models/hyper-link.model.ts", "../../packages/sheets-hyper-link/src/commands/mutations/add-hyper-link.mutation.ts", "../../packages/sheets-hyper-link/src/commands/mutations/remove-hyper-link.mutation.ts", "../../packages/sheets-hyper-link/src/commands/mutations/update-hyper-link.mutation.ts", "../../packages/sheets-hyper-link/src/types/const.ts", "../../packages/sheets-hyper-link/src/controllers/ref-range.controller.ts", "../../packages/sheets-hyper-link/src/controllers/remove-sheet.controller.ts", "../../packages/sheets-hyper-link/src/controllers/rich-text-ref-range.controller.ts", "../../packages/sheets-hyper-link/src/controllers/set-range.controller.ts", "../../packages/sheets-hyper-link/src/controllers/sheet-hyper-link-resource.controller.ts", "../../packages/sheets-hyper-link/src/commands/commands/add-hyper-link.command.ts", "../../packages/sheets-hyper-link/src/commands/commands/remove-hyper-link.command.ts", "../../packages/sheets-hyper-link/src/commands/commands/update-hyper-link.command.ts", "../../packages/sheets-hyper-link/src/controllers/sheet-hyper-link.controller.ts", "../../packages/sheets-hyper-link/src/services/parser.service.ts", "../../packages/sheets-hyper-link/src/plugin.ts", "../../packages/sheets-sort/src/controllers/config.schema.ts", "../../packages/sheets-sort/src/controllers/utils.ts", "../../packages/sheets-sort/src/services/sheets-sort.service.ts", "../../packages/sheets-sort/src/commands/commands/sheets-sort.command.ts", "../../packages/sheets-sort/src/controllers/sheets-sort.controller.ts", "../../packages/sheets-sort/src/plugin.ts", "../../packages/sheets-hyper-link-ui/src/types/const.ts", "../../packages/sheets-hyper-link-ui/src/controllers/auto-fill.controller.ts", "../../packages/sheets-hyper-link-ui/src/controllers/config.schema.ts", "../../packages/sheets-hyper-link-ui/src/common/util.ts", "../../packages/sheets-hyper-link-ui/src/services/resolver.service.ts", "../../packages/sheets-hyper-link-ui/src/controllers/copy-paste.controller.ts", "../../packages/sheets-hyper-link-ui/src/views/CellLinkEdit/index.tsx", "../../packages/sheets-hyper-link-ui/src/services/side-panel.service.ts", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-hyper-link-ui/src/views/CellLinkEdit/index.module.less", "../../packages/sheets-hyper-link-ui/src/views/CellLinkPopup/index.tsx", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-hyper-link-ui/src/views/CellLinkPopup/index.module.less", "../../packages/sheets-hyper-link-ui/src/services/popup.service.ts", "../../packages/sheets-hyper-link-ui/src/utils/index.ts", "../../packages/sheets-hyper-link-ui/src/commands/operations/popup.operations.ts", "../../packages/sheets-hyper-link-ui/src/controllers/menu.ts", "../../packages/sheets-hyper-link-ui/src/controllers/hyper-link-permission.controller.ts", "../../packages/sheets-hyper-link-ui/src/controllers/popup.controller.ts", "../../packages/sheets-hyper-link-ui/src/controllers/render-controllers/render.controller.ts", "../../packages/sheets-hyper-link-ui/src/controllers/menu.schema.ts", "../../packages/sheets-hyper-link-ui/src/controllers/ui.controller.ts", "../../packages/sheets-hyper-link-ui/src/controllers/url.controller.ts", "../../packages/sheets-hyper-link-ui/src/plugin.ts", "../../packages/find-replace/src/controllers/config.schema.ts", "../../packages/find-replace/src/services/context-keys.ts", "../../packages/find-replace/src/services/find-replace.service.ts", "../../packages/find-replace/src/commands/commands/replace.command.ts", "../../packages/find-replace/src/commands/operations/find-replace.operation.ts", "../../packages/find-replace/src/views/dialog/FindReplaceDialog.tsx", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/find-replace/src/views/dialog/FindReplaceDialog.module.less", "../../packages/find-replace/src/views/dialog/SearchInput.tsx", "../../packages/find-replace/src/controllers/find-replace.shortcut.ts", "../../packages/find-replace/src/controllers/find-replace.menu.ts", "../../packages/find-replace/src/controllers/menu.schema.ts", "../../packages/find-replace/src/controllers/find-replace.controller.ts", "../../packages/find-replace/src/plugin.ts"],
  "sourcesContent": ["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const SHEETS_HYPER_LINK_PLUGIN_CONFIG_KEY = 'sheets-hyper-link.config';\n\nexport const configSymbol = Symbol(SHEETS_HYPER_LINK_PLUGIN_CONFIG_KEY);\n\nexport interface IUniverSheetsHyperLinkConfig {\n}\n\nexport const defaultPluginConfig: IUniverSheetsHyperLinkConfig = {};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Workbook } from '@univerjs/core';\nimport type { ICellLinkContent, ISheetHyperLink } from '../types/interfaces/i-hyper-link';\nimport { Disposable, IUniverInstanceService, ObjectMatrix, UniverInstanceType } from '@univerjs/core';\nimport { Subject } from 'rxjs';\n\ntype LinkUpdate = {\n    type: 'add';\n    payload: ISheetHyperLink;\n    unitId: string;\n    subUnitId: string;\n    silent?: boolean;\n} | {\n    type: 'remove';\n    payload: ISheetHyperLink;\n    unitId: string;\n    subUnitId: string;\n    silent?: boolean;\n} | {\n    type: 'update';\n    unitId: string;\n    subUnitId: string;\n    payload: ICellLinkContent;\n    id: string;\n    silent?: boolean;\n} | {\n    type: 'updateRef';\n    unitId: string;\n    subUnitId: string;\n    id: string;\n    payload: { row: number; column: number };\n    silent?: boolean;\n} | {\n    type: 'unload';\n    unitId: string;\n    unitLinks: {\n        unitId: string;\n        subUnitId: string;\n        links: ISheetHyperLink[];\n    }[];\n    silent?: boolean;\n};\n\nexport class HyperLinkModel extends Disposable {\n    private _linkUpdate$ = new Subject<LinkUpdate>();\n    linkUpdate$ = this._linkUpdate$.asObservable();\n\n    private _linkMap: Map<string, Map<string, ObjectMatrix<ISheetHyperLink>>> = new Map();\n    private _linkPositionMap: Map<string, Map<string, Map<string, { row: number; column: number; link: ISheetHyperLink }>>> = new Map();\n\n    constructor(\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService\n    ) {\n        super();\n        this.disposeWithMe({\n            dispose: () => {\n                this._linkUpdate$.complete();\n            },\n        });\n    }\n\n    private _ensureMap(unitId: string, subUnitId: string) {\n        let unitMap = this._linkMap.get(unitId);\n\n        if (!unitMap) {\n            unitMap = new Map();\n            this._linkMap.set(unitId, unitMap);\n        }\n        let matrix = unitMap.get(subUnitId);\n        if (!matrix) {\n            matrix = new ObjectMatrix();\n            unitMap.set(subUnitId, matrix);\n        }\n\n        let positionUnitMap = this._linkPositionMap.get(unitId);\n        if (!positionUnitMap) {\n            positionUnitMap = new Map();\n            this._linkPositionMap.set(unitId, positionUnitMap);\n        }\n\n        let positionSubUnitMap = positionUnitMap.get(subUnitId);\n        if (!positionSubUnitMap) {\n            positionSubUnitMap = new Map();\n            positionUnitMap.set(subUnitId, positionSubUnitMap);\n        }\n        return {\n            matrix,\n            positionMap: positionSubUnitMap,\n        };\n    }\n\n    addHyperLink(unitId: string, subUnitId: string, link: ISheetHyperLink) {\n        const { matrix, positionMap } = this._ensureMap(unitId, subUnitId);\n        matrix.setValue(link.row, link.column, link);\n        positionMap.set(link.id, { row: link.row, column: link.column, link });\n        this._linkUpdate$.next({\n            unitId,\n            subUnitId,\n            payload: link,\n            type: 'add',\n        });\n        return true;\n    }\n\n    updateHyperLink(\n        unitId: string,\n        subUnitId: string,\n        id: string,\n        payload: Partial<ICellLinkContent>,\n        silent = false\n    ) {\n        const { matrix, positionMap } = this._ensureMap(unitId, subUnitId);\n        const position = positionMap.get(id);\n        if (!position) {\n            return true;\n        }\n\n        const link = matrix.getValue(position.row, position.column);\n        if (!link) {\n            return true;\n        }\n        Object.assign(link, payload);\n\n        this._linkUpdate$.next({\n            unitId,\n            subUnitId,\n            payload: {\n                display: link.display,\n                payload: link.payload,\n            },\n            id,\n            type: 'update',\n            silent,\n        });\n        return true;\n    }\n\n    updateHyperLinkRef(unitId: string, subUnitId: string, id: string, payload: { row: number; column: number }, silent = false) {\n        const { matrix, positionMap } = this._ensureMap(unitId, subUnitId);\n        const position = positionMap.get(id);\n        if (!position) {\n            return true;\n        }\n\n        let link = matrix.getValue(position.row, position.column);\n        if (!link || link.id !== id) {\n            link = position.link;\n        } else {\n            matrix.realDeleteValue(position.row, position.column);\n        }\n        Object.assign(link, payload);\n        positionMap.set(id, { ...payload, link });\n        matrix.setValue(payload.row, payload.column, link);\n        this._linkUpdate$.next({\n            unitId,\n            subUnitId,\n            payload,\n            id,\n            type: 'updateRef',\n            silent,\n        });\n        return true;\n    }\n\n    removeHyperLink(unitId: string, subUnitId: string, id: string) {\n        const { matrix, positionMap } = this._ensureMap(unitId, subUnitId);\n        const position = positionMap.get(id);\n        if (!position) {\n            return false;\n        }\n        positionMap.delete(id);\n        const link = matrix.getValue(position.row, position.column);\n        if (link && link.id === id) {\n            matrix.realDeleteValue(position.row, position.column);\n        }\n\n        this._linkUpdate$.next({\n            unitId,\n            subUnitId,\n            payload: position.link,\n            type: 'remove',\n        });\n\n        return true;\n    }\n\n    getHyperLink(unitId: string, subUnitId: string, id: string) {\n        const { matrix, positionMap } = this._ensureMap(unitId, subUnitId);\n        const position = positionMap.get(id);\n        if (!position) {\n            return undefined;\n        }\n        return matrix.getValue(position.row, position.column);\n    }\n\n    getHyperLinkByLocation(unitId: string, subUnitId: string, row: number, column: number): ISheetHyperLink | undefined {\n        const { matrix } = this._ensureMap(unitId, subUnitId);\n        return matrix.getValue(row, column)!;\n    }\n\n    getHyperLinkByLocationSync(unitId: string, subUnitId: string, row: number, column: number) {\n        const { matrix } = this._ensureMap(unitId, subUnitId);\n        const workbook = this._univerInstanceService.getUnit<Workbook>(unitId, UniverInstanceType.UNIVER_SHEET);\n        const cell = workbook?.getSheetBySheetId(subUnitId)?.getCellRaw(row, column);\n        const cellValueStr = (cell?.v ?? cell?.p?.body?.dataStream.slice(0, -2) ?? '').toString();\n        const link = matrix.getValue(row, column);\n\n        if (!link) {\n            return undefined;\n        }\n        return {\n            ...link,\n            display: cellValueStr,\n        };\n    }\n\n    getSubUnit(unitId: string, subUnitId: string) {\n        const { matrix } = this._ensureMap(unitId, subUnitId);\n\n        const links: ISheetHyperLink[] = [];\n        matrix.forValue((row, col, value) => {\n            if (value) {\n                links.push(value);\n            }\n        });\n\n        return links;\n    }\n\n    getUnit(unitId: string) {\n        const unitMap = this._linkMap.get(unitId);\n        if (!unitMap) {\n            return [];\n        }\n\n        return Array.from(unitMap.keys()).map((subUnitId) => {\n            const links = this.getSubUnit(unitId, subUnitId);\n            return {\n                unitId,\n                subUnitId,\n                links,\n            };\n        });\n    }\n\n    deleteUnit(unitId: string) {\n        const links = this.getUnit(unitId);\n        this._linkMap.delete(unitId);\n        this._linkPositionMap.delete(unitId);\n\n        this._linkUpdate$.next({\n            type: 'unload',\n            unitId,\n            unitLinks: links,\n        });\n    }\n\n    getAll() {\n        const unitIds = Array.from(this._linkMap.keys());\n        return unitIds.map((unitId) => this.getUnit(unitId));\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand } from '@univerjs/core';\nimport type { ISheetHyperLink } from '../../types/interfaces/i-hyper-link';\nimport { CommandType } from '@univerjs/core';\nimport { HyperLinkModel } from '../../models/hyper-link.model';\n\nexport interface IAddHyperLinkMutationParams {\n    unitId: string;\n    subUnitId: string;\n    link: ISheetHyperLink;\n}\n\nexport const AddHyperLinkMutation: ICommand<IAddHyperLinkMutationParams> = {\n    type: CommandType.MUTATION,\n    id: 'sheets.mutation.add-hyper-link',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const model = accessor.get(HyperLinkModel);\n        const { unitId, subUnitId, link } = params;\n        return model.addHyperLink(unitId, subUnitId, link);\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand } from '@univerjs/core';\nimport { CommandType } from '@univerjs/core';\nimport { HyperLinkModel } from '../../models/hyper-link.model';\n\nexport interface IRemoveHyperLinkMutationParams {\n    unitId: string;\n    subUnitId: string;\n    id: string;\n}\n\nexport const RemoveHyperLinkMutation: ICommand<IRemoveHyperLinkMutationParams> = {\n    type: CommandType.MUTATION,\n    id: 'sheets.mutation.remove-hyper-link',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n\n        const model = accessor.get(HyperLinkModel);\n        const { unitId, subUnitId, id } = params;\n        return model.removeHyperLink(unitId, subUnitId, id);\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand } from '@univerjs/core';\nimport type { ICellLinkContent } from '../../types/interfaces/i-hyper-link';\nimport { CommandType, CustomRangeType, IUniverInstanceService } from '@univerjs/core';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { HyperLinkModel } from '../../models/hyper-link.model';\n\nexport interface IUpdateHyperLinkMutationParams {\n    unitId: string;\n    subUnitId: string;\n    id: string;\n    payload: ICellLinkContent;\n}\n\nexport const UpdateHyperLinkMutation: ICommand<IUpdateHyperLinkMutationParams> = {\n    type: CommandType.MUTATION,\n    id: 'sheets.mutation.update-hyper-link',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n\n        const model = accessor.get(HyperLinkModel);\n        const { unitId, subUnitId, payload, id } = params;\n        return model.updateHyperLink(unitId, subUnitId, id, payload, false);\n    },\n};\n\nexport interface IUpdateHyperLinkRefMutationParams {\n    unitId: string;\n    subUnitId: string;\n    id: string;\n    row: number;\n    column: number;\n    silent?: boolean;\n}\n\nexport const UpdateHyperLinkRefMutation: ICommand<IUpdateHyperLinkRefMutationParams> = {\n    type: CommandType.MUTATION,\n    id: 'sheets.mutation.update-hyper-link-ref',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n\n        const model = accessor.get(HyperLinkModel);\n        const { unitId, subUnitId, id, row, column, silent } = params;\n        return model.updateHyperLinkRef(unitId, subUnitId, id, { row, column }, silent);\n    },\n};\n\nexport interface IUpdateRichHyperLinkMutationParams {\n    unitId: string;\n    subUnitId: string;\n    row: number;\n    col: number;\n    id: string;\n    url: string;\n}\n\nexport const UpdateRichHyperLinkMutation: ICommand<IUpdateRichHyperLinkMutationParams> = {\n    type: CommandType.MUTATION,\n    id: 'sheets.mutation.update-rich-hyper-link',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n\n        const { unitId, subUnitId, row, col, id, url } = params;\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n        const sheetTarget = getSheetCommandTarget(univerInstanceService, { unitId, subUnitId });\n        if (!sheetTarget) {\n            return false;\n        }\n        const { worksheet } = sheetTarget;\n        const cell = worksheet.getCellRaw(row, col);\n\n        const link = cell?.p?.body?.customRanges?.find((range) => range.rangeType === CustomRangeType.HYPERLINK && range.rangeId === id);\n        if (!link) {\n            return true;\n        }\n\n        link.properties!.url = url;\n        return true;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const SHEET_HYPER_LINK_PLUGIN = 'SHEET_HYPER_LINK_PLUGIN';\nexport const ERROR_RANGE = 'err';\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IDisposable, IRange, Nullable } from '@univerjs/core';\nimport type { EffectRefRangeParams } from '@univerjs/sheets';\nimport type { IAddHyperLinkMutationParams } from '../commands/mutations/add-hyper-link.mutation';\nimport type { IRemoveHyperLinkMutationParams } from '../commands/mutations/remove-hyper-link.mutation';\nimport type { IUpdateHyperLinkMutationParams, IUpdateHyperLinkRefMutationParams } from '../commands/mutations/update-hyper-link.mutation';\nimport type { ISheetHyperLink } from '../types/interfaces/i-hyper-link';\nimport { Disposable, ICommandService, Inject, isValidRange, sequenceExecuteAsync, toDisposable } from '@univerjs/core';\nimport { deserializeRangeWithSheet, serializeRange } from '@univerjs/engine-formula';\nimport { handleCommonRangeChangeWithEffectRefCommandsSkipNoInterests, handleDefaultRangeChangeWithEffectRefCommandsSkipNoInterests, RefRangeService, SheetsSelectionsService } from '@univerjs/sheets';\nimport { AddHyperLinkMutation } from '../commands/mutations/add-hyper-link.mutation';\nimport { RemoveHyperLinkMutation } from '../commands/mutations/remove-hyper-link.mutation';\nimport { UpdateHyperLinkMutation, UpdateHyperLinkRefMutation } from '../commands/mutations/update-hyper-link.mutation';\nimport { HyperLinkModel } from '../models/hyper-link.model';\nimport { ERROR_RANGE } from '../types/const';\n\nexport class SheetsHyperLinkRefRangeController extends Disposable {\n    private _disposableMap = new Map<string, IDisposable>();\n    private _watchDisposableMap = new Map<string, IDisposable>();\n    private _rangeDisableMap = new Map<string, IDisposable>();\n    private _rangeWatcherMap = new Map<string, IDisposable>();\n\n    constructor(\n        @Inject(RefRangeService) private readonly _refRangeService: RefRangeService,\n        @Inject(HyperLinkModel) private readonly _hyperLinkModel: HyperLinkModel,\n        @Inject(SheetsSelectionsService) private readonly _selectionManagerService: SheetsSelectionsService,\n        @ICommandService private readonly _commandService: ICommandService\n    ) {\n        super();\n        this._initData();\n        this._initRefRange();\n    }\n\n    private _handlePositionChange = (unitId: string, subUnitId: string, link: ISheetHyperLink, resultRange: Nullable<IRange>, silent: boolean) => {\n        const oldRange: IRange = {\n            startColumn: link.column,\n            endColumn: link.column,\n            startRow: link.row,\n            endRow: link.row,\n        };\n\n        if (!resultRange) {\n            return {\n                redos: [{\n                    id: RemoveHyperLinkMutation.id,\n                    params: {\n                        unitId,\n                        subUnitId,\n                        id: link.id,\n                    } as IRemoveHyperLinkMutationParams,\n                }],\n                undos: [{\n                    id: AddHyperLinkMutation.id,\n                    params: {\n                        unitId,\n                        subUnitId,\n                        link,\n                    } as IAddHyperLinkMutationParams,\n                }],\n            };\n        }\n        return {\n            redos: [{\n                id: UpdateHyperLinkRefMutation.id,\n                params: {\n                    unitId,\n                    subUnitId,\n                    id: link.id,\n                    row: resultRange.startRow,\n                    column: resultRange.startColumn,\n                    silent,\n                } as IUpdateHyperLinkRefMutationParams,\n            }],\n            undos: [{\n                id: UpdateHyperLinkRefMutation.id,\n                params: {\n                    unitId,\n                    subUnitId,\n                    id: link.id,\n                    row: oldRange.startRow,\n                    column: oldRange.startColumn,\n                    silent,\n                } as IUpdateHyperLinkRefMutationParams,\n            }],\n        };\n    };\n\n    private _registerPosition(unitId: string, subUnitId: string, link: ISheetHyperLink) {\n        const id = link.id;\n        const oldRange: IRange = {\n            startColumn: link.column,\n            endColumn: link.column,\n            startRow: link.row,\n            endRow: link.row,\n        };\n\n        const handleRefRangeChange = (commandInfo: EffectRefRangeParams) => {\n            const resultRanges = handleCommonRangeChangeWithEffectRefCommandsSkipNoInterests(oldRange, commandInfo, { selectionManagerService: this._selectionManagerService });\n            const resultRange = Array.isArray(resultRanges) ? resultRanges[0] : resultRanges;\n            if (resultRange && resultRange.startColumn === oldRange.startColumn && resultRange.startRow === oldRange.startRow) {\n                return {\n                    undos: [],\n                    redos: [],\n                };\n            }\n\n            const res = this._handlePositionChange(unitId, subUnitId, link, resultRange, false);\n            return res;\n        };\n        this._disposableMap.set(id, this._refRangeService.registerRefRange(oldRange, handleRefRangeChange, unitId, subUnitId));\n    }\n\n    private _watchPosition(unitId: string, subUnitId: string, link: ISheetHyperLink) {\n        const id = link.id;\n        const oldRange: IRange = {\n            startColumn: link.column,\n            endColumn: link.column,\n            startRow: link.row,\n            endRow: link.row,\n        };\n        this._watchDisposableMap.set(id, this._refRangeService.watchRange(unitId, subUnitId, oldRange, (before, after) => {\n            const { redos } = this._handlePositionChange(unitId, subUnitId, link, after, true);\n            sequenceExecuteAsync(redos, this._commandService, { onlyLocal: true });\n        }, true));\n    }\n\n    private _unregisterPosition(id: string) {\n        const disposable = this._disposableMap.get(id);\n        disposable?.dispose();\n        this._disposableMap.delete(id);\n    }\n\n    private _unwatchPosition(id: string) {\n        const disposable = this._watchDisposableMap.get(id);\n        disposable?.dispose();\n        this._watchDisposableMap.delete(id);\n    }\n\n    private _registerRange(unitId: string, id: string, payload: string, silent = false) {\n        if (payload.startsWith('#')) {\n            const search = new URLSearchParams(payload.slice(1));\n            // range, gid, rangeid\n            const searchObj = {\n                gid: search.get('gid') ?? '',\n                range: search.get('range') ?? '',\n                rangeid: search.get('rangeid') ?? '',\n            };\n\n            if (searchObj.range && searchObj.gid) {\n                const subUnitId = searchObj.gid;\n                const range = deserializeRangeWithSheet(searchObj.range).range;\n\n                if (isValidRange(range) && searchObj.range !== ERROR_RANGE) {\n                    const handleRangeChange = (commandInfo: EffectRefRangeParams) => {\n                        const resultRange = handleDefaultRangeChangeWithEffectRefCommandsSkipNoInterests(range, commandInfo, { selectionManagerService: this._selectionManagerService });\n                        if (resultRange && serializeRange(resultRange) === serializeRange(range)) {\n                            return {\n                                redos: [],\n                                undos: [],\n                            };\n                        }\n\n                        return {\n                            redos: [{\n                                id: UpdateHyperLinkMutation.id,\n                                params: {\n                                    unitId,\n                                    subUnitId,\n                                    id,\n                                    payload: {\n                                        payload: `#gid=${subUnitId}&range=${resultRange ? serializeRange(resultRange) : 'err'}`,\n                                    },\n                                } as IUpdateHyperLinkMutationParams,\n                            }],\n                            undos: [{\n                                id: UpdateHyperLinkMutation.id,\n                                params: {\n                                    unitId,\n                                    subUnitId,\n                                    id,\n                                    payload: {\n                                        payload,\n                                    },\n                                } as IUpdateHyperLinkMutationParams,\n                            }],\n                        };\n                    };\n                    this._rangeDisableMap.set(id, this._refRangeService.registerRefRange(range, handleRangeChange, unitId, subUnitId));\n\n                    if (!silent) {\n                        this._rangeWatcherMap.set(id, this._refRangeService.watchRange(unitId, subUnitId, range, (before, after) => {\n                            this._hyperLinkModel.updateHyperLink(unitId, subUnitId, id, {\n                                payload: `#gid=${subUnitId}&range=${after ? serializeRange(after) : 'err'}`,\n                            }, true);\n                        }, true));\n                    }\n                }\n            }\n        }\n    }\n\n    private _unregisterRange(id: string) {\n        const disposable = this._rangeDisableMap.get(id);\n        disposable?.dispose();\n        this._rangeDisableMap.delete(id);\n    }\n\n    private _unwatchRange(id: string) {\n        const disposable = this._rangeWatcherMap.get(id);\n        disposable?.dispose();\n        this._rangeWatcherMap.delete(id);\n    }\n\n    private _initData() {\n        const data = this._hyperLinkModel.getAll();\n\n        data.forEach((unitData) => {\n            unitData.forEach((subUnitData) => {\n                const { unitId, subUnitId, links } = subUnitData;\n\n                links.forEach((link) => {\n                    this._registerPosition(unitId, subUnitId, link);\n                    this._watchPosition(unitId, subUnitId, link);\n                    this._registerRange(unitId, link.id, link.payload);\n                });\n            });\n        });\n    }\n\n    private _initRefRange() {\n        this.disposeWithMe(\n            this._hyperLinkModel.linkUpdate$.subscribe((option) => {\n                switch (option.type) {\n                    case 'add': {\n                        this._registerPosition(option.unitId, option.subUnitId, option.payload);\n                        this._watchPosition(option.unitId, option.subUnitId, option.payload);\n                        this._registerRange(option.unitId, option.payload.id, option.payload.payload);\n                        break;\n                    }\n                    case 'remove': {\n                        this._unregisterPosition(option.payload.id);\n                        this._unwatchPosition(option.payload.id);\n                        this._unregisterRange(option.payload.id);\n                        this._unwatchRange(option.payload.id);\n                        break;\n                    }\n                    case 'updateRef': {\n                        const { unitId, subUnitId, id, silent } = option;\n                        const link = this._hyperLinkModel.getHyperLink(unitId, subUnitId, id);\n                        if (!link) {\n                            return;\n                        }\n                        this._unregisterPosition(id);\n                        this._registerPosition(unitId, subUnitId, link);\n                        if (!silent) {\n                            this._unwatchPosition(id);\n                            this._watchPosition(unitId, subUnitId, link);\n                        }\n                        break;\n                    }\n                    case 'unload': {\n                        const { unitLinks } = option;\n                        unitLinks.forEach((subUnitData) => {\n                            const { links } = subUnitData;\n                            links.forEach((link) => {\n                                this._unregisterPosition(link.id);\n                                this._unwatchPosition(link.id);\n                                this._unregisterRange(link.id);\n                                this._unwatchRange(link.id);\n                            });\n                        });\n                        break;\n                    }\n                    case 'update': {\n                        if (!option.silent) {\n                            this._unwatchRange(option.id);\n                        }\n                        this._unregisterRange(option.id);\n                        this._registerRange(option.unitId, option.id, option.payload.payload, option.silent);\n                        break;\n                    }\n                }\n            })\n        );\n\n        this.disposeWithMe(toDisposable(() => {\n            this._disposableMap.forEach((item) => {\n                item.dispose();\n            });\n            this._disposableMap.clear();\n        }));\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Workbook } from '@univerjs/core';\nimport type { IRemoveSheetCommandParams } from '@univerjs/sheets';\nimport { Disposable, Inject, IUniverInstanceService, UniverInstanceType } from '@univerjs/core';\nimport { RemoveSheetCommand, SheetInterceptorService } from '@univerjs/sheets';\nimport { AddHyperLinkMutation } from '../commands/mutations/add-hyper-link.mutation';\nimport { RemoveHyperLinkMutation } from '../commands/mutations/remove-hyper-link.mutation';\nimport { HyperLinkModel } from '../models/hyper-link.model';\n\nexport class SheetsHyperLinkRemoveSheetController extends Disposable {\n    constructor(\n        @Inject(SheetInterceptorService) private _sheetInterceptorService: SheetInterceptorService,\n        @IUniverInstanceService private _univerInstanceService: IUniverInstanceService,\n        @Inject(HyperLinkModel) private _hyperLinkModel: HyperLinkModel\n    ) {\n        super();\n        this._initSheetChange();\n    }\n\n    private _initSheetChange() {\n        this.disposeWithMe(\n            this._sheetInterceptorService.interceptCommand({\n                getMutations: (commandInfo) => {\n                    if (commandInfo.id === RemoveSheetCommand.id) {\n                        const params = commandInfo.params as IRemoveSheetCommandParams;\n                        const workbook = params.unitId ? this._univerInstanceService.getUnit<Workbook>(params.unitId) : this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n                        if (!workbook) {\n                            return { redos: [], undos: [] };\n                        }\n                        const unitId = workbook.getUnitId();\n                        const subUnitId = params.subUnitId || workbook.getActiveSheet()?.getSheetId();\n                        if (!subUnitId) {\n                            return { redos: [], undos: [] };\n                        }\n                        const links = this._hyperLinkModel.getSubUnit(unitId, subUnitId);\n\n                        const redos = links.map((link) => ({\n                            id: RemoveHyperLinkMutation.id,\n                            params: {\n                                unitId,\n                                subUnitId,\n                                id: link.id,\n                            },\n                        }));\n\n                        const undos = links.map((link) => ({\n                            id: AddHyperLinkMutation.id,\n                            params: {\n                                unitId,\n                                subUnitId,\n                                link,\n                            },\n                        }));\n                        return { redos, undos };\n                    }\n                    return { redos: [], undos: [] };\n                },\n            })\n        );\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IDisposable, IDocumentData, Workbook } from '@univerjs/core';\nimport type { ISetRangeValuesMutationParams } from '@univerjs/sheets';\nimport type { IUpdateRichHyperLinkMutationParams } from '../commands/mutations/update-hyper-link.mutation';\nimport { CustomRangeType, Disposable, DisposableCollection, ICommandService, Inject, isValidRange, IUniverInstanceService, ObjectMatrix, Rectangle, UniverInstanceType } from '@univerjs/core';\nimport { deserializeRangeWithSheet, serializeRange } from '@univerjs/engine-formula';\nimport { getSheetCommandTarget, handleDefaultRangeChangeWithEffectRefCommands, RefRangeService, SetRangeValuesMutation } from '@univerjs/sheets';\nimport { UpdateRichHyperLinkMutation } from '../commands/mutations/update-hyper-link.mutation';\nimport { ERROR_RANGE } from '../types/const';\n\nexport class SheetsHyperLinkRichTextRefRangeController extends Disposable {\n    private _refRangeMap: Map<string, Map<string, ObjectMatrix<IDisposable>>> = new Map();\n    constructor(\n        @ICommandService private readonly _commandService: ICommandService,\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @Inject(RefRangeService) private readonly _refRangeService: RefRangeService\n    ) {\n        super();\n        this._initWorkbookLoad();\n        this._initWorkbookUnload();\n        this._initSetRangesListener();\n    }\n\n    private _enusreMap(unitId: string, subUnitId: string) {\n        let unitMap = this._refRangeMap.get(unitId);\n        if (!unitMap) {\n            unitMap = new Map();\n            this._refRangeMap.set(unitId, unitMap);\n        }\n        let subUnitMap = unitMap.get(subUnitId);\n        if (!subUnitMap) {\n            subUnitMap = new ObjectMatrix();\n            unitMap.set(subUnitId, subUnitMap);\n        }\n        return subUnitMap;\n    }\n\n    private _isLegalRangeUrl(unitId: string, payload: string) {\n        const workbook = this._univerInstanceService.getUnit<Workbook>(unitId, UniverInstanceType.UNIVER_SHEET);\n        if (!workbook) {\n            return null;\n        }\n        if (payload && payload.startsWith('#')) {\n            const search = new URLSearchParams(payload.slice(1));\n\n            // range, gid, rangeid\n            const searchObj = {\n                gid: search.get('gid') ?? '',\n                range: search.get('range') ?? '',\n                rangeid: search.get('rangeid') ?? '',\n            };\n\n            if (searchObj.range && searchObj.gid) {\n                const subUnitId = searchObj.gid;\n                const worksheet = workbook.getSheetBySheetId(subUnitId);\n                if (!worksheet) {\n                    return null;\n                }\n                const range = deserializeRangeWithSheet(searchObj.range).range;\n                if (isValidRange(range, worksheet) && searchObj.range !== ERROR_RANGE) {\n                    return {\n                        range,\n                        worksheet,\n                    };\n                }\n            }\n        }\n\n        return null;\n    }\n\n    private _registerRange(unitId: string, subUnitId: string, row: number, col: number, p: IDocumentData) {\n        const map = this._enusreMap(unitId, subUnitId);\n\n        if (p.body?.customRanges?.some((customRange) => customRange.rangeType === CustomRangeType.HYPERLINK && this._isLegalRangeUrl(unitId, customRange.properties?.url))) {\n            const disposableCollection = new DisposableCollection();\n            let hasWatch = false;\n            p.body?.customRanges?.forEach((customRange) => {\n                if (customRange.rangeType === CustomRangeType.HYPERLINK) {\n                    const payload = customRange.properties?.url;\n                    const rangeInfo = this._isLegalRangeUrl(unitId, payload);\n\n                    if (rangeInfo) {\n                        const { range, worksheet } = rangeInfo;\n                        hasWatch = true;\n                        disposableCollection.add(\n                            this._refRangeService.registerRefRange(\n                                range,\n                                (commandInfo) => {\n                                    const newRange = handleDefaultRangeChangeWithEffectRefCommands(range, commandInfo);\n                                    if (newRange && Rectangle.equals(newRange, range)) {\n                                        return {\n                                            preRedos: [],\n                                            preUndos: [],\n                                            redos: [],\n                                            undos: [],\n                                        };\n                                    }\n                                    return {\n                                        preRedos: [{\n                                            id: UpdateRichHyperLinkMutation.id,\n                                            params: {\n                                                unitId,\n                                                subUnitId,\n                                                row,\n                                                col,\n                                                id: customRange.rangeId,\n                                                url: `#gid=${subUnitId}&range=${newRange ? serializeRange(newRange) : ERROR_RANGE}`,\n                                            },\n                                        }],\n                                        undos: [{\n                                            id: UpdateRichHyperLinkMutation.id,\n                                            params: {\n                                                unitId,\n                                                subUnitId,\n                                                row,\n                                                col,\n                                                id: customRange.rangeId,\n                                                url: payload,\n                                            },\n                                        }],\n                                        redos: [],\n                                    };\n                                },\n                                worksheet.getUnitId(),\n                                worksheet.getSheetId()\n                            )\n                        );\n                    }\n                }\n            });\n\n            if (hasWatch) {\n                map.setValue(row, col, disposableCollection);\n            }\n        }\n    }\n\n    private _initWorkbookLoad() {\n        const handleWorkbook = (workbook: Workbook) => {\n            const unitId = workbook.getUnitId();\n            workbook.getSheets().forEach((sheet) => {\n                const subUnitId = sheet.getSheetId();\n                const map = this._enusreMap(unitId, subUnitId);\n                sheet.getCellMatrix().forValue((row, col, cell) => {\n                    const dispose = map.getValue(row, col);\n                    if (dispose) {\n                        dispose.dispose();\n                    }\n\n                    if (cell && cell.p) {\n                        this._registerRange(unitId, subUnitId, row, col, cell.p);\n                    }\n                });\n            });\n        };\n\n        this._univerInstanceService.getAllUnitsForType<Workbook>(UniverInstanceType.UNIVER_SHEET).forEach((workbook) => {\n            handleWorkbook(workbook);\n        });\n        this.disposeWithMe(\n            this._univerInstanceService.unitAdded$.subscribe((unit) => {\n                if (unit.type === UniverInstanceType.UNIVER_SHEET) {\n                    const workbook = unit as Workbook;\n                    handleWorkbook(workbook);\n                }\n            })\n        );\n    }\n\n    private _initWorkbookUnload() {\n        this._univerInstanceService.unitDisposed$.subscribe((unit) => {\n            if (unit.type === UniverInstanceType.UNIVER_SHEET) {\n                const workbook = unit as Workbook;\n                const unitId = workbook.getUnitId();\n                workbook.getSheets().forEach((sheet) => {\n                    const subUnitId = sheet.getSheetId();\n                    const map = this._enusreMap(unitId, subUnitId);\n                    map.forValue((row, col, dispose) => {\n                        if (dispose) {\n                            dispose.dispose();\n                        }\n                    });\n                });\n                this._refRangeMap.delete(unitId);\n            }\n        });\n    }\n\n    private _initSetRangesListener() {\n        this.disposeWithMe(\n            this._commandService.onCommandExecuted((commandInfo) => {\n                if (commandInfo.id === SetRangeValuesMutation.id) {\n                    const params = commandInfo.params as ISetRangeValuesMutationParams;\n                    const { unitId, subUnitId, cellValue } = params;\n                    const map = this._enusreMap(unitId, subUnitId);\n                    if (cellValue) {\n                        new ObjectMatrix(cellValue).forValue((row, col, cell) => {\n                            const dispose = map.getValue(row, col);\n                            if (dispose) {\n                                dispose.dispose();\n                            }\n                            if (cell && cell.p) {\n                                this._registerRange(unitId, subUnitId, row, col, cell.p);\n                            }\n                        });\n                    }\n                }\n            })\n        );\n\n        this.disposeWithMe(\n            this._commandService.onCommandExecuted((commandInfo) => {\n                if (commandInfo.id === UpdateRichHyperLinkMutation.id) {\n                    const params = commandInfo.params as IUpdateRichHyperLinkMutationParams;\n                    const { unitId, subUnitId, row, col } = params;\n                    const sheetTarget = getSheetCommandTarget(this._univerInstanceService, { unitId, subUnitId });\n                    const map = this._enusreMap(unitId, subUnitId);\n                    const dispose = map.getValue(row, col);\n                    if (dispose) {\n                        dispose.dispose();\n                    }\n                    if (sheetTarget) {\n                        const { worksheet } = sheetTarget;\n                        const cell = worksheet.getCellRaw(row, col);\n                        if (cell && cell.p) {\n                            this._registerRange(unitId, subUnitId, row, col, cell.p);\n                        }\n                    }\n                }\n            })\n        );\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IMutationInfo, Workbook } from '@univerjs/core';\nimport type { ISetRangeValuesMutationParams } from '@univerjs/sheets';\nimport { BuildTextUtils, CustomRangeType, Disposable, DOCS_NORMAL_EDITOR_UNIT_ID_KEY, generateRandomId, Inject, IUniverInstanceService, ObjectMatrix, Range, TextX, Tools, UniverInstanceType } from '@univerjs/core';\nimport { AFTER_CELL_EDIT, ClearSelectionAllCommand, ClearSelectionContentCommand, ClearSelectionFormatCommand, getSheetCommandTarget, SetRangeValuesCommand, SheetInterceptorService, SheetsSelectionsService } from '@univerjs/sheets';\nimport { AddHyperLinkMutation } from '../commands/mutations/add-hyper-link.mutation';\nimport { RemoveHyperLinkMutation } from '../commands/mutations/remove-hyper-link.mutation';\nimport { HyperLinkModel } from '../models/hyper-link.model';\n\nexport class SheetHyperLinkSetRangeController extends Disposable {\n    constructor(\n        @Inject(SheetInterceptorService) private readonly _sheetInterceptorService: SheetInterceptorService,\n        @Inject(HyperLinkModel) private readonly _hyperLinkModel: HyperLinkModel,\n        @Inject(SheetsSelectionsService) private readonly _selectionManagerService: SheetsSelectionsService,\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService\n    ) {\n        super();\n\n        this._initCommandInterceptor();\n        this._initAfterEditor();\n    }\n\n    private _initCommandInterceptor() {\n        this._initSetRangeValuesCommandInterceptor();\n        this._initClearSelectionCommandInterceptor();\n    }\n\n    private _initSetRangeValuesCommandInterceptor() {\n        this.disposeWithMe(this._sheetInterceptorService.interceptCommand({\n            getMutations: (command) => {\n                if (command.id === SetRangeValuesCommand.id) {\n                    const params = command.params as ISetRangeValuesMutationParams;\n                    const { unitId, subUnitId } = params;\n                    const redos: IMutationInfo[] = [];\n                    const undos: IMutationInfo[] = [];\n                    if (params.cellValue) {\n                        new ObjectMatrix(params.cellValue).forValue((row, col) => {\n                            const link = this._hyperLinkModel.getHyperLinkByLocation(unitId, subUnitId, row, col);\n                            if (link) {\n                                // rich-text can store link in custom-range, don't save to link model\n                                redos.push({\n                                    id: RemoveHyperLinkMutation.id,\n                                    params: {\n                                        unitId,\n                                        subUnitId,\n                                        id: link.id,\n                                    },\n                                });\n\n                                undos.push({\n                                    id: AddHyperLinkMutation.id,\n                                    params: {\n                                        unitId,\n                                        subUnitId,\n                                        link,\n                                    },\n                                });\n                            }\n                        });\n                    }\n\n                    return {\n                        undos,\n                        redos,\n                    };\n                }\n                return {\n                    redos: [],\n                    undos: [],\n                };\n            },\n        }));\n    }\n\n    private _initClearSelectionCommandInterceptor() {\n        this.disposeWithMe(this._sheetInterceptorService.interceptCommand({\n            getMutations: (command) => {\n                if (\n                    command.id === ClearSelectionContentCommand.id ||\n                    command.id === ClearSelectionAllCommand.id ||\n                    command.id === ClearSelectionFormatCommand.id\n                ) {\n                    const redos: IMutationInfo[] = [];\n                    const undos: IMutationInfo[] = [];\n                    const selection = this._selectionManagerService.getCurrentLastSelection();\n                    const target = getSheetCommandTarget(this._univerInstanceService);\n                    if (selection && target) {\n                        const { unitId, subUnitId } = target;\n                        Range.foreach(selection.range, (row, col) => {\n                            const link = this._hyperLinkModel.getHyperLinkByLocation(unitId, subUnitId, row, col);\n                            if (link) {\n                                redos.push({\n                                    id: RemoveHyperLinkMutation.id,\n                                    params: {\n                                        unitId,\n                                        subUnitId,\n                                        id: link.id,\n                                    },\n                                });\n                                undos.push({\n                                    id: AddHyperLinkMutation.id,\n                                    params: {\n                                        unitId,\n                                        subUnitId,\n                                        link,\n                                    },\n                                });\n                            }\n                        });\n                    }\n\n                    return {\n                        redos,\n                        undos,\n                    };\n                }\n\n                return {\n                    redos: [],\n                    undos: [],\n                };\n            },\n        }));\n    }\n\n    private _initAfterEditor() {\n        this.disposeWithMe(this._sheetInterceptorService.writeCellInterceptor.intercept(AFTER_CELL_EDIT, {\n            handler: (cell, context, next) => {\n                if (!cell || cell.p) {\n                    return next(cell);\n                }\n\n                if (typeof cell.v === 'string' && Tools.isLegalUrl(cell.v) && cell.v[cell.v.length - 1] !== ' ') {\n                    const { unitId, subUnitId } = context;\n\n                    const workbook = this._univerInstanceService.getUnit<Workbook>(unitId, UniverInstanceType.UNIVER_SHEET);\n                    const worksheet = workbook?.getSheetBySheetId(subUnitId);\n                    if (!worksheet) {\n                        return next(cell);\n                    }\n                    // const renderer = this._renderManagerService.getRenderById(unitId);\n                    // const skeleton = renderer?.with(SheetSkeletonManagerService).getSkeletonParam(subUnitId);\n                    // if (!skeleton) {\n                    //     return next(cell);\n                    // }\n                    const doc = worksheet.getBlankCellDocumentModel(cell);\n                    if (!doc.documentModel) {\n                        return next(cell);\n                    }\n                    const textX = BuildTextUtils.selection.replace({\n                        selection: {\n                            startOffset: 0,\n                            endOffset: cell.v.length,\n                            collapsed: false,\n                        },\n                        body: {\n                            dataStream: `${cell.v}`,\n                            customRanges: [{\n                                startIndex: 0,\n                                endIndex: cell.v.length - 1,\n                                rangeId: generateRandomId(),\n                                rangeType: CustomRangeType.HYPERLINK,\n                                properties: {\n                                    url: cell.v,\n                                },\n                            }],\n                        },\n                        doc: doc.documentModel,\n                    });\n                    if (!textX) {\n                        return next(cell);\n                    }\n                    const body = doc.documentModel.getBody()!;\n                    TextX.apply(body, textX.serialize());\n                    return next({\n                        ...cell,\n                        p: {\n                            id: DOCS_NORMAL_EDITOR_UNIT_ID_KEY,\n                            body,\n                            documentStyle: {\n                                pageSize: {\n                                    width: Infinity,\n                                    height: Infinity,\n                                },\n                            },\n                        },\n                    });\n                }\n                return next(cell);\n            },\n        }));\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ISheetHyperLink } from '../types/interfaces/i-hyper-link';\nimport { Disposable, Inject, IResourceManagerService } from '@univerjs/core';\nimport { UniverType } from '@univerjs/protocol';\nimport { HyperLinkModel } from '../models/hyper-link.model';\nimport { SHEET_HYPER_LINK_PLUGIN } from '../types/const';\n\ntype UnitHyperLinkJSON = Record<string, ISheetHyperLink[]>;\n\nexport class SheetsHyperLinkResourceController extends Disposable {\n    constructor(\n        @IResourceManagerService private readonly _resourceManagerService: IResourceManagerService,\n        @Inject(HyperLinkModel) private readonly _hyperLinkModel: HyperLinkModel\n    ) {\n        super();\n        this._initSnapshot();\n    }\n\n    private _initSnapshot() {\n        const toJson = (unitID: string) => {\n            const map = this._hyperLinkModel.getUnit(unitID);\n            const resultMap: UnitHyperLinkJSON = {};\n            if (map) {\n                map.forEach((info) => {\n                    resultMap[info.subUnitId] = info.links.map(({ display, ...link }) => link);\n                });\n\n                return JSON.stringify(resultMap);\n            }\n            return '';\n        };\n        const parseJson = (json: string): UnitHyperLinkJSON => {\n            if (!json) {\n                return {};\n            }\n            try {\n                return JSON.parse(json);\n            } catch (err) {\n                return {};\n            }\n        };\n\n        this.disposeWithMe(\n            this._resourceManagerService.registerPluginResource({\n                pluginName: SHEET_HYPER_LINK_PLUGIN,\n                businesses: [UniverType.UNIVER_SHEET],\n                toJson: (unitID) => toJson(unitID),\n                parseJson: (json) => parseJson(json),\n                onUnLoad: (unitID) => {\n                    this._hyperLinkModel.deleteUnit(unitID);\n                },\n                onLoad: async (unitID, value) => {\n                    Object.keys(value).forEach((subunitId) => {\n                        const linkList = value[subunitId];\n                        linkList.forEach((link) => {\n                            this._hyperLinkModel.addHyperLink(unitID, subunitId, link);\n                        });\n                    });\n                },\n            })\n        );\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, ICommand, IDocumentData, IMutationInfo } from '@univerjs/core';\nimport type { ISetRangeValuesMutationParams } from '@univerjs/sheets';\nimport type { ISheetHyperLink } from '../../types/interfaces/i-hyper-link';\nimport { BuildTextUtils, CellValueType, CommandType, CustomRangeType, generateRandomId, ICommandService, IUndoRedoService, IUniverInstanceService, sequenceExecute, TextX, Tools } from '@univerjs/core';\nimport { addCustomRangeBySelectionFactory } from '@univerjs/docs';\nimport { getSheetCommandTarget, SetRangeValuesMutation, SetRangeValuesUndoMutationFactory, SheetInterceptorService } from '@univerjs/sheets';\nimport { HyperLinkModel } from '../../models/hyper-link.model';\nimport { AddHyperLinkMutation } from '../mutations/add-hyper-link.mutation';\nimport { RemoveHyperLinkMutation } from '../mutations/remove-hyper-link.mutation';\n\nexport interface IAddHyperLinkCommandParams {\n    unitId: string;\n    subUnitId: string;\n    link: ISheetHyperLink;\n}\n/**\n * Command for add hyperlink\n */\nexport const AddHyperLinkCommand: ICommand<IAddHyperLinkCommandParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheets.command.add-hyper-link',\n\n    // eslint-disable-next-line max-lines-per-function\n    async handler(accessor, params) {\n        if (!params) return false;\n\n        const commandService = accessor.get(ICommandService);\n        const undoRedoService = accessor.get(IUndoRedoService);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n        const hyperLinkModel = accessor.get(HyperLinkModel);\n        const sheetInterceptorService = accessor.get(SheetInterceptorService);\n\n        const target = getSheetCommandTarget(univerInstanceService, params);\n        if (!target) return false;\n\n        const { unitId, subUnitId, workbook, worksheet } = target;\n        const { link } = params;\n        const { payload, display, row, column, id } = link;\n\n        const cellData = worksheet.getCell(row, column);\n        const doc = worksheet.getBlankCellDocumentModel(cellData);\n        const snapshot = doc.documentModel!.getSnapshot();\n        const body = Tools.deepClone(snapshot.body);\n        if (!body) return false;\n\n        let textX: TextX | false;\n        if (display) {\n            textX = BuildTextUtils.selection.replace({\n                selection: {\n                    startOffset: 0,\n                    endOffset: body.dataStream.length - 2,\n                    collapsed: body.dataStream.length - 2 === 0,\n                },\n                body: {\n                    dataStream: `${display}`,\n                    customRanges: [{\n                        startIndex: 0,\n                        endIndex: display.length - 1,\n                        rangeType: CustomRangeType.HYPERLINK,\n                        rangeId: id,\n                        properties: {\n                            url: payload,\n                            // refId: id,\n                        },\n                    }],\n                },\n                doc: doc.documentModel!,\n            });\n        } else {\n            textX = BuildTextUtils.customRange.add({\n                body,\n                ranges: [{ startOffset: 0, endOffset: body.dataStream.length - 2, collapsed: false }],\n                rangeId: id,\n                rangeType: CustomRangeType.HYPERLINK,\n                properties: {\n                    url: payload,\n                    refId: id,\n                },\n            });\n        }\n\n        if (!textX) return false;\n\n        const newBody = TextX.apply(body, textX.serialize());\n        const rangeValue: IDocumentData = {\n            ...snapshot,\n            body: newBody,\n        };\n\n        const newCellData: ICellData = {\n            p: rangeValue,\n            t: CellValueType.STRING,\n        };\n\n        const finalCellData = sheetInterceptorService.onWriteCell(workbook, worksheet, row, column, newCellData);\n        const redoParams: ISetRangeValuesMutationParams = {\n            unitId,\n            subUnitId,\n            cellValue: {\n                [link.row]: {\n                    [link.column]: finalCellData,\n                },\n            },\n        };\n\n        const redo: IMutationInfo = {\n            id: SetRangeValuesMutation.id,\n            params: redoParams,\n        };\n        const undoParams = SetRangeValuesUndoMutationFactory(accessor, redoParams);\n\n        const undo: IMutationInfo = {\n            id: SetRangeValuesMutation.id,\n            params: undoParams,\n        };\n        const redos = [redo];\n        const undos = [undo];\n        const modelLink = hyperLinkModel.getHyperLinkByLocation(unitId, subUnitId, row, column);\n        if (modelLink) {\n            redos.push({\n                id: RemoveHyperLinkMutation.id,\n                params: {\n                    unitId,\n                    subUnitId,\n                    id: modelLink.id,\n                },\n            });\n            undos.push({\n                id: AddHyperLinkMutation.id,\n                params: {\n                    unitId,\n                    subUnitId,\n                    link: modelLink,\n                },\n            });\n        }\n\n        const res = await sequenceExecute(redos, commandService);\n        if (res) {\n            const isValid = await sheetInterceptorService.onValidateCell(workbook, worksheet, row, column);\n            if (isValid === false) {\n                sequenceExecute(undos, commandService);\n                return false;\n            }\n            undoRedoService.pushUndoRedo({\n                redoMutations: redos,\n                undoMutations: undos,\n                unitID: unitId,\n            });\n            return true;\n        }\n\n        return false;\n    },\n};\n\nexport interface IAddRichHyperLinkCommandParams {\n    /**\n     * url of link\n     */\n    documentId: string;\n    link: ISheetHyperLink;\n}\n\nexport const AddRichHyperLinkCommand: ICommand<IAddRichHyperLinkCommandParams> = {\n    id: 'sheets.command.add-rich-hyper-link',\n    type: CommandType.COMMAND,\n    handler: async (accessor, params) => {\n        if (!params) {\n            return false;\n        }\n        const { documentId, link } = params;\n        const commandService = accessor.get(ICommandService);\n        const newId = generateRandomId();\n        const { payload } = link;\n\n        const replaceSelection = addCustomRangeBySelectionFactory(accessor, {\n            unitId: documentId,\n            rangeId: newId,\n            rangeType: CustomRangeType.HYPERLINK,\n            properties: {\n                url: payload,\n                refId: newId,\n            },\n        });\n\n        if (replaceSelection) {\n            return commandService.syncExecuteCommand(replaceSelection.id, replaceSelection.params);\n        }\n\n        return false;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DocumentDataModel, ICommand, IDocumentBody, IMutationInfo, Nullable } from '@univerjs/core';\nimport type { IAddHyperLinkMutationParams } from '../mutations/add-hyper-link.mutation';\nimport { BuildTextUtils, CellValueType, CommandType, ICommandService, IUndoRedoService, IUniverInstanceService, sequenceExecute, TextX, Tools, UniverInstanceType } from '@univerjs/core';\nimport { deleteCustomRangeFactory } from '@univerjs/docs';\nimport { getSheetCommandTarget, SetRangeValuesMutation, SetRangeValuesUndoMutationFactory } from '@univerjs/sheets';\nimport { HyperLinkModel } from '../../models/hyper-link.model';\nimport { AddHyperLinkMutation } from '../mutations/add-hyper-link.mutation';\nimport { RemoveHyperLinkMutation } from '../mutations/remove-hyper-link.mutation';\n\nexport interface ICancelHyperLinkCommandParams {\n    unitId: string;\n    subUnitId: string;\n    /**\n     * id of link\n     */\n    id: string;\n    row: number;\n    column: number;\n}\n\nexport const CancelHyperLinkCommand: ICommand<ICancelHyperLinkCommandParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheets.command.cancel-hyper-link',\n\n    // eslint-disable-next-line max-lines-per-function\n    handler(accessor, params) {\n        if (!params) return false;\n\n        const commandService = accessor.get(ICommandService);\n        const undoRedoService = accessor.get(IUndoRedoService);\n        const instanceSrv = accessor.get(IUniverInstanceService);\n        const hyperLinkModel = accessor.get(HyperLinkModel);\n\n        const target = getSheetCommandTarget(instanceSrv, params);\n        if (!target) return false;\n\n        const { row, column, id } = params;\n        const { unitId, subUnitId, worksheet } = target;\n\n        const cellData = worksheet.getCell(row, column);\n        if (!cellData) return false;\n\n        const doc = worksheet.getCellDocumentModelWithFormula(cellData);\n        if (!doc?.documentModel) return false;\n\n        const snapshot = Tools.deepClone(doc.documentModel!.getSnapshot());\n        const range = snapshot.body?.customRanges?.find((range) => `${range.rangeId}` === id);\n        if (!range) return false;\n\n        const textX = BuildTextUtils.customRange.delete({ documentDataModel: doc.documentModel, rangeId: range.rangeId });\n        if (!textX) return false;\n\n        const newBody = TextX.apply(snapshot.body!, textX.serialize());\n        const redos: IMutationInfo[] = [];\n        const undos: IMutationInfo[] = [];\n        const setRangeParams = {\n            unitId,\n            subUnitId,\n            cellValue: {\n                [row]: {\n                    [column]: {\n                        p: {\n                            ...snapshot,\n                            body: newBody,\n                        },\n                        t: CellValueType.STRING,\n                    },\n                },\n            },\n        };\n\n        redos.push({\n            id: SetRangeValuesMutation.id,\n            params: setRangeParams,\n        });\n\n        const undoParams = SetRangeValuesUndoMutationFactory(accessor, setRangeParams);\n\n        undos.push({\n            id: SetRangeValuesMutation.id,\n            params: undoParams,\n        });\n\n        const link = hyperLinkModel.getHyperLinkByLocation(unitId, subUnitId, row, column);\n        if (link) {\n            redos.push({\n                id: RemoveHyperLinkMutation.id,\n                params: {\n                    unitId,\n                    subUnitId,\n                    id,\n                },\n            });\n            undos.push({\n                id: AddHyperLinkMutation.id,\n                params: {\n                    unitId,\n                    subUnitId,\n                    link: {\n                        ...link,\n                    },\n                } as IAddHyperLinkMutationParams,\n            });\n        }\n\n        const res = sequenceExecute(redos, commandService).result;\n\n        if (res) {\n            undoRedoService.pushUndoRedo({\n                redoMutations: redos,\n                undoMutations: undos,\n                unitID: unitId,\n            });\n            return true;\n        }\n        return false;\n    },\n};\n\nexport interface ICancelRichHyperLinkCommandParams extends ICancelHyperLinkCommandParams {\n    /**\n     * document id\n     */\n    documentId: string;\n}\n\nexport const CancelRichHyperLinkCommand: ICommand<ICancelRichHyperLinkCommandParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheets.command.cancel-rich-hyper-link',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { id: linkId, documentId } = params;\n        const commandService = accessor.get(ICommandService);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n        const doc = univerInstanceService.getUnit<DocumentDataModel>(documentId, UniverInstanceType.UNIVER_DOC);\n        const link = doc?.getBody()?.customRanges?.find((i) => i.rangeId === linkId);\n        let insert: Nullable<IDocumentBody> = null;\n        if (link && link.endIndex === doc!.getBody()!.dataStream.length - 3) {\n            insert = {\n                dataStream: ' ',\n            };\n        }\n        const doMutation = deleteCustomRangeFactory(accessor, { unitId: documentId, rangeId: linkId, insert });\n        if (!doMutation) {\n            return false;\n        }\n\n        return commandService.syncExecuteCommand(doMutation.id, doMutation.params);\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DocumentDataModel, ICellData, ICommand, IMutationInfo } from '@univerjs/core';\nimport type { ICellLinkContent } from '../../types/interfaces/i-hyper-link';\nimport { CellValueType, CommandType, CustomRangeType, generateRandomId, getBodySlice, ICommandService, IUndoRedoService, IUniverInstanceService, sequenceExecute, TextX, Tools, UniverInstanceType } from '@univerjs/core';\nimport { replaceSelectionFactory } from '@univerjs/docs';\nimport { getSheetCommandTarget, SetRangeValuesMutation, SetRangeValuesUndoMutationFactory, SheetInterceptorService } from '@univerjs/sheets';\nimport { HyperLinkModel } from '../../models/hyper-link.model';\nimport { AddHyperLinkMutation } from '../mutations/add-hyper-link.mutation';\nimport { RemoveHyperLinkMutation } from '../mutations/remove-hyper-link.mutation';\n\nexport interface IUpdateHyperLinkCommandParams {\n    unitId: string;\n    subUnitId: string;\n    id: string;\n    payload: ICellLinkContent;\n    row: number;\n    column: number;\n}\n\nexport const UpdateHyperLinkCommand: ICommand<IUpdateHyperLinkCommandParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheets.command.update-hyper-link',\n    // eslint-disable-next-line max-lines-per-function\n    async handler(accessor, params) {\n        if (!params) return false;\n\n        const commandService = accessor.get(ICommandService);\n        const undoRedoService = accessor.get(IUndoRedoService);\n        const instanceSrv = accessor.get(IUniverInstanceService);\n        const hyperLinkModel = accessor.get(HyperLinkModel);\n        const interceptorService = accessor.get(SheetInterceptorService);\n\n        const target = getSheetCommandTarget(instanceSrv, {\n            unitId: params.unitId,\n            subUnitId: params.subUnitId,\n        });\n\n        if (!target) return false;\n\n        const { payload: link, row, column, id } = params;\n        const { workbook, worksheet, unitId, subUnitId } = target;\n\n        const { payload, display = '' } = link;\n        const cellData = worksheet.getCell(row, column);\n        if (!cellData) return false;\n\n        const doc = worksheet.getCellDocumentModelWithFormula(cellData);\n        if (!doc?.documentModel) return false;\n\n        const snapshot = doc.documentModel.getSnapshot();\n        const range = snapshot.body?.customRanges?.find((range) => `${range.rangeId}` === id);\n        if (!range) return false;\n\n        const newId = generateRandomId();\n        const oldBody = getBodySlice(doc.documentModel.getBody()!, range.startIndex, range.endIndex + 1);\n        const textRun = oldBody.textRuns?.[0];\n        if (textRun) {\n            textRun.ed = display.length + 1;\n        }\n\n        const replaceSelection = replaceSelectionFactory(accessor, {\n            unitId,\n            body: {\n                dataStream: `${display}`,\n                customRanges: [{\n                    rangeId: newId,\n                    rangeType: CustomRangeType.HYPERLINK,\n                    startIndex: 0,\n                    endIndex: display.length - 1,\n                    properties: {\n                        url: payload,\n                    },\n                }],\n                textRuns: textRun ? [textRun] : undefined,\n            },\n            selection: {\n                startOffset: range.startIndex,\n                endOffset: range.endIndex + 1,\n                collapsed: false,\n            },\n            doc: doc.documentModel,\n        });\n        if (!replaceSelection) {\n            return false;\n        }\n        const newBody = TextX.apply(Tools.deepClone(snapshot.body!), replaceSelection.textX.serialize());\n        const newCellData: ICellData = {\n            p: {\n                ...snapshot,\n                body: newBody,\n            },\n            t: CellValueType.STRING,\n        };\n\n        const finalCellData = interceptorService.onWriteCell(workbook, worksheet, row, column, newCellData);\n\n        const redo = {\n            id: SetRangeValuesMutation.id,\n            params: {\n                unitId,\n                subUnitId,\n                cellValue: {\n                    [row]: {\n                        [column]: finalCellData,\n                    },\n                },\n            },\n        };\n        const undoParams = SetRangeValuesUndoMutationFactory(accessor, redo.params);\n\n        const undo = {\n            id: SetRangeValuesMutation.id,\n            params: undoParams,\n        };\n        const redos: IMutationInfo[] = [redo];\n        const undos: IMutationInfo[] = [undo];\n        const modelLink = hyperLinkModel.getHyperLinkByLocation(unitId, subUnitId, row, column);\n        if (modelLink) {\n            redos.push({\n                id: RemoveHyperLinkMutation.id,\n                params: {\n                    unitId,\n                    subUnitId,\n                    id: modelLink.id,\n                },\n            });\n            undos.push({\n                id: AddHyperLinkMutation.id,\n                params: {\n                    unitId,\n                    subUnitId,\n                    link: modelLink,\n                },\n            });\n        }\n\n        const res = sequenceExecute(redos, commandService);\n        if (res) {\n            const isValid = await interceptorService.onValidateCell(workbook, worksheet, row, column);\n            if (isValid === false) {\n                sequenceExecute(undos, commandService);\n                return false;\n            }\n            undoRedoService.pushUndoRedo({\n                redoMutations: redos,\n                undoMutations: undos,\n                unitID: unitId,\n            });\n            return true;\n        }\n        return false;\n    },\n};\n\nexport interface IUpdateRichHyperLinkCommandParams {\n    documentId: string;\n    id: string;\n    payload: ICellLinkContent;\n}\n\nexport const UpdateRichHyperLinkCommand: ICommand<IUpdateRichHyperLinkCommandParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheets.command.update-rich-hyper-link',\n    handler: (accessor, params) => {\n        if (!params) {\n            return false;\n        }\n        const { documentId: unitId, payload, id: rangeId } = params;\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n        const commandService = accessor.get(ICommandService);\n        const doc = univerInstanceService.getUnit<DocumentDataModel>(unitId, UniverInstanceType.UNIVER_DOC);\n        if (!doc) {\n            return false;\n        }\n        const range = doc.getBody()?.customRanges?.find((range) => range.rangeId === rangeId);\n        if (!range) {\n            return false;\n        }\n\n        const display = params.payload.display ?? '';\n        const newId = generateRandomId();\n        const oldBody = getBodySlice(doc.getBody()!, range.startIndex, range.endIndex + 1);\n        const textRun = oldBody.textRuns?.[0];\n        if (textRun) {\n            textRun.ed = display.length + 1;\n        }\n\n        const replaceSelection = replaceSelectionFactory(accessor, {\n            unitId,\n            body: {\n                dataStream: `${display}`,\n                customRanges: [{\n                    rangeId: newId,\n                    rangeType: CustomRangeType.HYPERLINK,\n                    startIndex: 0,\n                    endIndex: display.length - 1,\n                    properties: {\n                        url: payload.payload,\n                    },\n                }],\n                textRuns: textRun ? [textRun] : undefined,\n            },\n            selection: {\n                startOffset: range.startIndex,\n                endOffset: range.endIndex + 1,\n                collapsed: false,\n            },\n            doc,\n        });\n\n        if (!replaceSelection) {\n            return false;\n        }\n\n        return commandService.syncExecuteCommand(replaceSelection.id, replaceSelection.params);\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Disposable, ICommandService } from '@univerjs/core';\nimport { AddHyperLinkCommand, AddRichHyperLinkCommand } from '../commands/commands/add-hyper-link.command';\nimport { CancelHyperLinkCommand, CancelRichHyperLinkCommand } from '../commands/commands/remove-hyper-link.command';\nimport { UpdateHyperLinkCommand, UpdateRichHyperLinkCommand } from '../commands/commands/update-hyper-link.command';\nimport { AddHyperLinkMutation } from '../commands/mutations/add-hyper-link.mutation';\nimport { RemoveHyperLinkMutation } from '../commands/mutations/remove-hyper-link.mutation';\nimport { UpdateHyperLinkMutation, UpdateHyperLinkRefMutation, UpdateRichHyperLinkMutation } from '../commands/mutations/update-hyper-link.mutation';\n\nexport class SheetsHyperLinkController extends Disposable {\n    constructor(\n        @ICommandService private readonly _commandService: ICommandService\n    ) {\n        super();\n\n        this._registerCommands();\n    }\n\n    private _registerCommands() {\n        [\n            AddHyperLinkCommand,\n            UpdateHyperLinkCommand,\n            CancelHyperLinkCommand,\n            UpdateRichHyperLinkCommand,\n            CancelRichHyperLinkCommand,\n            AddRichHyperLinkCommand,\n            AddHyperLinkMutation,\n            UpdateHyperLinkMutation,\n            RemoveHyperLinkMutation,\n            UpdateHyperLinkRefMutation,\n            UpdateRichHyperLinkMutation,\n        ].forEach((command) => {\n            this._commandService.registerCommand(command);\n        });\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, Nullable, Workbook } from '@univerjs/core';\nimport { Inject, isValidRange, IUniverInstanceService, LocaleService, UniverInstanceType } from '@univerjs/core';\nimport { deserializeRangeWithSheet, IDefinedNamesService, serializeRange, serializeRangeWithSheet } from '@univerjs/engine-formula';\nimport { ERROR_RANGE } from '../types/const';\nimport { SheetHyperLinkType } from '../types/enums/hyper-link-type';\n\nexport interface ISheetUrlParams {\n    gid?: string;\n    range?: string;\n    rangeid?: string;\n    unitid?: string;\n}\n\nexport interface ISheetHyperLinkInfo {\n    type: SheetHyperLinkType;\n    name: string;\n    url: string;\n    searchObj: Nullable<ISheetUrlParams>;\n}\n\nexport class SheetsHyperLinkParserService {\n    constructor(\n        @IUniverInstanceService private _univerInstanceService: IUniverInstanceService,\n        @Inject(LocaleService) private _localeService: LocaleService,\n        @IDefinedNamesService private _definedNamesService: IDefinedNamesService\n    ) {}\n\n    buildHyperLink(unitId: string, sheetId: string, range?: string | IRange): string {\n        return `#${SheetHyperLinkType.SHEET}=${sheetId}${range ? `&${typeof range === 'string' ? SheetHyperLinkType.DEFINE_NAME : SheetHyperLinkType.RANGE}=${typeof range === 'string' ? range : serializeRange(range)}` : ''}`;\n    }\n\n    parseHyperLink(urlStr: string): ISheetHyperLinkInfo {\n        if (urlStr.startsWith('#')) {\n            const search = new URLSearchParams(urlStr.slice(1));\n            const searchObj: ISheetUrlParams = {\n                gid: search.get('gid') ?? '',\n                range: search.get('range') ?? '',\n                rangeid: search.get('rangeid') ?? '',\n                unitid: search.get('unitid') ?? '',\n            };\n            const urlInfo = this._getURLName(searchObj);\n\n            return {\n                type: urlInfo.type,\n                name: urlInfo.name,\n                url: urlStr,\n                searchObj,\n            };\n        } else {\n            return {\n                type: SheetHyperLinkType.URL,\n                name: urlStr,\n                url: urlStr,\n                searchObj: null,\n            };\n        }\n    }\n\n    private _getURLName(params: ISheetUrlParams) {\n        const { gid, range, rangeid, unitid } = params;\n        const workbook = unitid ?\n            this._univerInstanceService.getUnit<Workbook>(unitid, UniverInstanceType.UNIVER_SHEET)\n            : this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n        const invalidLink = {\n            type: SheetHyperLinkType.INVALID,\n            name: this._localeService.t('hyperLink.message.refError'),\n        };\n\n        if (!workbook) {\n            return invalidLink;\n        }\n\n        const sheet = gid ? workbook.getSheetBySheetId(gid) : workbook.getActiveSheet();\n        const sheetName = sheet?.getName() ?? '';\n\n        if (range) {\n            if (!sheet) return invalidLink;\n            const rangeObj = deserializeRangeWithSheet(range).range;\n            if (isValidRange(rangeObj, sheet) && range !== ERROR_RANGE) {\n                return {\n                    type: SheetHyperLinkType.RANGE,\n                    name: serializeRangeWithSheet(sheetName, rangeObj),\n                };\n            }\n            return invalidLink;\n        }\n\n        if (rangeid) {\n            const range = this._definedNamesService.getValueById(workbook.getUnitId(), rangeid);\n            if (range) {\n                return {\n                    type: SheetHyperLinkType.DEFINE_NAME,\n                    name: range.formulaOrRefString,\n                };\n            }\n            return invalidLink;\n        }\n\n        if (gid) {\n            const worksheet = workbook.getSheetBySheetId(gid);\n            if (worksheet) {\n                return {\n                    type: SheetHyperLinkType.SHEET,\n                    name: worksheet.getName(),\n                };\n            }\n            return invalidLink;\n        }\n\n        return invalidLink;\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IUniverSheetsHyperLinkConfig } from './controllers/config.schema';\nimport { DependentOn, IConfigService, Inject, Injector, merge, Plugin, registerDependencies, touchDependencies, UniverInstanceType } from '@univerjs/core';\nimport { UniverSheetsPlugin } from '@univerjs/sheets';\nimport { defaultPluginConfig, SHEETS_HYPER_LINK_PLUGIN_CONFIG_KEY } from './controllers/config.schema';\nimport { SheetsHyperLinkRefRangeController } from './controllers/ref-range.controller';\nimport { SheetsHyperLinkRemoveSheetController } from './controllers/remove-sheet.controller';\nimport { SheetsHyperLinkRichTextRefRangeController } from './controllers/rich-text-ref-range.controller';\nimport { SheetHyperLinkSetRangeController } from './controllers/set-range.controller';\nimport { SheetsHyperLinkResourceController } from './controllers/sheet-hyper-link-resource.controller';\nimport { SheetsHyperLinkController } from './controllers/sheet-hyper-link.controller';\nimport { HyperLinkModel } from './models/hyper-link.model';\nimport { SheetsHyperLinkParserService } from './services/parser.service';\nimport { SHEET_HYPER_LINK_PLUGIN } from './types/const';\n\n@DependentOn(UniverSheetsPlugin)\nexport class UniverSheetsHyperLinkPlugin extends Plugin {\n    static override pluginName = SHEET_HYPER_LINK_PLUGIN;\n    static override type = UniverInstanceType.UNIVER_SHEET;\n\n    constructor(\n        private readonly _config: Partial<IUniverSheetsHyperLinkConfig> = defaultPluginConfig,\n        @Inject(Injector) protected _injector: Injector,\n        @IConfigService private readonly _configService: IConfigService\n    ) {\n        super();\n\n        // Manage the plugin configuration.\n        const { ...rest } = merge(\n            {},\n            defaultPluginConfig,\n            this._config\n        );\n        this._configService.setConfig(SHEETS_HYPER_LINK_PLUGIN_CONFIG_KEY, rest);\n    }\n\n    override onStarting(): void {\n        registerDependencies(this._injector, [\n            [HyperLinkModel],\n            [SheetsHyperLinkParserService],\n            [SheetsHyperLinkResourceController],\n            [SheetsHyperLinkController],\n            [SheetsHyperLinkRefRangeController],\n            [SheetHyperLinkSetRangeController],\n            [SheetsHyperLinkRemoveSheetController],\n            [SheetsHyperLinkRichTextRefRangeController],\n\n        ]);\n\n        touchDependencies(this._injector, [\n            [SheetsHyperLinkRefRangeController],\n            [SheetsHyperLinkResourceController],\n            [SheetsHyperLinkController],\n            [SheetHyperLinkSetRangeController],\n            [SheetsHyperLinkRemoveSheetController],\n            [SheetsHyperLinkRichTextRefRangeController],\n        ]);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const SHEETS_SORT_PLUGIN_CONFIG_KEY = 'sheets-sort.config';\n\nexport const configSymbol = Symbol(SHEETS_SORT_PLUGIN_CONFIG_KEY);\n\nexport interface IUniverSheetsSortConfig {\n}\n\nexport const defaultPluginConfig: IUniverSheetsSortConfig = {};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, Nullable } from '@univerjs/core';\nimport type { ICommonComparableCellValue } from './sheets-sort.controller';\nimport { SortType } from '../services/interface';\n\nexport enum ORDER {\n    POSITIVE = 1,\n    NEGATIVE = -1,\n    ZERO = 0,\n}\n\nconst removeStringSymbol = (str: string) => {\n    return str.replace(/-/gi, '').replace(/'/gi, '');\n};\n\nexport const compareNull = (\n    a1: ICommonComparableCellValue,\n    a2: ICommonComparableCellValue\n) => {\n    const isA1Null = a1 === null || a1 === '';\n    const isA2Null = a2 === null || a2 === '';\n\n    if (isA1Null && isA2Null) return ORDER.ZERO;\n\n    if (isA1Null) return ORDER.POSITIVE;\n\n    if (isA2Null) return ORDER.NEGATIVE;\n\n    return null;\n};\n\nexport const compareNumber = (\n    a1: ICommonComparableCellValue,\n    a2: ICommonComparableCellValue,\n    type: SortType\n) => {\n    const isA1Num = typeof a1 === 'number';\n    const isA2Num = typeof a2 === 'number';\n\n    if (isA1Num && isA2Num) {\n        if (a1 < a2) {\n            return type === SortType.ASC ? ORDER.NEGATIVE : ORDER.POSITIVE;\n        }\n        if (a1 > a2) {\n            return type === SortType.ASC ? ORDER.POSITIVE : ORDER.NEGATIVE;\n        }\n        return ORDER.ZERO;\n    }\n\n    if (isA1Num) {\n        return type === SortType.ASC ? ORDER.POSITIVE : ORDER.NEGATIVE;\n    }\n\n    if (isA2Num) {\n        return type === SortType.ASC ? ORDER.NEGATIVE : ORDER.POSITIVE;\n    }\n\n    return null;\n};\n\nexport const compareString = (a1: ICommonComparableCellValue, a2: ICommonComparableCellValue, type: SortType) => {\n    const isA1Str = typeof a1 === 'string';\n    const isA2Str = typeof a2 === 'string';\n\n    if (isA1Str) {\n        a1 = removeStringSymbol((a1 as string).toLocaleLowerCase()) as string;\n    }\n    if (isA2Str) {\n        a2 = removeStringSymbol((a2 as string).toLocaleLowerCase()) as string;\n    }\n\n    if (!isA1Str && !isA2Str) {\n        return null;\n    }\n\n    if (isA1Str && isA2Str) {\n        const a1AsString = a1 as string;\n        const a2AsString = a2 as string;\n        if (a1AsString < a2AsString) {\n            return type === SortType.ASC ? ORDER.NEGATIVE : ORDER.POSITIVE;\n        }\n        if (a1AsString > a2AsString) {\n            return type === SortType.ASC ? ORDER.POSITIVE : ORDER.NEGATIVE;\n        }\n        return ORDER.ZERO;\n    }\n\n    if (isA1Str) {\n        return type === SortType.ASC ? ORDER.POSITIVE : ORDER.NEGATIVE;\n    }\n\n    if (isA2Str) {\n        return type === SortType.ASC ? ORDER.NEGATIVE : ORDER.POSITIVE;\n    }\n\n    return null;\n};\n\nexport const isNullValue = (cell: Nullable<ICellData>) => {\n    if (!cell) {\n        return true;\n    }\n    if (Object.keys(cell).length === 0) {\n        return true;\n    }\n    if (cell?.v == null && cell?.p == null) {\n        return true;\n    }\n    return false;\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, Workbook } from '@univerjs/core';\nimport type { ISheetRangeLocation } from '@univerjs/sheets';\nimport type { ISortOption } from './interface';\nimport {\n    Disposable,\n    ICommandService,\n    Inject,\n    IUniverInstanceService,\n    Rectangle,\n} from '@univerjs/core';\nimport { FormulaDataModel } from '@univerjs/engine-formula';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { type ICellValueCompareFn, SortRangeCommand } from '../commands/commands/sheets-sort.command';\nimport { isNullValue } from '../controllers/utils';\n\nexport class SheetsSortService extends Disposable {\n    private _compareFns: ICellValueCompareFn[] = [];\n\n    constructor(\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @ICommandService private readonly _commandService: ICommandService,\n        @Inject(FormulaDataModel) private readonly _formulaDataModel: FormulaDataModel\n    ) {\n        super();\n    }\n\n    mergeCheck(location: ISheetRangeLocation) {\n        const { unitId, subUnitId, range } = location;\n        const sheet = (this._univerInstanceService.getUnit(unitId) as Workbook)?.getSheetBySheetId(subUnitId);\n        if (!sheet) {\n            return false;\n        }\n        const mergeDataInRange = sheet.getMergeData().filter((merge) => Rectangle.contains(range, merge));\n        if (mergeDataInRange.length === 0) {\n            return true;\n        }\n\n        return isRangeDividedEqually(range, mergeDataInRange);\n    }\n\n    emptyCheck(location: ISheetRangeLocation) {\n        const { unitId, subUnitId, range } = location;\n        const sheet = (this._univerInstanceService.getUnit(unitId) as Workbook)?.getSheetBySheetId(subUnitId);\n        if (!sheet) {\n            return false;\n        }\n        for (let row = range.startRow; row <= range.endRow; row++) {\n            for (let col = range.startColumn; col <= range.endColumn; col++) {\n                if (!isNullValue(sheet.getCellRaw(row, col))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    singleCheck(location: ISheetRangeLocation) {\n        if (location.range.startRow === location.range.endRow) {\n            return false;\n        }\n        return true;\n    }\n\n    formulaCheck(location: ISheetRangeLocation) {\n        const { unitId, subUnitId, range } = location;\n        const arrayFormulaRange = this._formulaDataModel.getArrayFormulaRange()?.[unitId]?.[subUnitId];\n        for (const row in arrayFormulaRange) {\n            const rowData = arrayFormulaRange[Number(row)];\n            for (const col in rowData) {\n                const arrayFormula = rowData[Number(col)];\n                if (arrayFormula && Rectangle.intersects(range, arrayFormula)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    registerCompareFn(fn: ICellValueCompareFn) {\n        this._compareFns.unshift(fn);\n    }\n\n    getAllCompareFns(): ICellValueCompareFn[] {\n        return this._compareFns;\n    }\n\n    applySort(sortOption: ISortOption, unitId?: string, subUnitId?: string) {\n        const { unitId: _unitId, subUnitId: _subUnitId } = getSheetCommandTarget(this._univerInstanceService) || {};\n        this._commandService.executeCommand(SortRangeCommand.id, {\n            orderRules: sortOption.orderRules,\n            range: sortOption.range,\n            hasTitle: sortOption.hasTitle ?? false,\n            unitId: unitId || _unitId,\n            subUnitId: subUnitId || _subUnitId,\n        });\n    }\n}\n\nfunction isRangeDividedEqually(range: IRange, merges: IRange[]): boolean {\n    const rangeRows = range.endRow - range.startRow + 1;\n    const rangeCols = range.endColumn - range.startColumn + 1;\n    let mergeRows: number | null = null;\n    let mergeCols: number | null = null;\n\n    const totalArea = rangeRows * rangeCols;\n    let totalMergeArea = 0;\n    for (const merge of merges) {\n        if (merge.startRow >= range.startRow && merge.endRow <= range.endRow && merge.startColumn >= range.startColumn && merge.endColumn <= range.endColumn) {\n            const currentMergeRows = merge.endRow - merge.startRow + 1;\n            const currentMergeCols = merge.endColumn - merge.startColumn + 1;\n\n            if (mergeRows === null && mergeCols === null) {\n                mergeRows = currentMergeRows;\n                mergeCols = currentMergeCols;\n            } else if (currentMergeRows !== mergeRows || currentMergeCols !== mergeCols) {\n                return false;\n            }\n            totalMergeArea += currentMergeRows * currentMergeCols;\n        }\n    }\n\n    return totalMergeArea === totalArea;\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This file provides a ton of mutations to manipulate `FilterModel`.\n// These models would be held on `SheetsFilterService`.\n\nimport type { IAccessor, ICellData, ICommand, IRange, Nullable, Worksheet } from '@univerjs/core';\nimport type { IReorderRangeCommandParams, ISheetCommandSharedParams } from '@univerjs/sheets';\nimport type { IOrderRule, SortType } from '../../services/interface';\nimport { CommandType, ICommandService, IUniverInstanceService, Rectangle, sequenceExecute } from '@univerjs/core';\nimport { getSheetCommandTarget, ReorderRangeCommand } from '@univerjs/sheets';\nimport { SheetsSortService } from '../../services/sheets-sort.service';\n\nexport interface ISortRangeCommandParams extends ISheetCommandSharedParams {\n    range: IRange;\n    orderRules: IOrderRule[];\n    hasTitle: boolean;\n}\n\nexport interface IRowComparator {\n    index: number;\n    value: Array<Nullable<ICellData>>;\n}\n\nexport enum ORDER {\n    KEEP = 1,\n    EXCHANGE = -1,\n    EQUAL = 0,\n}\n\nexport type CellValue = number | string | null;\n\nexport type ICellValueCompareFn = (type: SortType, a: Nullable<ICellData>, b: Nullable<ICellData>) => Nullable<number>;\n\nexport const SortRangeCommand: ICommand = {\n    id: 'sheet.command.sort-range',\n    type: CommandType.COMMAND,\n\n    handler: (accessor: IAccessor, params: ISortRangeCommandParams) => {\n        const { range, orderRules, hasTitle, unitId, subUnitId } = params;\n        const sortService = accessor.get(SheetsSortService);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n        const { worksheet } = getSheetCommandTarget(univerInstanceService, params) || {};\n        if (!worksheet) {\n            return false;\n        }\n\n        const mergeDataInRange = worksheet.getMergeData().filter((mergeData) => {\n            return Rectangle.contains(range, mergeData);\n        });\n        const mergeMainRowIndexes = mergeDataInRange.map((mergeData) => {\n            return mergeData.startRow;\n        });\n\n        const { startRow: rangeStartRow, endRow } = range;\n        const startRow = hasTitle ? rangeStartRow + 1 : rangeStartRow;\n        const toReorder: IRowComparator[] = [];\n\n        const oldOrder: number[] = [];\n        for (let rowIndex = startRow; rowIndex <= endRow; rowIndex++) {\n            if (worksheet.getRowFiltered(rowIndex)) {\n                continue;\n            }\n\n            if (worksheet.getRowRawVisible(rowIndex) === false) {\n                continue;\n            }\n\n            if (mergeDataInRange.length && !mergeMainRowIndexes.includes(rowIndex)) {\n                continue;\n            }\n\n            toReorder.push({\n                index: rowIndex,\n                value: getRowCellData(worksheet, rowIndex, orderRules),\n            });\n            oldOrder.push(rowIndex);\n        }\n        const compareFns: ICellValueCompareFn[] = sortService.getAllCompareFns();\n\n        toReorder.sort(reorderFnGenerator(orderRules, combineCompareFnsAsOne(compareFns)));\n\n        const order: { [key: number]: number } = {};\n\n        toReorder.forEach(({ index, value }, oldIndex) => {\n            order[oldOrder[oldIndex]] = index;\n        });\n\n        const reorderRangeCommand = {\n            id: ReorderRangeCommand.id,\n            params: {\n                unitId,\n                subUnitId,\n                range,\n                order,\n            } as unknown as IReorderRangeCommandParams,\n        };\n\n        const commandService = accessor.get(ICommandService);\n        const res = sequenceExecute([reorderRangeCommand], commandService);\n        return res.result;\n    },\n\n};\n\nfunction getRowCellData(\n    worksheet: Worksheet,\n    rowIndex: number,\n    orderRules: IOrderRule[]\n): Nullable<ICellData>[] {\n    const result: Nullable<ICellData>[] = [];\n    orderRules.forEach(({ colIndex }) => {\n        result.push(worksheet.getCellRaw(rowIndex, colIndex));\n    });\n    return result;\n}\n\nfunction combineCompareFnsAsOne(compareFns: ICellValueCompareFn[]) {\n    return (type: SortType, a: Nullable<ICellData>, b: Nullable<ICellData>) => {\n        for (let i = 0; i < compareFns.length; i++) {\n            const res = compareFns[i](type, a, b);\n            // null means can't compare in this fn.\n            if (res != null) {\n                return res;\n            }\n        }\n        // All fns can't compare these two value, means equal.\n        return 0;\n    };\n}\n\nfunction reorderFnGenerator(orderRules: IOrderRule[], valueCompare: ICellValueCompareFn) {\n    return function (a: IRowComparator, b: IRowComparator): number {\n        let ret: Nullable<number> = null;\n\n        for (let index = 0; index < orderRules.length; index++) {\n            const aCellData = a.value[index];\n            const bCellData = b.value[index];\n            ret = valueCompare(orderRules[index].type, aCellData, bCellData);\n\n            if (ret !== 0 && ret !== null && ret !== undefined) {\n                return ret as number;\n            }\n        }\n\n        return 0;\n    };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, Nullable } from '@univerjs/core';\nimport type { ICellValueCompareFn } from '../commands/commands/sheets-sort.command';\n\nimport { CellValueType, Disposable, ICommandService, Inject } from '@univerjs/core';\nimport { SortRangeCommand } from '../commands/commands/sheets-sort.command';\nimport { SheetsSortService } from '../services/sheets-sort.service';\nimport { compareNull, compareNumber, compareString, isNullValue } from './utils';\n\nexport type ICommonComparableCellValue = number | string | null;\n\nexport class SheetsSortController extends Disposable {\n    constructor(\n        @ICommandService private readonly _commandService: ICommandService,\n        @Inject(SheetsSortService) private readonly _sortService: SheetsSortService\n    ) {\n        super();\n        this._initCommands();\n        this._registerCompareFns();\n    }\n\n    private _initCommands(): void {\n        [\n            SortRangeCommand,\n        ].forEach((command) => this.disposeWithMe(this._commandService.registerCommand(command)));\n    }\n\n    private _registerCompareFns(): void {\n        const commonFn: ICellValueCompareFn = (type, a, b) => {\n            const valueA: ICommonComparableCellValue = this._getCommonValue(a);\n            const valueB: ICommonComparableCellValue = this._getCommonValue(b);\n\n            const compareTypeFns = [\n                compareNull,\n                compareString,\n                compareNumber,\n            ];\n\n            for (let i = 0; i < compareTypeFns.length; i++) {\n                const res = compareTypeFns[i](valueA, valueB, type);\n                if (res !== null) {\n                    return res;\n                }\n            }\n\n            return null;\n        };\n        this._sortService.registerCompareFn(commonFn);\n    }\n\n    private _getCommonValue(a: Nullable<ICellData>): ICommonComparableCellValue {\n        if (isNullValue(a)) {\n            return null;\n        }\n\n        const richTextValue = a?.p?.body?.dataStream;\n        if (richTextValue) {\n            return richTextValue;\n        }\n\n        if (a?.t === CellValueType.NUMBER) {\n            return Number.parseFloat(`${a.v}`);\n        }\n        if (a?.t === CellValueType.STRING) {\n            if (typeof a.v === 'number') {\n                return a.v;\n            }\n            return `${a.v}`;\n        }\n        if (a?.t === CellValueType.BOOLEAN) {\n            return `${a.v}`;\n        }\n        if (a?.t === CellValueType.FORCE_STRING) {\n            return Number.parseFloat(`${a.v}`);\n        }\n        return `${a?.v}`;\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Dependency } from '@univerjs/core';\nimport type { IUniverSheetsSortConfig } from './controllers/config.schema';\n\nimport { IConfigService, Inject, Injector, merge, Plugin, UniverInstanceType } from '@univerjs/core';\nimport { defaultPluginConfig, SHEETS_SORT_PLUGIN_CONFIG_KEY } from './controllers/config.schema';\nimport { SheetsSortController } from './controllers/sheets-sort.controller';\nimport { SheetsSortService } from './services/sheets-sort.service';\n\nconst NAME = 'SHEET_SORT_PLUGIN';\n\nexport class UniverSheetsSortPlugin extends Plugin {\n    static override type = UniverInstanceType.UNIVER_SHEET;\n    static override pluginName = NAME;\n\n    constructor(\n        private readonly _config: Partial<IUniverSheetsSortConfig> = defaultPluginConfig,\n        @Inject(Injector) protected readonly _injector: Injector,\n        @IConfigService private readonly _configService: IConfigService\n    ) {\n        super();\n\n        // Manage the plugin configuration.\n        const { ...rest } = merge(\n            {},\n            defaultPluginConfig,\n            this._config\n        );\n        this._configService.setConfig(SHEETS_SORT_PLUGIN_CONFIG_KEY, rest);\n    }\n\n    override onStarting(): void {\n        ([\n            [SheetsSortController],\n            [SheetsSortService],\n        ] as Dependency[]).forEach((d) => this._injector.add(d));\n    }\n\n    override onReady(): void {\n        this._injector.get(SheetsSortController);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const SHEET_HYPER_LINK_UI_PLUGIN = 'SHEET_HYPER_LINK_UI_PLUGIN';\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IMutationInfo } from '@univerjs/core';\nimport type { IAutoFillLocation, ISheetAutoFillHook } from '@univerjs/sheets-ui';\nimport { Disposable, Inject, Range, Rectangle, Tools } from '@univerjs/core';\nimport { AddHyperLinkMutation, HyperLinkModel, RemoveHyperLinkMutation } from '@univerjs/sheets-hyper-link';\nimport { APPLY_TYPE, getAutoFillRepeatRange, IAutoFillService, virtualizeDiscreteRanges } from '@univerjs/sheets-ui';\nimport { SHEET_HYPER_LINK_UI_PLUGIN } from '../types/const';\n\nexport class SheetsHyperLinkAutoFillController extends Disposable {\n    constructor(\n        @IAutoFillService private readonly _autoFillService: IAutoFillService,\n        @Inject(HyperLinkModel) private readonly _hyperLinkModel: HyperLinkModel\n    ) {\n        super();\n        this._initAutoFill();\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    private _initAutoFill() {\n        const noopReturnFunc = () => ({ redos: [], undos: [] });\n\n        // eslint-disable-next-line max-lines-per-function\n        const generalApplyFunc = (location: IAutoFillLocation, applyType: APPLY_TYPE) => {\n            const { source: sourceRange, target: targetRange, unitId, subUnitId } = location;\n\n            const virtualRange = virtualizeDiscreteRanges([sourceRange, targetRange]);\n            const [vSourceRange, vTargetRange] = virtualRange.ranges;\n            const { mapFunc } = virtualRange;\n            const sourceStartCell = {\n                row: vSourceRange.startRow,\n                col: vSourceRange.startColumn,\n            };\n            const repeats = getAutoFillRepeatRange(vSourceRange, vTargetRange);\n            const redos: IMutationInfo[] = [];\n            const undos: IMutationInfo[] = [];\n\n            // eslint-disable-next-line max-lines-per-function\n            repeats.forEach((repeat) => {\n                const targetStartCell = repeat.repeatStartCell;\n                const relativeRange = repeat.relativeRange;\n                const sourceRange = {\n                    startRow: sourceStartCell.row,\n                    startColumn: sourceStartCell.col,\n                    endColumn: sourceStartCell.col,\n                    endRow: sourceStartCell.row,\n                };\n                const targetRange = {\n                    startRow: targetStartCell.row,\n                    startColumn: targetStartCell.col,\n                    endColumn: targetStartCell.col,\n                    endRow: targetStartCell.row,\n                };\n                Range.foreach(relativeRange, (row, col) => {\n                    const sourcePositionRange = Rectangle.getPositionRange(\n                        {\n                            startRow: row,\n                            startColumn: col,\n                            endColumn: col,\n                            endRow: row,\n                        },\n                        sourceRange\n                    );\n                    const { row: sourceRow, col: sourceCol } = mapFunc(sourcePositionRange.startRow, sourcePositionRange.startColumn);\n                    const link = this._hyperLinkModel.getHyperLinkByLocation(unitId, subUnitId, sourceRow, sourceCol);\n                    const targetPositionRange = Rectangle.getPositionRange(\n                        {\n                            startRow: row,\n                            startColumn: col,\n                            endColumn: col,\n                            endRow: row,\n                        },\n                        targetRange\n                    );\n                    const { row: targetRow, col: targetCol } = mapFunc(targetPositionRange.startRow, targetPositionRange.startColumn);\n                    const id = Tools.generateRandomId();\n                    const currentLink = this._hyperLinkModel.getHyperLinkByLocation(unitId, subUnitId, targetRow, targetCol);\n                    if (currentLink) {\n                        redos.push({\n                            id: RemoveHyperLinkMutation.id,\n                            params: {\n                                unitId,\n                                subUnitId,\n                                id: currentLink.id,\n                            },\n                        });\n                    }\n                    if ((APPLY_TYPE.COPY === applyType || APPLY_TYPE.SERIES === applyType) && link) {\n                        redos.push({\n                            id: AddHyperLinkMutation.id,\n                            params: {\n                                unitId,\n                                subUnitId,\n                                link: {\n                                    ...link,\n                                    id,\n                                    row: targetRow,\n                                    column: targetCol,\n                                },\n                            },\n                        });\n                        undos.push({\n                            id: RemoveHyperLinkMutation.id,\n                            params: {\n                                unitId,\n                                subUnitId,\n                                id,\n                            },\n                        });\n                    }\n                    if (currentLink) {\n                        undos.push({\n                            id: AddHyperLinkMutation.id,\n                            params: {\n                                unitId,\n                                subUnitId,\n                                link: currentLink,\n                            },\n                        });\n                    }\n                });\n            });\n            return {\n                undos,\n                redos,\n            };\n        };\n        const hook: ISheetAutoFillHook = {\n            id: SHEET_HYPER_LINK_UI_PLUGIN,\n            onFillData: (location, direction, applyType) => {\n                if (\n                    applyType === APPLY_TYPE.COPY ||\n                    applyType === APPLY_TYPE.ONLY_FORMAT ||\n                    applyType === APPLY_TYPE.SERIES\n                ) {\n                    return generalApplyFunc(location, applyType);\n                }\n\n                return noopReturnFunc();\n            },\n        };\n        this.disposeWithMe(this._autoFillService.addHook(hook));\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { MenuConfig } from '@univerjs/ui';\n\nexport const SHEETS_HYPER_LINK_UI_PLUGIN_CONFIG_KEY = 'sheets-hyper-link-ui.config';\n\nexport const configSymbol = Symbol(SHEETS_HYPER_LINK_UI_PLUGIN_CONFIG_KEY);\n\nexport interface IUrlHandler {\n    navigateToOtherWebsite?: (url: string) => void;\n}\nexport interface IUniverSheetsHyperLinkUIConfig {\n    menu?: MenuConfig;\n    urlHandler?: IUrlHandler;\n}\n\nexport const defaultPluginConfig: IUniverSheetsHyperLinkUIConfig = {};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Tools } from '@univerjs/core';\n\nexport function isLegalLink(link: string) {\n    return Tools.isLegalUrl(link);\n}\n\nexport function hasProtocol(urlString: string) {\n    const pattern = /^[a-zA-Z]+:\\/\\//;\n    return pattern.test(urlString);\n}\n\nexport function isEmail(url: string) {\n    const pattern = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n    return pattern.test(url);\n}\n\nexport function serializeUrl(urlStr: string) {\n    if (isLegalLink(urlStr)) {\n        const transformedUrl = hasProtocol(urlStr) ? urlStr : isEmail(urlStr) ? `mailto://${urlStr}` : `http://${urlStr}`;\n\n        let url: URL;\n        try {\n            url = new URL(transformedUrl);\n        } catch {\n            return urlStr;\n        }\n\n        if (\n            url.hostname === location.hostname &&\n            url.port === location.port &&\n            url.protocol === location.protocol &&\n            url.pathname === location.pathname &&\n            url.hash &&\n            !url.search\n        ) {\n            return url.hash;\n        }\n\n        return transformedUrl;\n    }\n\n    return urlStr;\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, Workbook, Worksheet } from '@univerjs/core';\nimport type { ISetSelectionsOperationParams } from '@univerjs/sheets';\nimport type { ISheetHyperLinkInfo, ISheetUrlParams } from '@univerjs/sheets-hyper-link';\nimport type { IUniverSheetsHyperLinkUIConfig } from '../controllers/config.schema';\nimport { ICommandService, IConfigService, Inject, isValidRange, IUniverInstanceService, LocaleService, RANGE_TYPE, Rectangle, UniverInstanceType } from '@univerjs/core';\nimport { MessageType } from '@univerjs/design';\nimport { deserializeRangeWithSheet, IDefinedNamesService } from '@univerjs/engine-formula';\nimport { SetSelectionsOperation, SetWorksheetActiveOperation } from '@univerjs/sheets';\nimport { ERROR_RANGE, SheetHyperLinkType } from '@univerjs/sheets-hyper-link';\nimport { ScrollToRangeOperation } from '@univerjs/sheets-ui';\nimport { IMessageService } from '@univerjs/ui';\nimport { SHEETS_HYPER_LINK_UI_PLUGIN_CONFIG_KEY } from '../controllers/config.schema';\n\nfunction getContainRange(range: IRange, worksheet: Worksheet) {\n    const mergedCells = worksheet.getMergeData();\n    const maxCol = worksheet.getMaxColumns() - 1;\n    const maxRow = worksheet.getMaxRows() - 1;\n    if (maxCol < range.endColumn) {\n        range.endColumn = maxCol;\n    }\n\n    if (maxRow < range.endRow) {\n        range.endRow = maxRow;\n    }\n\n    if (range.rangeType === RANGE_TYPE.COLUMN || RANGE_TYPE.ROW) {\n        return range;\n    }\n\n    const relativeCells: IRange[] = [];\n    mergedCells.forEach((cell) => {\n        if (Rectangle.intersects(range, cell)) {\n            relativeCells.push(cell);\n        }\n    });\n\n    return Rectangle.realUnion(range, ...relativeCells);\n}\n\nexport class SheetsHyperLinkResolverService {\n    constructor(\n        @IUniverInstanceService private _univerInstanceService: IUniverInstanceService,\n        @ICommandService private _commandService: ICommandService,\n        @IDefinedNamesService private _definedNamesService: IDefinedNamesService,\n        @IMessageService private _messageService: IMessageService,\n        @Inject(LocaleService) private _localeService: LocaleService,\n        @IConfigService private _configService: IConfigService\n    ) { }\n\n    navigate(info: ISheetHyperLinkInfo): void {\n        switch (info.type) {\n            case SheetHyperLinkType.URL:\n                this.navigateToOtherWebsite(info.url);\n                break;\n            default:\n                this._navigateToUniver(info.searchObj!);\n        }\n    }\n\n    private _navigateToUniver(params: ISheetUrlParams) {\n        // NOTE: should we always use current unit and active worksheet?\n\n        const { gid, range, rangeid } = params;\n        const workbook = this._univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n        if (!workbook) {\n            return;\n        }\n\n        const unitId = workbook.getUnitId();\n        if (rangeid) {\n            const item = this._definedNamesService.getValueById(unitId, rangeid);\n            if (!item) {\n                return;\n            }\n\n            const { formulaOrRefString } = item;\n            const worksheet = this._definedNamesService.getWorksheetByRef(unitId, formulaOrRefString);\n\n            if (!worksheet) {\n                this._messageService.show({\n                    content: this._localeService.t('hyperLink.message.refError'),\n                    type: MessageType.Error,\n                });\n                return;\n            }\n\n            const isHidden = worksheet.isSheetHidden();\n\n            // The worksheet may be hidden\n            if (isHidden) {\n                this._messageService.show({\n                    content: this._localeService.t('hyperLink.message.hiddenSheet'),\n                    type: MessageType.Error,\n                });\n                return;\n            }\n\n            this.navigateToDefineName(unitId, rangeid);\n        }\n\n        if (!gid) {\n            return;\n        }\n\n        if (range) {\n            const rangeInfo = deserializeRangeWithSheet(range);\n            if (isValidRange(rangeInfo.range) && range !== ERROR_RANGE) {\n                this.navigateToRange(unitId, gid, rangeInfo.range);\n            }\n            return;\n        }\n\n        this.navigateToSheetById(unitId, gid);\n    }\n\n    async navigateToRange(unitId: string, subUnitId: string, range: IRange, forceTop?: boolean) {\n        const worksheet = await this.navigateToSheetById(unitId, subUnitId);\n        if (worksheet) {\n            const realRange = getContainRange(range, worksheet);\n            await this._commandService.executeCommand(\n                SetSelectionsOperation.id,\n                {\n                    unitId,\n                    subUnitId,\n\n                    selections: [{\n                        range: realRange,\n                        primary: null,\n                    }],\n                } as ISetSelectionsOperationParams\n            );\n            await this._commandService.executeCommand(ScrollToRangeOperation.id, {\n                range: realRange,\n                forceTop,\n            });\n        }\n    }\n\n    async navigateToSheetById(unitId: string, subUnitId: string) {\n        const workbook = this._univerInstanceService.getUnit<Workbook>(unitId, UniverInstanceType.UNIVER_SHEET);\n        if (!workbook) {\n            return false;\n        }\n        const worksheet = workbook.getActiveSheet();\n        if (!worksheet) {\n            return false;\n        }\n\n        if (worksheet.getSheetId() === subUnitId) {\n            return worksheet;\n        }\n\n        const targetSheet = workbook.getSheetBySheetId(subUnitId);\n\n        if (!targetSheet) {\n            this._messageService.show({\n                content: this._localeService.t('hyperLink.message.noSheet'),\n                type: MessageType.Error,\n            });\n            return false;\n        }\n\n        if (workbook.getHiddenWorksheets().indexOf(subUnitId) > -1) {\n            this._messageService.show({\n                content: this._localeService.t('hyperLink.message.hiddenSheet'),\n                type: MessageType.Error,\n            });\n            return false;\n        }\n\n        if (await this._commandService.executeCommand(SetWorksheetActiveOperation.id, { unitId, subUnitId })) {\n            return targetSheet;\n        }\n        return false;\n    }\n\n    async navigateToDefineName(unitId: string, rangeId: string) {\n        this._definedNamesService.focusRange(unitId, rangeId);\n        return true;\n    }\n\n    async navigateToOtherWebsite(url: string) {\n        const config = this._configService.getConfig<IUniverSheetsHyperLinkUIConfig>(SHEETS_HYPER_LINK_UI_PLUGIN_CONFIG_KEY);\n\n        if (config?.urlHandler?.navigateToOtherWebsite) {\n            return config.urlHandler.navigateToOtherWebsite(url);\n        }\n\n        window.open(url, '_blank', 'noopener noreferrer');\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IMutationInfo, IRange, Nullable } from '@univerjs/core';\nimport type { IDiscreteRange, IPasteHookValueType, ISheetDiscreteRangeLocation } from '@univerjs/sheets-ui';\nimport { Disposable, Inject, Injector, ObjectMatrix, Range, Rectangle, Tools } from '@univerjs/core';\nimport { rangeToDiscreteRange } from '@univerjs/sheets';\nimport { AddHyperLinkMutation, HyperLinkModel, RemoveHyperLinkMutation } from '@univerjs/sheets-hyper-link';\nimport { COPY_TYPE, getRepeatRange, ISheetClipboardService, PREDEFINED_HOOK_NAME, virtualizeDiscreteRanges } from '@univerjs/sheets-ui';\nimport { isLegalLink } from '../common/util';\nimport { SheetsHyperLinkResolverService } from '../services/resolver.service';\nimport { SHEET_HYPER_LINK_UI_PLUGIN } from '../types/const';\n\nexport class SheetsHyperLinkCopyPasteController extends Disposable {\n    private _plainTextFilter = new Set<(text: string) => boolean>();\n\n    registerPlainTextFilter(filter: (text: string) => boolean) {\n        this._plainTextFilter.add(filter);\n    }\n\n    removePlainTextFilter(filter: (text: string) => boolean) {\n        this._plainTextFilter.delete(filter);\n    }\n\n    /* If return false the process of paste text will be stop */\n    private _filterPlainText(text: string) {\n        return Array.from(this._plainTextFilter).every((filter) => filter(text));\n    }\n\n    private _copyInfo: Nullable<{\n        matrix: ObjectMatrix<string>;\n        unitId: string;\n        subUnitId: string;\n    }>;\n\n    constructor(\n        @ISheetClipboardService private _sheetClipboardService: ISheetClipboardService,\n        @Inject(HyperLinkModel) private _hyperLinkModel: HyperLinkModel,\n        @Inject(Injector) private _injector: Injector,\n        @Inject(SheetsHyperLinkResolverService) private _resolverService: SheetsHyperLinkResolverService\n    ) {\n        super();\n        this._initCopyPaste();\n        this.disposeWithMe(() => {\n            this._plainTextFilter.clear();\n        });\n    }\n\n    private _initCopyPaste() {\n        this._sheetClipboardService.addClipboardHook({\n            id: SHEET_HYPER_LINK_UI_PLUGIN,\n            onBeforeCopy: (unitId, subUnitId, range) => this._collect(unitId, subUnitId, range),\n            onPasteCells: (pasteFrom, pasteTo, data, payload) => {\n                const { copyType = COPY_TYPE.COPY, pasteType } = payload;\n                const { range: copyRange } = pasteFrom || {};\n                const { range: pastedRange, unitId, subUnitId } = pasteTo;\n                return this._generateMutations(pastedRange, { copyType, pasteType, copyRange, unitId, subUnitId });\n            },\n            onPastePlainText: (pasteTo: ISheetDiscreteRangeLocation, clipText: string) => {\n                const filterResult = this._filterPlainText(clipText);\n\n                if (isLegalLink(clipText) && filterResult) {\n                    const { range, unitId, subUnitId } = pasteTo;\n                    const { ranges: [pasteToRange], mapFunc } = virtualizeDiscreteRanges([range]);\n                    const redos: IMutationInfo[] = [];\n                    const undos: IMutationInfo[] = [];\n                    Range.foreach(pasteToRange, (originRow, originCol) => {\n                        const { row, col: column } = mapFunc(originRow, originCol);\n                        const link = this._hyperLinkModel.getHyperLinkByLocation(unitId, subUnitId, row, column);\n                        if (link) {\n                            redos.push({\n                                id: RemoveHyperLinkMutation.id,\n                                params: {\n                                    unitId,\n                                    subUnitId,\n                                    id: link.id,\n                                },\n                            });\n                        }\n                        if (link) {\n                            undos.push({\n                                id: AddHyperLinkMutation.id,\n                                params: {\n                                    unitId,\n                                    subUnitId,\n                                    link,\n                                },\n                            });\n                        }\n                    });\n                    return { redos, undos };\n                }\n\n                return { undos: [], redos: [] };\n            },\n            priority: 99,\n        });\n    }\n\n    private _collect(unitId: string, subUnitId: string, range: IRange) {\n        const matrix = new ObjectMatrix<string>();\n        this._copyInfo = {\n            unitId,\n            subUnitId,\n            matrix,\n        };\n\n        const discreteRange = this._injector.invoke((accessor) => {\n            return rangeToDiscreteRange(range, accessor, unitId, subUnitId);\n        });\n        if (!discreteRange) {\n            return;\n        }\n        const { rows, cols } = discreteRange;\n        rows.forEach((row, rowIndex) => {\n            cols.forEach((col, colIndex) => {\n                const link = this._hyperLinkModel.getHyperLinkByLocation(unitId, subUnitId, row, col);\n\n                matrix.setValue(rowIndex, colIndex, link?.id ?? '');\n            });\n        });\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    private _generateMutations(\n        pastedRange: IDiscreteRange,\n        copyInfo: {\n            copyType: COPY_TYPE;\n            copyRange?: IDiscreteRange;\n            pasteType: IPasteHookValueType;\n            unitId: string;\n            subUnitId: string;\n        }\n    ) {\n        if (!this._copyInfo) {\n            return { redos: [], undos: [] };\n        }\n\n        if (!this._copyInfo || !this._copyInfo.matrix.getSizeOf() || !copyInfo.copyRange) {\n            return { redos: [], undos: [] };\n        }\n\n        const specialPastes: IPasteHookValueType[] = [\n            PREDEFINED_HOOK_NAME.SPECIAL_PASTE_COL_WIDTH,\n            PREDEFINED_HOOK_NAME.SPECIAL_PASTE_VALUE,\n            PREDEFINED_HOOK_NAME.SPECIAL_PASTE_FORMAT,\n            PREDEFINED_HOOK_NAME.SPECIAL_PASTE_FORMULA,\n        ];\n\n        if (specialPastes.includes(copyInfo.pasteType)) {\n            return { redos: [], undos: [] };\n        }\n\n        const { unitId, subUnitId } = this._copyInfo;\n\n        const redos: IMutationInfo[] = [];\n        const undos: IMutationInfo[] = [];\n\n        const { ranges: [vCopyRange, vPastedRange], mapFunc } = virtualizeDiscreteRanges([copyInfo.copyRange, pastedRange]);\n        const repeatRange = getRepeatRange(vCopyRange, vPastedRange, true);\n\n        repeatRange.forEach(({ startRange }) => {\n            this._copyInfo?.matrix.forValue((row, col, ruleId) => {\n                const range = Rectangle.getPositionRange(\n                    {\n                        startRow: row,\n                        endRow: row,\n                        startColumn: col,\n                        endColumn: col,\n                    },\n                    startRange\n                );\n                const oldLink = this._hyperLinkModel.getHyperLink(unitId, subUnitId, ruleId);\n\n                const { row: startRow, col: startColumn } = mapFunc(range.startRow, range.startColumn);\n                const currentLink = this._hyperLinkModel.getHyperLinkByLocation(copyInfo.unitId, copyInfo.subUnitId, startRow, startColumn);\n                const id = Tools.generateRandomId();\n                if (currentLink) {\n                    redos.push({\n                        id: RemoveHyperLinkMutation.id,\n                        params: {\n                            unitId: copyInfo.unitId,\n                            subUnitId: copyInfo.subUnitId,\n                            id: currentLink.id,\n                        },\n                    });\n                }\n                if (oldLink) {\n                    redos.push({\n                        id: AddHyperLinkMutation.id,\n                        params: {\n                            unitId: copyInfo.unitId,\n                            subUnitId: copyInfo.subUnitId,\n                            link: {\n                                ...oldLink,\n                                id,\n                                row: startRow,\n                                column: startColumn,\n                            },\n                        },\n                    });\n                    undos.push({\n                        id: RemoveHyperLinkMutation.id,\n                        params: {\n                            unitId: copyInfo.unitId,\n                            subUnitId: copyInfo.subUnitId,\n                            id,\n                        },\n                    });\n                }\n\n                if (currentLink) {\n                    undos.push({\n                        id: AddHyperLinkMutation.id,\n                        params: {\n                            unitId: copyInfo.unitId,\n                            subUnitId: copyInfo.subUnitId,\n                            link: currentLink,\n                        },\n                    });\n                }\n            });\n        });\n\n        return { redos, undos };\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DocumentDataModel, Nullable, Workbook } from '@univerjs/core';\nimport type { ISelectionWithStyle, ISetSelectionsOperationParams } from '@univerjs/sheets';\nimport { BuildTextUtils, ColorKit, CustomRangeType, DataStreamTreeTokenType, DisposableCollection, DOCS_ZEN_EDITOR_UNIT_ID_KEY, FOCUSING_SHEET, generateRandomId, ICommandService, IContextService, isValidRange, IUniverInstanceService, LocaleService, ThemeService, Tools, UniverInstanceType } from '@univerjs/core';\nimport { Button, FormLayout, Input, Select } from '@univerjs/design';\nimport { DocSelectionManagerService } from '@univerjs/docs';\nimport { DocBackScrollRenderController, DocSelectionRenderService } from '@univerjs/docs-ui';\nimport { deserializeRangeWithSheet, IDefinedNamesService, serializeRange, serializeRangeToRefString, serializeRangeWithSheet } from '@univerjs/engine-formula';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { SetSelectionsOperation, SetWorksheetActiveOperation, SheetsSelectionsService } from '@univerjs/sheets';\nimport { RangeSelector } from '@univerjs/sheets-formula-ui';\nimport { AddHyperLinkCommand, AddRichHyperLinkCommand, SheetHyperLinkType, SheetsHyperLinkParserService, UpdateHyperLinkCommand, UpdateRichHyperLinkCommand } from '@univerjs/sheets-hyper-link';\nimport { IEditorBridgeService, IMarkSelectionService, ScrollToRangeOperation } from '@univerjs/sheets-ui';\nimport { IZenZoneService, KeyCode, useDependency, useEvent, useObservable } from '@univerjs/ui';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { CloseHyperLinkPopupOperation } from '../../commands/operations/popup.operations';\nimport { isLegalLink, serializeUrl } from '../../common/util';\nimport { SheetsHyperLinkPopupService } from '../../services/popup.service';\nimport { SheetsHyperLinkResolverService } from '../../services/resolver.service';\nimport { SheetsHyperLinkSidePanelService } from '../../services/side-panel.service';\nimport { HyperLinkEditSourceType } from '../../types/enums/edit-source';\nimport styles from './index.module.less';\n\nexport const CellLinkEdit = () => {\n    const [id, setId] = useState('');\n    const [hide, setHide] = useState(false);\n    const [display, _setDisplay] = useState('');\n    const [showLabel, setShowLabel] = useState(true);\n    const [type, setType] = useState<SheetHyperLinkType | string>(SheetHyperLinkType.URL);\n    const [payload, setPayload] = useState('');\n\n    const localeService = useDependency(LocaleService);\n    const definedNameService = useDependency(IDefinedNamesService);\n    const editorBridgeService = useDependency(IEditorBridgeService);\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const popupService = useDependency(SheetsHyperLinkPopupService);\n    const editing = useObservable(popupService.currentEditing$);\n    const parserService = useDependency(SheetsHyperLinkParserService);\n    const resolverService = useDependency(SheetsHyperLinkResolverService);\n    const commandService = useDependency(ICommandService);\n    const sidePanelService = useDependency(SheetsHyperLinkSidePanelService);\n    const sidePanelOptions = useMemo(() => sidePanelService.getOptions(), [sidePanelService]);\n    const zenZoneService = useDependency(IZenZoneService);\n    const renderManagerService = useDependency(IRenderManagerService);\n    const markSelectionService = useDependency(IMarkSelectionService);\n    const textSelectionService = useDependency(DocSelectionManagerService);\n    const contextService = useDependency(IContextService);\n    const themeService = useDependency(ThemeService);\n    const docSelectionManagerService = useDependency(DocSelectionManagerService);\n    const [selectorDialogVisible, setSelectorDialogVisible] = useState(false);\n    const sheetsSelectionService = useDependency(SheetsSelectionsService);\n    const selections = useMemo(() => sheetsSelectionService.getCurrentSelections(), []);\n\n    const customHyperLinkSidePanel = useMemo(() => {\n        if (sidePanelService.isBuiltInLinkType(type)) {\n            return;\n        }\n        return sidePanelService.getCustomHyperLink(type);\n    }, [sidePanelService, type]);\n\n    const [showError, setShowError] = useState(false);\n\n    const [isFocusRangeSelector, isFocusRangeSelectorSet] = useState(false);\n\n    const setByPayload = useRef(false);\n\n    const workbook = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n\n    const subUnitId = workbook?.getActiveSheet().getSheetId() || '';\n    // to polyfill the display value on old version data\n    // case split tag is no longer needed\n    const setDisplay = useCallback((value: string) => {\n        _setDisplay(value.replaceAll(DataStreamTreeTokenType.CUSTOM_RANGE_START, '').replaceAll(DataStreamTreeTokenType.CUSTOM_RANGE_END, ''));\n    }, [_setDisplay]);\n\n    useEffect(() => {\n        if (editing?.row !== undefined && editing.col !== undefined) {\n            const { customRange, row, col } = editing;\n            let { label } = editing;\n            if (typeof label === 'number') {\n                label = `${label}`;\n            }\n\n            let link;\n            if (customRange) {\n                link = {\n                    id: customRange?.rangeId ?? '',\n                    display: label ?? '',\n                    payload: customRange?.properties?.url ?? '',\n                    row,\n                    column: col,\n                };\n            } else {\n                if (editing.type === HyperLinkEditSourceType.VIEWING) {\n                    const workbook = univerInstanceService.getUnit<Workbook>(editing.unitId);\n                    const worksheet = workbook?.getSheetBySheetId(editing.subUnitId);\n                    const cell = worksheet?.getCellRaw(editing.row, editing.col);\n                    const range = cell?.p?.body?.customRanges?.find((range) => range.rangeType === CustomRangeType.HYPERLINK && range.properties?.url);\n                    const cellValue = cell?.v;\n                    if (cell && (!BuildTextUtils.transform.isEmptyDocument(cell.p?.body?.dataStream) || Tools.isDefine(cellValue))) {\n                        setShowLabel(false);\n                    }\n                    link = {\n                        id: '',\n                        display: '',\n                        payload: range?.properties?.url ?? '',\n                        row,\n                        column: col,\n                    };\n                } else {\n                    const doc = univerInstanceService.getCurrentUnitForType<DocumentDataModel>(UniverInstanceType.UNIVER_DOC);\n                    const currentSelection = textSelectionService.getActiveTextRange();\n                    const body = doc?.getBody();\n                    const selection = currentSelection && body ? currentSelection : null;\n                    const customRange = selection && BuildTextUtils.customRange.getCustomRangesInterestsWithSelection(selection, body?.customRanges ?? [])?.[0];\n\n                    setShowLabel(false);\n                    link = {\n                        id: '',\n                        display: label ?? '',\n                        payload: customRange?.properties?.url ?? '',\n                        row,\n                        column: col,\n                    };\n                }\n            }\n\n            setId(link.id);\n            const customLink = sidePanelService.findCustomHyperLink(link);\n            if (customLink) {\n                const customLinkInfo = customLink.convert(link);\n                setType(customLinkInfo.type);\n                setPayload(customLinkInfo.payload);\n                setDisplay(customLinkInfo.display);\n                return;\n            }\n            setDisplay(link.display);\n            const linkInfo = parserService.parseHyperLink(link.payload);\n            setType(linkInfo.type === SheetHyperLinkType.INVALID ? SheetHyperLinkType.RANGE : linkInfo.type);\n            switch (linkInfo.type) {\n                case SheetHyperLinkType.URL: {\n                    setPayload(linkInfo.url);\n                    if (linkInfo.url === link.display) {\n                        setByPayload.current = true;\n                    }\n                    break;\n                }\n                case SheetHyperLinkType.RANGE: {\n                    const params = linkInfo.searchObj!;\n                    const sheetName = params.gid ?\n                        univerInstanceService\n                            .getUnit<Workbook>(editing.unitId)\n                            ?.getSheetBySheetId(params.gid)\n                            ?.getName()\n                        ?? ''\n                        : '';\n                    const payload = (serializeRangeWithSheet(sheetName, deserializeRangeWithSheet(params.range!).range));\n                    setPayload(payload);\n                    if (payload === link.display) {\n                        setByPayload.current = true;\n                    }\n                    break;\n                }\n                case SheetHyperLinkType.SHEET: {\n                    const params = linkInfo.searchObj!;\n                    setPayload(params.gid!);\n                    break;\n                }\n                case SheetHyperLinkType.DEFINE_NAME: {\n                    const params = linkInfo.searchObj!;\n                    setPayload(params.rangeid!);\n                    break;\n                }\n                default:\n                    setPayload('');\n                    break;\n            }\n        }\n    }, [editing, resolverService, sidePanelService, textSelectionService, univerInstanceService]);\n\n    useEffect(() => {\n        let id: Nullable<string> = null;\n        if (editing && !editing.customRangeId && editing.type === HyperLinkEditSourceType.VIEWING && Tools.isDefine(editing.row) && Tools.isDefine(editing.col)) {\n            const workbook = univerInstanceService.getUnit<Workbook>(editing.unitId, UniverInstanceType.UNIVER_SHEET);\n            const worksheet = workbook?.getSheetBySheetId(editing.subUnitId);\n            const mergeInfo = worksheet?.getMergedCell(editing.row, editing.col);\n            const color = new ColorKit(themeService.getCurrentTheme().hyacinth500).toRgb();\n            id = markSelectionService.addShape(\n                {\n                    range: mergeInfo ?? {\n                        startColumn: editing.col,\n                        endColumn: editing.col,\n                        startRow: editing.row,\n                        endRow: editing.row,\n                    },\n                    style: {\n                        // hasAutoFill: false,\n                        fill: `rgb(${color.r}, ${color.g}, ${color.b}, 0.12)`,\n                        strokeWidth: 1,\n                        stroke: '#FFBD37',\n                        widgets: {},\n                    },\n                    primary: null,\n                },\n                [],\n                -1\n            );\n        }\n        return () => {\n            if (id) {\n                markSelectionService.removeShape(id);\n            }\n        };\n    }, [editing, markSelectionService, themeService, univerInstanceService]);\n\n    useEffect(() => {\n        isFocusRangeSelectorSet(type === SheetHyperLinkType.RANGE);\n    }, [type]);\n\n    useEffect(() => {\n        const render = editing?.type === HyperLinkEditSourceType.ZEN_EDITOR ?\n            renderManagerService.getRenderById(DOCS_ZEN_EDITOR_UNIT_ID_KEY) :\n            renderManagerService.getRenderById(editorBridgeService.getCurrentEditorId());\n        const disposeCollection = new DisposableCollection();\n\n        if (render) {\n            const selectionRenderService = render.with(DocSelectionRenderService);\n            selectionRenderService.setReserveRangesStatus(true);\n            disposeCollection.add(() => {\n                selectionRenderService.setReserveRangesStatus(false);\n            });\n        }\n\n        return () => {\n            editorBridgeService.disableForceKeepVisible();\n            disposeCollection.dispose();\n        };\n    }, [editing?.type, editorBridgeService, renderManagerService]);\n\n    useEffect(() => {\n        if (isFocusRangeSelector) {\n            popupService.setIsKeepVisible(isFocusRangeSelector);\n        }\n        popupService.setIsKeepVisible(selectorDialogVisible);\n\n        return () => {\n            popupService.setIsKeepVisible(false);\n        };\n    }, [isFocusRangeSelector, selectorDialogVisible, popupService]);\n\n    useEffect(() => {\n        return () => {\n            if (zenZoneService.temporaryHidden) {\n                zenZoneService.show();\n                contextService.setContextValue(FOCUSING_SHEET, false);\n            }\n        };\n    }, [contextService, zenZoneService]);\n\n    useEffect(() => {\n        if (isFocusRangeSelector) {\n            editorBridgeService.enableForceKeepVisible();\n\n            return () => {\n                editorBridgeService.disableForceKeepVisible();\n            };\n        }\n    }, [isFocusRangeSelector, editorBridgeService]);\n\n    const linkTypeOptions: Array<{\n        label: string;\n        value: SheetHyperLinkType | string;\n    }> = [\n        {\n            label: localeService.t('hyperLink.form.link'),\n            value: SheetHyperLinkType.URL,\n        },\n        {\n            label: localeService.t('hyperLink.form.range'),\n            value: SheetHyperLinkType.RANGE,\n        },\n        {\n            label: localeService.t('hyperLink.form.worksheet'),\n            value: SheetHyperLinkType.SHEET,\n        },\n        {\n            label: localeService.t('hyperLink.form.definedName'),\n            value: SheetHyperLinkType.DEFINE_NAME,\n        },\n        ...sidePanelOptions,\n    ];\n\n    if (!workbook) {\n        return;\n    }\n\n    const hiddens = workbook.getHiddenWorksheets();\n    const sheetsOption = workbook.getSheets().map((sheet) => ({ label: sheet.getName(), value: sheet.getSheetId() })).filter((opt) => hiddens.indexOf(opt.value) === -1);\n    const definedNames = Object.values(definedNameService.getDefinedNameMap(workbook.getUnitId()) ?? {}).map((value) => ({\n        label: value.name,\n        value: value.id,\n    }));\n\n    const formatUrl = (type: SheetHyperLinkType | string, payload: string) => {\n        if (type === SheetHyperLinkType.URL) {\n            return serializeUrl(payload);\n        }\n\n        if (type === SheetHyperLinkType.RANGE) {\n            const info = deserializeRangeWithSheet(payload);\n            const worksheet = workbook.getSheetBySheetName(info.sheetName);\n            if (worksheet) {\n                return `#gid=${worksheet.getSheetId()}&range=${serializeRange(info.range)}`;\n            }\n        }\n\n        return `#${type}=${payload}`;\n    };\n\n    const handleRangeChange = useEvent((rangeText: string) => {\n        const newValue = rangeText.split(',').map(deserializeRangeWithSheet);\n        const range = newValue[0];\n        if (!range || !isValidRange(range.range)) {\n            return;\n        }\n        if (!range.sheetName) {\n            range.sheetName = workbook.getActiveSheet()?.getName() || '';\n        }\n        const newPayload = serializeRangeToRefString(range);\n        setPayload(newPayload);\n\n        if (newPayload && (setByPayload.current || !display)) {\n            setDisplay(newPayload);\n            setByPayload.current = true;\n        }\n    });\n\n    const handleSubmit = async () => {\n        if ((showLabel && !display) || !payload || (type === SheetHyperLinkType.URL && !isLegalLink(payload))) {\n            setShowError(true);\n            return;\n        }\n\n        if (editing) {\n            if (id) {\n                const commandId = (editing.type === HyperLinkEditSourceType.ZEN_EDITOR || editing.type === HyperLinkEditSourceType.EDITING) ? UpdateRichHyperLinkCommand.id : UpdateHyperLinkCommand.id;\n                await commandService.executeCommand(commandId, {\n                    id,\n                    unitId: editing.unitId,\n                    subUnitId: editing.subUnitId,\n                    payload: {\n                        display: showLabel ? display : '',\n                        payload: formatUrl(type, payload),\n                    },\n                    row: editing.row,\n                    column: editing.col,\n                    documentId: editing.type === HyperLinkEditSourceType.ZEN_EDITOR ?\n                        DOCS_ZEN_EDITOR_UNIT_ID_KEY\n                        : editorBridgeService.getCurrentEditorId(),\n                });\n            } else {\n                const commandId = (editing.type === HyperLinkEditSourceType.ZEN_EDITOR || editing.type === HyperLinkEditSourceType.EDITING) ? AddRichHyperLinkCommand.id : AddHyperLinkCommand.id;\n                await commandService.executeCommand(commandId, {\n                    unitId: editing.unitId,\n                    subUnitId: editing.subUnitId,\n                    link: {\n                        id: generateRandomId(),\n                        row: editing.row,\n                        column: editing.col,\n                        payload: formatUrl(type, payload),\n                        display: showLabel ? display : '',\n                    },\n                    documentId: editing.type === HyperLinkEditSourceType.ZEN_EDITOR ?\n                        DOCS_ZEN_EDITOR_UNIT_ID_KEY\n                        : editorBridgeService.getCurrentEditorId(),\n                });\n            }\n        }\n        if (editing?.type === HyperLinkEditSourceType.VIEWING) {\n            await commandService.executeCommand(SetWorksheetActiveOperation.id, {\n                unitId: editing.unitId,\n                subUnitId: editing.subUnitId,\n            });\n\n            const GAP = 1;\n            await commandService.executeCommand(ScrollToRangeOperation.id, {\n                range: {\n                    startRow: Math.max(editing.row - GAP, 0),\n                    endRow: editing.row + GAP,\n                    startColumn: Math.max(editing.col - GAP, 0),\n                    endColumn: editing.col + GAP,\n                },\n            });\n        }\n\n        commandService.executeCommand(CloseHyperLinkPopupOperation.id);\n    };\n\n    if (!editing) {\n        return null;\n    }\n\n    return (\n        <div className={styles.cellLinkEdit} style={{ display: hide ? 'none' : 'block' }}>\n            {showLabel\n                ? (\n                    <FormLayout\n                        label={localeService.t('hyperLink.form.label')}\n                        error={showError && !display ? localeService.t('hyperLink.form.inputError') : ''}\n                    >\n                        <Input\n                            value={display}\n                            onChange={(v) => {\n                                setDisplay(v);\n                                setByPayload.current = false;\n                            }}\n                            placeholder={localeService.t('hyperLink.form.labelPlaceholder')}\n                            autoFocus\n                            onKeyDown={(e) => {\n                                if (e.keyCode === KeyCode.ENTER) {\n                                    handleSubmit();\n                                }\n                            }}\n                        />\n                    </FormLayout>\n                )\n                : null}\n            <FormLayout label={localeService.t('hyperLink.form.type')}>\n                <Select\n                    options={linkTypeOptions}\n                    value={type}\n                    onChange={(newType) => {\n                        setType(newType as SheetHyperLinkType);\n                        setPayload('');\n                    }}\n                />\n            </FormLayout>\n            {type === SheetHyperLinkType.URL && (\n                <FormLayout\n                    error={showError ? !payload ? localeService.t('hyperLink.form.inputError') : !isLegalLink(payload) ? localeService.t('hyperLink.form.linkError') : '' : ''}\n                >\n                    <Input\n                        value={payload}\n                        onChange={(newLink) => {\n                            setPayload(newLink);\n                            if (newLink && (setByPayload.current || !display || display === payload)) {\n                                setDisplay(newLink);\n                                setByPayload.current = true;\n                            }\n                        }}\n                        placeholder={localeService.t('hyperLink.form.linkPlaceholder')}\n                        autoFocus\n                        onKeyDown={(e) => {\n                            if (e.keyCode === KeyCode.ENTER) {\n                                handleSubmit();\n                            }\n                        }}\n                    />\n                </FormLayout>\n            )}\n            {type === SheetHyperLinkType.RANGE && (\n                <FormLayout error={showError && !payload ? localeService.t('hyperLink.form.inputError') : ''}>\n                    <RangeSelector\n                        unitId={workbook.getUnitId()}\n                        subUnitId={subUnitId}\n                        maxRangeCount={1}\n                        supportAcrossSheet\n                        initialValue={payload}\n                        resetRange={selections as ISelectionWithStyle[]}\n                        onChange={(_, text) => handleRangeChange(text)}\n                        onRangeSelectorDialogVisibleChange={async (visible) => {\n                            setSelectorDialogVisible(visible);\n                            if (visible) {\n                                if (editing.type === HyperLinkEditSourceType.ZEN_EDITOR) {\n                                    zenZoneService.hide();\n                                    contextService.setContextValue(FOCUSING_SHEET, true);\n                                }\n                                if (editing.type !== HyperLinkEditSourceType.VIEWING) {\n                                    editorBridgeService.enableForceKeepVisible();\n                                }\n                                setHide(true);\n                            } else {\n                                await resolverService.navigateToRange(editing.unitId, editing.subUnitId, { startRow: editing.row, endRow: editing.row, startColumn: editing.col, endColumn: editing.col }, true);\n                                if (editing.type === HyperLinkEditSourceType.ZEN_EDITOR) {\n                                    await commandService.executeCommand(SetSelectionsOperation.id, {\n                                        unitId: editing.unitId,\n                                        subUnitId: editing.subUnitId,\n                                        selections: [{ range: { startRow: editing.row, endRow: editing.row, startColumn: editing.col, endColumn: editing.col } }],\n                                    } as ISetSelectionsOperationParams);\n\n                                    zenZoneService.show();\n                                    contextService.setContextValue(FOCUSING_SHEET, false);\n                                    const docBackScrollRenderController = renderManagerService.getRenderById(DOCS_ZEN_EDITOR_UNIT_ID_KEY)?.with(DocBackScrollRenderController);\n                                    const range = docSelectionManagerService.getTextRanges({ unitId: DOCS_ZEN_EDITOR_UNIT_ID_KEY, subUnitId: DOCS_ZEN_EDITOR_UNIT_ID_KEY })?.[0];\n\n                                    if (docBackScrollRenderController && range) {\n                                        docBackScrollRenderController.scrollToRange(range);\n                                        docSelectionManagerService.refreshSelection({ unitId: DOCS_ZEN_EDITOR_UNIT_ID_KEY, subUnitId: DOCS_ZEN_EDITOR_UNIT_ID_KEY });\n                                    }\n                                }\n                                editorBridgeService.disableForceKeepVisible();\n                                setHide(false);\n                            }\n                        }}\n                        onFocusChange={(focus) => isFocusRangeSelectorSet(focus)}\n                    />\n                </FormLayout>\n            )}\n            {type === SheetHyperLinkType.SHEET && (\n                <FormLayout error={showError && !payload ? localeService.t('hyperLink.form.selectError') : ''}>\n                    <Select\n                        options={sheetsOption}\n                        value={payload}\n                        onChange={(newPayload) => {\n                            setPayload(newPayload);\n                            const label = sheetsOption.find((i) => i.value === newPayload)?.label;\n                            const oldLabel = sheetsOption.find((i) => i.value === payload)?.label;\n                            if (label && (setByPayload.current || !display || display === oldLabel)) {\n                                setDisplay(label);\n                                setByPayload.current = true;\n                            }\n                        }}\n                    />\n                </FormLayout>\n            )}\n            {type === SheetHyperLinkType.DEFINE_NAME && (\n                <FormLayout error={showError && !payload ? localeService.t('hyperLink.form.selectError') : ''}>\n                    <Select\n                        options={definedNames}\n                        value={payload}\n                        onChange={(newValue) => {\n                            setPayload(newValue);\n                            const label = definedNames.find((i) => i.value === newValue)?.label;\n                            const oldLabel = definedNames.find((i) => i.value === payload)?.label;\n                            if (label && (setByPayload.current || !display || display === oldLabel)) {\n                                setDisplay(label);\n                                setByPayload.current = true;\n                            }\n                        }}\n                    />\n                </FormLayout>\n            )}\n            {customHyperLinkSidePanel?.Form && (\n                <customHyperLinkSidePanel.Form\n                    linkId={id}\n                    payload={payload}\n                    display={display}\n                    showError={showError}\n                    setByPayload={setByPayload}\n                    setDisplay={(newLink) => {\n                        setDisplay(newLink);\n                        setByPayload.current = true;\n                    }}\n                    setPayload={setPayload}\n                />\n            )}\n            <div className={styles.cellLinkEditButtons}>\n                <Button\n                    onClick={() => {\n                        if (editing) {\n                            resolverService.navigateToRange(editing.unitId, editing.subUnitId, { startRow: editing.row, endRow: editing.row, startColumn: editing.col, endColumn: editing.col }, true);\n                        }\n                        commandService.executeCommand(CloseHyperLinkPopupOperation.id);\n                    }}\n                >\n                    {localeService.t('hyperLink.form.cancel')}\n                </Button>\n                <Button\n                    type=\"primary\"\n                    style={{ marginLeft: 8 }}\n                    onClick={async () => {\n                        handleSubmit();\n                    }}\n                >\n                    {localeService.t('hyperLink.form.ok')}\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nCellLinkEdit.componentKey = 'univer.sheet.cell-link-edit';\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ISheetHyperLink } from '@univerjs/sheets-hyper-link';\nimport type React from 'react';\nimport { Disposable } from '@univerjs/core';\nimport { SheetHyperLinkType } from '@univerjs/sheets-hyper-link';\n\nexport interface ICustomHyperLinkFormProps {\n    linkId: string;\n    payload: string;\n    display: string;\n    setByPayload: React.MutableRefObject<boolean>;\n    showError: boolean;\n    setDisplay: (display: string) => void;\n    setPayload: (payload: string) => void;\n}\n\nexport interface ICustomHyperLinkView {\n    type: string;\n    option: {\n        label: string;\n        value: string;\n    };\n    Form: React.FC<ICustomHyperLinkFormProps>;\n    convert: (link: ISheetHyperLink) => { display: string; payload: string; type: string };\n    match: (link: ISheetHyperLink) => boolean;\n}\n\nexport class SheetsHyperLinkSidePanelService extends Disposable {\n    private _customHyperLinks = new Map<string, ICustomHyperLinkView>();\n\n    isBuiltInLinkType(type: SheetHyperLinkType | string) {\n        return type !== SheetHyperLinkType.URL;\n    }\n\n    getOptions() {\n        return Array.from(this._customHyperLinks.values()).map(({ option }) => option);\n    }\n\n    findCustomHyperLink(link: ISheetHyperLink) {\n        const customLink = Array.from(this._customHyperLinks.values()).find((item) => item.match(link));\n\n        return customLink;\n    }\n\n    registerCustomHyperLink(customHyperLink: ICustomHyperLinkView) {\n        this._customHyperLinks.set(customHyperLink.type, customHyperLink);\n    }\n\n    getCustomHyperLink(type: string) {\n        return this._customHyperLinks.get(type);\n    }\n\n    removeCustomHyperLink(type: string) {\n        const { _customHyperLinks } = this;\n        _customHyperLinks.delete(type);\n    }\n\n    override dispose() {\n        super.dispose();\n        this._customHyperLinks.clear();\n    }\n}\n", "export default {\n  \"cellLinkEdit\": \"univer-cell-link-edit\",\n  \"cellLinkEditButtons\": \"univer-cell-link-edit-buttons\"\n};import \"ni:sha-256;n4hnT4lc243Zv57O-RVLbdbC6ZmW2WemFJmEjkQmlEQ\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICustomRange, Nullable, Workbook } from '@univerjs/core';\nimport type { IHyperLinkPopup } from '../../services/popup.service';\nimport { DOCS_ZEN_EDITOR_UNIT_ID_KEY, ICommandService, IUniverInstanceService, LocaleService, UniverInstanceType } from '@univerjs/core';\nimport { clsx, MessageType, Tooltip } from '@univerjs/design';\nimport { AllBorderSingle, CopySingle, LinkSingle, UnlinkSingle, WriteSingle, Xlsx } from '@univerjs/icons';\nimport { CancelHyperLinkCommand, CancelRichHyperLinkCommand, SheetHyperLinkType, SheetsHyperLinkParserService } from '@univerjs/sheets-hyper-link';\nimport { IEditorBridgeService } from '@univerjs/sheets-ui';\nimport { IMessageService, IZenZoneService, useDependency } from '@univerjs/ui';\nimport { useEffect, useState } from 'react';\nimport { OpenHyperLinkEditPanelOperation } from '../../commands/operations/popup.operations';\nimport { SheetsHyperLinkPopupService } from '../../services/popup.service';\nimport { SheetsHyperLinkResolverService } from '../../services/resolver.service';\nimport { HyperLinkEditSourceType } from '../../types/enums/edit-source';\nimport styles from './index.module.less';\n\nconst iconsMap = {\n    [SheetHyperLinkType.URL]: <LinkSingle />,\n    [SheetHyperLinkType.SHEET]: <Xlsx />,\n    [SheetHyperLinkType.RANGE]: <AllBorderSingle />,\n    [SheetHyperLinkType.DEFINE_NAME]: <AllBorderSingle />,\n    [SheetHyperLinkType.INVALID]: <AllBorderSingle />,\n};\n\ninterface ICellLinkPopupPureProps {\n    customRange?: Nullable<ICustomRange>;\n    row: number;\n    col: number;\n    unitId: string;\n    subUnitId: string;\n    editPermission?: boolean;\n    copyPermission?: boolean;\n    type: HyperLinkEditSourceType;\n}\n\nexport const CellLinkPopupPure = (props: ICellLinkPopupPureProps) => {\n    const popupService = useDependency(SheetsHyperLinkPopupService);\n    const commandService = useDependency(ICommandService);\n    const messageService = useDependency(IMessageService);\n    const localeService = useDependency(LocaleService);\n    const resolverService = useDependency(SheetsHyperLinkResolverService);\n    const editorBridgeService = useDependency(IEditorBridgeService);\n    const parserHyperLinkService = useDependency(SheetsHyperLinkParserService);\n    const zenZoneService = useDependency(IZenZoneService);\n    const { customRange, row, col, unitId, subUnitId, editPermission, copyPermission, type } = props;\n\n    if (!customRange?.properties?.url) {\n        return null;\n    }\n    const linkObj = parserHyperLinkService.parseHyperLink(customRange.properties.url ?? '');\n    const isError = linkObj.type === SheetHyperLinkType.INVALID;\n\n    return (\n        <div className={styles.cellLink} onClick={() => popupService.hideCurrentPopup()}>\n            <div\n                className={clsx(styles.cellLinkContent, { [styles.cellLinkContentError]: isError })}\n                onClick={() => {\n                    if (zenZoneService.visible) {\n                        return;\n                    }\n\n                    if (isError) {\n                        return;\n                    }\n\n                    resolverService.navigate(linkObj);\n                }}\n            >\n                <div className={styles.cellLinkType}>\n                    {iconsMap[linkObj.type]}\n                </div>\n                <Tooltip showIfEllipsis title={linkObj.name} asChild>\n                    <span className={styles.cellLinkUrl}>{linkObj.name}</span>\n                </Tooltip>\n            </div>\n            <div className={styles.cellLinkOperations}>\n                {copyPermission && (\n                    <div\n                        className={clsx(styles.cellLinkOperation, { [styles.cellLinkOperationError]: isError })}\n                        onClick={() => {\n                            if (isError) {\n                                return;\n                            }\n                            if (linkObj.type !== SheetHyperLinkType.URL) {\n                                const url = new URL(window.location.href);\n                                url.hash = linkObj.url.slice(1);\n                                navigator.clipboard.writeText(url.href);\n                            } else {\n                                navigator.clipboard.writeText(linkObj.url);\n                            }\n                            messageService.show({\n                                content: localeService.t('hyperLink.message.coped'),\n                                type: MessageType.Info,\n                            });\n                        }}\n                    >\n                        <Tooltip placement=\"bottom\" title={localeService.t('hyperLink.popup.copy')}>\n                            <CopySingle />\n                        </Tooltip>\n\n                    </div>\n                )}\n                {editPermission && (\n                    <>\n                        <div\n                            className={styles.cellLinkOperation}\n                            onClick={() => {\n                                commandService.executeCommand(OpenHyperLinkEditPanelOperation.id, {\n                                    unitId,\n                                    subUnitId,\n                                    row,\n                                    col,\n                                    customRangeId: customRange.rangeId,\n                                    type,\n                                });\n                            }}\n                        >\n                            <Tooltip placement=\"bottom\" title={localeService.t('hyperLink.popup.edit')}>\n                                <WriteSingle />\n                            </Tooltip>\n                        </div>\n                        <div\n                            className={styles.cellLinkOperation}\n                            onClick={() => {\n                                const commandId = (type === HyperLinkEditSourceType.EDITING || type === HyperLinkEditSourceType.ZEN_EDITOR) ? CancelRichHyperLinkCommand.id : CancelHyperLinkCommand.id;\n                                if (commandService.syncExecuteCommand(commandId, {\n                                    unitId,\n                                    subUnitId,\n                                    id: customRange.rangeId,\n                                    row,\n                                    column: col,\n                                    documentId: type === HyperLinkEditSourceType.ZEN_EDITOR ?\n                                        DOCS_ZEN_EDITOR_UNIT_ID_KEY\n                                        : editorBridgeService.getCurrentEditorId(),\n                                })) {\n                                    popupService.hideCurrentPopup(undefined, true);\n                                }\n                            }}\n                        >\n                            <Tooltip placement=\"bottom\" title={localeService.t('hyperLink.popup.cancel')}>\n                                <UnlinkSingle />\n                            </Tooltip>\n                        </div>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport const CellLinkPopup = () => {\n    const popupService = useDependency(SheetsHyperLinkPopupService);\n    const [currentPopup, setCurrentPopup] = useState<IHyperLinkPopup | null>(null);\n    const univerInstanceService = useDependency(IUniverInstanceService);\n\n    useEffect(() => {\n        setCurrentPopup(popupService.currentPopup);\n        const ob = popupService.currentPopup$.subscribe((popup) => {\n            setCurrentPopup(popup);\n        });\n        return () => {\n            ob.unsubscribe();\n        };\n    }, [popupService.currentPopup, popupService.currentPopup$]);\n\n    if (!currentPopup) {\n        return null;\n    }\n    if (currentPopup.showAll) {\n        const workbook = univerInstanceService.getUnit<Workbook>(currentPopup.unitId, UniverInstanceType.UNIVER_SHEET);\n        const worksheet = workbook?.getSheetBySheetId(currentPopup.subUnitId);\n        const cell = worksheet?.getCell(currentPopup.row, currentPopup.col);\n        const customRanges = cell?.p?.body?.customRanges;\n        return customRanges?.length\n            ? (\n                <div>\n                    {customRanges.map((customRange) => {\n                        return <CellLinkPopupPure key={customRange.rangeId} {...currentPopup} customRange={customRange} />;\n                    })}\n                </div>\n            )\n            : null;\n    }\n    return <CellLinkPopupPure {...currentPopup} />;\n};\n\nCellLinkPopup.componentKey = 'univer.sheet.cell-link-popup';\n", "export default {\n  \"cellLink\": \"univer-cell-link\",\n  \"cellLinkType\": \"univer-cell-link-type\",\n  \"cellLinkContent\": \"univer-cell-link-content\",\n  \"cellLinkContentError\": \"univer-cell-link-content-error\",\n  \"cellLinkUrl\": \"univer-cell-link-url\",\n  \"cellLinkOperations\": \"univer-cell-link-operations\",\n  \"cellLinkOperation\": \"univer-cell-link-operation\",\n  \"cellLinkOperationError\": \"univer-cell-link-operation-error\"\n};import \"ni:sha-256;NFkBOgzwLHJzhuOSkp62wioM3Z5Z9fvi-V5oOvXzpdI\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DocumentDataModel, ICustomRange, IDisposable, INeedCheckDisposable, ITextRange, Nullable, Workbook } from '@univerjs/core';\nimport type { IBoundRectNoAngle } from '@univerjs/engine-render';\nimport type { ISheetLocationBase } from '@univerjs/sheets';\nimport type { ICanvasPopup } from '@univerjs/sheets-ui';\nimport { BuildTextUtils, CustomRangeType, Disposable, DOCS_NORMAL_EDITOR_UNIT_ID_KEY, DOCS_ZEN_EDITOR_UNIT_ID_KEY, Inject, Injector, IUniverInstanceService, UniverInstanceType } from '@univerjs/core';\nimport { DocSelectionManagerService } from '@univerjs/docs';\nimport { calcDocRangePositions, DocCanvasPopManagerService } from '@univerjs/docs-ui';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { getCustomRangePosition, getEditingCustomRangePosition, IEditorBridgeService, SheetCanvasPopManagerService } from '@univerjs/sheets-ui';\nimport { IZenZoneService } from '@univerjs/ui';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { HyperLinkEditSourceType } from '../types/enums/edit-source';\nimport { CellLinkEdit } from '../views/CellLinkEdit';\nimport { CellLinkPopup } from '../views/CellLinkPopup';\n\nexport interface IHyperLinkPopup {\n    unitId: string;\n    subUnitId: string;\n    disposable: INeedCheckDisposable;\n    row: number;\n    col: number;\n    editPermission?: boolean;\n    copyPermission?: boolean;\n    customRange?: Nullable<ICustomRange>;\n    type: HyperLinkEditSourceType;\n    showAll?: boolean;\n}\n\ninterface IHyperLinkEditing {\n    unitId: string;\n    subUnitId: string;\n    row: number;\n    col: number;\n    customRangeId?: string;\n    type: HyperLinkEditSourceType;\n}\n\nconst isEqualLink = (a: IHyperLinkPopupOptions, b: Omit<IHyperLinkPopup, 'disposable' | 'editPermission'>) => {\n    return (\n        a.unitId === b.unitId\n        && a.subUnitId === b.subUnitId\n        && a.row === b.row\n        && a.col === b.col\n        && a.customRange?.rangeId === b.customRange?.rangeId\n        && a.type === b.type\n    );\n};\n\ninterface IHyperLinkPopupOptions extends ISheetLocationBase {\n    editPermission?: boolean;\n    copyPermission?: boolean;\n    customRange?: Nullable<ICustomRange>;\n    customRangeRect?: Nullable<IBoundRectNoAngle>;\n    showAll?: boolean;\n    type: HyperLinkEditSourceType;\n}\n\nexport class SheetsHyperLinkPopupService extends Disposable {\n    private _currentPopup: IHyperLinkPopup | null = null;\n    private _currentPopup$ = new Subject<IHyperLinkPopup | null>();\n    currentPopup$ = this._currentPopup$.asObservable();\n    private _currentEditingPopup: Nullable<IDisposable> = null;\n\n    private _currentEditing$ = new BehaviorSubject<(IHyperLinkEditing & { customRange?: ICustomRange; label?: string }) | null>(null);\n    currentEditing$ = this._currentEditing$.asObservable();\n\n    private _isKeepVisible: boolean = false;\n\n    get currentPopup() {\n        return this._currentPopup;\n    }\n\n    get currentEditing() {\n        return this._currentEditing$.getValue();\n    }\n\n    constructor(\n        @Inject(SheetCanvasPopManagerService) private readonly _sheetCanvasPopManagerService: SheetCanvasPopManagerService,\n        @Inject(Injector) private readonly _injector: Injector,\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @IEditorBridgeService private readonly _editorBridgeService: IEditorBridgeService,\n        @Inject(DocSelectionManagerService) private readonly _textSelectionManagerService: DocSelectionManagerService,\n        @Inject(DocCanvasPopManagerService) private readonly _docCanvasPopManagerService: DocCanvasPopManagerService,\n        @IZenZoneService private readonly _zenZoneService: IZenZoneService\n    ) {\n        super();\n\n        this.disposeWithMe(() => {\n            this.hideCurrentPopup();\n            this.endEditing();\n\n            this._currentEditing$.complete();\n            this._currentPopup$.complete();\n        });\n    }\n\n    public setIsKeepVisible(v: boolean) {\n        this._isKeepVisible = v;\n    }\n\n    public getIsKeepVisible() {\n        return this._isKeepVisible;\n    }\n\n    showPopup(location: IHyperLinkPopupOptions) {\n        if (this._currentPopup && isEqualLink(location, this._currentPopup)) {\n            return;\n        }\n\n        this.hideCurrentPopup(undefined, true);\n        if (location.type !== HyperLinkEditSourceType.ZEN_EDITOR && this._zenZoneService.visible) {\n            return;\n        }\n        const currentEditing = this._currentEditing$.getValue();\n        if (currentEditing && isEqualLink(location, currentEditing)) {\n            return;\n        }\n\n        const { unitId, subUnitId, row, col, customRangeRect, customRange } = location;\n        let disposable: Nullable<INeedCheckDisposable>;\n        const popup: ICanvasPopup = {\n            componentKey: CellLinkPopup.componentKey,\n            direction: 'bottom',\n            onClickOutside: () => {\n                this.hideCurrentPopup();\n            },\n            onClick: () => {\n                this.hideCurrentPopup(location.type, true);\n            },\n        };\n        if (location.type === HyperLinkEditSourceType.EDITING) {\n            if (!customRange) {\n                return;\n            }\n            disposable = customRangeRect && this._sheetCanvasPopManagerService.attachPopupToAbsolutePosition(\n                customRangeRect,\n                popup\n            );\n        } else if (location.type === HyperLinkEditSourceType.ZEN_EDITOR) {\n            if (!customRange) {\n                return;\n            }\n            disposable = this._docCanvasPopManagerService.attachPopupToRange(\n                {\n                    startOffset: customRange.startIndex,\n                    endOffset: customRange.endIndex + 1,\n                    collapsed: false,\n                },\n                popup,\n                DOCS_ZEN_EDITOR_UNIT_ID_KEY\n            );\n        } else {\n            if (location.showAll) {\n                disposable = this._sheetCanvasPopManagerService.attachPopupToCell(location.row, location.col, popup, unitId, subUnitId);\n            } else {\n                if (!customRange) {\n                    return;\n                }\n\n                disposable = customRangeRect && this._sheetCanvasPopManagerService.attachPopupByPosition(\n                    customRangeRect,\n                    popup,\n                    location\n                );\n            }\n        }\n\n        if (disposable) {\n            this._currentPopup = {\n                unitId,\n                subUnitId,\n                disposable,\n                row,\n                col,\n                editPermission: !!location.editPermission,\n                copyPermission: !!location.copyPermission,\n                customRange,\n                type: location.type,\n                showAll: location.showAll,\n            };\n            this._currentPopup$.next(this._currentPopup);\n        }\n    }\n\n    hideCurrentPopup(type?: HyperLinkEditSourceType, force?: boolean) {\n        if (!this._currentPopup) {\n            return;\n        }\n\n        if (((!type || type === this._currentPopup.type) && this._currentPopup.disposable.canDispose()) || force) {\n            this._currentPopup?.disposable?.dispose();\n            this._currentPopup = null;\n            this._currentPopup$.next(null);\n        }\n    }\n\n    private _getEditingRange(): Nullable<ITextRange & { label: string }> {\n        const visible = this._editorBridgeService.isVisible().visible;\n        const state = this._editorBridgeService.getEditCellState();\n        if (visible && state) {\n            const textRange = this._textSelectionManagerService.getActiveTextRange();\n            const body = state.documentLayoutObject.documentModel?.getBody();\n            if (!body) {\n                return null;\n            }\n            if (!textRange || textRange.collapsed) {\n                return {\n                    startOffset: 0,\n                    endOffset: body.dataStream.length - 2,\n                    collapsed: body.dataStream.length - 2 === 0,\n                    label: BuildTextUtils.transform.getPlainText(body.dataStream),\n                };\n            }\n            const links = BuildTextUtils.customRange.getCustomRangesInterestsWithSelection(textRange, body.customRanges?.filter((i) => i.rangeType === CustomRangeType.HYPERLINK) ?? []);\n            let start = textRange.startOffset;\n            let end = textRange.endOffset;\n            links.forEach((link) => {\n                start = Math.min(start, link.startIndex);\n                end = Math.max(end, link.endIndex + 1);\n            });\n            return {\n                startOffset: start,\n                endOffset: end,\n                collapsed: start === end,\n                label: BuildTextUtils.transform.getPlainText(body.dataStream.slice(start, end)),\n            };\n        }\n\n        return null;\n    }\n\n    private get _editPopup() {\n        const popup: ICanvasPopup = {\n            componentKey: CellLinkEdit.componentKey,\n            direction: 'vertical',\n            onClickOutside: () => {\n                this.endEditing();\n            },\n            onContextMenu: () => {\n                this.endEditing();\n            },\n            hiddenType: 'hide',\n        };\n        return popup;\n    }\n\n    startAddEditing(link: IHyperLinkEditing) {\n        const { unitId, subUnitId, type } = link;\n        if (type === HyperLinkEditSourceType.ZEN_EDITOR) {\n            const document: Nullable<DocumentDataModel> = this._univerInstanceService.getUnit(DOCS_ZEN_EDITOR_UNIT_ID_KEY, UniverInstanceType.UNIVER_DOC);\n            if (!document) {\n                return;\n            }\n            const range = this._textSelectionManagerService.getActiveTextRange();\n            if (!range) {\n                return;\n            }\n            this._currentEditingPopup = this._docCanvasPopManagerService.attachPopupToRange(\n                range,\n                this._editPopup,\n                DOCS_ZEN_EDITOR_UNIT_ID_KEY\n            );\n            const label = document.getBody()?.dataStream.slice(range.startOffset, range.endOffset);\n            this._currentEditing$.next({\n                ...link,\n                label,\n            });\n        } else if (type === HyperLinkEditSourceType.EDITING) {\n            const range = this._getEditingRange();\n\n            if (!range) {\n                return;\n            }\n\n            this._textSelectionManagerService.replaceDocRanges([{ ...range }], { unitId: DOCS_NORMAL_EDITOR_UNIT_ID_KEY, subUnitId: DOCS_NORMAL_EDITOR_UNIT_ID_KEY });\n            const currentRender = this._injector.get(IRenderManagerService).getRenderById(DOCS_NORMAL_EDITOR_UNIT_ID_KEY);\n            if (!currentRender) {\n                return;\n            }\n            const rects = calcDocRangePositions(range, currentRender);\n            if (!rects?.length) {\n                return;\n            }\n            this._currentEditingPopup = this._sheetCanvasPopManagerService.attachPopupToAbsolutePosition(\n                rects.pop()!,\n                this._editPopup,\n                unitId,\n                subUnitId\n            );\n\n            this._currentEditing$.next({\n                ...link,\n                label: range?.label ?? '',\n            });\n        } else {\n            this._currentEditingPopup = this._sheetCanvasPopManagerService.attachPopupToCell(\n                link.row,\n                link.col,\n                this._editPopup,\n                unitId,\n                subUnitId\n            );\n            const workbook = this._univerInstanceService.getUnit<Workbook>(unitId, UniverInstanceType.UNIVER_SHEET);\n            const worksheet = workbook?.getSheetBySheetId(subUnitId);\n            const cell = worksheet?.getCellRaw(link.row, link.col);\n            this._currentEditing$.next({\n                ...link,\n                label: cell?.p ? BuildTextUtils.transform.getPlainText(cell.p.body?.dataStream ?? '') : (cell?.v ?? '').toString(),\n            });\n        }\n    }\n\n    // eslint-disable-next-line complexity, max-lines-per-function\n    startEditing(link: Required<IHyperLinkEditing>) {\n        this._currentEditingPopup?.dispose();\n        this.hideCurrentPopup(undefined, true);\n\n        const { unitId, subUnitId } = link;\n        let customRange;\n        let label;\n        if (link.type === HyperLinkEditSourceType.ZEN_EDITOR) {\n            const document: Nullable<DocumentDataModel> = this._univerInstanceService.getUnit(DOCS_ZEN_EDITOR_UNIT_ID_KEY, UniverInstanceType.UNIVER_DOC);\n            customRange = document?.getBody()?.customRanges?.find((range) => range.rangeId === link.customRangeId);\n            label = customRange ? document?.getBody()?.dataStream.slice(customRange.startIndex, customRange.endIndex + 1) : '';\n            if (!customRange || !label) {\n                return;\n            }\n            this._textSelectionManagerService.replaceTextRanges([\n                {\n                    startOffset: customRange.startIndex,\n                    endOffset: customRange.endIndex + 1,\n                },\n            ]);\n            this._currentEditingPopup = this._docCanvasPopManagerService.attachPopupToRange(\n                {\n                    startOffset: customRange.startIndex,\n                    endOffset: customRange.endIndex,\n                    collapsed: false,\n                },\n                this._editPopup,\n                DOCS_ZEN_EDITOR_UNIT_ID_KEY\n            );\n        } else if (link.type === HyperLinkEditSourceType.EDITING) {\n            const customRangeInfo = getEditingCustomRangePosition(this._injector, link.unitId, link.subUnitId, link.row, link.col, link.customRangeId);\n            if (!customRangeInfo || !customRangeInfo.rects?.length) {\n                return;\n            }\n            customRange = customRangeInfo.customRange;\n            label = customRangeInfo.label;\n            this._textSelectionManagerService.replaceTextRanges([\n                {\n                    startOffset: customRange.startIndex,\n                    endOffset: customRange.endIndex + 1,\n                },\n            ]);\n            this._currentEditingPopup = this._sheetCanvasPopManagerService.attachPopupToAbsolutePosition(\n                customRangeInfo.rects.pop()!,\n                this._editPopup,\n                unitId,\n                subUnitId\n            );\n        } else {\n            const workbook = this._univerInstanceService.getUnit<Workbook>(unitId, UniverInstanceType.UNIVER_SHEET);\n            const worksheet = workbook?.getSheetBySheetId(subUnitId);\n            const cell = worksheet?.getCellRaw(link.row, link.col);\n            const style = workbook?.getStyles().getStyleByCell(cell);\n            const tr = style?.tr;\n\n            const customRangeInfo = getCustomRangePosition(this._injector, link.unitId, link.subUnitId, link.row, link.col, link.customRangeId);\n            if (!customRangeInfo || !customRangeInfo.rects?.length) {\n                return;\n            }\n            customRange = customRangeInfo.customRange;\n            label = customRangeInfo.label;\n            if (tr) {\n                this._currentEditingPopup = this._sheetCanvasPopManagerService.attachPopupToCell(\n                    link.row,\n                    link.col,\n                    this._editPopup,\n                    unitId,\n                    subUnitId\n                );\n            } else {\n                this._currentEditingPopup = this._sheetCanvasPopManagerService.attachPopupByPosition(\n                    customRangeInfo.rects.pop()!,\n                    this._editPopup,\n                    {\n                        unitId,\n                        subUnitId,\n                        row: link.row,\n                        col: link.col,\n                    }\n                );\n            }\n        }\n        this._currentEditing$.next({\n            ...link,\n            customRange,\n            label,\n        });\n    }\n\n    endEditing(type?: HyperLinkEditSourceType) {\n        if (this.getIsKeepVisible()) {\n            return;\n        }\n        const current = this._currentEditing$.getValue();\n        if (current && (!type || type === current.type)) {\n            this._currentEditingPopup?.dispose();\n            this._currentEditing$.next(null);\n        }\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DocumentDataModel, IAccessor, Workbook, Worksheet } from '@univerjs/core';\nimport { DataValidationType, IUniverInstanceService, UniverInstanceType } from '@univerjs/core';\nimport { DocSelectionManagerService } from '@univerjs/docs';\nimport { SheetsSelectionsService } from '@univerjs/sheets';\nimport { SheetDataValidationModel } from '@univerjs/sheets-data-validation';\n\nexport enum DisableLinkType {\n    ALLOWED = 0,\n    DISABLED_BY_CELL = 1,\n    ALLOW_ON_EDITING = 2,\n}\nconst disables = new Set<string>([\n    DataValidationType.CHECKBOX,\n    DataValidationType.LIST,\n    DataValidationType.LIST_MULTIPLE,\n]);\n\nexport const getShouldDisableCellLink = (accessor: IAccessor, worksheet: Worksheet, row: number, col: number) => {\n    const cell = worksheet.getCell(row, col);\n    if (cell?.f || cell?.si) {\n        return DisableLinkType.DISABLED_BY_CELL;\n    }\n\n    if (cell?.p?.body?.customBlocks?.length) {\n        return DisableLinkType.DISABLED_BY_CELL;\n    }\n\n    const dataValidationModel = accessor.has(SheetDataValidationModel) ? accessor.get(SheetDataValidationModel) : null;\n    const rule = dataValidationModel?.getRuleByLocation(worksheet.getUnitId(), worksheet.getSheetId(), row, col);\n    if (rule && disables.has(rule.type)) {\n        return true;\n    }\n\n    if (cell?.p?.drawingsOrder?.length) {\n        return DisableLinkType.ALLOW_ON_EDITING;\n    }\n\n    return DisableLinkType.ALLOWED;\n};\n\nexport const getShouldDisableCurrentCellLink = (accessor: IAccessor) => {\n    const unit = accessor.get(IUniverInstanceService).getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n    if (!unit) {\n        return true;\n    }\n    const worksheet = unit.getActiveSheet();\n    const selections = accessor.get(SheetsSelectionsService).getCurrentSelections();\n    if (!selections.length) {\n        return true;\n    }\n    const row = selections[0].range.startRow;\n    const col = selections[0].range.startColumn;\n    return getShouldDisableCellLink(accessor, worksheet, row, col) === DisableLinkType.DISABLED_BY_CELL;\n};\n\nexport const shouldDisableAddLink = (accessor: IAccessor) => {\n    const textSelectionService = accessor.get(DocSelectionManagerService);\n    const univerInstanceService = accessor.get(IUniverInstanceService);\n    const textRanges = textSelectionService.getTextRanges();\n    if (!textRanges?.length) {\n        return true;\n    }\n\n    const doc = univerInstanceService.getCurrentUnitForType<DocumentDataModel>(UniverInstanceType.UNIVER_DOC);\n    if (!doc || textRanges.every((range) => range.collapsed)) {\n        return true;\n    }\n\n    const body = doc.getSelfOrHeaderFooterModel(textRanges[0].segmentId).getBody();\n    if (!body) {\n        return true;\n    }\n\n    return false;\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommandType, DOCS_ZEN_EDITOR_UNIT_ID_KEY, type ICommand, ICommandService, IUniverInstanceService } from '@univerjs/core';\nimport { getSheetCommandTarget, type ISheetCommandSharedParams, SheetsSelectionsService } from '@univerjs/sheets';\nimport { IEditorBridgeService } from '@univerjs/sheets-ui';\nimport { SheetsHyperLinkPopupService } from '../../services/popup.service';\nimport { HyperLinkEditSourceType } from '../../types/enums/edit-source';\nimport { getShouldDisableCurrentCellLink } from '../../utils';\n\nexport interface IOpenHyperLinkEditPanelOperationParams extends ISheetCommandSharedParams {\n    row: number;\n    col: number;\n    customRangeId?: string;\n    type: HyperLinkEditSourceType;\n}\n\nexport const OpenHyperLinkEditPanelOperation: ICommand<IOpenHyperLinkEditPanelOperationParams> = {\n    type: CommandType.OPERATION,\n    id: 'sheet.operation.open-hyper-link-edit-panel',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n\n        const popupService = accessor.get(SheetsHyperLinkPopupService);\n        if (!params.customRangeId) {\n            popupService.startAddEditing(params);\n        } else {\n            popupService.startEditing(params as Required<IOpenHyperLinkEditPanelOperationParams>);\n        }\n        return true;\n    },\n};\n\nexport const CloseHyperLinkPopupOperation: ICommand = {\n    type: CommandType.OPERATION,\n    id: 'sheet.operation.close-hyper-link-popup',\n    handler(accessor) {\n        const popupService = accessor.get(SheetsHyperLinkPopupService);\n\n        popupService.endEditing();\n        return true;\n    },\n};\n\nexport const InsertHyperLinkOperation: ICommand = {\n    type: CommandType.OPERATION,\n    id: 'sheet.operation.insert-hyper-link',\n    handler(accessor) {\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n        const target = getSheetCommandTarget(univerInstanceService);\n        const editorBridgeService = accessor.get(IEditorBridgeService);\n        if (!target) {\n            return false;\n        }\n        const commandService = accessor.get(ICommandService);\n        const selectionManagerService = accessor.get(SheetsSelectionsService);\n        const selection = selectionManagerService.getCurrentLastSelection();\n        if (!selection) {\n            return false;\n        }\n\n        const row = selection.range.startRow;\n        const col = selection.range.startColumn;\n        const visible = editorBridgeService.isVisible();\n        const isZenEditor = univerInstanceService.getFocusedUnit()?.getUnitId() === DOCS_ZEN_EDITOR_UNIT_ID_KEY;\n        return commandService.executeCommand(OpenHyperLinkEditPanelOperation.id, {\n            unitId: target.unitId,\n            subUnitId: target.subUnitId,\n            row,\n            col,\n            type: isZenEditor ?\n                HyperLinkEditSourceType.ZEN_EDITOR\n                : visible.visible ? HyperLinkEditSourceType.EDITING : HyperLinkEditSourceType.VIEWING,\n        });\n    },\n};\n\nexport const InsertHyperLinkToolbarOperation: ICommand = {\n    type: CommandType.OPERATION,\n    id: 'sheet.operation.insert-hyper-link-toolbar',\n    handler(accessor) {\n        if (getShouldDisableCurrentCellLink(accessor)) {\n            return false;\n        }\n        const commandService = accessor.get(ICommandService);\n        const popupService = accessor.get(SheetsHyperLinkPopupService);\n        if (popupService.currentEditing) {\n            return commandService.executeCommand(CloseHyperLinkPopupOperation.id);\n        } else {\n            return commandService.executeCommand(InsertHyperLinkOperation.id);\n        }\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DocumentDataModel, IAccessor, Nullable } from '@univerjs/core';\nimport type { IEditorBridgeServiceVisibleParam } from '@univerjs/sheets-ui';\nimport type { IMenuItem, IShortcutItem } from '@univerjs/ui';\nimport { DOCS_FORMULA_BAR_EDITOR_UNIT_ID_KEY, DOCS_NORMAL_EDITOR_UNIT_ID_KEY, DOCS_ZEN_EDITOR_UNIT_ID_KEY, IUniverInstanceService, UniverInstanceType } from '@univerjs/core';\nimport { DocSelectionRenderService } from '@univerjs/docs-ui';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { getSheetCommandTarget, RangeProtectionPermissionEditPoint, WorkbookEditablePermission, WorksheetEditPermission, WorksheetInsertHyperlinkPermission, WorksheetSetCellValuePermission } from '@univerjs/sheets';\nimport { getCurrentRangeDisable$, IEditorBridgeService, whenSheetEditorFocused } from '@univerjs/sheets-ui';\nimport { getMenuHiddenObservable, KeyCode, MenuItemType, MetaKeys } from '@univerjs/ui';\nimport { combineLatest, map, of, switchMap } from 'rxjs';\nimport { InsertHyperLinkOperation, InsertHyperLinkToolbarOperation } from '../commands/operations/popup.operations';\nimport { DisableLinkType, getShouldDisableCellLink, shouldDisableAddLink } from '../utils';\n\nconst getEditingLinkDisable$ = (accessor: IAccessor, unitId = DOCS_ZEN_EDITOR_UNIT_ID_KEY) => {\n    const univerInstanceService = accessor.get(IUniverInstanceService);\n    const docSelctionService = accessor.get(IRenderManagerService).getRenderById(unitId)?.with(DocSelectionRenderService);\n    if (!docSelctionService) {\n        return of(true);\n    }\n\n    return docSelctionService.textSelectionInner$.pipe(map(() => {\n        const editorBridgeService = accessor.get(IEditorBridgeService);\n        const state = editorBridgeService.getEditCellState();\n        if (!state) {\n            return true;\n        }\n        const target = getSheetCommandTarget(univerInstanceService, { unitId: state.unitId, subUnitId: state.sheetId });\n        if (!target?.worksheet) {\n            return true;\n        }\n\n        if (getShouldDisableCellLink(accessor, target.worksheet, state.row, state.column) === 1) {\n            return true;\n        }\n\n        return shouldDisableAddLink(accessor);\n    }));\n};\n\nconst getLinkDisable$ = (accessor: IAccessor) => {\n    const disableRange$ = getCurrentRangeDisable$(accessor, { workbookTypes: [WorkbookEditablePermission], worksheetTypes: [WorksheetEditPermission, WorksheetSetCellValuePermission, WorksheetInsertHyperlinkPermission], rangeTypes: [RangeProtectionPermissionEditPoint] }, true);\n    const univerInstanceService = accessor.get(IUniverInstanceService);\n    const editorBridgeService = accessor.has(IEditorBridgeService) ? accessor.get(IEditorBridgeService) : null;\n\n    const disableCell$ = editorBridgeService?.currentEditCellState$.pipe(\n        map((state) => {\n            if (!state) {\n                return (DisableLinkType.DISABLED_BY_CELL);\n            }\n            const target = getSheetCommandTarget(univerInstanceService, { unitId: state.unitId, subUnitId: state.sheetId });\n            if (!target) {\n                return (DisableLinkType.DISABLED_BY_CELL);\n            }\n\n            return (getShouldDisableCellLink(accessor, target.worksheet, state.row, state.column));\n        }),\n        switchMap((disableCell) => {\n            if (disableCell === DisableLinkType.DISABLED_BY_CELL) {\n                return of(true);\n            }\n\n            const isEditing$ = (editorBridgeService ? editorBridgeService.visible$ : of<Nullable<IEditorBridgeServiceVisibleParam>>(null));\n            return combineLatest([isEditing$, univerInstanceService.getCurrentTypeOfUnit$<DocumentDataModel>(UniverInstanceType.UNIVER_DOC)]).pipe(\n                switchMap(\n                    ([editing, focusingDoc]) => {\n                        return editing?.visible ?\n                            focusingDoc?.getUnitId() === DOCS_FORMULA_BAR_EDITOR_UNIT_ID_KEY\n                                ? of(true)\n                                : getEditingLinkDisable$(accessor, DOCS_NORMAL_EDITOR_UNIT_ID_KEY)\n                            : of(disableCell !== DisableLinkType.ALLOWED);\n                    }\n                )\n            );\n        })\n    ) ?? of(true);\n\n    return disableCell$.pipe(\n        switchMap((disableCell) => {\n            if (disableCell) {\n                return of(true);\n            } else {\n                return disableRange$;\n            }\n        })\n    );\n};\n\nconst linkMenu = {\n    commandId: InsertHyperLinkOperation.id,\n    type: MenuItemType.BUTTON,\n    title: 'hyperLink.menu.add',\n    icon: 'LinkSingle',\n};\n\nexport const genZenEditorMenuId = (id: string) => `${id}-zen-editor`;\n\nexport const insertLinkMenuFactory = (accessor: IAccessor) => {\n    return {\n        ...linkMenu,\n        id: linkMenu.commandId,\n        hidden$: getMenuHiddenObservable(accessor, UniverInstanceType.UNIVER_SHEET),\n        disabled$: getLinkDisable$(accessor),\n        // disabled$: getObservableWithExclusiveRange$(accessor, getCurrentRangeDisable$(accessor, { workbookTypes: [WorkbookEditablePermission], worksheetTypes: [WorksheetEditPermission, WorksheetSetCellValuePermission, WorksheetInsertHyperlinkPermission], rangeTypes: [RangeProtectionPermissionEditPoint] })),\n    } as IMenuItem;\n};\n\nexport const zenEditorInsertLinkMenuFactory = (accessor: IAccessor) => {\n    return {\n        ...linkMenu,\n        id: genZenEditorMenuId(linkMenu.commandId),\n        hidden$: getMenuHiddenObservable(accessor, UniverInstanceType.UNIVER_DOC, DOCS_ZEN_EDITOR_UNIT_ID_KEY),\n        disabled$: getEditingLinkDisable$(accessor),\n    } as IMenuItem;\n};\n\nconst linkToolbarMenu = {\n    tooltip: 'hyperLink.form.addTitle',\n    commandId: InsertHyperLinkToolbarOperation.id,\n    type: MenuItemType.BUTTON,\n    icon: 'LinkSingle',\n};\n\nexport const insertLinkMenuToolbarFactory = (accessor: IAccessor) => {\n    return {\n        ...linkToolbarMenu,\n        id: linkToolbarMenu.commandId,\n        hidden$: getMenuHiddenObservable(accessor, UniverInstanceType.UNIVER_SHEET),\n        disabled$: getLinkDisable$(accessor),\n    };\n};\n\nexport const zenEditorInsertLinkMenuToolbarFactory = (accessor: IAccessor) => {\n    return {\n        ...linkToolbarMenu,\n        id: genZenEditorMenuId(linkToolbarMenu.commandId),\n        hidden$: getMenuHiddenObservable(accessor, UniverInstanceType.UNIVER_DOC, DOCS_ZEN_EDITOR_UNIT_ID_KEY),\n        disabled$: getEditingLinkDisable$(accessor),\n    };\n};\n\nexport const InsertLinkShortcut: IShortcutItem = {\n    id: InsertHyperLinkToolbarOperation.id,\n    binding: KeyCode.K | MetaKeys.CTRL_COMMAND,\n    preconditions: whenSheetEditorFocused,\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommandInfo } from '@univerjs/core';\nimport { Disposable, ICommandService, Inject, LocaleService } from '@univerjs/core';\nimport { RangeProtectionPermissionEditPoint, SheetPermissionCheckController, WorkbookEditablePermission, WorksheetEditPermission, WorksheetInsertHyperlinkPermission, WorksheetSetCellValuePermission } from '@univerjs/sheets';\nimport { InsertLinkShortcut } from './menu';\n\nexport class SheetsHyperLinkPermissionController extends Disposable {\n    constructor(\n        @Inject(LocaleService) private _localeService: LocaleService,\n        @ICommandService private readonly _commandService: ICommandService,\n        @Inject(SheetPermissionCheckController) private readonly _sheetPermissionCheckController: SheetPermissionCheckController\n    ) {\n        super();\n\n        this._commandExecutedListener();\n    }\n\n    private _commandExecutedListener() {\n        this.disposeWithMe(\n            this._commandService.beforeCommandExecuted((command: ICommandInfo) => {\n                if (command.id === InsertLinkShortcut.id) {\n                    const permission = this._sheetPermissionCheckController.permissionCheckWithRanges({\n                        workbookTypes: [WorkbookEditablePermission],\n                        rangeTypes: [RangeProtectionPermissionEditPoint],\n                        worksheetTypes: [WorksheetEditPermission, WorksheetSetCellValuePermission, WorksheetInsertHyperlinkPermission],\n                    });\n                    if (!permission) {\n                        this._sheetPermissionCheckController.blockExecuteWithoutPermission(this._localeService.t('permission.dialog.hyperLinkErr'));\n                    }\n                }\n            })\n        );\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable, Workbook } from '@univerjs/core';\nimport type { ISheetLocationBase } from '@univerjs/sheets';\nimport type { Subscription } from 'rxjs';\nimport { CustomRangeType, Disposable, DOCS_NORMAL_EDITOR_UNIT_ID_KEY, DOCS_ZEN_EDITOR_UNIT_ID_KEY, ICommandService, Inject, IPermissionService, IUniverInstanceService, Rectangle, UniverInstanceType } from '@univerjs/core';\nimport { DocSelectionManagerService } from '@univerjs/docs';\nimport { DocEventManagerService } from '@univerjs/docs-ui';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport {\n    ClearSelectionAllCommand,\n    ClearSelectionContentCommand,\n    ClearSelectionFormatCommand,\n    RangeProtectionPermissionEditPoint,\n    RangeProtectionPermissionViewPoint,\n    SheetPermissionCheckController,\n    WorkbookCopyPermission,\n    WorkbookEditablePermission,\n    WorkbookViewPermission,\n    WorksheetCopyPermission,\n    WorksheetEditPermission,\n    WorksheetInsertHyperlinkPermission,\n    WorksheetViewPermission,\n} from '@univerjs/sheets';\nimport { HoverManagerService, HoverRenderController, IEditorBridgeService, SheetSkeletonManagerService } from '@univerjs/sheets-ui';\nimport { IZenZoneService } from '@univerjs/ui';\nimport { debounceTime, map, Observable, switchMap } from 'rxjs';\nimport { SheetsHyperLinkPopupService } from '../services/popup.service';\nimport { HyperLinkEditSourceType } from '../types/enums/edit-source';\n\nexport class SheetsHyperLinkPopupController extends Disposable {\n    constructor(\n        @Inject(HoverManagerService) private readonly _hoverManagerService: HoverManagerService,\n        @Inject(SheetsHyperLinkPopupService) private readonly _sheetsHyperLinkPopupService: SheetsHyperLinkPopupService,\n        @Inject(IRenderManagerService) private readonly _renderManagerService: IRenderManagerService,\n        @Inject(IPermissionService) private readonly _permissionService: IPermissionService,\n        @Inject(SheetPermissionCheckController) private readonly _sheetPermissionCheckController: SheetPermissionCheckController,\n        @ICommandService private readonly _commandService: ICommandService,\n        @IEditorBridgeService private readonly _editorBridgeService: IEditorBridgeService,\n        @Inject(DocSelectionManagerService) private readonly _textSelectionManagerService: DocSelectionManagerService,\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @IZenZoneService private readonly _zenZoneService: IZenZoneService\n    ) {\n        super();\n\n        this._initHoverListener();\n        this._initCommandListener();\n        this._initHoverEditingListener();\n        this._initTextSelectionListener();\n        this._initZenEditor();\n    }\n\n    private _getLinkPermission(location: ISheetLocationBase) {\n        const { unitId, subUnitId, row: currentRow, col: currentCol } = location;\n        const workbook = this._univerInstanceService.getUnit<Workbook>(unitId, UniverInstanceType.UNIVER_SHEET);\n        const worksheet = workbook?.getSheetBySheetId(subUnitId);\n        if (!worksheet) {\n            return {\n                viewPermission: false,\n                editPermission: false,\n                copyPermission: false,\n            };\n        }\n\n        const viewPermission = this._sheetPermissionCheckController.permissionCheckWithRanges({\n            workbookTypes: [WorkbookViewPermission],\n            worksheetTypes: [WorksheetViewPermission],\n            rangeTypes: [RangeProtectionPermissionViewPoint],\n        }, [{ startRow: currentRow, startColumn: currentCol, endRow: currentRow, endColumn: currentCol }]);\n\n        const editPermission = this._sheetPermissionCheckController.permissionCheckWithRanges({\n            workbookTypes: [WorkbookEditablePermission],\n            worksheetTypes: [WorksheetEditPermission, WorksheetInsertHyperlinkPermission],\n            rangeTypes: [RangeProtectionPermissionEditPoint],\n        }, [{ startRow: currentRow, startColumn: currentCol, endRow: currentRow, endColumn: currentCol }]);\n\n        const copyPermission = this._permissionService.composePermission([new WorkbookCopyPermission(unitId).id, new WorksheetCopyPermission(unitId, subUnitId).id]).every((permission) => permission.value);\n\n        return {\n            viewPermission,\n            editPermission,\n            copyPermission,\n        };\n    }\n\n    private _initHoverListener() {\n        this.disposeWithMe(\n            // hover over not editing cell\n            this._hoverManagerService.currentRichText$.pipe(debounceTime(200)).subscribe((currentCell) => {\n                if (!currentCell) {\n                    this._sheetsHyperLinkPopupService.hideCurrentPopup();\n                    return;\n                }\n                const { unitId, subUnitId, row, col } = currentCell;\n                const renderer = this._renderManagerService.getRenderById(unitId);\n                if (!renderer) {\n                    return;\n                }\n                const workbook = this._univerInstanceService.getUnit<Workbook>(unitId, UniverInstanceType.UNIVER_SHEET);\n                const worksheet = workbook?.getSheetBySheetId(subUnitId);\n                if (!worksheet) {\n                    return;\n                }\n                const hoverRenderController = renderer.with(HoverRenderController);\n                if (!hoverRenderController.active) {\n                    this._sheetsHyperLinkPopupService.hideCurrentPopup(HyperLinkEditSourceType.VIEWING);\n                    return;\n                }\n\n                const skeleton = renderer?.with(SheetSkeletonManagerService)\n                    .getSkeletonParam(subUnitId)\n                    ?.skeleton;\n\n                const currentCol = col;\n                const currentRow = row;\n                let targetRow = currentRow;\n                let targetCol = currentCol;\n\n                if (skeleton) {\n                    skeleton.overflowCache.forValue((row, col, value) => {\n                        if (Rectangle.contains(value, { startColumn: currentCol, endColumn: currentCol, startRow: currentRow, endRow: currentRow })) {\n                            targetRow = row;\n                            targetCol = col;\n                        }\n                    });\n                }\n\n                const { viewPermission, editPermission, copyPermission } = this._getLinkPermission(currentCell);\n\n                if (!viewPermission) {\n                    this._sheetsHyperLinkPopupService.hideCurrentPopup();\n                    return;\n                }\n                const cell = worksheet.getCellStyleOnly(targetRow, targetCol);\n                const style = workbook!.getStyles().getStyleByCell(cell);\n                const tr = style?.tr?.a;\n\n                if (!tr && !currentCell.customRange) {\n                    this._sheetsHyperLinkPopupService.hideCurrentPopup();\n                    return;\n                }\n\n                this._sheetsHyperLinkPopupService.showPopup({\n                    row: targetRow,\n                    col: targetCol,\n                    editPermission,\n                    copyPermission,\n                    customRange: currentCell.customRange,\n                    customRangeRect: currentCell.rect,\n                    type: HyperLinkEditSourceType.VIEWING,\n                    unitId,\n                    subUnitId,\n                    showAll: Boolean(tr),\n                });\n            })\n        );\n    }\n\n    private _initHoverEditingListener() {\n        let subscribe: Nullable<Subscription> = null;\n        this.disposeWithMe(\n            this._editorBridgeService.currentEditCellState$\n                .pipe(switchMap((state) => this._editorBridgeService.visible$.pipe(map((visible) => ({ visible, state })))))\n                .subscribe(({ visible, state }) => {\n                    if (!state) {\n                        return;\n                    }\n                    if (state.editorUnitId !== DOCS_NORMAL_EDITOR_UNIT_ID_KEY) {\n                        return;\n                    }\n\n                    if (!visible.visible) {\n                        subscribe?.unsubscribe();\n                        this._sheetsHyperLinkPopupService.hideCurrentPopup(HyperLinkEditSourceType.EDITING);\n                        this._sheetsHyperLinkPopupService.endEditing(HyperLinkEditSourceType.EDITING);\n                        return;\n                    }\n\n                    const { editorUnitId, unitId, sheetId, row, column } = state;\n                    const renderer = this._renderManagerService.getRenderById(editorUnitId);\n                    if (!renderer) {\n                        return;\n                    }\n                    const { editPermission, viewPermission, copyPermission } = this._getLinkPermission({ unitId, subUnitId: sheetId, row, col: column });\n                    const docEventService = renderer.with(DocEventManagerService);\n                    if (!viewPermission) {\n                        return;\n                    }\n                    subscribe?.unsubscribe();\n                    subscribe = docEventService.hoverCustomRanges$.pipe(debounceTime(200)).subscribe((customRanges) => {\n                        const customRange = customRanges.find((customRange) => customRange.range.rangeType === CustomRangeType.HYPERLINK);\n                        if (!customRange) {\n                            this._sheetsHyperLinkPopupService.hideCurrentPopup();\n                            return;\n                        }\n                        const rect = customRange.rects[customRange.rects.length - 1];\n                        const skeleton = this._renderManagerService.getRenderById(unitId)\n                            ?.with(SheetSkeletonManagerService)\n                            .getSkeletonParam(sheetId)\n                            ?.skeleton;\n                        if (!skeleton || !rect) {\n                            return;\n                        }\n                        const canvasClientRect = renderer.engine.getCanvasElement().getBoundingClientRect();\n\n                        this._sheetsHyperLinkPopupService.showPopup({\n                            unitId,\n                            subUnitId: sheetId,\n                            row,\n                            col: column,\n                            customRange: customRange.range,\n                            customRangeRect: {\n                                left: rect.left + canvasClientRect.left,\n                                top: rect.top + canvasClientRect.top,\n                                bottom: rect.bottom + canvasClientRect.top,\n                                right: rect.right + canvasClientRect.left,\n                            },\n                            editPermission,\n                            copyPermission,\n                            type: HyperLinkEditSourceType.EDITING,\n                        });\n                    });\n                })\n        );\n\n        this.disposeWithMe(() => {\n            subscribe?.unsubscribe();\n        });\n    }\n\n    private _initZenEditor() {\n        this.disposeWithMe(\n            this._zenZoneService.visible$.subscribe((visible) => {\n                if (visible) {\n                    this._sheetsHyperLinkPopupService.hideCurrentPopup(HyperLinkEditSourceType.VIEWING);\n                    this._sheetsHyperLinkPopupService.hideCurrentPopup(HyperLinkEditSourceType.EDITING);\n                    this._sheetsHyperLinkPopupService.endEditing(HyperLinkEditSourceType.EDITING);\n                    this._sheetsHyperLinkPopupService.hideCurrentPopup(HyperLinkEditSourceType.VIEWING);\n                } else {\n                    this._sheetsHyperLinkPopupService.hideCurrentPopup(HyperLinkEditSourceType.ZEN_EDITOR);\n                    this._sheetsHyperLinkPopupService.endEditing(HyperLinkEditSourceType.ZEN_EDITOR);\n                }\n            })\n        );\n\n        this.disposeWithMe(\n            this._univerInstanceService.focused$.pipe(\n                switchMap((id) => {\n                    const render = id === DOCS_ZEN_EDITOR_UNIT_ID_KEY ? this._renderManagerService.getRenderById(id) : null;\n                    if (render) {\n                        return render.with(DocEventManagerService).hoverCustomRanges$.pipe(debounceTime(200));\n                    }\n\n                    return new Observable<null>((sub) => {\n                        sub.next(null);\n                    });\n                })\n            ).subscribe((value) => {\n                const range = value?.find((range) => range.range.rangeType === CustomRangeType.HYPERLINK);\n                const state = this._editorBridgeService.getEditCellState();\n                if (range && state) {\n                    const { unitId, sheetId, row, column } = state;\n                    const { editPermission, viewPermission, copyPermission } = this._getLinkPermission({ unitId, subUnitId: sheetId, row, col: column });\n                    if (viewPermission) {\n                        this._sheetsHyperLinkPopupService.showPopup({\n                            type: HyperLinkEditSourceType.ZEN_EDITOR,\n                            unitId,\n                            subUnitId: sheetId,\n                            row,\n                            col: column,\n                            customRange: range.range,\n                            editPermission,\n                            copyPermission,\n                        });\n                    }\n                } else {\n                    this._sheetsHyperLinkPopupService.hideCurrentPopup(HyperLinkEditSourceType.ZEN_EDITOR);\n                }\n            })\n        );\n    }\n\n    private _initTextSelectionListener() {\n        this.disposeWithMe(\n            this._textSelectionManagerService.textSelection$.subscribe((selection) => {\n                if (selection && selection.unitId === DOCS_NORMAL_EDITOR_UNIT_ID_KEY) {\n                    this._sheetsHyperLinkPopupService.endEditing(HyperLinkEditSourceType.EDITING);\n                }\n            })\n        );\n    }\n\n    private _initCommandListener() {\n        const HIDE_COMMAND_LIST = [ClearSelectionContentCommand.id, ClearSelectionAllCommand.id, ClearSelectionFormatCommand.id];\n        this.disposeWithMe(this._commandService.onCommandExecuted((command) => {\n            if (HIDE_COMMAND_LIST.includes(command.id)) {\n                this._sheetsHyperLinkPopupService.hideCurrentPopup();\n            }\n        }));\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Workbook } from '@univerjs/core';\nimport type { IRenderContext, IRenderModule } from '@univerjs/engine-render';\nimport { Disposable, Inject, InterceptorEffectEnum } from '@univerjs/core';\nimport { INTERCEPTOR_POINT, SheetInterceptorService } from '@univerjs/sheets';\nimport { HyperLinkModel } from '@univerjs/sheets-hyper-link';\nimport { debounceTime } from 'rxjs';\n\nexport class SheetsHyperLinkRenderController extends Disposable implements IRenderModule {\n    constructor(\n        private readonly _context: IRenderContext<Workbook>,\n        @Inject(HyperLinkModel) private readonly _hyperLinkModel: HyperLinkModel\n    ) {\n        super();\n        this._initSkeletonChange();\n    }\n\n    private _initSkeletonChange() {\n        const markSkeletonDirty = () => {\n            this._context.mainComponent?.makeForceDirty();\n        };\n\n        this.disposeWithMe(this._hyperLinkModel.linkUpdate$.pipe(debounceTime(16)).subscribe(() => {\n            markSkeletonDirty();\n        }));\n    }\n}\n\nexport class SheetsHyperLinkRenderManagerController extends Disposable {\n    constructor(\n        @Inject(SheetInterceptorService) private readonly _sheetInterceptorService: SheetInterceptorService,\n        @Inject(HyperLinkModel) private readonly _hyperLinkModel: HyperLinkModel\n    ) {\n        super();\n\n        this._initViewModelIntercept();\n    }\n\n    private _initViewModelIntercept() {\n        this.disposeWithMe(\n            this._sheetInterceptorService.intercept(\n                INTERCEPTOR_POINT.CELL_CONTENT,\n                {\n                    effect: InterceptorEffectEnum.Value,\n                    priority: 100,\n                    handler: (cell, pos, next) => {\n                        const { row, col, unitId, subUnitId } = pos;\n                        const link = this._hyperLinkModel.getHyperLinkByLocation(unitId, subUnitId, row, col);\n\n                        if (link) {\n                            return next({\n                                ...cell,\n                                linkUrl: link.payload,\n                                linkId: link.id,\n                            });\n                        }\n\n                        return next(cell);\n                    },\n                }\n            )\n        );\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { MenuSchemaType } from '@univerjs/ui';\nimport { ContextMenuGroup, ContextMenuPosition, RibbonStartGroup } from '@univerjs/ui';\nimport { InsertHyperLinkToolbarOperation } from '../commands/operations/popup.operations';\nimport { genZenEditorMenuId, insertLinkMenuFactory, insertLinkMenuToolbarFactory, zenEditorInsertLinkMenuFactory, zenEditorInsertLinkMenuToolbarFactory } from './menu';\n\nexport const menuSchema: MenuSchemaType = {\n    [RibbonStartGroup.OTHERS]: {\n        [InsertHyperLinkToolbarOperation.id]: {\n            order: 2,\n            menuItemFactory: insertLinkMenuToolbarFactory,\n        },\n        [genZenEditorMenuId(InsertHyperLinkToolbarOperation.id)]: {\n            order: 2,\n            menuItemFactory: zenEditorInsertLinkMenuToolbarFactory,\n        },\n    },\n    [ContextMenuPosition.MAIN_AREA]: {\n        [ContextMenuGroup.OTHERS]: {\n            order: 1,\n            [InsertHyperLinkToolbarOperation.id]: {\n                order: 0,\n                menuItemFactory: insertLinkMenuFactory,\n            },\n            [genZenEditorMenuId(InsertHyperLinkToolbarOperation.id)]: {\n                order: 0,\n                menuItemFactory: zenEditorInsertLinkMenuFactory,\n            },\n        },\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Disposable, ICommandService, Inject, Injector } from '@univerjs/core';\nimport { LinkSingle } from '@univerjs/icons';\nimport { ComponentManager, IMenuManagerService, IShortcutService } from '@univerjs/ui';\nimport { CloseHyperLinkPopupOperation, InsertHyperLinkOperation, InsertHyperLinkToolbarOperation, OpenHyperLinkEditPanelOperation } from '../commands/operations/popup.operations';\nimport { CellLinkEdit } from '../views/CellLinkEdit';\nimport { CellLinkPopup } from '../views/CellLinkPopup';\nimport { InsertLinkShortcut } from './menu';\nimport { menuSchema } from './menu.schema';\n\nexport class SheetsHyperLinkUIController extends Disposable {\n    constructor(\n        @Inject(ComponentManager) private _componentManager: ComponentManager,\n        @ICommandService private _commandService: ICommandService,\n        @IMenuManagerService private readonly _menuManagerService: IMenuManagerService,\n        @Inject(Injector) private _injector: Injector,\n        @Inject(IShortcutService) private _shortcutService: IShortcutService\n    ) {\n        super();\n\n        this._initComponents();\n        this._initCommands();\n        this._initMenus();\n        this._initShortCut();\n    }\n\n    private _initComponents() {\n        ([\n            [CellLinkPopup, CellLinkPopup.componentKey],\n            [CellLinkEdit, CellLinkEdit.componentKey],\n            [LinkSingle, 'LinkSingle'],\n        ] as const).forEach(([comp, key]) => {\n            this._componentManager.register(key, comp);\n        });\n    }\n\n    private _initCommands() {\n        [\n            OpenHyperLinkEditPanelOperation,\n            CloseHyperLinkPopupOperation,\n            InsertHyperLinkOperation,\n            InsertHyperLinkToolbarOperation,\n        ].forEach((command) => {\n            this._commandService.registerCommand(command);\n        });\n    }\n\n    private _initMenus() {\n        this._menuManagerService.mergeMenu(menuSchema);\n    }\n\n    private _initShortCut() {\n        this._shortcutService.registerShortcut(InsertLinkShortcut);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Disposable, Inject } from '@univerjs/core';\nimport { SheetsHyperLinkParserService } from '@univerjs/sheets-hyper-link';\nimport { SheetsHyperLinkResolverService } from '../services/resolver.service';\n\nexport class SheetHyperLinkUrlController extends Disposable {\n    constructor(\n        @Inject(SheetsHyperLinkParserService) private readonly _parserService: SheetsHyperLinkParserService,\n        @Inject(SheetsHyperLinkResolverService) private _resolverService: SheetsHyperLinkResolverService\n    ) {\n        super();\n        this._handleInitUrl();\n    }\n\n    private _handleInitUrl() {\n        const hash = location.hash;\n        if (hash) {\n            const linkInfo = this._parserService.parseHyperLink(hash);\n            this._resolverService.navigate(linkInfo);\n        }\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Dependency, Workbook } from '@univerjs/core';\nimport type { IUniverSheetsHyperLinkUIConfig } from './controllers/config.schema';\nimport { DependentOn, IConfigService, Inject, Injector, merge, Plugin, UniverInstanceType } from '@univerjs/core';\nimport { UniverDocsUIPlugin } from '@univerjs/docs-ui';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { UniverSheetsHyperLinkPlugin } from '@univerjs/sheets-hyper-link';\nimport { SheetsHyperLinkAutoFillController } from './controllers/auto-fill.controller';\nimport { defaultPluginConfig, SHEETS_HYPER_LINK_UI_PLUGIN_CONFIG_KEY } from './controllers/config.schema';\nimport { SheetsHyperLinkCopyPasteController } from './controllers/copy-paste.controller';\nimport { SheetsHyperLinkPermissionController } from './controllers/hyper-link-permission.controller';\nimport { SheetsHyperLinkPopupController } from './controllers/popup.controller';\nimport { SheetsHyperLinkRenderController, SheetsHyperLinkRenderManagerController } from './controllers/render-controllers/render.controller';\nimport { SheetsHyperLinkUIController } from './controllers/ui.controller';\nimport { SheetHyperLinkUrlController } from './controllers/url.controller';\nimport { SheetsHyperLinkPopupService } from './services/popup.service';\nimport { SheetsHyperLinkResolverService } from './services/resolver.service';\nimport { SheetsHyperLinkSidePanelService } from './services/side-panel.service';\nimport { SHEET_HYPER_LINK_UI_PLUGIN } from './types/const';\n\n@DependentOn(UniverSheetsHyperLinkPlugin, UniverDocsUIPlugin)\nexport class UniverSheetsHyperLinkUIPlugin extends Plugin {\n    static override pluginName: string = SHEET_HYPER_LINK_UI_PLUGIN;\n    static override type = UniverInstanceType.UNIVER_SHEET;\n\n    constructor(\n        private readonly _config: Partial<IUniverSheetsHyperLinkUIConfig> = defaultPluginConfig,\n        @Inject(Injector) protected override _injector: Injector,\n        @IConfigService private readonly _configService: IConfigService\n    ) {\n        super();\n\n        // Manage the plugin configuration.\n        const { menu, ...rest } = merge(\n            {},\n            defaultPluginConfig,\n            this._config\n        );\n        if (menu) {\n            this._configService.setConfig('menu', menu, { merge: true });\n        }\n        this._configService.setConfig(SHEETS_HYPER_LINK_UI_PLUGIN_CONFIG_KEY, rest);\n    }\n\n    override onStarting(): void {\n        const dependencies: Dependency[] = [\n            [SheetsHyperLinkResolverService],\n            [SheetsHyperLinkPopupService],\n            [SheetsHyperLinkSidePanelService],\n\n            [SheetsHyperLinkRenderManagerController],\n\n            [SheetsHyperLinkPopupController],\n            [SheetsHyperLinkUIController],\n            [SheetsHyperLinkAutoFillController],\n            [SheetsHyperLinkCopyPasteController],\n            [SheetsHyperLinkPermissionController],\n            [SheetHyperLinkUrlController],\n\n        ];\n        dependencies.forEach((dep) => this._injector.add(dep));\n\n        this._injector.get(SheetsHyperLinkRenderManagerController);\n    }\n\n    override onReady(): void {\n        const renderManager = this._injector.get(IRenderManagerService);\n        renderManager.registerRenderModule<Workbook>(UniverInstanceType.UNIVER_SHEET, [SheetsHyperLinkRenderController] as Dependency);\n\n        this._injector.get(SheetsHyperLinkAutoFillController);\n        this._injector.get(SheetsHyperLinkCopyPasteController);\n        this._injector.get(SheetsHyperLinkUIController);\n    }\n\n    override onRendered(): void {\n        this._injector.get(SheetsHyperLinkPermissionController);\n        this._injector.get(SheetHyperLinkUrlController);\n        this._injector.get(SheetsHyperLinkPopupController);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { MenuConfig } from '@univerjs/ui';\n\nexport const FIND_REPLACE_PLUGIN_CONFIG_KEY = 'find-replace.config';\n\nexport const configSymbol = Symbol(FIND_REPLACE_PLUGIN_CONFIG_KEY);\n\nexport interface IUniverFindReplaceConfig {\n    menu?: MenuConfig;\n}\n\nexport const defaultPluginConfig: IUniverFindReplaceConfig = {};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const FIND_REPLACE_INPUT_FOCUS = 'FIND_REPLACE_INPUT_FOCUS';\n\n/**\n * If find replace panel is focused.\n */\nexport const FIND_REPLACE_DIALOG_FOCUS = 'FIND_REPLACE_DIALOG_FOCUS';\n\n/**\n * If the find replace feature is activated and the replace is revealed.\n */\nexport const FIND_REPLACE_REPLACE_REVEALED = 'FIND_REPLACE_REPLACE_REVEALED';\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IDisposable, Nullable } from '@univerjs/core';\nimport type { Observable } from 'rxjs';\nimport { createIdentifier, Disposable, DisposableCollection, ICommandService, IContextService, Inject, Injector, IUniverInstanceService, toDisposable } from '@univerjs/core';\nimport { RENDER_RAW_FORMULA_KEY } from '@univerjs/engine-render';\nimport { BehaviorSubject, combineLatest, debounceTime, Subject, throttleTime } from 'rxjs';\nimport { FIND_REPLACE_REPLACE_REVEALED } from './context-keys';\n\nexport type FindProgressFn = () => void;\n\nexport interface IFindComplete<T extends IFindMatch = IFindMatch> {\n    results: T[];\n}\n\nexport interface IFindMatch<T = unknown> {\n    provider: string;\n    unitId: string;\n    range: T;\n\n    /** Indicates if the match could be replaced. */\n    replaceable?: boolean;\n}\n\nexport interface IFindMoveParams {\n    /** Go to next (previous) matching in a loop. */\n    loop?: boolean;\n\n    /** If the the selection is on the match and then should stay on the match. */\n    stayIfOnMatch?: boolean;\n\n    /** Go the next selection ignoring the current selection's position. */\n    ignoreSelection?: boolean;\n\n    /**\n     * If this param is true, we should only change matching position without performing focusing.\n     * This usually happens when \"moving\" is triggered when a document's content changes.\n     */\n    noFocus?: boolean;\n}\n\nexport interface IReplaceAllResult {\n    success: number;\n    failure: number;\n}\n\nexport abstract class FindModel extends Disposable {\n    abstract readonly unitId: string;\n\n    /**\n     * Find model should emit new matches from this observable if they changed no matter due to incremental\n     * or document's content changes.\n     */\n    abstract readonly matchesUpdate$: Observable<IFindMatch[]>;\n    abstract readonly activelyChangingMatch$: Observable<IFindMatch>;\n\n    abstract getMatches(): IFindMatch[];\n\n    abstract moveToNextMatch(params?: IFindMoveParams): IFindMatch | null;\n    abstract moveToPreviousMatch(params?: IFindMoveParams): IFindMatch | null;\n\n    /** Replace the currently focused matching if there is one. */\n    abstract replace(replaceString: string): Promise<boolean>;\n\n    /**\n     * Replace all matches. This method would return how many\n     */\n    abstract replaceAll(replaceString: string): Promise<IReplaceAllResult>;\n\n    abstract focusSelection(): void;\n}\n\n/**\n * A provider should be implemented by a business to provide the find results.\n */\nexport interface IFindReplaceProvider {\n    find(query: IFindQuery): Promise<FindModel[]>;\n    terminate(): void;\n}\n\ntype IReplaceableMatch = IFindMatch & { replaceable: boolean };\n\n/**\n * This service works as a core of the find & replace feature.\n */\nexport interface IFindReplaceService {\n    readonly stateUpdates$: Observable<Partial<IFindReplaceState>>;\n    readonly state$: Observable<IFindReplaceState>;\n\n    readonly currentMatch$: Observable<Nullable<IFindMatch>>;\n    /** An observable value of all matches those could be replaced. */\n    readonly replaceables$: Observable<IReplaceableMatch[]>;\n\n    readonly focusSignal$: Observable<void>;\n\n    readonly revealed: boolean;\n    readonly replaceRevealed: boolean;\n\n    /**\n     * Register a find replace provider to the service. The provider is the actual bearer to\n     * perform the find in different kinds of documents or different environments.\n     * @param provider the find replace provider\n     */\n    registerFindReplaceProvider(provider: IFindReplaceProvider): IDisposable;\n\n    /**\n     * Get find string from the internal state.\n     */\n    getFindString(): string;\n\n    /**\n     * Start a find & replace session.\n     * @returns execution result\n     */\n    start(revealReplace?: boolean): boolean;\n\n    /**\n     * Terminate a find session and clear all caches.\n     */\n    terminate(): void;\n\n    /**\n     * Start searching with the current conditions.\n     */\n    find(): void;\n\n    focusFindInput(): void;\n\n    revealReplace(): void;\n    changeFindString(value: string): void;\n    changeInputtingFindString(value: string): void;\n    changeReplaceString(value: string): void;\n    changeCaseSensitive(sensitive: boolean): void;\n    changeMatchesTheWholeCell(wholeCell: boolean): void;\n    changeFindScope(scope: FindScope): void;\n    changeFindDirection(direction: FindDirection): void;\n    changeFindBy(findBy: FindBy): void;\n\n    moveToNextMatch(): void;\n    moveToPreviousMatch(): void;\n\n    replace(): Promise<boolean>;\n    replaceAll(): Promise<IReplaceAllResult>;\n\n    /**\n     * Focus the selection of the current match.\n     */\n    focusSelection(): void;\n\n    getProviders(): Set<IFindReplaceProvider>;\n}\nexport const IFindReplaceService = createIdentifier<IFindReplaceService>('find-replace.service');\n\n/**\n * The find query object with finding options.\n */\nexport interface IFindQuery extends Pick<\n    IFindReplaceState,\n    | 'replaceRevealed'\n    | 'findString'\n    | 'caseSensitive'\n    | 'findBy'\n    | 'findDirection'\n    | 'findScope'\n    | 'matchesTheWholeCell'\n> { }\n\n/**\n *\n * @param statusUpdate\n */\nfunction shouldStateUpdateTriggerResearch(statusUpdate: Partial<IFindReplaceState>): boolean {\n    if (typeof statusUpdate.findString !== 'undefined') return true;\n    if (typeof statusUpdate.inputtingFindString !== 'undefined') return true;\n    if (typeof statusUpdate.findDirection !== 'undefined') return true;\n    if (typeof statusUpdate.matchesTheWholeCell !== 'undefined') return true;\n    if (typeof statusUpdate.caseSensitive !== 'undefined') return true;\n    if (typeof statusUpdate.findScope !== 'undefined') return true;\n    if (typeof statusUpdate.findBy !== 'undefined') return true;\n    return false;\n}\n\n/**\n * This class stores find replace results and provides methods to perform replace or something.\n *\n * It **only** live through a find-replace session and would be disposed when the user\n * close the find replace dialog (considered as session being terminated).\n */\nexport class FindReplaceModel extends Disposable {\n    readonly currentMatch$ = new BehaviorSubject<Nullable<IFindMatch>>(null);\n    readonly replaceables$ = new BehaviorSubject<IReplaceableMatch[]>([]);\n\n    /** All find models returned by providers. */\n    private _findModels: FindModel[] = [];\n\n    /** The find model that the current match is from. */\n    private _matchingModel: FindModel | null = null;\n\n    private _matches: IFindMatch[] = [];\n\n    private _currentSearchingDisposables: Nullable<DisposableCollection> = null;\n\n    get searched(): boolean { return this._findModels.length > 0; }\n\n    constructor(\n        private readonly _state: FindReplaceState,\n        private readonly _providers: Set<IFindReplaceProvider>,\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @ICommandService private readonly _commandService: ICommandService\n    ) {\n        super();\n\n        // should restart finding when the following conditions changed\n        this.disposeWithMe(\n            this._state.stateUpdates$.pipe(throttleTime(200, undefined, { leading: true, trailing: true }))\n                .subscribe(async (stateUpdate) => {\n                    const state = this._state.state;\n                    if (shouldStateUpdateTriggerResearch(stateUpdate)) {\n                        if (state.findString !== '' && !state.replaceRevealed) {\n                            await this._startSearching();\n                            this._state.changeState({ findCompleted: true });\n                        } else if (stateUpdate.replaceRevealed !== true) {\n                            this._stopSearching();\n                        }\n                    }\n                })\n        );\n    }\n\n    override dispose(): void {\n        super.dispose();\n\n        this._stopSearching();\n\n        this.currentMatch$.complete();\n        this.replaceables$.complete();\n\n        // reset all state, including\n        this._state.changeState({ ...createInitFindReplaceState(), revealed: false });\n    }\n\n    async start(): Promise<IFindComplete> {\n        if (!this._state.findString) {\n            return { results: [] };\n        }\n\n        const complete = await this._startSearching();\n        this._state.changeState({ findCompleted: true });\n        return complete;\n    }\n\n    focusSelection(): void {\n        this._matchingModel?.focusSelection();\n    }\n\n    /** Call this method to start a `searching`. */\n    private async _startSearching(): Promise<IFindComplete> {\n        if (!this._state.findString) {\n            return { results: [] };\n        }\n\n        const providers = Array.from(this._providers);\n        const findModels = (this._findModels = (\n            await Promise.all(providers.map((provider) => provider.find({\n                findString: this._state.findString,\n                findDirection: this._state.findDirection,\n                findScope: this._state.findScope,\n                findBy: this._state.findBy,\n                replaceRevealed: this._state.replaceRevealed,\n                caseSensitive: this._state.caseSensitive,\n                matchesTheWholeCell: this._state.matchesTheWholeCell,\n            })))\n        ).flat());\n\n        this._subscribeToModelsChanges(findModels);\n\n        const newMatches = this._matches = findModels.map((c) => c.getMatches()).flat();\n        this.replaceables$.next(newMatches.filter((m) => m.replaceable) as IReplaceableMatch[]);\n\n        if (!newMatches.length) {\n            this._state.changeState({ matchesCount: 0, matchesPosition: 0 });\n            return { results: [] };\n        }\n\n        this._moveToInitialMatch(findModels);\n        this._state.changeState({ matchesCount: newMatches.length });\n        return { results: newMatches };\n    }\n\n    /** Terminate the current searching session, when searching string is empty. */\n    private _stopSearching(): void {\n        this._providers.forEach((provider) => provider.terminate());\n        this._findModels = [];\n        this._matches = [];\n        this._matchingModel = null;\n\n        this._currentSearchingDisposables?.dispose();\n        this._currentSearchingDisposables = null;\n\n        this.currentMatch$.next(null);\n        this.replaceables$.next([]);\n\n        this._state.changeState({\n            findCompleted: false,\n            matchesCount: 0,\n            matchesPosition: 0,\n        });\n    }\n\n    // When a document's content changes, we should reset all matches and try to move to the next match.\n    private _subscribeToModelsChanges(models: FindModel[]): void {\n        const disposables = this._currentSearchingDisposables = new DisposableCollection();\n\n        const matchesUpdateSubscription = combineLatest(models.map((model) => model.matchesUpdate$))\n            .pipe(debounceTime(220))\n            .subscribe(([...allMatches]) => {\n                const newMatches = this._matches = allMatches.flat();\n                if (newMatches.length) {\n                    this._moveToInitialMatch(this._findModels, true);\n                    this._state.changeState({ matchesCount: newMatches.length });\n                    this.replaceables$.next(newMatches.filter((m) => m.replaceable) as IReplaceableMatch[]);\n                } else {\n                    this._state.changeState({ matchesCount: 0, matchesPosition: 0 });\n                    this.replaceables$.next([]);\n                }\n            });\n\n        models.forEach((model) => disposables.add(toDisposable(model.activelyChangingMatch$.subscribe((match) => {\n            const index = this._matches.findIndex((m) => m === match);\n            this._state.changeState({ matchesPosition: index + 1 });\n        }))));\n\n        disposables.add(toDisposable(matchesUpdateSubscription));\n    }\n\n    async replace(): Promise<boolean> {\n        if (!this._matchingModel) {\n            return false;\n        }\n\n        return this._matchingModel.replace(this._state.replaceString);\n    }\n\n    async replaceAll(): Promise<IReplaceAllResult> {\n        const result = await Promise.all(this._findModels.map((m) => m.replaceAll(this._state.replaceString)))\n            .then((results) => results.reduce((acc, cur) => {\n                acc.success += cur.success;\n                acc.failure += cur.failure;\n                return acc;\n            }, { success: 0, failure: 0 }));\n\n        if (result.failure === 0) {\n            this._stopSearching();\n        }\n\n        return result;\n    }\n\n    getCurrentMatch(): Nullable<IFindMatch> {\n        return this._state.matchesPosition > 0 ? this._matches[this._state.matchesPosition - 1] : null;\n    }\n\n    private _markMatch(match: IFindMatch): void {\n        const index = this._matches.findIndex((value) => value === match);\n        this.currentMatch$.next(match);\n        this._state.changeState({ matchesPosition: index + 1 });\n    }\n\n    moveToNextMatch() {\n        if (!this._matchingModel) {\n            return;\n        }\n\n        const loopInCurrentUnit = this._findModels.length === 1;\n        const nextMatch = this._matchingModel.moveToNextMatch({ loop: loopInCurrentUnit });\n        if (nextMatch) {\n            this._markMatch(nextMatch);\n            return nextMatch;\n        } else {\n            const currentModelIndex = this._findModels.findIndex((m) => m === this._matchingModel);\n            return this._moveToNextUnitMatch(currentModelIndex);\n        }\n    }\n\n    private _moveToNextUnitMatch(startingIndex: number) {\n        const l = this._findModels.length;\n        for (let i = (startingIndex + 1) % l; i !== startingIndex;) {\n            const nextPositionModel = this._findModels[i];\n            const nextMatch = nextPositionModel.moveToNextMatch({ ignoreSelection: true });\n            if (nextMatch) {\n                this._matchingModel = nextPositionModel;\n                this._markMatch(nextMatch);\n                return nextMatch;\n            }\n\n            i = (i + 1) % l;\n        }\n\n        if (this._matchingModel) {\n            const nextMatch = this._matchingModel.moveToNextMatch({ ignoreSelection: true });\n            if (nextMatch) this._markMatch(nextMatch);\n            return nextMatch;\n        }\n    }\n\n    moveToPreviousMatch() {\n        if (!this._matchingModel) {\n            return;\n        }\n\n        const loopInCurrentUnit = this._findModels.length === 1;\n        const nextMatch = this._matchingModel.moveToPreviousMatch({ loop: loopInCurrentUnit });\n        if (nextMatch) {\n            const index = this._matches.findIndex((value) => value === nextMatch);\n            this.currentMatch$.next(nextMatch);\n            this._state.changeState({ matchesPosition: index + 1 });\n            return nextMatch;\n        } else {\n            const l = this._findModels.length;\n            const currentModelIndex = this._findModels.findIndex((m) => m === this._matchingModel);\n            for (let i = (currentModelIndex - 1 + l) % l; i !== currentModelIndex;) {\n                const nextPositionModel = this._findModels[i];\n                const nextMatch = nextPositionModel.moveToPreviousMatch({ ignoreSelection: true });\n                if (nextMatch) {\n                    this._matchingModel = nextPositionModel;\n                    this._markMatch(nextMatch);\n                    return nextMatch;\n                }\n\n                i = (i - 1) % l;\n            }\n\n            const nextMatch = this._matchingModel.moveToPreviousMatch({ ignoreSelection: true });\n            if (nextMatch) this._markMatch(nextMatch);\n            return nextMatch;\n        }\n    }\n\n    private _moveToInitialMatch(findModels: FindModel[], noFocus = false): number {\n        const focusedUnitId = this._univerInstanceService.getFocusedUnit()?.getUnitId();\n        if (!focusedUnitId) {\n            return -1;\n        }\n\n        const i = findModels.findIndex((model) => model.unitId === focusedUnitId);\n        if (i !== -1) {\n            this._matchingModel = findModels[i];\n            const nextMatch = this._matchingModel.moveToNextMatch({ stayIfOnMatch: true, noFocus });\n            if (nextMatch) {\n                this._markMatch(nextMatch);\n                return i;\n            }\n        }\n\n        this._moveToNextUnitMatch(i);\n        return 0;\n    }\n}\n\nexport enum FindDirection {\n    /** Default. */\n    ROW = 'row',\n    COLUMN = 'column',\n}\n\nexport enum FindBy {\n    VALUE = 'value',\n    FORMULA = 'formula',\n}\n\nexport enum FindScope {\n    /** Default. */\n    SUBUNIT = 'subunit',\n    /** Find the scope in the current unit. */\n    UNIT = 'unit',\n}\n\nexport interface IFindReplaceState {\n    revealed: boolean;\n\n    /** The string user inputs in the input box. */\n    findString: string;\n    inputtingFindString: string;\n    replaceString?: string;\n\n    /** Indicates if is in replacing mode. */\n    replaceRevealed: boolean;\n\n    /** The currently focused match's index (1-based). */\n    matchesPosition: number;\n    /** The number of all matches. */\n    matchesCount: number;\n\n    /** Indicates if an user triggered finding process is progressed. */\n    findCompleted: boolean;\n\n    caseSensitive: boolean;\n    matchesTheWholeCell: boolean;\n    findDirection: FindDirection;\n    findScope: FindScope;\n    findBy: FindBy;\n}\n\nexport function createInitFindReplaceState(): IFindReplaceState {\n    return {\n        caseSensitive: false,\n        findBy: FindBy.VALUE,\n        findCompleted: false,\n        findDirection: FindDirection.ROW,\n        findScope: FindScope.SUBUNIT,\n        findString: '',\n        inputtingFindString: '',\n        matchesCount: 0,\n        matchesPosition: 0,\n        matchesTheWholeCell: false,\n        replaceRevealed: false,\n        replaceString: '',\n        revealed: true,\n    };\n}\n\n/**\n * This class stores find replace options state. These state are stored\n * here instead of the React component so we can change state from\n * operations.\n */\nexport class FindReplaceState {\n    private readonly _stateUpdates$ = new Subject<Partial<IFindReplaceState>>();\n    readonly stateUpdates$: Observable<Partial<IFindReplaceState>> = this._stateUpdates$.asObservable();\n\n    private readonly _state$ = new BehaviorSubject<IFindReplaceState>(createInitFindReplaceState());\n    readonly state$ = this._state$.asObservable();\n    get state(): IFindReplaceState {\n        return this._state$.getValue();\n    }\n\n    private _findString = '';\n    private _inputtingFindString = '';\n    private _replaceString = '';\n    private _revealed = false;\n    private _replaceRevealed = false;\n    private _matchesPosition = 0;\n    private _matchesCount = 0;\n    private _caseSensitive = true;\n    private _matchesTheWholeCell = false;\n    private _findDirection = FindDirection.ROW;\n    private _findScope = FindScope.SUBUNIT;\n    private _findBy = FindBy.VALUE;\n    private _findCompleted = false;\n\n    get inputtingFindString(): string { return this._inputtingFindString; }\n    get findString(): string { return this._findString; }\n    get revealed(): boolean { return this._revealed; }\n    get replaceRevealed(): boolean { return this._replaceRevealed; }\n    get matchesPosition(): number { return this._matchesPosition; }\n    get matchesCount(): number { return this._matchesCount; }\n    get replaceString(): string { return this._replaceString; }\n    get caseSensitive(): boolean { return this._caseSensitive; }\n    get matchesTheWholeCell(): boolean { return this._matchesTheWholeCell; }\n    get findDirection(): FindDirection { return this._findDirection; }\n    get findScope(): FindScope { return this._findScope; }\n    get findBy(): FindBy { return this._findBy; }\n    get findCompleted(): boolean { return this._findCompleted; }\n\n    // eslint-disable-next-line max-lines-per-function, complexity\n    changeState(changes: Partial<IFindReplaceState>): void {\n        let changed = false;\n        const changedState: Partial<IFindReplaceState> = {};\n\n        if (typeof changes.findString !== 'undefined' && changes.findString !== this._findString) {\n            this._findString = changes.findString;\n            changedState.findString = this._findString;\n            changed = true;\n        }\n\n        if (typeof changes.revealed !== 'undefined' && changes.revealed !== this._revealed) {\n            this._revealed = changes.revealed;\n            changedState.revealed = changes.revealed;\n            changed = true;\n        }\n\n        if (typeof changes.replaceRevealed !== 'undefined' && changes.replaceRevealed !== this._replaceRevealed) {\n            this._replaceRevealed = changes.replaceRevealed;\n            changedState.replaceRevealed = changes.replaceRevealed;\n            changed = true;\n        }\n\n        if (typeof changes.replaceString !== 'undefined' && changes.replaceString !== this._replaceString) {\n            this._replaceString = changes.replaceString;\n            changedState.replaceString = changes.replaceString;\n            changed = true;\n        }\n\n        if (typeof changes.matchesCount !== 'undefined' && changes.matchesCount !== this._matchesCount) {\n            this._matchesCount = changes.matchesCount;\n            changedState.matchesCount = changes.matchesCount;\n            changed = true;\n        }\n\n        if (typeof changes.matchesPosition !== 'undefined' && changes.matchesPosition !== this._matchesPosition) {\n            this._matchesPosition = changes.matchesPosition;\n            changedState.matchesPosition = changes.matchesPosition;\n            changed = true;\n        }\n\n        if (typeof changes.findBy !== 'undefined' && changes.findBy !== this._findBy) {\n            this._findBy = changes.findBy;\n            changedState.findBy = changes.findBy;\n            changed = true;\n        }\n\n        if (typeof changes.findScope !== 'undefined' && changes.findScope !== this._findScope) {\n            this._findScope = changes.findScope;\n            changedState.findScope = changes.findScope;\n            changed = true;\n        }\n\n        if (typeof changes.findDirection !== 'undefined' && changes.findDirection !== this._findDirection) {\n            this._findDirection = changes.findDirection;\n            changedState.findDirection = changes.findDirection;\n            changed = true;\n        }\n\n        if (typeof changes.caseSensitive !== 'undefined' && changes.caseSensitive !== this._caseSensitive) {\n            this._caseSensitive = changes.caseSensitive;\n            changedState.caseSensitive = changes.caseSensitive;\n            changed = true;\n        }\n\n        if (typeof changes.matchesTheWholeCell !== 'undefined' && changes.matchesTheWholeCell !== this._matchesTheWholeCell) {\n            this._matchesTheWholeCell = changes.matchesTheWholeCell;\n            changedState.matchesTheWholeCell = changes.matchesTheWholeCell;\n            changed = true;\n        }\n\n        if (typeof changes.inputtingFindString !== 'undefined' && changes.inputtingFindString !== this._inputtingFindString) {\n            this._inputtingFindString = changes.inputtingFindString;\n            changedState.inputtingFindString = changes.inputtingFindString;\n            changed = true;\n        }\n\n        if (typeof changes.findCompleted !== 'undefined' && changes.findCompleted !== this._findCompleted) {\n            this._findCompleted = changes.findCompleted;\n            changedState.findCompleted = changes.findCompleted;\n            changed = true;\n        }\n\n        if (changed) {\n            this._state$.next({\n                caseSensitive: this._caseSensitive,\n                findBy: this._findBy,\n                findCompleted: this._findCompleted,\n                findDirection: this._findDirection,\n                findScope: this._findScope,\n                findString: this._findString,\n                inputtingFindString: this._inputtingFindString,\n                matchesCount: this._matchesCount,\n                matchesPosition: this._matchesPosition,\n                matchesTheWholeCell: this._matchesTheWholeCell,\n                replaceRevealed: this._replaceRevealed,\n                revealed: this._revealed,\n            });\n\n            this._stateUpdates$.next(changedState);\n        }\n    }\n}\n\n// Since Univer' Find&Replace features works in a plugin manner,\n// each `IFind&Replace` provider should have their own implementations\n// of 'state' and 'model'.\n\nexport class FindReplaceService extends Disposable implements IFindReplaceService {\n    private readonly _providers = new Set<IFindReplaceProvider>();\n    private readonly _state = new FindReplaceState();\n    private _model: Nullable<FindReplaceModel>;\n\n    private readonly _currentMatch$ = new BehaviorSubject<Nullable<IFindMatch>>(null);\n    readonly currentMatch$ = this._currentMatch$.asObservable();\n\n    private readonly _replaceables$ = new BehaviorSubject<IReplaceableMatch[]>([]);\n    readonly replaceables$ = this._replaceables$.asObservable();\n\n    private readonly _focusSignal$ = new Subject<void>();\n    readonly focusSignal$ = this._focusSignal$.asObservable();\n\n    get stateUpdates$() { return this._state.stateUpdates$; }\n    get state$() { return this._state.state$; }\n    get revealed(): boolean { return this._state.revealed; }\n    get replaceRevealed(): boolean { return this._state.replaceRevealed; }\n\n    constructor(@Inject(Injector) private readonly _injector: Injector, @IContextService private readonly _contextService: IContextService) {\n        super();\n    }\n\n    override dispose(): void {\n        super.dispose();\n\n        this._currentMatch$.next(null);\n        this._currentMatch$.complete();\n\n        this._replaceables$.next([]);\n        this._replaceables$.complete();\n\n        this._focusSignal$.complete();\n    }\n\n    getProviders(): Set<IFindReplaceProvider> {\n        return this._providers;\n    }\n\n    getCurrentMatch(): Nullable<IFindMatch> {\n        return this._model?.getCurrentMatch();\n    }\n\n    getFindString(): string {\n        return this._state.findString;\n    }\n\n    changeFindString(findString: string): void {\n        this._state.changeState({ findString });\n    }\n\n    focusFindInput(): void {\n        this._focusSignal$.next();\n    }\n\n    changeInputtingFindString(value: string): void {\n        if (value) {\n            this._state.changeState({ inputtingFindString: value });\n        } else {\n            this._state.changeState({ inputtingFindString: '', findString: '' });\n        }\n    }\n\n    changeReplaceString(replaceString: string): void {\n        this._state.changeState({ replaceString });\n    }\n\n    changeMatchesTheWholeCell(matchesTheWholeCell: boolean): void {\n        this._state.changeState({ matchesTheWholeCell });\n    }\n\n    changeCaseSensitive(caseSensitive: boolean): void {\n        this._state.changeState({ caseSensitive });\n    }\n\n    changeFindBy(findBy: FindBy): void {\n        this._state.changeState({ findBy });\n        this._toggleDisplayRawFormula(findBy === FindBy.FORMULA);\n    }\n\n    changeFindScope(scope: FindScope): void {\n        this._state.changeState({ findScope: scope });\n    }\n\n    changeFindDirection(direction: FindDirection): void {\n        this._state.changeState({ findDirection: direction });\n    }\n\n    moveToNextMatch(): void {\n        if (!this._model) {\n            return;\n        }\n\n        if (this._state.replaceRevealed && !this._model.searched) {\n            this._state.changeState({ findString: this._state.inputtingFindString });\n            this._model.start();\n        } else {\n            this._model.moveToNextMatch();\n        }\n\n        this._focusSignal$.next();\n    }\n\n    moveToPreviousMatch(): void {\n        if (!this._model) {\n            return;\n        }\n\n        if (this._state.replaceRevealed && !this._model.searched) {\n            this._state.changeState({ findString: this._state.inputtingFindString });\n            this._model.start();\n        } else {\n            this._model.moveToPreviousMatch();\n        }\n\n        this._focusSignal$.next();\n    }\n\n    async replace(): Promise<boolean> {\n        if (!this._model) {\n            return false;\n        }\n\n        return this._model.replace();\n    }\n\n    async replaceAll(): Promise<IReplaceAllResult> {\n        if (!this._model) {\n            throw new Error('[FindReplaceService] replaceAll: model is not initialized!');\n        }\n\n        return this._model.replaceAll();\n    }\n\n    revealReplace(): void {\n        this._state.changeState({ replaceRevealed: true, inputtingFindString: this._state.findString });\n        this._toggleRevealReplace(true);\n    }\n\n    focusSelection(): void {\n        this._model?.focusSelection();\n    }\n\n    start(revealReplace = false): boolean {\n        if (this._providers.size === 0) {\n            return false;\n        }\n\n        this._model = this._injector.createInstance(FindReplaceModel, this._state, this._providers);\n        this._model.currentMatch$.subscribe((match) => this._currentMatch$.next(match));\n        this._model.replaceables$.subscribe((replaceables) => this._replaceables$.next(replaceables));\n\n        const newState = createInitFindReplaceState();\n        if (revealReplace) {\n            newState.replaceRevealed = true;\n        }\n\n        this._state.changeState(newState);\n        this._toggleRevealReplace(revealReplace);\n        return true;\n    }\n\n    find(): void {\n        this._model?.start();\n    }\n\n    terminate(): void {\n        this._model?.dispose();\n        this._model = null;\n\n        this._toggleDisplayRawFormula(false);\n        this._toggleRevealReplace(false);\n    }\n\n    registerFindReplaceProvider(provider: IFindReplaceProvider): IDisposable {\n        this._providers.add(provider);\n        return toDisposable(() => this._providers.delete(provider));\n    }\n\n    private _toggleRevealReplace(revealReplace: boolean): void {\n        this._contextService.setContextValue(FIND_REPLACE_REPLACE_REVEALED, revealReplace);\n    }\n\n    private _toggleDisplayRawFormula(force: boolean): void {\n        this._contextService.setContextValue(RENDER_RAW_FORMULA_KEY, force);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand } from '@univerjs/core';\nimport { CommandType, LocaleService } from '@univerjs/core';\nimport { IConfirmService, IMessageService } from '@univerjs/ui';\nimport { MessageType } from '@univerjs/design';\n\nimport { IFindReplaceService } from '../../services/find-replace.service';\n\nexport const ReplaceCurrentMatchCommand: ICommand = {\n    id: 'ui.command.replace-current-match',\n    type: CommandType.COMMAND,\n    handler: (accessor) => {\n        const findReplaceService = accessor.get(IFindReplaceService);\n        return findReplaceService.replace();\n    },\n};\n\nconst CONFIRM_REPLACE_ALL_ID = 'CONFIRM_REPLACE_ALL';\n\nexport const ReplaceAllMatchesCommand: ICommand = {\n    id: 'ui.command.replace-all-matches',\n    type: CommandType.COMMAND,\n    handler: async (accessor) => {\n        const confirmService = accessor.get(IConfirmService);\n        const localeService = accessor.get(LocaleService);\n        const messageService = accessor.get(IMessageService);\n\n        if (!await confirmService.confirm({\n            id: CONFIRM_REPLACE_ALL_ID,\n            title: { title: localeService.t('find-replace.replace.confirm.title') },\n            cancelText: localeService.t('button.cancel'),\n            confirmText: localeService.t('button.confirm'),\n        })) {\n            return false;\n        }\n\n        const findReplaceService = accessor.get(IFindReplaceService);\n        const result = await findReplaceService.replaceAll();\n        const { success, failure } = result;\n\n        if (failure > 0) {\n            if (success === 0) {\n                messageService.show({\n                    type: MessageType.Error,\n                    content: localeService.t('find-replace.replace.all-failure'),\n                });\n            } else {\n                messageService.show({\n                    type: MessageType.Warning,\n                    content: localeService.t('find-replace.replace.partial-success', `${success}`, `${failure}`),\n                });\n            }\n\n            return false;\n        }\n\n        messageService.show({\n            type: MessageType.Success,\n            content: localeService.t('find-replace.replace.all-success', `${success}`),\n        });\n\n        return true;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IOperation } from '@univerjs/core';\nimport { CommandType } from '@univerjs/core';\n\nimport { IFindReplaceService } from '../../services/find-replace.service';\n\nexport const OpenFindDialogOperation: IOperation = {\n    id: 'ui.operation.open-find-dialog',\n    type: CommandType.OPERATION,\n    handler: (accessor) => {\n        const findReplaceService = accessor.get(IFindReplaceService);\n        if (!findReplaceService.revealed) {\n            findReplaceService.start();\n        } else {\n            findReplaceService.focusFindInput();\n        }\n\n        return true;\n    },\n};\n\nexport const OpenReplaceDialogOperation: IOperation = {\n    id: 'ui.operation.open-replace-dialog',\n    type: CommandType.OPERATION,\n    handler: (accessor) => {\n        const findReplaceService = accessor.get(IFindReplaceService);\n        if (!findReplaceService.revealed) {\n            findReplaceService.start(true);\n        } else if (!findReplaceService.replaceRevealed) {\n            findReplaceService.revealReplace();\n        } else {\n            findReplaceService.focusFindInput();\n        }\n\n        return true;\n    },\n};\n\nexport const GoToNextMatchOperation: IOperation = {\n    type: CommandType.OPERATION,\n    id: 'ui.operation.go-to-next-match',\n    handler: (accessor) => {\n        const findReplaceService = accessor.get(IFindReplaceService);\n        findReplaceService.moveToNextMatch();\n        return true;\n    },\n};\n\nexport const GoToPreviousMatchOperation: IOperation = {\n    type: CommandType.OPERATION,\n    id: 'ui.operation.go-to-previous-match',\n    handler: (accessor) => {\n        const findReplaceService = accessor.get(IFindReplaceService);\n        findReplaceService.moveToPreviousMatch();\n        return true;\n    },\n};\n\nexport const FocusSelectionOperation: IOperation = {\n    type: CommandType.OPERATION,\n    id: 'ui.operation.focus-selection',\n    handler: (accessor) => {\n        const findReplaceService = accessor.get(IFindReplaceService);\n        findReplaceService.focusSelection();\n        return true;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IDisposable, Nullable } from '@univerjs/core';\nimport type { ForwardedRef } from 'react';\nimport { ICommandService, IContextService, LocaleService } from '@univerjs/core';\nimport { Button, Checkbox, FormDualColumnLayout, FormLayout, Input, MessageType, Select } from '@univerjs/design';\nimport { ILayoutService, IMessageService, useDependency, useObservable } from '@univerjs/ui';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport { fromEvent } from 'rxjs';\n\nimport { ReplaceAllMatchesCommand, ReplaceCurrentMatchCommand } from '../../commands/commands/replace.command';\nimport { OpenReplaceDialogOperation } from '../../commands/operations/find-replace.operation';\nimport { FIND_REPLACE_DIALOG_FOCUS, FIND_REPLACE_INPUT_FOCUS } from '../../services/context-keys';\nimport { FindBy, FindDirection, FindScope, IFindReplaceService } from '../../services/find-replace.service';\nimport styles from './FindReplaceDialog.module.less';\n\nimport { SearchInput } from './SearchInput';\n\ninterface ISubFormRef {\n    focus(): void;\n    selectHasFocus(): boolean;\n}\n\nfunction useFindInputFocus(findReplaceService: IFindReplaceService, ref: ForwardedRef<unknown>) {\n    const focus = useCallback(() => {\n        (document.querySelector('.univer-find-input input') as Nullable<HTMLInputElement>)?.focus();\n    }, []);\n\n    const selectHasFocus = useCallback(() => {\n        const allInputs = document.querySelectorAll('.univer-find-replace-dialog-container .univer-select-selection-search-input');\n        return Array.from(allInputs).some((input) => input === document.activeElement);\n    }, []);\n\n    useImperativeHandle(ref, () => ({ focus, selectHasFocus }));\n\n    useEffect(() => {\n        const subscription = findReplaceService.focusSignal$.subscribe(() => focus());\n        return () => subscription.unsubscribe();\n    }, [findReplaceService, focus]);\n\n    return { focus, selectHasFocus };\n}\n\nexport const FindDialog = forwardRef(function FindDialogImpl(_props, ref) {\n    const localeService = useDependency(LocaleService);\n    const findReplaceService = useDependency(IFindReplaceService);\n    const commandService = useDependency(ICommandService);\n\n    const state = useObservable(findReplaceService.state$, undefined, true);\n    const { findCompleted, findString, matchesCount, matchesPosition } = state;\n\n    const revealReplace = useCallback(() => {\n        commandService.executeCommand(OpenReplaceDialogOperation.id);\n    }, [commandService]);\n\n    const onFindStringChange = useCallback((findString: string) => findReplaceService.changeFindString(findString), [findReplaceService]);\n\n    useFindInputFocus(findReplaceService, ref);\n\n    return (\n        <>\n            <SearchInput\n                findCompleted={findCompleted}\n                className=\"univer-find-input\"\n                matchesCount={matchesCount}\n                matchesPosition={matchesPosition}\n                findReplaceService={findReplaceService}\n                localeService={localeService}\n                findString={findString}\n                onChange={onFindStringChange}\n            />\n            <div className={styles.findReplaceExpandContainer}>\n                <Button type=\"text\" size=\"small\" onClick={revealReplace}>\n                    {localeService.t('find-replace.dialog.advanced-finding')}\n                </Button>\n            </div>\n        </>\n    );\n});\n\nexport const ReplaceDialog = forwardRef(function ReplaceDIalogImpl(_props, ref) {\n    const findReplaceService = useDependency(IFindReplaceService);\n    const localeService = useDependency(LocaleService);\n    const commandService = useDependency(ICommandService);\n    const messageService = useDependency(IMessageService);\n\n    const currentMatch = useObservable(findReplaceService.currentMatch$, undefined, true);\n    const replaceables = useObservable(findReplaceService.replaceables$, undefined, true);\n    const state = useObservable(findReplaceService.state$, undefined, true);\n    const {\n        matchesCount,\n        matchesPosition,\n        findString,\n        inputtingFindString,\n        replaceString,\n        caseSensitive,\n        matchesTheWholeCell,\n        findDirection,\n        findScope,\n        findBy,\n        findCompleted,\n    } = state;\n\n    const findDisabled = inputtingFindString.length === 0;\n    const replaceDisabled = matchesCount === 0 || !currentMatch?.replaceable;\n    const replaceAllDisabled = replaceables.length === 0;\n\n    const onFindStringChange = useCallback(\n        (newValue: string) => findReplaceService.changeInputtingFindString(newValue),\n        [findReplaceService]\n    );\n    const onReplaceStringChange = useCallback(\n        (replaceString: string) => findReplaceService.changeReplaceString(replaceString),\n        [findReplaceService]\n    );\n\n    const { focus } = useFindInputFocus(findReplaceService, ref);\n\n    const onClickFindButton = useCallback(() => {\n        if (findString === inputtingFindString) {\n            findReplaceService.moveToNextMatch();\n        } else {\n            findReplaceService.changeFindString(inputtingFindString);\n            findReplaceService.find();\n        }\n    }, [findString, inputtingFindString, findReplaceService]);\n    const onClickReplaceButton = useCallback(() => commandService.executeCommand(ReplaceCurrentMatchCommand.id), [commandService]);\n    const onClickReplaceAllButton = useCallback(async () => {\n        await commandService.executeCommand(ReplaceAllMatchesCommand.id);\n        focus();\n    }, [commandService]);\n\n    const onChangeFindDirection = useCallback((findDirection: string) => {\n        findReplaceService.changeFindDirection(findDirection as FindDirection);\n    }, [findReplaceService]);\n    const onChangeFindScope = useCallback((findScope: string) => {\n        findReplaceService.changeFindScope(findScope as FindScope);\n    }, [findReplaceService]);\n    const onChangeFindBy = useCallback((findBy: string) => {\n        findReplaceService.changeFindBy(findBy as FindBy);\n    }, [findReplaceService]);\n\n    const findScopeOptions = useFindScopeOptions(localeService);\n    const findDirectionOptions = useFindDirectionOptions(localeService);\n    const findByOptions = useFindByOptions(localeService);\n\n    useEffect(() => {\n        const shouldDisplayNoMatchInfo = findCompleted && matchesCount === 0;\n\n        if (shouldDisplayNoMatchInfo) {\n            messageService.show({\n                content: localeService.t('find-replace.dialog.no-match'),\n                type: MessageType.Warning,\n                duration: 5000,\n            });\n        }\n    }, [findCompleted, matchesCount, messageService, localeService]);\n\n    return (\n        <>\n            <FormLayout label={localeService.t('find-replace.dialog.find')}>\n                <SearchInput\n                    findCompleted={findCompleted}\n                    className=\"univer-find-input\"\n                    matchesCount={matchesCount}\n                    matchesPosition={matchesPosition}\n                    findReplaceService={findReplaceService}\n                    localeService={localeService}\n                    findString={inputtingFindString}\n                    onChange={onFindStringChange}\n                />\n            </FormLayout>\n            <FormLayout label={localeService.t('find-replace.dialog.replace')}>\n                <Input\n                    placeholder={localeService.t('find-replace.dialog.replace-placeholder')}\n                    value={replaceString}\n                    onChange={(value) => onReplaceStringChange(value)}\n                />\n            </FormLayout>\n            <FormLayout label={localeService.t('find-replace.dialog.find-direction.title')}>\n                <Select value={findDirection} options={findDirectionOptions} onChange={onChangeFindDirection} />\n            </FormLayout>\n            <FormDualColumnLayout>\n                <>\n                    <FormLayout label={localeService.t('find-replace.dialog.find-scope.title')}>\n                        <Select value={findScope} options={findScopeOptions} onChange={onChangeFindScope} />\n                    </FormLayout>\n                    <FormLayout label={localeService.t('find-replace.dialog.find-by.title')}>\n                        <Select value={findBy} options={findByOptions} onChange={onChangeFindBy} />\n                    </FormLayout>\n                </>\n            </FormDualColumnLayout>\n            <FormDualColumnLayout>\n                <>\n                    <FormLayout>\n                        <Checkbox\n                            checked={caseSensitive}\n                            onChange={(checked) => {\n                                findReplaceService.changeCaseSensitive(checked as boolean);\n                            }}\n                        >\n                            {localeService.t('find-replace.dialog.case-sensitive')}\n                        </Checkbox>\n                    </FormLayout>\n                    <FormLayout>\n                        <Checkbox\n                            checked={matchesTheWholeCell}\n                            onChange={(checked) => {\n                                findReplaceService.changeMatchesTheWholeCell(checked as boolean);\n                            }}\n                        >\n                            {localeService.t('find-replace.dialog.match-the-whole-cell')}\n                        </Checkbox>\n                    </FormLayout>\n                </>\n            </FormDualColumnLayout>\n            <div className={styles.findReplaceButtonsGroup}>\n                <Button type=\"primary\" onClick={onClickFindButton} disabled={findDisabled}>{localeService.t('find-replace.dialog.find')}</Button>\n                <span className={styles.findReplaceButtonsGroupRight}>\n                    <Button disabled={replaceDisabled} onClick={onClickReplaceButton}>{localeService.t('find-replace.dialog.replace')}</Button>\n                    <Button disabled={replaceAllDisabled} onClick={onClickReplaceAllButton}>{localeService.t('find-replace.dialog.replace-all')}</Button>\n                </span>\n            </div>\n        </>\n    );\n});\n\nexport function FindReplaceDialog() {\n    const findReplaceService = useDependency(IFindReplaceService);\n    const layoutService = useDependency(ILayoutService);\n    const contextService = useDependency(IContextService);\n\n    const state = useObservable(findReplaceService.state$, undefined, true);\n\n    const dialogContainerRef = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n        let disposable: IDisposable | undefined;\n        if (dialogContainerRef.current) {\n            disposable = layoutService.registerContainerElement(dialogContainerRef.current);\n        }\n\n        return () => disposable?.dispose();\n    }, [layoutService]);\n\n    const focusRef = useRef<ISubFormRef>(null);\n    const setDialogContainerFocus = useCallback(\n        (focused: boolean) => contextService.setContextValue(FIND_REPLACE_DIALOG_FOCUS, focused),\n        [contextService]\n    );\n    const setDialogInputFocus = useCallback(\n        (focused: boolean) => contextService.setContextValue(FIND_REPLACE_INPUT_FOCUS, focused),\n        [contextService]\n    );\n\n    useEffect(() => {\n        const focusSubscription = fromEvent(document, 'focusin').subscribe((event) => {\n            if (event.target && dialogContainerRef.current?.contains(event.target as Node)) {\n                setDialogContainerFocus(true);\n            } else {\n                setDialogContainerFocus(false);\n            }\n\n            if (!focusRef.current || !focusRef.current.selectHasFocus()) {\n                setDialogInputFocus(true);\n            } else {\n                setDialogInputFocus(false);\n            }\n        });\n\n        // Focus the input element the first time we open the find replace dialog.\n        focusRef.current?.focus();\n\n        setDialogContainerFocus(true);\n        setDialogInputFocus(true);\n\n        return () => {\n            focusSubscription.unsubscribe();\n            setDialogContainerFocus(false);\n        };\n    }, [setDialogContainerFocus, setDialogInputFocus]);\n\n    return (\n        <div className={styles.findReplaceDialogContainer} ref={dialogContainerRef}>\n            {!state.replaceRevealed ? <FindDialog ref={focusRef} /> : <ReplaceDialog ref={focusRef} />}\n        </div>\n    );\n}\n\nfunction useFindScopeOptions(localeService: LocaleService): Array<{ label: string; value: string }> {\n    const locale = localeService.getCurrentLocale();\n    const options = useMemo(() => {\n        return [\n            { label: localeService.t('find-replace.dialog.find-scope.current-sheet'), value: FindScope.SUBUNIT },\n            { label: localeService.t('find-replace.dialog.find-scope.workbook'), value: FindScope.UNIT },\n        ];\n    }, [locale]);\n\n    return options;\n}\n\nfunction useFindDirectionOptions(localeService: LocaleService): Array<{ label: string; value: string }> {\n    const locale = localeService.getCurrentLocale();\n    const options = useMemo(() => {\n        return [\n            { label: localeService.t('find-replace.dialog.find-direction.row'), value: FindDirection.ROW },\n            { label: localeService.t('find-replace.dialog.find-direction.column'), value: FindDirection.COLUMN },\n        ];\n    }, [locale]);\n\n    return options;\n}\n\nfunction useFindByOptions(localeService: LocaleService): Array<{ label: string; value: string }> {\n    const locale = localeService.getCurrentLocale();\n    const options = useMemo(() => {\n        return [\n            { label: localeService.t('find-replace.dialog.find-by.value'), value: FindBy.VALUE },\n            { label: localeService.t('find-replace.dialog.find-by.formula'), value: FindBy.FORMULA },\n        ];\n    }, [locale]);\n\n    return options;\n}\n", "export default {\n  \"findReplaceDialogContainer\": \"univer-find-replace-dialog-container\",\n  \"findReplaceExpandContainer\": \"univer-find-replace-expand-container\",\n  \"buttonText\": \"univer-button-text\",\n  \"findReplaceButtonsGroup\": \"univer-find-replace-buttons-group\",\n  \"findReplaceButtonsGroupRight\": \"univer-find-replace-buttons-group-right\"\n};import \"ni:sha-256;ePm0bI9uklg96mKUFPQvw8E1rAcWeosRJw5u3FHIaq8\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { LocaleService } from '@univerjs/core';\nimport type { IInputWithSlotProps } from '@univerjs/design';\nimport type { IFindReplaceService } from '../../services/find-replace.service';\nimport { InputWithSlot, Pager } from '@univerjs/design';\n\nexport interface ISearchInputProps extends Pick<IInputWithSlotProps, 'onFocus' | 'onBlur' | 'className' | 'onChange'> {\n    findCompleted: boolean;\n    localeService: LocaleService;\n    findReplaceService: IFindReplaceService;\n    matchesPosition: number;\n    matchesCount: number;\n    findString: string;\n}\n\nexport function SearchInput(props: ISearchInputProps) {\n    const { findCompleted: findComplete, localeService, matchesCount, matchesPosition, findString, findReplaceService, onChange, ...rest } = props;\n    const noResult = findComplete && matchesCount === 0;\n    const text = noResult\n        ? localeService.t('find-replace.dialog.no-result')\n        : matchesCount === 0\n            ? ' '\n            : undefined;\n\n    return (\n        <InputWithSlot\n            autoFocus\n            placeholder={localeService.t('find-replace.dialog.find-placeholder')}\n            slot={(\n                <Pager\n                    loop\n                    text={text}\n                    value={matchesPosition}\n                    total={matchesCount}\n                    onChange={(newIndex) => {\n                        if (matchesPosition === matchesCount && newIndex === 1) {\n                            findReplaceService.moveToNextMatch();\n                        } else if (matchesPosition === 1 && newIndex === matchesCount) {\n                            findReplaceService.moveToPreviousMatch();\n                        } else if (newIndex < matchesPosition) {\n                            findReplaceService.moveToPreviousMatch();\n                        } else {\n                            findReplaceService.moveToNextMatch();\n                        }\n                    }}\n                />\n            )}\n            value={findString}\n            onChange={(value) => onChange?.(value)}\n            {...rest}\n        />\n    );\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IContextService } from '@univerjs/core';\nimport type { IShortcutItem } from '@univerjs/ui';\n\nimport { EDITOR_ACTIVATED, FOCUSING_SHEET } from '@univerjs/core';\nimport { KeyCode, MetaKeys } from '@univerjs/ui';\nimport {\n    FocusSelectionOperation,\n    GoToNextMatchOperation,\n    GoToPreviousMatchOperation,\n    OpenFindDialogOperation,\n    OpenReplaceDialogOperation,\n} from '../commands/operations/find-replace.operation';\nimport { FIND_REPLACE_DIALOG_FOCUS, FIND_REPLACE_INPUT_FOCUS, FIND_REPLACE_REPLACE_REVEALED } from '../services/context-keys';\n\nfunction whenFindReplaceDialogFocused(contextService: IContextService): boolean {\n    return contextService.getContextValue(FIND_REPLACE_DIALOG_FOCUS);\n}\n\nfunction whenReplaceRevealed(contextService: IContextService): boolean {\n    return contextService.getContextValue(FIND_REPLACE_REPLACE_REVEALED);\n}\n\nfunction whenFindReplaceInputFocused(contextService: IContextService): boolean {\n    return contextService.getContextValue(FIND_REPLACE_INPUT_FOCUS);\n}\n\nconst FIND_REPLACE_SHORTCUT_GROUP = '7_find-replace-shortcuts';\n\n// Current we only support find replace on sheet.\nfunction whenSheetFocused(contextService: IContextService) {\n    return contextService.getContextValue(FOCUSING_SHEET);\n}\n\nfunction whenEditorNotActivated(contextService: IContextService): boolean {\n    return !contextService.getContextValue(EDITOR_ACTIVATED);\n}\n\nexport const OpenFindDialogShortcutItem: IShortcutItem = {\n    id: OpenFindDialogOperation.id,\n    description: 'find-replace.shortcut.open-find-dialog',\n    binding: KeyCode.F | MetaKeys.CTRL_COMMAND,\n    group: FIND_REPLACE_SHORTCUT_GROUP,\n    preconditions(contextService) {\n        return !whenFindReplaceDialogFocused(contextService) && whenSheetFocused(contextService) && whenEditorNotActivated(contextService);\n    },\n};\n\nexport const MacOpenFindDialogShortcutItem: IShortcutItem = {\n    id: OpenFindDialogOperation.id,\n    description: 'find-replace.shortcut.open-find-dialog',\n    binding: KeyCode.F | MetaKeys.CTRL_COMMAND,\n    mac: KeyCode.F | MetaKeys.MAC_CTRL,\n    preconditions(contextService) {\n        return !whenFindReplaceDialogFocused(contextService) && whenSheetFocused(contextService) && whenEditorNotActivated(contextService);\n    },\n};\n\nexport const OpenReplaceDialogShortcutItem: IShortcutItem = {\n    id: OpenReplaceDialogOperation.id,\n    description: 'find-replace.shortcut.open-replace-dialog',\n    binding: KeyCode.H | MetaKeys.CTRL_COMMAND,\n    mac: KeyCode.H | MetaKeys.MAC_CTRL,\n    group: FIND_REPLACE_SHORTCUT_GROUP,\n    preconditions(contextService) {\n        return whenSheetFocused(contextService) && whenEditorNotActivated(contextService) && (!whenFindReplaceDialogFocused(contextService) || !whenReplaceRevealed(contextService));\n    },\n};\n\nexport const GoToNextFindMatchShortcutItem: IShortcutItem = {\n    id: GoToNextMatchOperation.id,\n    description: 'find-replace.shortcut.go-to-next-match',\n    binding: KeyCode.ENTER,\n    group: FIND_REPLACE_SHORTCUT_GROUP,\n    priority: 1000,\n    preconditions(contextService) {\n        return whenFindReplaceInputFocused(contextService) && whenFindReplaceDialogFocused(contextService);\n    },\n};\n\nexport const GoToPreviousFindMatchShortcutItem: IShortcutItem = {\n    id: GoToPreviousMatchOperation.id,\n    description: 'find-replace.shortcut.go-to-previous-match',\n    binding: KeyCode.ENTER | MetaKeys.SHIFT,\n    group: FIND_REPLACE_SHORTCUT_GROUP,\n    priority: 1000,\n    preconditions(contextService) {\n        return whenFindReplaceInputFocused(contextService) && whenFindReplaceDialogFocused(contextService);\n    },\n};\n\nexport const FocusSelectionShortcutItem: IShortcutItem = {\n    id: FocusSelectionOperation.id,\n    description: 'find-replace.shortcut.focus-selection',\n    binding: KeyCode.ESC,\n    group: FIND_REPLACE_SHORTCUT_GROUP,\n    priority: 1000,\n    preconditions(contextService) {\n        return whenFindReplaceDialogFocused(contextService);\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EDITOR_ACTIVATED, FOCUSING_SHEET, IContextService, UniverInstanceType } from '@univerjs/core';\nimport type { IMenuButtonItem } from '@univerjs/ui';\nimport { getMenuHiddenObservable, MenuItemType } from '@univerjs/ui';\nimport type { IAccessor } from '@univerjs/core';\nimport { combineLatest, map } from 'rxjs';\n\nimport { OpenFindDialogOperation } from '../commands/operations/find-replace.operation';\n\nexport function FindReplaceMenuItemFactory(accessor: IAccessor): IMenuButtonItem {\n    const contextService = accessor.get(IContextService);\n\n    return {\n        id: OpenFindDialogOperation.id,\n        icon: 'SearchIcon',\n        tooltip: 'find-replace.toolbar',\n        type: MenuItemType.BUTTON,\n        hidden$: getMenuHiddenObservable(accessor, UniverInstanceType.UNIVER_SHEET),\n        disabled$: combineLatest([\n            contextService.subscribeContextValue$(EDITOR_ACTIVATED),\n            contextService.subscribeContextValue$(FOCUSING_SHEET),\n        ]).pipe(map(([editorActivated, focusingSheet]) => editorActivated || !focusingSheet)),\n    };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { MenuSchemaType } from '@univerjs/ui';\nimport { RibbonStartGroup } from '@univerjs/ui';\nimport { OpenFindDialogOperation } from '../commands/operations/find-replace.operation';\nimport { FindReplaceMenuItemFactory } from './find-replace.menu';\n\nexport const menuSchema: MenuSchemaType = {\n    [RibbonStartGroup.OTHERS]: {\n        [OpenFindDialogOperation.id]: {\n            order: 2,\n            menuItemFactory: FindReplaceMenuItemFactory,\n        },\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n    IDisposable,\n    Nullable,\n} from '@univerjs/core';\nimport {\n    ICommandService,\n    Inject,\n    Injector,\n    IUniverInstanceService,\n    LocaleService,\n    RxDisposable,\n    toDisposable,\n} from '@univerjs/core';\nimport { SearchSingle } from '@univerjs/icons';\nimport { ComponentManager, IDialogService, ILayoutService, IMenuManagerService, IShortcutService } from '@univerjs/ui';\nimport { takeUntil } from 'rxjs';\n\nimport { ReplaceAllMatchesCommand, ReplaceCurrentMatchCommand } from '../commands/commands/replace.command';\nimport {\n    FocusSelectionOperation,\n    GoToNextMatchOperation,\n    GoToPreviousMatchOperation,\n    OpenFindDialogOperation,\n    OpenReplaceDialogOperation,\n} from '../commands/operations/find-replace.operation';\nimport { IFindReplaceService } from '../services/find-replace.service';\nimport { FindReplaceDialog } from '../views/dialog/FindReplaceDialog';\nimport {\n    FocusSelectionShortcutItem,\n    GoToNextFindMatchShortcutItem,\n    GoToPreviousFindMatchShortcutItem,\n    MacOpenFindDialogShortcutItem,\n    OpenFindDialogShortcutItem,\n    OpenReplaceDialogShortcutItem,\n} from './find-replace.shortcut';\nimport { menuSchema } from './menu.schema';\n\nconst FIND_REPLACE_DIALOG_ID = 'DESKTOP_FIND_REPLACE_DIALOG';\n\nconst FIND_REPLACE_PANEL_WIDTH = 350;\nconst FIND_REPLACE_PANEL_RIGHT_PADDING = 20;\nconst FIND_REPLACE_PANEL_TOP_PADDING = -90;\n\nexport class FindReplaceController extends RxDisposable {\n    constructor(\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @IMenuManagerService private readonly _menuManagerService: IMenuManagerService,\n        @IShortcutService private readonly _shortcutService: IShortcutService,\n        @ICommandService private readonly _commandService: ICommandService,\n        @IFindReplaceService private readonly _findReplaceService: IFindReplaceService,\n        @IDialogService private readonly _dialogService: IDialogService,\n        @ILayoutService private readonly _layoutService: ILayoutService,\n        @Inject(LocaleService) private readonly _localeService: LocaleService,\n        @Inject(ComponentManager) private readonly _componentManager: ComponentManager,\n        @Inject(Injector) private readonly _injector: Injector\n    ) {\n        super();\n\n        this._initCommands();\n        this._initUI();\n        this._initShortcuts();\n    }\n\n    override dispose(): void {\n        super.dispose();\n\n        this._closingListenerDisposable?.dispose();\n        this._closingListenerDisposable = null;\n    }\n\n    private _initCommands(): void {\n        [\n            OpenFindDialogOperation,\n            OpenReplaceDialogOperation,\n            GoToNextMatchOperation,\n            GoToPreviousMatchOperation,\n            ReplaceAllMatchesCommand,\n            ReplaceCurrentMatchCommand,\n            FocusSelectionOperation,\n        ].forEach((c) => {\n            this.disposeWithMe(this._commandService.registerCommand(c));\n        });\n    }\n\n    private _initShortcuts(): void {\n        [\n            OpenReplaceDialogShortcutItem,\n            OpenFindDialogShortcutItem,\n            MacOpenFindDialogShortcutItem,\n            GoToPreviousFindMatchShortcutItem,\n            GoToNextFindMatchShortcutItem,\n            FocusSelectionShortcutItem,\n        ].forEach((s) => this.disposeWithMe(this._shortcutService.registerShortcut(s)));\n    }\n\n    private _initUI(): void {\n        this.disposeWithMe(this._componentManager.register('FindReplaceDialog', FindReplaceDialog));\n        this.disposeWithMe(this._componentManager.register('SearchIcon', SearchSingle));\n\n        this._menuManagerService.mergeMenu(menuSchema);\n\n        // this controller is also responsible for toggling the FindReplaceDialog\n        this._findReplaceService.stateUpdates$.pipe(takeUntil(this.dispose$)).subscribe((newState) => {\n            if (newState.revealed === true) {\n                this._openPanel();\n            }\n        });\n    }\n\n    private _openPanel(): void {\n        this._dialogService.open({\n            id: FIND_REPLACE_DIALOG_ID,\n            draggable: true,\n            width: FIND_REPLACE_PANEL_WIDTH,\n            title: { title: this._localeService.t('find-replace.dialog.title') },\n            children: { label: 'FindReplaceDialog' },\n            destroyOnClose: true,\n            defaultPosition: getFindReplaceDialogDefaultPosition(),\n            preservePositionOnDestroy: true,\n            onClose: () => this.closePanel(),\n        });\n\n        this._closingListenerDisposable = toDisposable(this._univerInstanceService.focused$.pipe(takeUntil(this.dispose$)).subscribe((focused) => {\n            if (!focused || !this._univerInstanceService.getUniverSheetInstance(focused)) {\n                this.closePanel();\n            }\n        }));\n    }\n\n    private _closingListenerDisposable: Nullable<IDisposable>;\n    closePanel(): void {\n        if (!this._closingListenerDisposable) {\n            return;\n        }\n\n        this._closingListenerDisposable.dispose();\n        this._closingListenerDisposable = null;\n\n        this._dialogService.close(FIND_REPLACE_DIALOG_ID);\n        this._findReplaceService.terminate();\n\n        queueMicrotask(() => this._layoutService.focus());\n    }\n}\n\nfunction getFindReplaceDialogDefaultPosition(): { x: number; y: number } {\n    const { innerWidth } = window;\n    const x = (innerWidth - FIND_REPLACE_PANEL_WIDTH) / 2 - FIND_REPLACE_PANEL_RIGHT_PADDING;\n    const y = FIND_REPLACE_PANEL_TOP_PADDING;\n\n    return { x, y };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IUniverFindReplaceConfig } from './controllers/config.schema';\nimport { IConfigService, merge, Plugin } from '@univerjs/core';\n\nimport { type Dependency, Inject, Injector } from '@univerjs/core';\nimport { defaultPluginConfig, FIND_REPLACE_PLUGIN_CONFIG_KEY } from './controllers/config.schema';\nimport { FindReplaceController } from './controllers/find-replace.controller';\nimport { FindReplaceService, IFindReplaceService } from './services/find-replace.service';\n\nconst PLUGIN_NAME = 'UNIVER_FIND_REPLACE_PLUGIN';\n\nexport class UniverFindReplacePlugin extends Plugin {\n    static override pluginName = PLUGIN_NAME;\n\n    constructor(\n        private readonly _config: Partial<IUniverFindReplaceConfig> = defaultPluginConfig,\n        @Inject(Injector) override readonly _injector: Injector,\n        @IConfigService private readonly _configService: IConfigService\n    ) {\n        super();\n\n        // Manage the plugin configuration.\n        const { ...rest } = merge(\n            {},\n            defaultPluginConfig,\n            this._config\n        );\n        this._configService.setConfig(FIND_REPLACE_PLUGIN_CONFIG_KEY, rest);\n    }\n\n    override onStarting(): void {\n        ([\n            [FindReplaceController],\n            [IFindReplaceService, { useClass: FindReplaceService }],\n        ] as Dependency[]).forEach((d) => this._injector.add(d));\n    }\n\n    override onRendered(): void {\n        this._injector.get(FindReplaceController);\n    }\n}\n"],
  "mappings": "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",
  "names": ["map", "_a", "map", "range", "range", "range", "configSymbol", "defaultPluginConfig", "location", "defaultPluginConfig", "location", "sourceRange", "targetRange", "configSymbol", "defaultPluginConfig", "_a", "workbook", "range", "customRange", "payload", "id", "type", "import_react", "index_module_default", "import_jsx_runtime", "index_module_default", "location", "document", "location", "row", "col", "customRange", "range", "defaultPluginConfig", "configSymbol", "defaultPluginConfig", "nextMatch", "import_react", "import_jsx_runtime", "import_jsx_runtime", "findString", "replaceString", "findDirection", "findScope", "findBy", "_a", "menuSchema", "menuSchema", "defaultPluginConfig"]
}
