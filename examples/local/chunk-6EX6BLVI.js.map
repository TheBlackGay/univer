{
  "version": 3,
  "sources": ["../../packages/sheets-formula-ui/src/common/plugin-name.ts", "../../packages/sheets-formula-ui/src/controllers/config.schema.ts", "../../packages/sheets-formula-ui/src/controllers/utils/utils.ts", "../../packages/sheets-formula-ui/src/controllers/formula-alert-render.controller.ts", "../../packages/sheets-formula-ui/src/controllers/formula-auto-fill.controller.ts", "../../packages/sheets-formula-ui/src/controllers/formula-clipboard.controller.ts", "../../packages/sheets-formula-ui/src/controllers/formula-editor-show.controller.ts", "../../packages/sheets-formula-ui/src/controllers/formula-render.controller.ts", "../../packages/sheets-formula-ui/src/commands/commands/formula-clipboard.command.ts", "../../packages/sheets-formula-ui/src/commands/operations/editor-formula.operation.ts", "../../packages/sheets-formula-ui/src/services/prompt.service.ts", "../../packages/sheets-formula-ui/src/commands/operations/help-function.operation.ts", "../../packages/sheets-formula-ui/src/commands/operations/insert-function.operation.ts", "../../packages/sheets-formula-ui/src/views/more-functions/interface.ts", "../../packages/sheets-formula-ui/src/commands/operations/more-functions.operation.ts", "../../packages/sheets-formula-ui/src/commands/operations/reference-absolute.operation.ts", "../../packages/sheets-formula-ui/src/commands/operations/search-function.operation.ts", "../../packages/sheets-formula-ui/src/views/formula-progress/FormulaProgress.tsx", "../../packages/sheets-formula-ui/src/views/prompt/help-function/HelpFunction.tsx", "../../packages/sheets-formula-ui/src/services/utils.ts", "../../packages/sheets-formula-ui/src/views/prompt/resize-scroll-observer.ts", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-formula-ui/src/views/prompt/help-function/index.module.less", "../../packages/sheets-formula-ui/src/views/prompt/search-function/SearchFunction.tsx", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-formula-ui/src/views/prompt/search-function/index.module.less", "../../packages/sheets-formula-ui/src/views/FormulaPromptContainer.tsx", "../../packages/sheets-formula-ui/src/views/more-functions/MoreFunctions.tsx", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-formula-ui/src/views/more-functions/index.module.less", "../../packages/sheets-formula-ui/src/views/more-functions/input-params/InputParams.tsx", "../../packages/sheets-formula-ui/src/views/more-functions/function-help/FunctionHelp.tsx", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-formula-ui/src/views/more-functions/function-params/index.module.less", "../../packages/sheets-formula-ui/src/views/more-functions/function-params/FunctionParams.tsx", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-formula-ui/src/views/more-functions/input-params/index.module.less", "../../packages/sheets-formula-ui/src/views/more-functions/select-function/SelectFunction.tsx", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-formula-ui/src/views/more-functions/select-function/index.module.less", "../../packages/sheets-formula-ui/src/controllers/menu.ts", "../../packages/sheets-formula-ui/src/controllers/menu.schema.ts", "../../packages/sheets-formula-ui/src/common/prompt.ts", "../../packages/sheets-formula-ui/src/controllers/shortcuts/prompt.shortcut.ts", "../../packages/sheets-formula-ui/src/controllers/formula-ui.controller.ts", "../../packages/sheets-formula-ui/src/services/range-selector.service.ts", "../../packages/sheets-formula-ui/src/services/render-services/ref-selections.render-service.ts", "../../packages/sheets-formula-ui/src/views/formula-editor/index.tsx", "../../packages/sheets-formula-ui/src/views/range-selector/utils/find-index-from-sequence-nodes.ts", "../../packages/sheets-formula-ui/src/views/formula-editor/help-function/HelpFunction.tsx", "../../packages/sheets-formula-ui/src/views/formula-editor/hooks/use-editor-position.ts", "../../packages/sheets-formula-ui/src/views/formula-editor/hooks/use-resize-scroll-observer.ts", "../../packages/sheets-formula-ui/src/views/formula-editor/hooks/use-formula-describe.ts", "../../packages/sheets-formula-ui/src/views/formula-editor/hooks/use-state-ref.ts", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-formula-ui/src/views/formula-editor/help-function/index.module.less", "../../packages/sheets-formula-ui/src/views/formula-editor/hooks/use-focus.ts", "../../packages/sheets-formula-ui/src/views/formula-editor/hooks/use-formula-selection.ts", "../../packages/sheets-formula-ui/src/views/formula-editor/hooks/use-formula-token.ts", "../../packages/sheets-formula-ui/src/views/formula-editor/hooks/use-highlight.ts", "../../packages/sheets-formula-ui/src/common/selection.ts", "../../packages/sheets-formula-ui/src/views/formula-editor/hooks/use-left-and-right-arrow.ts", "../../packages/sheets-formula-ui/src/views/formula-editor/hooks/use-refactor-effect.ts", "../../packages/sheets-formula-ui/src/views/formula-editor/hooks/use-reset-selection.ts", "../../packages/sheets-formula-ui/src/views/formula-editor/hooks/use-sheet-selection-change.ts", "../../packages/sheets-formula-ui/src/views/range-selector/utils/get-offset-from-sequence-nodes.ts", "../../packages/sheets-formula-ui/src/views/range-selector/utils/sequence-node-to-text.ts", "../../packages/sheets-formula-ui/src/views/range-selector/utils/unit-ranges-to-text.ts", "../../packages/sheets-formula-ui/src/views/formula-editor/hooks/use-switch-sheet.ts", "../../packages/sheets-formula-ui/src/views/formula-editor/hooks/use-verify.ts", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-formula-ui/src/views/formula-editor/index.module.less", "../../packages/sheets-formula-ui/src/views/formula-editor/search-function/SearchFunction.tsx", "../../packages/sheets-formula-ui/src/views/formula-editor/hooks/use-formula-search.ts", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-formula-ui/src/views/formula-editor/search-function/index.module.less", "../../packages/sheets-formula-ui/src/views/formula-editor/utils/get-formula-text.ts", "../../packages/sheets-formula-ui/src/views/range-selector/index.tsx", "../../packages/sheets-formula-ui/src/views/range-selector/hooks/use-ranges-highlight.ts", "../../packages/sheets-formula-ui/src/views/range-selector/hooks/use-selection-change.ts", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-formula-ui/src/views/range-selector/index.module.less", "../../packages/sheets-formula-ui/src/views/range-selector/util.ts", "../../packages/sheets-formula-ui/src/views/range-selector/utils/range-pre-process.ts", "../../packages/sheets-formula-ui/src/views/range-selector/global.tsx", "../../packages/sheets-formula-ui/src/sheets-formula-ui.plugin.ts"],
  "sourcesContent": ["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const FORMULA_UI_PLUGIN_NAME = 'SHEET_FORMULA_UI_PLUGIN';\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Ctor } from '@univerjs/core';\nimport type { BaseFunction, IFunctionInfo, IFunctionNames } from '@univerjs/engine-formula';\nimport type { MenuConfig } from '@univerjs/ui';\n\n/**\n * Base configuration for the plugin.\n */\nexport const PLUGIN_CONFIG_KEY_BASE = 'sheets-formula-ui.base.config';\n\nexport const configSymbolBase = Symbol(PLUGIN_CONFIG_KEY_BASE);\n\nexport interface IUniverSheetsFormulaBaseConfig {\n    menu?: MenuConfig;\n    notExecuteFormula?: boolean;\n    description?: IFunctionInfo[];\n    function?: Array<[Ctor<BaseFunction>, IFunctionNames]>;\n}\n\nexport const defaultPluginBaseConfig: IUniverSheetsFormulaBaseConfig = {};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, IContextService, Nullable } from '@univerjs/core';\nimport type { ErrorType } from '@univerjs/engine-formula';\nimport { CellValueType, FOCUSING_DOC, FOCUSING_UNIVER_EDITOR, isFormulaId, isFormulaString } from '@univerjs/core';\nimport { ERROR_TYPE_SET, stripErrorMargin } from '@univerjs/engine-formula';\n\nexport function whenEditorStandalone(contextService: IContextService) {\n    return (\n        contextService.getContextValue(FOCUSING_DOC) &&\n        contextService.getContextValue(FOCUSING_UNIVER_EDITOR)\n        // &&\n        // contextService.getContextValue(FOCUSING_UNIVER_EDITOR_STANDALONE_SINGLE_MODE)\n    );\n}\n\n/**\n * Extract the formula error from the cell\n * @param cell\n * @returns\n */\nexport function extractFormulaError(cell: Nullable<ICellData>, isArrayFormulaCell: boolean = false) {\n    // Must contain a formula\n    if (!isArrayFormulaCell && !(isFormulaString(cell?.f) || isFormulaId(cell?.si))) {\n        return null;\n    }\n\n    if (typeof cell?.v === 'string' && ERROR_TYPE_SET.has(cell.v as ErrorType)) {\n        return cell.v as ErrorType;\n    }\n\n    return null;\n}\n\n/**\n * Extract the formula number from the cell, handle the precision issue\n * @param cell\n * @returns\n */\nexport function extractFormulaNumber(cell: Nullable<ICellData>) {\n    if ((isFormulaString(cell?.f) || isFormulaId(cell?.si)) && cell?.t === CellValueType.NUMBER && typeof cell?.v === 'number') {\n        return stripErrorMargin(cell.v);\n    }\n    return null;\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Workbook } from '@univerjs/core';\nimport type { IRenderContext, IRenderModule } from '@univerjs/engine-render';\nimport { Disposable, Inject, isICellData, LocaleService } from '@univerjs/core';\nimport { ErrorType, FormulaDataModel } from '@univerjs/engine-formula';\nimport { CellAlertManagerService, CellAlertType, HoverManagerService } from '@univerjs/sheets-ui';\nimport { IZenZoneService } from '@univerjs/ui';\nimport { debounceTime } from 'rxjs';\nimport { extractFormulaError } from './utils/utils';\n\nconst ALERT_KEY = 'SHEET_FORMULA_ALERT';\n\nconst ErrorTypeToMessageMap = {\n    [ErrorType.DIV_BY_ZERO]: 'divByZero',\n    [ErrorType.NAME]: 'name',\n    [ErrorType.VALUE]: 'value',\n    [ErrorType.NUM]: 'num',\n    [ErrorType.NA]: 'na',\n    [ErrorType.CYCLE]: 'cycle',\n    [ErrorType.REF]: 'ref',\n    [ErrorType.SPILL]: 'spill',\n    [ErrorType.CALC]: 'calc',\n    [ErrorType.ERROR]: 'error',\n    [ErrorType.CONNECT]: 'connect',\n    [ErrorType.NULL]: 'null',\n};\n\nexport class FormulaAlertRenderController extends Disposable implements IRenderModule {\n    constructor(\n        private readonly _context: IRenderContext<Workbook>,\n        @Inject(HoverManagerService) private readonly _hoverManagerService: HoverManagerService,\n        @Inject(CellAlertManagerService) private readonly _cellAlertManagerService: CellAlertManagerService,\n        @Inject(LocaleService) private readonly _localeService: LocaleService,\n        @Inject(FormulaDataModel) private readonly _formulaDataModel: FormulaDataModel,\n        @IZenZoneService private readonly _zenZoneService: IZenZoneService\n    ) {\n        super();\n        this._init();\n    }\n\n    private _init() {\n        this._initCellAlertPopup();\n        this._initZenService();\n    }\n\n    private _initCellAlertPopup() {\n        this.disposeWithMe(this._hoverManagerService.currentCell$.pipe(debounceTime(100)).subscribe((cellPos) => {\n            if (cellPos) {\n                const workbook = this._context.unit;\n                const worksheet = workbook.getActiveSheet();\n\n                if (!worksheet) return;\n\n                const cellData = worksheet.getCell(cellPos.location.row, cellPos.location.col);\n\n                const arrayFormulaCellData = this._formulaDataModel.getArrayFormulaCellData()?.\n                    [cellPos.location.unitId]?.\n                    [cellPos.location.subUnitId]?.\n                    [cellPos.location.row]?.\n                    [cellPos.location.col];\n\n                // Preventing blank object\n                if (isICellData(cellData)) {\n                    const errorType = extractFormulaError(cellData, !!arrayFormulaCellData);\n\n                    if (!errorType) {\n                        // fix #4002\n                        this._hideAlert();\n                        return;\n                    }\n\n                    const currentAlert = this._cellAlertManagerService.currentAlert.get(ALERT_KEY);\n                    const currentLoc = currentAlert?.alert?.location;\n                    if (\n                        currentLoc &&\n                        currentLoc.row === cellPos.location.row &&\n                        currentLoc.col === cellPos.location.col &&\n                        currentLoc.subUnitId === cellPos.location.subUnitId &&\n                        currentLoc.unitId === cellPos.location.unitId\n                    ) {\n                        return;\n                    }\n\n                    this._cellAlertManagerService.showAlert({\n                        type: CellAlertType.ERROR,\n                        title: this._localeService.t('formula.error.title'),\n                        message: this._localeService.t(`formula.error.${ErrorTypeToMessageMap[errorType]}`),\n                        location: cellPos.location,\n                        width: 200,\n                        height: 74,\n                        key: ALERT_KEY,\n                    });\n                    return;\n                }\n            }\n\n            this._hideAlert();\n        }));\n    }\n\n    private _initZenService() {\n        this.disposeWithMe(this._zenZoneService.visible$.subscribe((visible) => {\n            if (visible) {\n                this._hideAlert();\n            }\n        }));\n    }\n\n    private _hideAlert() {\n        this._cellAlertManagerService.removeAlert(ALERT_KEY);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, Nullable } from '@univerjs/core';\nimport type { AutoFillService, IAutoFillLocation, IAutoFillRule, ICopyDataInTypeIndexInfo, ICopyDataPiece } from '@univerjs/sheets-ui';\nimport {\n    Direction,\n    Disposable,\n    Inject,\n    isFormulaId,\n    isFormulaString,\n    Tools,\n} from '@univerjs/core';\nimport { LexerTreeBuilder } from '@univerjs/engine-formula';\nimport { APPLY_TYPE, DATA_TYPE, IAutoFillService } from '@univerjs/sheets-ui';\n\nexport class FormulaAutoFillController extends Disposable {\n    constructor(\n        @IAutoFillService private readonly _autoFillService: AutoFillService,\n        @Inject(LexerTreeBuilder) private readonly _lexerTreeBuilder: LexerTreeBuilder\n    ) {\n        super();\n\n        this._registerAutoFill();\n    }\n\n    private _registerAutoFill(): void {\n        const formulaRule: IAutoFillRule = {\n            type: DATA_TYPE.FORMULA,\n            priority: 1001,\n            match: (cellData) => isFormulaString(cellData?.f) || isFormulaId(cellData?.si),\n            isContinue: (prev, cur) => {\n                if (prev.type === DATA_TYPE.FORMULA) {\n                    return true;\n                }\n                return false;\n            },\n            applyFunctions: {\n                [APPLY_TYPE.COPY]: (dataWithIndex, len, direction, copyDataPiece, location) => {\n                    const { data, index } = dataWithIndex;\n                    return this._fillCopyFormula(data, len, direction, index, copyDataPiece, location as IAutoFillLocation);\n                },\n            },\n        };\n        this._autoFillService.registerRule(formulaRule);\n    }\n\n    private _fillCopyFormula(\n        data: Array<Nullable<ICellData>>,\n        len: number,\n        direction: Direction,\n        index: ICopyDataInTypeIndexInfo,\n        copyDataPiece: ICopyDataPiece,\n        location: IAutoFillLocation\n    ) {\n        const step = getDataLength(copyDataPiece);\n        const applyData = [];\n        const formulaIdMap = new Map<number, string>();\n\n        for (let i = 1; i <= len; i++) {\n            const dataIndex = (i - 1) % data.length;\n            const sourceIndex = index[dataIndex];\n            const d = Tools.deepClone(data[dataIndex]);\n\n            if (d) {\n                const originalFormula = data[dataIndex]?.f || '';\n                const originalFormulaId = data[dataIndex]?.si || '';\n\n                const checkFormula = isFormulaString(originalFormula);\n                const checkFormulaId = isFormulaId(originalFormulaId);\n\n                if (checkFormulaId) {\n                    d.si = originalFormulaId;\n                    d.f = null;\n                    d.v = null;\n                    d.p = null;\n                    d.t = null;\n\n                    applyData.push(d);\n                } else if (checkFormula) {\n                    // The first position setting formula and formulaId\n                    let formulaId = formulaIdMap.get(dataIndex);\n\n                    if (!formulaId) {\n                        formulaId = Tools.generateRandomId(6);\n                        formulaIdMap.set(dataIndex, formulaId);\n\n                        const { offsetX, offsetY } = directionToOffset(step, len, direction, location, sourceIndex);\n                        const shiftedFormula = this._lexerTreeBuilder.moveFormulaRefOffset(\n                            originalFormula,\n                            offsetX,\n                            offsetY\n                        );\n\n                        d.si = formulaId;\n                        d.f = shiftedFormula;\n                        d.v = null;\n                        d.p = null;\n                        d.t = null;\n                    } else {\n                        // At the beginning of the second formula, set formulaId only\n                        d.si = formulaId;\n                        d.f = null;\n                        d.v = null;\n                        d.p = null;\n                        d.t = null;\n                    }\n\n                    applyData.push(d);\n                }\n            }\n        }\n\n        return applyData;\n    }\n}\n\nfunction directionToOffset(step: number, len: number, direction: Direction, location: IAutoFillLocation, sourceIndex: number) {\n    const { source, target } = location;\n    const { rows: targetRows } = target;\n    const { rows: sourceRows } = source;\n\n    let offsetX = 0;\n    let offsetY = 0;\n\n    switch (direction) {\n        case Direction.UP:\n            // The formula fills upwards, and the cell containing f and si must be at the top.\n            // This happens when the step row is hidden, find the relative row that is not hidden.\n            // For example, a hidden row caused by a sheets-filter.\n            offsetY = targetRows[sourceIndex] - sourceRows[sourceIndex];\n            break;\n        case Direction.RIGHT:\n            offsetX = step;\n            break;\n        case Direction.DOWN:\n            // This happens when the step row is hidden, find the relative row that is not hidden.\n            // For example, a hidden row caused by a sheets-filter.\n            offsetY = targetRows[sourceIndex] - sourceRows[sourceIndex];\n            break;\n        case Direction.LEFT:\n            offsetX = -step * len; // The formula fills leftwards, and the cell containing f and si must be at the left.\n            break;\n    }\n\n    return { offsetX, offsetY };\n}\n\nfunction getDataLength(copyDataPiece: ICopyDataPiece) {\n    let length = 0;\n    for (const t in copyDataPiece) {\n        copyDataPiece[t].forEach((item) => {\n            length += item.data.length;\n        });\n    }\n\n    return length;\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, ICellData, IMutationInfo, Workbook } from '@univerjs/core';\nimport type { ISetRangeValuesMutationParams } from '@univerjs/sheets';\nimport type { ICellDataWithSpanInfo, ICopyPastePayload, IDiscreteRange, IPasteHookValueType, ISheetClipboardHook, ISheetDiscreteRangeLocation } from '@univerjs/sheets-ui';\nimport {\n    DEFAULT_EMPTY_DOCUMENT_VALUE,\n    Disposable,\n    Inject,\n    Injector,\n    isFormulaId,\n    isFormulaString,\n    IUniverInstanceService,\n    ObjectMatrix,\n    Tools,\n    UniverInstanceType,\n} from '@univerjs/core';\nimport { FormulaDataModel, LexerTreeBuilder } from '@univerjs/engine-formula';\nimport { SetRangeValuesMutation, SetRangeValuesUndoMutationFactory } from '@univerjs/sheets';\nimport { COPY_TYPE, ISheetClipboardService, PREDEFINED_HOOK_NAME } from '@univerjs/sheets-ui';\n\nexport const DEFAULT_PASTE_FORMULA = 'default-paste-formula';\n\nexport class FormulaClipboardController extends Disposable {\n    constructor(\n        @IUniverInstanceService private readonly _currentUniverSheet: IUniverInstanceService,\n        @Inject(LexerTreeBuilder) private readonly _lexerTreeBuilder: LexerTreeBuilder,\n        @ISheetClipboardService private readonly _sheetClipboardService: ISheetClipboardService,\n        @Inject(Injector) private readonly _injector: Injector,\n        @Inject(FormulaDataModel) private readonly _formulaDataModel: FormulaDataModel\n    ) {\n        super();\n\n        this._initialize();\n    }\n\n    private _initialize(): void {\n        this._registerClipboardHook();\n    }\n\n    private _registerClipboardHook() {\n        this.disposeWithMe(this._sheetClipboardService.addClipboardHook(this._pasteFormulaHook()));\n        this.disposeWithMe(this._sheetClipboardService.addClipboardHook(this._pasteWithFormulaHook()));\n    }\n\n    private _pasteFormulaHook(): ISheetClipboardHook {\n        return {\n            id: PREDEFINED_HOOK_NAME.SPECIAL_PASTE_FORMULA,\n            priority: 10,\n            specialPasteInfo: { label: 'specialPaste.formula' },\n            onPasteCells: (pasteFrom, pasteTo, data, payload) => this._onPasteCells(pasteFrom, pasteTo, data, payload, true),\n        };\n    }\n\n    private _pasteWithFormulaHook(): ISheetClipboardHook {\n        return {\n            id: DEFAULT_PASTE_FORMULA,\n            priority: 10,\n            onPasteCells: (pasteFrom, pasteTo, data, payload) => this._onPasteCells(pasteFrom, pasteTo, data, payload, false),\n        };\n    }\n\n    private _onPasteCells(\n        pasteFrom: ISheetDiscreteRangeLocation | null,\n        pasteTo: ISheetDiscreteRangeLocation,\n        data: ObjectMatrix<ICellDataWithSpanInfo>,\n        payload: ICopyPastePayload,\n        isSpecialPaste: boolean\n    ) {\n        // Intercept scenarios where formulas do not need to be processed, and only process default paste and paste formulas only\n        const specialPastes: IPasteHookValueType[] = [\n            PREDEFINED_HOOK_NAME.SPECIAL_PASTE_FORMAT,\n            PREDEFINED_HOOK_NAME.SPECIAL_PASTE_COL_WIDTH,\n        ];\n        if (specialPastes.includes(payload.pasteType)) {\n            return {\n                undos: [],\n                redos: [],\n            };\n        }\n\n        const workbook = this._currentUniverSheet.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!;\n        const unitId = pasteTo.unitId || workbook.getUnitId();\n        const subUnitId = pasteTo.subUnitId || workbook.getActiveSheet()?.getSheetId();\n\n        if (!unitId || !subUnitId) {\n            return {\n                undos: [],\n                redos: [],\n            };\n        }\n\n        const pastedRange = pasteTo.range;\n        const matrix = data;\n        const copyInfo = {\n            copyType: payload.copyType || COPY_TYPE.COPY,\n            copyRange: pasteFrom?.range,\n            pasteType: payload.pasteType,\n        };\n\n        return this._injector.invoke((accessor) => getSetCellFormulaMutations(\n            unitId,\n            subUnitId,\n            pastedRange,\n            matrix,\n            accessor,\n            copyInfo,\n            this._lexerTreeBuilder,\n            this._formulaDataModel,\n            isSpecialPaste,\n            pasteFrom\n        ));\n    }\n}\n\nexport function getSetCellFormulaMutations(\n    unitId: string,\n    subUnitId: string,\n    range: IDiscreteRange,\n    matrix: ObjectMatrix<ICellDataWithSpanInfo>,\n    accessor: IAccessor,\n    copyInfo: {\n        copyType: COPY_TYPE;\n        copyRange?: IDiscreteRange;\n        pasteType: string;\n    },\n    lexerTreeBuilder: LexerTreeBuilder,\n    formulaDataModel: FormulaDataModel,\n    isSpecialPaste = false,\n    pasteFrom: ISheetDiscreteRangeLocation | null\n) {\n    const redoMutationsInfo: IMutationInfo[] = [];\n    const undoMutationsInfo: IMutationInfo[] = [];\n\n    const valueMatrix = getValueMatrix(unitId, subUnitId, range, matrix, copyInfo, lexerTreeBuilder, formulaDataModel, pasteFrom);\n\n    if (!valueMatrix.hasValue()) {\n        return {\n            undos: [],\n            redos: [],\n        };\n    }\n\n    // set cell value and style\n    const setValuesMutation: ISetRangeValuesMutationParams = {\n        unitId,\n        subUnitId,\n        cellValue: valueMatrix.getData(),\n    };\n\n    redoMutationsInfo.push({\n        id: SetRangeValuesMutation.id,\n        params: setValuesMutation,\n    });\n\n    // undo\n    const undoSetValuesMutation: ISetRangeValuesMutationParams = SetRangeValuesUndoMutationFactory(\n        accessor,\n        setValuesMutation\n    );\n\n    undoMutationsInfo.push({\n        id: SetRangeValuesMutation.id,\n        params: undoSetValuesMutation,\n    });\n    return {\n        undos: undoMutationsInfo,\n        redos: redoMutationsInfo,\n    };\n}\n\nfunction getValueMatrix(\n    unitId: string,\n    subUnitId: string,\n    range: IDiscreteRange,\n    matrix: ObjectMatrix<ICellDataWithSpanInfo>,\n    copyInfo: {\n        copyType: COPY_TYPE;\n        copyRange?: IDiscreteRange;\n        pasteType: string;\n    },\n    lexerTreeBuilder: LexerTreeBuilder,\n    formulaDataModel: FormulaDataModel,\n    pasteFrom: ISheetDiscreteRangeLocation | null\n): ObjectMatrix<ICellData> {\n    if (!pasteFrom) {\n        return getValueMatrixOfPasteFromIsNull(unitId, subUnitId, range, matrix, formulaDataModel);\n    }\n\n    if (copyInfo.pasteType === PREDEFINED_HOOK_NAME.SPECIAL_PASTE_VALUE) {\n        return getSpecialPasteValueValueMatrix(unitId, subUnitId, range, matrix, formulaDataModel, pasteFrom);\n    }\n\n    if (copyInfo.pasteType === PREDEFINED_HOOK_NAME.SPECIAL_PASTE_FORMULA) {\n        return getSpecialPasteFormulaValueMatrix(unitId, subUnitId, range, matrix, lexerTreeBuilder, formulaDataModel, pasteFrom);\n    }\n\n    return getDefaultPasteValueMatrix(unitId, subUnitId, range, matrix, copyInfo.copyType, lexerTreeBuilder, formulaDataModel, pasteFrom);\n}\n\nfunction getValueMatrixOfPasteFromIsNull(\n    unitId: string,\n    subUnitId: string,\n    range: IDiscreteRange,\n    matrix: ObjectMatrix<ICellDataWithSpanInfo>,\n    formulaDataModel: FormulaDataModel\n): ObjectMatrix<ICellData> {\n    const valueMatrix = new ObjectMatrix<ICellData>();\n    const formulaData = formulaDataModel.getSheetFormulaData(unitId, subUnitId);\n\n    matrix.forValue((row, col, value) => {\n        const toRow = range.rows[row];\n        const toCol = range.cols[col];\n        const valueObject: ICellDataWithSpanInfo = {};\n\n        if (isFormulaString(value.v)) {\n            // If the copy value is a formula\n            valueObject.v = null;\n            valueObject.f = `${value.v}`;\n            valueObject.si = null;\n            valueObject.p = null;\n\n            valueMatrix.setValue(toRow, toCol, valueObject);\n        } else if (formulaData?.[toRow]?.[toCol]) {\n            // If the paste location is a formula\n            valueObject.v = value.v;\n            valueObject.f = null;\n            valueObject.si = null;\n            valueObject.p = null;\n\n            valueMatrix.setValue(toRow, toCol, valueObject);\n        }\n    });\n\n    return valueMatrix;\n}\n\nfunction getSpecialPasteValueValueMatrix(\n    unitId: string,\n    subUnitId: string,\n    range: IDiscreteRange,\n    matrix: ObjectMatrix<ICellDataWithSpanInfo>,\n    formulaDataModel: FormulaDataModel,\n    pasteFrom: ISheetDiscreteRangeLocation\n): ObjectMatrix<ICellData> {\n    const valueMatrix = new ObjectMatrix<ICellData>();\n    const arrayFormulaCellData = formulaDataModel.getArrayFormulaCellData()?.[pasteFrom.unitId]?.[pasteFrom.subUnitId];\n    const formulaData = formulaDataModel.getSheetFormulaData(unitId, subUnitId);\n\n    matrix.forValue((row, col, value) => {\n        const fromRow = pasteFrom.range.rows[row % pasteFrom.range.rows.length];\n        const fromCol = pasteFrom.range.cols[col % pasteFrom.range.cols.length];\n        const toRow = range.rows[row];\n        const toCol = range.cols[col];\n        const valueObject: ICellDataWithSpanInfo = {};\n\n        if (isFormulaString(value.f) || isFormulaId(value.si)) {\n            // If the copy value is a formula\n            valueObject.v = value.v;\n            valueObject.f = null;\n            valueObject.si = null;\n            valueObject.p = null;\n\n            valueMatrix.setValue(toRow, toCol, valueObject);\n        } else if (arrayFormulaCellData?.[fromRow]?.[fromCol]) {\n            // If the copy value is an array formula\n            const cell = arrayFormulaCellData[fromRow][fromCol];\n            valueObject.v = cell.v;\n            valueObject.f = null;\n            valueObject.si = null;\n            valueObject.p = null;\n\n            valueMatrix.setValue(toRow, toCol, valueObject);\n        } else if (formulaData?.[toRow]?.[toCol]) {\n            // If the paste location is a formula\n            valueObject.v = value.v;\n            valueObject.f = null;\n            valueObject.si = null;\n            valueObject.p = null;\n\n            if (value.p) {\n                const richText = getCellRichText(value);\n                if (richText) {\n                    valueObject.v = richText;\n                }\n            }\n\n            valueMatrix.setValue(toRow, toCol, valueObject);\n        }\n    });\n\n    return valueMatrix;\n}\n\nfunction getSpecialPasteFormulaValueMatrix(\n    unitId: string,\n    subUnitId: string,\n    range: IDiscreteRange,\n    matrix: ObjectMatrix<ICellDataWithSpanInfo>,\n    lexerTreeBuilder: LexerTreeBuilder,\n    formulaDataModel: FormulaDataModel,\n    pasteFrom: ISheetDiscreteRangeLocation\n): ObjectMatrix<ICellData> {\n    const valueMatrix = new ObjectMatrix<ICellData>();\n    const formulaIdMap = new Map<string, string>();\n\n    matrix.forValue((row, col, value) => {\n        const toRow = range.rows[row];\n        const toCol = range.cols[col];\n        const valueObject: ICellDataWithSpanInfo = {};\n\n        if (isFormulaId(value.si)) {\n            // If the copy value is a formula\n            if (pasteFrom.unitId !== unitId || pasteFrom.subUnitId !== subUnitId) {\n                const formulaString = formulaDataModel.getFormulaStringByCell(\n                    pasteFrom.range.rows[row % pasteFrom.range.rows.length],\n                    pasteFrom.range.cols[col % pasteFrom.range.cols.length],\n                    pasteFrom.subUnitId,\n                    pasteFrom.unitId\n                );\n                const offsetX = range.cols[col] - pasteFrom.range.cols[col % pasteFrom.range.cols.length];\n                const offsetY = range.rows[row] - pasteFrom.range.rows[row % pasteFrom.range.rows.length];\n                const shiftedFormula = lexerTreeBuilder.moveFormulaRefOffset(formulaString || '', offsetX, offsetY);\n\n                valueObject.si = null;\n                valueObject.f = shiftedFormula;\n            } else {\n                valueObject.si = value.si;\n                valueObject.f = null;\n            }\n\n            valueObject.v = null;\n            valueObject.p = null;\n\n            valueMatrix.setValue(toRow, toCol, valueObject);\n        } else if (isFormulaString(value.f)) {\n            // If the copy value is a formula\n            const index = `${row % pasteFrom.range.rows.length}_${col % pasteFrom.range.cols.length}`;\n            let formulaId = formulaIdMap.get(index);\n\n            if (!formulaId) {\n                formulaId = Tools.generateRandomId(6);\n                formulaIdMap.set(index, formulaId);\n\n                const offsetX = range.cols[col] - pasteFrom.range.cols[col % pasteFrom.range.cols.length];\n                const offsetY = range.rows[row] - pasteFrom.range.rows[row % pasteFrom.range.rows.length];\n                const shiftedFormula = lexerTreeBuilder.moveFormulaRefOffset(value.f || '', offsetX, offsetY);\n\n                valueObject.si = formulaId;\n                valueObject.f = shiftedFormula;\n            } else {\n                // At the beginning of the second formula, set formulaId only\n                valueObject.si = formulaId;\n                valueObject.f = null;\n            }\n\n            valueObject.v = null;\n            valueObject.p = null;\n\n            valueMatrix.setValue(toRow, toCol, valueObject);\n        } else {\n            // If the paste location is a formula\n            valueObject.v = value.v;\n            valueObject.f = null;\n            valueObject.si = null;\n            valueObject.p = null;\n\n            if (value.p) {\n                const richText = getCellRichText(value);\n                if (richText) {\n                    valueObject.v = richText;\n                }\n            }\n\n            valueMatrix.setValue(toRow, toCol, valueObject);\n        }\n    });\n\n    return valueMatrix;\n}\n\n// eslint-disable-next-line\nfunction getDefaultPasteValueMatrix(\n    unitId: string,\n    subUnitId: string,\n    range: IDiscreteRange,\n    matrix: ObjectMatrix<ICellDataWithSpanInfo>,\n    copyType: COPY_TYPE,\n    lexerTreeBuilder: LexerTreeBuilder,\n    formulaDataModel: FormulaDataModel,\n    pasteFrom: ISheetDiscreteRangeLocation\n): ObjectMatrix<ICellData> {\n    const valueMatrix = new ObjectMatrix<ICellData>();\n    const formulaIdMap = new Map<string, string>();\n    const formulaData = formulaDataModel.getSheetFormulaData(unitId, subUnitId);\n    const cutFormulaIds: string[] = [];\n\n    if (copyType === COPY_TYPE.CUT) {\n        // If cut, the formula range should not be moved.\n        matrix.forValue((row, col, value) => {\n            const toRow = range.rows[row];\n            const toCol = range.cols[col];\n            const valueObject: ICellDataWithSpanInfo = {};\n\n            if (isFormulaId(value.si)) {\n                if (isFormulaString(value.f)) {\n                    cutFormulaIds.push(value.si as string);\n\n                    valueObject.f = value.f;\n                    valueObject.si = value.si;\n                } else if (cutFormulaIds.includes(value.si as string)) {\n                    valueObject.f = null;\n                    valueObject.si = value.si;\n                } else {\n                    const formulaString = formulaDataModel.getFormulaStringByCell(\n                        pasteFrom.range.rows[row % pasteFrom.range.rows.length],\n                        pasteFrom.range.cols[col % pasteFrom.range.cols.length],\n                        pasteFrom.subUnitId,\n                        pasteFrom.unitId\n                    );\n\n                    valueObject.f = formulaString;\n                    valueObject.si = null;\n                }\n\n                valueObject.v = null;\n                valueObject.p = null;\n\n                valueMatrix.setValue(toRow, toCol, valueObject);\n            } else if (isFormulaString(value.f)) {\n                valueObject.f = value.f;\n                valueObject.si = null;\n                valueObject.v = null;\n                valueObject.p = null;\n\n                valueMatrix.setValue(toRow, toCol, valueObject);\n            }\n        });\n    } else {\n        // copy, the formula range should be moved.\n        matrix.forValue((row, col, value) => {\n            const toRow = range.rows[row];\n            const toCol = range.cols[col];\n            const valueObject: ICellDataWithSpanInfo = {};\n\n            if (isFormulaId(value.si)) {\n                // If the copy value is a formula\n                if (pasteFrom.unitId !== unitId || pasteFrom.subUnitId !== subUnitId) {\n                    const formulaString = formulaDataModel.getFormulaStringByCell(\n                        pasteFrom.range.rows[row % pasteFrom.range.rows.length],\n                        pasteFrom.range.cols[col % pasteFrom.range.cols.length],\n                        pasteFrom.subUnitId,\n                        pasteFrom.unitId\n                    );\n                    const offsetX = range.cols[col] - pasteFrom.range.cols[col % pasteFrom.range.cols.length];\n                    const offsetY = range.rows[row] - pasteFrom.range.rows[row % pasteFrom.range.rows.length];\n                    const shiftedFormula = lexerTreeBuilder.moveFormulaRefOffset(formulaString || '', offsetX, offsetY);\n\n                    valueObject.si = null;\n                    valueObject.f = shiftedFormula;\n                } else {\n                    valueObject.si = value.si;\n                    valueObject.f = null;\n                }\n\n                valueObject.v = null;\n                valueObject.p = null;\n\n                valueMatrix.setValue(toRow, toCol, valueObject);\n            } else if (isFormulaString(value.f)) {\n                // If the copy value is a formula\n                const index = `${row % pasteFrom.range.rows.length}_${col % pasteFrom.range.cols.length}`;\n                let formulaId = formulaIdMap.get(index);\n\n                if (!formulaId) {\n                    formulaId = Tools.generateRandomId(6);\n                    formulaIdMap.set(index, formulaId);\n\n                    const offsetX = range.cols[col] - pasteFrom.range.cols[col % pasteFrom.range.cols.length];\n                    const offsetY = range.rows[row] - pasteFrom.range.rows[row % pasteFrom.range.rows.length];\n                    const shiftedFormula = lexerTreeBuilder.moveFormulaRefOffset(value.f || '', offsetX, offsetY);\n\n                    valueObject.si = formulaId;\n                    valueObject.f = shiftedFormula;\n                } else {\n                    // At the beginning of the second formula, set formulaId only\n                    valueObject.si = formulaId;\n                    valueObject.f = null;\n                }\n\n                valueObject.v = null;\n                valueObject.p = null;\n\n                valueMatrix.setValue(toRow, toCol, valueObject);\n            } else if (formulaData?.[toRow]?.[toCol]) {\n                // If the paste location is a formula\n                valueObject.v = value.v;\n                valueObject.f = null;\n                valueObject.si = null;\n                valueObject.p = value.p;\n\n                valueMatrix.setValue(toRow, toCol, valueObject);\n            }\n        });\n    }\n\n    // If cut range has the first formula id, remove the related formula ids and convert it to formula string.\n    if (cutFormulaIds.length > 0) {\n        new ObjectMatrix(formulaData!).forValue((row, col, value) => {\n            if (\n                !(pasteFrom.range.rows.includes(row) && pasteFrom.range.cols.includes(col)) &&\n                !(range.rows.includes(row) && range.cols.includes(col)) &&\n                cutFormulaIds.includes(value?.si as string)\n            ) {\n                const formulaString = formulaDataModel.getFormulaStringByCell(\n                    row,\n                    col,\n                    pasteFrom.subUnitId,\n                    pasteFrom.unitId\n                );\n\n                valueMatrix.setValue(row, col, {\n                    f: formulaString,\n                    si: null,\n                    v: null,\n                    p: null,\n                });\n            }\n        });\n    }\n\n    return valueMatrix;\n}\n\nfunction getCellRichText(cell: ICellData) {\n    if (cell?.p) {\n        const body = cell?.p.body;\n\n        if (body == null) {\n            return;\n        }\n\n        const data = body.dataStream;\n        const lastString = data.substring(data.length - 2, data.length);\n        const newDataStream = lastString === DEFAULT_EMPTY_DOCUMENT_VALUE ? data.substring(0, data.length - 2) : data;\n\n        return newDataStream;\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellDataForSheetInterceptor, ICommandInfo, IObjectMatrixPrimitiveType, IRange, IRowAutoHeightInfo, Nullable, Workbook, Worksheet } from '@univerjs/core';\nimport type { IRenderContext, IRenderModule, SpreadsheetSkeleton } from '@univerjs/engine-render';\nimport type { ISelectionWithStyle, ISetWorksheetRowAutoHeightMutationParams } from '@univerjs/sheets';\nimport {\n    ColorKit,\n    Disposable,\n    ICommandService,\n    ILogService,\n    Inject,\n    ObjectMatrix,\n    ThemeService,\n    toDisposable,\n} from '@univerjs/core';\nimport {\n    ErrorType,\n    FormulaDataModel,\n    SetArrayFormulaDataMutation,\n    SetFormulaCalculationResultMutation,\n} from '@univerjs/engine-formula';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { BEFORE_CELL_EDIT, SetWorksheetRowAutoHeightMutation, SheetInterceptorService } from '@univerjs/sheets';\nimport {\n    attachSelectionWithCoord,\n    SELECTION_SHAPE_DEPTH,\n    SelectionControl,\n    SheetSkeletonManagerService,\n} from '@univerjs/sheets-ui';\n\n/**\n * For Array formula in cell editing\n */\nexport class FormulaEditorShowController extends Disposable implements IRenderModule {\n    private _previousShape: Nullable<SelectionControl>;\n    private _skeleton: SpreadsheetSkeleton;\n\n    constructor(\n        private readonly _context: IRenderContext<Workbook>,\n        @Inject(SheetInterceptorService) private readonly _sheetInterceptorService: SheetInterceptorService,\n        @Inject(FormulaDataModel) private readonly _formulaDataModel: FormulaDataModel,\n        @Inject(ThemeService) private readonly _themeService: ThemeService,\n        @IRenderManagerService private readonly _renderManagerService: IRenderManagerService,\n        @Inject(SheetSkeletonManagerService) private readonly _sheetSkeletonManagerService: SheetSkeletonManagerService,\n        @ICommandService private readonly _commandService: ICommandService,\n        @ILogService private readonly _logService: ILogService\n    ) {\n        super();\n        this._initSkeletonChangeListener();\n        this._initInterceptorEditorStart();\n        this._commandExecutedListener();\n\n        // Do not intercept v:null and add t: CellValueType.NUMBER. When the cell =TODAY() is automatically filled, the number format will recognize the Number type and parse it as 1900-01-00 date format.\n    }\n\n    private _initSkeletonChangeListener(): void {\n        this.disposeWithMe(\n            this._sheetSkeletonManagerService.currentSkeleton$.subscribe((param) => {\n                if (param == null) {\n                    this._logService.debug('[FormulaEditorShowController]: should not receive currentSkeleton$ as null!');\n                } else {\n                    const { skeleton } = param;\n                    const prevSheetId = this._skeleton?.worksheet?.getSheetId();\n                    this._changeRuntime(skeleton);\n\n                    // change to another sheet\n                    if (prevSheetId !== skeleton.worksheet.getSheetId()) {\n                        this._removeArrayFormulaRangeShape();\n                    } else {\n                        const { unitId, sheetId } = param;\n                        this._updateArrayFormulaRangeShape(unitId, sheetId);\n                    }\n                }\n            })\n        );\n    }\n\n    protected _changeRuntime(skeleton: SpreadsheetSkeleton): void {\n        this._skeleton = skeleton;\n    }\n\n    private _initInterceptorEditorStart(): void {\n        this.disposeWithMe(\n            toDisposable(\n                this._sheetInterceptorService.writeCellInterceptor.intercept(BEFORE_CELL_EDIT, {\n                    handler: (value, context, next) => {\n                        const { row, col, unitId, subUnitId, worksheet } = context;\n                        const arrayFormulaMatrixRange = this._formulaDataModel.getArrayFormulaRange();\n\n                        const arrayFormulaMatrixCell = this._formulaDataModel.getArrayFormulaCellData();\n\n                        this._removeArrayFormulaRangeShape();\n\n                        if (value == null) {\n                            return next(value);\n                        }\n\n                        let cellInfo: Nullable<ICellDataForSheetInterceptor> = null;\n\n                        const formulaString = this._formulaDataModel.getFormulaStringByCell(row, col, subUnitId, unitId);\n\n                        if (formulaString !== null) {\n                            cellInfo = { f: formulaString };\n                        }\n\n                            /**\n                             * If the display conditions for the array formula are not met, return the range directly.\n                             */\n                        if (\n                            value.v != null &&\n                                value.v !== '' &&\n                                arrayFormulaMatrixCell[unitId]?.[subUnitId]?.[row]?.[col] == null\n                        ) {\n                            if (cellInfo) {\n                                return { ...value, ...cellInfo };\n                            }\n\n                            return next(value);\n                        }\n\n                            /**\n                             * Mark the array formula for special display in subsequent processing\n                             */\n                        const matrixRange = arrayFormulaMatrixRange?.[unitId]?.[subUnitId];\n                        if (matrixRange != null) {\n                                // For cells other than the upper left corner, the cellInfo information will be updated\n                            cellInfo = this._displayArrayFormulaRangeShape(matrixRange, row, col, unitId, subUnitId, worksheet, cellInfo);\n                        }\n\n                        if (cellInfo) {\n                            return { ...value, ...cellInfo };\n                        }\n\n                        return next(value);\n                    },\n                })\n            )\n        );\n    }\n\n    private _commandExecutedListener(): void {\n        this.disposeWithMe(this._commandService.onCommandExecuted((command: ICommandInfo, options) => {\n            if (command.id === SetFormulaCalculationResultMutation.id || (command.id === SetArrayFormulaDataMutation.id && options && options.remove)\n            ) {\n                this._removeArrayFormulaRangeShape();\n            }\n        }));\n\n        this.disposeWithMe(\n            this._commandService.beforeCommandExecuted((command: ICommandInfo) => {\n                if (SetWorksheetRowAutoHeightMutation.id === command.id) {\n                    requestIdleCallback(() => {\n                        const params = command.params as ISetWorksheetRowAutoHeightMutationParams;\n                        const { unitId, subUnitId, rowsAutoHeightInfo } = params;\n                        this._refreshArrayFormulaRangeShapeByRow(unitId, subUnitId, rowsAutoHeightInfo);\n                    });\n                }\n            })\n        );\n    }\n\n    private _displayArrayFormulaRangeShape(matrixRange: IObjectMatrixPrimitiveType<IRange>, row: number, col: number, unitId: string, subUnitId: string, worksheet: Worksheet, cellInfo: Nullable<ICellDataForSheetInterceptor>): Nullable<ICellDataForSheetInterceptor> {\n        const sheetFormulaData = this._formulaDataModel.getSheetFormulaData(unitId, subUnitId);\n\n        new ObjectMatrix(matrixRange).forValue((rowIndex, columnIndex, range) => {\n            if (range == null) {\n                return true;\n            }\n            const { startRow, startColumn, endRow, endColumn } = range;\n            if (rowIndex === row && columnIndex === col) {\n                this._createArrayFormulaRangeShape(range, unitId);\n                return false;\n            }\n            if (row >= startRow && row <= endRow && col >= startColumn && col <= endColumn) {\n                const mainCellValue = worksheet.getCell(startRow, startColumn);\n\n                if (mainCellValue?.v === ErrorType.SPILL) {\n                    return;\n                }\n\n                const formulaDataItem = sheetFormulaData?.[rowIndex]?.[columnIndex];\n\n                if (formulaDataItem == null || formulaDataItem.f == null) {\n                    return true;\n                }\n\n                if (cellInfo == null) {\n                    cellInfo = {\n                        f: formulaDataItem.f,\n                        isInArrayFormulaRange: true,\n                    };\n                }\n\n                this._createArrayFormulaRangeShape(range, unitId);\n                return false;\n            }\n        });\n\n        return cellInfo;\n    }\n\n    private _createArrayFormulaRangeShape(arrayRange: IRange, unitId: string): void {\n        const renderUnit = this._renderManagerService.getRenderById(unitId);\n        const skeleton = this._sheetSkeletonManagerService.getCurrentSkeleton();\n        if (!renderUnit || !skeleton) return;\n\n        const { scene } = renderUnit;\n        if (!scene) return;\n\n        const styleSheet = this._themeService.getCurrentTheme();\n        const selectionWithStyle: ISelectionWithStyle = {\n            range: arrayRange,\n            primary: null,\n            style: {\n                strokeWidth: 1,\n                stroke: styleSheet.hyacinth700,\n                fill: new ColorKit(styleSheet.colorWhite).setAlpha(0).toString(),\n                widgets: {},\n            },\n        };\n        const selectionWithCoord = attachSelectionWithCoord(selectionWithStyle, skeleton);\n        const { rowHeaderWidth, columnHeaderHeight } = skeleton;\n        const control = new SelectionControl(scene, SELECTION_SHAPE_DEPTH.FORMULA_EDITOR_SHOW, this._themeService, {\n            highlightHeader: false,\n            rowHeaderWidth,\n            columnHeaderHeight,\n        });\n        control.updateRangeBySelectionWithCoord(selectionWithCoord);\n        control.setEvent(false);\n        this._previousShape = control;\n    }\n\n    private _removeArrayFormulaRangeShape(): void {\n        if (this._previousShape == null) {\n            return;\n        }\n        this._previousShape.dispose();\n        this._previousShape = null;\n    }\n\n    private _refreshArrayFormulaRangeShape(unitId: string, _range?: IRange): void {\n        if (this._previousShape) {\n            const { startRow, endRow, startColumn, endColumn } = this._previousShape.getRange();\n            const range = { startRow, endRow, startColumn, endColumn };\n            this._removeArrayFormulaRangeShape();\n            this._createArrayFormulaRangeShape(range, unitId);\n        }\n    }\n\n    private _checkCurrentSheet(unitId: string, subUnitId: string): boolean {\n        const skeleton = this._sheetSkeletonManagerService.getCurrentSkeleton();\n        if (!skeleton) return false;\n\n        const worksheet = skeleton.worksheet;\n        if (!worksheet) return false;\n\n        if (worksheet.unitId === unitId && worksheet.getSheetId() === subUnitId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    private _updateArrayFormulaRangeShape(unitId: string, subUnitId: string): void {\n        if (!this._checkCurrentSheet(unitId, subUnitId)) return;\n        if (!this._previousShape) return;\n        this._refreshArrayFormulaRangeShape(unitId);\n    }\n\n    private _refreshArrayFormulaRangeShapeByRow(unitId: string, subUnitId: string, rowAutoHeightInfo: IRowAutoHeightInfo[]): void {\n        if (!this._checkCurrentSheet(unitId, subUnitId)) return;\n\n        if (!this._previousShape) return;\n\n        const { startRow: shapeStartRow, endRow: shapeEndRow, startColumn: shapeStartColumn, endColumn: shapeEndColumn } = this._previousShape.getRange();\n\n        for (let i = 0; i < rowAutoHeightInfo.length; i++) {\n            const { row } = rowAutoHeightInfo[i];\n            if (shapeStartRow >= row) {\n                const shapeRange = {\n                    startRow: shapeStartRow,\n                    endRow: shapeEndRow,\n                    startColumn: shapeStartColumn,\n                    endColumn: shapeEndColumn,\n                };\n                this._refreshArrayFormulaRangeShape(unitId, shapeRange);\n                break;\n            }\n        }\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Inject, InterceptorEffectEnum, RxDisposable } from '@univerjs/core';\nimport { FormulaDataModel } from '@univerjs/engine-formula';\nimport { INTERCEPTOR_POINT, SheetInterceptorService } from '@univerjs/sheets';\nimport { extractFormulaError } from './utils/utils';\n\nconst FORMULA_ERROR_MARK = {\n    tl: {\n        size: 6,\n        color: '#409f11',\n    },\n};\n\nexport class FormulaRenderManagerController extends RxDisposable {\n    constructor(\n        @Inject(SheetInterceptorService) private readonly _sheetInterceptorService: SheetInterceptorService,\n        @Inject(FormulaDataModel) private readonly _formulaDataModel: FormulaDataModel\n    ) {\n        super();\n\n        this.disposeWithMe(this._sheetInterceptorService.intercept(\n            INTERCEPTOR_POINT.CELL_CONTENT,\n            {\n                effect: InterceptorEffectEnum.Style,\n                handler: (cell, pos, next) => {\n                    const arrayFormulaCellData = this._formulaDataModel.getArrayFormulaCellData()?.\n                        [pos.unitId]?.\n                        [pos.subUnitId]?.\n                        [pos.row]?.\n                        [pos.col];\n\n                    const errorType = extractFormulaError(cell, !!arrayFormulaCellData);\n                    if (!errorType) {\n                        return next(cell);\n                    }\n\n                    return next({\n                        ...cell,\n                        markers: {\n                            ...cell?.markers,\n                            ...FORMULA_ERROR_MARK,\n                        },\n                    });\n                },\n                priority: 10,\n            }\n        ));\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand } from '@univerjs/core';\nimport { CommandType, ICommandService } from '@univerjs/core';\nimport { PREDEFINED_HOOK_NAME, SheetPasteCommand } from '@univerjs/sheets-ui';\n\nexport const SheetOnlyPasteFormulaCommand: ICommand = {\n    id: 'sheet.command.paste-formula',\n    type: CommandType.COMMAND,\n    handler: async (accessor) => {\n        const commandService = accessor.get(ICommandService);\n        return commandService.executeCommand(SheetPasteCommand.id, {\n            value: PREDEFINED_HOOK_NAME.SPECIAL_PASTE_FORMULA,\n        });\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IOperation } from '@univerjs/core';\nimport type { DeviceInputEventType } from '@univerjs/engine-render';\nimport type { KeyCode, MetaKeys } from '@univerjs/ui';\nimport type { META_KEY_CTRL_AND_SHIFT } from '../../common/prompt';\n\nimport { CommandType } from '@univerjs/core';\n\nexport interface ISelectEditorFormulaOperationParam {\n    eventType: DeviceInputEventType;\n    keycode?: KeyCode;\n    metaKey?: MetaKeys | typeof META_KEY_CTRL_AND_SHIFT;\n    isSingleEditor?: boolean;\n}\n\n// FIXME: this is an anti-pattern, using operation as an event\n\nexport const SelectEditorFormulaOperation: IOperation<ISelectEditorFormulaOperationParam> = {\n    id: 'formula-ui.operation.select-editor-formula',\n    type: CommandType.OPERATION,\n    handler: (accessor, params) => true,\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Direction, IDisposable } from '@univerjs/core';\nimport type { ISearchItem } from '@univerjs/sheets-formula';\nimport type { Observable } from 'rxjs';\nimport { createIdentifier, IContextService } from '@univerjs/core';\nimport { type IFunctionInfo, type ISequenceNode, sequenceNodeType } from '@univerjs/engine-formula';\nimport { Subject } from 'rxjs';\n\n/** If the formula prompt is visible. */\nexport const FORMULA_PROMPT_ACTIVATED = 'FORMULA_PROMPT_ACTIVATED';\n\nexport interface ISearchFunctionOperationParams {\n    /**\n     * show SearchFunction Component or not\n     */\n    visible: boolean;\n\n    /**\n     * function search text\n     */\n    searchText: string;\n\n    /**\n     * function list\n     */\n    searchList: ISearchItem[];\n}\n\nexport interface IHelpFunctionOperationParams {\n    /**\n     * show HelpFunction Component or not\n     */\n    visible: boolean;\n\n    /**\n     * function param index\n     */\n    paramIndex: number;\n\n    /**\n     * function info\n     */\n    functionInfo: IFunctionInfo;\n}\n\nexport interface INavigateParam {\n    direction: Direction.UP | Direction.DOWN;\n}\n\nexport interface IFormulaPromptService {\n    /**\n     * listen search function open\n     */\n    search$: Observable<ISearchFunctionOperationParams>;\n\n    /**\n     * open search function\n     */\n    search(param: ISearchFunctionOperationParams): void;\n\n    /**\n     * listen help function open\n     */\n    help$: Observable<IHelpFunctionOperationParams>;\n\n    /**\n     * open help function\n     */\n\n    help(param: IHelpFunctionOperationParams): void;\n\n    /**\n     * listen navigate shortcut, UP and DOWN\n     */\n    navigate$: Observable<INavigateParam>;\n\n    /**\n     * set navigate shortcut\n     */\n    navigate(param: INavigateParam): void;\n\n    /**\n     * listen accept shortcut, TAB/ENTER\n     */\n    accept$: Observable<boolean>;\n\n    /**\n     * set accept shortcut\n     */\n    accept(param: boolean): void;\n\n    /**\n     * accept formula name\n     */\n    acceptFormulaName$: Observable<string>;\n\n    /**\n     * set accept formula name\n     */\n    acceptFormulaName(param: string): void;\n\n    isSearching(): boolean;\n\n    isHelping(): boolean;\n\n    dispose(): void;\n\n    getSequenceNodes(): Array<string | ISequenceNode>;\n\n    setSequenceNodes(nodes: Array<string | ISequenceNode>): void;\n\n    clearSequenceNodes(): void;\n\n    getCurrentSequenceNodeIndex(strIndex: number): number;\n\n    getCurrentSequenceNodeByIndex(nodeIndex: number): string | ISequenceNode;\n\n    getCurrentSequenceNode(strIndex: number): string | ISequenceNode;\n\n    updateSequenceRef(nodeIndex: number, refString: string): void;\n\n    insertSequenceRef(index: number, refString: string): void;\n\n    insertSequenceString(index: number, content: string): void;\n\n    enableLockedSelectionChange(): void;\n\n    disableLockedSelectionChange(): void;\n\n    isLockedSelectionChange(): boolean;\n\n    enableLockedSelectionInsert(): void;\n\n    disableLockedSelectionInsert(): void;\n\n    isLockedSelectionInsert(): boolean;\n}\n\nexport const IFormulaPromptService = createIdentifier<FormulaPromptService>('formula-ui.prompt-service');\n\nexport class FormulaPromptService implements IFormulaPromptService, IDisposable {\n    private readonly _search$ = new Subject<ISearchFunctionOperationParams>();\n\n    private readonly _help$ = new Subject<IHelpFunctionOperationParams>();\n\n    private readonly _navigate$ = new Subject<INavigateParam>();\n\n    private readonly _accept$ = new Subject<boolean>();\n\n    private readonly _acceptFormulaName$ = new Subject<string>();\n\n    readonly search$ = this._search$.asObservable();\n\n    readonly help$ = this._help$.asObservable();\n\n    readonly navigate$ = this._navigate$.asObservable();\n\n    readonly accept$ = this._accept$.asObservable();\n\n    readonly acceptFormulaName$ = this._acceptFormulaName$.asObservable();\n\n    private _searching: boolean = false;\n\n    private _helping: boolean = false;\n\n    private _sequenceNodes: Array<string | ISequenceNode> = [];\n\n    private _isLockedOnSelectionChangeRefString: boolean = false;\n\n    private _isLockedOnSelectionInsertRefString: boolean = false;\n\n    constructor(\n        @IContextService private readonly _contextService: IContextService\n    ) {\n    }\n\n    dispose(): void {\n        this._search$.complete();\n        this._help$.complete();\n        this._navigate$.complete();\n        this._accept$.complete();\n        this._acceptFormulaName$.complete();\n        this._sequenceNodes = [];\n    }\n\n    search(param: ISearchFunctionOperationParams) {\n        this._contextService.setContextValue(FORMULA_PROMPT_ACTIVATED, param.visible);\n        this._searching = param.visible;\n        this._search$.next(param);\n    }\n\n    isSearching() {\n        return this._searching;\n    }\n\n    help(param: IHelpFunctionOperationParams) {\n        this._helping = param.visible;\n        this._help$.next(param);\n    }\n\n    isHelping() {\n        return this._helping;\n    }\n\n    navigate(param: INavigateParam) {\n        this._navigate$.next(param);\n    }\n\n    accept(param: boolean) {\n        this._accept$.next(param);\n    }\n\n    acceptFormulaName(param: string) {\n        this._acceptFormulaName$.next(param);\n    }\n\n    getSequenceNodes() {\n        return [...this._sequenceNodes];\n    }\n\n    setSequenceNodes(nodes: Array<string | ISequenceNode>) {\n        this._sequenceNodes = nodes;\n    }\n\n    clearSequenceNodes() {\n        this._sequenceNodes = [];\n    }\n\n    getCurrentSequenceNode(strIndex: number) {\n        return this._sequenceNodes[this.getCurrentSequenceNodeIndex(strIndex)];\n    }\n\n    getCurrentSequenceNodeByIndex(nodeIndex: number) {\n        return this._sequenceNodes[nodeIndex];\n    }\n\n    /**\n     * Query the text coordinates in the sequenceNodes and determine the actual insertion index.\n     * @param strIndex\n     */\n    getCurrentSequenceNodeIndex(strIndex: number) {\n        let nodeIndex = 0;\n        const firstNode = this._sequenceNodes[0];\n\n        for (let i = 0, len = this._sequenceNodes.length; i < len; i++) {\n            const node = this._sequenceNodes[i];\n\n            if (typeof node === 'string') {\n                nodeIndex++;\n            } else {\n                const { endIndex } = node;\n\n                nodeIndex = endIndex;\n            }\n\n            if (strIndex <= nodeIndex) {\n                /**\n                 * =((|A1 and =|**\uFF0Cfix https://github.com/dream-num/univer/issues/1387\n                 */\n                if (typeof firstNode === 'string' && strIndex !== 0) {\n                    return i + 1;\n                }\n\n                return i;\n            }\n        }\n\n        return this._sequenceNodes.length;\n    }\n\n    /**\n     * Synchronize the reference text based on the changes of the selection.\n     * @param nodeIndex\n     * @param refString\n     */\n    updateSequenceRef(nodeIndex: number, refString: string) {\n        const node = this._sequenceNodes[nodeIndex];\n\n        if (typeof node === 'string' || node.nodeType !== sequenceNodeType.REFERENCE) {\n            return;\n        }\n\n        const difference = refString.length - node.token.length;\n\n        const newNode = { ...node };\n\n        newNode.token = refString;\n\n        newNode.endIndex += difference;\n\n        this._sequenceNodes[nodeIndex] = newNode;\n\n        for (let i = nodeIndex + 1, len = this._sequenceNodes.length; i < len; i++) {\n            const node = this._sequenceNodes[i];\n            if (typeof node === 'string') {\n                continue;\n            }\n\n            const newNode = { ...node };\n\n            newNode.startIndex += difference;\n            newNode.endIndex += difference;\n\n            this._sequenceNodes[i] = newNode;\n        }\n    }\n\n    /**\n     * When the cursor is on the right side of a formula token,\n     * you can add reference text to the formula by drawing a selection.\n     * @param index\n     * @param refString\n     */\n    insertSequenceRef(index: number, refString: string) {\n        const refStringCount = refString.length;\n\n        const nodeIndex = this.getCurrentSequenceNodeIndex(index);\n\n        this._sequenceNodes.splice(nodeIndex, 0, {\n            token: refString,\n            startIndex: index,\n            endIndex: index + refStringCount - 1,\n            nodeType: sequenceNodeType.REFERENCE,\n        });\n\n        for (let i = nodeIndex + 1, len = this._sequenceNodes.length; i < len; i++) {\n            const node = this._sequenceNodes[i];\n            if (typeof node === 'string') {\n                continue;\n            }\n\n            const newNode = { ...node };\n\n            newNode.startIndex += refStringCount;\n            newNode.endIndex += refStringCount;\n\n            this._sequenceNodes[i] = newNode;\n        }\n    }\n\n    /**\n     * Insert a string at the cursor position in the text corresponding to the sequenceNodes.\n     * @param index\n     * @param content\n     */\n    insertSequenceString(index: number, content: string) {\n        const nodeIndex = this.getCurrentSequenceNodeIndex(index);\n        const str = content.split('');\n        this._sequenceNodes.splice(nodeIndex, 0, ...str);\n\n        const contentCount = str.length;\n\n        for (let i = nodeIndex + contentCount, len = this._sequenceNodes.length; i < len; i++) {\n            const node = this._sequenceNodes[i];\n            if (typeof node === 'string') {\n                continue;\n            }\n\n            const newNode = { ...node };\n\n            newNode.startIndex += contentCount;\n            newNode.endIndex += contentCount;\n\n            this._sequenceNodes[i] = newNode;\n        }\n    }\n\n    enableLockedSelectionChange() {\n        this._isLockedOnSelectionChangeRefString = true;\n    }\n\n    disableLockedSelectionChange() {\n        this._isLockedOnSelectionChangeRefString = false;\n    }\n\n    isLockedSelectionChange() {\n        return this._isLockedOnSelectionChangeRefString;\n    }\n\n    enableLockedSelectionInsert() {\n        this._isLockedOnSelectionInsertRefString = true;\n    }\n\n    disableLockedSelectionInsert() {\n        this._isLockedOnSelectionInsertRefString = false;\n    }\n\n    isLockedSelectionInsert() {\n        return this._isLockedOnSelectionInsertRefString;\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, ICommand } from '@univerjs/core';\nimport type { IHelpFunctionOperationParams } from '../../services/prompt.service';\n\nimport { CommandType } from '@univerjs/core';\nimport { IFormulaPromptService } from '../../services/prompt.service';\n\nexport const HelpFunctionOperation: ICommand = {\n    id: 'formula-ui.operation.help-function',\n    type: CommandType.OPERATION,\n    handler: async (accessor: IAccessor, params: IHelpFunctionOperationParams) => {\n        const promptService = accessor.get(IFormulaPromptService);\n        promptService.help(params);\n\n        return true;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, ICellData, ICommand, IRange, Nullable, ObjectMatrix } from '@univerjs/core';\nimport type { IInsertFunction } from '@univerjs/sheets-formula';\nimport {\n    CellValueType,\n    CommandType,\n    DEFAULT_EMPTY_DOCUMENT_VALUE,\n    DOCS_FORMULA_BAR_EDITOR_UNIT_ID_KEY,\n    DOCS_NORMAL_EDITOR_UNIT_ID_KEY,\n    getCellValueType,\n    ICommandService,\n    isRealNum,\n    IUniverInstanceService,\n    Rectangle,\n} from '@univerjs/core';\nimport { IEditorService } from '@univerjs/docs-ui';\nimport { serializeRange } from '@univerjs/engine-formula';\nimport { DeviceInputEventType } from '@univerjs/engine-render';\nimport {\n    getCellAtRowCol,\n    getSheetCommandTarget,\n    SetSelectionsOperation,\n    SheetsSelectionsService,\n} from '@univerjs/sheets';\nimport { InsertFunctionCommand } from '@univerjs/sheets-formula';\nimport { IEditorBridgeService, SetCellEditVisibleOperation } from '@univerjs/sheets-ui';\n\nexport interface IInsertFunctionOperationParams {\n    /**\n     * function name\n     */\n    value: string;\n}\n\nexport const InsertFunctionOperation: ICommand = {\n    id: 'formula-ui.operation.insert-function',\n    type: CommandType.OPERATION,\n    // eslint-disable-next-line\n    handler: async (accessor: IAccessor, params: IInsertFunctionOperationParams) => {\n        const selectionManagerService = accessor.get(SheetsSelectionsService);\n        const editorService = accessor.get(IEditorService);\n        const currentSelections = selectionManagerService.getCurrentSelections();\n        if (!currentSelections || !currentSelections.length) {\n            return false;\n        }\n\n        const target = getSheetCommandTarget(accessor.get(IUniverInstanceService));\n        if (!target) return false;\n\n        const { worksheet, unitId, subUnitId } = target;\n        const cellMatrix = worksheet.getCellMatrix();\n\n        const { value } = params;\n        const commandService = accessor.get(ICommandService);\n        const editorBridgeService = accessor.get(IEditorBridgeService);\n\n        // No match refRange situation, enter edit mode\n        // In each range, first take the judgment result of the primary position (if there is no primary, take the upper left corner),\n        // If the range cannot be found, enter the edit mode.\n        // If there is a range and range cell has no number value, set the formula range directly, and then set the formula id of other positions. The first formula range is the nearest continuous numeric cell, and other formulas are relatively offset by ID.\n        // If the range cell has number value, find the first blank cell in the row or column direction and set the formula range. The formula calculation range is the range.\n        const list: IInsertFunction[] = [];\n        const listOfRangeHasNumber: IInsertFunction[] = [];\n        let editRange: IRange | null = null;\n        let editRow = 0;\n        let editColumn = 0;\n        let editFormulaRangeString = '';\n\n        // Whether or not there is a matching refRange, a single cell, or a multi-row and multi-column range with no number value, enters the edit mode\n        if (\n            currentSelections.length === 1 &&\n            (isSingleCell(currentSelections[0].range) || (isMultiRowsColumnsRange(currentSelections[0].range) && rangeHasNoNumber(cellMatrix, currentSelections[0].range)))\n        ) {\n            const { range, primary } = currentSelections[0];\n            const row = primary?.actualRow ?? range.startRow;\n            const column = primary?.actualColumn ?? range.startColumn;\n\n            editRange = range;\n            editRow = row;\n            editColumn = column;\n\n            const refRange = findRefRange(cellMatrix, row, column);\n\n            if (refRange) {\n                editFormulaRangeString = serializeRange(refRange);\n            }\n        } else {\n            // eslint-disable-next-line\n            currentSelections.some((selection) => {\n                const { range, primary } = selection;\n\n                if (rangeHasNoNumber(cellMatrix, range)) {\n                    // single row or single column and range cell has no number value\n                    const row = primary?.actualRow ?? range.startRow;\n                    const column = primary?.actualColumn ?? range.startColumn;\n\n                    const refRange = findRefRange(cellMatrix, row, column);\n\n                    if (!refRange) {\n                        editRange = range;\n                        editRow = row;\n                        editColumn = column;\n                        return true;\n                    }\n\n                    const rangeString = serializeRange(refRange);\n                    const formulaString = `=${value}(${rangeString})`;\n\n                    list.push({\n                        range,\n                        primary: {\n                            row,\n                            column,\n                        },\n                        formula: formulaString,\n                    });\n                } else {\n                    // range cell has number value\n                    const { startRow, startColumn, endRow, endColumn } = range;\n\n                    if (startRow === endRow) {\n                        // single row, insert function in the blank cell of the row\n                        const blankCellColumn = findBlankCellOfRow(cellMatrix, startRow, endColumn, worksheet.getColumnCount() - 1);\n                        const newEndColumn = blankCellColumn === endColumn ? endColumn - 1 : endColumn;\n                        const rangeString = serializeRange({\n                            startRow,\n                            endRow,\n                            startColumn,\n                            endColumn: newEndColumn,\n                        });\n                        const formulaString = `=${value}(${rangeString})`;\n\n                        listOfRangeHasNumber.push({\n                            range,\n                            primary: {\n                                row: startRow,\n                                column: blankCellColumn,\n                            },\n                            formula: formulaString,\n                        });\n                    } else {\n                        // single column or multi-column, insert function in the blank cell of the column\n                        let maxBlankCellRow = -1;\n\n                        for (let c = startColumn; c <= endColumn; c++) {\n                            const blankCellRow = findBlankCellOfColumn(cellMatrix, c, endRow, worksheet.getRowCount() - 1);\n                            maxBlankCellRow = Math.max(maxBlankCellRow, blankCellRow);\n                        }\n\n                        const newEndRow = maxBlankCellRow === endRow ? endRow - 1 : endRow;\n\n                        for (let c = startColumn; c <= endColumn; c++) {\n                            const rangeString = serializeRange({\n                                startRow,\n                                endRow: newEndRow,\n                                startColumn: c,\n                                endColumn: c,\n                            });\n                            const formulaString = `=${value}(${rangeString})`;\n\n                            listOfRangeHasNumber.push({\n                                range,\n                                primary: {\n                                    row: maxBlankCellRow,\n                                    column: c,\n                                },\n                                formula: formulaString,\n                            });\n                        }\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        if (editRange) {\n            // set current position\n            const destRange = getCellAtRowCol(editRow, editColumn, worksheet);\n\n            const resultRange = {\n                range: Rectangle.clone(editRange),\n                primary: {\n                    startRow: destRange.startRow,\n                    startColumn: destRange.startColumn,\n                    endRow: destRange.endRow,\n                    endColumn: destRange.endColumn,\n                    actualRow: editRow,\n                    actualColumn: editColumn,\n                    isMerged: destRange.isMerged,\n                    isMergedMainCell: destRange.startRow === editRow && destRange.startColumn === editColumn,\n                },\n            };\n\n            const setSelectionParams = {\n                unitId,\n                subUnitId,\n\n                selections: [resultRange],\n            };\n            await commandService.executeCommand(SetSelectionsOperation.id, setSelectionParams);\n            const editor = editorService.getEditor(DOCS_NORMAL_EDITOR_UNIT_ID_KEY);\n            const formulaEditor = editorService.getEditor(DOCS_FORMULA_BAR_EDITOR_UNIT_ID_KEY);\n            commandService.syncExecuteCommand(SetCellEditVisibleOperation.id, {\n                visible: true,\n                unitId,\n                eventType: DeviceInputEventType.Dblclick,\n            });\n            const formulaText = `=${value}(${editFormulaRangeString}`;\n            editor?.replaceText(formulaText);\n            formulaEditor?.replaceText(formulaText, false);\n        }\n\n        if (list.length === 0 && listOfRangeHasNumber.length === 0) return false;\n\n        return commandService.executeCommand(InsertFunctionCommand.id, {\n            list,\n            listOfRangeHasNumber,\n        });\n    },\n};\n\n/**\n * 1. Starting from the first position on the left or top and ending with a continuous number (the first non-blank cell is allowed to be text)\n * 2. Match the upper part first, then the left part. If not, insert a function with empty parameters.\n */\nfunction findRefRange(cellMatrix: ObjectMatrix<Nullable<ICellData>>, row: number, column: number): Nullable<IRange> {\n    const startRow = findStartRow(cellMatrix, row, column);\n    if (startRow !== row) {\n        return {\n            startRow,\n            endRow: row - 1,\n            startColumn: column,\n            endColumn: column,\n        };\n    }\n\n    const startColumn = findStartColumn(cellMatrix, row, column);\n    if (startColumn !== column) {\n        return {\n            startRow: row,\n            endRow: row,\n            startColumn,\n            endColumn: column - 1,\n        };\n    }\n    return null;\n}\n\nfunction findStartRow(cellMatrix: ObjectMatrix<Nullable<ICellData>>, row: number, column: number) {\n    let isFirstNumber = false;\n\n    if (row === 0) return row;\n\n    for (let r = row - 1; r >= 0; r--) {\n        const cell = cellMatrix.getValue(r, column);\n\n        if (isNumberCell(cell) && !isFirstNumber) {\n            if (r === 0) return 0;\n            isFirstNumber = true;\n        } else if (isFirstNumber && !isNumberCell(cell)) {\n            return r + 1;\n        } else if (isFirstNumber && r === 0) {\n            return 0;\n        }\n    }\n\n    return row;\n}\n\nfunction findStartColumn(cellMatrix: ObjectMatrix<Nullable<ICellData>>, row: number, column: number) {\n    let isFirstNumber = false;\n\n    if (column === 0) return column;\n\n    for (let c = column - 1; c >= 0; c--) {\n        const cell = cellMatrix.getValue(row, c);\n\n        if (isNumberCell(cell) && !isFirstNumber) {\n            if (c === 0) return 0;\n            isFirstNumber = true;\n        } else if (isFirstNumber && !isNumberCell(cell)) {\n            return c + 1;\n        } else if (isFirstNumber && c === 0) {\n            return 0;\n        }\n    }\n\n    return column;\n}\n\nexport function isNumberCell(cell: Nullable<ICellData>) {\n    if (cell?.p) {\n        const body = cell?.p.body;\n\n        if (body == null) {\n            return false;\n        }\n\n        const data = body.dataStream;\n        const lastString = data.substring(data.length - 2, data.length);\n        const newDataStream = lastString === DEFAULT_EMPTY_DOCUMENT_VALUE ? data.substring(0, data.length - 2) : data;\n\n        return isRealNum(newDataStream);\n    }\n    return cell && (cell.t === CellValueType.NUMBER || getCellValueType(cell) === CellValueType.NUMBER);\n}\n\n/**\n * Check if a single cell\n * @param range\n */\nexport function isSingleCell(range: IRange) {\n    return range.startRow === range.endRow && range.startColumn === range.endColumn;\n}\n\n/**\n * Check if there is a multi-row, multi-column range\n * @param range\n */\nexport function isMultiRowsColumnsRange(range: IRange) {\n    return range.startRow !== range.endRow && range.startColumn !== range.endColumn;\n}\n\n/**\n * Check the range has no number\n * @param cellMatrix\n * @param range\n */\nexport function rangeHasNoNumber(cellMatrix: ObjectMatrix<Nullable<ICellData>>, range: IRange) {\n    for (let i = range.startRow; i <= range.endRow; i++) {\n        for (let j = range.startColumn; j <= range.endColumn; j++) {\n            if (isNumberCell(cellMatrix.getValue(i, j))) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nfunction findBlankCellOfRow(cellMatrix: ObjectMatrix<Nullable<ICellData>>, row: number, startColumn: number, endColumn: number) {\n    for (let c = startColumn; c <= endColumn; c++) {\n        if (!cellMatrix.getValue(row, c)) {\n            return c;\n        }\n    }\n    return endColumn;\n}\n\nfunction findBlankCellOfColumn(cellMatrix: ObjectMatrix<Nullable<ICellData>>, column: number, startRow: number, endRow: number) {\n    for (let r = startRow; r <= endRow; r++) {\n        if (!cellMatrix.getValue(r, column)) {\n            return r;\n        }\n    }\n    return endRow;\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FORMULA_UI_PLUGIN_NAME } from '../../common/plugin-name';\n\nexport const MORE_FUNCTIONS_COMPONENT = `${FORMULA_UI_PLUGIN_NAME}_MORE_FUNCTIONS_COMPONENT`;\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, ICommand } from '@univerjs/core';\nimport { CommandType } from '@univerjs/core';\nimport { ISidebarService } from '@univerjs/ui';\n\nimport { MORE_FUNCTIONS_COMPONENT } from '../../views/more-functions/interface';\n\nexport const MoreFunctionsOperation: ICommand = {\n    id: 'formula-ui.operation.more-functions',\n    type: CommandType.OPERATION,\n    handler: async (accessor: IAccessor) => {\n        const sidebarService = accessor.get(ISidebarService);\n\n        sidebarService.open({\n            header: { title: 'formula.insert.tooltip' },\n            children: { label: MORE_FUNCTIONS_COMPONENT },\n        });\n\n        return true;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, ICommand } from '@univerjs/core';\nimport { CommandType } from '@univerjs/core';\n\nexport const ReferenceAbsoluteOperation: ICommand = {\n    id: 'formula-ui.operation.change-ref-to-absolute',\n    type: CommandType.OPERATION,\n    handler: async (accessor: IAccessor) => true,\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, ICommand } from '@univerjs/core';\nimport type { ISearchFunctionOperationParams } from '../../services/prompt.service';\n\nimport { CommandType } from '@univerjs/core';\nimport { IFormulaPromptService } from '../../services/prompt.service';\n\nexport const SearchFunctionOperation: ICommand = {\n    id: 'formula-ui.operation.search-function',\n    type: CommandType.OPERATION,\n    handler: async (accessor: IAccessor, params: ISearchFunctionOperationParams) => {\n        const promptService = accessor.get(IFormulaPromptService);\n        promptService.search(params);\n\n        return true;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ICommandService } from '@univerjs/core';\nimport { SetFormulaCalculationStopMutation } from '@univerjs/engine-formula';\nimport { TriggerCalculationController } from '@univerjs/sheets-formula';\nimport { ProgressBar, useDependency, useObservable } from '@univerjs/ui';\nimport React, { useCallback } from 'react';\n\nexport function FormulaProgressBar() {\n    const triggerCalculationController = useDependency(TriggerCalculationController);\n    const commandService = useDependency(ICommandService);\n    const progress = useObservable(triggerCalculationController.progress$)!;\n\n    const terminateCalculation = useCallback(() => {\n        commandService.executeCommand(SetFormulaCalculationStopMutation.id);\n    }, [commandService]);\n\n    const clearProgress = useCallback(() => {\n        triggerCalculationController.clearProgress();\n    }, [triggerCalculationController]);\n\n    return <ProgressBar progress={progress} onTerminate={terminateCalculation} onClearProgress={clearProgress} />;\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IFunctionInfo, IFunctionParam } from '@univerjs/engine-formula';\nimport type { IHelpFunctionOperationParams } from '../../../services/prompt.service';\nimport { IUniverInstanceService, LocaleService } from '@univerjs/core';\nimport { Popup } from '@univerjs/design';\nimport { IEditorService } from '@univerjs/docs-ui';\nimport { CloseSingle, DetailsSingle, MoreSingle } from '@univerjs/icons';\nimport { ILayoutService, ISidebarService, useDependency, useInjector } from '@univerjs/ui';\n\nimport React, { useEffect, useState } from 'react';\nimport { throttleTime } from 'rxjs';\nimport { IFormulaPromptService } from '../../../services/prompt.service';\nimport { generateParam } from '../../../services/utils';\nimport { useResizeScrollObserver } from '../resize-scroll-observer';\nimport styles from './index.module.less';\n\nexport function HelpFunction() {\n    const [visible, setVisible] = useState(false);\n    const [contentVisible, setContentVisible] = useState(true);\n    const [helpVisible, setHelpVisible] = useState(true);\n    const [paramIndex, setParamIndex] = useState(0);\n    const [offset, setOffset] = useState<[number, number]>([0, 0]);\n    const [decoratorPosition, setDecoratorPosition] = useState({ left: 0, top: 0 });\n    const [functionInfo, setFunctionInfo] = useState<IFunctionInfo | null>(null);\n    const promptService = useDependency(IFormulaPromptService);\n    const localeService = useDependency(LocaleService);\n    const required = localeService.t('formula.prompt.required');\n    const optional = localeService.t('formula.prompt.optional');\n\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const editorService = useDependency(IEditorService);\n    const sidebarService = useDependency(ISidebarService);\n    const injector = useInjector();\n\n    // window resize/scroll, update HelpFunction position\n    useResizeScrollObserver(updatePosition);\n\n    useEffect(() => {\n        const subscription = promptService.help$.subscribe((params: IHelpFunctionOperationParams) => {\n            const { visible, paramIndex, functionInfo } = params;\n            if (!visible) {\n                setVisible(visible);\n                return;\n            }\n\n            const position = getPosition();\n\n            if (position == null) {\n                return;\n            }\n\n            const { left, top, height } = position;\n\n            if (functionInfo.description === '' && functionInfo.functionParameter.length === 0) {\n                return;\n            }\n\n            setOffset([left, top + height]);\n            setParamIndex(paramIndex);\n            setFunctionInfo(functionInfo);\n            setDecoratorPosition({ left, top });\n            setVisible(visible);\n        });\n\n        const sidebarSubscription = sidebarService.scrollEvent$.pipe(throttleTime(100)).subscribe(updatePosition);\n\n        return () => {\n            subscription?.unsubscribe();\n            sidebarSubscription.unsubscribe();\n        };\n    }, []);\n\n    function updatePosition() {\n        if (!helpVisible) {\n            return;\n        }\n\n        const position = getPosition();\n\n        if (position == null) {\n            return;\n        }\n\n        const { left, top, height } = position;\n        setOffset([left, top + height]);\n    }\n\n    function getPosition() {\n        const documentDataModel = univerInstanceService.getCurrentUniverDocInstance();\n        if (!documentDataModel) {\n            return;\n        }\n        const editorUnitId = documentDataModel.getUnitId();\n\n        if (!editorService.isEditor(editorUnitId)) {\n            return;\n        }\n\n        const editor = editorService.getEditor(editorUnitId);\n        return editor?.getBoundingClientRect();\n    }\n\n    function handleSwitchActive(paramIndex: number) {\n        setParamIndex(paramIndex);\n    }\n\n    function handleClose() {\n        setHelpVisible(!helpVisible);\n\n        // focus editor\n        // FIXME: @Jocs, still need re focus?\n        const layoutService = injector.get(ILayoutService);\n        layoutService.focus();\n    }\n\n    return (\n        <>\n            {helpVisible\n                ? (\n                    <Popup visible={visible} offset={offset}>\n                        {functionInfo\n                            ? (\n                                <div className={styles.formulaHelpFunction}>\n                                    <div className={styles.formulaHelpFunctionTitle}>\n                                        <Help\n                                            prefix={functionInfo.functionName}\n                                            value={functionInfo.functionParameter}\n                                            active={paramIndex}\n                                            onClick={handleSwitchActive}\n                                        />\n                                        <div className={styles.formulaHelpFunctionTitleIcons}>\n                                            <div\n                                                className={styles.formulaHelpFunctionTitleIcon}\n                                                style={{ transform: contentVisible ? 'rotateZ(-90deg)' : 'rotateZ(90deg)' }}\n                                                onClick={() => setContentVisible(!contentVisible)}\n                                            >\n                                                <MoreSingle />\n                                            </div>\n                                            <div\n                                                className={styles.formulaHelpFunctionTitleIcon}\n                                                onClick={handleClose}\n                                            >\n                                                <CloseSingle />\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div\n                                        className={styles.formulaHelpFunctionContent}\n                                        style={{\n                                            height: contentVisible ? 'unset' : 0,\n                                            padding: contentVisible ? 'revert-layer' : 0,\n                                        }}\n                                    >\n                                        <div className={styles.formulaHelpFunctionContentInner}>\n                                            <Params\n                                                title={localeService.t('formula.prompt.helpExample')}\n                                                value={`${functionInfo.functionName}(${functionInfo.functionParameter\n                                                    .map((item) => item.example)\n                                                    .join(',')})`}\n                                            />\n                                            <Params\n                                                title={localeService.t('formula.prompt.helpAbstract')}\n                                                value={functionInfo.description}\n                                            />\n                                            {functionInfo &&\n                                        functionInfo.functionParameter &&\n                                        functionInfo.functionParameter.map((item: IFunctionParam, i: number) => (\n                                            <Params\n                                                key={i}\n                                                className={paramIndex === i ? styles.formulaHelpFunctionActive : ''}\n                                                title={item.name}\n                                                value={`${item.require ? required : optional} ${item.detail}`}\n                                            />\n                                        ))}\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                            : (\n                                <></>\n                            )}\n                    </Popup>\n                )\n                : visible\n                    ? (\n                        <div\n                            className={styles.formulaHelpDecorator}\n                            onClick={() => setHelpVisible(!helpVisible)}\n                            style={{ left: decoratorPosition.left - 24, top: decoratorPosition.top }}\n                        >\n                            <DetailsSingle />\n                        </div>\n                    )\n                    : (\n                        <></>\n                    )}\n        </>\n    );\n}\n\ninterface IParamsProps {\n    className?: string;\n    title?: string;\n    value?: string;\n}\n\nconst Params = (props: IParamsProps) => (\n    <div className={styles.formulaHelpFunctionContentParams}>\n        <div className={`\n          ${styles.formulaHelpFunctionContentParamsTitle}\n          ${props.className}\n        `}\n        >\n            {props.title}\n        </div>\n        <div className={styles.formulaHelpFunctionContentParamsDetail}>{props.value}</div>\n    </div>\n);\n\ninterface IHelpProps {\n    prefix?: string;\n    value?: IFunctionParam[];\n    active: number;\n    onClick: (paramIndex: number) => void;\n}\n\nconst Help = (props: IHelpProps) => {\n    const { prefix, value, active, onClick } = props;\n    return (\n        <div className={styles.formulaHelpParam}>\n            <span className={styles.formulaHelpParamPrefix}>\n                {prefix}\n                (\n            </span>\n            {value &&\n                value.map((item: IFunctionParam, i: number) => (\n                    // TODO@Dushusir: more params needs to be active\n                    <span key={i} className={styles.formulaHelpParamItem}>\n                        <span\n                            className={active === i ? styles.formulaHelpFunctionActive : styles.formulaHelpParamActive}\n                            onClick={() => onClick(i)}\n                        >\n                            {generateParam(item)}\n                        </span>\n                        {i === value.length - 1 ? '' : ','}\n                    </span>\n                ))}\n            )\n        </div>\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { LocaleService } from '@univerjs/core';\nimport type { IFunctionInfo, IFunctionParam } from '@univerjs/engine-formula';\n\nexport function getFunctionTypeValues(\n    enumObj: any,\n    localeService: LocaleService\n): Array<{ label: string; value: string }> {\n    // Exclude the DefinedName key\n    return Object.keys(enumObj)\n        .filter((key) => isNaN(Number(key)) && key !== 'DefinedName')\n        .map((key) => ({\n            label: localeService.t(`formula.functionType.${key.toLocaleLowerCase()}`),\n            value: `${enumObj[key]}`,\n        }));\n}\n\nexport function getFunctionName(item: IFunctionInfo, localeService: LocaleService) {\n    let functionName = '';\n    if (item.aliasFunctionName) {\n        functionName = localeService.t(item.aliasFunctionName);\n\n        if (functionName === item.aliasFunctionName) {\n            functionName = item.functionName;\n        }\n    } else {\n        functionName = item.functionName;\n    }\n\n    return functionName;\n}\n\nexport function generateParam(param: IFunctionParam) {\n    if (!param.require && !param.repeat) {\n        return `[${param.name}]`;\n    } else if (param.require && !param.repeat) {\n        return param.name;\n    } else if (!param.require && param.repeat) {\n        return `[${param.name},...]`;\n    } else if (param.require && param.repeat) {\n        return `${param.name},...`;\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useEffect } from 'react';\n\ntype Callback = () => void;\n\nexport const useResizeScrollObserver = (callback: Callback, delay: number = 100): void => {\n    useEffect(() => {\n        let throttleTimeout: number | null = null;\n\n        const throttledCallback = () => {\n            if (throttleTimeout === null) {\n                throttleTimeout = window.setTimeout(() => {\n                    callback();\n                    throttleTimeout = null;\n                }, delay);\n            }\n        };\n\n        window.addEventListener('scroll', throttledCallback);\n        window.addEventListener('resize', throttledCallback);\n\n        return () => {\n            if (throttleTimeout !== null) {\n                clearTimeout(throttleTimeout);\n            }\n            window.removeEventListener('scroll', throttledCallback);\n            window.removeEventListener('resize', throttledCallback);\n        };\n    }, [callback, delay]);\n};\n\nexport default useResizeScrollObserver;\n", "export default {\n  \"formulaHelpFunction\": \"univer-formula-help-function\",\n  \"formulaHelpFunctionTitle\": \"univer-formula-help-function-title\",\n  \"formulaHelpFunctionTitleIcons\": \"univer-formula-help-function-title-icons\",\n  \"formulaHelpFunctionTitleIcon\": \"univer-formula-help-function-title-icon\",\n  \"formulaHelpFunctionContent\": \"univer-formula-help-function-content\",\n  \"formulaHelpFunctionContentInner\": \"univer-formula-help-function-content-inner\",\n  \"formulaHelpFunctionContentParams\": \"univer-formula-help-function-content-params\",\n  \"formulaHelpFunctionContentParamsTitle\": \"univer-formula-help-function-content-params-title\",\n  \"formulaHelpFunctionContentParamsDetail\": \"univer-formula-help-function-content-params-detail\",\n  \"formulaHelpFunctionActive\": \"univer-formula-help-function-active\",\n  \"formulaHelpDecorator\": \"univer-formula-help-decorator\",\n  \"formulaHelpParam\": \"univer-formula-help-param\",\n  \"formulaHelpParamPrefix\": \"univer-formula-help-param-prefix\",\n  \"formulaHelpParamItem\": \"univer-formula-help-param-item\",\n  \"formulaHelpParamActive\": \"univer-formula-help-param-active\"\n};import \"ni:sha-256;eweKA2hqiZwv-_qnzyEISEeytkhf11JPLh817CFvAng\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ISearchItem } from '@univerjs/sheets-formula';\nimport type { INavigateParam, ISearchFunctionOperationParams } from '../../../services/prompt.service';\n\nimport { Direction, IUniverInstanceService } from '@univerjs/core';\nimport { Popup } from '@univerjs/design';\nimport { IEditorService } from '@univerjs/docs-ui';\nimport { useDependency } from '@univerjs/ui';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { IFormulaPromptService } from '../../../services/prompt.service';\nimport styles from './index.module.less';\n\nexport function SearchFunction() {\n    const [visible, setVisible] = useState(false);\n    const [active, setActive] = useState(0);\n    const [offset, setOffset] = useState<[number, number]>([0, 0]);\n    const [searchList, setSearchList] = useState<ISearchItem[]>([]);\n    const [searchText, setSearchText] = useState<string>('');\n    const ulRef = useRef<HTMLUListElement>(null);\n    const promptService = useDependency(IFormulaPromptService);\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const editorService = useDependency(IEditorService);\n\n    useEffect(() => {\n        // TODO@Dushusir: How to get updated values in subscribe callback better\n        let updatedSearchList: ISearchItem[] = [];\n        let updatedActive = 0;\n        const subscribeSearch = promptService.search$.subscribe((params: ISearchFunctionOperationParams) => {\n            const { visible, searchText, searchList } = params;\n            if (!visible) {\n                setVisible(visible);\n                return;\n            }\n\n            // const isFocusFormulaEditor = contextService.getContextValue(FOCUSING_FX_BAR_EDITOR);\n\n            const position = getPosition();\n\n            if (position == null) {\n                return;\n            }\n\n            const { left, top, height } = position;\n\n            setSearchText(searchText);\n            setSearchList(searchList);\n            updatedSearchList = searchList;\n            setOffset([left, top + height]);\n            setVisible(visible);\n            setActive(0); // Reset active state\n            updatedActive = 0;\n        });\n\n        const subscribeNavigate = promptService.navigate$.subscribe((params: INavigateParam) => {\n            const { direction } = params;\n            if (direction === Direction.UP) {\n                let nextActive = updatedActive - 1;\n                nextActive = nextActive < 0 ? updatedSearchList.length - 1 : nextActive;\n                setActive(nextActive);\n                updatedActive = nextActive;\n            } else if (direction === Direction.DOWN) {\n                let nextActive = updatedActive + 1;\n                nextActive = nextActive >= updatedSearchList.length ? 0 : nextActive;\n                setActive(nextActive);\n                updatedActive = nextActive;\n            }\n\n            scrollToVisible(updatedActive);\n        });\n\n        const subscribeAccept = promptService.accept$.subscribe((params: boolean) => {\n            const functionName = updatedSearchList[updatedActive].name;\n            promptService.acceptFormulaName(functionName);\n        });\n\n        return () => {\n            subscribeSearch?.unsubscribe();\n            subscribeNavigate?.unsubscribe();\n            subscribeAccept?.unsubscribe();\n        };\n    }, []);\n\n    function getPosition() {\n        const documentDataModel = univerInstanceService.getCurrentUniverDocInstance()!;\n\n        const editorUnitId = documentDataModel.getUnitId();\n\n        if (!editorService.isEditor(editorUnitId)) {\n            return;\n        }\n\n        const editor = editorService.getEditor(editorUnitId);\n\n        return editor?.getBoundingClientRect();\n    }\n\n    function handleLiMouseEnter(index: number) {\n        setActive(index);\n    }\n\n    function handleLiMouseLeave() {\n        setActive(-1);\n    }\n\n    function scrollToVisible(liIndex: number) {\n        // Get the <li> element\n        const liElement = ulRef.current?.querySelectorAll(`.${styles.formulaSearchFunctionItem}`)[\n            liIndex\n        ] as HTMLLIElement;\n\n        if (!liElement) return;\n\n        // Get the <ul> element\n        const ulElement = liElement.parentNode as HTMLUListElement;\n\n        if (!ulElement) return;\n\n        // Get the height of the <ul> element\n        const ulRect = ulElement.getBoundingClientRect();\n        const ulTop = ulRect.top;\n        const ulHeight = ulElement.offsetHeight;\n\n        // Get the position and height of the <li> element\n        const liRect = liElement.getBoundingClientRect();\n        const liTop = liRect.top;\n        const liHeight = liRect.height;\n\n        // If the <li> element is within the visible area, no scrolling operation is performed\n        if (liTop >= 0 && liTop > ulTop && liTop - ulTop + liHeight <= ulHeight) {\n            return;\n        }\n\n        // Calculate scroll position\n        const scrollTo = liElement.offsetTop - (ulHeight - liHeight) / 2;\n\n        // Perform scrolling operation\n        ulElement.scrollTo({\n            top: scrollTo,\n            behavior: 'smooth',\n        });\n    }\n\n    return searchList.length > 0 && (\n        <Popup visible={visible} offset={offset}>\n            <ul className={styles.formulaSearchFunction} ref={ulRef}>\n                {searchList.map((item, index) => (\n                    <li\n                        key={index}\n                        className={active === index\n                            ? `\n                              ${styles.formulaSearchFunctionItem}\n                              ${styles.formulaSearchFunctionItemActive}\n                            `\n                            : styles.formulaSearchFunctionItem}\n                        onMouseEnter={() => handleLiMouseEnter(index)}\n                        onMouseLeave={handleLiMouseLeave}\n                        onClick={() => promptService.acceptFormulaName(item.name)}\n                    >\n                        <span className={styles.formulaSearchFunctionItemName}>\n                            <span className={styles.formulaSearchFunctionItemNameLight}>{item.name.substring(0, searchText.length)}</span>\n                            <span>{item.name.slice(searchText.length)}</span>\n                        </span>\n                        <span className={styles.formulaSearchFunctionItemDesc}>{item.desc}</span>\n                    </li>\n                ))}\n            </ul>\n        </Popup>\n    );\n}\n", "export default {\n  \"formulaSearchFunction\": \"univer-formula-search-function\",\n  \"formulaSearchFunctionItem\": \"univer-formula-search-function-item\",\n  \"formulaSearchFunctionItemName\": \"univer-formula-search-function-item-name\",\n  \"formulaSearchFunctionItemNameLight\": \"univer-formula-search-function-item-name-light\",\n  \"formulaSearchFunctionItemDesc\": \"univer-formula-search-function-item-desc\",\n  \"formulaSearchFunctionItemActive\": \"univer-formula-search-function-item-active\"\n};import \"ni:sha-256;5NRvQW1euM5O83PddGAv6u052nTzbKfRXSsm3UVFDwk\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\n\nimport { HelpFunction } from './prompt/help-function/HelpFunction';\nimport { SearchFunction } from './prompt/search-function/SearchFunction';\n\nexport function RenderFormulaPromptContent() {\n    return (\n        <>\n            <SearchFunction />\n            <HelpFunction />\n        </>\n    );\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IFunctionInfo } from '@univerjs/engine-formula';\nimport { DOCS_FORMULA_BAR_EDITOR_UNIT_ID_KEY, DOCS_NORMAL_EDITOR_UNIT_ID_KEY, ICommandService, IUniverInstanceService, LocaleService } from '@univerjs/core';\nimport { Button } from '@univerjs/design';\nimport { IEditorService } from '@univerjs/docs-ui';\nimport { DeviceInputEventType } from '@univerjs/engine-render';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { IEditorBridgeService, SetCellEditVisibleOperation, useActiveWorkbook } from '@univerjs/sheets-ui';\nimport { useDependency } from '@univerjs/ui';\nimport React, { useState } from 'react';\nimport styles from './index.module.less';\nimport { InputParams } from './input-params/InputParams';\nimport { SelectFunction } from './select-function/SelectFunction';\n\nexport function MoreFunctions() {\n    const workbook = useActiveWorkbook();\n    const [selectFunction, setSelectFunction] = useState<boolean>(true);\n    const [inputParams, setInputParams] = useState<boolean>(false);\n    // const [params, setParams] = useState<string[]>([]); // TODO@Dushusir: bind setParams to InputParams's onChange\n    const [functionInfo, setFunctionInfo] = useState<IFunctionInfo | null>(null);\n    const editorBridgeService = useDependency(IEditorBridgeService);\n    const localeService = useDependency(LocaleService);\n    const editorService = useDependency(IEditorService);\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const commandService = useDependency(ICommandService);\n\n    function handleClickNextPrev() {\n        if (selectFunction) {\n            // TODO@Dushusir: insert function\n        }\n\n        setSelectFunction(!selectFunction);\n        setInputParams(!inputParams);\n    }\n\n    function handleConfirm() {\n        const sheetTarget = getSheetCommandTarget(univerInstanceService);\n        if (!sheetTarget) return;\n        commandService.executeCommand(SetCellEditVisibleOperation.id, {\n            visible: true,\n            unitId: sheetTarget.unitId,\n            eventType: DeviceInputEventType.Dblclick,\n        });\n        const editor = editorService.getEditor(DOCS_NORMAL_EDITOR_UNIT_ID_KEY);\n        const formulaEditor = editorService.getEditor(DOCS_FORMULA_BAR_EDITOR_UNIT_ID_KEY);\n        const formulaText = `=${functionInfo?.functionName}(`;\n        editor?.replaceText(formulaText);\n        formulaEditor?.replaceText(formulaText, false);\n    }\n\n    return (\n        <div className={styles.formulaMoreFunctions}>\n            {selectFunction && <SelectFunction onChange={setFunctionInfo} />}\n            {inputParams && <InputParams functionInfo={functionInfo} onChange={() => {}} />}\n            <div className={styles.formulaMoreFunctionsOperation}>\n                {/* TODO@Dushusir: open input params after range selector refactor */}\n                {inputParams && (\n                    <Button type=\"primary\" size=\"small\" onClick={handleClickNextPrev}>\n                        {localeService.t('formula.moreFunctions.next')}\n                    </Button>\n                )}\n                {inputParams && (\n                    <Button size=\"small\" onClick={handleClickNextPrev}>\n                        {localeService.t('formula.moreFunctions.prev')}\n                    </Button>\n                )}\n                {selectFunction && !!workbook && (\n                    <Button type=\"primary\" size=\"small\" onClick={handleConfirm}>\n                        {localeService.t('formula.moreFunctions.confirm')}\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n}\n", "export default {\n  \"formulaMoreFunctions\": \"univer-formula-more-functions\",\n  \"formulaMoreFunctionsOperation\": \"univer-formula-more-functions-operation\"\n};import \"ni:sha-256;SqrVbvAVWmb8UQJV31sGHpHRhMl-5K1WJSNH2EvVC_U\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IFunctionInfo, IFunctionParam } from '@univerjs/engine-formula';\nimport React, { useState } from 'react';\n\nimport { FunctionHelp } from '../function-help/FunctionHelp';\nimport { FunctionParams } from '../function-params/FunctionParams';\nimport styles from './index.module.less';\n\nexport interface IInputParamsProps {\n    functionInfo: IFunctionInfo | null;\n    onChange: (params: string[]) => void;\n}\n\nexport function InputParams(props: IInputParamsProps) {\n    const { functionInfo, onChange } = props;\n    if (!functionInfo) return null;\n\n    const [params, setParams] = useState<string[]>([]);\n    const [functionParameter, setFunctionParameter] = useState<IFunctionParam[]>(functionInfo.functionParameter);\n    const [activeIndex, setActiveIndex] = useState(-1);\n\n    // TODO@Dushusir: Display description when all range selectors is canceled\n    function handleChange(range: string, paramIndex: number) {\n        const newParams = [...params];\n        newParams[paramIndex] = range;\n        setParams(newParams);\n        onChange(newParams);\n    }\n\n    function handleActive(i: number) {\n        if (i === functionParameter.length - 1 && functionParameter[i].repeat) {\n            const newFunctionParameter = [...functionParameter];\n            newFunctionParameter.push(functionParameter[i]);\n            setFunctionParameter(newFunctionParameter);\n        }\n\n        setActiveIndex(i);\n    }\n\n    return (\n        <div className={styles.formulaInputParams}>\n            <div className={styles.formulaInputParamsList}>\n                {functionParameter.map((item: IFunctionParam, i: number) => (\n                    <div key={i}>\n                        <div className={styles.formulaInputParamsListItemName}>{item.name}</div>\n\n                        <div className={styles.formulaInputParamsListItemSelector}>\n                            {/* <RangeSelector\n                                onChange={(range: string) => handleChange(range, i)}\n                                onActive={() => handleActive(i)}\n                            /> */}\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            <div className={styles.formulaInputParamsInfo}>\n                <FunctionParams\n                    title={activeIndex === -1\n                        ? <FunctionHelp prefix={functionInfo.functionName} value={functionParameter} />\n                        : functionParameter[activeIndex].name}\n                    value={activeIndex === -1 ? functionInfo.description : functionParameter[activeIndex].detail}\n                />\n            </div>\n        </div>\n    );\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IFunctionParam } from '@univerjs/engine-formula';\nimport React from 'react';\nimport { generateParam } from '../../../services/utils';\n\ninterface IFunctionHelpProps {\n    prefix?: string;\n    value?: IFunctionParam[];\n}\n\n/**\n * Determine the parameter format\n * \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n * \u2502 Require \u2502 Repeat \u2502  Parameter  \u2502\n * \u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n * \u2502 0       \u2502 0      \u2502 [Number]    \u2502\n * \u2502 1       \u2502 0      \u2502 Number      \u2502\n * \u2502 0       \u2502 1      \u2502 [Number,...] \u2502\n * \u2502 1       \u2502 1      \u2502 Number,...   \u2502\n * \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n *\n * @param props\n * @returns\n */\nexport function FunctionHelp(props: IFunctionHelpProps) {\n    const { prefix, value } = props;\n\n    return (\n        <div>\n            <span>\n                {prefix}\n                (\n            </span>\n            {value &&\n                value.map((item: IFunctionParam, i: number) => (\n                    <span key={i}>\n                        <span>{generateParam(item)}</span>\n                        {i === value.length - 1 ? '' : ','}\n                    </span>\n                ))}\n            )\n        </div>\n    );\n}\n", "export default {\n  \"formulaFunctionParams\": \"univer-formula-function-params\",\n  \"formulaFunctionParamsTitle\": \"univer-formula-function-params-title\",\n  \"formulaFunctionParamsDetail\": \"univer-formula-function-params-detail\"\n};import \"ni:sha-256;st3XOBl2rjJIslpyccMDdfTJPQyc7rt7ax64g4_vly8\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\n\nimport styles from './index.module.less';\n\ninterface IParamsProps {\n    className?: string;\n    title?: string | React.ReactElement;\n    value?: string | React.ReactElement;\n}\n\nexport function FunctionParams(props: IParamsProps) {\n    const { className, value, title } = props;\n    return (\n        <div className={styles.formulaFunctionParams}>\n            <div className={`\n              ${styles.formulaFunctionParamsTitle}\n              ${className}\n            `}\n            >\n                {title}\n            </div>\n            <div className={styles.formulaFunctionParamsDetail}>{value}</div>\n        </div>\n    );\n}\n", "export default {\n  \"formulaInputParamsList\": \"univer-formula-input-params-list\",\n  \"formulaInputParamsListItemName\": \"univer-formula-input-params-list-item-name\",\n  \"formulaInputParamsListItemSelector\": \"univer-formula-input-params-list-item-selector\"\n};import \"ni:sha-256;XW7R2Cr5tNO-50-yv2TdUGUmBzlFoW5iwYizzkPdLbA\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IFunctionInfo, IFunctionParam } from '@univerjs/engine-formula';\nimport type { ISearchItem } from '@univerjs/sheets-formula';\nimport type { ISidebarMethodOptions } from '@univerjs/ui';\nimport { LocaleService } from '@univerjs/core';\nimport { Input, Select } from '@univerjs/design';\nimport { FunctionType } from '@univerjs/engine-formula';\nimport { CheckMarkSingle } from '@univerjs/icons';\nimport { IDescriptionService } from '@univerjs/sheets-formula';\nimport { ISidebarService, useDependency, useObservable } from '@univerjs/ui';\nimport React, { useEffect, useState } from 'react';\nimport { getFunctionTypeValues } from '../../../services/utils';\nimport { FunctionHelp } from '../function-help/FunctionHelp';\nimport { FunctionParams } from '../function-params/FunctionParams';\nimport styles from './index.module.less';\n\nexport interface ISelectFunctionProps {\n    onChange: (functionInfo: IFunctionInfo) => void;\n}\n\nexport function SelectFunction(props: ISelectFunctionProps) {\n    const { onChange } = props;\n    const allTypeValue = '-1';\n    const [searchText, setSearchText] = useState<string>('');\n    const [selectList, setSelectList] = useState<ISearchItem[]>([]);\n    const [active, setActive] = useState(0);\n    const [typeSelected, setTypeSelected] = useState(allTypeValue);\n    const [nameSelected, setNameSelected] = useState(0);\n    const [functionInfo, setFunctionInfo] = useState<IFunctionInfo | null>(null);\n    const descriptionService = useDependency(IDescriptionService);\n    const localeService = useDependency(LocaleService);\n    const sidebarService = useDependency(ISidebarService);\n    const sidebarOptions = useObservable<ISidebarMethodOptions>(sidebarService.sidebarOptions$);\n\n    const options = getFunctionTypeValues(FunctionType, localeService);\n    options.unshift({\n        label: localeService.t('formula.moreFunctions.allFunctions'),\n        value: allTypeValue,\n    });\n\n    const required = localeService.t('formula.prompt.required');\n    const optional = localeService.t('formula.prompt.optional');\n\n    useEffect(() => {\n        handleSelectChange(allTypeValue);\n    }, []);\n\n    useEffect(() => {\n        setCurrentFunctionInfo(0);\n    }, [selectList]);\n\n    // Reset data when the component enters again\n    useEffect(() => {\n        if (sidebarOptions?.visible) {\n            setSearchText('');\n            setSelectList([]);\n            setActive(0);\n            setTypeSelected(allTypeValue);\n            setNameSelected(0);\n            setFunctionInfo(null);\n            handleSelectChange(allTypeValue);\n        }\n    }, [sidebarOptions]);\n\n    const highlightSearchText = (text: string) => {\n        if (searchText.trim() === '') return text;\n\n        const regex = new RegExp(`(${searchText.toLocaleUpperCase()})`);\n        const parts = text.split(regex).filter(Boolean);\n\n        return parts.map((part: string, index: number) => {\n            if (part.match(regex)) {\n                return (\n                    <span key={index} className={styles.formulaSelectFunctionResultItemNameLight}>\n                        {part}\n                    </span>\n                );\n            }\n            return part;\n        });\n    };\n\n    const setCurrentFunctionInfo = (selectedIndex: number) => {\n        if (selectList.length === 0) {\n            setFunctionInfo(null);\n            return;\n        }\n\n        setNameSelected(selectedIndex);\n        const functionInfo = descriptionService.getFunctionInfo(selectList[selectedIndex].name);\n        if (!functionInfo) {\n            setFunctionInfo(null);\n            return;\n        }\n\n        setFunctionInfo(functionInfo);\n        onChange(functionInfo);\n    };\n\n    function handleSelectChange(value: string) {\n        setTypeSelected(value);\n        const selectList = descriptionService.getSearchListByType(+value);\n        setSelectList(selectList);\n    }\n\n    // TODO@Dushusir: debounce\n    function handleSearchInputChange(value: string) {\n        setSearchText(value);\n        const selectList = descriptionService.getSearchListByName(value);\n        setSelectList(selectList);\n    }\n\n    function handleSelectListKeyDown(e: React.KeyboardEvent<HTMLUListElement> | React.KeyboardEvent<HTMLInputElement>) {\n        e.stopPropagation();\n        if (e.key === 'ArrowDown') {\n            const nextActive = active + 1;\n            setActive(nextActive === selectList.length ? 0 : nextActive);\n        } else if (e.key === 'ArrowUp') {\n            const nextActive = active - 1;\n            setActive(nextActive === -1 ? selectList.length - 1 : nextActive);\n        } else if (e.key === 'Enter') {\n            setCurrentFunctionInfo(active);\n        }\n    }\n\n    const handleLiMouseEnter = (index: number) => {\n        setActive(index);\n    };\n\n    const handleLiMouseLeave = () => {\n        setActive(-1);\n    };\n\n    return (\n        <div>\n            <div className={styles.formulaSelectFunctionSelect}>\n                <Select value={typeSelected} options={options} onChange={handleSelectChange} />\n\n                <Input\n                    placeholder={localeService.t('formula.moreFunctions.searchFunctionPlaceholder')}\n                    onKeyDown={handleSelectListKeyDown}\n                    value={searchText}\n                    onChange={handleSearchInputChange}\n                    size=\"small\"\n                    allowClear\n                />\n            </div>\n\n            <ul className={styles.formulaSelectFunctionResult} onKeyDown={handleSelectListKeyDown} tabIndex={-1}>\n                {selectList.map(({ name }, index) => (\n                    <li\n                        key={index}\n                        className={active === index\n                            ? `\n                              ${styles.formulaSelectFunctionResultItem}\n                              ${styles.formulaSelectFunctionResultItemActive}\n                            `\n                            : styles.formulaSelectFunctionResultItem}\n                        onMouseEnter={() => handleLiMouseEnter(index)}\n                        onMouseLeave={handleLiMouseLeave}\n                        onClick={() => setCurrentFunctionInfo(index)}\n                    >\n                        {nameSelected === index && (\n                            <CheckMarkSingle className={styles.formulaSelectFunctionResultItemSelected} />\n                        )}\n                        <span className={styles.formulaSelectFunctionResultItemName}>{highlightSearchText(name)}</span>\n                    </li>\n                ))}\n            </ul>\n\n            {functionInfo && (\n                <div className={styles.formulaSelectFunctionContent}>\n                    <FunctionParams title={functionInfo.functionName} value={functionInfo.description} />\n\n                    <FunctionParams\n                        title={localeService.t('formula.moreFunctions.syntax')}\n                        value={<FunctionHelp prefix={functionInfo.functionName} value={functionInfo.functionParameter} />}\n                    />\n\n                    <FunctionParams\n                        title={localeService.t('formula.prompt.helpExample')}\n                        value={`${functionInfo.functionName}(${functionInfo.functionParameter\n                            .map((item) => item.example)\n                            .join(',')})`}\n                    />\n\n                    {functionInfo.functionParameter &&\n                        functionInfo.functionParameter.map((item: IFunctionParam) => (\n                            <FunctionParams\n                                key={item.name}\n                                title={item.name}\n                                value={`${item.require ? required : optional} ${item.detail}`}\n                            />\n                        ))}\n                </div>\n            )}\n        </div>\n    );\n}\n", "export default {\n  \"formulaSelectFunctionSelect\": \"univer-formula-select-function-select\",\n  \"formulaSelectFunctionResult\": \"univer-formula-select-function-result\",\n  \"formulaSelectFunctionResultItem\": \"univer-formula-select-function-result-item\",\n  \"formulaSelectFunctionResultItemNameLight\": \"univer-formula-select-function-result-item-name-light\",\n  \"formulaSelectFunctionResultItemSelected\": \"univer-formula-select-function-result-item-selected\",\n  \"formulaSelectFunctionResultItemActive\": \"univer-formula-select-function-result-item-active\",\n  \"formulaSelectFunctionContent\": \"univer-formula-select-function-content\"\n};import \"ni:sha-256;i8o_8nEl-UvMzfLWJ1LSWXFwB-qgcjGcCr1reFu54a8\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, Workbook } from '@univerjs/core';\nimport type { IMenuItem } from '@univerjs/ui';\nimport { IUniverInstanceService, UniverInstanceType } from '@univerjs/core';\nimport { RangeProtectionPermissionEditPoint, WorkbookEditablePermission, WorksheetEditPermission, WorksheetSetCellValuePermission } from '@univerjs/sheets';\nimport { getCurrentRangeDisable$ } from '@univerjs/sheets-ui';\nimport { getMenuHiddenObservable, IClipboardInterfaceService, MenuItemType } from '@univerjs/ui';\n\nimport { combineLatestWith, map, Observable, of, switchMap } from 'rxjs';\nimport { SheetOnlyPasteFormulaCommand } from '../commands/commands/formula-clipboard.command';\nimport { InsertFunctionOperation } from '../commands/operations/insert-function.operation';\nimport { MoreFunctionsOperation } from '../commands/operations/more-functions.operation';\n\nexport function InsertFunctionMenuItemFactory(accessor: IAccessor): IMenuItem {\n    return {\n        id: InsertFunctionOperation.id,\n        icon: 'FunctionSingle',\n        tooltip: 'formula.insert.tooltip',\n        type: MenuItemType.SELECTOR,\n        selections: [\n            {\n                label: {\n                    name: 'SUM',\n                    selectable: false,\n                },\n                value: 'SUM',\n                icon: 'SumSingle',\n            },\n            {\n                label: {\n                    name: 'AVERAGE',\n                    selectable: false,\n                },\n                value: 'AVERAGE',\n                icon: 'AvgSingle',\n            },\n            {\n                label: {\n                    name: 'COUNT',\n                    selectable: false,\n                },\n                value: 'COUNT',\n                icon: 'CntSingle',\n            },\n            {\n                label: {\n                    name: 'MAX',\n                    selectable: false,\n                },\n                value: 'MAX',\n                icon: 'MaxSingle',\n            },\n            {\n                label: {\n                    name: 'MIN',\n                    selectable: false,\n                },\n                value: 'MIN',\n                icon: 'MinSingle',\n            },\n        ],\n        hidden$: getMenuHiddenObservable(accessor, UniverInstanceType.UNIVER_SHEET),\n        disabled$: getCurrentRangeDisable$(accessor, { workbookTypes: [WorkbookEditablePermission], worksheetTypes: [WorksheetEditPermission, WorksheetSetCellValuePermission], rangeTypes: [RangeProtectionPermissionEditPoint] }),\n    };\n}\n\nexport function MoreFunctionsMenuItemFactory(accessor: IAccessor): IMenuItem {\n    return {\n        id: MoreFunctionsOperation.id,\n        title: 'formula.insert.more',\n        type: MenuItemType.BUTTON,\n    };\n}\n\nfunction menuClipboardDisabledObservable(injector: IAccessor): Observable<boolean> {\n    const univerInstanceService = injector.get(IUniverInstanceService);\n    const workbook$ = univerInstanceService.getCurrentTypeOfUnit$<Workbook>(UniverInstanceType.UNIVER_SHEET);\n    return workbook$.pipe(\n        switchMap((workbook) => {\n            if (!workbook) {\n                return of(true);\n            }\n            const clipboardInterfaceService = injector.get(IClipboardInterfaceService);\n            if (clipboardInterfaceService) {\n                return new Observable((subscriber) => subscriber.next(!injector.get(IClipboardInterfaceService).supportClipboard)) as Observable<boolean>;\n            }\n            return of(true);\n        })\n    );\n}\n\nexport function PasteFormulaMenuItemFactory(accessor: IAccessor): IMenuItem {\n    return {\n        id: SheetOnlyPasteFormulaCommand.id,\n        type: MenuItemType.BUTTON,\n        title: 'formula.operation.pasteFormula',\n        disabled$: menuClipboardDisabledObservable(accessor).pipe(\n            combineLatestWith(getCurrentRangeDisable$(accessor, { workbookTypes: [WorkbookEditablePermission], rangeTypes: [RangeProtectionPermissionEditPoint], worksheetTypes: [WorksheetSetCellValuePermission, WorksheetEditPermission] })),\n            map(([d1, d2]) => d1 || d2)\n        ),\n    };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { MenuSchemaType } from '@univerjs/ui';\nimport { PASTE_SPECIAL_MENU_ID } from '@univerjs/sheets-ui';\nimport { RibbonStartGroup } from '@univerjs/ui';\nimport { SheetOnlyPasteFormulaCommand } from '../commands/commands/formula-clipboard.command';\nimport { InsertFunctionOperation } from '../commands/operations/insert-function.operation';\nimport { MoreFunctionsOperation } from '../commands/operations/more-functions.operation';\nimport { InsertFunctionMenuItemFactory, MoreFunctionsMenuItemFactory, PasteFormulaMenuItemFactory } from './menu';\n\nexport const menuSchema: MenuSchemaType = {\n    [RibbonStartGroup.FORMULAS_INSERT]: {\n        [InsertFunctionOperation.id]: {\n            order: 1,\n            menuItemFactory: InsertFunctionMenuItemFactory,\n            [MoreFunctionsOperation.id]: {\n                order: 1,\n                menuItemFactory: MoreFunctionsMenuItemFactory,\n            },\n        },\n    },\n    [PASTE_SPECIAL_MENU_ID]: {\n        [SheetOnlyPasteFormulaCommand.id]: {\n            order: 4,\n            menuItemFactory: PasteFormulaMenuItemFactory,\n        },\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const META_KEY_CTRL_AND_SHIFT = 'meta_key_ctrl_And_Shift';\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IShortcutItem } from '@univerjs/ui';\nimport { DeviceInputEventType } from '@univerjs/engine-render';\nimport { whenFormulaEditorActivated } from '@univerjs/sheets-ui';\nimport { KeyCode, MetaKeys } from '@univerjs/ui';\n\nimport { SelectEditorFormulaOperation } from '../../commands/operations/editor-formula.operation';\nimport { ReferenceAbsoluteOperation } from '../../commands/operations/reference-absolute.operation';\nimport { META_KEY_CTRL_AND_SHIFT } from '../../common/prompt';\nimport { whenEditorStandalone } from '../utils/utils';\n\nexport const PROMPT_SELECTION_KEYCODE_ARROW_LIST = [\n    KeyCode.ARROW_DOWN,\n    KeyCode.ARROW_UP,\n    KeyCode.ARROW_LEFT,\n    KeyCode.ARROW_RIGHT,\n];\n\nexport const PROMPT_SELECTION_KEYCODE_LIST = [...PROMPT_SELECTION_KEYCODE_ARROW_LIST, KeyCode.ENTER, KeyCode.TAB, KeyCode.ESC];\n\nexport function promptSelectionShortcutItem() {\n    const shortcutList: IShortcutItem[] = [];\n    for (const keycode of PROMPT_SELECTION_KEYCODE_LIST) {\n        shortcutList.push({\n            id: SelectEditorFormulaOperation.id,\n            binding: keycode,\n            preconditions: (contextService) => whenFormulaEditorActivated(contextService),\n            staticParameters: {\n                eventType: DeviceInputEventType.Keyboard,\n                keycode,\n            },\n        });\n    }\n    return shortcutList;\n}\n\nexport function promptSelectionShortcutItemShift() {\n    const shortcutList: IShortcutItem[] = [];\n    for (const keycode of PROMPT_SELECTION_KEYCODE_ARROW_LIST) {\n        shortcutList.push({\n            id: SelectEditorFormulaOperation.id,\n            binding: keycode | MetaKeys.SHIFT,\n            preconditions: (contextService) => whenFormulaEditorActivated(contextService),\n            staticParameters: {\n                eventType: DeviceInputEventType.Keyboard,\n                keycode,\n                metaKey: MetaKeys.SHIFT,\n            },\n        });\n    }\n    return shortcutList;\n}\n\nexport function promptSelectionShortcutItemCtrl() {\n    const shortcutList: IShortcutItem[] = [];\n    for (const keycode of PROMPT_SELECTION_KEYCODE_ARROW_LIST) {\n        shortcutList.push({\n            id: SelectEditorFormulaOperation.id,\n            binding: keycode | MetaKeys.CTRL_COMMAND,\n            preconditions: (contextService) => whenFormulaEditorActivated(contextService),\n            staticParameters: {\n                eventType: DeviceInputEventType.Keyboard,\n                keycode,\n                metaKey: MetaKeys.CTRL_COMMAND,\n            },\n        });\n    }\n    return shortcutList;\n}\n\nexport function promptSelectionShortcutItemCtrlAndShift() {\n    const shortcutList: IShortcutItem[] = [];\n    for (const keycode of PROMPT_SELECTION_KEYCODE_ARROW_LIST) {\n        shortcutList.push({\n            id: SelectEditorFormulaOperation.id,\n            binding: keycode | MetaKeys.SHIFT | MetaKeys.CTRL_COMMAND,\n            preconditions: (contextService) => whenFormulaEditorActivated(contextService),\n            staticParameters: {\n                eventType: DeviceInputEventType.Keyboard,\n                keycode,\n                metaKey: META_KEY_CTRL_AND_SHIFT,\n            },\n        });\n    }\n    return shortcutList;\n}\n\nexport const ChangeRefToAbsoluteShortcut: IShortcutItem = {\n    id: ReferenceAbsoluteOperation.id,\n    binding: KeyCode.F4,\n    preconditions: (contextService) => whenFormulaEditorActivated(contextService),\n};\n\nexport function singleEditorPromptSelectionShortcutItem() {\n    const shortcutList: IShortcutItem[] = [];\n    for (const keycode of [KeyCode.ENTER, KeyCode.TAB, KeyCode.ARROW_DOWN, KeyCode.ARROW_UP]) {\n        shortcutList.push({\n            id: SelectEditorFormulaOperation.id,\n            binding: keycode,\n            preconditions: (contextService) => whenEditorStandalone(contextService),\n            staticParameters: {\n                eventType: DeviceInputEventType.Keyboard,\n                keycode,\n                isSingleEditor: true,\n            },\n        });\n    }\n    return shortcutList;\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Dependency } from '@univerjs/core';\nimport { Disposable, ICommandService, Inject, Injector, UniverInstanceType } from '@univerjs/core';\nimport { IRenderManagerService } from '@univerjs/engine-render';\n\nimport { SheetsUIPart } from '@univerjs/sheets-ui';\nimport { BuiltInUIPart, ComponentManager, connectInjector, IMenuManagerService, IShortcutService, IUIPartsService } from '@univerjs/ui';\nimport { SheetOnlyPasteFormulaCommand } from '../commands/commands/formula-clipboard.command';\nimport { SelectEditorFormulaOperation } from '../commands/operations/editor-formula.operation';\nimport { HelpFunctionOperation } from '../commands/operations/help-function.operation';\nimport { InsertFunctionOperation } from '../commands/operations/insert-function.operation';\nimport { MoreFunctionsOperation } from '../commands/operations/more-functions.operation';\nimport { ReferenceAbsoluteOperation } from '../commands/operations/reference-absolute.operation';\nimport { SearchFunctionOperation } from '../commands/operations/search-function.operation';\nimport { FormulaProgressBar } from '../views/formula-progress/FormulaProgress';\nimport { RenderFormulaPromptContent } from '../views/FormulaPromptContainer';\nimport { MORE_FUNCTIONS_COMPONENT } from '../views/more-functions/interface';\nimport { MoreFunctions } from '../views/more-functions/MoreFunctions';\nimport { FormulaEditorShowController } from './formula-editor-show.controller';\nimport { menuSchema } from './menu.schema';\nimport {\n    ChangeRefToAbsoluteShortcut,\n    promptSelectionShortcutItem,\n    promptSelectionShortcutItemCtrl,\n    promptSelectionShortcutItemCtrlAndShift,\n    promptSelectionShortcutItemShift,\n    singleEditorPromptSelectionShortcutItem,\n} from './shortcuts/prompt.shortcut';\n\nexport class FormulaUIController extends Disposable {\n    constructor(\n        @Inject(Injector) private readonly _injector: Injector,\n        @IMenuManagerService private readonly _menuManagerService: IMenuManagerService,\n        @ICommandService private readonly _commandService: ICommandService,\n        @IShortcutService private readonly _shortcutService: IShortcutService,\n        @IUIPartsService private readonly _uiPartsService: IUIPartsService,\n        @IRenderManagerService private readonly _renderManagerService: IRenderManagerService,\n        @Inject(ComponentManager) private readonly _componentManager: ComponentManager\n    ) {\n        super();\n\n        this._initialize();\n    }\n\n    private _initialize(): void {\n        this._registerCommands();\n        this._registerMenus();\n        this._registerShortcuts();\n        this._registerComponents();\n        this._registerRenderModules();\n    }\n\n    private _registerMenus(): void {\n        this._menuManagerService.mergeMenu(menuSchema);\n    }\n\n    private _registerCommands(): void {\n        [\n            SheetOnlyPasteFormulaCommand,\n            InsertFunctionOperation,\n            MoreFunctionsOperation,\n            SearchFunctionOperation,\n            HelpFunctionOperation,\n            SelectEditorFormulaOperation,\n            ReferenceAbsoluteOperation,\n        ].forEach((command) => this.disposeWithMe(this._commandService.registerCommand(command)));\n    }\n\n    private _registerShortcuts(): void {\n        [\n            ...promptSelectionShortcutItem(),\n            ...promptSelectionShortcutItemShift(),\n            ...promptSelectionShortcutItemCtrl(),\n            ...promptSelectionShortcutItemCtrlAndShift(),\n            ...singleEditorPromptSelectionShortcutItem(),\n            ChangeRefToAbsoluteShortcut,\n        ].forEach((item) => {\n            this.disposeWithMe(this._shortcutService.registerShortcut(item));\n        });\n    }\n\n    private _registerComponents(): void {\n        this.disposeWithMe(this._uiPartsService.registerComponent(BuiltInUIPart.CONTENT, () => connectInjector(RenderFormulaPromptContent, this._injector)));\n        this.disposeWithMe(this._uiPartsService.registerComponent(SheetsUIPart.FORMULA_AUX, () => connectInjector(FormulaProgressBar, this._injector)));\n\n        this._componentManager.register(MORE_FUNCTIONS_COMPONENT, MoreFunctions);\n    }\n\n    private _registerRenderModules(): void {\n        this.disposeWithMe(this._renderManagerService.registerRenderModule(UniverInstanceType.UNIVER_SHEET, [FormulaEditorShowController] as Dependency));\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IUnitRangeName } from '@univerjs/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface IShowRangeSelectorDialogOptions {\n    unitId: string;\n    subUnitId: string;\n    initialValue?: IUnitRangeName[];\n    maxRangeCount?: number;\n    supportAcrossSheet?: boolean;\n    callback: (ranges: IUnitRangeName[]) => void;\n}\n\nexport class GlobalRangeSelectorService {\n    private _currentSelector$ = new BehaviorSubject<IShowRangeSelectorDialogOptions | null>(null);\n\n    currentSelector$ = this._currentSelector$.asObservable();\n\n    showRangeSelectorDialog(opts: IShowRangeSelectorDialogOptions) {\n        const callback = opts.callback;\n        const promise = new Promise<IUnitRangeName[]>((resolve) => {\n            opts.callback = (ranges) => {\n                resolve(ranges);\n                callback(ranges);\n            };\n        });\n\n        this._currentSelector$.next(opts);\n        return promise;\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IDisposable, IRangeWithCoord, Nullable, Workbook } from '@univerjs/core';\nimport type { IMouseEvent, IPointerEvent, IRenderContext, IRenderModule, Scene, SpreadsheetSkeleton, Viewport } from '@univerjs/engine-render';\nimport type { ISelectionStyle, ISelectionWithCoord, ISelectionWithStyle, SheetsSelectionsService, WorkbookSelectionModel } from '@univerjs/sheets';\nimport { DisposableCollection, IContextService, Inject, Injector, RANGE_TYPE, Rectangle, ThemeService, toDisposable } from '@univerjs/core';\nimport { ScrollTimerType, SHEET_VIEWPORT_KEY, Vector2 } from '@univerjs/engine-render';\nimport { convertSelectionDataToRange, IRefSelectionsService, SelectionMoveType } from '@univerjs/sheets';\nimport { attachSelectionWithCoord, BaseSelectionRenderService, checkInHeaderRanges, genNormalSelectionStyle, getAllSelection, getCoordByOffset, getSheetObject, SelectionControl, SheetSkeletonManagerService } from '@univerjs/sheets-ui';\nimport { IShortcutService } from '@univerjs/ui';\n\n/**\n * This service extends the existing `SelectionRenderService` to provide the rendering of prompt selections\n * when user is editing ref ranges in formulas.\n *\n * Not that this service works with Uni-mode, which means it should be able to deal with multi render unit\n * and handle selections on them, though each at a time.\n *\n *\n *\n */\nexport class RefSelectionsRenderService extends BaseSelectionRenderService implements IRenderModule {\n    private readonly _workbookSelections: WorkbookSelectionModel;\n\n    private _eventDisposables: Nullable<IDisposable>;\n\n    constructor(\n        private readonly _context: IRenderContext<Workbook>,\n        @Inject(Injector) injector: Injector,\n        @Inject(ThemeService) themeService: ThemeService,\n        @IShortcutService shortcutService: IShortcutService,\n        @Inject(SheetSkeletonManagerService) sheetSkeletonManagerService: SheetSkeletonManagerService,\n        @IContextService protected readonly _contextService: IContextService,\n        @IRefSelectionsService private readonly _refSelectionsService: SheetsSelectionsService\n    ) {\n        super(\n            injector,\n            themeService,\n            shortcutService,\n            sheetSkeletonManagerService,\n            _contextService\n        );\n\n        this._workbookSelections = this._refSelectionsService.getWorkbookSelections(this._context.unitId);\n\n        this._initSelectionChangeListener();\n        this._initSkeletonChangeListener();\n        this._initUserActionSyncListener();\n\n        this._setSelectionStyle(getDefaultRefSelectionStyle(this._themeService));\n        this._remainLastEnabled = true; // For ref range selections, we should always remain others.\n        this._highlightHeader = false;\n    }\n\n    getLocation(): [string, string] {\n        return this._skeleton.getLocation();\n    }\n\n    setRemainLastEnabled(enabled: boolean): void {\n        this._remainLastEnabled = enabled;\n    }\n\n    /**\n     * This is set to true when you need to add a new selection.\n     * @param {boolean} enabled\n     * @memberof RefSelectionsRenderService\n     */\n    setSkipLastEnabled(enabled: boolean): void {\n        this._skipLastEnabled = enabled;\n    }\n\n    clearLastSelection(): void {\n        const last = this._selectionControls[this._selectionControls.length - 1];\n        if (last) {\n            last.dispose();\n            this._selectionControls.pop();\n        }\n    }\n\n    /**\n     * Call this method and user will be able to select on the canvas to update selections.\n     */\n    enableSelectionChanging(): IDisposable {\n        this._disableSelectionChanging();\n        this._eventDisposables = this._initCanvasEventListeners();\n        return toDisposable(() => this._disableSelectionChanging());\n    }\n\n    private _disableSelectionChanging(): void {\n        this._eventDisposables?.dispose();\n        this._eventDisposables = null;\n    }\n\n    disableSelectionChanging(): void {\n        this._disableSelectionChanging();\n    }\n\n    private _initCanvasEventListeners(): IDisposable {\n        const sheetObject = this._getSheetObject();\n        const { spreadsheetRowHeader, spreadsheetColumnHeader, spreadsheet, spreadsheetLeftTopPlaceholder } = sheetObject;\n        const { scene } = this._context;\n\n        const listenerDisposables = new DisposableCollection();\n        listenerDisposables.add(spreadsheet?.onPointerDown$.subscribeEvent((evt: IPointerEvent | IMouseEvent, state) => {\n            if (!this.inRefSelectionMode()) return;\n\n            this._onPointerDown(evt, spreadsheet.zIndex + 1, RANGE_TYPE.NORMAL, this._getActiveViewport(evt));\n            if (evt.button !== 2) {\n                state.stopPropagation();\n            }\n        }));\n\n        listenerDisposables.add(\n            spreadsheetRowHeader?.onPointerDown$.subscribeEvent((evt: IPointerEvent | IMouseEvent, state) => {\n                if (!this.inRefSelectionMode()) return;\n                const skeleton = this._sheetSkeletonManagerService.getCurrent()!.skeleton;\n                const { row } = getCoordByOffset(evt.offsetX, evt.offsetY, scene, skeleton);\n                const matchSelectionData = checkInHeaderRanges(this._workbookSelections.getCurrentSelections(), row, RANGE_TYPE.ROW);\n                if (matchSelectionData) return;\n\n                this._onPointerDown(evt, (spreadsheet.zIndex || 1) + 1, RANGE_TYPE.ROW, this._getActiveViewport(evt), ScrollTimerType.Y);\n                if (evt.button !== 2) {\n                    state.stopPropagation();\n                }\n            })\n        );\n\n        listenerDisposables.add(spreadsheetColumnHeader?.onPointerDown$.subscribeEvent((evt: IPointerEvent | IMouseEvent, state) => {\n            if (!this.inRefSelectionMode()) return;\n            const skeleton = this._sheetSkeletonManagerService.getCurrent()!.skeleton;\n            const { column } = getCoordByOffset(evt.offsetX, evt.offsetY, scene, skeleton);\n            const matchSelectionData = checkInHeaderRanges(this._workbookSelections.getCurrentSelections(), column, RANGE_TYPE.COLUMN);\n            if (matchSelectionData) return;\n\n            this._onPointerDown(evt, (spreadsheet.zIndex || 1) + 1, RANGE_TYPE.COLUMN, this._getActiveViewport(evt), ScrollTimerType.X);\n\n            if (evt.button !== 2) {\n                state.stopPropagation();\n            }\n        }));\n\n        listenerDisposables.add(spreadsheetLeftTopPlaceholder?.onPointerDown$.subscribeEvent((evt: IPointerEvent | IMouseEvent, state) => {\n            // remove all other selections\n            this._reset();\n            if (!this.inRefSelectionMode()) return;\n            const skeleton = this._sheetSkeletonManagerService.getCurrent()!.skeleton;\n            const selectionWithStyle = getAllSelection(skeleton);\n            this._addSelectionControlByModelData(selectionWithStyle);\n            this._selectionMoveStart$.next(this.getSelectionDataWithStyle());\n            const dispose = scene.onPointerUp$.subscribeEvent(() => {\n                dispose.unsubscribe();\n                this._selectionMoveEnd$.next(this.getSelectionDataWithStyle());\n            });\n            if (evt.button !== 2) {\n                state.stopPropagation();\n            }\n        }));\n\n        return listenerDisposables;\n    }\n\n    /**\n     * Add a selection in spreadsheet, create a new SelectionControl and then update this control by range derives from selection.\n     * For ref selection, create selectionShapeExtension to handle user action.\n     * @param {ISelectionWithCoord} selectionWithStyle\n     */\n    protected override _addSelectionControlByModelData(selectionWithStyle: ISelectionWithStyle): SelectionControl {\n        const skeleton = this._skeleton;\n        const style = selectionWithStyle.style ?? genNormalSelectionStyle(this._themeService);\n        const scene = this._scene;\n\n        selectionWithStyle.style = style;\n        const control = this.newSelectionControl(scene, skeleton, selectionWithStyle);\n        return control;\n    }\n\n    private _initSelectionChangeListener(): void {\n        // used for refresh selection when focus in formula editor.\n        // TODO @lumixraku The response of the formula selection to keyboard events is different from that of a regular selection; I believe they should be consistent.\n        // unlike normal selection, there is no need to listen selectionService.selectionMoveEnd$ for keyboard moving event. prompt@highlightFormula would refresh selection.\n        this.disposeWithMe(this._refSelectionsService.selectionSet$.subscribe((selectionsWithStyles) => {\n            this._reset();\n            const skeleton = this._skeleton;\n            if (!skeleton) return;\n            // The selections' style would be colorful here. PromptController would change the color of selections later.\n            this.resetSelectionsByModelData(selectionsWithStyles || []);\n        }));\n    }\n\n    /**\n     * Update selectionModel in this._workbookSelections by user action in spreadsheet area.\n     */\n    private _initUserActionSyncListener(): void {\n        this.disposeWithMe(this.selectionMoveStart$.subscribe((selectionDataWithStyle) => {\n            this._updateSelections(selectionDataWithStyle, SelectionMoveType.MOVE_START);\n        }));\n        this.disposeWithMe(this.selectionMoving$.subscribe((selectionDataWithStyle) => {\n            this._updateSelections(selectionDataWithStyle, SelectionMoveType.MOVING);\n        }));\n        this.disposeWithMe(this.selectionMoveEnd$.subscribe((selectionDataWithStyle) => {\n            this._updateSelections(selectionDataWithStyle, SelectionMoveType.MOVE_END);\n        }));\n    }\n\n    private _updateSelections(selectionDataWithStyleList: ISelectionWithCoord[], type: SelectionMoveType): void {\n        const workbook = this._context.unit;\n        const sheetId = workbook.getActiveSheet()!.getSheetId();\n\n        if (selectionDataWithStyleList.length === 0) return;\n        this._workbookSelections.setSelections(\n            sheetId,\n            selectionDataWithStyleList.map((selectionDataWithStyle) => convertSelectionDataToRange(selectionDataWithStyle)),\n            type\n        );\n    }\n\n    private _initSkeletonChangeListener(): void {\n        // changing sheet is not the only way cause currentSkeleton$ emit, a lot of cmds will emit currentSkeleton$\n        // COMMAND_LISTENER_SKELETON_CHANGE ---> currentSkeleton$.next\n        // 'sheet.mutation.set-worksheet-row-auto-height' is one of COMMAND_LISTENER_SKELETON_CHANGE\n        // dv render controller would cause row auto height, this._autoHeightController.getUndoRedoParamsOfAutoHeight\n        this.disposeWithMe(this._sheetSkeletonManagerService.currentSkeleton$.subscribe((param) => {\n            if (!param) {\n                return;\n            }\n\n            const { skeleton } = param;\n            const { scene } = this._context;\n            const viewportMain = scene.getViewport(SHEET_VIEWPORT_KEY.VIEW_MAIN);\n\n            // changing sheet\n            if (this._skeleton && this._skeleton.worksheet.getSheetId() !== skeleton.worksheet.getSheetId()) {\n                this._reset();\n            }\n            this._changeRuntime(skeleton, scene, viewportMain);\n\n            // for col width & row height resize\n            const currentSelections = this._workbookSelections.getCurrentSelections();\n            this.resetSelectionsByModelData(currentSelections);\n        }));\n    }\n\n    private _getActiveViewport(evt: IPointerEvent | IMouseEvent): Nullable<Viewport> {\n        const sheetObject = this._getSheetObject();\n        return sheetObject?.scene.getActiveViewportByCoord(Vector2.FromArray([evt.offsetX, evt.offsetY]));\n    }\n\n    private _getSheetObject() {\n        return getSheetObject(this._context.unit, this._context)!;\n    }\n\n    /**\n     * Handle pointer down event, bind pointermove & pointerup handler.\n     * then trigger selectionMoveStart$.\n     *\n     * @param evt\n     * @param _zIndex\n     * @param rangeType\n     * @param viewport\n     * @param scrollTimerType\n     */\n    // eslint-disable-next-line complexity, max-lines-per-function\n    protected _onPointerDown(\n        evt: IPointerEvent | IMouseEvent,\n        _zIndex = 0,\n        rangeType: RANGE_TYPE = RANGE_TYPE.NORMAL,\n        viewport: Nullable<Viewport>,\n        scrollTimerType: ScrollTimerType = ScrollTimerType.ALL\n    ): void {\n        this._rangeType = rangeType;\n\n        const skeleton = this._skeleton;\n        const scene = this._scene;\n        if (!scene || !skeleton) {\n            return;\n        }\n\n        if (viewport) {\n            this._activeViewport = viewport;\n        }\n\n        const { offsetX: evtOffsetX, offsetY: evtOffsetY } = evt;\n        const viewportMain = scene.getViewport(SHEET_VIEWPORT_KEY.VIEW_MAIN);\n        if (!viewportMain) return;\n        const relativeCoords = scene.getCoordRelativeToViewport(Vector2.FromArray([evtOffsetX, evtOffsetY]));\n\n        const { x: offsetX, y: offsetY } = relativeCoords;\n        this._startViewportPosX = offsetX;\n        this._startViewportPosY = offsetY;\n\n        const scrollXY = scene.getScrollXYInfoByViewport(relativeCoords);\n        const { scaleX, scaleY } = scene.getAncestorScale();\n\n        const selectCell = this._skeleton.getCellByOffset(offsetX, offsetY, scaleX, scaleY, scrollXY);\n        if (!selectCell) return;\n        switch (rangeType) {\n            case RANGE_TYPE.NORMAL:\n                break;\n            case RANGE_TYPE.ROW:\n                selectCell.startColumn = 0;\n                selectCell.endColumn = this._skeleton.getColumnCount() - 1;\n                break;\n            case RANGE_TYPE.COLUMN:\n                selectCell.startRow = 0;\n                selectCell.endRow = this._skeleton.getRowCount() - 1;\n                break;\n            case RANGE_TYPE.ALL:\n                selectCell.startRow = 0;\n                selectCell.startColumn = 0;\n                selectCell.endRow = this._skeleton.getRowCount() - 1;\n                selectCell.endColumn = this._skeleton.getColumnCount() - 1;\n        }\n\n        const selectionWithStyle: ISelectionWithStyle = { range: selectCell, primary: selectCell, style: null };\n        selectionWithStyle.range.rangeType = rangeType;\n        // const selectionCellWithCoord = this._getSelectionWithCoordByOffset(offsetX, offsetY, scaleX, scaleY, scrollXY);\n        const selectionCellWithCoord = attachSelectionWithCoord(selectionWithStyle, this._skeleton);\n        this._startRangeWhenPointerDown = { ...selectionCellWithCoord.rangeWithCoord };\n\n        const cursorCellRangeWithRangeType: IRangeWithCoord = { ...selectionCellWithCoord.rangeWithCoord, rangeType };\n\n        let activeSelectionControl: Nullable<SelectionControl> = this.getActiveSelectionControl();\n        const curControls = this.getSelectionControls();\n        for (const control of curControls) {\n            // If right click on a selection, we should not create a new selection control.\n            // Instead, the context menu will popup.\n            if (evt.button === 2 && Rectangle.contains(control.model, cursorCellRangeWithRangeType)) {\n                activeSelectionControl = control;\n                return;\n            }\n            // Click to an existing selection,\n            if (control.model.isEqual(cursorCellRangeWithRangeType)) {\n                activeSelectionControl = control;\n                break;\n            }\n        }\n\n        this._checkClearPreviousControls(evt);\n\n        const currentCell = activeSelectionControl?.model.currentCell;\n        const expandByShiftKey = evt.shiftKey && currentCell;\n        const remainLastEnable = this._remainLastEnabled &&\n            !evt.ctrlKey &&\n            !evt.shiftKey &&\n            !this._skipLastEnabled &&\n            !this._singleSelectionEnabled;\n\n        //#region update selection control\n        if (expandByShiftKey && currentCell) {\n            // Perform pointer down selection.\n            this._makeSelectionByTwoCells(\n                currentCell,\n                cursorCellRangeWithRangeType,\n                skeleton,\n                rangeType,\n                activeSelectionControl! // Get updated in this method\n            );\n        } else if (remainLastEnable && activeSelectionControl) {\n            // Supports the formula ref text selection feature,\n            // under the condition of preserving all previous selections, it modifies the position of the latest selection.\n\n            activeSelectionControl.updateRangeBySelectionWithCoord(selectionCellWithCoord);\n        } else {\n            // In normal situation, pointerdown ---> Create new SelectionControl,\n            activeSelectionControl = this.newSelectionControl(scene, skeleton, selectionWithStyle);\n        }\n        // clear highlight except last one.\n        for (let i = 0; i < this.getSelectionControls().length - 1; i++) {\n            this.getSelectionControls()[i].clearHighlight();\n        }\n        //#endregion\n\n        this._selectionMoveStart$.next(this.getSelectionDataWithStyle());\n\n        scene.disableObjectsEvent();\n        this._clearUpdatingListeners();\n        this._addEndingListeners();\n\n        scene.getTransformer()?.clearSelectedObjects();\n\n        // if (rangeType === RANGE_TYPE.ROW || rangeType === RANGE_TYPE.COLUMN) {\n        //     if (rangeType === RANGE_TYPE.ROW) {\n        //         offsetX = 0;\n        //     } else if (rangeType === RANGE_TYPE.COLUMN) {\n        //         offsetY = 0;\n        //     }\n        //     // TODO @lumixraku. This is so bad! There should be a explicit way to update col&row range. But now depends on the side effect of _movingHandler.\n        //     // call _movingHandler to update range, col selection, endRow should be last row of current sheet.\n        //     this._movingHandler(offsetX, offsetY, activeSelectionControl, rangeType);\n        // }\n\n        this._setupPointerMoveListener(viewportMain, activeSelectionControl!, rangeType, scrollTimerType, offsetX, offsetY);\n\n        this._escapeShortcutDisposable = this._shortcutService.forceEscape();\n        this._scenePointerUpSub = scene.onPointerUp$.subscribeEvent(() => {\n            this._clearUpdatingListeners();\n\n            // selection control would be disposed in _selectionMoveEnd$.\n            // SelectionRenderService@selectionMoveEnd$ exec SetSelectionsOperation\n            // SheetsSelectionsService@setSelections\n            // SelectionRenderService._workbookSelections.selectionMoveEnd$ call _reset() to clear selectionControl.\n            this._selectionMoveEnd$.next(this.getSelectionDataWithStyle());\n            this._escapeShortcutDisposable?.dispose();\n            this._escapeShortcutDisposable = null;\n        });\n    }\n\n    /**\n     * Diff between normal selection, no highlightHeader for ref selections.\n     * @param scene\n     * @param skeleton\n     * @param selectionWithCoord\n     * @returns {SelectionControl} selectionControl just created\n     */\n    override newSelectionControl(scene: Scene, skeleton: SpreadsheetSkeleton, selection: ISelectionWithStyle): SelectionControl {\n        const zIndex = this.getSelectionControls().length;\n        const { rowHeaderWidth, columnHeaderHeight } = skeleton;\n        const control = new SelectionControl(scene, zIndex, this._themeService, {\n            highlightHeader: this._highlightHeader,\n            enableAutoFill: false,\n            rowHeaderWidth,\n            columnHeaderHeight,\n        });\n        const selectionWithCoord = attachSelectionWithCoord(selection, skeleton);\n        control.updateRangeBySelectionWithCoord(selectionWithCoord);\n        this._selectionControls.push(control);\n\n        control.setControlExtension({\n            skeleton,\n            scene,\n            themeService: this._themeService,\n            injector: this._injector,\n            selectionHooks: {\n                selectionMoveEnd: (): void => {\n                    this._selectionMoveEnd$.next(this.getSelectionDataWithStyle());\n                },\n            },\n        });\n        return control;\n    }\n}\n\n/**\n * Return the selections style while adding a range into the formula string (blue dashed).\n * @param themeService\n * @returns The selection's style.\n */\nfunction getDefaultRefSelectionStyle(themeService: ThemeService): ISelectionStyle {\n    const style = genNormalSelectionStyle(themeService);\n    style.widgets = { tl: true, tc: true, tr: true, ml: true, mr: true, bl: true, bc: true, br: true };\n    return style;\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DocumentDataModel, IDisposable, ITextRange } from '@univerjs/core';\nimport type { Editor, IKeyboardEventConfig } from '@univerjs/docs-ui';\nimport type { KeyCode, MetaKeys } from '@univerjs/ui';\nimport type { CSSProperties, ReactNode } from 'react';\nimport type { FormulaSelectingType } from './hooks/use-formula-selection';\nimport type { IRefSelection } from './hooks/use-highlight';\nimport { BuildTextUtils, createInternalEditorID, generateRandomId, IUniverInstanceService, UniverInstanceType } from '@univerjs/core';\nimport { clsx } from '@univerjs/design';\nimport { DocBackScrollRenderController, DocSelectionRenderService, IEditorService, useKeyboardEvent, useResize } from '@univerjs/docs-ui';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { EMBEDDING_FORMULA_EDITOR } from '@univerjs/sheets-ui';\nimport { useDependency, useEvent, useObservable, useUpdateEffect } from '@univerjs/ui';\nimport { useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { findIndexFromSequenceNodes, findRefSequenceIndex } from '../range-selector/utils/find-index-from-sequence-nodes';\nimport { HelpFunction } from './help-function/HelpFunction';\nimport { useFocus } from './hooks/use-focus';\nimport { useFormulaSelecting } from './hooks/use-formula-selection';\nimport { useFormulaToken } from './hooks/use-formula-token';\nimport { useDocHight, useSheetHighlight } from './hooks/use-highlight';\nimport { useLeftAndRightArrow } from './hooks/use-left-and-right-arrow';\nimport { useRefactorEffect } from './hooks/use-refactor-effect';\nimport { useResetSelection } from './hooks/use-reset-selection';\nimport { useSheetSelectionChange } from './hooks/use-sheet-selection-change';\nimport { useStateRef } from './hooks/use-state-ref';\nimport { useSwitchSheet } from './hooks/use-switch-sheet';\nimport { useVerify } from './hooks/use-verify';\nimport styles from './index.module.less';\nimport { SearchFunction } from './search-function/SearchFunction';\nimport { getFormulaText } from './utils/get-formula-text';\n\nexport interface IFormulaEditorProps {\n    unitId: string;\n    subUnitId: string;\n    initValue: `=${string}`;\n    onChange: (text: string) => void;\n    errorText?: string | ReactNode;\n    onVerify?: (res: boolean, result: string) => void;\n    isFocus?: boolean;\n    onFocus?: () => void;\n    onBlur?: () => void;\n    isSupportAcrossSheet?: boolean;\n    actions?: {\n        handleOutClick?: (e: MouseEvent, cb: () => void) => void;\n    };\n    className?: string;\n    editorId?: string;\n    moveCursor?: boolean;\n    onFormulaSelectingChange?: (isSelecting: FormulaSelectingType) => void;\n    keyboradEventConfig?: IKeyboardEventConfig;\n    onMoveInEditor?: (keyCode: KeyCode, metaKey?: MetaKeys) => void;\n    resetSelectionOnBlur?: boolean;\n    isSingle?: boolean;\n    autoScrollbar?: boolean;\n    /**\n     * Disable selection when click formula editor\n     */\n    disableSelectionOnClick?: boolean;\n    disableContextMenu?: boolean;\n    style?: CSSProperties;\n}\n\nconst noop = () => { };\nexport function FormulaEditor(props: IFormulaEditorProps) {\n    const {\n        errorText,\n        initValue,\n        unitId,\n        subUnitId,\n        isFocus: _isFocus = true,\n        isSupportAcrossSheet = false,\n        onFocus = noop,\n        onBlur = noop,\n        onChange: propOnChange,\n        onVerify,\n        actions,\n        className,\n        editorId: propEditorId,\n        moveCursor = true,\n        onFormulaSelectingChange: propOnFormulaSelectingChange,\n        keyboradEventConfig,\n        onMoveInEditor,\n        resetSelectionOnBlur = true,\n        autoScrollbar = true,\n        isSingle = true,\n        disableSelectionOnClick = false,\n        disableContextMenu,\n        style,\n    } = props;\n\n    const editorService = useDependency(IEditorService);\n    const sheetEmbeddingRef = useRef<HTMLDivElement>(null);\n    const onChange = useEvent(propOnChange);\n    // init actions\n    if (actions) {\n        actions.handleOutClick = (e: MouseEvent, cb: () => void) => {\n            if (sheetEmbeddingRef.current) {\n                const isContain = sheetEmbeddingRef.current.contains(e.target as Node);\n                !isContain && cb();\n            }\n        };\n    }\n\n    const onFormulaSelectingChange = useEvent(propOnFormulaSelectingChange);\n    const searchFunctionRef = useRef<HTMLElement>(null);\n    const editorRef = useRef<Editor>(undefined);\n    const editor = editorRef.current;\n    const [isFocus, isFocusSet] = useState(_isFocus);\n    const formulaEditorContainerRef = useRef(null);\n    const editorId = useMemo(() => propEditorId ?? createInternalEditorID(`${EMBEDDING_FORMULA_EDITOR}-${generateRandomId(4)}`), []);\n    const isError = useMemo(() => errorText !== undefined, [errorText]);\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const document = univerInstanceService.getUnit<DocumentDataModel>(editorId);\n    useObservable(document?.change$);\n    const getFormulaToken = useFormulaToken();\n    const formulaText = BuildTextUtils.transform.getPlainText(document?.getBody()?.dataStream ?? '');\n    const formulaTextRef = useStateRef(formulaText);\n    const formulaWithoutEqualSymbol = useMemo(() => getFormulaText(formulaText), [formulaText]);\n    const sequenceNodes = useMemo(() => getFormulaToken(formulaWithoutEqualSymbol), [formulaWithoutEqualSymbol, getFormulaToken]);\n    const { isSelecting, isSelectingRef } = useFormulaSelecting({ unitId, subUnitId, editorId, isFocus, disableOnClick: disableSelectionOnClick });\n    const highTextRef = useRef('');\n    const renderManagerService = useDependency(IRenderManagerService);\n    const renderer = renderManagerService.getRenderById(editorId);\n    const docSelectionRenderService = renderer?.with(DocSelectionRenderService);\n    const isFocusing = docSelectionRenderService?.isFocusing;\n    const currentDoc$ = useMemo(() => univerInstanceService.getCurrentTypeOfUnit$(UniverInstanceType.UNIVER_DOC), [univerInstanceService]);\n    const currentDoc = useObservable(currentDoc$);\n    const docFocusing = currentDoc?.getUnitId() === editorId;\n    const refSelections = useRef([] as IRefSelection[]);\n    const selectingMode = isSelecting;\n\n    useUpdateEffect(() => {\n        onChange(formulaText);\n    }, [formulaText, onChange]);\n\n    const highlightDoc = useDocHight('=');\n    const highlightSheet = useSheetHighlight(unitId, subUnitId);\n    const highlight = useEvent((text: string, isNeedResetSelection: boolean = true, isEnd?: boolean, newSelections?: ITextRange[]) => {\n        if (!editorRef.current) return;\n        highTextRef.current = text;\n        const sequenceNodes = getFormulaToken(text[0] === '=' ? text.slice(1) : '');\n        const ranges = highlightDoc(\n            editorRef.current,\n            sequenceNodes,\n            isNeedResetSelection,\n            newSelections\n        );\n        refSelections.current = ranges;\n\n        if (isEnd) {\n            const currentDocSelections = newSelections ?? editor?.getSelectionRanges();\n            if (currentDocSelections?.length !== 1) {\n                return;\n            }\n            const docRange = currentDocSelections[0];\n            const offset = docRange.startOffset - 1;\n            const nodeIndex = findIndexFromSequenceNodes(sequenceNodes, offset, false);\n            const refIndex = findRefSequenceIndex(sequenceNodes, nodeIndex);\n            // make sure current editing selection is at the end\n            if (refIndex >= 0) {\n                const target = ranges.splice(refIndex, 1)[0];\n                target && ranges.push(target);\n            }\n\n            highlightSheet(isFocus ? ranges : [], editorRef.current);\n        }\n    });\n\n    // re highlight when focus\n    useEffect(() => {\n        if (isFocus) {\n            highlight(formulaText, false, true);\n        }\n    }, [isFocus]);\n\n    // re highlight when formula text changed\n    useEffect(() => {\n        if (isFocus) {\n            if (highTextRef.current === formulaText) return;\n            highlight(formulaText, false, true);\n        }\n    }, [formulaText]);\n\n    useVerify(isFocus, onVerify, formulaText);\n    const focus = useFocus(editor);\n\n    const resetSelection = useResetSelection(isFocus, unitId, subUnitId);\n\n    useEffect(() => {\n        onFormulaSelectingChange(isSelecting);\n    }, [onFormulaSelectingChange, isSelecting]);\n\n    useKeyboardEvent(isFocus, keyboradEventConfig, editor);\n\n    useLayoutEffect(() => {\n        let dispose: IDisposable;\n        if (formulaEditorContainerRef.current) {\n            dispose = editorService.register({\n                autofocus: true,\n                editorUnitId: editorId,\n                initialSnapshot: {\n                    id: editorId,\n                    body: {\n                        dataStream: `${initValue}\\r\\n`,\n                        textRuns: [],\n                        customBlocks: [],\n                        customDecorations: [],\n                        customRanges: [],\n                    },\n                    documentStyle: {},\n                },\n            }, formulaEditorContainerRef.current);\n            const editor = editorService.getEditor(editorId)! as Editor;\n            editorRef.current = editor;\n            highlight(initValue, false, true);\n        }\n\n        return () => {\n            dispose?.dispose();\n        };\n    }, []);\n\n    useLayoutEffect(() => {\n        if (_isFocus) {\n            isFocusSet(_isFocus);\n            focus();\n        } else {\n            if (resetSelectionOnBlur) {\n                editor?.blur();\n                resetSelection();\n            }\n            isFocusSet(_isFocus);\n        }\n    }, [_isFocus, editor, focus, resetSelection, resetSelectionOnBlur]);\n\n    const { checkScrollBar } = useResize(editor, isSingle, autoScrollbar);\n    useRefactorEffect(isFocus, Boolean(isSelecting && docFocusing), unitId, disableContextMenu);\n    useLeftAndRightArrow(isFocus && moveCursor, selectingMode, editor, onMoveInEditor);\n\n    const handleSelectionChange = useEvent((refString: string, offset: number, isEnd: boolean) => {\n        if (!isFocusing) {\n            return;\n        }\n\n        const newSelections = offset !== -1 ? [{ startOffset: offset + 1, endOffset: offset + 1, collapsed: true }] : undefined;\n        highlight(`=${refString}`, true, isEnd, newSelections);\n        if (isEnd) {\n            focus();\n            if (offset !== -1) {\n                setTimeout(() => {\n                    const range = { startOffset: offset + 1, endOffset: offset + 1 };\n                    const docBackScrollRenderController = editor?.render.with(DocBackScrollRenderController);\n                    docBackScrollRenderController?.scrollToRange({ ...range, collapsed: true });\n                }, 50);\n            }\n            checkScrollBar();\n        }\n    });\n    useSheetSelectionChange(\n        isFocus && Boolean(isSelecting && docFocusing),\n        isFocus,\n        isSelectingRef,\n        unitId,\n        subUnitId,\n        refSelections,\n        isSupportAcrossSheet,\n        Boolean(selectingMode),\n        editor,\n        handleSelectionChange\n    );\n    useSwitchSheet(isFocus && Boolean(isSelecting && docFocusing), unitId, isSupportAcrossSheet, isFocusSet, onBlur, () => {\n        highlight(formulaTextRef.current, false, true);\n    });\n\n    const handleFunctionSelect = (res: { text: string; offset: number }) => {\n        if (res) {\n            const selections = editor?.getSelectionRanges();\n            if (selections && selections.length === 1) {\n                const range = selections[0];\n                if (range.collapsed) {\n                    const offset = res.offset;\n                    setTimeout(() => {\n                        editor?.setSelectionRanges([{ startOffset: range.startOffset - offset, endOffset: range.endOffset - offset }]);\n                    }, 30);\n                }\n            }\n            focus();\n            highlight(`=${res.text}`);\n        }\n    };\n\n    const handleMouseUp = () => {\n        isFocusSet(true);\n        onFocus();\n        focus();\n    };\n\n    return (\n        <div style={style} className={clsx(styles.sheetEmbeddingFormulaEditor, className)}>\n            <div\n                className={clsx(styles.sheetEmbeddingFormulaEditorWrap, {\n                    [styles.sheetEmbeddingFormulaEditorActive]: isFocus,\n                    [styles.sheetEmbeddingFormulaEditorError]: isError,\n                })}\n                ref={sheetEmbeddingRef}\n            >\n                <div\n                    className={styles.sheetEmbeddingFormulaEditorText}\n                    ref={formulaEditorContainerRef}\n                    onMouseUp={handleMouseUp}\n                />\n            </div>\n            {errorText !== undefined ? <div className={styles.sheetEmbeddingFormulaEditorErrorWrap}>{errorText}</div> : null}\n            {editor\n                ? (\n                    <HelpFunction\n                        editor={editor}\n                        isFocus={isFocus}\n                        formulaText={formulaText}\n                        onClose={() => focus()}\n                    />\n                )\n                : null}\n            {editor\n                ? (\n                    <SearchFunction\n                        isFocus={isFocus}\n                        sequenceNodes={sequenceNodes}\n                        onSelect={handleFunctionSelect}\n                        ref={searchFunctionRef}\n                        editor={editor}\n                    />\n                )\n                : null}\n        </div>\n    )\n    ;\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ISequenceNode } from '@univerjs/engine-formula';\nimport { sequenceNodeType } from '@univerjs/engine-formula';\n\nexport const findIndexFromSequenceNodes = (sequenceNode: (string | ISequenceNode)[], targetIndex: number, isEqual = true) => {\n    let result = -1;\n    sequenceNode.reduce((pre, cur, index) => {\n        if (pre.isFinish) {\n            return pre;\n        }\n        const oldIndex = pre.currentIndex;\n        if (typeof cur !== 'string') {\n            pre.currentIndex += cur.token.length;\n        } else {\n            const length = cur.length;\n            pre.currentIndex += length;\n        }\n\n        if (isEqual ? (pre.currentIndex === targetIndex) : (targetIndex > oldIndex && targetIndex <= pre.currentIndex)) {\n            result = index;\n            pre.isFinish = true;\n        }\n        return pre;\n    }, { currentIndex: 0, isFinish: false });\n    return result;\n};\n\nexport const findRefSequenceIndex = (sequenceNode: (string | ISequenceNode)[], targetIndex: number) => {\n    const last = sequenceNode[targetIndex];\n    let result = -1;\n    if (!last || typeof last === 'string' || last.nodeType !== sequenceNodeType.REFERENCE) return -1;\n    for (let i = 0; i <= targetIndex; i++) {\n        const currentNode = sequenceNode[i];\n        if (typeof currentNode !== 'string' && currentNode.nodeType === sequenceNodeType.REFERENCE) {\n            result++;\n        }\n    }\n    return result;\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Editor } from '@univerjs/docs-ui';\nimport type { IFunctionParam } from '@univerjs/engine-formula';\nimport { LocaleService } from '@univerjs/core';\nimport { CloseSingle, MoreSingle } from '@univerjs/icons';\nimport { RectPopup, useDependency } from '@univerjs/ui';\n\nimport React, { useMemo, useState } from 'react';\nimport { generateParam } from '../../../services/utils';\nimport { useEditorPosition } from '../hooks/use-editor-position';\nimport { useFormulaDescribe } from '../hooks/use-formula-describe';\nimport styles from './index.module.less';\n\ninterface IParamsProps {\n    className?: string;\n    title?: string;\n    value?: string;\n}\n\nconst Params = ({ className, title, value }: IParamsProps) => (\n    <div className={styles.formulaHelpFunctionContentParams}>\n        <div className={`\n          ${styles.formulaHelpFunctionContentParamsTitle}\n          ${className}\n        `}\n        >\n            {title}\n        </div>\n        <div className={styles.formulaHelpFunctionContentParamsDetail}>{value}</div>\n    </div>\n);\n\ninterface IHelpProps {\n    prefix?: string;\n    value?: IFunctionParam[];\n    active: number;\n    onClick: (paramIndex: number) => void;\n}\n\nconst Help = (props: IHelpProps) => {\n    const { prefix, value, active, onClick } = props;\n    return (\n        <div className={styles.formulaHelpParam}>\n            <span className={styles.formulaHelpParamPrefix}>\n                {prefix}\n                (\n            </span>\n            {value &&\n                value.map((item: IFunctionParam, i: number) => (\n                    <span key={item.name} className={styles.formulaHelpParamItem}>\n                        <span\n                            className={active === i ? styles.formulaHelpFunctionActive : styles.formulaHelpParamActive}\n                            onClick={() => onClick(i)}\n                        >\n                            {generateParam(item)}\n                        </span>\n                        {i === value.length - 1 ? '' : ','}\n                    </span>\n                ))}\n            )\n        </div>\n    );\n};\n\ninterface IHelpFunctionProps {\n    onParamsSwitch?: (index: number) => void;\n    onClose?: () => void;\n    editor: Editor;\n    isFocus: boolean;\n    formulaText: string;\n};\n\nconst noop = () => { };\nexport function HelpFunction(props: IHelpFunctionProps) {\n    const { onParamsSwitch = noop, onClose: propColose = noop, isFocus, editor, formulaText } = props;\n    const { functionInfo, paramIndex, reset } = useFormulaDescribe(isFocus, formulaText, editor);\n    const visible = useMemo(() => !!functionInfo && paramIndex >= 0, [functionInfo, paramIndex]);\n    const [contentVisible, setContentVisible] = useState(true);\n    const localeService = useDependency(LocaleService);\n    const required = localeService.t('formula.prompt.required');\n    const optional = localeService.t('formula.prompt.optional');\n    const editorId = editor.getEditorId();\n    const [position$] = useEditorPosition(editorId, visible, [functionInfo, paramIndex]);\n    function handleSwitchActive(paramIndex: number) {\n        onParamsSwitch && onParamsSwitch(paramIndex);\n    }\n\n    const onClose = () => {\n        reset();\n        propColose();\n    };\n\n    return visible && functionInfo\n        ? (\n            <RectPopup portal onClickOutside={() => reset()} anchorRect$={position$} direction=\"vertical\">\n                <div className={styles.formulaHelpFunction}>\n                    <div className={styles.formulaHelpFunctionTitle}>\n                        <Help\n                            prefix={functionInfo.functionName}\n                            value={functionInfo.functionParameter}\n                            active={paramIndex}\n                            onClick={handleSwitchActive}\n                        />\n                        <div className={styles.formulaHelpFunctionTitleIcons}>\n                            <div\n                                className={styles.formulaHelpFunctionTitleIcon}\n                                style={{ transform: contentVisible ? 'rotateZ(-90deg)' : 'rotateZ(90deg)' }}\n                                onClick={() => setContentVisible(!contentVisible)}\n                            >\n                                <MoreSingle />\n                            </div>\n                            <div\n                                className={styles.formulaHelpFunctionTitleIcon}\n                                onClick={onClose}\n                            >\n                                <CloseSingle />\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        className={styles.formulaHelpFunctionContent}\n                        style={{\n                            height: contentVisible ? 'unset' : 0,\n                            padding: contentVisible ? 'revert-layer' : 0,\n                        }}\n                    >\n                        <div className={styles.formulaHelpFunctionContentInner}>\n                            <Params\n                                title={localeService.t('formula.prompt.helpExample')}\n                                value={`${functionInfo.functionName}(${functionInfo.functionParameter\n                                    .map((item) => item.example)\n                                    .join(',')})`}\n                            />\n                            <Params\n                                title={localeService.t('formula.prompt.helpAbstract')}\n                                value={functionInfo.description}\n                            />\n                            {functionInfo &&\n                                    functionInfo.functionParameter &&\n                                    functionInfo.functionParameter.map((item: IFunctionParam, i: number) => (\n                                        <Params\n                                            key={i}\n                                            className={paramIndex === i ? styles.formulaHelpFunctionActive : ''}\n                                            title={item.name}\n                                            value={`${item.require ? required : optional} ${item.detail}`}\n                                        />\n                                    ))}\n                        </div>\n                    </div>\n                </div>\n            </RectPopup>\n        )\n        : null;\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IUniverInstanceService } from '@univerjs/core';\nimport { IEditorService } from '@univerjs/docs-ui';\nimport { ISidebarService, useDependency, useEvent } from '@univerjs/ui';\nimport { useEffect, useMemo } from 'react';\nimport { BehaviorSubject, throttleTime } from 'rxjs';\nimport useResizeScrollObserver from './use-resize-scroll-observer';\n\nexport function useEditorPosition(editorId: string, ready: boolean, deps?: any[]) {\n    const editorService = useDependency(IEditorService);\n    const position$ = useMemo(() => new BehaviorSubject({ left: -999, top: -999, right: -999, bottom: -999 }), []);\n    const sidebarService = useDependency(ISidebarService);\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const updatePosition = useEvent(() => {\n        const doc = editorService.getEditor(editorId);\n        if (!doc) {\n            return;\n        }\n        const position = doc.getBoundingClientRect();\n        const { left, top, right, bottom } = position;\n        const current = position$.getValue();\n        if (current.left === left && current.top === top && current.right === right && current.bottom === bottom) {\n            return;\n        }\n        position$.next({ left: left - 1, right: right + 1, top: top - 1, bottom: bottom + 1 });\n        return position;\n    });\n\n    useEffect(() => {\n        if (!ready) {\n            return;\n        }\n        updatePosition();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [editorId, editorService, univerInstanceService.unitAdded$, updatePosition, ready, ...(deps ?? [])]);\n\n    useResizeScrollObserver(updatePosition);\n\n    useEffect(() => {\n        const sidebarSubscription = sidebarService.scrollEvent$.pipe(throttleTime(100)).subscribe(updatePosition);\n\n        return () => {\n            sidebarSubscription.unsubscribe();\n        };\n    }, []);\n\n    return [position$, updatePosition] as const;\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useEffect } from 'react';\n\ntype Callback = () => void;\n\nexport const useResizeScrollObserver = (callback: Callback, delay: number = 100): void => {\n    useEffect(() => {\n        let throttleTimeout: number | null = null;\n\n        const throttledCallback = () => {\n            if (throttleTimeout === null) {\n                throttleTimeout = window.setTimeout(() => {\n                    callback();\n                    throttleTimeout = null;\n                }, delay);\n            }\n        };\n\n        window.addEventListener('scroll', throttledCallback);\n        window.addEventListener('resize', throttledCallback);\n\n        return () => {\n            if (throttleTimeout !== null) {\n                clearTimeout(throttleTimeout);\n            }\n            window.removeEventListener('scroll', throttledCallback);\n            window.removeEventListener('resize', throttledCallback);\n        };\n    }, [callback, delay]);\n};\n\nexport default useResizeScrollObserver;\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Editor } from '@univerjs/docs-ui';\nimport type { IFunctionInfo } from '@univerjs/engine-formula';\nimport { LexerTreeBuilder } from '@univerjs/engine-formula';\nimport { IDescriptionService } from '@univerjs/sheets-formula';\nimport { useDependency } from '@univerjs/ui';\nimport { useEffect, useRef, useState } from 'react';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs';\nimport { useStateRef } from './use-state-ref';\n\nexport const useFormulaDescribe = (isNeed: boolean, formulaText: string, editor?: Editor) => {\n    const descriptionService = useDependency(IDescriptionService);\n    const lexerTreeBuilder = useDependency(LexerTreeBuilder);\n\n    const [functionInfo, functionInfoSet] = useState<IFunctionInfo | undefined>();\n    const [paramIndex, paramIndexSet] = useState<number>(-1);\n    const [isShow, isShowSet] = useState(true);\n    const isShowRef = useStateRef(isShow);\n\n    const formulaTextRef = useRef(formulaText);\n    formulaTextRef.current = formulaText;\n    const reset = () => {\n        functionInfoSet(undefined);\n        paramIndexSet(-1);\n        isShowSet(false);\n    };\n\n    useEffect(() => {\n        if (editor && isNeed) {\n            const d = editor.selectionChange$.pipe(debounceTime(50)).subscribe((e) => {\n                if (e.textRanges.length === 1) {\n                    const [range] = e.textRanges;\n                    if (range.collapsed && isShowRef.current) {\n                        // \u4E3A\u4EC0\u4E48\u51CF1,\u56E0\u4E3Anodes\u662F\u4E0D\u5305\u542B\u521D\u59CB \u2018=\u2019 \u5B57\u7B26\u7684,\u4F46\u662F selection \u4F1A\u5305\u542B '='\n                        const res = lexerTreeBuilder.getFunctionAndParameter(`${formulaTextRef.current}A`, range.startOffset - 1);\n                        if (res) {\n                            const { functionName, paramIndex } = res;\n                            const info = descriptionService.getFunctionInfo(functionName);\n                            functionInfoSet(info);\n                            paramIndexSet(paramIndex);\n                            return;\n                        }\n                    }\n                }\n                functionInfoSet(undefined);\n                paramIndexSet(-1);\n            });\n            const d2 = editor.selectionChange$.pipe(\n                filter((e) => e.isEditing),\n                filter((e) => e.textRanges.length === 1),\n                map((e) => e.textRanges[0].startOffset),\n                distinctUntilChanged()\n            ).subscribe(() => {\n                isShowSet(true);\n            });\n            return () => {\n                d.unsubscribe();\n                d2.unsubscribe();\n            };\n        }\n    }, [editor, isNeed]);\n\n    useEffect(() => {\n        if (!isNeed) {\n            reset();\n        }\n    }, [isNeed]);\n\n    return {\n        functionInfo,\n        paramIndex,\n        reset,\n    };\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useRef } from 'react';\n\nexport const useStateRef = <T = any>(value: T) => {\n    const cache = useRef<T>(value);\n    cache.current = value;\n    return cache;\n};\n", "export default {\n  \"formulaHelpFunction\": \"univer-formula-help-function\",\n  \"formulaHelpFunctionTitle\": \"univer-formula-help-function-title\",\n  \"formulaHelpFunctionTitleIcons\": \"univer-formula-help-function-title-icons\",\n  \"formulaHelpFunctionTitleIcon\": \"univer-formula-help-function-title-icon\",\n  \"formulaHelpFunctionContent\": \"univer-formula-help-function-content\",\n  \"formulaHelpFunctionContentInner\": \"univer-formula-help-function-content-inner\",\n  \"formulaHelpFunctionContentParams\": \"univer-formula-help-function-content-params\",\n  \"formulaHelpFunctionContentParamsTitle\": \"univer-formula-help-function-content-params-title\",\n  \"formulaHelpFunctionContentParamsDetail\": \"univer-formula-help-function-content-params-detail\",\n  \"formulaHelpFunctionActive\": \"univer-formula-help-function-active\",\n  \"formulaHelpDecorator\": \"univer-formula-help-decorator\",\n  \"formulaHelpParam\": \"univer-formula-help-param\",\n  \"formulaHelpParamPrefix\": \"univer-formula-help-param-prefix\",\n  \"formulaHelpParamItem\": \"univer-formula-help-param-item\",\n  \"formulaHelpParamActive\": \"univer-formula-help-param-active\"\n};import \"ni:sha-256;eweKA2hqiZwv-_qnzyEISEeytkhf11JPLh817CFvAng\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Editor } from '@univerjs/docs-ui';\nimport { Tools } from '@univerjs/core';\nimport { IEditorService } from '@univerjs/docs-ui';\nimport { useDependency, useEvent } from '@univerjs/ui';\n\nexport const useFocus = (editor?: Editor) => {\n    const editorService = useDependency(IEditorService);\n    const focus = useEvent((offset?: number) => {\n        if (editor) {\n            editorService.focus(editor.getEditorId());\n            const selections = [...editor.getSelectionRanges()];\n            if (Tools.isDefine(offset)) {\n                editor.setSelectionRanges([{ startOffset: offset, endOffset: offset }]);\n            } else if (!selections.length && !editor.docSelectionRenderService.isOnPointerEvent) {\n                const body = editor.getDocumentData().body?.dataStream ?? '\\r\\n';\n                const offset = Math.max(body.length - 2, 0);\n                editor.setSelectionRanges([{ startOffset: offset, endOffset: offset }]);\n            }\n        };\n    });\n\n    return focus;\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, IUnitRangeName, Workbook } from '@univerjs/core';\nimport type { ISequenceNode } from '@univerjs/engine-formula';\nimport { Injector, IUniverInstanceService, UniverInstanceType } from '@univerjs/core';\nimport { DocSelectionManagerService } from '@univerjs/docs';\nimport { DocSelectionRenderService } from '@univerjs/docs-ui';\nimport { deserializeRangeWithSheetWithCache, isFormulaLexerToken, LexerTreeBuilder, matchRefDrawToken, matchToken, sequenceNodeType } from '@univerjs/engine-formula';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { useDependency, useEvent } from '@univerjs/ui';\nimport { useEffect, useRef, useState } from 'react';\nimport { filter } from 'rxjs';\nimport { RefSelectionsRenderService } from '../../../services/render-services/ref-selections.render-service';\nimport { useStateRef } from './use-state-ref';\n\nfunction getCurrentBodyDataStreamAndOffset(accssor: IAccessor) {\n    const univerInstanceService = accssor.get(IUniverInstanceService);\n    const documentModel = univerInstanceService.getCurrentUniverDocInstance();\n\n    if (!documentModel?.getBody()) {\n        return;\n    }\n\n    const dataStream = documentModel.getBody()?.dataStream ?? '';\n    return { dataStream, offset: 0 };\n}\n\nexport enum FormulaSelectingType {\n    NOT_SELECT = 0,\n    NEED_ADD = 1,\n    CAN_EDIT = 2,\n    // editing cross sheet reference\n    EDIT_OTHER_SHEET_REFERENCE = 3,\n}\n\n// eslint-disable-next-line max-lines-per-function\nexport function useFormulaSelecting(opts: { editorId: string; isFocus: boolean; disableOnClick?: boolean; unitId: string; subUnitId: string }) {\n    const { editorId, isFocus, disableOnClick, unitId, subUnitId } = opts;\n    const renderManagerService = useDependency(IRenderManagerService);\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const sheetRenderer = renderManagerService.getRenderById(unitId);\n    const renderer = renderManagerService.getRenderById(editorId);\n    const docSelectionRenderService = renderer?.with(DocSelectionRenderService);\n    const docSelectionManagerService = useDependency(DocSelectionManagerService);\n    const injector = useDependency(Injector);\n    const [isSelecting, innerSetIsSelecting] = useState<FormulaSelectingType>(FormulaSelectingType.NOT_SELECT);\n    const lexerTreeBuilder = useDependency(LexerTreeBuilder);\n    const isDisabledByPointer = useRef(true);\n    const refSelectionsRenderService = sheetRenderer?.with(RefSelectionsRenderService);\n    const isSelectingRef = useStateRef(isSelecting);\n    const workbook = univerInstanceService.getUnit<Workbook>(unitId, UniverInstanceType.UNIVER_SHEET);\n    const sourceSheet = workbook?.getSheetBySheetId(subUnitId);\n\n    const setIsSelecting = useEvent((v: FormulaSelectingType) => {\n        if (refSelectionsRenderService) {\n            refSelectionsRenderService.setSkipLastEnabled(v === FormulaSelectingType.NEED_ADD || v === FormulaSelectingType.EDIT_OTHER_SHEET_REFERENCE);\n        }\n        isSelectingRef.current = v;\n        innerSetIsSelecting(v);\n    });\n\n    // eslint-disable-next-line complexity\n    const calculateSelectingType = useEvent(() => {\n        if (!workbook) return;\n        const currentSheet = workbook.getActiveSheet();\n        const activeRange = docSelectionRenderService?.getActiveTextRange();\n        const index = activeRange?.collapsed ? activeRange.startOffset! : -1;\n        const config = getCurrentBodyDataStreamAndOffset(injector);\n        if (!config) return;\n        const dataStream = config?.dataStream?.slice(0, -2);\n        const nodes = (lexerTreeBuilder.sequenceNodesBuilder(dataStream) ?? []).map((node) => {\n            if (typeof node === 'object') {\n                if (node.nodeType === sequenceNodeType.REFERENCE) {\n                    return {\n                        ...node,\n                        range: deserializeRangeWithSheetWithCache(node.token),\n                    };\n                }\n\n                return {\n                    ...node,\n                    range: undefined,\n                };\n            }\n\n            return node;\n        });\n        const char = dataStream[index - 1];\n        const nextChar = dataStream[index];\n        const focusingNode = nodes.find((node) => typeof node === 'object' && node.nodeType === sequenceNodeType.REFERENCE && index === node.endIndex + 2) as unknown as (ISequenceNode & { range: IUnitRangeName });\n        const adding = (char && matchRefDrawToken(char)) && (!nextChar || (isFormulaLexerToken(nextChar) && nextChar !== matchToken.OPEN_BRACKET));\n        const editing = Boolean(focusingNode);\n\n        if (dataStream?.substring(0, 1) === '=' && (adding || editing)) {\n            if (editing) {\n                if (isDisabledByPointer.current) {\n                    return;\n                }\n                if (\n                    (!focusingNode.range.sheetName && currentSheet.getSheetId() === sourceSheet?.getSheetId()) ||\n                    focusingNode.range.sheetName === currentSheet.getName()\n                ) {\n                    setIsSelecting(FormulaSelectingType.CAN_EDIT);\n                } else {\n                    setIsSelecting(FormulaSelectingType.EDIT_OTHER_SHEET_REFERENCE);\n                }\n            } else {\n                isDisabledByPointer.current = false;\n                setIsSelecting(FormulaSelectingType.NEED_ADD);\n            }\n        } else {\n            setIsSelecting(FormulaSelectingType.NOT_SELECT);\n        }\n    });\n\n    useEffect(() => {\n        const sub = docSelectionManagerService.textSelection$\n            .pipe(filter((param) => param.unitId === editorId))\n            .subscribe(() => {\n                calculateSelectingType();\n            });\n\n        return () => sub.unsubscribe();\n    }, [calculateSelectingType, docSelectionManagerService.textSelection$, editorId]);\n\n    useEffect(() => {\n        if (!isFocus) {\n            setIsSelecting(FormulaSelectingType.NOT_SELECT);\n            isDisabledByPointer.current = true;\n        }\n    }, [isFocus, setIsSelecting]);\n\n    useEffect(() => {\n        if (!disableOnClick) return;\n        const sub = renderer?.mainComponent?.onPointerDown$.subscribeEvent(() => {\n            setIsSelecting(FormulaSelectingType.NOT_SELECT);\n            isDisabledByPointer.current = true;\n        });\n\n        return () => sub?.unsubscribe();\n    }, [disableOnClick, renderer?.mainComponent?.onPointerDown$, setIsSelecting]);\n\n    useEffect(() => {\n        if (!isFocus) return;\n        const sub = workbook?.activeSheet$.subscribe(() => {\n            calculateSelectingType();\n        });\n\n        return () => sub?.unsubscribe();\n    }, [calculateSelectingType, isFocus, workbook?.activeSheet$]);\n\n    return { isSelecting, isSelectingRef };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ISequenceNode } from '@univerjs/engine-formula';\nimport { LexerTreeBuilder } from '@univerjs/engine-formula';\nimport { useDependency } from '@univerjs/ui';\nimport { useCallback } from 'react';\n\nexport type INode = (string | ISequenceNode);\nexport const useFormulaToken = () => {\n    const lexerTreeBuilder = useDependency(LexerTreeBuilder);\n    const getFormulaToken = useCallback((text: string) => lexerTreeBuilder.sequenceNodesBuilder(text) || [], [lexerTreeBuilder]);\n    return getFormulaToken;\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ITextRange, ITextRun, Workbook } from '@univerjs/core';\nimport type { Editor } from '@univerjs/docs-ui';\nimport type { ISequenceNode } from '@univerjs/engine-formula';\nimport type { ISelectionWithStyle, SheetsSelectionsService } from '@univerjs/sheets';\nimport type { INode } from './use-formula-token';\nimport { getBodySlice, ICommandService, IUniverInstanceService, ThemeService, UniverInstanceType } from '@univerjs/core';\nimport { ReplaceTextRunsCommand } from '@univerjs/docs-ui';\nimport { deserializeRangeWithSheet, sequenceNodeType } from '@univerjs/engine-formula';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { IRefSelectionsService, setEndForRange } from '@univerjs/sheets';\nimport { IDescriptionService } from '@univerjs/sheets-formula';\nimport { SheetSkeletonManagerService } from '@univerjs/sheets-ui';\nimport { useDependency, useEvent } from '@univerjs/ui';\nimport { useEffect, useMemo } from 'react';\nimport { genFormulaRefSelectionStyle } from '../../../common/selection';\nimport { RefSelectionsRenderService } from '../../../services/render-services/ref-selections.render-service';\n\nexport interface IRefSelection {\n    refIndex: number;\n    themeColor: string;\n    token: string;\n    startIndex: number;\n    endIndex: number;\n    index: number;\n}\n\nexport function calcHighlightRanges(opts: {\n    unitId: string;\n    subUnitId: string;\n    refSelections: IRefSelection[];\n    editor: Editor | undefined;\n    refSelectionsService: SheetsSelectionsService;\n    refSelectionsRenderService: RefSelectionsRenderService | undefined;\n    sheetSkeletonManagerService: SheetSkeletonManagerService | undefined;\n    themeService: ThemeService;\n    univerInstanceService: IUniverInstanceService;\n}) {\n    const {\n        unitId,\n        subUnitId,\n        refSelections,\n        editor,\n        refSelectionsService,\n        refSelectionsRenderService,\n        sheetSkeletonManagerService,\n        themeService,\n        univerInstanceService,\n    } = opts;\n    const workbook = univerInstanceService.getUnit<Workbook>(unitId, UniverInstanceType.UNIVER_SHEET);\n    const worksheet = workbook?.getActiveSheet();\n    const selectionWithStyle: ISelectionWithStyle[] = [];\n    if (!workbook || !worksheet) {\n        refSelectionsService.setSelections(selectionWithStyle);\n        return;\n    }\n    const currentSheetId = worksheet.getSheetId();\n    const getSheetIdByName = (name: string) => workbook?.getSheetBySheetName(name)?.getSheetId();\n\n    const skeleton = sheetSkeletonManagerService?.getWorksheetSkeleton(currentSheetId)?.skeleton;\n    if (!skeleton) return;\n\n    const endIndexes: number[] = [];\n    for (let i = 0, len = refSelections.length; i < len; i++) {\n        const refSelection = refSelections[i];\n        const { themeColor, token, refIndex, endIndex } = refSelection;\n\n        const unitRangeName = deserializeRangeWithSheet(token);\n        const { unitId: refUnitId, sheetName, range: rawRange } = unitRangeName;\n        if (refUnitId && unitId !== refUnitId) {\n            continue;\n        }\n\n        const refSheetId = getSheetIdByName(sheetName);\n\n        if ((refSheetId && refSheetId !== currentSheetId) || (!refSheetId && currentSheetId !== subUnitId)) {\n            continue;\n        }\n\n        const range = setEndForRange(rawRange, worksheet.getRowCount(), worksheet.getColumnCount());\n        range.unitId = unitId;\n        range.sheetId = currentSheetId;\n        selectionWithStyle.push({\n            range,\n            primary: null,\n            style: genFormulaRefSelectionStyle(themeService, themeColor, refIndex.toString()),\n        });\n        endIndexes.push(endIndex);\n    }\n\n    if (editor) {\n        const cursor = editor.getSelectionRanges()?.[0]?.startOffset;\n        const activeIndex = endIndexes.findIndex((end) => end + 2 === cursor);\n        if (activeIndex !== -1) {\n            refSelectionsRenderService?.setActiveSelectionIndex(activeIndex);\n        } else {\n            refSelectionsRenderService?.resetActiveSelectionIndex();\n        }\n    }\n\n    return selectionWithStyle;\n}\n\n/**\n * @param {string} unitId\n * @param {string} subUnitId \u6253\u5F00\u9762\u677F\u7684\u65F6\u5019\u4F20\u5165\u7684 sheetId\n * @param {IRefSelection[]} refSelections\n */\n\nexport function useSheetHighlight(unitId: string, subUnitId: string) {\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const themeService = useDependency(ThemeService);\n    const refSelectionsService = useDependency(IRefSelectionsService);\n    const renderManagerService = useDependency(IRenderManagerService);\n    const render = renderManagerService.getRenderById(unitId);\n    const refSelectionsRenderService = render?.with(RefSelectionsRenderService);\n    const sheetSkeletonManagerService = render?.with(SheetSkeletonManagerService);\n\n    const highlightSheet = useEvent((refSelections: IRefSelection[], editor?: Editor) => {\n        if (refSelectionsRenderService?.selectionMoving) return;\n        const selectionWithStyle = calcHighlightRanges({\n            unitId,\n            subUnitId,\n            refSelections,\n            editor,\n            refSelectionsService,\n            refSelectionsRenderService,\n            sheetSkeletonManagerService,\n            themeService,\n            univerInstanceService,\n        });\n\n        if (!selectionWithStyle) return;\n        const allControls = refSelectionsRenderService?.getSelectionControls() || [];\n        if (allControls.length === selectionWithStyle.length) {\n            refSelectionsRenderService?.resetSelectionsByModelData(selectionWithStyle);\n        } else {\n            refSelectionsService.setSelections(selectionWithStyle);\n        }\n    });\n\n    useEffect(() => {\n        return () => {\n            refSelectionsRenderService?.resetActiveSelectionIndex();\n        };\n    }, [refSelectionsRenderService]);\n\n    return highlightSheet;\n}\n\nexport function useDocHight(_leadingCharacter: string = '') {\n    const descriptionService = useDependency(IDescriptionService);\n    const colorMap = useColor();\n    const commandService = useDependency(ICommandService);\n    const leadingCharacterLength = useMemo(() => _leadingCharacter.length, [_leadingCharacter]);\n\n    const highlightDoc = useEvent((\n        editor: Editor,\n        sequenceNodes: INode[],\n        isNeedResetSelection = true,\n        newSelections?: ITextRange[]\n    ) => {\n        const data = editor.getDocumentData();\n        const editorId = editor.getEditorId();\n        if (!data) {\n            return [];\n        }\n        const body = data.body;\n        if (!body) {\n            return [];\n        }\n        const str = body.dataStream.slice(0, body.dataStream.length - 2);\n        const cloneBody = { dataStream: '', ...data.body };\n        if (!str.startsWith(_leadingCharacter)) return [];\n        if (sequenceNodes == null || sequenceNodes.length === 0) {\n            cloneBody.textRuns = [];\n            commandService.syncExecuteCommand(ReplaceTextRunsCommand.id, {\n                unitId: editorId,\n                body: getBodySlice(cloneBody, 0, cloneBody.dataStream.length - 2),\n            });\n            return [];\n        } else {\n            const { textRuns, refSelections } = buildTextRuns(descriptionService, colorMap, sequenceNodes);\n            if (leadingCharacterLength) {\n                textRuns.forEach((e) => {\n                    e.ed = e.ed + leadingCharacterLength;\n                    e.st = e.st + leadingCharacterLength;\n                });\n            }\n            cloneBody.textRuns = [{ st: 0, ed: 1, ts: { fs: 11 } }, ...textRuns];\n            const text = sequenceNodes.reduce((pre, cur) => {\n                if (typeof cur === 'string') {\n                    return `${pre}${cur}`;\n                }\n                return `${pre}${cur.token}`;\n            }, '');\n            cloneBody.dataStream = `${_leadingCharacter}${text}\\r\\n`;\n            let selections;\n            if (isNeedResetSelection) {\n                // Switching between uppercase and lowercase will trigger a reflow, causing the cursor to be misplaced. Let's refresh the cursor position here.\n                selections = editor.getSelectionRanges();\n                // After 'buildTextRuns' , the content changes, most of it is deleted, and the cursor position needs to be corrected\n                const maxOffset = cloneBody.dataStream.length - 2 + leadingCharacterLength;\n                selections.forEach((selection) => {\n                    selection.startOffset = Math.max(0, Math.min(selection.startOffset, maxOffset));\n                    selection.endOffset = Math.max(0, Math.min(selection.endOffset, maxOffset));\n                });\n            }\n            commandService.syncExecuteCommand(ReplaceTextRunsCommand.id, {\n                unitId: editorId,\n                body: getBodySlice(cloneBody, 0, cloneBody.dataStream.length - 2),\n                textRanges: newSelections ?? selections,\n            });\n            return refSelections;\n        }\n    });\n    return highlightDoc;\n}\n\ninterface IColorMap {\n    formulaRefColors: string[];\n    numberColor: string;\n    stringColor: string;\n    plainTextColor: string;\n}\n\nexport function useColor(): IColorMap {\n    const themeService = useDependency(ThemeService);\n    const style = themeService.getCurrentTheme();\n    const result = useMemo(() => {\n        const formulaRefColors = [\n            style.loopColor1,\n            style.loopColor2,\n            style.loopColor3,\n            style.loopColor4,\n            style.loopColor5,\n            style.loopColor6,\n            style.loopColor7,\n            style.loopColor8,\n            style.loopColor9,\n            style.loopColor10,\n            style.loopColor11,\n            style.loopColor12,\n        ];\n        const numberColor = style.hyacinth700;\n        const stringColor = style.verdancy800;\n        const plainTextColor = style.colorBlack;\n        return { formulaRefColors, numberColor, stringColor, plainTextColor };\n    }, [style]);\n    return result;\n}\n\n// eslint-disable-next-line max-lines-per-function\nexport function buildTextRuns(descriptionService: IDescriptionService, colorMap: IColorMap, sequenceNodes: Array<ISequenceNode | string>) {\n    const { formulaRefColors, numberColor, stringColor, plainTextColor } = colorMap;\n    const textRuns: ITextRun[] = [];\n    const refSelections: IRefSelection[] = [];\n    const themeColorMap = new Map<string, string>();\n    let refColorIndex = 0;\n\n    for (let i = 0, len = sequenceNodes.length; i < len; i++) {\n        const node = sequenceNodes[i];\n        if (typeof node === 'string') {\n            const theLastItem = textRuns[textRuns.length - 1];\n            const start = theLastItem ? (theLastItem.ed) : 0;\n            const end = start + node.length;\n            textRuns.push({\n                st: start,\n                ed: end,\n                ts: {\n                    cl: {\n                        rgb: plainTextColor,\n                    },\n                    fs: 11,\n                },\n            });\n            continue;\n        }\n        if (descriptionService.hasDefinedNameDescription(node.token.trim())) {\n            textRuns.push({\n                st: node.startIndex,\n                ed: node.endIndex + 1,\n                ts: {\n                    cl: {\n                        rgb: plainTextColor,\n                    },\n                    fs: 11,\n                },\n            });\n            continue;\n        }\n        const { startIndex, endIndex, nodeType, token } = node;\n        let themeColor = '';\n        if (nodeType === sequenceNodeType.REFERENCE) {\n            if (themeColorMap.has(token)) {\n                themeColor = themeColorMap.get(token)!;\n            } else {\n                const colorIndex = refColorIndex % formulaRefColors.length;\n                themeColor = formulaRefColors[colorIndex];\n                themeColorMap.set(token, themeColor);\n                refColorIndex++;\n            }\n\n            refSelections.push({\n                refIndex: i,\n                themeColor,\n                token,\n                startIndex: node.startIndex,\n                endIndex: node.endIndex,\n                index: refSelections.length,\n            });\n        } else if (nodeType === sequenceNodeType.NUMBER) {\n            themeColor = numberColor;\n        } else if (nodeType === sequenceNodeType.STRING) {\n            themeColor = stringColor;\n        } else if (nodeType === sequenceNodeType.ARRAY) {\n            themeColor = stringColor;\n        }\n\n        if (themeColor && themeColor.length > 0) {\n            textRuns.push({\n                st: startIndex,\n                ed: endIndex + 1,\n                ts: {\n                    cl: {\n                        rgb: themeColor,\n                    },\n                    fs: 11,\n                },\n            });\n        } else {\n            textRuns.push({\n                st: startIndex,\n                ed: endIndex + 1,\n                ts: {\n                    cl: {\n                        rgb: plainTextColor,\n                    },\n                    fs: 11,\n                },\n            });\n        }\n    }\n\n    return { textRuns, refSelections };\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ISelectionStyle } from '@univerjs/sheets';\nimport { ColorKit, type ThemeService } from '@univerjs/core';\n\nexport const FORMULA_REF_SELECTION_PLUGIN_NAME = 'formula_reference_selection_plugin_name';\n\nexport function genFormulaRefSelectionStyle(themeService: ThemeService, refColor: string, id: string): ISelectionStyle {\n    const style = themeService.getCurrentTheme();\n    const fill = new ColorKit(refColor).setAlpha(0.05).toRgbString();\n    return {\n        id,\n        strokeWidth: 1,\n        stroke: refColor,\n        fill,\n        widgets: { tl: true, tc: true, tr: true, ml: true, mr: true, bl: true, bc: true, br: true },\n        widgetSize: 6,\n        widgetStrokeWidth: 1,\n        widgetStroke: style.colorWhite,\n    };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Editor } from '@univerjs/docs-ui';\nimport { CommandType, Direction, DisposableCollection, ICommandService } from '@univerjs/core';\nimport { MoveCursorOperation, MoveSelectionOperation } from '@univerjs/docs-ui';\nimport { DeviceInputEventType } from '@univerjs/engine-render';\nimport { ExpandSelectionCommand, JumpOver, MoveSelectionCommand } from '@univerjs/sheets-ui';\nimport { IShortcutService, KeyCode, MetaKeys, useDependency } from '@univerjs/ui';\nimport { useEffect, useRef } from 'react';\nimport { FormulaSelectingType } from './use-formula-selection';\n\n// eslint-disable-next-line max-lines-per-function\nexport const useLeftAndRightArrow = (isNeed: boolean, shouldMoveSelection: FormulaSelectingType, editor?: Editor, onMoveInEditor?: (keyCode: KeyCode, metaKey?: MetaKeys) => void) => {\n    const commandService = useDependency(ICommandService);\n    const shortcutService = useDependency(IShortcutService);\n    const shouldMoveSelectionRef = useRef(shouldMoveSelection);\n    shouldMoveSelectionRef.current = shouldMoveSelection;\n    const onMoveInEditorRef = useRef(onMoveInEditor);\n    onMoveInEditorRef.current = onMoveInEditor;\n\n    // eslint-disable-next-line max-lines-per-function\n    useEffect(() => {\n        if (!editor || !isNeed) {\n            return;\n        }\n        const editorId = editor.getEditorId();\n        const operationId = `sheet.formula-embedding-editor.${editorId}`;\n        const d = new DisposableCollection();\n        const handleMoveInEditor = (keycode: KeyCode, metaKey?: MetaKeys) => {\n            if (onMoveInEditorRef.current) {\n                onMoveInEditorRef.current(keycode, metaKey);\n                return;\n            }\n\n            let direction = Direction.LEFT;\n            if (keycode === KeyCode.ARROW_DOWN) {\n                direction = Direction.DOWN;\n            } else if (keycode === KeyCode.ARROW_UP) {\n                direction = Direction.UP;\n            } else if (keycode === KeyCode.ARROW_RIGHT) {\n                direction = Direction.RIGHT;\n            }\n\n            if (metaKey === MetaKeys.SHIFT) {\n                commandService.executeCommand(MoveSelectionOperation.id, {\n                    direction,\n                });\n            } else {\n                commandService.executeCommand(MoveCursorOperation.id, {\n                    direction,\n                });\n            }\n        };\n\n        const handleKeycode = (keycode: KeyCode, metaKey?: MetaKeys) => {\n            let direction = Direction.DOWN;\n            if (keycode === KeyCode.ARROW_DOWN) {\n                direction = Direction.DOWN;\n            } else if (keycode === KeyCode.ARROW_UP) {\n                direction = Direction.UP;\n            } else if (keycode === KeyCode.ARROW_LEFT) {\n                direction = Direction.LEFT;\n            } else if (keycode === KeyCode.ARROW_RIGHT) {\n                direction = Direction.RIGHT;\n            }\n            if (shouldMoveSelectionRef.current) {\n                if (metaKey === MetaKeys.CTRL_COMMAND) {\n                    commandService.executeCommand(MoveSelectionCommand.id, {\n                        direction,\n                        jumpOver: JumpOver.moveGap,\n                        extra: 'formula-editor',\n                        fromCurrentSelection: shouldMoveSelectionRef.current === FormulaSelectingType.NEED_ADD || shouldMoveSelectionRef.current === FormulaSelectingType.EDIT_OTHER_SHEET_REFERENCE,\n                    });\n                } else if (metaKey === MetaKeys.SHIFT) {\n                    commandService.executeCommand(ExpandSelectionCommand.id, {\n                        direction,\n                        extra: 'formula-editor',\n                    });\n                } else if (metaKey === (MetaKeys.CTRL_COMMAND | MetaKeys.SHIFT)) {\n                    commandService.executeCommand(ExpandSelectionCommand.id, {\n                        direction,\n                        jumpOver: JumpOver.moveGap,\n                        extra: 'formula-editor',\n                    });\n                } else {\n                    commandService.executeCommand(MoveSelectionCommand.id, {\n                        direction,\n                        extra: 'formula-editor',\n                        fromCurrentSelection: shouldMoveSelectionRef.current === FormulaSelectingType.NEED_ADD || shouldMoveSelectionRef.current === FormulaSelectingType.EDIT_OTHER_SHEET_REFERENCE,\n                    });\n                }\n            } else {\n                handleMoveInEditor(keycode, metaKey);\n            }\n        };\n\n        d.add(commandService.registerCommand({\n            id: operationId,\n            type: CommandType.OPERATION,\n            handler(_event, params) {\n                const { keyCode, metaKey } = params as { eventType: DeviceInputEventType; keyCode: KeyCode; metaKey?: MetaKeys };\n                handleKeycode(keyCode, metaKey);\n            },\n        }));\n\n        const keyCodes = [\n            { keyCode: KeyCode.ARROW_DOWN },\n            { keyCode: KeyCode.ARROW_LEFT },\n            { keyCode: KeyCode.ARROW_RIGHT },\n            { keyCode: KeyCode.ARROW_UP },\n            { keyCode: KeyCode.ARROW_DOWN, metaKey: MetaKeys.SHIFT },\n            { keyCode: KeyCode.ARROW_LEFT, metaKey: MetaKeys.SHIFT },\n            { keyCode: KeyCode.ARROW_RIGHT, metaKey: MetaKeys.SHIFT },\n            { keyCode: KeyCode.ARROW_UP, metaKey: MetaKeys.SHIFT },\n            { keyCode: KeyCode.ARROW_DOWN, metaKey: MetaKeys.CTRL_COMMAND },\n            { keyCode: KeyCode.ARROW_LEFT, metaKey: MetaKeys.CTRL_COMMAND },\n            { keyCode: KeyCode.ARROW_RIGHT, metaKey: MetaKeys.CTRL_COMMAND },\n            { keyCode: KeyCode.ARROW_UP, metaKey: MetaKeys.CTRL_COMMAND },\n            { keyCode: KeyCode.ARROW_DOWN, metaKey: MetaKeys.CTRL_COMMAND | MetaKeys.SHIFT },\n            { keyCode: KeyCode.ARROW_LEFT, metaKey: MetaKeys.CTRL_COMMAND | MetaKeys.SHIFT },\n            { keyCode: KeyCode.ARROW_RIGHT, metaKey: MetaKeys.CTRL_COMMAND | MetaKeys.SHIFT },\n            { keyCode: KeyCode.ARROW_UP, metaKey: MetaKeys.CTRL_COMMAND | MetaKeys.SHIFT },\n        ];\n\n        keyCodes.map(({ keyCode, metaKey }) => {\n            return {\n                id: operationId,\n                binding: metaKey ? keyCode | metaKey : keyCode,\n                preconditions: () => true,\n                priority: 900,\n                staticParameters: {\n                    eventType: DeviceInputEventType.Keyboard,\n                    keyCode,\n                    metaKey,\n                },\n            };\n        }).forEach((item) => {\n            d.add(shortcutService.registerShortcut(item));\n        });\n\n        return () => {\n            d.dispose();\n        };\n    }, [commandService, editor, isNeed, shortcutService]);\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EDITOR_ACTIVATED, IContextService } from '@univerjs/core';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { IRefSelectionsService, REF_SELECTIONS_ENABLED } from '@univerjs/sheets';\nimport { IContextMenuService, useDependency } from '@univerjs/ui';\n\nimport { useEffect, useLayoutEffect } from 'react';\nimport { RefSelectionsRenderService } from '../../../services/render-services/ref-selections.render-service';\n\nexport const useRefactorEffect = (isNeed: boolean, selecting: boolean, unitId: string, disableContextMenu = true) => {\n    const renderManagerService = useDependency(IRenderManagerService);\n    const contextService = useDependency(IContextService);\n    const contextMenuService = useDependency(IContextMenuService);\n    const refSelectionsService = useDependency(IRefSelectionsService);\n\n    const render = renderManagerService.getRenderById(unitId);\n    const refSelectionsRenderService = render?.with(RefSelectionsRenderService);\n\n    useLayoutEffect(() => {\n        if (isNeed) {\n            contextService.setContextValue(EDITOR_ACTIVATED, true);\n\n            return () => {\n                contextService.setContextValue(EDITOR_ACTIVATED, false);\n                refSelectionsService.clear();\n            };\n        }\n    }, [contextService, isNeed, refSelectionsService]);\n\n    useLayoutEffect(() => {\n        if (isNeed && selecting) {\n            const d1 = refSelectionsRenderService?.enableSelectionChanging();\n            contextService.setContextValue(REF_SELECTIONS_ENABLED, true);\n\n            return () => {\n                contextService.setContextValue(REF_SELECTIONS_ENABLED, false);\n                d1?.dispose();\n            };\n        }\n    }, [contextService, isNeed, refSelectionsRenderService, selecting]);\n\n    // right context controller\n    useEffect(() => {\n        if (isNeed) {\n            contextService.setContextValue(EDITOR_ACTIVATED, true);\n            disableContextMenu && contextMenuService.disable();\n            return () => {\n                contextService.setContextValue(EDITOR_ACTIVATED, false);\n                disableContextMenu && contextMenuService.enable();\n            };\n        }\n    }, [contextMenuService, contextService, isNeed, disableContextMenu]);\n\n    // reset setSkipLastEnabled\n    useEffect(() => {\n        if (isNeed) {\n            refSelectionsRenderService?.setSkipLastEnabled(false);\n        }\n    }, [isNeed, refSelectionsRenderService]);\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Workbook } from '@univerjs/core';\nimport { IUniverInstanceService, UniverInstanceType } from '@univerjs/core';\nimport { SheetsSelectionsService } from '@univerjs/sheets';\nimport { useDependency } from '@univerjs/ui';\nimport { useCallback } from 'react';\n\nexport const useResetSelection = (isNeed: boolean, unitId: string, subUnitId: string) => {\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const sheetsSelectionsService = useDependency(SheetsSelectionsService);\n\n    const resetSelection = useCallback(() => {\n        if (isNeed) {\n            const selections = [...sheetsSelectionsService.getWorkbookSelections(unitId).getSelectionsOfWorksheet(subUnitId)];\n            const workbook = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n            const currentSheet = workbook?.getActiveSheet();\n            if (currentSheet && currentSheet.getSheetId() === subUnitId) {\n                sheetsSelectionsService.setSelections(selections);\n            }\n        };\n    }, [isNeed, sheetsSelectionsService, subUnitId, unitId, univerInstanceService]);\n\n    return resetSelection;\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable max-lines-per-function */\n\nimport type { IRange, Workbook } from '@univerjs/core';\nimport type { Editor } from '@univerjs/docs-ui';\nimport type { ISelectionWithCoord, ISetSelectionsOperationParams } from '@univerjs/sheets';\nimport type { RefObject } from 'react';\nimport type { IRefSelection } from './use-highlight';\nimport { DisposableCollection, ICommandService, IUniverInstanceService, ThemeService } from '@univerjs/core';\nimport { DocSelectionManagerService } from '@univerjs/docs';\nimport { deserializeRangeWithSheet, generateStringWithSequence, LexerTreeBuilder, sequenceNodeType, serializeRange, serializeRangeWithSheet } from '@univerjs/engine-formula';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { IRefSelectionsService, SetSelectionsOperation } from '@univerjs/sheets';\nimport { SheetSkeletonManagerService } from '@univerjs/sheets-ui';\nimport { useDependency, useEvent, useObservable } from '@univerjs/ui';\nimport { useEffect, useMemo } from 'react';\nimport { merge } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { RefSelectionsRenderService } from '../../../services/render-services/ref-selections.render-service';\nimport { findIndexFromSequenceNodes, findRefSequenceIndex } from '../../range-selector/utils/find-index-from-sequence-nodes';\nimport { getOffsetFromSequenceNodes } from '../../range-selector/utils/get-offset-from-sequence-nodes';\nimport { sequenceNodeToText } from '../../range-selector/utils/sequence-node-to-text';\nimport { unitRangesToText } from '../../range-selector/utils/unit-ranges-to-text';\nimport { useStateRef } from '../hooks/use-state-ref';\nimport { FormulaSelectingType } from './use-formula-selection';\nimport { calcHighlightRanges } from './use-highlight';\n\nconst prepareSelectionChangeContext = (opts: { editor?: Editor; lexerTreeBuilder: LexerTreeBuilder }) => {\n    const { editor, lexerTreeBuilder } = opts;\n    const currentDocSelections = editor?.getSelectionRanges();\n    if (currentDocSelections?.length !== 1) {\n        return;\n    }\n    const docRange = currentDocSelections[0];\n    const offset = docRange.startOffset - 1;\n    const dataStream = (editor?.getDocumentData().body?.dataStream ?? '\\r\\n').slice(0, -2);\n    const sequenceNodes = lexerTreeBuilder.sequenceNodesBuilder(dataStream.slice(1)) ?? [];\n    const nodeIndex = findIndexFromSequenceNodes(sequenceNodes, offset, false);\n    const updatingRefIndex = findRefSequenceIndex(sequenceNodes, nodeIndex);\n    return {\n        nodeIndex,\n        updatingRefIndex,\n        sequenceNodes,\n        offset,\n    };\n};\n\nconst noop = (() => { }) as any;\nexport const useSheetSelectionChange = (\n    isNeed: boolean,\n    isFocus: boolean,\n    isSelectingRef: RefObject<FormulaSelectingType>,\n    unitId: string,\n    subUnitId: string,\n    refSelectionRef: React.MutableRefObject<IRefSelection[]>,\n    isSupportAcrossSheet: boolean,\n    listenSelectionSet: boolean,\n    editor?: Editor,\n    handleRangeChange: ((refString: string, offset: number, isEnd: boolean, isModify?: boolean) => void) = noop\n) => {\n    const renderManagerService = useDependency(IRenderManagerService);\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const commandService = useDependency(ICommandService);\n    const docSelectionManagerService = useDependency(DocSelectionManagerService);\n    const themeService = useDependency(ThemeService);\n    const lexerTreeBuilder = useDependency(LexerTreeBuilder);\n\n    const workbook = univerInstanceService.getUnit<Workbook>(unitId);\n    const getSheetNameById = useEvent((sheetId: string) => workbook?.getSheetBySheetId(sheetId)?.getName() ?? '');\n    const sheetName = useMemo(() => getSheetNameById(subUnitId), [getSheetNameById, subUnitId]);\n    const activeSheet = useObservable(workbook?.activeSheet$);\n    const contextRef = useStateRef({ activeSheet, sheetName });\n    const render = renderManagerService.getRenderById(unitId);\n    const refSelectionsRenderService = render?.with(RefSelectionsRenderService);\n    const sheetSkeletonManagerService = render?.with(SheetSkeletonManagerService);\n    const refSelectionsService = useDependency(IRefSelectionsService);\n\n    // eslint-disable-next-line complexity\n    const onSelectionsChange = useEvent((selections: IRange[], isEnd: boolean) => {\n        const ctx = prepareSelectionChangeContext({ editor, lexerTreeBuilder });\n        if (!ctx) return;\n        const { nodeIndex, updatingRefIndex, sequenceNodes, offset } = ctx;\n        if (isSelectingRef.current === FormulaSelectingType.NEED_ADD) {\n            if (offset !== 0) {\n                if (nodeIndex === -1 && sequenceNodes.length) {\n                    return;\n                }\n                const range = selections[selections.length - 1];\n                const lastNodes = sequenceNodes.splice(nodeIndex + 1);\n                const rangeSheetId = range.sheetId ?? subUnitId;\n                const unitRangeName = {\n                    range,\n                    unitId: range.unitId ?? unitId,\n                    sheetName: getSheetNameById(rangeSheetId),\n                };\n                const isAcrossSheet = rangeSheetId !== subUnitId;\n                const refRanges = unitRangesToText([unitRangeName], isSupportAcrossSheet && isAcrossSheet, sheetName);\n                sequenceNodes.push({ token: refRanges[0], nodeType: sequenceNodeType.REFERENCE } as any);\n                const newSequenceNodes = [...sequenceNodes, ...lastNodes];\n                const result = sequenceNodeToText(newSequenceNodes);\n                handleRangeChange(result, getOffsetFromSequenceNodes(sequenceNodes), isEnd);\n            } else {\n                const range = selections[selections.length - 1];\n                const rangeSheetId = range.sheetId ?? subUnitId;\n                const unitRangeName = {\n                    range,\n                    unitId: range.unitId ?? unitId,\n                    sheetName: getSheetNameById(rangeSheetId),\n                };\n                const isAcrossSheet = rangeSheetId !== subUnitId;\n                const refRanges = unitRangesToText([unitRangeName], isSupportAcrossSheet && isAcrossSheet);\n                sequenceNodes.unshift({ token: refRanges[0], nodeType: sequenceNodeType.REFERENCE } as any);\n                const result = sequenceNodeToText(sequenceNodes);\n                handleRangeChange(result, refRanges[0].length, isEnd);\n            }\n        } else if (isSelectingRef.current === FormulaSelectingType.EDIT_OTHER_SHEET_REFERENCE) {\n            const last = selections.pop();\n            if (!last) return;\n            const node = sequenceNodes[nodeIndex];\n            if (typeof node === 'object' && node.nodeType === sequenceNodeType.REFERENCE) {\n                const oldToken = node.token;\n                node.token = sheetName === activeSheet?.getName() ? serializeRange(last) : serializeRangeWithSheet(activeSheet!.getName(), last);\n                const newOffset = offset + (node.token.length - oldToken.length);\n                handleRangeChange(generateStringWithSequence(sequenceNodes), newOffset, isEnd);\n            }\n        } else {\n            const orderedSelections = [...selections];\n            if (updatingRefIndex !== -1) {\n                const last = orderedSelections.pop();\n                last && orderedSelections.splice(updatingRefIndex, 0, last);\n            }\n            // \u66F4\u65B0\u5168\u90E8\u7684 ref Selection\n            let currentRefIndex = 0;\n            const newTokens = sequenceNodes.map((item) => {\n                if (typeof item === 'string') {\n                    return item;\n                }\n                if (item.nodeType === sequenceNodeType.REFERENCE) {\n                    const nodeRange = deserializeRangeWithSheet(item.token);\n                    if (!nodeRange.sheetName) {\n                        nodeRange.sheetName = sheetName;\n                    }\n\n                    if (isSupportAcrossSheet) {\n                        // \u76F4\u63A5\u8DF3\u8FC7\u975E\u5F53\u524D\u8868\u7684 node \u8282\u70B9\n                        if (contextRef.current.activeSheet?.getName() !== nodeRange.sheetName) {\n                            return item.token;\n                        }\n                    }\n                    const selection = orderedSelections[currentRefIndex];\n                    currentRefIndex++;\n                    if (!selection) {\n                        return '';\n                    }\n                    const rangeSheetId = selection.sheetId ?? subUnitId;\n                    const unitRangeName = {\n                        range: selection,\n                        unitId: selection.unitId ?? unitId,\n                        sheetName: getSheetNameById(rangeSheetId),\n                    };\n                    const refRanges = unitRangesToText([unitRangeName], isSupportAcrossSheet, sheetName);\n                    return refRanges[0];\n                }\n                return item.token;\n            });\n\n            let currentText = '';\n            let newOffset;\n            newTokens.forEach((item, index) => {\n                currentText += item;\n                if (index === nodeIndex) {\n                    newOffset = currentText.length;\n                }\n            });\n            const theLastList: string[] = [];\n            for (let index = currentRefIndex; index <= selections.length - 1; index++) {\n                const selection = selections[index];\n                const rangeSheetId = selection.sheetId ?? subUnitId;\n                const unitRangeName = {\n                    range: selection,\n                    unitId: selection.unitId ?? unitId,\n                    sheetName: getSheetNameById(rangeSheetId),\n                };\n                const isAcrossSheet = rangeSheetId !== subUnitId;\n                const refRanges = unitRangesToText([unitRangeName], isSupportAcrossSheet && isAcrossSheet, sheetName);\n                theLastList.push(refRanges[0]);\n            }\n            const preNode = sequenceNodes[sequenceNodes.length - 1];\n            const isPreNodeRef = preNode && (typeof preNode === 'string' ? false : preNode.nodeType === sequenceNodeType.REFERENCE);\n            const result = `${currentText}${theLastList.length && isPreNodeRef ? ',' : ''}${theLastList.join(',')}`;\n            handleRangeChange(result, !theLastList.length && newOffset ? newOffset : result.length, isEnd);\n        }\n    });\n\n    useEffect(() => {\n        if (refSelectionsRenderService && isNeed) {\n            let isFirst = true;\n\n            const handleSelectionsChange = (selections: ISelectionWithCoord[], isEnd: boolean) => {\n                if (isFirst) {\n                    isFirst = false;\n                    return;\n                }\n                onSelectionsChange(selections.map((i) => i.rangeWithCoord), isEnd);\n            };\n\n            const disposableCollection = new DisposableCollection();\n            disposableCollection.add(refSelectionsRenderService.selectionMoving$.subscribe((selections) => {\n                handleSelectionsChange(selections, false);\n            }));\n            disposableCollection.add(refSelectionsRenderService.selectionMoveEnd$.subscribe((selections) => {\n                handleSelectionsChange(selections, true);\n            }));\n\n            return () => {\n                disposableCollection.dispose();\n            };\n        }\n    }, [isNeed, onSelectionsChange, refSelectionsRenderService]);\n\n    useEffect(() => {\n        if (isFocus && refSelectionsRenderService && editor) {\n            const disposableCollection = new DisposableCollection();\n\n            const reListen = () => {\n                disposableCollection.dispose();\n                const controls = refSelectionsRenderService.getSelectionControls();\n                controls.forEach((control, index) => {\n                    disposableCollection.add(\n                        control.selectionScaling$\n                            .subscribe((newRange) => {\n                                const selections = refSelectionsRenderService.getSelectionDataWithStyle().map((i) => i.rangeWithCoord);\n                                const current = selections[index];\n                                newRange.sheetId = current.sheetId;\n                                newRange.unitId = current.unitId;\n                                selections[index] = newRange;\n                                onSelectionsChange(selections, false);\n                            })\n                    );\n\n                    disposableCollection.add(\n                        control.selectionMoving$\n                            .subscribe((newRange) => {\n                                const selections = refSelectionsRenderService.getSelectionDataWithStyle().map((i) => i.rangeWithCoord);\n                                const current = selections[index];\n                                newRange.sheetId = current.sheetId;\n                                newRange.unitId = current.unitId;\n                                selections[index] = newRange;\n                                onSelectionsChange(selections, true);\n                            })\n                    );\n                });\n            };\n            const dispose = merge(\n                editor.input$,\n                refSelectionsService.selectionSet$,\n                refSelectionsRenderService.selectionMoveEnd$\n            ).pipe(debounceTime(50)\n            ).subscribe(() => {\n                reListen();\n            });\n\n            return () => {\n                dispose.unsubscribe();\n                disposableCollection.dispose();\n            };\n        }\n    }, [editor, isFocus, onSelectionsChange, refSelectionsRenderService, refSelectionsService.selectionSet$]);\n\n    refSelectionsRenderService?.getSelectionDataWithStyle();\n\n    useEffect(() => {\n        if (listenSelectionSet) {\n            // selection changed by keyborad\n            const d = commandService.onCommandExecuted((commandInfo) => {\n                if (commandInfo.id !== SetSelectionsOperation.id) {\n                    return;\n                }\n\n                const params = commandInfo.params as ISetSelectionsOperationParams;\n                if (params.extra !== 'formula-editor') {\n                    return;\n                }\n                if (params.selections.length) {\n                    const last = params.selections[params.selections.length - 1];\n                    if (last) {\n                        const isAdd = isSelectingRef.current === FormulaSelectingType.NEED_ADD;\n                        const selections: IRange[] = (refSelectionsRenderService?.getSelectionDataWithStyle() ?? []).map((i) => i.rangeWithCoord);\n                        if (isAdd) {\n                            selections.push(last.range);\n                        } else {\n                            selections[selections.length - 1] = last.range;\n                        }\n                        onSelectionsChange(selections, true);\n                    }\n                }\n            });\n\n            return () => {\n                d.dispose();\n            };\n        }\n    }, [commandService, editor, isSelectingRef, lexerTreeBuilder, listenSelectionSet, onSelectionsChange, refSelectionsRenderService]);\n\n    useEffect(() => {\n        if (!editor) {\n            return;\n        }\n        const sub = docSelectionManagerService.textSelection$.subscribe((e) => {\n            if (e.unitId !== editor.getEditorId()) {\n                return;\n            }\n\n            calcHighlightRanges({\n                unitId,\n                subUnitId,\n                refSelections: refSelectionRef.current,\n                editor,\n                refSelectionsService,\n                refSelectionsRenderService,\n                sheetSkeletonManagerService,\n                themeService,\n                univerInstanceService,\n            });\n        });\n\n        return () => sub.unsubscribe();\n    }, [docSelectionManagerService.textSelection$, editor, refSelectionRef, refSelectionsRenderService, refSelectionsService, sheetSkeletonManagerService, subUnitId, themeService, unitId, univerInstanceService]);\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ISequenceNode } from '@univerjs/engine-formula';\n\nexport const getOffsetFromSequenceNodes = (sequenceNode: (string | ISequenceNode)[]) => {\n    return sequenceNode.reduce((pre, cur) => {\n        if (typeof cur === 'string') {\n            return pre + cur.length;\n        }\n        return pre + cur.token.length;\n    }, 0);\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ISequenceNode } from '@univerjs/engine-formula';\n\nexport const sequenceNodeToText = (sequenceNode: (string | ISequenceNode)[]) => sequenceNode.map((item) => typeof item === 'string' ? item : item.token).join('');\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IUnitRangeName, IUniverInstanceService, Workbook } from '@univerjs/core';\nimport { serializeRange, serializeRangeWithSheet } from '@univerjs/engine-formula';\n\nexport function getSheetIdByName(univerInstanceService: IUniverInstanceService, unitId: string, name: string) {\n    return univerInstanceService.getUnit<Workbook>(unitId)?.getSheetBySheetName(name)?.getSheetId() || '';\n}\nexport function getSheetNameById(univerInstanceService: IUniverInstanceService, unitId: string, sheetId: string) {\n    return univerInstanceService.getUnit<Workbook>(unitId)?.getSheetBySheetId(sheetId)?.getName() || '';\n}\n\nexport const unitRangesToText = (ranges: IUnitRangeName[], isNeedSheetName: boolean = false, originSheetName = '') => {\n    if (!isNeedSheetName) {\n        return ranges.map((item) => serializeRange(item.range));\n    } else {\n        return ranges.map((item) => {\n            if (item.sheetName !== '' && item.sheetName !== originSheetName) {\n                return serializeRangeWithSheet(item.sheetName, item.range);\n            }\n            return serializeRange(item.range);\n        });\n    }\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOCS_NORMAL_EDITOR_UNIT_ID_KEY, ICommandService } from '@univerjs/core';\nimport { IEditorService } from '@univerjs/docs-ui';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { SetWorksheetActiveOperation } from '@univerjs/sheets';\nimport { useDependency } from '@univerjs/ui';\nimport { useEffect } from 'react';\nimport { RefSelectionsRenderService } from '../../../services/render-services/ref-selections.render-service';\n\nexport const useSwitchSheet = (isNeed: boolean, unitId: string, isSupportAcrossSheet: boolean, isFocusSet: (v: boolean) => void, onBlur: () => void, refresh: () => void) => {\n    const commandService = useDependency(ICommandService);\n    const editorService = useDependency(IEditorService);\n    const renderManagerService = useDependency(IRenderManagerService);\n    const render = renderManagerService.getRenderById(unitId);\n    const refSelectionsRenderService = render?.with(RefSelectionsRenderService);\n\n    useEffect(() => {\n        if (isNeed && refSelectionsRenderService) {\n            if (isSupportAcrossSheet) {\n                const d = commandService.onCommandExecuted((info) => {\n                    if (info.id === SetWorksheetActiveOperation.id) {\n                        const length = refSelectionsRenderService.getSelectionControls().length;\n                        for (let index = 1; index <= length; index++) {\n                            refSelectionsRenderService.clearLastSelection();\n                        }\n                        setTimeout(() => {\n                            refresh();\n                        }, 30);\n                    }\n                });\n                return () => {\n                    d.dispose();\n                };\n            } else {\n                const d = commandService.beforeCommandExecuted((info) => {\n                    if (info.id === SetWorksheetActiveOperation.id) {\n                        isFocusSet(false);\n                        onBlur();\n                        // Refresh the component\n                        refresh();\n                        const editor = editorService.getEditor(DOCS_NORMAL_EDITOR_UNIT_ID_KEY);\n                        editor?.focus();\n                    }\n                });\n                return () => {\n                    d.dispose();\n                };\n            }\n        }\n    }, [isNeed, refSelectionsRenderService]);\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IFormulaEditorProps } from '../index';\nimport { LexerTreeBuilder, operatorToken } from '@univerjs/engine-formula';\nimport { useDependency } from '@univerjs/ui';\nimport { useEffect, useRef } from 'react';\n\nexport const useVerify = (isNeed: boolean, onVerify: IFormulaEditorProps['onVerify'], formulaText: string) => {\n    const lexerTreeBuilder = useDependency(LexerTreeBuilder);\n    const isInitRender = useRef(true);\n\n    // No validation is performed during the initialization phase.\n    useEffect(() => {\n        if (isNeed) {\n            const time = setTimeout(() => {\n                isInitRender.current = false;\n            }, 500);\n            return () => {\n                clearTimeout(time);\n            };\n        }\n    }, [isNeed]);\n\n    useEffect(() => {\n        if (!isInitRender.current) {\n            if (onVerify) {\n                const result = lexerTreeBuilder.checkIfAddBracket(formulaText);\n                onVerify(result === 0 && formulaText.startsWith(operatorToken.EQUALS), `${formulaText}`);\n            }\n        }\n    }, [formulaText, onVerify]);\n};\n", "export default {\n  \"sheetEmbeddingFormulaEditorActive\": \"univer-sheet-embedding-formula-editor-active\",\n  \"sheetEmbeddingFormulaEditorWrap\": \"univer-sheet-embedding-formula-editor-wrap\",\n  \"sheetEmbeddingFormulaEditorText\": \"univer-sheet-embedding-formula-editor-text\",\n  \"sheetEmbeddingFormulaEditorError\": \"univer-sheet-embedding-formula-editor-error\",\n  \"sheetEmbeddingFormulaEditor\": \"univer-sheet-embedding-formula-editor\",\n  \"sheetEmbeddingFormulaEditorErrorWrap\": \"univer-sheet-embedding-formula-editor-error-wrap\"\n};import \"ni:sha-256;pr86I5uj7Rdja0M7hIyO70miFx9NF_0Zj3Xy8RuORRQ\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Editor } from '@univerjs/docs-ui';\nimport type { ISequenceNode } from '@univerjs/engine-formula';\nimport { CommandType, DisposableCollection, ICommandService } from '@univerjs/core';\nimport { DeviceInputEventType } from '@univerjs/engine-render';\nimport { IShortcutService, KeyCode, RectPopup, useDependency } from '@univerjs/ui';\nimport React, { forwardRef, useEffect, useMemo, useRef, useState } from 'react';\nimport { useEditorPosition } from '../hooks/use-editor-position';\nimport { useFormulaSearch } from '../hooks/use-formula-search';\nimport { useStateRef } from '../hooks/use-state-ref';\nimport styles from './index.module.less';\n\ninterface ISearchFunctionProps {\n    isFocus: boolean;\n    sequenceNodes: (string | ISequenceNode)[];\n    onSelect: (data: {\n        text: string;\n        offset: number;\n    }) => void;\n    onChange?: (functionName: string) => void;\n    editor: Editor;\n    onClose?: () => void;\n};\nconst noop = () => { };\nexport const SearchFunction = forwardRef<HTMLElement, ISearchFunctionProps>(SearchFunctionFactory);\nfunction SearchFunctionFactory(props: ISearchFunctionProps, ref: any) {\n    const { isFocus, sequenceNodes, onSelect, editor, onClose = noop } = props;\n    const editorId = editor.getEditorId();\n    const shortcutService = useDependency(IShortcutService);\n    const commandService = useDependency(ICommandService);\n    const { searchList, searchText, handlerFormulaReplace, reset: resetFormulaSearch } = useFormulaSearch(isFocus, sequenceNodes, editor);\n    const visible = useMemo(() => !!searchList.length, [searchList]);\n    const ulRef = useRef<HTMLUListElement>(undefined);\n    const [active, activeSet] = useState(0);\n    const isEnableMouseEnterOrOut = useRef(false);\n    const [position$] = useEditorPosition(editorId, visible, [searchText, searchList]);\n    const stateRef = useStateRef({ searchList, active });\n\n    const handleFunctionSelect = (v: string) => {\n        const res = handlerFormulaReplace(v);\n        if (res) {\n            resetFormulaSearch();\n            onSelect(res);\n        }\n    };\n\n    function handleLiMouseEnter(index: number) {\n        if (!isEnableMouseEnterOrOut.current) {\n            return;\n        }\n        activeSet(index);\n    }\n\n    function handleLiMouseLeave() {\n        if (!isEnableMouseEnterOrOut.current) {\n            return;\n        }\n        activeSet(-1);\n    }\n\n    useEffect(() => {\n        if (!searchList.length) {\n            return;\n        }\n        // \u6CE8\u518C\u65B9\u5411\u952E\u4E8B\u4EF6\n        const operationId = `sheet.formula-embedding-editor.search_function.${editorId}`;\n        const d = new DisposableCollection();\n        const handleKeycode = (keycode: KeyCode) => {\n            const { searchList, active } = stateRef.current;\n\n            switch (keycode) {\n                case KeyCode.ARROW_UP: {\n                    activeSet((pre) => {\n                        const res = Math.max(0, pre - 1);\n                        scrollToVisible(res);\n                        return res;\n                    });\n\n                    break;\n                }\n                case KeyCode.ARROW_DOWN: {\n                    activeSet((pre) => {\n                        const res = Math.min(searchList.length - 1, pre + 1);\n                        scrollToVisible(res);\n                        return res;\n                    });\n                    break;\n                }\n                case KeyCode.TAB:\n                case KeyCode.ENTER: {\n                    const item = searchList[active];\n                    handleFunctionSelect(item.name);\n                    break;\n                }\n                case KeyCode.ESC: {\n                    resetFormulaSearch();\n                    onClose();\n                    break;\n                }\n            }\n        };\n        d.add(commandService.registerCommand({\n            id: operationId,\n            type: CommandType.OPERATION,\n            handler(_event, params) {\n                const { keyCode } = params as { eventType: DeviceInputEventType; keyCode: KeyCode };\n                handleKeycode(keyCode);\n            },\n        }));\n\n        [KeyCode.ARROW_UP, KeyCode.ARROW_DOWN, KeyCode.ENTER, KeyCode.ESC, KeyCode.TAB].map((keyCode) => {\n            return {\n                id: operationId,\n                binding: keyCode,\n                preconditions: () => true,\n                priority: 1000,\n                staticParameters: {\n                    eventType: DeviceInputEventType.Keyboard,\n                    keyCode,\n                },\n            };\n        }).forEach((item) => {\n            d.add(shortcutService.registerShortcut(item));\n        });\n\n        return () => {\n            d.dispose();\n        };\n    }, [searchList]);\n\n    function scrollToVisible(liIndex: number) {\n        // Get the <li> element\n        const liElement = ulRef.current?.querySelectorAll(`.${styles.formulaSearchFunctionItem}`)[\n            liIndex\n        ] as HTMLLIElement;\n\n        if (!liElement) return;\n\n        // Get the <ul> element\n        const ulElement = liElement.parentNode as HTMLUListElement;\n\n        if (!ulElement) return;\n\n        // Get the height of the <ul> element\n        const ulRect = ulElement.getBoundingClientRect();\n        const ulTop = ulRect.top;\n        const ulHeight = ulElement.offsetHeight;\n\n        // Get the position and height of the <li> element\n        const liRect = liElement.getBoundingClientRect();\n        const liTop = liRect.top;\n        const liHeight = liRect.height;\n\n        // If the <li> element is within the visible area, no scrolling operation is performed\n        if (liTop >= 0 && liTop > ulTop && liTop - ulTop + liHeight <= ulHeight) {\n            return;\n        }\n\n        // Calculate scroll position\n        const scrollTo = liElement.offsetTop - (ulHeight - liHeight) / 2;\n\n        // Perform scrolling operation\n        ulElement.scrollTo({\n            top: scrollTo,\n            behavior: 'smooth',\n        });\n    }\n\n    const debounceResetMouseState = useMemo(() => {\n        let time = '' as any;\n        return () => {\n            clearTimeout(time);\n            isEnableMouseEnterOrOut.current = true;\n            time = setTimeout(() => {\n                isEnableMouseEnterOrOut.current = false;\n            }, 300);\n        };\n    }, []);\n\n    return searchList.length > 0 && visible && (\n        <RectPopup portal anchorRect$={position$} direction=\"vertical\">\n            <ul\n                className={styles.formulaSearchFunction}\n                ref={(v) => {\n                    ulRef.current = v!;\n                    if (ref) {\n                        ref.current = v!;\n                    }\n                }}\n            >\n                {searchList.map((item, index) => (\n                    <li\n                        key={item.name}\n                        className={active === index\n                            ? `\n                              ${styles.formulaSearchFunctionItem}\n                              ${styles.formulaSearchFunctionItemActive}\n                            `\n                            : styles.formulaSearchFunctionItem}\n                        onMouseEnter={() => handleLiMouseEnter(index)}\n                        onMouseLeave={handleLiMouseLeave}\n                        onMouseMove={debounceResetMouseState}\n                        onClick={() => {\n                            handleFunctionSelect(item.name);\n                            if (editor) {\n                                editor.focus();\n                            }\n                        }}\n                    >\n                        <span className={styles.formulaSearchFunctionItemName}>\n                            <span className={styles.formulaSearchFunctionItemNameLight}>{item.name.substring(0, searchText.length)}</span>\n                            <span>{item.name.slice(searchText.length)}</span>\n                        </span>\n                        <span className={styles.formulaSearchFunctionItemDesc}>{item.desc}</span>\n                    </li>\n                ))}\n            </ul>\n        </RectPopup>\n    );\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Editor } from '@univerjs/docs-ui';\nimport type { ISearchItem } from '@univerjs/sheets-formula';\nimport type { INode } from './use-formula-token';\nimport { matchToken, sequenceNodeType } from '@univerjs/engine-formula';\nimport { IDescriptionService } from '@univerjs/sheets-formula';\nimport { useDependency } from '@univerjs/ui';\nimport { useEffect, useRef, useState } from 'react';\nimport { debounceTime } from 'rxjs';\nimport { findIndexFromSequenceNodes } from '../../range-selector/utils/find-index-from-sequence-nodes';\nimport { sequenceNodeToText } from '../../range-selector/utils/sequence-node-to-text';\nimport { useStateRef } from '../hooks/use-state-ref';\n\nexport const useFormulaSearch = (isNeed: boolean, nodes: INode[] = [], editor?: Editor) => {\n    const descriptionService = useDependency(IDescriptionService);\n\n    const [searchList, searchListSet] = useState<ISearchItem[]>([]);\n    const [searchText, searchTextSet] = useState<string>('');\n    const indexRef = useRef(-1);\n    const stateRef = useStateRef({ nodes });\n\n    const reset = () => {\n        searchListSet([]);\n        searchTextSet('');\n        indexRef.current = -1;\n    };\n\n    useEffect(() => {\n        if (editor && isNeed) {\n            const d = editor.input$.pipe(debounceTime(300)).subscribe(() => {\n                const selections = editor.getSelectionRanges();\n                if (selections.length === 1) {\n                    const nodes = stateRef.current.nodes;\n                    const range = selections[0];\n                    if (range.collapsed) {\n                        // \u4E3A\u4EC0\u4E48\u51CF1,\u56E0\u4E3Anodes\u662F\u4E0D\u5305\u542B\u521D\u59CB \u2018=\u2019 \u5B57\u7B26\u7684,\u4F46\u662F selection \u4F1A\u5305\u542B '='\n                        const currentNodeIndex = findIndexFromSequenceNodes(nodes, range.startOffset - 1, false);\n                        indexRef.current = currentNodeIndex;\n                        const currentNode = nodes[currentNodeIndex];\n                        if (currentNode && typeof currentNode !== 'string' && currentNode.nodeType === sequenceNodeType.FUNCTION) {\n                            indexRef.current = currentNodeIndex;\n                            const token = currentNode.token;\n                            const list = descriptionService.getSearchListByNameFirstLetter(token);\n                            searchListSet(list);\n                            searchTextSet(token);\n                            return;\n                        }\n                    }\n                }\n                indexRef.current = -1;\n                searchTextSet('');\n                searchListSet((pre) => {\n                    if (!pre?.length) {\n                        return pre;\n                    }\n                    return [];\n                });\n            });\n            return () => {\n                d.unsubscribe();\n            };\n        };\n    }, [editor, isNeed]);\n\n    useEffect(() => {\n        if (!isNeed) {\n            reset();\n        }\n    }, [isNeed]);\n\n    const handlerFormulaReplace = (formulaName: string) => {\n        const cloneNodes = [...stateRef.current.nodes];\n        if (indexRef.current !== -1) {\n            const lastNodes = cloneNodes.splice(indexRef.current + 1);\n            const oldNode = cloneNodes.pop() || '';\n            let offset = (typeof oldNode === 'string' ? oldNode.length : oldNode.token.length) - formulaName.length;\n            cloneNodes.push(formulaName);\n            if (lastNodes[0] !== matchToken.OPEN_BRACKET) {\n                cloneNodes.push(matchToken.OPEN_BRACKET);\n                offset--;\n            }\n            const text = sequenceNodeToText([...cloneNodes, ...lastNodes]);\n            return { text, offset };\n        }\n    };\n    return {\n        searchList,\n        searchText,\n        handlerFormulaReplace,\n        reset,\n    };\n};\n", "export default {\n  \"formulaSearchFunction\": \"univer-formula-search-function\",\n  \"formulaSearchFunctionItem\": \"univer-formula-search-function-item\",\n  \"formulaSearchFunctionItemName\": \"univer-formula-search-function-item-name\",\n  \"formulaSearchFunctionItemNameLight\": \"univer-formula-search-function-item-name-light\",\n  \"formulaSearchFunctionItemDesc\": \"univer-formula-search-function-item-desc\",\n  \"formulaSearchFunctionItemActive\": \"univer-formula-search-function-item-active\"\n};import \"ni:sha-256;5NRvQW1euM5O83PddGAv6u052nTzbKfRXSsm3UVFDwk\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { operatorToken } from '@univerjs/engine-formula';\n\nexport const getFormulaText = (formula: string) => {\n    if (formula.startsWith(operatorToken.EQUALS)) {\n        return formula.slice(1);\n    }\n    return '';\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IUnitRangeName, Nullable } from '@univerjs/core';\nimport type { Editor, IRichTextEditorProps } from '@univerjs/docs-ui';\nimport type { ISelectionWithStyle, ISetSelectionsOperationParams } from '@univerjs/sheets';\nimport { ICommandService, LocaleService, RichTextBuilder } from '@univerjs/core';\nimport { Button, Dialog, Input, Tooltip } from '@univerjs/design';\nimport { IEditorService, RichTextEditor } from '@univerjs/docs-ui';\nimport { deserializeRangeWithSheet, LexerTreeBuilder, matchToken, sequenceNodeType, serializeRange, serializeRangeWithSheet } from '@univerjs/engine-formula';\nimport { CloseSingle, DeleteSingle, IncreaseSingle, SelectRangeSingle } from '@univerjs/icons';\nimport { SetSelectionsOperation } from '@univerjs/sheets';\nimport { useDependency, useEvent } from '@univerjs/ui';\nimport { useEffect, useRef, useState } from 'react';\nimport { useStateRef } from '../formula-editor/hooks/use-state-ref';\nimport { useRangesHighlight } from './hooks/use-ranges-highlight';\nimport { useRangeSelectorSelectionChange } from './hooks/use-selection-change';\nimport styles from './index.module.less';\nimport { verifyRange } from './util';\nimport { rangePreProcess } from './utils/range-pre-process';\n\nexport interface IRangeSelectorInstance {\n    editor: Nullable<Editor>;\n    blur: () => void;\n    focus: () => void;\n    showDialog: (ranges: IUnitRangeName[]) => void;\n    hideDialog: () => void;\n    verify: () => boolean;\n    getValue: () => string;\n}\n\nexport interface IRangeSelectorProps extends IRichTextEditorProps {\n    unitId: string;\n    subUnitId: string;\n    maxRangeCount?: number;\n    supportAcrossSheet?: boolean;\n    selectorRef?: React.RefObject<IRangeSelectorInstance | null>;\n    onVerify?: (res: boolean, rangeText: string) => void;\n    onRangeSelectorDialogVisibleChange?: (visible: boolean) => void;\n    hideEditor?: boolean;\n    forceShowDialogWhenSelectionChanged?: boolean;\n    resetRange?: ISelectionWithStyle[];\n};\n\nexport interface IRangeSelectorDialogProps {\n    visible: boolean;\n    initialValue: IUnitRangeName[];\n    unitId: string;\n    subUnitId: string;\n    maxRangeCount?: number;\n    supportAcrossSheet?: boolean;\n    onConfirm: (ranges: IUnitRangeName[]) => void;\n    onClose: () => void;\n    onShowBySelection?: (ranges: IUnitRangeName[]) => boolean;\n}\n\nexport function RangeSelectorDialog(props: IRangeSelectorDialogProps) {\n    const { visible, initialValue, unitId, subUnitId, maxRangeCount = Infinity, supportAcrossSheet, onConfirm, onClose, onShowBySelection } = props;\n    const localeService = useDependency(LocaleService);\n    const lexerTreeBuilder = useDependency(LexerTreeBuilder);\n    const [ranges, setRanges] = useState<string[]>([]);\n    const [focusIndex, setFocusIndex] = useState(0);\n    const scrollbarRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (visible && initialValue.length) {\n            const newRanges = initialValue.map((range) => range.sheetName ? serializeRangeWithSheet(range.sheetName, range.range) : serializeRange(range.range));\n            setRanges(newRanges);\n            setFocusIndex(newRanges.length - 1);\n        } else {\n            setRanges(['']);\n            setFocusIndex(0);\n        }\n    }, [visible]);\n\n    const handleRangeInput = (index: number, value: string) => {\n        const newRanges = [...ranges];\n        newRanges[index] = value;\n        setRanges(newRanges);\n    };\n    const handleRangeAdd = () => {\n        setRanges([...ranges, '']);\n        setFocusIndex(ranges.length);\n    };\n\n    const handleRangeRemove = (index: number) => {\n        ranges.splice(index, 1);\n        setRanges([...ranges]);\n    };\n\n    useRangeSelectorSelectionChange({\n        unitId,\n        subUnitId,\n        supportAcrossSheet,\n        onChange: (selections, isStart) => {\n            if (!visible) {\n                if (onShowBySelection?.(selections)) {\n                    return;\n                }\n            }\n            const current = new Set(ranges);\n            const addedRangesOrigin = selections.map((range) => !range.sheetName ? serializeRange(range.range) : serializeRangeWithSheet(range.sheetName, range.range));\n            const addedRanges = addedRangesOrigin.filter((item) => !current.has(item));\n            if (!addedRanges.length) return;\n            const newRanges = [...ranges];\n\n            if (addedRangesOrigin.length > 1) {\n                if (!isStart) {\n                    newRanges.splice(focusIndex, 1);\n                }\n\n                newRanges.push(...addedRanges);\n                const finalRanges = newRanges.slice(0, maxRangeCount);\n                setRanges(finalRanges);\n                setFocusIndex(finalRanges.length - 1);\n                requestAnimationFrame(() => {\n                    scrollbarRef.current?.scrollTo({ top: scrollbarRef.current.scrollHeight });\n                });\n            } else {\n                // modify\n                newRanges.splice(focusIndex, 1, ...addedRanges);\n                const finalRanges = newRanges.slice(0, maxRangeCount);\n                setRanges(finalRanges);\n                setFocusIndex(focusIndex + addedRanges.length - 1);\n            }\n        },\n    });\n\n    return (\n        <Dialog\n            width=\"328px\"\n            visible={visible}\n            title={localeService.t('rangeSelector.title')}\n            draggable\n            closeIcon={<CloseSingle />}\n            footer={(\n                <footer>\n                    <Button onClick={onClose}>{localeService.t('rangeSelector.cancel')}</Button>\n                    <Button\n                        style={{ marginLeft: 10 }}\n                        onClick={() => {\n                            onConfirm(\n                                ranges\n                                    .filter((text) => {\n                                        const nodes = lexerTreeBuilder.sequenceNodesBuilder(text);\n                                        return nodes && nodes.length === 1 && typeof nodes[0] !== 'string' && nodes[0].nodeType === sequenceNodeType.REFERENCE;\n                                    })\n                                    .map((text) => deserializeRangeWithSheet(text)).map((unitRange) => ({ ...unitRange, range: rangePreProcess(unitRange.range) }))\n                            );\n                        }}\n                        type=\"primary\"\n                    >\n                        {localeService.t('rangeSelector.confirm')}\n                    </Button>\n                </footer>\n            )}\n            onClose={onClose}\n        >\n            <div ref={scrollbarRef} className={styles.sheetRangeSelectorDialog}>\n                {ranges.map((text, index) => (\n                    <div key={index} className={styles.sheetRangeSelectorDialogItem}>\n                        <Input\n                            affixWrapperStyle={{ width: '100%' }}\n                            placeholder={localeService.t('rangeSelector.placeHolder')}\n                            onFocus={() => setFocusIndex(index)}\n                            value={text}\n                            onChange={(value) => handleRangeInput(index, value)}\n                            style={{ borderColor: focusIndex === index ? 'rgb(var(--primary-color))' : undefined }}\n                        />\n                        {ranges.length > 1 && <DeleteSingle className={styles.sheetRangeSelectorDialogItemDelete} onClick={() => handleRangeRemove(index)} />}\n                    </div>\n                ))}\n                {ranges.length < maxRangeCount && (\n                    <div>\n                        <Button type=\"link\" size=\"small\" onClick={handleRangeAdd}>\n                            <IncreaseSingle />\n                            <span>{localeService.t('rangeSelector.addAnotherRange')}</span>\n                        </Button>\n                    </div>\n                )}\n            </div>\n        </Dialog>\n    );\n}\n\nexport function parseRanges(rangeString: string) {\n    return rangeString.split(matchToken.COMMA).filter((e) => !!e).map((text) => deserializeRangeWithSheet(text));\n}\n\nexport function stringifyRanges(ranges: IUnitRangeName[]) {\n    return ranges\n        .map((range) => range.sheetName ? serializeRangeWithSheet(range.sheetName, range.range) : serializeRange(range.range))\n        .join(matchToken.COMMA);\n}\n\nexport function RangeSelector(props: IRangeSelectorProps) {\n    const [editor, setEditor] = useState<Editor | null>(null);\n    const {\n        onVerify,\n        selectorRef,\n        unitId,\n        subUnitId,\n        maxRangeCount,\n        supportAcrossSheet,\n        autoFocus,\n        onChange,\n        onRangeSelectorDialogVisibleChange,\n        onClickOutside,\n        onFocusChange,\n        forceShowDialogWhenSelectionChanged,\n        hideEditor,\n        resetRange,\n    } = props;\n    const [focusing, setFocusing] = useState(autoFocus ?? false);\n    const [popupVisible, setPopupVisible] = useState(false);\n    const [rangeSelectorRanges, setRangeSelectorRanges] = useState<IUnitRangeName[]>([]);\n    const localeService = useDependency(LocaleService);\n    const editorService = useDependency(IEditorService);\n    const { sequenceNodes } = useRangesHighlight(editor, focusing, unitId, subUnitId);\n    const sequenceNodesRef = useStateRef(sequenceNodes);\n    const commandService = useDependency(ICommandService);\n\n    const blurEditor = useEvent(() => {\n        editor?.setSelectionRanges([]);\n        editor?.blur();\n        editorService.blur();\n    });\n\n    const handleOpenModal = useEvent(() => {\n        blurEditor();\n        setRangeSelectorRanges(parseRanges(editor?.getDocumentDataModel().getPlainText() ?? ''));\n        setPopupVisible(true);\n    });\n\n    useEffect(() => {\n        if (!selectorRef) return;\n        selectorRef.current = {\n            get editor() {\n                return editor;\n            },\n            focus() {\n                editorService.focus(editor!.getEditorId());\n            },\n            blur: blurEditor,\n            verify: () => verifyRange(sequenceNodesRef.current),\n            showDialog: (ranges) => {\n                blurEditor();\n                setRangeSelectorRanges(ranges);\n                setPopupVisible(true);\n            },\n            hideDialog: () => {\n                setRangeSelectorRanges([]);\n                setPopupVisible(false);\n            },\n            getValue: () => editor?.getDocumentDataModel().getPlainText() ?? '',\n        };\n    }, [blurEditor, editor, editorService, selectorRef, sequenceNodesRef]);\n\n    useEffect(() => {\n        onVerify?.(verifyRange(sequenceNodes), editor?.getDocumentDataModel().getPlainText() ?? '');\n    }, [sequenceNodes]);\n\n    useEffect(() => {\n        onRangeSelectorDialogVisibleChange?.(popupVisible);\n    }, [popupVisible]);\n\n    useEffect(() => {\n        if (popupVisible && resetRange) {\n            return () => {\n                const params: ISetSelectionsOperationParams = {\n                    unitId,\n                    subUnitId,\n                    selections: resetRange,\n                };\n                commandService.executeCommand(SetSelectionsOperation.id, params);\n            };\n        }\n    }, [popupVisible]);\n\n    return (\n        <>\n            {!hideEditor\n                ? (\n                    <RichTextEditor\n                        isSingle\n                        {...props}\n                        onFocusChange={(focusing, newValue) => {\n                            setFocusing(focusing);\n                            onFocusChange?.(focusing, newValue);\n                        }}\n                        editorRef={setEditor}\n                        onClickOutside={() => {\n                            setFocusing(false);\n                            blurEditor();\n                            onClickOutside?.();\n                        }}\n                        icon={(\n                            <Tooltip title={localeService.t('rangeSelector.buttonTooltip')} placement=\"bottom\">\n                                <SelectRangeSingle className={styles.sheetRangeSelectorIcon} onClick={handleOpenModal} />\n                            </Tooltip>\n                        )}\n                    />\n                )\n                : null}\n            <RangeSelectorDialog\n                initialValue={rangeSelectorRanges}\n                unitId={unitId}\n                subUnitId={subUnitId}\n                visible={popupVisible}\n                maxRangeCount={maxRangeCount}\n                onConfirm={(ranges) => {\n                    const resultStr = stringifyRanges(ranges);\n                    const empty = RichTextBuilder.newEmptyData();\n                    empty.body!.dataStream = resultStr;\n                    editor?.replaceText(resultStr, false);\n                    onChange?.(empty, resultStr);\n                    setPopupVisible(false);\n                    setRangeSelectorRanges([]);\n                    requestAnimationFrame(() => {\n                        blurEditor();\n                    });\n                }}\n                onClose={() => {\n                    setPopupVisible(false);\n                    setRangeSelectorRanges([]);\n                }}\n                supportAcrossSheet={supportAcrossSheet}\n                onShowBySelection={(ranges: IUnitRangeName[]) => {\n                    if (focusing || forceShowDialogWhenSelectionChanged) {\n                        setRangeSelectorRanges(ranges);\n                        setPopupVisible(true);\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }}\n            />\n        </>\n    );\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Nullable, Workbook } from '@univerjs/core';\nimport type { Editor } from '@univerjs/docs-ui';\nimport type { ISequenceNode } from '@univerjs/engine-formula';\nimport { ColorKit, DisposableCollection, IUniverInstanceService, UniverInstanceType } from '@univerjs/core';\nimport { deserializeRangeWithSheet, LexerTreeBuilder } from '@univerjs/engine-formula';\nimport { IMarkSelectionService } from '@univerjs/sheets-ui';\nimport { useDependency, useObservable } from '@univerjs/ui';\nimport { useEffect, useRef, useState } from 'react';\nimport { useDocHight } from '../../formula-editor/hooks/use-highlight';\n\nexport function useRangesHighlight(editor: Nullable<Editor>, focusing: boolean, unitId: string, subUnitId: string) {\n    const lexerTreeBuilder = useDependency(LexerTreeBuilder);\n    const highlightDoc = useDocHight('');\n    const change = useObservable(editor?.getDocumentDataModel().change$);\n    const [sequenceNodes, setSequenceNodes] = useState<(string | ISequenceNode)[]>([]);\n    const markSelectionService = useDependency(IMarkSelectionService);\n    const last = useRef('');\n    const univerInstanceService = useDependency(IUniverInstanceService);\n\n    useEffect(() => {\n        if (!editor) return;\n        const text = editor.getDocumentDataModel().getPlainText();\n        if (last.current === text) {\n            return;\n        }\n        last.current = text;\n        const nodes = lexerTreeBuilder.sequenceNodesBuilder(text);\n        setSequenceNodes(nodes ?? []);\n    }, [change, editor, lexerTreeBuilder]);\n\n    useEffect(() => {\n        if (!editor) return;\n        if (!focusing) {\n            const current = editor.getDocumentData();\n            editor.setDocumentData({\n                ...current,\n                body: {\n                    ...current.body,\n                    dataStream: current.body?.dataStream ?? '',\n                    textRuns: [],\n                },\n            });\n            return;\n        }\n        const selections = highlightDoc(editor, sequenceNodes, false);\n        const disposable = new DisposableCollection();\n        selections.forEach((selection) => {\n            // selection.token;\n            const range = deserializeRangeWithSheet(selection.token);\n            const workbook = univerInstanceService.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n            const worksheet = workbook?.getActiveSheet();\n            // range is not in the current worksheet\n            if ((!range.sheetName && subUnitId !== worksheet?.getSheetId()) || (range.sheetName && worksheet?.getName() !== range.sheetName)) {\n                return;\n            }\n\n            const rgb = new ColorKit(selection.themeColor).toRgb();\n            const id = markSelectionService.addShape({\n                range: range.range,\n                style: {\n                    stroke: selection.themeColor,\n                    fill: `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.1)`,\n                    strokeDash: 12,\n                },\n                primary: null,\n            });\n\n            if (id) {\n                disposable.add(() => markSelectionService.removeShape(id));\n            }\n        });\n\n        return () => {\n            disposable.dispose();\n        };\n    }, [editor, focusing, highlightDoc, markSelectionService, sequenceNodes]);\n\n    return { sequenceNodes };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IUnitRangeName, Nullable, Workbook } from '@univerjs/core';\nimport type { ISelectionWithStyle } from '@univerjs/sheets';\nimport { DisposableCollection, IUniverInstanceService, UniverInstanceType } from '@univerjs/core';\nimport { SheetsSelectionsService } from '@univerjs/sheets';\nimport { useDependency, useEvent } from '@univerjs/ui';\nimport { useEffect } from 'react';\n\nexport function useRangeSelectorSelectionChange(opts: { supportAcrossSheet?: boolean; unitId: string; subUnitId: string; onChange: (ranges: IUnitRangeName[], isStart: boolean) => void }) {\n    const sheetsSelectionsService = useDependency(SheetsSelectionsService);\n    const { supportAcrossSheet = false, unitId, subUnitId, onChange: _onChange } = opts;\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const workbook = univerInstanceService.getUnit<Workbook>(unitId, UniverInstanceType.UNIVER_SHEET);\n    const onChange = useEvent(_onChange);\n\n    const handleSelectionChange = useEvent((selections: Nullable<ISelectionWithStyle[]>, isStart: boolean) => {\n        const currentSheet = workbook?.getActiveSheet();\n        if (!currentSheet) return;\n        if (!supportAcrossSheet && currentSheet.getSheetId() !== subUnitId) return;\n        if (!selections?.length) return;\n        const ranges = selections.map((item) => ({\n            range: item.range,\n            unitId,\n            sheetName: currentSheet.getSheetId() === subUnitId ? '' : currentSheet.getName(),\n        }));\n\n        onChange(ranges, isStart);\n    });\n\n    useEffect(() => {\n        const disposableCollection = new DisposableCollection();\n        disposableCollection.add(sheetsSelectionsService.selectionMoveStart$.subscribe((selections) => {\n            handleSelectionChange(selections, true);\n        }));\n\n        disposableCollection.add(sheetsSelectionsService.selectionMoving$.subscribe((selections) => {\n            handleSelectionChange(selections, false);\n        }));\n\n        disposableCollection.add(sheetsSelectionsService.selectionMoveEnd$.subscribe((selections) => {\n            handleSelectionChange(selections, false);\n        }));\n\n        return () => {\n            disposableCollection.dispose();\n        };\n    }, [handleSelectionChange, sheetsSelectionsService.selectionMoveEnd$, sheetsSelectionsService.selectionMoveStart$, sheetsSelectionsService.selectionMoving$]);\n}\n", "export default {\n  \"sheetRangeSelectorTextWrap\": \"univer-sheet-range-selector-text-wrap\",\n  \"sheetRangeSelectorPlaceholder\": \"univer-sheet-range-selector-placeholder\",\n  \"sheetRangeSelectorError\": \"univer-sheet-range-selector-error\",\n  \"sheetRangeSelectorErrorWrap\": \"univer-sheet-range-selector-error-wrap\",\n  \"sheetRangeSelectorText\": \"univer-sheet-range-selector-text\",\n  \"sheetRangeSelectorActive\": \"univer-sheet-range-selector-active\",\n  \"sheetRangeSelectorIcon\": \"univer-sheet-range-selector-icon\",\n  \"sheetRangeSelectorDialog\": \"univer-sheet-range-selector-dialog\",\n  \"sheetRangeSelectorDialogItem\": \"univer-sheet-range-selector-dialog-item\",\n  \"sheetRangeSelectorDialogItemDelete\": \"univer-sheet-range-selector-dialog-item-delete\"\n};import \"ni:sha-256;XI_sSmqZupUqihxqgeNJhutwRJg2SKc9YkPpOUZJOdk\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ISequenceNode } from '@univerjs/engine-formula';\nimport { matchToken, sequenceNodeType } from '@univerjs/engine-formula';\n\n/**\n * @param {((string | ISequenceNode)[])} sequenceNodes\n * @return {*}\n */\nexport const verifyRange = (sequenceNodes: (string | ISequenceNode)[]) => {\n    const isFail = sequenceNodes.some((item) => {\n        if (typeof item === 'string') {\n            if (item !== matchToken.COMMA) {\n                return true;\n            }\n        } else {\n            if (item.nodeType !== sequenceNodeType.REFERENCE) {\n                return true;\n            }\n        }\n        return false;\n    });\n    return !isFail;\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange } from '@univerjs/core';\n\nexport const rangePreProcess = (range: IRange) => {\n    if (range.endColumn < range.startColumn) {\n        const end = range.endColumn;\n        range.endColumn = range.startColumn;\n        range.startColumn = end;\n    }\n    if (range.endRow < range.startRow) {\n        const end = range.endRow;\n        range.endRow = range.startRow;\n        range.startRow = end;\n    }\n    return range;\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRangeSelectorInstance } from './index';\nimport { deserializeRangeWithSheet } from '@univerjs/engine-formula';\nimport { useDependency, useObservable } from '@univerjs/ui';\nimport { useEffect, useRef } from 'react';\nimport { GlobalRangeSelectorService } from '../../services/range-selector.service';\nimport { RangeSelector } from './index';\n\nexport const GlobalRangeSelector = () => {\n    const rangeSelectorService = useDependency(GlobalRangeSelectorService);\n    const current = useObservable(rangeSelectorService.currentSelector$);\n    const instance = useRef<IRangeSelectorInstance | null>(null);\n\n    useEffect(() => {\n        if (current) {\n            instance.current?.showDialog(current.initialValue ?? []);\n\n            return () => {\n                instance.current?.hideDialog();\n            };\n        }\n    }, [current]);\n\n    return (\n        <RangeSelector\n            unitId={current?.unitId ?? ''}\n            subUnitId={current?.subUnitId ?? ''}\n            hideEditor\n            selectorRef={instance}\n            onChange={(_, value) => {\n                current?.callback(value?.split(',').map((i) => deserializeRangeWithSheet(i)) ?? []);\n            }}\n        />\n    );\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Dependency } from '@univerjs/core';\nimport type { IUniverSheetsFormulaBaseConfig } from './controllers/config.schema';\nimport { DependentOn, IConfigService, Inject, Injector, merge, Plugin, registerDependencies, touchDependencies, UniverInstanceType } from '@univerjs/core';\nimport { UniverFormulaEnginePlugin } from '@univerjs/engine-formula';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { UniverSheetsFormulaPlugin } from '@univerjs/sheets-formula';\nimport { EMBEDDING_FORMULA_EDITOR_COMPONENT_KEY, RANGE_SELECTOR_COMPONENT_KEY } from '@univerjs/sheets-ui';\nimport { BuiltInUIPart, ComponentManager, connectInjector, IUIPartsService } from '@univerjs/ui';\nimport { FORMULA_UI_PLUGIN_NAME } from './common/plugin-name';\nimport {\n    defaultPluginBaseConfig,\n    PLUGIN_CONFIG_KEY_BASE,\n} from './controllers/config.schema';\nimport { FormulaAlertRenderController } from './controllers/formula-alert-render.controller';\nimport { FormulaAutoFillController } from './controllers/formula-auto-fill.controller';\nimport { FormulaClipboardController } from './controllers/formula-clipboard.controller';\nimport { FormulaEditorShowController } from './controllers/formula-editor-show.controller';\nimport { FormulaRenderManagerController } from './controllers/formula-render.controller';\nimport { FormulaUIController } from './controllers/formula-ui.controller';\nimport { FormulaPromptService, IFormulaPromptService } from './services/prompt.service';\nimport { GlobalRangeSelectorService } from './services/range-selector.service';\nimport { RefSelectionsRenderService } from './services/render-services/ref-selections.render-service';\nimport { FormulaEditor } from './views/formula-editor/index';\nimport { RangeSelector } from './views/range-selector';\nimport { GlobalRangeSelector } from './views/range-selector/global';\n\n/**\n * The configuration of the formula UI plugin.\n */\n@DependentOn(UniverFormulaEnginePlugin, UniverSheetsFormulaPlugin)\nexport class UniverSheetsFormulaUIPlugin extends Plugin {\n    static override pluginName = FORMULA_UI_PLUGIN_NAME;\n    static override type = UniverInstanceType.UNIVER_SHEET;\n\n    constructor(\n        private readonly _config: Partial<IUniverSheetsFormulaBaseConfig> = defaultPluginBaseConfig,\n        @Inject(Injector) override readonly _injector: Injector,\n        @IRenderManagerService private readonly _renderManagerService: IRenderManagerService,\n        @IConfigService private readonly _configService: IConfigService,\n        @IUIPartsService private readonly _uiPartsService: IUIPartsService\n    ) {\n        super();\n\n        // Manage the plugin configuration.\n        const { menu, ...rest } = merge(\n            defaultPluginBaseConfig,\n            this._config\n        );\n        if (menu) {\n            this._configService.setConfig('menu', menu, { merge: true });\n        }\n        this._configService.setConfig(PLUGIN_CONFIG_KEY_BASE, rest, { merge: true });\n    }\n\n    override onStarting(): void {\n        registerDependencies(this._injector, [\n            [IFormulaPromptService, { useClass: FormulaPromptService }],\n            [GlobalRangeSelectorService],\n            [FormulaUIController],\n            [FormulaAutoFillController],\n            [FormulaClipboardController],\n            [FormulaEditorShowController],\n            [FormulaRenderManagerController],\n        ]);\n    }\n\n    override onRendered(): void {\n        ([\n            [RefSelectionsRenderService],\n            [FormulaAlertRenderController],\n        ] as Dependency[]).forEach((dep) => {\n            this.disposeWithMe(this._renderManagerService.registerRenderModule(UniverInstanceType.UNIVER_SHEET, dep));\n        });\n\n        touchDependencies(this._injector, [\n            [FormulaUIController], // FormulaProgressBar relies on TriggerCalculationController, but it is necessary to ensure that the formula calculation is done after rendered.\n            [FormulaClipboardController],\n            [FormulaRenderManagerController],\n        ]);\n\n        // Since component FormulaEditor relies on RefSelectionsRenderService, it should be\n        // registered after RefSelectionsRenderService is registered.\n        this._initUIPart();\n    }\n\n    override onSteady(): void {\n        this._injector.get(FormulaAutoFillController);\n    }\n\n    private _initUIPart(): void {\n        const componentManager = this._injector.get(ComponentManager);\n        this.disposeWithMe(componentManager.register(RANGE_SELECTOR_COMPONENT_KEY, RangeSelector));\n        this.disposeWithMe(componentManager.register(EMBEDDING_FORMULA_EDITOR_COMPONENT_KEY, FormulaEditor));\n        this.disposeWithMe(this._uiPartsService.registerComponent(BuiltInUIPart.GLOBAL, () => connectInjector(GlobalRangeSelector, this._injector)));\n    }\n}\n"],
  "mappings": "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",
  "names": ["_a", "_b", "node", "newNode", "_a", "_b", "import_react", "import_react", "import_jsx_runtime", "visible", "paramIndex", "functionInfo", "import_react", "index_module_default", "import_jsx_runtime", "visible", "searchText", "searchList", "index_module_default", "import_jsx_runtime", "import_react", "index_module_default", "import_react", "import_jsx_runtime", "index_module_default", "import_jsx_runtime", "index_module_default", "index_module_default", "import_jsx_runtime", "index_module_default", "import_react", "index_module_default", "import_jsx_runtime", "index_module_default", "functionInfo", "selectList", "import_jsx_runtime", "index_module_default", "_a", "import_react", "import_react", "import_react", "import_react", "useResizeScrollObserver", "import_react", "import_react", "paramIndex", "index_module_default", "import_jsx_runtime", "Params", "index_module_default", "Help", "HelpFunction", "paramIndex", "index_module_default", "Help", "Params", "offset", "import_react", "_a", "import_react", "import_react", "_a", "import_react", "import_react", "import_react", "import_react", "noop", "_a", "_b", "_c", "import_react", "import_react", "index_module_default", "import_react", "import_react", "nodes", "index_module_default", "import_jsx_runtime", "noop", "SearchFunction", "searchList", "active", "index_module_default", "import_jsx_runtime", "noop", "sequenceNodes", "editor", "index_module_default", "HelpFunction", "SearchFunction", "import_react", "import_react", "import_react", "index_module_default", "import_jsx_runtime", "index_module_default", "focusing", "import_react", "import_jsx_runtime", "_a", "_b"]
}
