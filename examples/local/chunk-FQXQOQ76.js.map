{
  "version": 3,
  "sources": ["../../packages/sheets-find-replace/src/controllers/config.schema.ts", "../../packages/sheets-find-replace/src/commands/commands/sheet-replace.command.ts", "../../packages/sheets-find-replace/src/views/shapes/find-replace-highlight.shape.ts", "../../packages/sheets-find-replace/src/controllers/utils.ts", "../../packages/sheets-find-replace/src/controllers/sheet-find-replace.controller.ts", "../../packages/sheets-find-replace/src/plugin.ts", "../../packages/sheets-sort-ui/src/controllers/config.schema.ts", "../../packages/sheets-sort-ui/src/views/ExtendConfirm.tsx", "/Users/zhongjiafeng/Desktop/5000_Project/github/univer/packages/sheets-sort-ui/src/views/index.module.less", "../../packages/sheets-sort-ui/src/services/sheets-sort-ui.service.tsx", "../../packages/sheets-sort-ui/src/commands/commands/sheets-sort.command.ts", "../../packages/sheets-sort-ui/src/views/CustomSortPanel.tsx", "../../packages/sheets-sort-ui/src/views/EmbedSortBtn.tsx", "../../packages/sheets-sort-ui/src/controllers/sheets-sort.menu.ts", "../../packages/sheets-sort-ui/src/controllers/menu.schema.ts", "../../packages/sheets-sort-ui/src/controllers/sheets-sort-ui.controller.ts", "../../packages/sheets-sort-ui/src/plugin.ts"],
  "sourcesContent": ["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const SHEETS_FIND_REPLACE_PLUGIN_CONFIG_KEY = 'sheets-find-replace.config';\n\nexport const configSymbol = Symbol(SHEETS_FIND_REPLACE_PLUGIN_CONFIG_KEY);\n\nexport interface IUniverSheetsFindReplaceConfig {\n}\n\nexport const defaultPluginConfig: IUniverSheetsFindReplaceConfig = {};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommandType, ICommandService, IUndoRedoService } from '@univerjs/core';\nimport type { IAccessor, ICellData, ICommand, IObjectArrayPrimitiveType } from '@univerjs/core';\nimport type { IReplaceAllResult } from '@univerjs/find-replace';\nimport { type ISetRangeValuesCommandParams, SetRangeValuesCommand } from '@univerjs/sheets';\n\nexport interface ISheetReplaceCommandParams {\n    unitId: string;\n    replacements: ISheetReplacement[];\n}\n\nexport interface ISheetReplacement {\n    count: number;\n    subUnitId: string;\n    value: IObjectArrayPrimitiveType<ICellData>;\n}\n\n/**\n * This command is used for the SheetFindReplaceController to deal with replacing, including undo redo.\n *\n */\nexport const SheetReplaceCommand: ICommand<ISheetReplaceCommandParams, IReplaceAllResult> = {\n    id: 'sheet.command.replace',\n    type: CommandType.COMMAND,\n    handler: async (accessor: IAccessor, params: ISheetReplaceCommandParams) => {\n        const undoRedoService = accessor.get(IUndoRedoService);\n        const commandService = accessor.get(ICommandService);\n\n        const { unitId, replacements } = params;\n\n        // NOTE: Note that if we are going to support \"Replace All\" in different units, this need to be changed.\n        const disposeBatchingHandler = undoRedoService.__tempBatchingUndoRedo(unitId);\n        const results = await Promise.all(replacements.map((replacement) => commandService.executeCommand(SetRangeValuesCommand.id, {\n            unitId,\n            subUnitId: replacement.subUnitId,\n            value: replacement.value,\n        } as ISetRangeValuesCommandParams)));\n        disposeBatchingHandler.dispose();\n\n        return getReplaceAllResult(results, replacements);\n    },\n};\n\nfunction getReplaceAllResult(results: boolean[], replacements: ISheetReplacement[]): IReplaceAllResult {\n    let success = 0;\n    let failure = 0;\n\n    results.forEach((r, index) => {\n        const count = replacements[index].count;\n        if (r) {\n            success += count;\n        } else {\n            failure += count;\n        }\n    });\n\n    return { success, failure };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRgbColor, Nullable } from '@univerjs/core';\nimport type { IShapeProps, UniverRenderingContext } from '@univerjs/engine-render';\nimport { Rect, Shape } from '@univerjs/engine-render';\n\nexport interface ISheetFindReplaceHighlightShapeProps extends IShapeProps {\n    inHiddenRange: boolean;\n    color: IRgbColor;\n    activated?: boolean;\n}\n\nexport class SheetFindReplaceHighlightShape extends Shape<ISheetFindReplaceHighlightShapeProps> {\n    protected _activated = false;\n    protected _inHiddenRange = false;\n    protected _color: Nullable<IRgbColor>;\n\n    constructor(key?: string, props?: ISheetFindReplaceHighlightShapeProps) {\n        super(key, props);\n\n        if (props) {\n            this.setShapeProps(props);\n        }\n    }\n\n    setShapeProps(props: Partial<ISheetFindReplaceHighlightShapeProps>): void {\n        this._activated = !!props.activated;\n\n        if (typeof props.inHiddenRange !== 'undefined') {\n            this._inHiddenRange = props.inHiddenRange;\n        }\n\n        if (typeof props.color !== 'undefined') {\n            this._color = props.color;\n        }\n\n        this.transformByState({\n            width: props.width!,\n            height: props.height!,\n        });\n    }\n\n    protected override _draw(ctx: CanvasRenderingContext2D): void {\n        const activated = this._activated;\n        const color = `rgba(${this._color!.r}, ${this._color!.g}, ${this._color!.b}, 0.35)`;\n        const borderColor = `rgb(${this._color!.r}, ${this._color!.g}, ${this._color!.b})`;\n\n        Rect.drawWith(ctx as UniverRenderingContext, {\n            width: this.width,\n            height: this.height,\n            fill: color,\n            stroke: activated ? borderColor : undefined,\n            strokeWidth: activated ? 2 : 0,\n            evented: false,\n        });\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { type IRange, Rectangle, type Worksheet } from '@univerjs/core';\nimport type { ISelectionWithStyle } from '@univerjs/sheets';\n\nexport function isSamePosition(range1: IRange, range2: IRange): boolean {\n    return range1.startRow === range2.startRow && range1.startColumn === range2.startColumn;\n}\n\n/**\n * Tell if `range2` is after (or the same as) `range1` with row direction is at priority.\n * @param range1\n * @param range2\n * @returns\n */\nexport function isBehindPositionWithRowPriority(range1: IRange, range2: IRange): boolean {\n    return (\n        range1.startRow < range2.startRow ||\n        (range1.startRow === range2.startRow && range1.startColumn <= range2.startColumn)\n    );\n}\n\n/**\n * Tell if `range2` is after (or the same as) `range1` with column direction is at priority.\n * @param range1\n * @param range2\n * @returns\n */\nexport function isBehindPositionWithColumnPriority(range1: IRange, range2: IRange): boolean {\n    return (\n        range1.startColumn < range2.startColumn ||\n        (range1.startColumn === range2.startColumn && range1.startRow <= range2.startRow)\n    );\n}\n\n/**\n * Tell if `range2` is before (or the same as) `range1` with column direction is at priority.\n * @param range1\n * @param range2\n * @returns\n */\nexport function isBeforePositionWithRowPriority(range1: IRange, range2: IRange): boolean {\n    return (\n        range1.startRow > range2.startRow ||\n        (range1.startRow === range2.startRow && range1.startColumn >= range2.startColumn)\n    );\n}\n\nexport function isBeforePositionWithColumnPriority(range1: IRange, range2: IRange): boolean {\n    return (\n        range1.startColumn > range2.startColumn ||\n        (range1.startColumn === range2.startColumn && range1.startRow >= range2.startRow)\n    );\n}\n\nexport function isSelectionSingleCell(selection: ISelectionWithStyle, worksheet: Worksheet): boolean {\n    const { range } = selection;\n    const { startRow, startColumn } = range;\n    const hasMergedCell = worksheet.getMergedCell(startRow, startColumn);\n\n    if (hasMergedCell) {\n        return Rectangle.equals(range, hasMergedCell);\n    } else {\n        return range.endRow === range.startRow && range.endColumn === range.startColumn;\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, IDisposable, IObjectMatrixPrimitiveType, IRange, Nullable, Workbook, Worksheet } from '@univerjs/core';\nimport type { IFindComplete, IFindMatch, IFindMoveParams, IFindQuery, IFindReplaceProvider, IReplaceAllResult } from '@univerjs/find-replace';\nimport type { ISelectionWithStyle, ISelectRangeCommandParams, ISetRangeValuesCommandParams, ISetSelectionsOperationParams, ISetWorksheetActivateCommandParams, ISheetCommandSharedParams, WorkbookSelectionModel } from '@univerjs/sheets';\nimport type { IScrollToCellCommandParams } from '@univerjs/sheets-ui';\nimport type { ISheetReplaceCommandParams, ISheetReplacement } from '../commands/commands/sheet-replace.command';\nimport type { ISheetFindReplaceHighlightShapeProps } from '../views/shapes/find-replace-highlight.shape';\nimport { ColorKit, CommandType, Disposable, EDITOR_ACTIVATED, fromCallback, groupBy, ICommandService, IContextService, Inject, Injector, IUniverInstanceService, ObjectMatrix, replaceInDocumentBody, rotate, ThemeService, Tools, UniverInstanceType } from '@univerjs/core';\nimport { IRenderManagerService, RENDER_RAW_FORMULA_KEY } from '@univerjs/engine-render';\nimport { FindBy, FindDirection, FindModel, FindReplaceController, FindScope, IFindReplaceService } from '@univerjs/find-replace';\nimport { SelectRangeCommand, SetRangeValuesCommand, SetSelectionsOperation, SetWorksheetActivateCommand, SetWorksheetActiveOperation, SheetsSelectionsService } from '@univerjs/sheets';\n\nimport { getCoordByCell, getSheetObject, ScrollToCellCommand, SheetSkeletonManagerService } from '@univerjs/sheets-ui';\nimport { debounceTime, filter, merge, skip, Subject, throttleTime } from 'rxjs';\nimport { SheetReplaceCommand } from '../commands/commands/sheet-replace.command';\nimport { SheetFindReplaceHighlightShape } from '../views/shapes/find-replace-highlight.shape';\nimport { isBeforePositionWithColumnPriority, isBeforePositionWithRowPriority, isBehindPositionWithColumnPriority, isBehindPositionWithRowPriority, isSamePosition, isSelectionSingleCell } from './utils';\n\nexport class SheetsFindReplaceController extends Disposable implements IDisposable {\n    private _provider!: SheetsFindReplaceProvider;\n\n    constructor(\n        @Inject(Injector) private readonly _injector: Injector,\n        @Inject(FindReplaceController) private readonly _findReplaceController: FindReplaceController,\n        @IContextService private readonly _contextService: IContextService,\n        @IFindReplaceService private readonly _findReplaceService: IFindReplaceService,\n        @ICommandService private readonly _commandService: ICommandService\n    ) {\n        super();\n\n        this._init();\n        this._initCommands();\n    }\n\n    override dispose(): void {\n        super.dispose();\n\n        this._findReplaceController.closePanel();\n        this._provider.dispose();\n    }\n\n    private _init(): void {\n        const provider = this._injector.createInstance(SheetsFindReplaceProvider);\n        this._provider = provider;\n\n        this.disposeWithMe(this._findReplaceService.registerFindReplaceProvider(provider));\n\n        // The find replace panel should be closed when sheet cell editor is activated, or the formula editor is focused.\n        this.disposeWithMe(this._contextService.subscribeContextValue$(EDITOR_ACTIVATED)\n            .pipe(filter((v) => !!v))\n            .subscribe(() => this._findReplaceController.closePanel()));\n    }\n\n    private _initCommands(): void {\n        [SheetReplaceCommand].forEach((command) => this.disposeWithMe(this._commandService.registerCommand(command)));\n    }\n}\n\nconst SHEETS_FIND_REPLACE_PROVIDER_NAME = 'sheets-find-replace-provider';\nconst FIND_REPLACE_Z_INDEX = 10000;\n\nexport interface ISheetCellMatch extends IFindMatch {\n    isFormula: boolean;\n    provider: typeof SHEETS_FIND_REPLACE_PROVIDER_NAME;\n    range: {\n        subUnitId: string;\n        range: IRange;\n    };\n}\n\n/**\n * This class executes finding in a workbook and subscribe to the content change event so when its results changes\n * FindReplaceService would know that and update searching results. Also this class in responsible for\n * highlighting matched cells.\n */\nexport class SheetFindModel extends FindModel {\n    // We can directly inject the `FindReplaceService` here, and call its methods instead of using the observables.\n    private readonly _matchesUpdate$ = new Subject<ISheetCellMatch[]>();\n    readonly matchesUpdate$ = this._matchesUpdate$.asObservable();\n\n    private readonly _activelyChangingMatch$ = new Subject<ISheetCellMatch>();\n    readonly activelyChangingMatch$ = this._activelyChangingMatch$.asObservable();\n\n    /** Hold matches by the worksheet they are in. Make it easier to track the next (or previous) match when searching in the whole workbook. */\n    private _matchesByWorksheet = new Map<string, ISheetCellMatch[]>();\n    /** Hold all matches in the currently searching scope. */\n    private _matches: ISheetCellMatch[] = [];\n    /** Position of the current focused ISheetCellMatch, starting from 1. */\n    private _matchesPosition = 0;\n\n    private _activeHighlightIndex = -1;\n    private _highlightShapes: SheetFindReplaceHighlightShape[] = [];\n    private _currentHighlightShape: Nullable<SheetFindReplaceHighlightShape> = null;\n\n    /** This properties holds the query params during this searching session. */\n    private _query: Nullable<IFindQuery> = null;\n\n    private get _matchesCount(): number { return this._matches.length; }\n    get unitId(): string { return this._workbook.getUnitId(); }\n    get matchesCount(): number { return this._matchesCount; }\n    get matchesPosition(): number { return this._matchesPosition; }\n    get currentMatch(): Nullable<ISheetCellMatch> { return this._matchesPosition > 0 ? this._matches[this._matchesPosition - 1] : null; }\n\n    private _workbookSelections: WorkbookSelectionModel;\n\n    constructor(\n        private readonly _workbook: Workbook,\n        private readonly _sheetSkeletonManagerService: SheetSkeletonManagerService,\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @IRenderManagerService private readonly _renderManagerService: IRenderManagerService,\n        @ICommandService private readonly _commandService: ICommandService,\n        @IContextService private readonly _contextService: IContextService,\n        @Inject(ThemeService) private readonly _themeService: ThemeService,\n        @Inject(SheetsSelectionsService) _selectionManagerService: SheetsSelectionsService\n    ) {\n        super();\n\n        this._workbookSelections = _selectionManagerService.getWorkbookSelections(this.unitId);\n    }\n\n    override dispose(): void {\n        super.dispose();\n\n        this._disposeHighlights();\n        this._toggleDisplayRawFormula(false);\n    }\n\n    getMatches(): IFindMatch[] {\n        return this._matches;\n    }\n\n    start(query: IFindQuery): void {\n        this._query = query;\n\n        if (query.findBy === FindBy.FORMULA) {\n            this._toggleDisplayRawFormula(true);\n        } else {\n            this._toggleDisplayRawFormula(false);\n        }\n\n        switch (query.findScope) {\n            case FindScope.UNIT:\n                this.findInWorkbook(query);\n                break;\n            case FindScope.SUBUNIT:\n            default:\n                this.findInActiveWorksheet(query);\n                break;\n        }\n    }\n\n    override focusSelection(): void {\n        const currentMatch = this.currentMatch;\n        if (!currentMatch) return;\n\n        this._commandService.executeCommand(SelectRangeCommand.id, {\n            unitId: currentMatch.unitId,\n            subUnit: currentMatch.range.subUnitId,\n            range: currentMatch.range.range,\n\n        } as ISelectRangeCommandParams);\n    }\n\n    private _toggleDisplayRawFormula(force: boolean): void {\n        this._contextService.setContextValue(RENDER_RAW_FORMULA_KEY, force);\n    }\n\n    /**\n     * Find all matches in the current workbook no matter which worksheet is activated.\n     * @param query the query object\n     * @returns the query complete event\n     */\n    findInWorkbook(query: IFindQuery): IFindComplete {\n        const unitId = this._workbook.getUnitId();\n\n        let complete: IFindComplete;\n        let firstSearch = true;\n\n        const findInWorkbook = () => {\n            const allCompletes = this._workbook.getSheets()\n                .filter((worksheet) => !worksheet.isSheetHidden()) // We do not search in hidden Worksheets.\n                .map((worksheet) => {\n                    const complete = this._findInWorksheet(worksheet, query, unitId);\n                    const sheetId = worksheet.getSheetId();\n\n                    const { results } = complete;\n                    if (results.length) {\n                        this._matchesByWorksheet.set(sheetId, complete.results);\n                    } else {\n                        this._matchesByWorksheet.delete(sheetId);\n                    }\n\n                    return complete;\n                });\n\n            this._matches = allCompletes.map((c) => c.results).flat();\n            this._updateFindHighlight();\n\n            if (firstSearch) {\n                complete = { results: this._matches };\n                firstSearch = false;\n            } else {\n                this._matchesUpdate$.next(this._matches);\n            }\n        };\n\n        this.disposeWithMe(this._sheetSkeletonManagerService.currentSkeleton$.subscribe(() => {\n            this._updateFindHighlight();\n            this._updateCurrentHighlightShape(this._activeHighlightIndex);\n        }));\n\n        this.disposeWithMe(\n            fromCallback(this._commandService.onCommandExecuted.bind(this._commandService))\n                .pipe(filter(([command, options]) => command.id === SetWorksheetActiveOperation.id && !options?.fromFindReplace))\n                .subscribe(() => {\n                    const activeSheet = this._workbook.getActiveSheet();\n                    if (!activeSheet) {\n                        return;\n                    }\n\n                    const activeSheetId = activeSheet.getSheetId();\n                    if (!this._matchesByWorksheet.has(activeSheetId)) {\n                        return;\n                    }\n\n                    this._findNextMatchOnActiveSheetChange(activeSheet);\n                })\n        );\n\n        // When the sheet model changes, we should re-search.\n        this.disposeWithMe(\n            fromCallback(this._commandService.onCommandExecuted.bind(this._commandService))\n                .pipe(\n                    filter(([command]) => command.type === CommandType.MUTATION\n                        && (command.params as ISheetCommandSharedParams).unitId === this._workbook.getUnitId()\n                    ),\n                    throttleTime(600, undefined, { leading: false, trailing: true })\n                )\n                .subscribe(() => findInWorkbook())\n        );\n\n        findInWorkbook();\n        return complete!;\n    }\n\n    /**\n     * This method is used in `findInWorkbook`. When the active sheet changes, this method helps to find the next match\n     * in the new worksheet.\n     */\n    private _findNextMatchOnActiveSheetChange(activeSheet: Worksheet): void {\n        let match: ISheetCellMatch;\n        let index: number;\n        let globalIndex = 0;\n\n        const matchesByWorksheet = this._matchesByWorksheet.get(activeSheet.getSheetId())!;\n        const selections = this._workbookSelections.getCurrentSelections();\n        if (!selections?.length) {\n            match = matchesByWorksheet[0];\n            index = 0;\n            globalIndex = this._matches.findIndex((m) => m === match);\n        } else {\n            [match, globalIndex] = this._findNextMatchByRange(matchesByWorksheet, selections[0].range);\n            index = matchesByWorksheet.findIndex((m) => m === match);\n        }\n\n        this._matchesPosition = globalIndex + 1;\n        this._activelyChangingMatch$.next(match);\n\n        this._activeHighlightIndex = index;\n        this._updateFindHighlight();\n        this._updateCurrentHighlightShape(index);\n    }\n\n    /**\n     * Find all matches (only) in the currently activated worksheet.\n     * @param query the query object\n     * @returns the query complete event\n     */\n    findInActiveWorksheet(query: IFindQuery): IFindComplete {\n        const unitId = this._workbook.getUnitId();\n\n        const checkShouldFindInSelections = (): boolean => {\n            const currentWorksheet = this._workbook.getActiveSheet();\n            if (!currentWorksheet) return false;\n            const currentSelections = this._workbookSelections.getCurrentSelections();\n            const shouldFindInSelections = currentSelections?.some((selection) => !isSelectionSingleCell(selection, currentWorksheet)) ?? false;\n            return shouldFindInSelections;\n        };\n\n        let complete: IFindComplete;\n        let firstSearch = true;\n        let findBySelections = false;\n\n        const performFindInWorksheet = (): IFindComplete => {\n            const currentWorksheet = this._workbook.getActiveSheet();\n            if (!currentWorksheet) return { results: [] };\n\n            const lastMatch = this.currentMatch; // temporarily store the last match to restore the position after the model changes\n\n            findBySelections = checkShouldFindInSelections();\n            const currentSelections = this._workbookSelections.getCurrentSelections();\n            const newComplete = findBySelections\n                ? this._findInSelections(currentWorksheet, currentSelections as ISelectionWithStyle[], query, unitId)\n                : this._findInWorksheet(currentWorksheet, query, unitId);\n\n            this._matches = newComplete.results;\n            this._matchesPosition = this._tryRestoreLastMatchesPosition(lastMatch, this._matches);\n\n            if (firstSearch) {\n                complete = newComplete;\n                firstSearch = false;\n            } else {\n                this._matchesUpdate$.next(this._matches);\n            }\n\n            this._updateFindHighlight();\n            return newComplete;\n        };\n\n        // When the skeleton changes, we should re-render the highlights.\n        this.disposeWithMe(this._sheetSkeletonManagerService.currentSkeleton$.subscribe(() => this._updateFindHighlight()));\n\n        this.disposeWithMe(\n            merge(\n                fromCallback(this._commandService.onCommandExecuted.bind(this._commandService)).pipe(\n                    filter(([command]) => {\n                        // If there mutations happens on this unit, we should re-search.\n                        if (command.type === CommandType.MUTATION && (command.params as ISheetCommandSharedParams).unitId === this._workbook.getUnitId()) {\n                            return true;\n                        };\n\n                        // If selections changes, we should re-search.\n                        if (command.id === SetSelectionsOperation.id && (command.params as ISetSelectionsOperationParams).unitId === unitId) {\n                            const shouldFindBySelections = checkShouldFindInSelections();\n                            if (shouldFindBySelections === false && findBySelections === false) {\n                                return false;\n                            }\n\n                            findBySelections = shouldFindBySelections;\n                            return true;\n                        }\n\n                        return false;\n                    })\n                ),\n                // activeSheet$ is a BehaviorSubject, so we need to skip the first\n                this._workbook.activeSheet$.pipe(skip(1))\n            ).pipe(debounceTime(200)).subscribe(() => performFindInWorksheet())\n        );\n\n        performFindInWorksheet();\n\n        return complete!;\n    }\n\n    private _findInRange(\n        worksheet: Worksheet,\n        query: IFindQuery,\n        range: IRange,\n        unitId: string,\n        dedupeFn?: (row: number, col: number) => boolean\n    ): IFindComplete<ISheetCellMatch> {\n        const results: ISheetCellMatch[] = [];\n        const subUnitId = worksheet.getSheetId();\n\n        const iter = (query.findDirection === FindDirection.COLUMN\n            ? worksheet.iterateByColumn\n            : worksheet.iterateByRow\n        ).bind(worksheet)(range);\n\n        for (const value of iter) {\n            const { row, col, colSpan, rowSpan, value: cellData } = value;\n\n            if (dedupeFn?.(row, col) || !cellData) {\n                continue;\n            };\n\n            if (worksheet.getRowFiltered(row)) {\n                continue;\n            }\n\n            const { hit, replaceable, isFormula } = hitCell(worksheet, row, col, query, cellData);\n            if (hit) {\n                const result: ISheetCellMatch = {\n                    provider: SHEETS_FIND_REPLACE_PROVIDER_NAME,\n                    unitId,\n                    replaceable,\n                    isFormula,\n                    range: {\n                        subUnitId,\n                        range: {\n                            startRow: row,\n                            startColumn: col,\n                            endColumn: col + (colSpan ?? 1) - 1,\n                            endRow: row + (rowSpan ?? 1) - 1,\n                        },\n                    },\n                };\n\n                results.push(result);\n            }\n        }\n\n        return { results };\n    }\n\n    private _findInSelections(\n        worksheet: Worksheet,\n        selections: ISelectionWithStyle[],\n        query: IFindQuery,\n        unitId: string\n    ): IFindComplete<ISheetCellMatch> {\n        const { findDirection } = query;\n\n        const sortFn = findDirection === FindDirection.ROW ? isBehindPositionWithRowPriority : isBehindPositionWithColumnPriority;\n        const dedupeSet = new Set<string>();\n        const finds = selections\n            .map((selection) => this._findInRange(worksheet, query, selection.range, unitId, (row, col) => {\n                const key = `${row}-${col}`;\n                if (dedupeSet.has(key)) return true;\n                dedupeSet.add(key);\n                return false;\n            }).results)\n            .flat()\n            .sort((a, b) => sortFn(a.range.range, b.range.range) ? -1 : 1);\n\n        return { results: finds };\n        // TODO@wzhudev: we need to dedupe\n    }\n\n    /** Find matches in a given worksheet. */\n    private _findInWorksheet(worksheet: Worksheet, query: IFindQuery, unitId: string): IFindComplete<ISheetCellMatch> {\n        const rowCount = worksheet.getRowCount();\n        const colCount = worksheet.getColumnCount();\n        const range: IRange = { startRow: 0, startColumn: 0, endRow: rowCount - 1, endColumn: colCount - 1 };\n\n        return this._findInRange(worksheet, query, range, unitId);\n    }\n\n    private _disposeHighlights(): void {\n        this._highlightShapes.forEach((shape) => {\n            shape.getScene()?.makeDirty();\n            shape.dispose();\n        });\n\n        this._highlightShapes = [];\n\n        this._currentHighlightShape?.dispose();\n        this._currentHighlightShape = null;\n    }\n\n    private _updateFindHighlight(): void {\n        this._disposeHighlights();\n\n        const skeleton = this._sheetSkeletonManagerService.getCurrent()?.skeleton;\n        if (!skeleton) {\n            return;\n        }\n\n        const unitId = this._workbook.getUnitId();\n        const currentRender = this._renderManagerService.getRenderById(unitId);\n        if (currentRender == null) {\n            return;\n        }\n\n        const { scene } = currentRender;\n        const matches = this._matches;\n\n        const searchBackgroundColor = this._themeService.getCurrentTheme().gold400;\n        const color = new ColorKit(searchBackgroundColor).toRgb();\n        const worksheet = this._workbook.getActiveSheet();\n        if (!worksheet) {\n            return;\n        }\n\n        const activeSheetId = worksheet.getSheetId();\n        const highlightShapes = matches.filter((match) => match.range.subUnitId === activeSheetId).map((find, index) => {\n            const { startColumn, startRow, endColumn, endRow } = find.range.range;\n            const startPosition = getCoordByCell(startRow, startColumn, scene, skeleton);\n            const endPosition = getCoordByCell(endRow, endColumn, scene, skeleton);\n            const { startX, startY } = startPosition;\n            const { endX, endY } = endPosition;\n\n            const rowHidden = !worksheet.getRowRawVisible(startRow);\n            const columnHidden = !worksheet.getColVisible(startColumn);\n\n            const inHiddenRange = rowHidden || columnHidden;\n            const width = columnHidden ? 2 : endX - startX;\n            const height = rowHidden ? 2 : endY - startY;\n\n            const props: ISheetFindReplaceHighlightShapeProps = {\n                left: startX,\n                top: startY,\n                color,\n                width,\n                height,\n                evented: false,\n                inHiddenRange,\n                zIndex: FIND_REPLACE_Z_INDEX,\n            };\n\n            return new SheetFindReplaceHighlightShape(`find-highlight-${index}`, props);\n        });\n\n        scene.addObjects(highlightShapes);\n        this._highlightShapes = highlightShapes;\n\n        scene.makeDirty();\n    }\n\n    private _updateCurrentHighlightShape(matchIndex?: number): void {\n        // de-highlight the current highlighted shape\n        this._currentHighlightShape?.setShapeProps({ activated: false });\n        this._currentHighlightShape = null;\n\n        if (matchIndex !== undefined) {\n            const shape = this._highlightShapes[matchIndex];\n            if (!shape) {\n                return;\n            }\n\n            this._currentHighlightShape = shape;\n            shape.setShapeProps({ activated: true });\n        }\n    }\n\n    private _getSheetObject() {\n        return getSheetObject(this._univerInstanceService, this._renderManagerService);\n    }\n\n    private _focusMatch(match: ISheetCellMatch): void {\n        const subUnitId = match.range.subUnitId;\n        if (subUnitId !== this._workbook.getActiveSheet()?.getSheetId()) {\n            this._commandService.executeCommand(SetWorksheetActivateCommand.id, { unitId: this._workbook.getUnitId(), subUnitId } as ISetWorksheetActivateCommandParams, { fromFindReplace: true });\n        }\n\n        this._commandService.executeCommand(\n            ScrollToCellCommand.id,\n            { range: match.range.range } as IScrollToCellCommandParams,\n            { fromFindReplace: true }\n        );\n    }\n\n    private _tryRestoreLastMatchesPosition(lastMatch: Nullable<ISheetCellMatch>, newMatches: ISheetCellMatch[]): number {\n        if (!lastMatch) return 0;\n\n        const { subUnitId: lastSubUnitId } = lastMatch.range;\n        const { startColumn: lastStartColumn, startRow: lastStartRow } = lastMatch.range.range;\n        const index = newMatches.findIndex((match) => {\n            if (lastSubUnitId !== match.range.subUnitId) {\n                return false;\n            }\n\n            const { startColumn, startRow } = match.range.range;\n            return startColumn === lastStartColumn && startRow === lastStartRow;\n        });\n\n        return index > -1 ? index + 1 : 0;\n    }\n\n    override moveToNextMatch(params?: IFindMoveParams): ISheetCellMatch | null {\n        if (!this._matches.length) {\n            return null;\n        }\n\n        const loop = params?.loop ?? false;\n        const stayIfOnMatch = params?.stayIfOnMatch ?? false;\n        const noFocus = params?.noFocus ?? false;\n        const ignoreSelection = params?.ignoreSelection ?? false;\n\n        const matchToMove = this._findNextMatch(loop, stayIfOnMatch, ignoreSelection);\n        if (matchToMove) {\n            const [match, index] = matchToMove;\n            this._matchesPosition = index + 1;\n\n            if (this._query!.findScope === FindScope.UNIT) {\n                this._activeHighlightIndex = this._matchesByWorksheet.get(match.range.subUnitId)!.findIndex((m) => m === match);\n            } else {\n                this._activeHighlightIndex = index;\n            }\n\n            if (!noFocus) this._focusMatch(match);\n            if (this._workbook.getActiveSheet()?.getSheetId() === match.range.subUnitId) {\n                this._updateCurrentHighlightShape(this._activeHighlightIndex);\n            }\n\n            return match;\n        }\n\n        this._matchesPosition = 0;\n        this._updateCurrentHighlightShape();\n        return null;\n    }\n\n    override moveToPreviousMatch(params?: IFindMoveParams): ISheetCellMatch | null {\n        if (!this._matches.length) {\n            return null;\n        }\n\n        const loop = params?.loop ?? false;\n        const stayIfOnMatch = params?.stayIfOnMatch ?? false;\n        const noFocus = params?.noFocus ?? false;\n        const ignoreSelection = params?.ignoreSelection ?? false;\n\n        const matchToMove = this._findPreviousMatch(loop, stayIfOnMatch, ignoreSelection);\n        if (matchToMove) {\n            const [match, index] = matchToMove;\n            this._matchesPosition = index + 1;\n\n            if (this._query!.findScope === FindScope.UNIT) {\n                this._activeHighlightIndex = this._matchesByWorksheet.get(match.range.subUnitId)!.findIndex((m) => m === match);\n            } else {\n                this._activeHighlightIndex = index;\n            }\n\n            if (!noFocus) this._focusMatch(match);\n            if (this._workbook.getActiveSheet()?.getSheetId() === match.range.subUnitId) {\n                this._updateCurrentHighlightShape(this._activeHighlightIndex);\n            }\n\n            return match;\n        }\n\n        this._matchesPosition = 0;\n        this._updateCurrentHighlightShape();\n        return null;\n    }\n\n    private _findPreviousMatch(loop = false, stayIfOnMatch = false, ignoreSelection = false): [ISheetCellMatch, number] | null {\n        // Technically speaking, there are eight different situations!\n        // Case 1: if there is a current match and the process is very easy\n        if (this.currentMatch) {\n            const currentMatchIndex = this._matches.findIndex((match) => match === this.currentMatch);\n            if (stayIfOnMatch) {\n                return [this.currentMatch, currentMatchIndex];\n            }\n\n            const nextMatchIndex = currentMatchIndex - 1;\n            if (!loop && nextMatchIndex < 0) {\n                return null;\n            }\n\n            const length = this._matches.length;\n            const modded = (nextMatchIndex + length) % length;\n            return [this._matches[modded], modded];\n        }\n\n        // Case 2: ignore current selection or there is no selection\n        const lastSelection = this._workbookSelections.getCurrentLastSelection();\n        if (ignoreSelection || !lastSelection) {\n            const lastIndex = this._matches.length - 1;\n            return [this._matches[lastIndex], lastIndex];\n        }\n\n        // Case 3: if there is no current match, we should find the next match that is closest to the user's current selection.\n        // Still need to handle `stayInOnMatch` here.\n        if (this._query!.findScope !== FindScope.UNIT) {\n            return this._findPreviousMatchByRange(this._matches, lastSelection.range);\n        }\n\n        const currentSheetId = this._workbook.getActiveSheet()?.getSheetId();\n        if (!currentSheetId) {\n            return null;\n        }\n\n        const worksheetThatHasMatch = this._findPreviousWorksheetThatHasAMatch(currentSheetId, loop);\n        if (!worksheetThatHasMatch) {\n            return null;\n        }\n\n        return this._findPreviousMatchByRange(this._matchesByWorksheet.get(worksheetThatHasMatch)!, lastSelection.range);\n    }\n\n    private _findNextMatch(loop = false, stayIfOnMatch = false, ignoreSelection = false): [ISheetCellMatch, number] | null {\n        // Technically speaking, there are eight different situations!\n        // Case 1: if there is a current match and the process is very easy\n        if (this.currentMatch) {\n            const currentMatchIndex = this._matches.findIndex((match) => match === this.currentMatch);\n            if (stayIfOnMatch) {\n                return [this.currentMatch, currentMatchIndex];\n            }\n\n            const nextMatchIndex = currentMatchIndex + 1;\n            const length = this._matches.length;\n            if (!loop && nextMatchIndex >= length) {\n                return null;\n            }\n\n            const modded = nextMatchIndex % length; // we don't need to add length here\n            return [this._matches[modded], modded];\n        }\n\n        // Case 2:\n\n        // Case 3: if there is no current match, we should find the next match that is closest to the user's current selection.\n        // Still need to handle `stayInOnMatch` here.\n        const last = this._workbookSelections.getCurrentLastSelection();\n        if (ignoreSelection || !last) {\n            return [this._matches[0], 0];\n        }\n\n        if (this._query!.findScope !== FindScope.UNIT) {\n            return this._findNextMatchByRange(this._matches, last.range, stayIfOnMatch);\n        }\n\n        const currentSheetId = this._workbook.getActiveSheet()?.getSheetId();\n        if (!currentSheetId) {\n            return null;\n        }\n\n        const worksheetThatHasMatch = this._findNextWorksheetThatHasAMatch(currentSheetId, loop);\n        if (!worksheetThatHasMatch) {\n            return null;\n        }\n\n        return this._findNextMatchByRange(this._matchesByWorksheet.get(worksheetThatHasMatch)!, last.range);\n    }\n\n    private _findPreviousWorksheetThatHasAMatch(currentWorksheet: string, loop = false): string | null {\n        const rawWorksheetsInOrder = this._workbook.getSheetOrders();\n        const currentSheetIndex = rawWorksheetsInOrder.findIndex((sheet) => sheet === currentWorksheet);\n        const worksheetsToSearch = loop\n            ? rotate(rawWorksheetsInOrder, currentSheetIndex + 1)\n            : rawWorksheetsInOrder.slice(0, currentSheetIndex + 1);\n        const first = worksheetsToSearch.findLast((worksheet) => this._matchesByWorksheet.has(worksheet));\n        return first ?? null;\n    }\n\n    private _findNextWorksheetThatHasAMatch(currentWorksheet: string, loop = false): string | null {\n        const rawWorksheetsInOrder = this._workbook.getSheetOrders();\n        const currentSheetIndex = rawWorksheetsInOrder.findIndex((sheet) => sheet === currentWorksheet);\n        const worksheetsToSearch = loop\n            ? rotate(rawWorksheetsInOrder, currentSheetIndex)\n            : rawWorksheetsInOrder.slice(currentSheetIndex);\n        const first = worksheetsToSearch.find((worksheet) => this._matchesByWorksheet.has(worksheet));\n        return first ?? null;\n    }\n\n    private _findNextMatchByRange(matches: ISheetCellMatch[], range: IRange, stayIfOnMatch = false): [ISheetCellMatch, number] {\n        const findByRow = this._query!.findDirection === FindDirection.ROW;\n        let index = matches.findIndex((match) => {\n            const matchRange = match.range.range;\n            const isBehind = findByRow ? isBehindPositionWithRowPriority(range, matchRange) : isBehindPositionWithColumnPriority(range, matchRange);\n            if (!isBehind) {\n                return false;\n            }\n\n            const isSame = isSamePosition(range, matchRange);\n            return stayIfOnMatch ? isSame : !isSame;\n        });\n\n        if (index === -1) {\n            index = matches.length - 1;\n        }\n\n        const match = matches[index];\n        return [match, this._matches.findIndex((m) => m === match)];\n    }\n\n    private _findPreviousMatchByRange(matches: ISheetCellMatch[], range: IRange, stayIfOnMatch = false): [ISheetCellMatch, number] {\n        const findByRow = this._query!.findDirection === FindDirection.ROW;\n        let index = this._matches.findLastIndex((match) => {\n            const matchRange = match.range.range;\n            const isBefore = findByRow ? isBeforePositionWithRowPriority(range, matchRange) : isBeforePositionWithColumnPriority(range, matchRange);\n            if (!isBefore) {\n                return false;\n            }\n\n            const isSame = isSamePosition(range, matchRange);\n            return stayIfOnMatch ? isSame : !isSame;\n        });\n\n        if (index === -1) {\n            index = 0;\n        }\n\n        const match = matches[index];\n        return [match, this._matches.findIndex((m) => m === match)];\n    }\n\n    async replace(replaceString: string): Promise<boolean> {\n        if (this._matchesCount === 0 || !this.currentMatch || !this._query || !this.currentMatch.replaceable) {\n            return false;\n        }\n\n        const range = this.currentMatch.range;\n        const targetWorksheet = this._workbook.getSheetBySheetId(this.currentMatch.range.subUnitId)!;\n        const newContent = this._getReplacedCellData(\n            this.currentMatch,\n            targetWorksheet,\n            this._query.findBy === FindBy.FORMULA,\n            this._query.findString,\n            replaceString,\n            this._query.caseSensitive ? 'g' : 'ig'\n        );\n\n        // for single cell replace we just use SetRangeValuesCommand directly for simplicity\n        const params: ISetRangeValuesCommandParams = {\n            unitId: this.currentMatch.unitId,\n            subUnitId: range.subUnitId,\n            value: {\n                [range.range.startRow]: {\n                    [range.range.startColumn]: newContent,\n                },\n            } as IObjectMatrixPrimitiveType<ICellData>,\n        };\n\n        return this._commandService.executeCommand(SetRangeValuesCommand.id, params);\n    }\n\n    async replaceAll(replaceString: string): Promise<IReplaceAllResult> {\n        if (this._matchesCount === 0 || !this._query) {\n            return { success: 0, failure: 0 };\n        }\n\n        const unitId = this._workbook.getUnitId();\n\n        const { findString, caseSensitive, findBy } = this._query!;\n        const shouldReplaceFormula = findBy === FindBy.FORMULA;\n        const replaceFlag = caseSensitive ? 'g' : 'ig';\n\n        const replacements: ISheetReplacement[] = [];\n        const matchesByWorksheet = groupBy(this._matches.filter((m) => m.replaceable), (match) => match.range.subUnitId);\n        matchesByWorksheet.forEach((matches, subUnitId) => {\n            const matrix = new ObjectMatrix<ICellData>();\n            const worksheet = this._workbook.getSheetBySheetId(subUnitId)!;\n\n            matches.forEach((match) => {\n                const { startColumn, startRow } = match.range.range;\n                const newCellData = this._getReplacedCellData(match, worksheet, shouldReplaceFormula, findString, replaceString!, replaceFlag);\n                if (newCellData) {\n                    matrix.setValue(startRow, startColumn, newCellData);\n                }\n            });\n\n            replacements.push({\n                count: matches.length,\n                subUnitId,\n                value: matrix.getMatrix(),\n            });\n        });\n\n        if (!replacements) {\n            return { success: 0, failure: 0 };\n        }\n\n        return this._commandService.executeCommand(SheetReplaceCommand.id, {\n            unitId,\n            replacements,\n        } as ISheetReplaceCommandParams);\n    }\n\n    private _getReplacedCellData(\n        match: ISheetCellMatch,\n        worksheet: Worksheet,\n        shouldReplaceFormula: boolean,\n        findString: string,\n        replaceString: string,\n        replaceFlag: string\n    ): Nullable<ICellData> {\n        const range = match.range.range;\n        const { startRow, startColumn } = range;\n\n        const currentContent = worksheet.getCellRaw(startRow, startColumn)!;\n        // TODO: should not get it again, just hook to match item\n\n        // replace formula\n        if (match.isFormula) {\n            if (!shouldReplaceFormula) {\n                return null;\n            }\n\n            const newContent = currentContent!.f!.replace(new RegExp(escapeRegExp(findString), replaceFlag), replaceString);\n            return { f: newContent, v: null };\n        }\n\n        // replace rich format text\n        const isRichText = !!currentContent.p?.body;\n        if (isRichText) {\n            const clonedRichText = Tools.deepClone(currentContent.p!);\n            replaceInDocumentBody(clonedRichText.body!, findString, replaceString, this._query!.caseSensitive);\n            return { p: clonedRichText };\n        }\n\n        // replace plain text string\n        const newContent = currentContent.v!.toString().replace(new RegExp(escapeRegExp(findString), replaceFlag), replaceString!);\n        return { v: newContent };\n    }\n}\n\nfunction escapeRegExp(text: string) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * This module is responsible for searching and replacing in the sheets.\n * It also adds the search results to the search view by highlighting them.\n */\nclass SheetsFindReplaceProvider extends Disposable implements IFindReplaceProvider {\n    /**\n     * Hold all find results in this kind of univer business instances (Workbooks).\n     */\n    private readonly _findModelsByUnitId = new Map<string, SheetFindModel>();\n\n    constructor(\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @IRenderManagerService private readonly _renderManagerService: IRenderManagerService,\n        @Inject(Injector) private readonly _injector: Injector\n    ) {\n        super();\n    }\n\n    async find(query: IFindQuery): Promise<SheetFindModel[]> {\n        this._terminate();\n\n        const allWorkbooks = this._univerInstanceService.getAllUnitsForType<Workbook>(UniverInstanceType.UNIVER_SHEET);\n        const parsedQuery = this._preprocessQuery(query);\n        const findModels = allWorkbooks.map((workbook) => {\n            const skeletonManagerService = this._renderManagerService.getRenderById(workbook.getUnitId())!.with(SheetSkeletonManagerService);\n            const sheetFind = this._injector.createInstance(SheetFindModel, workbook, skeletonManagerService);\n            this._findModelsByUnitId.set(workbook.getUnitId(), sheetFind);\n            sheetFind.start(parsedQuery);\n            return sheetFind;\n        });\n\n        return findModels;\n    }\n\n    terminate(): void {\n        this._terminate();\n    }\n\n    private _terminate(): void {\n        this._findModelsByUnitId.forEach((model) => model.dispose());\n        this._findModelsByUnitId.clear();\n    }\n\n    /**\n     * Parsed the query object before do actual searching in favor of performance.\n     * @param query the raw query object\n     * @returns the parsed query object\n     */\n    private _preprocessQuery(query: Readonly<IFindQuery>): IFindQuery {\n        let findString = query.caseSensitive\n            ? query.findString\n            : query.findString.toLowerCase();\n\n        findString = findString.trim();\n\n        return {\n            ...query,\n            findString,\n        };\n    }\n}\n\n// Use this object to pass results in avoid of GC.\ninterface IValuePassingObject {\n    hit: boolean;\n    replaceable: boolean;\n    isFormula: boolean;\n    rawData: Nullable<ICellData>;\n}\nconst VALUE_PASSING_OBJECT: IValuePassingObject = { hit: false, replaceable: false, isFormula: false, rawData: null };\n\n/**\n * This function determines if a cell's content matches what is searched for.\n * @param worksheet worksheet the Worksheet to search\n * @param row the row index\n * @param col the column index\n * @param query the parsed query object\n * @returns if the cell is hit, replaceable and is a formula\n */\nexport function hitCell(worksheet: Worksheet, row: number, col: number, query: IFindQuery, cellData: ICellData): IValuePassingObject {\n    const { findBy } = query;\n    const findByFormula = findBy === FindBy.FORMULA;\n\n    const rawData = worksheet.getCellRaw(row, col);\n    VALUE_PASSING_OBJECT.rawData = rawData;\n\n    // Deal with formula searching first.\n    const hasFormula = !!rawData?.f;\n    if (hasFormula) {\n        VALUE_PASSING_OBJECT.isFormula = true;\n\n        // For formula, it is only replaceable when it matches the raw formula.\n        if (findByFormula) {\n            const formulaMatch = matchCellData({ v: rawData.f! }, query);\n            if (formulaMatch) {\n                VALUE_PASSING_OBJECT.hit = true;\n                VALUE_PASSING_OBJECT.replaceable = true;\n                return VALUE_PASSING_OBJECT;\n            }\n\n            VALUE_PASSING_OBJECT.hit = false;\n            VALUE_PASSING_OBJECT.replaceable = false;\n            return VALUE_PASSING_OBJECT;\n        }\n\n        // Otherwise, no matter it matches the result value, it should be unreplaceable.\n        VALUE_PASSING_OBJECT.replaceable = false;\n        if (matchCellData(cellData, query)) {\n            VALUE_PASSING_OBJECT.hit = true;\n        } else {\n            VALUE_PASSING_OBJECT.hit = false;\n        }\n\n        return VALUE_PASSING_OBJECT;\n    }\n\n    // If the cell does not match, we should not check the raw data.\n    VALUE_PASSING_OBJECT.isFormula = false;\n    if (!matchCellData(cellData, query)) {\n        VALUE_PASSING_OBJECT.hit = false;\n        VALUE_PASSING_OBJECT.replaceable = false;\n    } else if (!rawData) {\n        VALUE_PASSING_OBJECT.hit = true;\n        VALUE_PASSING_OBJECT.replaceable = false;\n    } else {\n        VALUE_PASSING_OBJECT.hit = true;\n        VALUE_PASSING_OBJECT.replaceable = true;\n    }\n\n    return VALUE_PASSING_OBJECT;\n}\n\nfunction matchCellData(cellData: ICellData, query: IFindQuery): boolean {\n    let value = extractPureValue(cellData);\n    if (!value) {\n        return false;\n    }\n\n    if (query.matchesTheWholeCell) {\n        // Only need to trim the next when we want to match the whole cell.\n        value = trimLeadingTrailingWhitespace(value);\n        return query.caseSensitive\n            ? value === query.findString\n            : value.toLowerCase() === query.findString;\n    }\n    return query.caseSensitive\n        ? value.indexOf(query.findString) > -1\n        : value.toLowerCase().indexOf(query.findString) > -1;\n}\n\nfunction extractPureValue(cell: ICellData): Nullable<string> {\n    const rawValue = cell?.p?.body?.dataStream ?? cell?.v;\n\n    if (typeof rawValue === 'number') {\n        return `${rawValue}`;\n    }\n\n    if (typeof rawValue === 'boolean') {\n        return rawValue ? '1' : '0';\n    }\n\n    return rawValue;\n}\n\n/**\n * Trim only white spaces but not line breaks from the start and end of a string.\n * @param value the string to be trimmed\n */\nfunction trimLeadingTrailingWhitespace(value: string): string {\n    return value.replace(/^ +/g, '').replace(/ +$/g, ''); // be careful there are two spaces in the regex\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Dependency } from '@univerjs/core';\nimport type { IUniverSheetsFindReplaceConfig } from './controllers/config.schema';\nimport { DependentOn, IConfigService, Inject, Injector, merge, Plugin, UniverInstanceType } from '@univerjs/core';\nimport { UniverFindReplacePlugin } from '@univerjs/find-replace';\nimport { UniverSheetsPlugin } from '@univerjs/sheets';\nimport { defaultPluginConfig, SHEETS_FIND_REPLACE_PLUGIN_CONFIG_KEY } from './controllers/config.schema';\nimport { SheetsFindReplaceController } from './controllers/sheet-find-replace.controller';\n\nconst NAME = 'SHEET_FIND_REPLACE_PLUGIN';\n\n@DependentOn(UniverSheetsPlugin, UniverSheetsPlugin, UniverFindReplacePlugin)\nexport class UniverSheetsFindReplacePlugin extends Plugin {\n    static override pluginName = NAME;\n    static override type = UniverInstanceType.UNIVER_SHEET;\n\n    constructor(\n        private readonly _config: Partial<IUniverSheetsFindReplaceConfig> = defaultPluginConfig,\n        @Inject(Injector) protected readonly _injector: Injector,\n        @IConfigService private readonly _configService: IConfigService\n    ) {\n        super();\n\n        // Manage the plugin configuration.\n        const { ...rest } = merge(\n            {},\n            defaultPluginConfig,\n            this._config\n        );\n        this._configService.setConfig(SHEETS_FIND_REPLACE_PLUGIN_CONFIG_KEY, rest);\n    }\n\n    override onStarting(): void {\n        ([[SheetsFindReplaceController]] as Dependency[]).forEach((d) => this._injector.add(d));\n    }\n\n    override onSteady(): void {\n        this._injector.get(SheetsFindReplaceController);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { MenuConfig } from '@univerjs/ui';\n\nexport const SHEETS_SORT_UI_PLUGIN_CONFIG_KEY = 'sheets-sort-ui.config';\n\nexport const configSymbol = Symbol(SHEETS_SORT_UI_PLUGIN_CONFIG_KEY);\n\nexport interface IUniverSheetsSortUIConfig {\n    menu?: MenuConfig;\n}\n\nexport const defaultPluginConfig: IUniverSheetsSortUIConfig = {};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LocaleService } from '@univerjs/core';\nimport { Radio, RadioGroup } from '@univerjs/design';\nimport { useDependency } from '@univerjs/ui';\nimport React, { useState } from 'react';\nimport styles from './index.module.less';\n\nexport interface IExtendConfirmProps {\n    onChange: (value: string) => void;\n};\n\nexport const ExtendConfirm = (props: IExtendConfirmProps) => {\n    const [extend, setExtend] = useState<string>('0');\n    const localeService = useDependency(LocaleService);\n    return (\n        <div className={styles.extendConfirmContent}>\n            <div className=\"extend-confirm-desc\">{localeService.t('sheets-sort.dialog.sort-reminder-desc')}</div>\n            <RadioGroup\n                className={styles.extendConfirmRadioGroup}\n                value={extend}\n                direction=\"vertical\"\n                onChange={(value) => {\n                    setExtend(value as string);\n                    props.onChange(value as string);\n                }}\n            >\n                <Radio\n                    value=\"0\"\n                >\n                    {localeService.t('sheets-sort.dialog.sort-reminder-no')}\n                </Radio>\n                <Radio value=\"1\">\n                    {localeService.t('sheets-sort.dialog.sort-reminder-ext')}\n                </Radio>\n            </RadioGroup>\n        </div>\n    );\n};\n", "export default {\n  \"extendConfirmContent\": \"univer-extend-confirm-content\",\n  \"extendConfirmRadioGroup\": \"univer-extend-confirm-radio-group\",\n  \"customSortPanelContainer\": \"univer-custom-sort-panel-container\",\n  \"customSortPanelExt\": \"univer-custom-sort-panel-ext\",\n  \"addCondition\": \"univer-add-condition\",\n  \"addConditionText\": \"univer-add-condition-text\",\n  \"addConditionDisable\": \"univer-add-condition-disable\",\n  \"customSortPanelFooter\": \"univer-custom-sort-panel-footer\",\n  \"customSortPanelFooterBtn\": \"univer-custom-sort-panel-footer-btn\",\n  \"customSortPanelItem\": \"univer-custom-sort-panel-item\",\n  \"customSortPanelItemHead\": \"univer-custom-sort-panel-item-head\",\n  \"customSortPanelItemHandler\": \"univer-custom-sort-panel-item-handler\",\n  \"customSortPanelItemRemove\": \"univer-custom-sort-panel-item-remove\",\n  \"customSortPanelItemColumnInput\": \"univer-custom-sort-panel-item-column-input\",\n  \"customSortPanelItemColumnInputDropdown\": \"univer-custom-sort-panel-item-column-input-dropdown\",\n  \"customSortPanelItemColumnInputText\": \"univer-custom-sort-panel-item-column-input-text\",\n  \"customSortPanelItemOrderRadio\": \"univer-custom-sort-panel-item-order-radio\",\n  \"customSortPanelItemOrderRadioCn\": \"univer-custom-sort-panel-item-order-radio-cn\",\n  \"conditionList\": \"univer-condition-list\",\n  \"embedSortBtnContainer\": \"univer-embed-sort-btn-container\",\n  \"embedSortBtn\": \"univer-embed-sort-btn\",\n  \"embedSortBtnAsc\": \"univer-embed-sort-btn-asc\",\n  \"embedSortBtnDesc\": \"univer-embed-sort-btn-desc\",\n  \"embedSortBtnIcon\": \"univer-embed-sort-btn-icon\",\n  \"customSortColMenu\": \"univer-custom-sort-col-menu\",\n  \"customSortColMenuItem\": \"univer-custom-sort-col-menu-item\",\n  \"customSortColMenuItemDesc\": \"univer-custom-sort-col-menu-item-desc\"\n};import \"ni:sha-256;o1ReOS4sPfrUg9fwaLaufLPWxxoZs09bqpVfQ7yrbDU\";", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, Nullable, Workbook, Worksheet } from '@univerjs/core';\nimport type { ISheetRangeLocation } from '@univerjs/sheets';\n\nimport type { ISortOption } from '@univerjs/sheets-sort';\nimport {\n    Disposable,\n    ICommandService,\n    ILogService,\n    Inject,\n    IUniverInstanceService,\n    LocaleService,\n    LocaleType,\n    Tools,\n    UniverInstanceType,\n} from '@univerjs/core';\n\nimport { expandToContinuousRange, getPrimaryForRange, SetSelectionsOperation, SheetsSelectionsService } from '@univerjs/sheets';\nimport { SheetsSortService, SortType } from '@univerjs/sheets-sort';\nimport { IConfirmService } from '@univerjs/ui';\nimport { BehaviorSubject } from 'rxjs';\nimport { ExtendConfirm } from '../views/ExtendConfirm';\n\nexport enum EXTEND_TYPE {\n    KEEP = 'keep',\n    EXTEND = 'extend',\n    CANCEL = 'cancel',\n}\n\nexport interface ICustomSortState {\n    location?: ISheetSortLocation;\n    show: boolean;\n}\n\nexport interface ISheetSortLocation extends ISheetRangeLocation {\n    colIndex: number;\n}\n\nconst SORT_ERROR_MESSAGE = {\n    MERGE_ERROR: 'sheets-sort.error.merge-size',\n    EMPTY_ERROR: 'sheets-sort.error.empty',\n    SINGLE_ERROR: 'sheets-sort.error.single',\n    FORMULA_ARRAY: 'sheets-sort.error.formula-array',\n};\n\nexport class SheetsSortUIService extends Disposable {\n    private readonly _customSortState$ = new BehaviorSubject<Nullable<ICustomSortState>>(null);\n    readonly customSortState$ = this._customSortState$.asObservable();\n    constructor(\n        @IUniverInstanceService private readonly _univerInstanceService: IUniverInstanceService,\n        @IConfirmService private readonly _confirmService: IConfirmService,\n        @ILogService private readonly _logService: ILogService,\n        @Inject(SheetsSelectionsService) private readonly _selectionManagerService: SheetsSelectionsService,\n        @Inject(SheetsSortService) private readonly _sheetsSortService: SheetsSortService,\n        @Inject(LocaleService) private readonly _localeService: LocaleService,\n        @ICommandService private readonly _commandService: ICommandService\n    ) {\n        super();\n    }\n\n    async triggerSortDirectly(asc: boolean, extend: boolean, sheetRangeLocation?: ISheetSortLocation): Promise<boolean> {\n        const location = sheetRangeLocation || await this._detectSortLocation(extend);\n        if (!location) {\n            return false;\n        }\n\n        const check = this._check(location);\n        if (!check) {\n            return false;\n        }\n\n        const sortOption: ISortOption = {\n            orderRules: [{\n                type: asc ? SortType.ASC : SortType.DESC,\n                colIndex: location.colIndex,\n            }],\n            range: location.range,\n        };\n        this._sheetsSortService.applySort(sortOption, location.unitId, location.subUnitId);\n        return true;\n    }\n\n    async triggerSortCustomize() {\n        const location = await this._detectSortLocation();\n        if (!location) {\n            return false;\n        }\n\n        const check = this._check(location);\n        if (!check) {\n            return false;\n        }\n\n        // open customize dialog\n        this.showCustomSortPanel(location);\n        return true;\n    }\n\n    customSortState() {\n        return this._customSortState$.getValue();\n    }\n\n    getTitles(hasTitle: boolean) {\n        const location = this.customSortState()?.location;\n        if (!location) {\n            return [];\n        }\n\n        const { unitId, subUnitId, range } = location;\n        const worksheet = (this._univerInstanceService.getUnit(unitId) as Workbook)?.getSheetBySheetId(subUnitId);\n        if (!worksheet) {\n            return [];\n        }\n\n        const colTranslator = colIndexTranslator(this._localeService);\n\n        return Array.from({ length: range.endColumn - range.startColumn + 1 }, (_, i) => {\n            const cellValue = worksheet.getCell(range.startRow, i + range.startColumn)?.v;\n            return {\n                index: i + range.startColumn,\n                label: hasTitle ?\n                    `${cellValue ?? colTranslator(i + range.startColumn)}` :\n                    colTranslator(i + range.startColumn),\n            };\n        });\n    }\n\n    setSelection(unitId: string, subUnitId: string, range: IRange) {\n        const worksheet = (this._univerInstanceService.getUnit(unitId) as Workbook)?.getSheetBySheetId(subUnitId);\n        if (!worksheet) {\n            return;\n        }\n        const setSelectionsOperationParams = {\n            unitId,\n            subUnitId,\n\n            selections: [{ range, primary: getPrimaryForRange(range, worksheet), style: null }],\n\n        };\n        this._commandService.executeCommand(SetSelectionsOperation.id, setSelectionsOperationParams);\n    }\n\n    async showCheckError(content: string): Promise<boolean> {\n        return await this._confirmService.confirm({\n            id: 'sort-range-check-error',\n            title: {\n                title: this._localeService.t('info.tooltip'),\n            },\n            children: {\n                title: <div>{this._localeService.t(content)}</div>,\n            },\n        });\n    }\n\n    async showExtendConfirm(): Promise<EXTEND_TYPE> {\n        let shouldExtend = false;\n        const confirm = await this._confirmService.confirm({\n            id: 'extend-sort-range-dialog',\n            title: {\n                title: this._localeService.t('sheets-sort.dialog.sort-reminder'),\n            },\n            children: {\n                title: (\n                    <ExtendConfirm\n                        onChange={(value: string) => {\n                            shouldExtend = value === '1';\n                        }}\n                    />\n                ),\n            },\n            width: 400,\n\n        });\n        if (confirm) {\n            return shouldExtend ? EXTEND_TYPE.EXTEND : EXTEND_TYPE.KEEP;\n        }\n        return EXTEND_TYPE.CANCEL;\n    }\n\n    showCustomSortPanel(location: ISheetSortLocation) {\n        this._customSortState$.next({ location, show: true });\n    }\n\n    closeCustomSortPanel() {\n        this._customSortState$.next({ show: false });\n    }\n\n    private _check(location: ISheetSortLocation) {\n        const singleCheck = this._sheetsSortService.singleCheck(location);\n        if (!singleCheck) {\n            this.showCheckError(SORT_ERROR_MESSAGE.SINGLE_ERROR);\n            return false;\n        }\n\n        const mergeCheck = this._sheetsSortService.mergeCheck(location);\n        if (!mergeCheck) {\n            this.showCheckError(SORT_ERROR_MESSAGE.MERGE_ERROR);\n            return false;\n        }\n\n        const formulaCheck = this._sheetsSortService.formulaCheck(location);\n        if (!formulaCheck) {\n            this.showCheckError(SORT_ERROR_MESSAGE.FORMULA_ARRAY);\n            return false;\n        }\n\n        const emptyCheck = this._sheetsSortService.emptyCheck(location);\n        if (!emptyCheck) {\n            this.showCheckError(SORT_ERROR_MESSAGE.EMPTY_ERROR);\n            return false;\n        }\n        return true;\n    }\n\n    private async _detectSortLocation(extend?: boolean): Promise<Nullable<ISheetSortLocation>> {\n        const workbook = this._univerInstanceService.getCurrentUnitForType(UniverInstanceType.UNIVER_SHEET) as Workbook;\n        const worksheet = workbook.getActiveSheet() as Worksheet;\n        const unitId = workbook.getUnitId();\n        const subUnitId = worksheet.getSheetId();\n        const selection = this._selectionManagerService.getCurrentLastSelection();\n        if (!selection) {\n            return null;\n        }\n        let range: IRange;\n        if (extend === true) {\n            range = expandToContinuousRange(selection.range, { up: true, down: true, left: true, right: true }, worksheet);\n            this.setSelection(unitId, subUnitId, range);\n        } else if (extend === false) {\n            range = selection.range;\n        } else {\n            const confirmRes = await this.showExtendConfirm();\n            if (confirmRes === EXTEND_TYPE.CANCEL) {\n                return null;\n            }\n            if (confirmRes === EXTEND_TYPE.KEEP) {\n                range = selection.range;\n            } else {\n                range = expandToContinuousRange(selection.range, { up: true, down: true, left: true, right: true }, worksheet);\n                this.setSelection(unitId, subUnitId, range);\n            }\n        }\n\n        return {\n            range,\n            unitId,\n            subUnitId,\n            colIndex: selection.primary.actualColumn,\n        };\n    }\n}\n\nfunction colIndexTranslator(localeService: LocaleService) {\n    return (colIndex: number) => {\n        const colName = Tools.chatAtABC(colIndex);\n        const currentLocale = localeService.getCurrentLocale();\n        switch (currentLocale) {\n            case LocaleType.ZH_CN:\n                return `\"${colName}\"\u5217`;\n            case LocaleType.EN_US:\n                return `Column \"${colName}\"`;\n            default:\n                return `Column \"${colName}\"`;\n        }\n    };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, ICommand } from '@univerjs/core';\nimport { CommandType } from '@univerjs/core';\nimport { SheetsSortUIService } from './../../services/sheets-sort-ui.service';\n\nexport const SortRangeAscCommand: ICommand = {\n    id: 'sheet.command.sort-range-asc',\n    type: CommandType.COMMAND,\n    handler: async (accessor: IAccessor) => {\n        const sortService = accessor.get(SheetsSortUIService);\n        return await sortService.triggerSortDirectly(true, false);\n    },\n};\n\nexport const SortRangeAscExtCommand: ICommand = {\n    id: 'sheet.command.sort-range-asc-ext',\n    type: CommandType.COMMAND,\n    handler: async (accessor: IAccessor) => {\n        const sortService = accessor.get(SheetsSortUIService);\n        return await sortService.triggerSortDirectly(true, true);\n    },\n};\n\nexport const SortRangeDescCommand: ICommand = {\n    id: 'sheet.command.sort-range-desc',\n    type: CommandType.COMMAND,\n    handler: async (accessor: IAccessor) => {\n        const sortService = accessor.get(SheetsSortUIService);\n        return await sortService.triggerSortDirectly(false, false);\n    },\n};\n\nexport const SortRangeDescExtCommand: ICommand = {\n    id: 'sheet.command.sort-range-desc-ext',\n    type: CommandType.COMMAND,\n    handler: async (accessor: IAccessor) => {\n        const sortService = accessor.get(SheetsSortUIService);\n        return await sortService.triggerSortDirectly(false, true);\n    },\n};\n\nexport const SortRangeCustomCommand: ICommand = {\n    id: 'sheet.command.sort-range-custom',\n    type: CommandType.COMMAND,\n    handler: async (accessor: IAccessor) => {\n        const sortService = accessor.get(SheetsSortUIService);\n        return await sortService.triggerSortCustomize();\n    },\n};\n\nexport const SortRangeAscInCtxMenuCommand: ICommand = {\n    id: 'sheet.command.sort-range-asc-ctx',\n    type: CommandType.COMMAND,\n    handler: async (accessor: IAccessor) => {\n        const sortService = accessor.get(SheetsSortUIService);\n        return await sortService.triggerSortDirectly(true, false);\n    },\n};\n\nexport const SortRangeAscExtInCtxMenuCommand: ICommand = {\n    id: 'sheet.command.sort-range-asc-ext-ctx',\n    type: CommandType.COMMAND,\n    handler: async (accessor: IAccessor) => {\n        const sortService = accessor.get(SheetsSortUIService);\n        return await sortService.triggerSortDirectly(true, true);\n    },\n};\n\nexport const SortRangeDescInCtxMenuCommand: ICommand = {\n    id: 'sheet.command.sort-range-desc-ctx',\n    type: CommandType.COMMAND,\n    handler: async (accessor: IAccessor) => {\n        const sortService = accessor.get(SheetsSortUIService);\n        return await sortService.triggerSortDirectly(false, false);\n    },\n};\n\nexport const SortRangeDescExtInCtxMenuCommand: ICommand = {\n    id: 'sheet.command.sort-range-desc-ext-ctx',\n    type: CommandType.COMMAND,\n    handler: async (accessor: IAccessor) => {\n        const sortService = accessor.get(SheetsSortUIService);\n        return await sortService.triggerSortDirectly(false, true);\n    },\n};\n\nexport const SortRangeCustomInCtxMenuCommand: ICommand = {\n    id: 'sheet.command.sort-range-custom-ctx',\n    type: CommandType.COMMAND,\n    handler: async (accessor: IAccessor) => {\n        const sortService = accessor.get(SheetsSortUIService);\n        return await sortService.triggerSortCustomize();\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, Nullable } from '@univerjs/core';\nimport type { IOrderRule } from '@univerjs/sheets-sort';\nimport { LocaleService, LocaleType, throttle } from '@univerjs/core';\nimport { Button, Checkbox, clsx, DraggableList, Dropdown, Radio, RadioGroup } from '@univerjs/design';\nimport { CheckMarkSingle, DeleteEmptySingle, IncreaseSingle, MoreDownSingle, SequenceSingle } from '@univerjs/icons';\nimport { SheetsSortService, SortType } from '@univerjs/sheets-sort';\nimport { useDependency } from '@univerjs/ui';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { SheetsSortUIService } from '../services/sheets-sort-ui.service';\n\nimport styles from './index.module.less';\n\nexport interface ICustomSortPanelProps {\n    range: IRange;\n    onListChange: (value: IOrderRule[]) => void;\n}\n\nexport function CustomSortPanel() {\n    const sheetsSortUIService = useDependency(SheetsSortUIService);\n    const sheetsSortService = useDependency(SheetsSortService);\n    const localeService = useDependency(LocaleService);\n\n    const [hasTitle, setHasTitle] = useState(false);\n    const [scrollPosition, setScrollPosition] = useState(0);\n    const listEndRef = useRef<HTMLDivElement>(null);\n\n    const state = sheetsSortUIService.customSortState();\n    if (!state || !state.location) {\n        return null;\n    }\n    const { range, unitId, subUnitId } = state.location;\n\n    const titles = sheetsSortUIService.getTitles(hasTitle);\n\n    const [list, setList] = useState<IOrderRule[]>([\n        { type: SortType.ASC, colIndex: range.startColumn },\n    ]);\n\n    const onItemChange = useCallback((index: number, value: Nullable<IOrderRule>) => {\n        const newList = [...list];\n        if (value === null) {\n            newList.splice(index, 1);\n        } else {\n            newList[index] = value as IOrderRule;\n        }\n\n        setList(newList as IOrderRule[]);\n    }, [list]);\n\n    const newItem = useCallback(\n        throttle(() => {\n            const newList = [...list];\n            const nextColIndex = findNextColIndex(range, list);\n            if (nextColIndex !== null) {\n                newList.push({ type: SortType.ASC, colIndex: nextColIndex });\n                setList(newList);\n            }\n        }, 200),\n        [list, range]\n    );\n\n    const apply = useCallback((orderRules: IOrderRule[], hasTitle: boolean) => {\n        sheetsSortService.applySort({ range, orderRules, hasTitle });\n        sheetsSortUIService.closeCustomSortPanel();\n    }, [sheetsSortService, sheetsSortUIService, range]);\n\n    const cancel = useCallback(() => {\n        sheetsSortUIService.closeCustomSortPanel();\n    }, [sheetsSortUIService]);\n\n    const setTitle = useCallback((value: boolean) => {\n        setHasTitle(value);\n        if (value) {\n            sheetsSortUIService.setSelection(unitId, subUnitId, { ...range, startRow: range.startRow + 1 });\n        } else {\n            sheetsSortUIService.setSelection(unitId, subUnitId, range);\n        }\n    }, [sheetsSortUIService, range, subUnitId, unitId]);\n\n    useEffect(() => {\n        if (listEndRef.current && list.length > 5) {\n            listEndRef.current.scrollTop = listEndRef.current.scrollHeight;\n        }\n    }, [list]);\n\n    const canNew = list.length < titles.length;\n\n    const dragList = list.map((item) => ({ ...item, id: `${item.colIndex}` }));\n\n    return (\n        <div className={styles.customSortPanelContainer}>\n            <div className={styles.customSortPanelContent} onMouseDown={(e) => { e.stopPropagation(); }}>\n                <div className={styles.customSortPanelExt}>\n                    <div className={styles.firstRowCheck}>\n                        <Checkbox checked={hasTitle} onChange={(value) => setTitle(!!value)}>\n                            {localeService.t('sheets-sort.dialog.first-row-check')}\n                        </Checkbox>\n                    </div>\n                    {canNew\n                        ? (\n                            <div className={styles.addCondition} onClick={newItem}>\n                                <IncreaseSingle />\n                                <span className={styles.addConditionText}>{localeService.t('sheets-sort.dialog.add-condition')}</span>\n                            </div>\n                        )\n                        : (\n                            <div\n                                className={`\n                                  ${styles.addCondition}\n                                  ${styles.addConditionDisable}\n                                `}\n                            >\n                                <IncreaseSingle />\n                                <span className={styles.addConditionText}>{localeService.t('sheets-sort.dialog.add-condition')}</span>\n                            </div>\n                        )}\n\n                </div>\n                <div\n                    className={styles.conditionList}\n                    onScroll={(e) => {\n                        const position = e.currentTarget.scrollTop;\n                        setScrollPosition(position);\n                    }}\n                    ref={listEndRef}\n                >\n                    <DraggableList\n                        list={dragList}\n                        onListChange={setList}\n                        idKey=\"id\"\n                        draggableHandle={`.${styles.customSortPanelItemHandler}`}\n                        itemRender={(item) => (\n                            <SortOptionItem\n                                titles={titles}\n                                list={dragList}\n                                item={item}\n                                onChange={(value, index) => onItemChange(index, value)}\n                                scrollPosition={scrollPosition}\n                            />\n                        )}\n                        rowHeight={32}\n                        margin={[0, 12]}\n                    />\n                </div>\n            </div>\n            <div className={styles.customSortPanelFooter}>\n                <Button className={styles.customSortPanelFooterBtn} type=\"default\" onClick={() => cancel()}>{localeService.t('sheets-sort.dialog.cancel')}</Button>\n                <Button className={styles.customSortPanelFooterBtn} type=\"primary\" onClick={() => apply(list, hasTitle)}>{localeService.t('sheets-sort.dialog.confirm')}</Button>\n            </div>\n        </div>\n    );\n}\n\ninterface ISortOptionItemProps {\n    titles: { index: number; label: string }[];\n    list: IOrderRule[];\n    item: IOrderRule;\n    scrollPosition: number;\n    onChange: (value: Nullable<IOrderRule>, index: number) => void;\n}\n\nexport function SortOptionItem(props: ISortOptionItemProps) {\n    const { list, item, titles, onChange, scrollPosition } = props;\n    const localeService = useDependency(LocaleService);\n\n    const availableMenu = titles.filter((title) => (!list.some((item) => item.colIndex === title.index)) || title.index === item.colIndex);\n    const currentIndex = list.findIndex((listItem) => listItem.colIndex === item.colIndex);\n\n    const handleChangeColIndex = useCallback((menuItem: { index: number; label: string }) => {\n        onChange({ ...item, colIndex: menuItem.index }, currentIndex);\n        setVisible(false);\n    }, [currentIndex, item, onChange]);\n\n    const [visible, setVisible] = useState(false);\n\n    const onVisibleChange = (visible: boolean) => {\n        setVisible(visible);\n    };\n\n    useEffect(() => {\n        setVisible(false);\n    }, [scrollPosition]);\n\n    const showDelete = list.length > 1;\n    const itemLabel = titles.find((title) => title.index === item.colIndex)?.label;\n\n    const radioClass = localeService.getCurrentLocale() === LocaleType.ZH_CN ? styles.customSortPanelItemOrderRadioCn : styles.customSortPanelItemOrderRadio;\n    return (\n        <div className={styles.customSortPanelItem}>\n            <div className={styles.customSortPanelItemHead}>\n                <div className={styles.customSortPanelItemHandler}>\n                    <SequenceSingle />\n                </div>\n                <div className={styles.customSortPanelItemColumn}>\n                    <Dropdown\n                        align=\"start\"\n                        overlay={(\n                            <ul className={clsx(styles.customSortColMenu, 'univer-theme')}>\n                                {availableMenu.map((menuItem) => (\n                                    <li\n                                        key={menuItem.index}\n                                        onClick={() => handleChangeColIndex(menuItem)}\n                                        className={styles.customSortColMenuItem}\n                                    >\n                                        <span className={styles.customSortColMenuItemDesc}>\n                                            {menuItem.label}\n                                        </span>\n                                        <span className={styles.customSortColMenuItemCheck}>\n                                            {menuItem.index === item.colIndex && (\n                                                <CheckMarkSingle />\n                                            )}\n                                        </span>\n                                    </li>\n                                ))}\n                            </ul>\n                        )}\n                        open={visible}\n                        onOpenChange={onVisibleChange}\n                    >\n                        <div className={styles.customSortPanelItemColumnInput}>\n                            <span className={styles.customSortPanelItemColumnInputText}>{itemLabel}</span>\n                            <MoreDownSingle className={styles.customSortPanelItemColumnInputDropdown} />\n                        </div>\n                    </Dropdown>\n                </div>\n            </div>\n            <div className={styles.customSortPanelItemOrder}>\n                <RadioGroup\n                    className={radioClass}\n                    value={item.type}\n                    onChange={(value) => {\n                        onChange({ ...item, type: value as SortType }, currentIndex);\n                    }}\n                >\n                    <Radio value={SortType.ASC}>{localeService.t('sheets-sort.general.sort-asc')}</Radio>\n                    <Radio value={SortType.DESC}>{localeService.t('sheets-sort.general.sort-desc')}</Radio>\n                </RadioGroup>\n            </div>\n            <div className={styles.customSortPanelItemRemove}>\n                { showDelete && <DeleteEmptySingle onClick={() => onChange(null, currentIndex)} />}\n            </div>\n        </div>\n    );\n}\n\nfunction findNextColIndex(range: IRange, list: Nullable<IOrderRule>[]): number | null {\n    const { startColumn, endColumn } = range;\n    const used = new Set(list.map((item) => item?.colIndex));\n    for (let i = startColumn; i <= endColumn; i++) {\n        if (!used.has(i)) {\n            return i;\n        }\n    }\n    return null;\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange } from '@univerjs/core';\nimport { IUniverInstanceService, LocaleService } from '@univerjs/core';\nimport { AscendingSingle, DescendingSingle } from '@univerjs/icons';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { useDependency } from '@univerjs/ui';\nimport React, { useCallback } from 'react';\nimport { SheetsSortUIService } from '../services/sheets-sort-ui.service';\nimport styles from './index.module.less';\n\nexport interface IEmbedSortBtnProps {\n    range: IRange;\n    colIndex: number;\n    onClose: () => void;\n}\n\nexport default function EmbedSortBtn(props: any) {\n    const { range, colIndex, onClose } = props as IEmbedSortBtnProps;\n\n    const sheetsSortUIService = useDependency(SheetsSortUIService);\n    const univerInstanceService = useDependency(IUniverInstanceService);\n    const localeService = useDependency(LocaleService);\n\n    const apply = useCallback((asc: boolean) => {\n        const { unitId, subUnitId } = getSheetCommandTarget(univerInstanceService) || {};\n        if (range && unitId && subUnitId) {\n            const noTitleRange = { ...range, startRow: range.startRow + 1 };\n            sheetsSortUIService.triggerSortDirectly(asc, false, { unitId, subUnitId, range: noTitleRange, colIndex });\n        } else {\n            console.warn(`Cannot find the target to sort. unitId: ${unitId}, subUnitId: ${subUnitId}, range: ${range}, colIndex: ${colIndex}`);\n        }\n        onClose();\n    }, [range, colIndex, sheetsSortUIService, univerInstanceService, onClose]);\n\n    return (\n        <div className={styles.embedSortBtnContainer}>\n            <div\n                className={`\n                  ${styles.embedSortBtn}\n                  ${styles.embedSortBtnAsc}\n                `}\n                onClick={() => apply(true)}\n            >\n                <AscendingSingle className={styles.embedSortBtnIcon} />\n                {localeService.t('sheets-sort.general.sort-asc')}\n            </div>\n            <div\n                className={`\n                  ${styles.embedSortBtn}\n                  ${styles.embedSortBtnDesc}\n                `}\n                onClick={() => apply(false)}\n            >\n                <DescendingSingle className={styles.embedSortBtnIcon} />\n                {localeService.t('sheets-sort.general.sort-desc')}\n            </div>\n        </div>\n    );\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor } from '@univerjs/core';\nimport type { IMenuItem } from '@univerjs/ui';\nimport { UniverInstanceType } from '@univerjs/core';\nimport { RangeProtectionPermissionEditPoint, WorkbookEditablePermission, WorksheetEditPermission, WorksheetSortPermission } from '@univerjs/sheets';\nimport { getCurrentExclusiveRangeInterest$, getCurrentRangeDisable$ } from '@univerjs/sheets-ui';\nimport { getMenuHiddenObservable, MenuItemType } from '@univerjs/ui';\nimport { SortRangeAscCommand, SortRangeAscExtCommand, SortRangeAscExtInCtxMenuCommand, SortRangeAscInCtxMenuCommand, SortRangeCustomCommand, SortRangeCustomInCtxMenuCommand, SortRangeDescCommand, SortRangeDescExtCommand, SortRangeDescExtInCtxMenuCommand, SortRangeDescInCtxMenuCommand } from '../commands/commands/sheets-sort.command';\n\nexport const SHEETS_SORT_MENU_ID = 'sheet.menu.sheets-sort';\nexport const SHEETS_SORT_CTX_MENU_ID = 'sheet.menu.sheets-sort-ctx';\n\nexport const SHEETS_SORT_ASC_ICON = 'AscendingSingle';\nexport const SHEETS_SORT_ASC_EXT_ICON = 'ExpandAscendingSingle';\nexport const SHEETS_SORT_DESC_ICON = 'DescendingSingle';\nexport const SHEETS_SORT_DESC_EXT_ICON = 'ExpandDescendingSingle';\nexport const SHEETS_SORT_CUSTOM_ICON = 'CustomSortSingle';\n\nexport function sortRangeMenuFactory(accessor: IAccessor): IMenuItem {\n    return {\n        id: SHEETS_SORT_MENU_ID,\n        type: MenuItemType.SUBITEMS,\n        icon: SHEETS_SORT_ASC_ICON,\n        tooltip: 'sheets-sort.general.sort',\n        hidden$: getMenuHiddenObservable(accessor, UniverInstanceType.UNIVER_SHEET),\n        disabled$: getCurrentRangeDisable$(accessor, { workbookTypes: [WorkbookEditablePermission], worksheetTypes: [WorksheetSortPermission, WorksheetEditPermission], rangeTypes: [RangeProtectionPermissionEditPoint] }),\n    };\n}\n\nexport function sortRangeAscMenuFactory(_accessor: IAccessor): IMenuItem {\n    return {\n        id: SortRangeAscCommand.id,\n        icon: SHEETS_SORT_ASC_ICON,\n        title: 'sheets-sort.general.sort-asc-cur',\n        type: MenuItemType.BUTTON,\n        hidden$: getCurrentExclusiveRangeInterest$(_accessor),\n    };\n}\n\nexport function sortRangeAscExtMenuFactory(_accessor: IAccessor): IMenuItem {\n    return {\n        id: SortRangeAscExtCommand.id,\n        title: 'sheets-sort.general.sort-asc-ext',\n        icon: SHEETS_SORT_ASC_EXT_ICON,\n        type: MenuItemType.BUTTON,\n    };\n}\n\nexport function sortRangeDescMenuFactory(_accessor: IAccessor): IMenuItem {\n    return {\n        id: SortRangeDescCommand.id,\n        title: 'sheets-sort.general.sort-desc-cur',\n        icon: SHEETS_SORT_DESC_ICON,\n        type: MenuItemType.BUTTON,\n    };\n}\n\nexport function sortRangeDescExtMenuFactory(_accessor: IAccessor): IMenuItem {\n    return {\n        id: SortRangeDescExtCommand.id,\n        title: 'sheets-sort.general.sort-desc-ext',\n        icon: SHEETS_SORT_DESC_EXT_ICON,\n        type: MenuItemType.BUTTON,\n    };\n}\n\nexport function sortRangeCustomMenuFactory(_accessor: IAccessor): IMenuItem {\n    return {\n        id: SortRangeCustomCommand.id,\n        title: 'sheets-sort.general.sort-custom',\n        type: MenuItemType.BUTTON,\n        icon: SHEETS_SORT_CUSTOM_ICON,\n    };\n}\n\nexport function sortRangeCtxMenuFactory(accessor: IAccessor): IMenuItem {\n    return {\n        id: SHEETS_SORT_CTX_MENU_ID,\n        title: 'sheets-sort.general.sort',\n        type: MenuItemType.SUBITEMS,\n        icon: SHEETS_SORT_ASC_ICON,\n        hidden$: getMenuHiddenObservable(accessor, UniverInstanceType.UNIVER_SHEET),\n        disabled$: getCurrentRangeDisable$(accessor, {\n            workbookTypes: [WorkbookEditablePermission],\n            worksheetTypes: [WorksheetSortPermission, WorksheetEditPermission],\n            rangeTypes: [RangeProtectionPermissionEditPoint],\n        }),\n    };\n}\n\nexport function sortRangeAscCtxMenuFactory(_accessor: IAccessor): IMenuItem {\n    return {\n        id: SortRangeAscInCtxMenuCommand.id,\n        title: 'sheets-sort.general.sort-asc-cur',\n        type: MenuItemType.BUTTON,\n        icon: SHEETS_SORT_ASC_ICON,\n        disabled$: getCurrentRangeDisable$(_accessor, { workbookTypes: [WorkbookEditablePermission], worksheetTypes: [WorksheetSortPermission, WorksheetEditPermission], rangeTypes: [RangeProtectionPermissionEditPoint] }),\n    };\n}\n\nexport function sortRangeAscExtCtxMenuFactory(_accessor: IAccessor): IMenuItem {\n    return {\n        id: SortRangeAscExtInCtxMenuCommand.id,\n        title: 'sheets-sort.general.sort-asc-ext',\n        type: MenuItemType.BUTTON,\n        icon: SHEETS_SORT_ASC_EXT_ICON,\n        disabled$: getCurrentRangeDisable$(_accessor, { workbookTypes: [WorkbookEditablePermission], worksheetTypes: [WorksheetSortPermission, WorksheetEditPermission], rangeTypes: [RangeProtectionPermissionEditPoint] }),\n    };\n}\n\nexport function sortRangeDescCtxMenuFactory(_accessor: IAccessor): IMenuItem {\n    return {\n        id: SortRangeDescInCtxMenuCommand.id,\n        title: 'sheets-sort.general.sort-desc-cur',\n        type: MenuItemType.BUTTON,\n        icon: SHEETS_SORT_DESC_ICON,\n        disabled$: getCurrentRangeDisable$(_accessor, { workbookTypes: [WorkbookEditablePermission], worksheetTypes: [WorksheetSortPermission, WorksheetEditPermission], rangeTypes: [RangeProtectionPermissionEditPoint] }),\n    };\n}\n\nexport function sortRangeDescExtCtxMenuFactory(_accessor: IAccessor): IMenuItem {\n    return {\n        id: SortRangeDescExtInCtxMenuCommand.id,\n        title: 'sheets-sort.general.sort-desc-ext',\n        type: MenuItemType.BUTTON,\n        icon: SHEETS_SORT_DESC_EXT_ICON,\n        disabled$: getCurrentRangeDisable$(_accessor, { workbookTypes: [WorkbookEditablePermission], worksheetTypes: [WorksheetSortPermission, WorksheetEditPermission], rangeTypes: [RangeProtectionPermissionEditPoint] }),\n    };\n}\n\nexport function sortRangeCustomCtxMenuFactory(_accessor: IAccessor): IMenuItem {\n    return {\n        id: SortRangeCustomInCtxMenuCommand.id,\n        title: 'sheets-sort.general.sort-custom',\n        type: MenuItemType.BUTTON,\n        icon: SHEETS_SORT_CUSTOM_ICON,\n        disabled$: getCurrentRangeDisable$(_accessor, { workbookTypes: [WorkbookEditablePermission], worksheetTypes: [WorksheetSortPermission, WorksheetEditPermission], rangeTypes: [RangeProtectionPermissionEditPoint] }),\n    };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { MenuSchemaType } from '@univerjs/ui';\nimport { ContextMenuGroup, ContextMenuPosition, RibbonStartGroup } from '@univerjs/ui';\nimport {\n    SortRangeAscCommand,\n    SortRangeAscExtCommand,\n    SortRangeAscExtInCtxMenuCommand,\n    SortRangeAscInCtxMenuCommand,\n    SortRangeCustomCommand,\n    SortRangeCustomInCtxMenuCommand,\n    SortRangeDescCommand,\n    SortRangeDescExtCommand,\n    SortRangeDescExtInCtxMenuCommand,\n    SortRangeDescInCtxMenuCommand,\n} from '../commands/commands/sheets-sort.command';\nimport {\n    SHEETS_SORT_CTX_MENU_ID,\n    SHEETS_SORT_MENU_ID,\n    sortRangeAscCtxMenuFactory,\n    sortRangeAscExtCtxMenuFactory,\n    sortRangeAscExtMenuFactory,\n    sortRangeAscMenuFactory,\n    sortRangeCtxMenuFactory,\n    sortRangeCustomCtxMenuFactory,\n    sortRangeCustomMenuFactory,\n    sortRangeDescCtxMenuFactory,\n    sortRangeDescExtCtxMenuFactory,\n    sortRangeDescExtMenuFactory,\n    sortRangeDescMenuFactory,\n    sortRangeMenuFactory,\n} from './sheets-sort.menu';\n\nexport const menuSchema: MenuSchemaType = {\n    [RibbonStartGroup.FORMULAS_INSERT]: {\n        [SHEETS_SORT_MENU_ID]: {\n            order: 2,\n            menuItemFactory: sortRangeMenuFactory,\n            [SortRangeAscCommand.id]: {\n                order: 0,\n                menuItemFactory: sortRangeAscMenuFactory,\n            },\n            [SortRangeAscExtCommand.id]: {\n                order: 1,\n                menuItemFactory: sortRangeAscExtMenuFactory,\n            },\n            [SortRangeDescCommand.id]: {\n                order: 2,\n                menuItemFactory: sortRangeDescMenuFactory,\n            },\n            [SortRangeDescExtCommand.id]: {\n                order: 3,\n                menuItemFactory: sortRangeDescExtMenuFactory,\n            },\n            [SortRangeCustomCommand.id]: {\n                order: 4,\n                menuItemFactory: sortRangeCustomMenuFactory,\n            },\n        },\n    },\n    [ContextMenuPosition.MAIN_AREA]: {\n        [ContextMenuGroup.DATA]: {\n            [SHEETS_SORT_CTX_MENU_ID]: {\n                order: 0,\n                menuItemFactory: sortRangeCtxMenuFactory,\n                [SortRangeAscInCtxMenuCommand.id]: {\n                    order: 0,\n                    menuItemFactory: sortRangeAscCtxMenuFactory,\n                },\n                [SortRangeAscExtInCtxMenuCommand.id]: {\n                    order: 1,\n                    menuItemFactory: sortRangeAscExtCtxMenuFactory,\n                },\n                [SortRangeDescInCtxMenuCommand.id]: {\n                    order: 2,\n                    menuItemFactory: sortRangeDescCtxMenuFactory,\n                },\n                [SortRangeDescExtInCtxMenuCommand.id]: {\n                    order: 3,\n                    menuItemFactory: sortRangeDescExtCtxMenuFactory,\n                },\n                [SortRangeCustomInCtxMenuCommand.id]: {\n                    order: 4,\n                    menuItemFactory: sortRangeCustomCtxMenuFactory,\n                },\n            },\n        },\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { UIPartsService } from '@univerjs/ui';\n\nimport type { ISheetSortLocation } from '../services/sheets-sort-ui.service';\nimport { ICommandService, Inject, Injector, LocaleService, RxDisposable } from '@univerjs/core';\nimport { serializeRange } from '@univerjs/engine-formula';\nimport { AscendingSingle, CustomSortSingle, DescendingSingle, ExpandAscendingSingle, ExpandDescendingSingle } from '@univerjs/icons';\nimport { SortRangeCommand } from '@univerjs/sheets-sort';\nimport { SheetsRenderService, SheetsUIPart } from '@univerjs/sheets-ui';\nimport { ComponentManager, connectInjector, IDialogService, ILayoutService, IMenuManagerService, IUIPartsService } from '@univerjs/ui';\nimport { takeUntil } from 'rxjs';\nimport { SortRangeAscCommand, SortRangeAscExtCommand, SortRangeAscExtInCtxMenuCommand, SortRangeAscInCtxMenuCommand, SortRangeCustomCommand, SortRangeCustomInCtxMenuCommand, SortRangeDescCommand, SortRangeDescExtCommand, SortRangeDescExtInCtxMenuCommand, SortRangeDescInCtxMenuCommand } from '../commands/commands/sheets-sort.command';\nimport { SheetsSortUIService } from '../services/sheets-sort-ui.service';\nimport { CustomSortPanel } from '../views/CustomSortPanel';\nimport EmbedSortBtn from '../views/EmbedSortBtn';\nimport { menuSchema } from './menu.schema';\nimport { SHEETS_SORT_ASC_EXT_ICON, SHEETS_SORT_ASC_ICON, SHEETS_SORT_CUSTOM_ICON, SHEETS_SORT_DESC_EXT_ICON, SHEETS_SORT_DESC_ICON } from './sheets-sort.menu';\n\nconst CUSTOM_SORT_DIALOG_ID = 'custom-sort-dialog';\nconst CUSTOM_SORT_PANEL_WIDTH = 560;\n\nexport class SheetsSortUIController extends RxDisposable {\n    constructor(\n        @ICommandService private readonly _commandService: ICommandService,\n        @IMenuManagerService private readonly _menuManagerService: IMenuManagerService,\n        @IDialogService private readonly _dialogService: IDialogService,\n        @ILayoutService private readonly _layoutService: ILayoutService,\n        @IUIPartsService private readonly _uiPartsService: UIPartsService,\n        @Inject(SheetsRenderService) private _sheetRenderService: SheetsRenderService,\n        @Inject(LocaleService) private readonly _localeService: LocaleService,\n        @Inject(SheetsSortUIService) private readonly _sheetsSortUIService: SheetsSortUIService,\n        @Inject(Injector) private _injector: Injector,\n        @Inject(ComponentManager) private readonly _componentManager: ComponentManager\n    ) {\n        super();\n        this._initCommands();\n        this._initMenu();\n        this._initUI();\n    }\n\n    private _initMenu() {\n        this._menuManagerService.mergeMenu(menuSchema);\n    }\n\n    private _initCommands(): void {\n        [\n            SortRangeAscCommand,\n            SortRangeAscExtCommand,\n            SortRangeDescCommand,\n            SortRangeDescExtCommand,\n            SortRangeCustomCommand,\n            SortRangeAscInCtxMenuCommand,\n            SortRangeAscExtInCtxMenuCommand,\n            SortRangeDescInCtxMenuCommand,\n            SortRangeDescExtInCtxMenuCommand,\n            SortRangeCustomInCtxMenuCommand,\n\n        ].forEach((command) => this.disposeWithMe(this._commandService.registerCommand(command)));\n\n        this.disposeWithMe(this._sheetRenderService.registerSkeletonChangingMutations(SortRangeCommand.id));\n    }\n\n    private _initUI(): void {\n        this.disposeWithMe(this._componentManager.register('CustomSortPanel', CustomSortPanel));\n        this.disposeWithMe(this._uiPartsService.registerComponent(SheetsUIPart.FILTER_PANEL_EMBED_POINT, () => connectInjector(EmbedSortBtn, this._injector)));\n        this.disposeWithMe(this._componentManager.register(SHEETS_SORT_ASC_ICON, AscendingSingle));\n        this.disposeWithMe(this._componentManager.register(SHEETS_SORT_ASC_EXT_ICON, ExpandAscendingSingle));\n        this.disposeWithMe(this._componentManager.register(SHEETS_SORT_DESC_ICON, DescendingSingle));\n        this.disposeWithMe(this._componentManager.register(SHEETS_SORT_DESC_EXT_ICON, ExpandDescendingSingle));\n        this.disposeWithMe(this._componentManager.register(SHEETS_SORT_CUSTOM_ICON, CustomSortSingle));\n\n        // this controller is also responsible for toggling the CustomSortDialog\n        this._sheetsSortUIService.customSortState$.pipe(takeUntil(this.dispose$)).subscribe((newState) => {\n            if (newState && newState.show && newState.location) {\n                this._openCustomSortPanel(newState.location);\n            } else if (newState && !newState?.show) {\n                this._closePanel();\n            }\n        });\n    }\n\n    private _openCustomSortPanel(location: ISheetSortLocation): void {\n        this._dialogService.open({\n            id: CUSTOM_SORT_DIALOG_ID,\n            draggable: true,\n            width: CUSTOM_SORT_PANEL_WIDTH,\n            title: { title: `${this._localeService.t('sheets-sort.general.sort-custom')}: ${serializeRange(location.range)}` },\n            children: { label: 'CustomSortPanel' },\n            destroyOnClose: true,\n            defaultPosition: getCustomSortDialogDefaultPosition(),\n            preservePositionOnDestroy: false,\n            onClose: () => this._closePanel(),\n            mask: true,\n        });\n    }\n\n    private _closePanel(): void {\n        this._dialogService.close(CUSTOM_SORT_DIALOG_ID);\n\n        queueMicrotask(() => this._layoutService.focus());\n    }\n}\n\nfunction getCustomSortDialogDefaultPosition(): { x: number; y: number } {\n    const x = 0;\n    const y = 0;\n\n    return { x, y };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Dependency } from '@univerjs/core';\nimport type { IUniverSheetsSortUIConfig } from './controllers/config.schema';\nimport {\n    DependentOn,\n    IConfigService,\n    Inject,\n    Injector,\n    merge,\n    Plugin,\n    UniverInstanceType,\n} from '@univerjs/core';\nimport { UniverSheetsSortPlugin } from '@univerjs/sheets-sort';\nimport { defaultPluginConfig, SHEETS_SORT_UI_PLUGIN_CONFIG_KEY } from './controllers/config.schema';\nimport { SheetsSortUIController } from './controllers/sheets-sort-ui.controller';\nimport { SheetsSortUIService } from './services/sheets-sort-ui.service';\n\nconst NAME = 'SHEET_SORT_UI_PLUGIN';\n\n@DependentOn(UniverSheetsSortPlugin)\nexport class UniverSheetsSortUIPlugin extends Plugin {\n    static override type = UniverInstanceType.UNIVER_SHEET;\n    static override pluginName = NAME;\n\n    constructor(\n        private readonly _config: Partial<IUniverSheetsSortUIConfig> = defaultPluginConfig,\n        @Inject(Injector) protected readonly _injector: Injector,\n        @IConfigService private readonly _configService: IConfigService\n    ) {\n        super();\n\n        // Manage the plugin configuration.\n        const { ...rest } = merge(\n            {},\n            defaultPluginConfig,\n            this._config\n        );\n        this._configService.setConfig(SHEETS_SORT_UI_PLUGIN_CONFIG_KEY, rest);\n    }\n\n    override onStarting(): void {\n        ([\n            [SheetsSortUIService],\n            [SheetsSortUIController],\n        ] as Dependency[]).forEach((d) => this._injector.add(d));\n    }\n\n    override onRendered(): void {\n        this._injector.get(SheetsSortUIController);\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBO,IAAM,wCAAwC;AAE9C,IAAM,eAAe,OAAO,qCAAqC;AAKjE,IAAM,sBAAsD,CAAC;;;ACa7D,IAAM,sBAA+E;AAAA,EACxF,IAAI;AAAA,EACJ;AAAA,EACA,SAAS,OAAO,UAAqB,WAAuC;AACxE,UAAM,kBAAkB,SAAS,IAAI,gBAAgB;AACrD,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,UAAM,EAAE,QAAQ,aAAa,IAAI;AAGjC,UAAM,yBAAyB,gBAAgB,uBAAuB,MAAM;AAC5E,UAAM,UAAU,MAAM,QAAQ,IAAI,aAAa,IAAI,CAAC,gBAAgB,eAAe,eAAe,sBAAsB,IAAI;AAAA,MACxH;AAAA,MACA,WAAW,YAAY;AAAA,MACvB,OAAO,YAAY;AAAA,IACvB,CAAiC,CAAC,CAAC;AACnC,2BAAuB,QAAQ;AAE/B,WAAO,oBAAoB,SAAS,YAAY;AAAA,EACpD;AACJ;AAEA,SAAS,oBAAoB,SAAoB,cAAsD;AACnG,MAAI,UAAU;AACd,MAAI,UAAU;AAEd,UAAQ,QAAQ,CAAC,GAAG,UAAU;AAC1B,UAAM,QAAQ,aAAa,KAAK,EAAE;AAClC,QAAI,GAAG;AACH,iBAAW;AAAA,IACf,OAAO;AACH,iBAAW;AAAA,IACf;AAAA,EACJ,CAAC;AAED,SAAO,EAAE,SAAS,QAAQ;AAC9B;;;AC9CO,IAAM,iCAAN,cAA6C,MAA4C;AAAA,EAK5F,YAAY,KAAc,OAA8C;AACpE,UAAM,KAAK,KAAK;AALpB,wBAAU,cAAa;AACvB,wBAAU,kBAAiB;AAC3B,wBAAU;AAKN,QAAI,OAAO;AACP,WAAK,cAAc,KAAK;AAAA,IAC5B;AAAA,EACJ;AAAA,EAEA,cAAc,OAA4D;AACtE,SAAK,aAAa,CAAC,CAAC,MAAM;AAE1B,QAAI,OAAO,MAAM,kBAAkB,aAAa;AAC5C,WAAK,iBAAiB,MAAM;AAAA,IAChC;AAEA,QAAI,OAAO,MAAM,UAAU,aAAa;AACpC,WAAK,SAAS,MAAM;AAAA,IACxB;AAEA,SAAK,iBAAiB;AAAA,MAClB,OAAO,MAAM;AAAA,MACb,QAAQ,MAAM;AAAA,IAClB,CAAC;AAAA,EACL;AAAA,EAEmB,MAAM,KAAqC;AAC1D,UAAM,YAAY,KAAK;AACvB,UAAM,QAAQ,QAAQ,KAAK,OAAQ,CAAC,KAAK,KAAK,OAAQ,CAAC,KAAK,KAAK,OAAQ,CAAC;AAC1E,UAAM,cAAc,OAAO,KAAK,OAAQ,CAAC,KAAK,KAAK,OAAQ,CAAC,KAAK,KAAK,OAAQ,CAAC;AAE/E,SAAK,SAAS,KAA+B;AAAA,MACzC,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,MAAM;AAAA,MACN,QAAQ,YAAY,cAAc;AAAA,MAClC,aAAa,YAAY,IAAI;AAAA,MAC7B,SAAS;AAAA,IACb,CAAC;AAAA,EACL;AACJ;;;ACnDO,SAAS,eAAe,QAAgB,QAAyB;AACpE,SAAO,OAAO,aAAa,OAAO,YAAY,OAAO,gBAAgB,OAAO;AAChF;AAQO,SAAS,gCAAgC,QAAgB,QAAyB;AACrF,SACI,OAAO,WAAW,OAAO,YACxB,OAAO,aAAa,OAAO,YAAY,OAAO,eAAe,OAAO;AAE7E;AAQO,SAAS,mCAAmC,QAAgB,QAAyB;AACxF,SACI,OAAO,cAAc,OAAO,eAC3B,OAAO,gBAAgB,OAAO,eAAe,OAAO,YAAY,OAAO;AAEhF;AAQO,SAAS,gCAAgC,QAAgB,QAAyB;AACrF,SACI,OAAO,WAAW,OAAO,YACxB,OAAO,aAAa,OAAO,YAAY,OAAO,eAAe,OAAO;AAE7E;AAEO,SAAS,mCAAmC,QAAgB,QAAyB;AACxF,SACI,OAAO,cAAc,OAAO,eAC3B,OAAO,gBAAgB,OAAO,eAAe,OAAO,YAAY,OAAO;AAEhF;AAEO,SAAS,sBAAsB,WAAgC,WAA+B;AACjG,QAAM,EAAE,MAAM,IAAI;AAClB,QAAM,EAAE,UAAU,YAAY,IAAI;AAClC,QAAM,gBAAgB,UAAU,cAAc,UAAU,WAAW;AAEnE,MAAI,eAAe;AACf,WAAO,UAAU,OAAO,OAAO,aAAa;AAAA,EAChD,OAAO;AACH,WAAO,MAAM,WAAW,MAAM,YAAY,MAAM,cAAc,MAAM;AAAA,EACxE;AACJ;;;AC9CO,IAAM,8BAAN,cAA0C,WAAkC;AAAA,EAG/E,YACuC,WACa,wBACd,iBACI,qBACJ,iBACpC;AACE,UAAM;AAN6B;AACa;AACd;AACI;AACJ;AAPtC,wBAAQ;AAWJ,SAAK,MAAM;AACX,SAAK,cAAc;AAAA,EACvB;AAAA,EAES,UAAgB;AACrB,UAAM,QAAQ;AAEd,SAAK,uBAAuB,WAAW;AACvC,SAAK,UAAU,QAAQ;AAAA,EAC3B;AAAA,EAEQ,QAAc;AAClB,UAAM,WAAW,KAAK,UAAU,eAAe,yBAAyB;AACxE,SAAK,YAAY;AAEjB,SAAK,cAAc,KAAK,oBAAoB,4BAA4B,QAAQ,CAAC;AAGjF,SAAK,cAAc,KAAK,gBAAgB,uBAAuB,gBAAgB,EAC1E,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EACvB,UAAU,MAAM,KAAK,uBAAuB,WAAW,CAAC,CAAC;AAAA,EAClE;AAAA,EAEQ,gBAAsB;AAC1B,KAAC,mBAAmB,EAAE,QAAQ,CAAC,YAAY,KAAK,cAAc,KAAK,gBAAgB,gBAAgB,OAAO,CAAC,CAAC;AAAA,EAChH;AACJ;AAtCa,8BAAN;AAAA,EAIE,0BAAO,QAAQ;AAAA,EACf,0BAAO,qBAAqB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,GARI;AAwCb,IAAM,oCAAoC;AAC1C,IAAM,uBAAuB;AAgBtB,IAAM,iBAAN,cAA6B,UAAU;AAAA,EA8B1C,YACqB,WACA,8BACwB,wBACD,uBACN,iBACA,iBACK,eACN,0BACnC;AACE,UAAM;AATW;AACA;AACwB;AACD;AACN;AACA;AACK;AAnC3C;AAAA,wBAAiB,mBAAkB,IAAI,QAA2B;AAClE,wBAAS,kBAAiB,KAAK,gBAAgB,aAAa;AAE5D,wBAAiB,2BAA0B,IAAI,QAAyB;AACxE,wBAAS,0BAAyB,KAAK,wBAAwB,aAAa;AAG5E;AAAA,wBAAQ,uBAAsB,oBAAI,IAA+B;AAEjE;AAAA,wBAAQ,YAA8B,CAAC;AAEvC;AAAA,wBAAQ,oBAAmB;AAE3B,wBAAQ,yBAAwB;AAChC,wBAAQ,oBAAqD,CAAC;AAC9D,wBAAQ,0BAAmE;AAG3E;AAAA,wBAAQ,UAA+B;AAQvC,wBAAQ;AAcJ,SAAK,sBAAsB,yBAAyB,sBAAsB,KAAK,MAAM;AAAA,EACzF;AAAA,EArBA,IAAY,gBAAwB;AAAE,WAAO,KAAK,SAAS;AAAA,EAAQ;AAAA,EACnE,IAAI,SAAiB;AAAE,WAAO,KAAK,UAAU,UAAU;AAAA,EAAG;AAAA,EAC1D,IAAI,eAAuB;AAAE,WAAO,KAAK;AAAA,EAAe;AAAA,EACxD,IAAI,kBAA0B;AAAE,WAAO,KAAK;AAAA,EAAkB;AAAA,EAC9D,IAAI,eAA0C;AAAE,WAAO,KAAK,mBAAmB,IAAI,KAAK,SAAS,KAAK,mBAAmB,CAAC,IAAI;AAAA,EAAM;AAAA,EAmB3H,UAAgB;AACrB,UAAM,QAAQ;AAEd,SAAK,mBAAmB;AACxB,SAAK,yBAAyB,KAAK;AAAA,EACvC;AAAA,EAEA,aAA2B;AACvB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,MAAM,OAAyB;AAC3B,SAAK,SAAS;AAEd,QAAI,MAAM,oCAA2B;AACjC,WAAK,yBAAyB,IAAI;AAAA,IACtC,OAAO;AACH,WAAK,yBAAyB,KAAK;AAAA,IACvC;AAEA,YAAQ,MAAM,WAAW;AAAA,MACrB;AACI,aAAK,eAAe,KAAK;AACzB;AAAA,MACJ;AAAA,MACA;AACI,aAAK,sBAAsB,KAAK;AAChC;AAAA,IACR;AAAA,EACJ;AAAA,EAES,iBAAuB;AAC5B,UAAM,eAAe,KAAK;AAC1B,QAAI,CAAC,aAAc;AAEnB,SAAK,gBAAgB,eAAe,mBAAmB,IAAI;AAAA,MACvD,QAAQ,aAAa;AAAA,MACrB,SAAS,aAAa,MAAM;AAAA,MAC5B,OAAO,aAAa,MAAM;AAAA,IAE9B,CAA8B;AAAA,EAClC;AAAA,EAEQ,yBAAyB,OAAsB;AACnD,SAAK,gBAAgB,gBAAgB,wBAAwB,KAAK;AAAA,EACtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,eAAe,OAAkC;AAC7C,UAAM,SAAS,KAAK,UAAU,UAAU;AAExC,QAAI;AACJ,QAAI,cAAc;AAElB,UAAM,iBAAiB,MAAM;AACzB,YAAM,eAAe,KAAK,UAAU,UAAU,EACzC,OAAO,CAAC,cAAc,CAAC,UAAU,cAAc,CAAC,EAChD,IAAI,CAAC,cAAc;AAChB,cAAMA,YAAW,KAAK,iBAAiB,WAAW,OAAO,MAAM;AAC/D,cAAM,UAAU,UAAU,WAAW;AAErC,cAAM,EAAE,QAAQ,IAAIA;AACpB,YAAI,QAAQ,QAAQ;AAChB,eAAK,oBAAoB,IAAI,SAASA,UAAS,OAAO;AAAA,QAC1D,OAAO;AACH,eAAK,oBAAoB,OAAO,OAAO;AAAA,QAC3C;AAEA,eAAOA;AAAA,MACX,CAAC;AAEL,WAAK,WAAW,aAAa,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK;AACxD,WAAK,qBAAqB;AAE1B,UAAI,aAAa;AACb,mBAAW,EAAE,SAAS,KAAK,SAAS;AACpC,sBAAc;AAAA,MAClB,OAAO;AACH,aAAK,gBAAgB,KAAK,KAAK,QAAQ;AAAA,MAC3C;AAAA,IACJ;AAEA,SAAK,cAAc,KAAK,6BAA6B,iBAAiB,UAAU,MAAM;AAClF,WAAK,qBAAqB;AAC1B,WAAK,6BAA6B,KAAK,qBAAqB;AAAA,IAChE,CAAC,CAAC;AAEF,SAAK;AAAA,MACD,aAAa,KAAK,gBAAgB,kBAAkB,KAAK,KAAK,eAAe,CAAC,EACzE,KAAK,OAAO,CAAC,CAAC,SAAS,OAAO,MAAM,QAAQ,OAAO,4BAA4B,MAAM,EAAC,mCAAS,gBAAe,CAAC,EAC/G,UAAU,MAAM;AACb,cAAM,cAAc,KAAK,UAAU,eAAe;AAClD,YAAI,CAAC,aAAa;AACd;AAAA,QACJ;AAEA,cAAM,gBAAgB,YAAY,WAAW;AAC7C,YAAI,CAAC,KAAK,oBAAoB,IAAI,aAAa,GAAG;AAC9C;AAAA,QACJ;AAEA,aAAK,kCAAkC,WAAW;AAAA,MACtD,CAAC;AAAA,IACT;AAGA,SAAK;AAAA,MACD,aAAa,KAAK,gBAAgB,kBAAkB,KAAK,KAAK,eAAe,CAAC,EACzE;AAAA,QACG;AAAA,UAAO,CAAC,CAAC,OAAO,MAAM,QAAQ,6BACtB,QAAQ,OAAqC,WAAW,KAAK,UAAU,UAAU;AAAA,QACzF;AAAA,QACA,aAAa,KAAK,QAAW,EAAE,SAAS,OAAO,UAAU,KAAK,CAAC;AAAA,MACnE,EACC,UAAU,MAAM,eAAe,CAAC;AAAA,IACzC;AAEA,mBAAe;AACf,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,EAMQ,kCAAkC,aAA8B;AACpE,QAAI;AACJ,QAAI;AACJ,QAAI,cAAc;AAElB,UAAM,qBAAqB,KAAK,oBAAoB,IAAI,YAAY,WAAW,CAAC;AAChF,UAAM,aAAa,KAAK,oBAAoB,qBAAqB;AACjE,QAAI,EAAC,yCAAY,SAAQ;AACrB,cAAQ,mBAAmB,CAAC;AAC5B,cAAQ;AACR,oBAAc,KAAK,SAAS,UAAU,CAAC,MAAM,MAAM,KAAK;AAAA,IAC5D,OAAO;AACH,OAAC,OAAO,WAAW,IAAI,KAAK,sBAAsB,oBAAoB,WAAW,CAAC,EAAE,KAAK;AACzF,cAAQ,mBAAmB,UAAU,CAAC,MAAM,MAAM,KAAK;AAAA,IAC3D;AAEA,SAAK,mBAAmB,cAAc;AACtC,SAAK,wBAAwB,KAAK,KAAK;AAEvC,SAAK,wBAAwB;AAC7B,SAAK,qBAAqB;AAC1B,SAAK,6BAA6B,KAAK;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,sBAAsB,OAAkC;AACpD,UAAM,SAAS,KAAK,UAAU,UAAU;AAExC,UAAM,8BAA8B,MAAe;AAxS3D;AAySY,YAAM,mBAAmB,KAAK,UAAU,eAAe;AACvD,UAAI,CAAC,iBAAkB,QAAO;AAC9B,YAAM,oBAAoB,KAAK,oBAAoB,qBAAqB;AACxE,YAAM,0BAAyB,4DAAmB,KAAK,CAAC,cAAc,CAAC,sBAAsB,WAAW,gBAAgB,OAAzF,YAA+F;AAC9H,aAAO;AAAA,IACX;AAEA,QAAI;AACJ,QAAI,cAAc;AAClB,QAAI,mBAAmB;AAEvB,UAAM,yBAAyB,MAAqB;AAChD,YAAM,mBAAmB,KAAK,UAAU,eAAe;AACvD,UAAI,CAAC,iBAAkB,QAAO,EAAE,SAAS,CAAC,EAAE;AAE5C,YAAM,YAAY,KAAK;AAEvB,yBAAmB,4BAA4B;AAC/C,YAAM,oBAAoB,KAAK,oBAAoB,qBAAqB;AACxE,YAAM,cAAc,mBACd,KAAK,kBAAkB,kBAAkB,mBAA4C,OAAO,MAAM,IAClG,KAAK,iBAAiB,kBAAkB,OAAO,MAAM;AAE3D,WAAK,WAAW,YAAY;AAC5B,WAAK,mBAAmB,KAAK,+BAA+B,WAAW,KAAK,QAAQ;AAEpF,UAAI,aAAa;AACb,mBAAW;AACX,sBAAc;AAAA,MAClB,OAAO;AACH,aAAK,gBAAgB,KAAK,KAAK,QAAQ;AAAA,MAC3C;AAEA,WAAK,qBAAqB;AAC1B,aAAO;AAAA,IACX;AAGA,SAAK,cAAc,KAAK,6BAA6B,iBAAiB,UAAU,MAAM,KAAK,qBAAqB,CAAC,CAAC;AAElH,SAAK;AAAA,MACD;AAAA,QACI,aAAa,KAAK,gBAAgB,kBAAkB,KAAK,KAAK,eAAe,CAAC,EAAE;AAAA,UAC5E,OAAO,CAAC,CAAC,OAAO,MAAM;AAElB,gBAAI,QAAQ,6BAAkC,QAAQ,OAAqC,WAAW,KAAK,UAAU,UAAU,GAAG;AAC9H,qBAAO;AAAA,YACX;AAAC;AAGD,gBAAI,QAAQ,OAAO,uBAAuB,MAAO,QAAQ,OAAyC,WAAW,QAAQ;AACjH,oBAAM,yBAAyB,4BAA4B;AAC3D,kBAAI,2BAA2B,SAAS,qBAAqB,OAAO;AAChE,uBAAO;AAAA,cACX;AAEA,iCAAmB;AACnB,qBAAO;AAAA,YACX;AAEA,mBAAO;AAAA,UACX,CAAC;AAAA,QACL;AAAA;AAAA,QAEA,KAAK,UAAU,aAAa,KAAK,KAAK,CAAC,CAAC;AAAA,MAC5C,EAAE,KAAK,aAAa,GAAG,CAAC,EAAE,UAAU,MAAM,uBAAuB,CAAC;AAAA,IACtE;AAEA,2BAAuB;AAEvB,WAAO;AAAA,EACX;AAAA,EAEQ,aACJ,WACA,OACA,OACA,QACA,UAC8B;AAC9B,UAAM,UAA6B,CAAC;AACpC,UAAM,YAAY,UAAU,WAAW;AAEvC,UAAM,QAAQ,MAAM,0CACd,UAAU,kBACV,UAAU,cACd,KAAK,SAAS,EAAE,KAAK;AAEvB,eAAW,SAAS,MAAM;AACtB,YAAM,EAAE,KAAK,KAAK,SAAS,SAAS,OAAO,SAAS,IAAI;AAExD,WAAI,qCAAW,KAAK,SAAQ,CAAC,UAAU;AACnC;AAAA,MACJ;AAAC;AAED,UAAI,UAAU,eAAe,GAAG,GAAG;AAC/B;AAAA,MACJ;AAEA,YAAM,EAAE,KAAK,aAAa,UAAU,IAAI,QAAQ,WAAW,KAAK,KAAK,OAAO,QAAQ;AACpF,UAAI,KAAK;AACL,cAAM,SAA0B;AAAA,UAC5B,UAAU;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA,OAAO;AAAA,YACH;AAAA,YACA,OAAO;AAAA,cACH,UAAU;AAAA,cACV,aAAa;AAAA,cACb,WAAW,OAAO,4BAAW,KAAK;AAAA,cAClC,QAAQ,OAAO,4BAAW,KAAK;AAAA,YACnC;AAAA,UACJ;AAAA,QACJ;AAEA,gBAAQ,KAAK,MAAM;AAAA,MACvB;AAAA,IACJ;AAEA,WAAO,EAAE,QAAQ;AAAA,EACrB;AAAA,EAEQ,kBACJ,WACA,YACA,OACA,QAC8B;AAC9B,UAAM,EAAE,cAAc,IAAI;AAE1B,UAAM,SAAS,oCAAsC,kCAAkC;AACvF,UAAM,YAAY,oBAAI,IAAY;AAClC,UAAM,QAAQ,WACT,IAAI,CAAC,cAAc,KAAK,aAAa,WAAW,OAAO,UAAU,OAAO,QAAQ,CAAC,KAAK,QAAQ;AAC3F,YAAM,MAAM,GAAG,GAAG,IAAI,GAAG;AACzB,UAAI,UAAU,IAAI,GAAG,EAAG,QAAO;AAC/B,gBAAU,IAAI,GAAG;AACjB,aAAO;AAAA,IACX,CAAC,EAAE,OAAO,EACT,KAAK,EACL,KAAK,CAAC,GAAG,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,KAAK,IAAI,KAAK,CAAC;AAEjE,WAAO,EAAE,SAAS,MAAM;AAAA,EAE5B;AAAA;AAAA,EAGQ,iBAAiB,WAAsB,OAAmB,QAAgD;AAC9G,UAAM,WAAW,UAAU,YAAY;AACvC,UAAM,WAAW,UAAU,eAAe;AAC1C,UAAM,QAAgB,EAAE,UAAU,GAAG,aAAa,GAAG,QAAQ,WAAW,GAAG,WAAW,WAAW,EAAE;AAEnG,WAAO,KAAK,aAAa,WAAW,OAAO,OAAO,MAAM;AAAA,EAC5D;AAAA,EAEQ,qBAA2B;AAtcvC;AAucQ,SAAK,iBAAiB,QAAQ,CAAC,UAAU;AAvcjD,UAAAC;AAwcY,OAAAA,MAAA,MAAM,SAAS,MAAf,gBAAAA,IAAkB;AAClB,YAAM,QAAQ;AAAA,IAClB,CAAC;AAED,SAAK,mBAAmB,CAAC;AAEzB,eAAK,2BAAL,mBAA6B;AAC7B,SAAK,yBAAyB;AAAA,EAClC;AAAA,EAEQ,uBAA6B;AAldzC;AAmdQ,SAAK,mBAAmB;AAExB,UAAM,YAAW,UAAK,6BAA6B,WAAW,MAA7C,mBAAgD;AACjE,QAAI,CAAC,UAAU;AACX;AAAA,IACJ;AAEA,UAAM,SAAS,KAAK,UAAU,UAAU;AACxC,UAAM,gBAAgB,KAAK,sBAAsB,cAAc,MAAM;AACrE,QAAI,iBAAiB,MAAM;AACvB;AAAA,IACJ;AAEA,UAAM,EAAE,MAAM,IAAI;AAClB,UAAM,UAAU,KAAK;AAErB,UAAM,wBAAwB,KAAK,cAAc,gBAAgB,EAAE;AACnE,UAAM,QAAQ,IAAI,SAAS,qBAAqB,EAAE,MAAM;AACxD,UAAM,YAAY,KAAK,UAAU,eAAe;AAChD,QAAI,CAAC,WAAW;AACZ;AAAA,IACJ;AAEA,UAAM,gBAAgB,UAAU,WAAW;AAC3C,UAAM,kBAAkB,QAAQ,OAAO,CAAC,UAAU,MAAM,MAAM,cAAc,aAAa,EAAE,IAAI,CAAC,MAAM,UAAU;AAC5G,YAAM,EAAE,aAAa,UAAU,WAAW,OAAO,IAAI,KAAK,MAAM;AAChE,YAAM,gBAAgB,eAAe,UAAU,aAAa,OAAO,QAAQ;AAC3E,YAAM,cAAc,eAAe,QAAQ,WAAW,OAAO,QAAQ;AACrE,YAAM,EAAE,QAAQ,OAAO,IAAI;AAC3B,YAAM,EAAE,MAAM,KAAK,IAAI;AAEvB,YAAM,YAAY,CAAC,UAAU,iBAAiB,QAAQ;AACtD,YAAM,eAAe,CAAC,UAAU,cAAc,WAAW;AAEzD,YAAM,gBAAgB,aAAa;AACnC,YAAM,QAAQ,eAAe,IAAI,OAAO;AACxC,YAAM,SAAS,YAAY,IAAI,OAAO;AAEtC,YAAM,QAA8C;AAAA,QAChD,MAAM;AAAA,QACN,KAAK;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS;AAAA,QACT;AAAA,QACA,QAAQ;AAAA,MACZ;AAEA,aAAO,IAAI,+BAA+B,kBAAkB,KAAK,IAAI,KAAK;AAAA,IAC9E,CAAC;AAED,UAAM,WAAW,eAAe;AAChC,SAAK,mBAAmB;AAExB,UAAM,UAAU;AAAA,EACpB;AAAA,EAEQ,6BAA6B,YAA2B;AA7gBpE;AA+gBQ,eAAK,2BAAL,mBAA6B,cAAc,EAAE,WAAW,MAAM;AAC9D,SAAK,yBAAyB;AAE9B,QAAI,eAAe,QAAW;AAC1B,YAAM,QAAQ,KAAK,iBAAiB,UAAU;AAC9C,UAAI,CAAC,OAAO;AACR;AAAA,MACJ;AAEA,WAAK,yBAAyB;AAC9B,YAAM,cAAc,EAAE,WAAW,KAAK,CAAC;AAAA,IAC3C;AAAA,EACJ;AAAA,EAEQ,kBAAkB;AACtB,WAAO,eAAe,KAAK,wBAAwB,KAAK,qBAAqB;AAAA,EACjF;AAAA,EAEQ,YAAY,OAA8B;AAjiBtD;AAkiBQ,UAAM,YAAY,MAAM,MAAM;AAC9B,QAAI,gBAAc,UAAK,UAAU,eAAe,MAA9B,mBAAiC,eAAc;AAC7D,WAAK,gBAAgB,eAAe,4BAA4B,IAAI,EAAE,QAAQ,KAAK,UAAU,UAAU,GAAG,UAAU,GAAyC,EAAE,iBAAiB,KAAK,CAAC;AAAA,IAC1L;AAEA,SAAK,gBAAgB;AAAA,MACjB,oBAAoB;AAAA,MACpB,EAAE,OAAO,MAAM,MAAM,MAAM;AAAA,MAC3B,EAAE,iBAAiB,KAAK;AAAA,IAC5B;AAAA,EACJ;AAAA,EAEQ,+BAA+B,WAAsC,YAAuC;AAChH,QAAI,CAAC,UAAW,QAAO;AAEvB,UAAM,EAAE,WAAW,cAAc,IAAI,UAAU;AAC/C,UAAM,EAAE,aAAa,iBAAiB,UAAU,aAAa,IAAI,UAAU,MAAM;AACjF,UAAM,QAAQ,WAAW,UAAU,CAAC,UAAU;AAC1C,UAAI,kBAAkB,MAAM,MAAM,WAAW;AACzC,eAAO;AAAA,MACX;AAEA,YAAM,EAAE,aAAa,SAAS,IAAI,MAAM,MAAM;AAC9C,aAAO,gBAAgB,mBAAmB,aAAa;AAAA,IAC3D,CAAC;AAED,WAAO,QAAQ,KAAK,QAAQ,IAAI;AAAA,EACpC;AAAA,EAES,gBAAgB,QAAkD;AA/jB/E;AAgkBQ,QAAI,CAAC,KAAK,SAAS,QAAQ;AACvB,aAAO;AAAA,IACX;AAEA,UAAM,QAAO,sCAAQ,SAAR,YAAgB;AAC7B,UAAM,iBAAgB,sCAAQ,kBAAR,YAAyB;AAC/C,UAAM,WAAU,sCAAQ,YAAR,YAAmB;AACnC,UAAM,mBAAkB,sCAAQ,oBAAR,YAA2B;AAEnD,UAAM,cAAc,KAAK,eAAe,MAAM,eAAe,eAAe;AAC5E,QAAI,aAAa;AACb,YAAM,CAAC,OAAO,KAAK,IAAI;AACvB,WAAK,mBAAmB,QAAQ;AAEhC,UAAI,KAAK,OAAQ,iCAA8B;AAC3C,aAAK,wBAAwB,KAAK,oBAAoB,IAAI,MAAM,MAAM,SAAS,EAAG,UAAU,CAAC,MAAM,MAAM,KAAK;AAAA,MAClH,OAAO;AACH,aAAK,wBAAwB;AAAA,MACjC;AAEA,UAAI,CAAC,QAAS,MAAK,YAAY,KAAK;AACpC,YAAI,UAAK,UAAU,eAAe,MAA9B,mBAAiC,kBAAiB,MAAM,MAAM,WAAW;AACzE,aAAK,6BAA6B,KAAK,qBAAqB;AAAA,MAChE;AAEA,aAAO;AAAA,IACX;AAEA,SAAK,mBAAmB;AACxB,SAAK,6BAA6B;AAClC,WAAO;AAAA,EACX;AAAA,EAES,oBAAoB,QAAkD;AAjmBnF;AAkmBQ,QAAI,CAAC,KAAK,SAAS,QAAQ;AACvB,aAAO;AAAA,IACX;AAEA,UAAM,QAAO,sCAAQ,SAAR,YAAgB;AAC7B,UAAM,iBAAgB,sCAAQ,kBAAR,YAAyB;AAC/C,UAAM,WAAU,sCAAQ,YAAR,YAAmB;AACnC,UAAM,mBAAkB,sCAAQ,oBAAR,YAA2B;AAEnD,UAAM,cAAc,KAAK,mBAAmB,MAAM,eAAe,eAAe;AAChF,QAAI,aAAa;AACb,YAAM,CAAC,OAAO,KAAK,IAAI;AACvB,WAAK,mBAAmB,QAAQ;AAEhC,UAAI,KAAK,OAAQ,iCAA8B;AAC3C,aAAK,wBAAwB,KAAK,oBAAoB,IAAI,MAAM,MAAM,SAAS,EAAG,UAAU,CAAC,MAAM,MAAM,KAAK;AAAA,MAClH,OAAO;AACH,aAAK,wBAAwB;AAAA,MACjC;AAEA,UAAI,CAAC,QAAS,MAAK,YAAY,KAAK;AACpC,YAAI,UAAK,UAAU,eAAe,MAA9B,mBAAiC,kBAAiB,MAAM,MAAM,WAAW;AACzE,aAAK,6BAA6B,KAAK,qBAAqB;AAAA,MAChE;AAEA,aAAO;AAAA,IACX;AAEA,SAAK,mBAAmB;AACxB,SAAK,6BAA6B;AAClC,WAAO;AAAA,EACX;AAAA,EAEQ,mBAAmB,OAAO,OAAO,gBAAgB,OAAO,kBAAkB,OAAyC;AAnoB/H;AAsoBQ,QAAI,KAAK,cAAc;AACnB,YAAM,oBAAoB,KAAK,SAAS,UAAU,CAAC,UAAU,UAAU,KAAK,YAAY;AACxF,UAAI,eAAe;AACf,eAAO,CAAC,KAAK,cAAc,iBAAiB;AAAA,MAChD;AAEA,YAAM,iBAAiB,oBAAoB;AAC3C,UAAI,CAAC,QAAQ,iBAAiB,GAAG;AAC7B,eAAO;AAAA,MACX;AAEA,YAAM,SAAS,KAAK,SAAS;AAC7B,YAAM,UAAU,iBAAiB,UAAU;AAC3C,aAAO,CAAC,KAAK,SAAS,MAAM,GAAG,MAAM;AAAA,IACzC;AAGA,UAAM,gBAAgB,KAAK,oBAAoB,wBAAwB;AACvE,QAAI,mBAAmB,CAAC,eAAe;AACnC,YAAM,YAAY,KAAK,SAAS,SAAS;AACzC,aAAO,CAAC,KAAK,SAAS,SAAS,GAAG,SAAS;AAAA,IAC/C;AAIA,QAAI,KAAK,OAAQ,iCAA8B;AAC3C,aAAO,KAAK,0BAA0B,KAAK,UAAU,cAAc,KAAK;AAAA,IAC5E;AAEA,UAAM,kBAAiB,UAAK,UAAU,eAAe,MAA9B,mBAAiC;AACxD,QAAI,CAAC,gBAAgB;AACjB,aAAO;AAAA,IACX;AAEA,UAAM,wBAAwB,KAAK,oCAAoC,gBAAgB,IAAI;AAC3F,QAAI,CAAC,uBAAuB;AACxB,aAAO;AAAA,IACX;AAEA,WAAO,KAAK,0BAA0B,KAAK,oBAAoB,IAAI,qBAAqB,GAAI,cAAc,KAAK;AAAA,EACnH;AAAA,EAEQ,eAAe,OAAO,OAAO,gBAAgB,OAAO,kBAAkB,OAAyC;AAhrB3H;AAmrBQ,QAAI,KAAK,cAAc;AACnB,YAAM,oBAAoB,KAAK,SAAS,UAAU,CAAC,UAAU,UAAU,KAAK,YAAY;AACxF,UAAI,eAAe;AACf,eAAO,CAAC,KAAK,cAAc,iBAAiB;AAAA,MAChD;AAEA,YAAM,iBAAiB,oBAAoB;AAC3C,YAAM,SAAS,KAAK,SAAS;AAC7B,UAAI,CAAC,QAAQ,kBAAkB,QAAQ;AACnC,eAAO;AAAA,MACX;AAEA,YAAM,SAAS,iBAAiB;AAChC,aAAO,CAAC,KAAK,SAAS,MAAM,GAAG,MAAM;AAAA,IACzC;AAMA,UAAM,OAAO,KAAK,oBAAoB,wBAAwB;AAC9D,QAAI,mBAAmB,CAAC,MAAM;AAC1B,aAAO,CAAC,KAAK,SAAS,CAAC,GAAG,CAAC;AAAA,IAC/B;AAEA,QAAI,KAAK,OAAQ,iCAA8B;AAC3C,aAAO,KAAK,sBAAsB,KAAK,UAAU,KAAK,OAAO,aAAa;AAAA,IAC9E;AAEA,UAAM,kBAAiB,UAAK,UAAU,eAAe,MAA9B,mBAAiC;AACxD,QAAI,CAAC,gBAAgB;AACjB,aAAO;AAAA,IACX;AAEA,UAAM,wBAAwB,KAAK,gCAAgC,gBAAgB,IAAI;AACvF,QAAI,CAAC,uBAAuB;AACxB,aAAO;AAAA,IACX;AAEA,WAAO,KAAK,sBAAsB,KAAK,oBAAoB,IAAI,qBAAqB,GAAI,KAAK,KAAK;AAAA,EACtG;AAAA,EAEQ,oCAAoC,kBAA0B,OAAO,OAAsB;AAC/F,UAAM,uBAAuB,KAAK,UAAU,eAAe;AAC3D,UAAM,oBAAoB,qBAAqB,UAAU,CAAC,UAAU,UAAU,gBAAgB;AAC9F,UAAM,qBAAqB,OACrB,OAAO,sBAAsB,oBAAoB,CAAC,IAClD,qBAAqB,MAAM,GAAG,oBAAoB,CAAC;AACzD,UAAM,QAAQ,mBAAmB,SAAS,CAAC,cAAc,KAAK,oBAAoB,IAAI,SAAS,CAAC;AAChG,WAAO,wBAAS;AAAA,EACpB;AAAA,EAEQ,gCAAgC,kBAA0B,OAAO,OAAsB;AAC3F,UAAM,uBAAuB,KAAK,UAAU,eAAe;AAC3D,UAAM,oBAAoB,qBAAqB,UAAU,CAAC,UAAU,UAAU,gBAAgB;AAC9F,UAAM,qBAAqB,OACrB,OAAO,sBAAsB,iBAAiB,IAC9C,qBAAqB,MAAM,iBAAiB;AAClD,UAAM,QAAQ,mBAAmB,KAAK,CAAC,cAAc,KAAK,oBAAoB,IAAI,SAAS,CAAC;AAC5F,WAAO,wBAAS;AAAA,EACpB;AAAA,EAEQ,sBAAsB,SAA4B,OAAe,gBAAgB,OAAkC;AACvH,UAAM,YAAY,KAAK,OAAQ;AAC/B,QAAI,QAAQ,QAAQ,UAAU,CAACC,WAAU;AACrC,YAAM,aAAaA,OAAM,MAAM;AAC/B,YAAM,WAAW,YAAY,gCAAgC,OAAO,UAAU,IAAI,mCAAmC,OAAO,UAAU;AACtI,UAAI,CAAC,UAAU;AACX,eAAO;AAAA,MACX;AAEA,YAAM,SAAS,eAAe,OAAO,UAAU;AAC/C,aAAO,gBAAgB,SAAS,CAAC;AAAA,IACrC,CAAC;AAED,QAAI,UAAU,IAAI;AACd,cAAQ,QAAQ,SAAS;AAAA,IAC7B;AAEA,UAAM,QAAQ,QAAQ,KAAK;AAC3B,WAAO,CAAC,OAAO,KAAK,SAAS,UAAU,CAAC,MAAM,MAAM,KAAK,CAAC;AAAA,EAC9D;AAAA,EAEQ,0BAA0B,SAA4B,OAAe,gBAAgB,OAAkC;AAC3H,UAAM,YAAY,KAAK,OAAQ;AAC/B,QAAI,QAAQ,KAAK,SAAS,cAAc,CAACA,WAAU;AAC/C,YAAM,aAAaA,OAAM,MAAM;AAC/B,YAAM,WAAW,YAAY,gCAAgC,OAAO,UAAU,IAAI,mCAAmC,OAAO,UAAU;AACtI,UAAI,CAAC,UAAU;AACX,eAAO;AAAA,MACX;AAEA,YAAM,SAAS,eAAe,OAAO,UAAU;AAC/C,aAAO,gBAAgB,SAAS,CAAC;AAAA,IACrC,CAAC;AAED,QAAI,UAAU,IAAI;AACd,cAAQ;AAAA,IACZ;AAEA,UAAM,QAAQ,QAAQ,KAAK;AAC3B,WAAO,CAAC,OAAO,KAAK,SAAS,UAAU,CAAC,MAAM,MAAM,KAAK,CAAC;AAAA,EAC9D;AAAA,EAEA,MAAM,QAAQ,eAAyC;AACnD,QAAI,KAAK,kBAAkB,KAAK,CAAC,KAAK,gBAAgB,CAAC,KAAK,UAAU,CAAC,KAAK,aAAa,aAAa;AAClG,aAAO;AAAA,IACX;AAEA,UAAM,QAAQ,KAAK,aAAa;AAChC,UAAM,kBAAkB,KAAK,UAAU,kBAAkB,KAAK,aAAa,MAAM,SAAS;AAC1F,UAAM,aAAa,KAAK;AAAA,MACpB,KAAK;AAAA,MACL;AAAA,MACA,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO;AAAA,MACZ;AAAA,MACA,KAAK,OAAO,gBAAgB,MAAM;AAAA,IACtC;AAGA,UAAM,SAAuC;AAAA,MACzC,QAAQ,KAAK,aAAa;AAAA,MAC1B,WAAW,MAAM;AAAA,MACjB,OAAO;AAAA,QACH,CAAC,MAAM,MAAM,QAAQ,GAAG;AAAA,UACpB,CAAC,MAAM,MAAM,WAAW,GAAG;AAAA,QAC/B;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO,KAAK,gBAAgB,eAAe,sBAAsB,IAAI,MAAM;AAAA,EAC/E;AAAA,EAEA,MAAM,WAAW,eAAmD;AAChE,QAAI,KAAK,kBAAkB,KAAK,CAAC,KAAK,QAAQ;AAC1C,aAAO,EAAE,SAAS,GAAG,SAAS,EAAE;AAAA,IACpC;AAEA,UAAM,SAAS,KAAK,UAAU,UAAU;AAExC,UAAM,EAAE,YAAY,eAAe,OAAO,IAAI,KAAK;AACnD,UAAM,uBAAuB;AAC7B,UAAM,cAAc,gBAAgB,MAAM;AAE1C,UAAM,eAAoC,CAAC;AAC3C,UAAM,qBAAqB,QAAQ,KAAK,SAAS,OAAO,CAAC,MAAM,EAAE,WAAW,GAAG,CAAC,UAAU,MAAM,MAAM,SAAS;AAC/G,uBAAmB,QAAQ,CAAC,SAAS,cAAc;AAC/C,YAAM,SAAS,IAAI,aAAwB;AAC3C,YAAM,YAAY,KAAK,UAAU,kBAAkB,SAAS;AAE5D,cAAQ,QAAQ,CAAC,UAAU;AACvB,cAAM,EAAE,aAAa,SAAS,IAAI,MAAM,MAAM;AAC9C,cAAM,cAAc,KAAK,qBAAqB,OAAO,WAAW,sBAAsB,YAAY,eAAgB,WAAW;AAC7H,YAAI,aAAa;AACb,iBAAO,SAAS,UAAU,aAAa,WAAW;AAAA,QACtD;AAAA,MACJ,CAAC;AAED,mBAAa,KAAK;AAAA,QACd,OAAO,QAAQ;AAAA,QACf;AAAA,QACA,OAAO,OAAO,UAAU;AAAA,MAC5B,CAAC;AAAA,IACL,CAAC;AAED,QAAI,CAAC,cAAc;AACf,aAAO,EAAE,SAAS,GAAG,SAAS,EAAE;AAAA,IACpC;AAEA,WAAO,KAAK,gBAAgB,eAAe,oBAAoB,IAAI;AAAA,MAC/D;AAAA,MACA;AAAA,IACJ,CAA+B;AAAA,EACnC;AAAA,EAEQ,qBACJ,OACA,WACA,sBACA,YACA,eACA,aACmB;AA12B3B;AA22BQ,UAAM,QAAQ,MAAM,MAAM;AAC1B,UAAM,EAAE,UAAU,YAAY,IAAI;AAElC,UAAM,iBAAiB,UAAU,WAAW,UAAU,WAAW;AAIjE,QAAI,MAAM,WAAW;AACjB,UAAI,CAAC,sBAAsB;AACvB,eAAO;AAAA,MACX;AAEA,YAAMC,cAAa,eAAgB,EAAG,QAAQ,IAAI,OAAO,aAAa,UAAU,GAAG,WAAW,GAAG,aAAa;AAC9G,aAAO,EAAE,GAAGA,aAAY,GAAG,KAAK;AAAA,IACpC;AAGA,UAAM,aAAa,CAAC,GAAC,oBAAe,MAAf,mBAAkB;AACvC,QAAI,YAAY;AACZ,YAAM,iBAAiB,MAAM,UAAU,eAAe,CAAE;AACxD,4BAAsB,eAAe,MAAO,YAAY,eAAe,KAAK,OAAQ,aAAa;AACjG,aAAO,EAAE,GAAG,eAAe;AAAA,IAC/B;AAGA,UAAM,aAAa,eAAe,EAAG,SAAS,EAAE,QAAQ,IAAI,OAAO,aAAa,UAAU,GAAG,WAAW,GAAG,aAAc;AACzH,WAAO,EAAE,GAAG,WAAW;AAAA,EAC3B;AACJ;AA7yBa,iBAAN;AAAA,EAiCE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,0BAAO,YAAY;AAAA,EACnB,0BAAO,uBAAuB;AAAA,GAtC1B;AA+yBb,SAAS,aAAa,MAAc;AAChC,SAAO,KAAK,QAAQ,4BAA4B,MAAM;AAC1D;AAMA,IAAM,4BAAN,cAAwC,WAA2C;AAAA,EAM/E,YAC6C,wBACD,uBACL,WACrC;AACE,UAAM;AAJmC;AACD;AACL;AALvC;AAAA;AAAA;AAAA,wBAAiB,uBAAsB,oBAAI,IAA4B;AAAA,EAQvE;AAAA,EAEA,MAAM,KAAK,OAA8C;AACrD,SAAK,WAAW;AAEhB,UAAM,eAAe,KAAK,uBAAuB,mBAA6B,EAAmB,YAAY;AAC7G,UAAM,cAAc,KAAK,iBAAiB,KAAK;AAC/C,UAAM,aAAa,aAAa,IAAI,CAAC,aAAa;AAC9C,YAAM,yBAAyB,KAAK,sBAAsB,cAAc,SAAS,UAAU,CAAC,EAAG,KAAK,2BAA2B;AAC/H,YAAM,YAAY,KAAK,UAAU,eAAe,gBAAgB,UAAU,sBAAsB;AAChG,WAAK,oBAAoB,IAAI,SAAS,UAAU,GAAG,SAAS;AAC5D,gBAAU,MAAM,WAAW;AAC3B,aAAO;AAAA,IACX,CAAC;AAED,WAAO;AAAA,EACX;AAAA,EAEA,YAAkB;AACd,SAAK,WAAW;AAAA,EACpB;AAAA,EAEQ,aAAmB;AACvB,SAAK,oBAAoB,QAAQ,CAAC,UAAU,MAAM,QAAQ,CAAC;AAC3D,SAAK,oBAAoB,MAAM;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOQ,iBAAiB,OAAyC;AAC9D,QAAI,aAAa,MAAM,gBACjB,MAAM,aACN,MAAM,WAAW,YAAY;AAEnC,iBAAa,WAAW,KAAK;AAE7B,WAAO;AAAA,MACH,GAAG;AAAA,MACH;AAAA,IACJ;AAAA,EACJ;AACJ;AAxDM,4BAAN;AAAA,EAOS;AAAA,EACA;AAAA,EACA,0BAAO,QAAQ;AAAA,GATlB;AAiEN,IAAM,uBAA4C,EAAE,KAAK,OAAO,aAAa,OAAO,WAAW,OAAO,SAAS,KAAK;AAU7G,SAAS,QAAQ,WAAsB,KAAa,KAAa,OAAmB,UAA0C;AACjI,QAAM,EAAE,OAAO,IAAI;AACnB,QAAM,gBAAgB;AAEtB,QAAM,UAAU,UAAU,WAAW,KAAK,GAAG;AAC7C,uBAAqB,UAAU;AAG/B,QAAM,aAAa,CAAC,EAAC,mCAAS;AAC9B,MAAI,YAAY;AACZ,yBAAqB,YAAY;AAGjC,QAAI,eAAe;AACf,YAAM,eAAe,cAAc,EAAE,GAAG,QAAQ,EAAG,GAAG,KAAK;AAC3D,UAAI,cAAc;AACd,6BAAqB,MAAM;AAC3B,6BAAqB,cAAc;AACnC,eAAO;AAAA,MACX;AAEA,2BAAqB,MAAM;AAC3B,2BAAqB,cAAc;AACnC,aAAO;AAAA,IACX;AAGA,yBAAqB,cAAc;AACnC,QAAI,cAAc,UAAU,KAAK,GAAG;AAChC,2BAAqB,MAAM;AAAA,IAC/B,OAAO;AACH,2BAAqB,MAAM;AAAA,IAC/B;AAEA,WAAO;AAAA,EACX;AAGA,uBAAqB,YAAY;AACjC,MAAI,CAAC,cAAc,UAAU,KAAK,GAAG;AACjC,yBAAqB,MAAM;AAC3B,yBAAqB,cAAc;AAAA,EACvC,WAAW,CAAC,SAAS;AACjB,yBAAqB,MAAM;AAC3B,yBAAqB,cAAc;AAAA,EACvC,OAAO;AACH,yBAAqB,MAAM;AAC3B,yBAAqB,cAAc;AAAA,EACvC;AAEA,SAAO;AACX;AAEA,SAAS,cAAc,UAAqB,OAA4B;AACpE,MAAI,QAAQ,iBAAiB,QAAQ;AACrC,MAAI,CAAC,OAAO;AACR,WAAO;AAAA,EACX;AAEA,MAAI,MAAM,qBAAqB;AAE3B,YAAQ,8BAA8B,KAAK;AAC3C,WAAO,MAAM,gBACP,UAAU,MAAM,aAChB,MAAM,YAAY,MAAM,MAAM;AAAA,EACxC;AACA,SAAO,MAAM,gBACP,MAAM,QAAQ,MAAM,UAAU,IAAI,KAClC,MAAM,YAAY,EAAE,QAAQ,MAAM,UAAU,IAAI;AAC1D;AAEA,SAAS,iBAAiB,MAAmC;AAniC7D;AAoiCI,QAAM,YAAW,8CAAM,MAAN,mBAAS,SAAT,mBAAe,eAAf,YAA6B,6BAAM;AAEpD,MAAI,OAAO,aAAa,UAAU;AAC9B,WAAO,GAAG,QAAQ;AAAA,EACtB;AAEA,MAAI,OAAO,aAAa,WAAW;AAC/B,WAAO,WAAW,MAAM;AAAA,EAC5B;AAEA,SAAO;AACX;AAMA,SAAS,8BAA8B,OAAuB;AAC1D,SAAO,MAAM,QAAQ,QAAQ,EAAE,EAAE,QAAQ,QAAQ,EAAE;AACvD;;;AC/hCA,IAAM,OAAO;AAGN,IAAM,gCAAN,cAA4C,OAAO;AAAA,EAItD,YACqB,UAAmD,qBAC/B,WACJ,gBACnC;AACE,UAAM;AAJW;AACoB;AACJ;AAKjC,UAAM,EAAE,GAAG,KAAK,IAAI;AAAA,MAChB,CAAC;AAAA,MACD;AAAA,MACA,KAAK;AAAA,IACT;AACA,SAAK,eAAe,UAAU,uCAAuC,IAAI;AAAA,EAC7E;AAAA,EAES,aAAmB;AACxB,IAAC,CAAC,CAAC,2BAA2B,CAAC,EAAmB,QAAQ,CAAC,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC;AAAA,EAC1F;AAAA,EAES,WAAiB;AACtB,SAAK,UAAU,IAAI,2BAA2B;AAAA,EAClD;AACJ;AA1BI,cADS,+BACO,cAAa;AAC7B,cAFS,+BAEO,QAAO,EAAmB;AAFjC,gCAAN;AAAA,EADN,YAAY,oBAAoB,oBAAoB,uBAAuB;AAAA,EAOnE,0BAAO,QAAQ;AAAA,EACf;AAAA,GAPI;;;ACTN,IAAM,mCAAmC;AAEzC,IAAMC,gBAAe,OAAO,gCAAgC;AAM5D,IAAMC,uBAAiD,CAAC;;;ACP/D,mBAAgC;;;ACnBhC,IAAO,uBAAQ;AAAA,EACb,wBAAwB;AAAA,EACxB,2BAA2B;AAAA,EAC3B,4BAA4B;AAAA,EAC5B,sBAAsB;AAAA,EACtB,gBAAgB;AAAA,EAChB,oBAAoB;AAAA,EACpB,uBAAuB;AAAA,EACvB,yBAAyB;AAAA,EACzB,4BAA4B;AAAA,EAC5B,uBAAuB;AAAA,EACvB,2BAA2B;AAAA,EAC3B,8BAA8B;AAAA,EAC9B,6BAA6B;AAAA,EAC7B,kCAAkC;AAAA,EAClC,0CAA0C;AAAA,EAC1C,sCAAsC;AAAA,EACtC,iCAAiC;AAAA,EACjC,mCAAmC;AAAA,EACnC,iBAAiB;AAAA,EACjB,yBAAyB;AAAA,EACzB,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,qBAAqB;AAAA,EACrB,yBAAyB;AAAA,EACzB,6BAA6B;AAC/B;;;ADGY;AALL,IAAM,gBAAgB,CAAC,UAA+B;AACzD,QAAM,CAAC,QAAQ,SAAS,QAAI,uBAAiB,GAAG;AAChD,QAAM,gBAAgB,cAAc,aAAa;AACjD,SACI,6CAAC,SAAI,WAAW,qBAAO,sBACnB;AAAA,gDAAC,SAAI,WAAU,uBAAuB,wBAAc,EAAE,uCAAuC,GAAE;AAAA,IAC/F;AAAA,MAAC;AAAA;AAAA,QACG,WAAW,qBAAO;AAAA,QAClB,OAAO;AAAA,QACP,WAAU;AAAA,QACV,UAAU,CAAC,UAAU;AACjB,oBAAU,KAAe;AACzB,gBAAM,SAAS,KAAe;AAAA,QAClC;AAAA,QAEA;AAAA;AAAA,YAAC;AAAA;AAAA,cACG,OAAM;AAAA,cAEL,wBAAc,EAAE,qCAAqC;AAAA;AAAA,UAC1D;AAAA,UACA,4CAAC,SAAM,OAAM,KACR,wBAAc,EAAE,sCAAsC,GAC3D;AAAA;AAAA;AAAA,IACJ;AAAA,KACJ;AAER;;;AEgHuB,IAAAC,sBAAA;AA/GvB,IAAM,qBAAqB;AAAA,EACvB,aAAa;AAAA,EACb,aAAa;AAAA,EACb,cAAc;AAAA,EACd,eAAe;AACnB;AAEO,IAAM,sBAAN,cAAkC,WAAW;AAAA,EAGhD,YAC6C,wBACP,iBACJ,aACoB,0BACN,oBACJ,gBACN,iBACpC;AACE,UAAM;AARmC;AACP;AACJ;AACoB;AACN;AACJ;AACN;AATtC,wBAAiB,qBAAoB,IAAI,gBAA4C,IAAI;AACzF,wBAAS,oBAAmB,KAAK,kBAAkB,aAAa;AAAA,EAWhE;AAAA,EAEA,MAAM,oBAAoB,KAAc,QAAiB,oBAA2D;AAChH,UAAM,WAAW,sBAAsB,MAAM,KAAK,oBAAoB,MAAM;AAC5E,QAAI,CAAC,UAAU;AACX,aAAO;AAAA,IACX;AAEA,UAAM,QAAQ,KAAK,OAAO,QAAQ;AAClC,QAAI,CAAC,OAAO;AACR,aAAO;AAAA,IACX;AAEA,UAAM,aAA0B;AAAA,MAC5B,YAAY,CAAC;AAAA,QACT,MAAM;AAAA,QACN,UAAU,SAAS;AAAA,MACvB,CAAC;AAAA,MACD,OAAO,SAAS;AAAA,IACpB;AACA,SAAK,mBAAmB,UAAU,YAAY,SAAS,QAAQ,SAAS,SAAS;AACjF,WAAO;AAAA,EACX;AAAA,EAEA,MAAM,uBAAuB;AACzB,UAAM,WAAW,MAAM,KAAK,oBAAoB;AAChD,QAAI,CAAC,UAAU;AACX,aAAO;AAAA,IACX;AAEA,UAAM,QAAQ,KAAK,OAAO,QAAQ;AAClC,QAAI,CAAC,OAAO;AACR,aAAO;AAAA,IACX;AAGA,SAAK,oBAAoB,QAAQ;AACjC,WAAO;AAAA,EACX;AAAA,EAEA,kBAAkB;AACd,WAAO,KAAK,kBAAkB,SAAS;AAAA,EAC3C;AAAA,EAEA,UAAU,UAAmB;AArHjC;AAsHQ,UAAM,YAAW,UAAK,gBAAgB,MAArB,mBAAwB;AACzC,QAAI,CAAC,UAAU;AACX,aAAO,CAAC;AAAA,IACZ;AAEA,UAAM,EAAE,QAAQ,WAAW,MAAM,IAAI;AACrC,UAAM,aAAa,UAAK,uBAAuB,QAAQ,MAAM,MAA1C,mBAA0D,kBAAkB;AAC/F,QAAI,CAAC,WAAW;AACZ,aAAO,CAAC;AAAA,IACZ;AAEA,UAAM,gBAAgB,mBAAmB,KAAK,cAAc;AAE5D,WAAO,MAAM,KAAK,EAAE,QAAQ,MAAM,YAAY,MAAM,cAAc,EAAE,GAAG,CAAC,GAAG,MAAM;AAnIzF,UAAAC;AAoIY,YAAM,aAAYA,MAAA,UAAU,QAAQ,MAAM,UAAU,IAAI,MAAM,WAAW,MAAvD,gBAAAA,IAA0D;AAC5E,aAAO;AAAA,QACH,OAAO,IAAI,MAAM;AAAA,QACjB,OAAO,WACH,GAAG,gCAAa,cAAc,IAAI,MAAM,WAAW,CAAC,KACpD,cAAc,IAAI,MAAM,WAAW;AAAA,MAC3C;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EAEA,aAAa,QAAgB,WAAmB,OAAe;AA9InE;AA+IQ,UAAM,aAAa,UAAK,uBAAuB,QAAQ,MAAM,MAA1C,mBAA0D,kBAAkB;AAC/F,QAAI,CAAC,WAAW;AACZ;AAAA,IACJ;AACA,UAAM,+BAA+B;AAAA,MACjC;AAAA,MACA;AAAA,MAEA,YAAY,CAAC,EAAE,OAAO,SAAS,mBAAmB,OAAO,SAAS,GAAG,OAAO,KAAK,CAAC;AAAA,IAEtF;AACA,SAAK,gBAAgB,eAAe,uBAAuB,IAAI,4BAA4B;AAAA,EAC/F;AAAA,EAEA,MAAM,eAAe,SAAmC;AACpD,WAAO,MAAM,KAAK,gBAAgB,QAAQ;AAAA,MACtC,IAAI;AAAA,MACJ,OAAO;AAAA,QACH,OAAO,KAAK,eAAe,EAAE,cAAc;AAAA,MAC/C;AAAA,MACA,UAAU;AAAA,QACN,OAAO,6CAAC,SAAK,eAAK,eAAe,EAAE,OAAO,GAAE;AAAA,MAChD;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EAEA,MAAM,oBAA0C;AAC5C,QAAI,eAAe;AACnB,UAAM,UAAU,MAAM,KAAK,gBAAgB,QAAQ;AAAA,MAC/C,IAAI;AAAA,MACJ,OAAO;AAAA,QACH,OAAO,KAAK,eAAe,EAAE,kCAAkC;AAAA,MACnE;AAAA,MACA,UAAU;AAAA,QACN,OACI;AAAA,UAAC;AAAA;AAAA,YACG,UAAU,CAAC,UAAkB;AACzB,6BAAe,UAAU;AAAA,YAC7B;AAAA;AAAA,QACJ;AAAA,MAER;AAAA,MACA,OAAO;AAAA,IAEX,CAAC;AACD,QAAI,SAAS;AACT,aAAO,eAAe,wBAAqB;AAAA,IAC/C;AACA,WAAO;AAAA,EACX;AAAA,EAEA,oBAAoB,UAA8B;AAC9C,SAAK,kBAAkB,KAAK,EAAE,UAAU,MAAM,KAAK,CAAC;AAAA,EACxD;AAAA,EAEA,uBAAuB;AACnB,SAAK,kBAAkB,KAAK,EAAE,MAAM,MAAM,CAAC;AAAA,EAC/C;AAAA,EAEQ,OAAO,UAA8B;AACzC,UAAM,cAAc,KAAK,mBAAmB,YAAY,QAAQ;AAChE,QAAI,CAAC,aAAa;AACd,WAAK,eAAe,mBAAmB,YAAY;AACnD,aAAO;AAAA,IACX;AAEA,UAAM,aAAa,KAAK,mBAAmB,WAAW,QAAQ;AAC9D,QAAI,CAAC,YAAY;AACb,WAAK,eAAe,mBAAmB,WAAW;AAClD,aAAO;AAAA,IACX;AAEA,UAAM,eAAe,KAAK,mBAAmB,aAAa,QAAQ;AAClE,QAAI,CAAC,cAAc;AACf,WAAK,eAAe,mBAAmB,aAAa;AACpD,aAAO;AAAA,IACX;AAEA,UAAM,aAAa,KAAK,mBAAmB,WAAW,QAAQ;AAC9D,QAAI,CAAC,YAAY;AACb,WAAK,eAAe,mBAAmB,WAAW;AAClD,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAAA,EAEA,MAAc,oBAAoB,QAAyD;AACvF,UAAM,WAAW,KAAK,uBAAuB,sBAAsB,EAAmB,YAAY;AAClG,UAAM,YAAY,SAAS,eAAe;AAC1C,UAAM,SAAS,SAAS,UAAU;AAClC,UAAM,YAAY,UAAU,WAAW;AACvC,UAAM,YAAY,KAAK,yBAAyB,wBAAwB;AACxE,QAAI,CAAC,WAAW;AACZ,aAAO;AAAA,IACX;AACA,QAAI;AACJ,QAAI,WAAW,MAAM;AACjB,cAAQ,wBAAwB,UAAU,OAAO,EAAE,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,KAAK,GAAG,SAAS;AAC7G,WAAK,aAAa,QAAQ,WAAW,KAAK;AAAA,IAC9C,WAAW,WAAW,OAAO;AACzB,cAAQ,UAAU;AAAA,IACtB,OAAO;AACH,YAAM,aAAa,MAAM,KAAK,kBAAkB;AAChD,UAAI,eAAe,uBAAoB;AACnC,eAAO;AAAA,MACX;AACA,UAAI,eAAe,mBAAkB;AACjC,gBAAQ,UAAU;AAAA,MACtB,OAAO;AACH,gBAAQ,wBAAwB,UAAU,OAAO,EAAE,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,KAAK,GAAG,SAAS;AAC7G,aAAK,aAAa,QAAQ,WAAW,KAAK;AAAA,MAC9C;AAAA,IACJ;AAEA,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA,UAAU,UAAU,QAAQ;AAAA,IAChC;AAAA,EACJ;AACJ;AA5Ma,sBAAN;AAAA,EAIE;AAAA,EACA;AAAA,EACA;AAAA,EACA,0BAAO,uBAAuB;AAAA,EAC9B,0BAAO,iBAAiB;AAAA,EACxB,0BAAO,aAAa;AAAA,EACpB;AAAA,GAVI;AA8Mb,SAAS,mBAAmB,eAA8B;AACtD,SAAO,CAAC,aAAqB;AACzB,UAAM,UAAU,MAAM,UAAU,QAAQ;AACxC,UAAM,gBAAgB,cAAc,iBAAiB;AACrD,YAAQ,eAAe;AAAA,MACnB;AACI,eAAO,IAAI,OAAO;AAAA,MACtB;AACI,eAAO,WAAW,OAAO;AAAA,MAC7B;AACI,eAAO,WAAW,OAAO;AAAA,IACjC;AAAA,EACJ;AACJ;;;ACnQO,IAAM,sBAAgC;AAAA,EACzC,IAAI;AAAA,EACJ;AAAA,EACA,SAAS,OAAO,aAAwB;AACpC,UAAM,cAAc,SAAS,IAAI,mBAAmB;AACpD,WAAO,MAAM,YAAY,oBAAoB,MAAM,KAAK;AAAA,EAC5D;AACJ;AAEO,IAAM,yBAAmC;AAAA,EAC5C,IAAI;AAAA,EACJ;AAAA,EACA,SAAS,OAAO,aAAwB;AACpC,UAAM,cAAc,SAAS,IAAI,mBAAmB;AACpD,WAAO,MAAM,YAAY,oBAAoB,MAAM,IAAI;AAAA,EAC3D;AACJ;AAEO,IAAM,uBAAiC;AAAA,EAC1C,IAAI;AAAA,EACJ;AAAA,EACA,SAAS,OAAO,aAAwB;AACpC,UAAM,cAAc,SAAS,IAAI,mBAAmB;AACpD,WAAO,MAAM,YAAY,oBAAoB,OAAO,KAAK;AAAA,EAC7D;AACJ;AAEO,IAAM,0BAAoC;AAAA,EAC7C,IAAI;AAAA,EACJ;AAAA,EACA,SAAS,OAAO,aAAwB;AACpC,UAAM,cAAc,SAAS,IAAI,mBAAmB;AACpD,WAAO,MAAM,YAAY,oBAAoB,OAAO,IAAI;AAAA,EAC5D;AACJ;AAEO,IAAM,yBAAmC;AAAA,EAC5C,IAAI;AAAA,EACJ;AAAA,EACA,SAAS,OAAO,aAAwB;AACpC,UAAM,cAAc,SAAS,IAAI,mBAAmB;AACpD,WAAO,MAAM,YAAY,qBAAqB;AAAA,EAClD;AACJ;AAEO,IAAM,+BAAyC;AAAA,EAClD,IAAI;AAAA,EACJ;AAAA,EACA,SAAS,OAAO,aAAwB;AACpC,UAAM,cAAc,SAAS,IAAI,mBAAmB;AACpD,WAAO,MAAM,YAAY,oBAAoB,MAAM,KAAK;AAAA,EAC5D;AACJ;AAEO,IAAM,kCAA4C;AAAA,EACrD,IAAI;AAAA,EACJ;AAAA,EACA,SAAS,OAAO,aAAwB;AACpC,UAAM,cAAc,SAAS,IAAI,mBAAmB;AACpD,WAAO,MAAM,YAAY,oBAAoB,MAAM,IAAI;AAAA,EAC3D;AACJ;AAEO,IAAM,gCAA0C;AAAA,EACnD,IAAI;AAAA,EACJ;AAAA,EACA,SAAS,OAAO,aAAwB;AACpC,UAAM,cAAc,SAAS,IAAI,mBAAmB;AACpD,WAAO,MAAM,YAAY,oBAAoB,OAAO,KAAK;AAAA,EAC7D;AACJ;AAEO,IAAM,mCAA6C;AAAA,EACtD,IAAI;AAAA,EACJ;AAAA,EACA,SAAS,OAAO,aAAwB;AACpC,UAAM,cAAc,SAAS,IAAI,mBAAmB;AACpD,WAAO,MAAM,YAAY,oBAAoB,OAAO,IAAI;AAAA,EAC5D;AACJ;AAEO,IAAM,kCAA4C;AAAA,EACrD,IAAI;AAAA,EACJ;AAAA,EACA,SAAS,OAAO,aAAwB;AACpC,UAAM,cAAc,SAAS,IAAI,mBAAmB;AACpD,WAAO,MAAM,YAAY,qBAAqB;AAAA,EAClD;AACJ;;;ACrFA,IAAAC,gBAAyD;AAuFjC,IAAAC,sBAAA;AA7EjB,SAAS,kBAAkB;AAC9B,QAAM,sBAAsB,cAAc,mBAAmB;AAC7D,QAAM,oBAAoB,cAAc,iBAAiB;AACzD,QAAM,gBAAgB,cAAc,aAAa;AAEjD,QAAM,CAAC,UAAU,WAAW,QAAI,wBAAS,KAAK;AAC9C,QAAM,CAAC,gBAAgB,iBAAiB,QAAI,wBAAS,CAAC;AACtD,QAAM,iBAAa,sBAAuB,IAAI;AAE9C,QAAM,QAAQ,oBAAoB,gBAAgB;AAClD,MAAI,CAAC,SAAS,CAAC,MAAM,UAAU;AAC3B,WAAO;AAAA,EACX;AACA,QAAM,EAAE,OAAO,QAAQ,UAAU,IAAI,MAAM;AAE3C,QAAM,SAAS,oBAAoB,UAAU,QAAQ;AAErD,QAAM,CAAC,MAAM,OAAO,QAAI,wBAAuB;AAAA,IAC3C,EAAE,uBAAoB,UAAU,MAAM,YAAY;AAAA,EACtD,CAAC;AAED,QAAM,mBAAe,2BAAY,CAAC,OAAe,UAAgC;AAC7E,UAAM,UAAU,CAAC,GAAG,IAAI;AACxB,QAAI,UAAU,MAAM;AAChB,cAAQ,OAAO,OAAO,CAAC;AAAA,IAC3B,OAAO;AACH,cAAQ,KAAK,IAAI;AAAA,IACrB;AAEA,YAAQ,OAAuB;AAAA,EACnC,GAAG,CAAC,IAAI,CAAC;AAET,QAAM,cAAU;AAAA,IACZ,SAAS,MAAM;AACX,YAAM,UAAU,CAAC,GAAG,IAAI;AACxB,YAAM,eAAe,iBAAiB,OAAO,IAAI;AACjD,UAAI,iBAAiB,MAAM;AACvB,gBAAQ,KAAK,EAAE,uBAAoB,UAAU,aAAa,CAAC;AAC3D,gBAAQ,OAAO;AAAA,MACnB;AAAA,IACJ,GAAG,GAAG;AAAA,IACN,CAAC,MAAM,KAAK;AAAA,EAChB;AAEA,QAAM,YAAQ,2BAAY,CAAC,YAA0BC,cAAsB;AACvE,sBAAkB,UAAU,EAAE,OAAO,YAAY,UAAAA,UAAS,CAAC;AAC3D,wBAAoB,qBAAqB;AAAA,EAC7C,GAAG,CAAC,mBAAmB,qBAAqB,KAAK,CAAC;AAElD,QAAM,aAAS,2BAAY,MAAM;AAC7B,wBAAoB,qBAAqB;AAAA,EAC7C,GAAG,CAAC,mBAAmB,CAAC;AAExB,QAAM,eAAW,2BAAY,CAAC,UAAmB;AAC7C,gBAAY,KAAK;AACjB,QAAI,OAAO;AACP,0BAAoB,aAAa,QAAQ,WAAW,EAAE,GAAG,OAAO,UAAU,MAAM,WAAW,EAAE,CAAC;AAAA,IAClG,OAAO;AACH,0BAAoB,aAAa,QAAQ,WAAW,KAAK;AAAA,IAC7D;AAAA,EACJ,GAAG,CAAC,qBAAqB,OAAO,WAAW,MAAM,CAAC;AAElD,+BAAU,MAAM;AACZ,QAAI,WAAW,WAAW,KAAK,SAAS,GAAG;AACvC,iBAAW,QAAQ,YAAY,WAAW,QAAQ;AAAA,IACtD;AAAA,EACJ,GAAG,CAAC,IAAI,CAAC;AAET,QAAM,SAAS,KAAK,SAAS,OAAO;AAEpC,QAAM,WAAW,KAAK,IAAI,CAAC,UAAU,EAAE,GAAG,MAAM,IAAI,GAAG,KAAK,QAAQ,GAAG,EAAE;AAEzE,SACI,8CAAC,SAAI,WAAW,qBAAO,0BACnB;AAAA,kDAAC,SAAI,WAAW,qBAAO,wBAAwB,aAAa,CAAC,MAAM;AAAE,QAAE,gBAAgB;AAAA,IAAG,GACtF;AAAA,oDAAC,SAAI,WAAW,qBAAO,oBACnB;AAAA,qDAAC,SAAI,WAAW,qBAAO,eACnB,uDAAC,YAAS,SAAS,UAAU,UAAU,CAAC,UAAU,SAAS,CAAC,CAAC,KAAK,GAC7D,wBAAc,EAAE,oCAAoC,GACzD,GACJ;AAAA,QACC,SAEO,8CAAC,SAAI,WAAW,qBAAO,cAAc,SAAS,SAC1C;AAAA,uDAAC,2BAAe;AAAA,UAChB,6CAAC,UAAK,WAAW,qBAAO,kBAAmB,wBAAc,EAAE,kCAAkC,GAAE;AAAA,WACnG,IAGA;AAAA,UAAC;AAAA;AAAA,YACG,WAAW;AAAA,oCACP,qBAAO,YAAY;AAAA,oCACnB,qBAAO,mBAAmB;AAAA;AAAA,YAG9B;AAAA,2DAAC,2BAAe;AAAA,cAChB,6CAAC,UAAK,WAAW,qBAAO,kBAAmB,wBAAc,EAAE,kCAAkC,GAAE;AAAA;AAAA;AAAA,QACnG;AAAA,SAGZ;AAAA,MACA;AAAA,QAAC;AAAA;AAAA,UACG,WAAW,qBAAO;AAAA,UAClB,UAAU,CAAC,MAAM;AACb,kBAAM,WAAW,EAAE,cAAc;AACjC,8BAAkB,QAAQ;AAAA,UAC9B;AAAA,UACA,KAAK;AAAA,UAEL;AAAA,YAAC;AAAA;AAAA,cACG,MAAM;AAAA,cACN,cAAc;AAAA,cACd,OAAM;AAAA,cACN,iBAAiB,IAAI,qBAAO,0BAA0B;AAAA,cACtD,YAAY,CAAC,SACT;AAAA,gBAAC;AAAA;AAAA,kBACG;AAAA,kBACA,MAAM;AAAA,kBACN;AAAA,kBACA,UAAU,CAAC,OAAO,UAAU,aAAa,OAAO,KAAK;AAAA,kBACrD;AAAA;AAAA,cACJ;AAAA,cAEJ,WAAW;AAAA,cACX,QAAQ,CAAC,GAAG,EAAE;AAAA;AAAA,UAClB;AAAA;AAAA,MACJ;AAAA,OACJ;AAAA,IACA,8CAAC,SAAI,WAAW,qBAAO,uBACnB;AAAA,mDAAC,UAAO,WAAW,qBAAO,0BAA0B,MAAK,WAAU,SAAS,MAAM,OAAO,GAAI,wBAAc,EAAE,2BAA2B,GAAE;AAAA,MAC1I,6CAAC,UAAO,WAAW,qBAAO,0BAA0B,MAAK,WAAU,SAAS,MAAM,MAAM,MAAM,QAAQ,GAAI,wBAAc,EAAE,4BAA4B,GAAE;AAAA,OAC5J;AAAA,KACJ;AAER;AAUO,SAAS,eAAe,OAA6B;AAjL5D;AAkLI,QAAM,EAAE,MAAM,MAAM,QAAQ,UAAU,eAAe,IAAI;AACzD,QAAM,gBAAgB,cAAc,aAAa;AAEjD,QAAM,gBAAgB,OAAO,OAAO,CAAC,UAAW,CAAC,KAAK,KAAK,CAACC,UAASA,MAAK,aAAa,MAAM,KAAK,KAAM,MAAM,UAAU,KAAK,QAAQ;AACrI,QAAM,eAAe,KAAK,UAAU,CAAC,aAAa,SAAS,aAAa,KAAK,QAAQ;AAErF,QAAM,2BAAuB,2BAAY,CAAC,aAA+C;AACrF,aAAS,EAAE,GAAG,MAAM,UAAU,SAAS,MAAM,GAAG,YAAY;AAC5D,eAAW,KAAK;AAAA,EACpB,GAAG,CAAC,cAAc,MAAM,QAAQ,CAAC;AAEjC,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAS,KAAK;AAE5C,QAAM,kBAAkB,CAACC,aAAqB;AAC1C,eAAWA,QAAO;AAAA,EACtB;AAEA,+BAAU,MAAM;AACZ,eAAW,KAAK;AAAA,EACpB,GAAG,CAAC,cAAc,CAAC;AAEnB,QAAM,aAAa,KAAK,SAAS;AACjC,QAAM,aAAY,YAAO,KAAK,CAAC,UAAU,MAAM,UAAU,KAAK,QAAQ,MAApD,mBAAuD;AAEzE,QAAM,aAAa,cAAc,iBAAiB,2BAAyB,qBAAO,kCAAkC,qBAAO;AAC3H,SACI,8CAAC,SAAI,WAAW,qBAAO,qBACnB;AAAA,kDAAC,SAAI,WAAW,qBAAO,yBACnB;AAAA,mDAAC,SAAI,WAAW,qBAAO,4BACnB,uDAAC,2BAAe,GACpB;AAAA,MACA,6CAAC,SAAI,WAAW,qBAAO,2BACnB;AAAA,QAAC;AAAA;AAAA,UACG,OAAM;AAAA,UACN,SACI,6CAAC,QAAG,WAAW,KAAK,qBAAO,mBAAmB,cAAc,GACvD,wBAAc,IAAI,CAAC,aAChB;AAAA,YAAC;AAAA;AAAA,cAEG,SAAS,MAAM,qBAAqB,QAAQ;AAAA,cAC5C,WAAW,qBAAO;AAAA,cAElB;AAAA,6DAAC,UAAK,WAAW,qBAAO,2BACnB,mBAAS,OACd;AAAA,gBACA,6CAAC,UAAK,WAAW,qBAAO,4BACnB,mBAAS,UAAU,KAAK,YACrB,6CAAC,6BAAgB,GAEzB;AAAA;AAAA;AAAA,YAXK,SAAS;AAAA,UAYlB,CACH,GACL;AAAA,UAEJ,MAAM;AAAA,UACN,cAAc;AAAA,UAEd,wDAAC,SAAI,WAAW,qBAAO,gCACnB;AAAA,yDAAC,UAAK,WAAW,qBAAO,oCAAqC,qBAAU;AAAA,YACvE,6CAAC,4BAAe,WAAW,qBAAO,wCAAwC;AAAA,aAC9E;AAAA;AAAA,MACJ,GACJ;AAAA,OACJ;AAAA,IACA,6CAAC,SAAI,WAAW,qBAAO,0BACnB;AAAA,MAAC;AAAA;AAAA,QACG,WAAW;AAAA,QACX,OAAO,KAAK;AAAA,QACZ,UAAU,CAAC,UAAU;AACjB,mBAAS,EAAE,GAAG,MAAM,MAAM,MAAkB,GAAG,YAAY;AAAA,QAC/D;AAAA,QAEA;AAAA,uDAAC,SAAM,wBAAsB,wBAAc,EAAE,8BAA8B,GAAE;AAAA,UAC7E,6CAAC,SAAM,0BAAuB,wBAAc,EAAE,+BAA+B,GAAE;AAAA;AAAA;AAAA,IACnF,GACJ;AAAA,IACA,6CAAC,SAAI,WAAW,qBAAO,2BACjB,wBAAc,6CAAC,+BAAkB,SAAS,MAAM,SAAS,MAAM,YAAY,GAAG,GACpF;AAAA,KACJ;AAER;AAEA,SAAS,iBAAiB,OAAe,MAA6C;AAClF,QAAM,EAAE,aAAa,UAAU,IAAI;AACnC,QAAM,OAAO,IAAI,IAAI,KAAK,IAAI,CAAC,SAAS,6BAAM,QAAQ,CAAC;AACvD,WAAS,IAAI,aAAa,KAAK,WAAW,KAAK;AAC3C,QAAI,CAAC,KAAK,IAAI,CAAC,GAAG;AACd,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;;;ACzPA,IAAAC,gBAAmC;AA8BvB,IAAAC,sBAAA;AApBG,SAAR,aAA8B,OAAY;AAC7C,QAAM,EAAE,OAAO,UAAU,QAAQ,IAAI;AAErC,QAAM,sBAAsB,cAAc,mBAAmB;AAC7D,QAAM,wBAAwB,cAAc,sBAAsB;AAClE,QAAM,gBAAgB,cAAc,aAAa;AAEjD,QAAM,YAAQ,2BAAY,CAAC,QAAiB;AACxC,UAAM,EAAE,QAAQ,UAAU,IAAI,sBAAsB,qBAAqB,KAAK,CAAC;AAC/E,QAAI,SAAS,UAAU,WAAW;AAC9B,YAAM,eAAe,EAAE,GAAG,OAAO,UAAU,MAAM,WAAW,EAAE;AAC9D,0BAAoB,oBAAoB,KAAK,OAAO,EAAE,QAAQ,WAAW,OAAO,cAAc,SAAS,CAAC;AAAA,IAC5G,OAAO;AACH,cAAQ,KAAK,2CAA2C,MAAM,gBAAgB,SAAS,YAAY,KAAK,eAAe,QAAQ,EAAE;AAAA,IACrI;AACA,YAAQ;AAAA,EACZ,GAAG,CAAC,OAAO,UAAU,qBAAqB,uBAAuB,OAAO,CAAC;AAEzE,SACI,8CAAC,SAAI,WAAW,qBAAO,uBACnB;AAAA;AAAA,MAAC;AAAA;AAAA,QACG,WAAW;AAAA,oBACP,qBAAO,YAAY;AAAA,oBACnB,qBAAO,eAAe;AAAA;AAAA,QAE1B,SAAS,MAAM,MAAM,IAAI;AAAA,QAEzB;AAAA,uDAAC,4BAAgB,WAAW,qBAAO,kBAAkB;AAAA,UACpD,cAAc,EAAE,8BAA8B;AAAA;AAAA;AAAA,IACnD;AAAA,IACA;AAAA,MAAC;AAAA;AAAA,QACG,WAAW;AAAA,oBACP,qBAAO,YAAY;AAAA,oBACnB,qBAAO,gBAAgB;AAAA;AAAA,QAE3B,SAAS,MAAM,MAAM,KAAK;AAAA,QAE1B;AAAA,uDAAC,6BAAiB,WAAW,qBAAO,kBAAkB;AAAA,UACrD,cAAc,EAAE,+BAA+B;AAAA;AAAA;AAAA,IACpD;AAAA,KACJ;AAER;;;ACjDO,IAAM,sBAAsB;AAC5B,IAAM,0BAA0B;AAEhC,IAAM,uBAAuB;AAC7B,IAAM,2BAA2B;AACjC,IAAM,wBAAwB;AAC9B,IAAM,4BAA4B;AAClC,IAAM,0BAA0B;AAEhC,SAAS,qBAAqB,UAAgC;AACjE,SAAO;AAAA,IACH,IAAI;AAAA,IACJ;AAAA,IACA,MAAM;AAAA,IACN,SAAS;AAAA,IACT,SAAS,wBAAwB,UAAU,EAAmB,YAAY;AAAA,IAC1E,WAAW,wBAAwB,UAAU,EAAE,eAAe,CAAC,0BAA0B,GAAG,gBAAgB,CAAC,yBAAyB,uBAAuB,GAAG,YAAY,CAAC,kCAAkC,EAAE,CAAC;AAAA,EACtN;AACJ;AAEO,SAAS,wBAAwB,WAAiC;AACrE,SAAO;AAAA,IACH,IAAI,oBAAoB;AAAA,IACxB,MAAM;AAAA,IACN,OAAO;AAAA,IACP;AAAA,IACA,SAAS,kCAAkC,SAAS;AAAA,EACxD;AACJ;AAEO,SAAS,2BAA2B,WAAiC;AACxE,SAAO;AAAA,IACH,IAAI,uBAAuB;AAAA,IAC3B,OAAO;AAAA,IACP,MAAM;AAAA,IACN;AAAA,EACJ;AACJ;AAEO,SAAS,yBAAyB,WAAiC;AACtE,SAAO;AAAA,IACH,IAAI,qBAAqB;AAAA,IACzB,OAAO;AAAA,IACP,MAAM;AAAA,IACN;AAAA,EACJ;AACJ;AAEO,SAAS,4BAA4B,WAAiC;AACzE,SAAO;AAAA,IACH,IAAI,wBAAwB;AAAA,IAC5B,OAAO;AAAA,IACP,MAAM;AAAA,IACN;AAAA,EACJ;AACJ;AAEO,SAAS,2BAA2B,WAAiC;AACxE,SAAO;AAAA,IACH,IAAI,uBAAuB;AAAA,IAC3B,OAAO;AAAA,IACP;AAAA,IACA,MAAM;AAAA,EACV;AACJ;AAEO,SAAS,wBAAwB,UAAgC;AACpE,SAAO;AAAA,IACH,IAAI;AAAA,IACJ,OAAO;AAAA,IACP;AAAA,IACA,MAAM;AAAA,IACN,SAAS,wBAAwB,UAAU,EAAmB,YAAY;AAAA,IAC1E,WAAW,wBAAwB,UAAU;AAAA,MACzC,eAAe,CAAC,0BAA0B;AAAA,MAC1C,gBAAgB,CAAC,yBAAyB,uBAAuB;AAAA,MACjE,YAAY,CAAC,kCAAkC;AAAA,IACnD,CAAC;AAAA,EACL;AACJ;AAEO,SAAS,2BAA2B,WAAiC;AACxE,SAAO;AAAA,IACH,IAAI,6BAA6B;AAAA,IACjC,OAAO;AAAA,IACP;AAAA,IACA,MAAM;AAAA,IACN,WAAW,wBAAwB,WAAW,EAAE,eAAe,CAAC,0BAA0B,GAAG,gBAAgB,CAAC,yBAAyB,uBAAuB,GAAG,YAAY,CAAC,kCAAkC,EAAE,CAAC;AAAA,EACvN;AACJ;AAEO,SAAS,8BAA8B,WAAiC;AAC3E,SAAO;AAAA,IACH,IAAI,gCAAgC;AAAA,IACpC,OAAO;AAAA,IACP;AAAA,IACA,MAAM;AAAA,IACN,WAAW,wBAAwB,WAAW,EAAE,eAAe,CAAC,0BAA0B,GAAG,gBAAgB,CAAC,yBAAyB,uBAAuB,GAAG,YAAY,CAAC,kCAAkC,EAAE,CAAC;AAAA,EACvN;AACJ;AAEO,SAAS,4BAA4B,WAAiC;AACzE,SAAO;AAAA,IACH,IAAI,8BAA8B;AAAA,IAClC,OAAO;AAAA,IACP;AAAA,IACA,MAAM;AAAA,IACN,WAAW,wBAAwB,WAAW,EAAE,eAAe,CAAC,0BAA0B,GAAG,gBAAgB,CAAC,yBAAyB,uBAAuB,GAAG,YAAY,CAAC,kCAAkC,EAAE,CAAC;AAAA,EACvN;AACJ;AAEO,SAAS,+BAA+B,WAAiC;AAC5E,SAAO;AAAA,IACH,IAAI,iCAAiC;AAAA,IACrC,OAAO;AAAA,IACP;AAAA,IACA,MAAM;AAAA,IACN,WAAW,wBAAwB,WAAW,EAAE,eAAe,CAAC,0BAA0B,GAAG,gBAAgB,CAAC,yBAAyB,uBAAuB,GAAG,YAAY,CAAC,kCAAkC,EAAE,CAAC;AAAA,EACvN;AACJ;AAEO,SAAS,8BAA8B,WAAiC;AAC3E,SAAO;AAAA,IACH,IAAI,gCAAgC;AAAA,IACpC,OAAO;AAAA,IACP;AAAA,IACA,MAAM;AAAA,IACN,WAAW,wBAAwB,WAAW,EAAE,eAAe,CAAC,0BAA0B,GAAG,gBAAgB,CAAC,yBAAyB,uBAAuB,GAAG,YAAY,CAAC,kCAAkC,EAAE,CAAC;AAAA,EACvN;AACJ;;;AC1GO,IAAM,aAA6B;AAAA,EACtC,4CAAiC,GAAG;AAAA,IAChC,CAAC,mBAAmB,GAAG;AAAA,MACnB,OAAO;AAAA,MACP,iBAAiB;AAAA,MACjB,CAAC,oBAAoB,EAAE,GAAG;AAAA,QACtB,OAAO;AAAA,QACP,iBAAiB;AAAA,MACrB;AAAA,MACA,CAAC,uBAAuB,EAAE,GAAG;AAAA,QACzB,OAAO;AAAA,QACP,iBAAiB;AAAA,MACrB;AAAA,MACA,CAAC,qBAAqB,EAAE,GAAG;AAAA,QACvB,OAAO;AAAA,QACP,iBAAiB;AAAA,MACrB;AAAA,MACA,CAAC,wBAAwB,EAAE,GAAG;AAAA,QAC1B,OAAO;AAAA,QACP,iBAAiB;AAAA,MACrB;AAAA,MACA,CAAC,uBAAuB,EAAE,GAAG;AAAA,QACzB,OAAO;AAAA,QACP,iBAAiB;AAAA,MACrB;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,uCAA8B,GAAG;AAAA,IAC7B,8BAAsB,GAAG;AAAA,MACrB,CAAC,uBAAuB,GAAG;AAAA,QACvB,OAAO;AAAA,QACP,iBAAiB;AAAA,QACjB,CAAC,6BAA6B,EAAE,GAAG;AAAA,UAC/B,OAAO;AAAA,UACP,iBAAiB;AAAA,QACrB;AAAA,QACA,CAAC,gCAAgC,EAAE,GAAG;AAAA,UAClC,OAAO;AAAA,UACP,iBAAiB;AAAA,QACrB;AAAA,QACA,CAAC,8BAA8B,EAAE,GAAG;AAAA,UAChC,OAAO;AAAA,UACP,iBAAiB;AAAA,QACrB;AAAA,QACA,CAAC,iCAAiC,EAAE,GAAG;AAAA,UACnC,OAAO;AAAA,UACP,iBAAiB;AAAA,QACrB;AAAA,QACA,CAAC,gCAAgC,EAAE,GAAG;AAAA,UAClC,OAAO;AAAA,UACP,iBAAiB;AAAA,QACrB;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;;;ACrEA,IAAM,wBAAwB;AAC9B,IAAM,0BAA0B;AAEzB,IAAM,yBAAN,cAAqC,aAAa;AAAA,EACrD,YACsC,iBACI,qBACL,gBACA,gBACC,iBACG,qBACG,gBACM,sBACpB,WACiB,mBAC7C;AACE,UAAM;AAX4B;AACI;AACL;AACA;AACC;AACG;AACG;AACM;AACpB;AACiB;AAG3C,SAAK,cAAc;AACnB,SAAK,UAAU;AACf,SAAK,QAAQ;AAAA,EACjB;AAAA,EAEQ,YAAY;AAChB,SAAK,oBAAoB,UAAU,UAAU;AAAA,EACjD;AAAA,EAEQ,gBAAsB;AAC1B;AAAA,MACI;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAEJ,EAAE,QAAQ,CAAC,YAAY,KAAK,cAAc,KAAK,gBAAgB,gBAAgB,OAAO,CAAC,CAAC;AAExF,SAAK,cAAc,KAAK,oBAAoB,kCAAkC,iBAAiB,EAAE,CAAC;AAAA,EACtG;AAAA,EAEQ,UAAgB;AACpB,SAAK,cAAc,KAAK,kBAAkB,SAAS,mBAAmB,eAAe,CAAC;AACtF,SAAK,cAAc,KAAK,gBAAgB,6EAAyD,MAAM,gBAAgB,cAAc,KAAK,SAAS,CAAC,CAAC;AACrJ,SAAK,cAAc,KAAK,kBAAkB,SAAS,sBAAsB,wBAAe,CAAC;AACzF,SAAK,cAAc,KAAK,kBAAkB,SAAS,0BAA0B,+BAAqB,CAAC;AACnG,SAAK,cAAc,KAAK,kBAAkB,SAAS,uBAAuB,yBAAgB,CAAC;AAC3F,SAAK,cAAc,KAAK,kBAAkB,SAAS,2BAA2B,gCAAsB,CAAC;AACrG,SAAK,cAAc,KAAK,kBAAkB,SAAS,yBAAyB,0BAAgB,CAAC;AAG7F,SAAK,qBAAqB,iBAAiB,KAAK,UAAU,KAAK,QAAQ,CAAC,EAAE,UAAU,CAAC,aAAa;AAC9F,UAAI,YAAY,SAAS,QAAQ,SAAS,UAAU;AAChD,aAAK,qBAAqB,SAAS,QAAQ;AAAA,MAC/C,WAAW,YAAY,EAAC,qCAAU,OAAM;AACpC,aAAK,YAAY;AAAA,MACrB;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EAEQ,qBAAqB,UAAoC;AAC7D,SAAK,eAAe,KAAK;AAAA,MACrB,IAAI;AAAA,MACJ,WAAW;AAAA,MACX,OAAO;AAAA,MACP,OAAO,EAAE,OAAO,GAAG,KAAK,eAAe,EAAE,iCAAiC,CAAC,KAAK,eAAe,SAAS,KAAK,CAAC,GAAG;AAAA,MACjH,UAAU,EAAE,OAAO,kBAAkB;AAAA,MACrC,gBAAgB;AAAA,MAChB,iBAAiB,mCAAmC;AAAA,MACpD,2BAA2B;AAAA,MAC3B,SAAS,MAAM,KAAK,YAAY;AAAA,MAChC,MAAM;AAAA,IACV,CAAC;AAAA,EACL;AAAA,EAEQ,cAAoB;AACxB,SAAK,eAAe,MAAM,qBAAqB;AAE/C,mBAAe,MAAM,KAAK,eAAe,MAAM,CAAC;AAAA,EACpD;AACJ;AAhFa,yBAAN;AAAA,EAEE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,0BAAO,mBAAmB;AAAA,EAC1B,0BAAO,aAAa;AAAA,EACpB,0BAAO,mBAAmB;AAAA,EAC1B,0BAAO,QAAQ;AAAA,EACf,0BAAO,gBAAgB;AAAA,GAXnB;AAkFb,SAAS,qCAA+D;AACpE,QAAM,IAAI;AACV,QAAM,IAAI;AAEV,SAAO,EAAE,GAAG,EAAE;AAClB;;;AC3FA,IAAMC,QAAO;AAGN,IAAM,2BAAN,cAAuC,OAAO;AAAA,EAIjD,YACqB,UAA8CC,sBAC1B,WACJ,gBACnC;AACE,UAAM;AAJW;AACoB;AACJ;AAKjC,UAAM,EAAE,GAAG,KAAK,IAAI;AAAA,MAChB,CAAC;AAAA,MACDA;AAAA,MACA,KAAK;AAAA,IACT;AACA,SAAK,eAAe,UAAU,kCAAkC,IAAI;AAAA,EACxE;AAAA,EAES,aAAmB;AACxB,IAAC;AAAA,MACG,CAAC,mBAAmB;AAAA,MACpB,CAAC,sBAAsB;AAAA,IAC3B,EAAmB,QAAQ,CAAC,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC;AAAA,EAC3D;AAAA,EAES,aAAmB;AACxB,SAAK,UAAU,IAAI,sBAAsB;AAAA,EAC7C;AACJ;AA7BI,cADS,0BACO,QAAO,EAAmB;AAC1C,cAFS,0BAEO,cAAaD;AAFpB,2BAAN;AAAA,EADN,YAAY,sBAAsB;AAAA,EAO1B,0BAAO,QAAQ;AAAA,EACf;AAAA,GAPI;",
  "names": ["complete", "_a", "match", "newContent", "configSymbol", "defaultPluginConfig", "import_jsx_runtime", "_a", "import_react", "import_jsx_runtime", "hasTitle", "item", "visible", "import_react", "import_jsx_runtime", "NAME", "defaultPluginConfig"]
}
