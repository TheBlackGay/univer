{
  "version": 3,
  "sources": ["../../packages/sheets-crosshair-highlight/src/controllers/config.schema.ts", "../../packages/sheets-crosshair-highlight/src/services/crosshair.service.ts", "../../packages/sheets-crosshair-highlight/src/commands/operations/operation.ts", "../../packages/sheets-crosshair-highlight/src/views/components/CrosshairHighlight.tsx", "../../packages/sheets-crosshair-highlight/src/controllers/crosshair.menu.ts", "../../packages/sheets-crosshair-highlight/src/controllers/menu.schema.ts", "../../packages/sheets-crosshair-highlight/src/controllers/crosshair.controller.tsx", "../../packages/sheets-crosshair-highlight/src/const.ts", "../../packages/sheets-crosshair-highlight/src/util.ts", "../../packages/sheets-crosshair-highlight/src/views/widgets/crosshair-highlight-shape.ts", "../../packages/sheets-crosshair-highlight/src/views/widgets/crosshair-highlight.render-controller.ts", "../../packages/sheets-crosshair-highlight/src/plugin.ts"],
  "sourcesContent": ["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { MenuConfig } from '@univerjs/ui';\n\nexport const SHEETS_CROSSHAIR_HIGHLIGHT_PLUGIN_CONFIG_KEY = 'sheets-crosshair-highlight.config';\n\nexport const configSymbol = Symbol(SHEETS_CROSSHAIR_HIGHLIGHT_PLUGIN_CONFIG_KEY);\n\nexport interface IUniverSheetsCrosshairHighlightConfig {\n    menu?: MenuConfig;\n}\n\nexport const defaultPluginConfig: IUniverSheetsCrosshairHighlightConfig = {};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Disposable } from '@univerjs/core';\nimport { BehaviorSubject } from 'rxjs';\n\n// Currently these colors are hard-coded, but in the future they could be customizable.\nexport const CROSSHAIR_HIGHLIGHT_COLORS = [\n    'rgba(158, 109, 227, 0.3)',\n    'rgba(254, 75, 75, 0.3)',\n    'rgba(255, 140, 81, 0.3)',\n    'rgba(164, 220, 22, 0.3)',\n    'rgba(45, 174, 255, 0.3)',\n    'rgba(58, 96, 247, 0.3)',\n    'rgba(242, 72, 166, 0.3)',\n    'rgba(153, 153, 153, 0.3)',\n    'rgba(158, 109, 227, 0.15)',\n    'rgba(254, 75, 75, 0.15)',\n    'rgba(255, 140, 81, 0.15)',\n    'rgba(164, 220, 22, 0.15)',\n    'rgba(45, 174, 255, 0.15)',\n    'rgba(58, 96, 247, 0.15)',\n    'rgba(242, 72, 166, 0.15)',\n    'rgba(153, 153, 153, 0.15)',\n];\n\nexport class SheetsCrosshairHighlightService extends Disposable {\n    private readonly _enabled$ = new BehaviorSubject<boolean>(false);\n    readonly enabled$ = this._enabled$.asObservable();\n    get enabled(): boolean { return this._enabled$.getValue(); }\n\n    private readonly _color$ = new BehaviorSubject<string>(CROSSHAIR_HIGHLIGHT_COLORS[0]);\n    readonly color$ = this._color$.asObservable();\n    get color(): string { return this._color$.getValue(); }\n\n    override dispose(): void {\n        this._enabled$.complete();\n    }\n\n    setEnabled(value: boolean): void {\n        this._enabled$.next(value);\n    }\n\n    setColor(value: string): void {\n        this._color$.next(value);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommandType, type IOperation } from '@univerjs/core';\nimport { SheetsCrosshairHighlightService } from '../../services/crosshair.service';\n\n/**\n * A {@link CommandType.OPERATION} to toggle the crosshair highlight.\n */\nexport const ToggleCrosshairHighlightOperation: IOperation = {\n    id: 'sheet.operation.toggle-crosshair-highlight',\n    type: CommandType.OPERATION,\n    handler(accessor) {\n        const service = accessor.get(SheetsCrosshairHighlightService);\n        const turnedOn = service.enabled;\n        service.setEnabled(!turnedOn);\n        return true;\n    },\n};\n\n/**\n * A {@link CommandType.OPERATION} to set the crosshair highlight color.\n * @property {string} value - The color value to set.\n */\nexport interface ISetCrosshairHighlightColorOperationParams {\n    value: string;\n}\n\n/**\n * A {@link CommandType.OPERATION} to set the crosshair highlight color. It the crosshair highlight is not enabled,\n * it will be enabled.\n *\n * Its params {@link ISetCrosshairHighlightColorOperationParams} contains the color value to set as and is required.\n */\nexport const SetCrosshairHighlightColorOperation: IOperation<ISetCrosshairHighlightColorOperationParams> = {\n    id: 'sheet.operation.set-crosshair-highlight-color',\n    type: CommandType.OPERATION,\n    handler(accessor, { value }) {\n        const service = accessor.get(SheetsCrosshairHighlightService);\n        if (!service.enabled) service.setEnabled(true);\n        service.setColor(value);\n        return true;\n    },\n};\n\n/**\n * A {@link CommandType.OPERATION} to enable the crosshair highlight.\n */\nexport const EnableCrosshairHighlightOperation: IOperation = {\n    id: 'sheet.operation.enable-crosshair-highlight',\n    type: CommandType.OPERATION,\n    handler(accessor) {\n        const service = accessor.get(SheetsCrosshairHighlightService);\n        if (service.enabled) {\n            return false;\n        }\n\n        service.setEnabled(true);\n        return true;\n    },\n};\n\n/**\n * A {@link CommandType.OPERATION} to disable the crosshair highlight.\n */\nexport const DisableCrosshairHighlightOperation: IOperation = {\n    id: 'sheet.operation.disable-crosshair-highlight',\n    type: CommandType.OPERATION,\n    handler(accessor) {\n        const service = accessor.get(SheetsCrosshairHighlightService);\n        if (!service.enabled) {\n            return false;\n        }\n\n        service.setEnabled(false);\n        return true;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { clsx } from '@univerjs/design';\nimport { useDependency, useObservable } from '@univerjs/ui';\nimport { useCallback } from 'react';\nimport { CROSSHAIR_HIGHLIGHT_COLORS, SheetsCrosshairHighlightService } from '../../services/crosshair.service';\n\nexport interface ICrosshairOverlayProps {\n    onChange?: (value: string) => void;\n}\n\nexport function CrosshairOverlay(props: ICrosshairOverlayProps) {\n    const { onChange } = props;\n\n    const crosshairSrv = useDependency(SheetsCrosshairHighlightService);\n\n    const currentColor = useObservable(crosshairSrv.color$);\n\n    const handleColorPicked = useCallback((color: string) => {\n        onChange?.(color);\n    }, [onChange]);\n\n    return (\n        <div className=\"univer-grid univer-grid-cols-8 univer-gap-x-2 univer-gap-y-3\">\n            {CROSSHAIR_HIGHLIGHT_COLORS.map((color: string) => {\n                return (\n                    <div\n                        key={color}\n                        className={clsx(`\n                          univer-box-border univer-size-5 univer-cursor-pointer univer-rounded univer-border\n                          univer-border-solid univer-border-gray-200 univer-ring-offset-1 univer-transition-shadow\n                          hover:univer-ring-[1.5px] hover:univer-ring-primary-600/40\n                        `, {\n                            'univer-ring-[1.5px] univer-ring-primary-600 hover:univer-ring-primary-600': color === currentColor,\n                        })}\n                        style={{ backgroundColor: color }}\n                        onClick={() => handleColorPicked(color)}\n                    />\n                );\n            })}\n        </div>\n    );\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor } from '@univerjs/core';\nimport type { IMenuSelectorItem } from '@univerjs/ui';\nimport { UniverInstanceType } from '@univerjs/core';\nimport { getMenuHiddenObservable, MenuItemType } from '@univerjs/ui';\nimport { SetCrosshairHighlightColorOperation, ToggleCrosshairHighlightOperation } from '../commands/operations/operation';\nimport { SheetsCrosshairHighlightService } from '../services/crosshair.service';\n\nexport const CROSSHAIR_HIGHLIGHT_OVERLAY_COMPONENT = 'CROSSHAIR_HIGHLIGHT_OVERLAY_COMPONENT';\n\nexport function CrosshairHighlightMenuItemFactory(accessor: IAccessor): IMenuSelectorItem<string> {\n    const crosshairHighlightService = accessor.get(SheetsCrosshairHighlightService);\n\n    return {\n        id: ToggleCrosshairHighlightOperation.id,\n        tooltip: 'crosshair.button.tooltip',\n        type: MenuItemType.BUTTON_SELECTOR,\n        icon: 'CrossHighlightingSingle',\n        selections: [\n            {\n                label: {\n                    name: CROSSHAIR_HIGHLIGHT_OVERLAY_COMPONENT,\n                    hoverable: false,\n                    selectable: false,\n                },\n            },\n        ],\n        selectionsCommandId: SetCrosshairHighlightColorOperation.id,\n        activated$: crosshairHighlightService.enabled$,\n        hidden$: getMenuHiddenObservable(accessor, UniverInstanceType.UNIVER_SHEET),\n    };\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextMenuGroup, ContextMenuPosition, type MenuSchemaType } from '@univerjs/ui';\nimport { ToggleCrosshairHighlightOperation } from '../commands/operations/operation';\nimport { CrosshairHighlightMenuItemFactory } from './crosshair.menu';\n\nexport const menuSchema: MenuSchemaType = {\n    [ContextMenuPosition.FOOTER_MENU]: {\n        [ContextMenuGroup.OTHERS]: {\n            [ToggleCrosshairHighlightOperation.id]: {\n                order: 0,\n                menuItemFactory: CrosshairHighlightMenuItemFactory,\n            },\n        },\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Disposable, ICommandService, Inject } from '@univerjs/core';\nimport { ComponentManager, IMenuManagerService } from '@univerjs/ui';\nimport { CrossHighlightingSingle } from '@univerjs/icons';\nimport {\n    DisableCrosshairHighlightOperation,\n    EnableCrosshairHighlightOperation,\n    SetCrosshairHighlightColorOperation,\n    ToggleCrosshairHighlightOperation,\n} from '../commands/operations/operation';\nimport { CrosshairOverlay } from '../views/components/CrosshairHighlight';\nimport { CROSSHAIR_HIGHLIGHT_OVERLAY_COMPONENT } from './crosshair.menu';\nimport { menuSchema } from './menu.schema';\n\nexport class SheetsCrosshairHighlightController extends Disposable {\n    constructor(\n        @Inject(ComponentManager) private readonly _componentMgr: ComponentManager,\n        @IMenuManagerService private readonly _menuManagerService: IMenuManagerService,\n        @ICommandService private readonly _cmdSrv: ICommandService\n    ) {\n        super();\n\n        this._initCommands();\n        this._initMenus();\n        this._initComponents();\n    }\n\n    private _initCommands(): void {\n        ([\n            ToggleCrosshairHighlightOperation,\n            SetCrosshairHighlightColorOperation,\n            EnableCrosshairHighlightOperation,\n            DisableCrosshairHighlightOperation,\n        ]).forEach((c) => this._cmdSrv.registerCommand(c));\n    }\n\n    private _initMenus(): void {\n        this._menuManagerService.mergeMenu(menuSchema);\n    }\n\n    private _initComponents(): void {\n        this._componentMgr.register(CROSSHAIR_HIGHLIGHT_OVERLAY_COMPONENT, CrosshairOverlay);\n        this._componentMgr.register('CrossHighlightingSingle', CrossHighlightingSingle);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const SHEETS_CROSSHAIR_HIGHLIGHT_Z_INDEX = 1;\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange } from '@univerjs/core';\nimport { RANGE_TYPE, Rectangle } from '@univerjs/core';\n\nexport class CrossHairRangeCollection {\n    private _selectedRanges: IRange[] = [];\n    private _ranges: IRange[] = [];\n\n    public addRange(range: IRange) {\n        if (range.rangeType === RANGE_TYPE.COLUMN || range.rangeType === RANGE_TYPE.ROW || range.rangeType === RANGE_TYPE.ALL) {\n            return;\n        }\n        const intersects = this._getIntersects(range);\n\n        const splitRanges = this._getSplitRanges(range, intersects);\n        if (splitRanges.length > 0) {\n            this._ranges.push(...splitRanges);\n        }\n    }\n\n    public setSelectedRanges(selectedRange: IRange[]) {\n        this._selectedRanges = selectedRange;\n    }\n\n    private _getSplitRanges(range: IRange, intersects: IRange[]) {\n        let splitRanges: IRange[] = [range];\n        for (const intersect of intersects.concat(this._selectedRanges)) {\n            const newRanges = [];\n            for (const splitRange of splitRanges) {\n                const split = Rectangle.subtract(splitRange, intersect);\n                if (split && split.length > 0) {\n                    newRanges.push(...split);\n                }\n            }\n            splitRanges = newRanges;\n        }\n        return splitRanges.filter((range) => range.startRow <= range.endRow && range.startColumn <= range.endColumn);\n    }\n\n    private _getIntersects(addRange: IRange) {\n        const intersects = [];\n        for (const range of this._ranges) {\n            const intersect = Rectangle.getIntersects(range, addRange);\n            if (intersect) {\n                intersects.push(intersect);\n            }\n        }\n        return intersects;\n    }\n\n    getRanges() {\n        return this._ranges;\n    }\n\n    reset() {\n        this._ranges = [];\n        this._selectedRanges = [];\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRgbColor, Nullable } from '@univerjs/core';\nimport type { IShapeProps, UniverRenderingContext } from '@univerjs/engine-render';\nimport { Rect, Shape } from '@univerjs/engine-render';\n\nexport interface ISheetCrossHairHighlightShapeProps extends IShapeProps {\n    color: IRgbColor;\n}\n\nexport class SheetCrossHairHighlightShape extends Shape<ISheetCrossHairHighlightShapeProps> {\n    // protected _showHighLight = false;\n    protected _color: Nullable<IRgbColor>;\n\n    constructor(key?: string, props?: ISheetCrossHairHighlightShapeProps) {\n        super(key, props);\n\n        if (props) {\n            this.setShapeProps(props);\n        }\n    }\n\n    setShapeProps(props: Partial<ISheetCrossHairHighlightShapeProps>): void {\n        if (typeof props.color !== 'undefined') {\n            this._color = props.color;\n        }\n\n        this.transformByState({\n            width: props.width!,\n            height: props.height!,\n        });\n    }\n\n    protected override _draw(ctx: CanvasRenderingContext2D): void {\n        const color = `rgba(${this._color!.r}, ${this._color!.g}, ${this._color!.b}, ${this._color?.a ?? 0.5})`;\n\n        Rect.drawWith(ctx as UniverRenderingContext, {\n            width: this.width,\n            height: this.height,\n            fill: color,\n            stroke: undefined,\n            strokeWidth: 0,\n            evented: false,\n        });\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, Nullable, Workbook, Worksheet } from '@univerjs/core';\nimport type { IRenderContext, IRenderModule, Scene, SpreadsheetSkeleton } from '@univerjs/engine-render';\n\nimport type { ISelectionWithStyle } from '@univerjs/sheets';\nimport { ColorKit, Disposable, IContextService, Inject, RANGE_TYPE } from '@univerjs/core';\nimport { IRefSelectionsService, REF_SELECTIONS_ENABLED, SheetsSelectionsService } from '@univerjs/sheets';\nimport { getCoordByCell, SheetSkeletonManagerService } from '@univerjs/sheets-ui';\nimport { combineLatest, map, merge, startWith, tap } from 'rxjs';\nimport { SHEETS_CROSSHAIR_HIGHLIGHT_Z_INDEX } from '../../const';\nimport { SheetsCrosshairHighlightService } from '../../services/crosshair.service';\nimport { CrossHairRangeCollection } from '../../util';\nimport { SheetCrossHairHighlightShape } from './crosshair-highlight-shape';\n\nexport class SheetCrosshairHighlightRenderController extends Disposable implements IRenderModule {\n    private _shapes: SheetCrossHairHighlightShape[] = [];\n    private _rangeCollection = new CrossHairRangeCollection();\n    private _color: string = 'rgba(255,0,0,0.5)';\n\n    constructor(\n        private readonly _context: IRenderContext<Workbook>,\n        @Inject(SheetSkeletonManagerService) private readonly _sheetSkeletonManagerService: SheetSkeletonManagerService,\n        @Inject(SheetsSelectionsService) private readonly _sheetsSelectionsService: SheetsSelectionsService,\n        @Inject(SheetsCrosshairHighlightService) private readonly _sheetsCrosshairHighlightService: SheetsCrosshairHighlightService,\n        @Inject(IContextService) private readonly _contextService: IContextService,\n        @IRefSelectionsService private readonly _refSelectionsService: SheetsSelectionsService\n    ) {\n        super();\n\n        this._initRenderListener();\n    }\n\n    private _transformSelection(selectionData: Readonly<Nullable<ISelectionWithStyle[]>>, sheet: Worksheet): void {\n        if (!selectionData) {\n            return;\n        }\n        const rowCount = sheet.getRowCount();\n        const columnCount = sheet.getColumnCount();\n        const ranges = [];\n        // remove the selection that covers the whole row or column\n        for (const selection of selectionData) {\n            const { startRow, endRow, startColumn, endColumn } = selection.range;\n            if (endRow - startRow + 1 === rowCount || endColumn - startColumn + 1 === columnCount) {\n                continue;\n            }\n            ranges.push(selection.range);\n        }\n\n        this._rangeCollection.setSelectedRanges(ranges);\n        for (const range of ranges) {\n            this.addSelection(range, sheet);\n        }\n    }\n\n    private _initRenderListener(): void {\n        const workbook = this._context.unit;\n\n        this.disposeWithMe(combineLatest([\n            this._contextService.subscribeContextValue$(REF_SELECTIONS_ENABLED).pipe(startWith(false)),\n            this._sheetSkeletonManagerService.currentSkeleton$,\n            this._sheetsCrosshairHighlightService.enabled$,\n            this._sheetsCrosshairHighlightService.color$.pipe(tap((color) => (this._color = color))),\n\n            merge(\n                this._sheetsSelectionsService.selectionMoveStart$,\n                this._sheetsSelectionsService.selectionMoving$,\n                this._sheetsSelectionsService.selectionMoveEnd$,\n                this._sheetsSelectionsService.selectionSet$,\n                workbook.activeSheet$.pipe(map(() => this._sheetsSelectionsService.getCurrentSelections()))\n            ),\n            merge(\n                this._refSelectionsService.selectionMoveStart$,\n                this._refSelectionsService.selectionMoving$,\n                this._refSelectionsService.selectionMoveEnd$,\n                this._sheetsSelectionsService.selectionSet$,\n                workbook.activeSheet$.pipe(map(() => this._refSelectionsService.getCurrentSelections()))\n            ),\n        ]).subscribe(([refSelectionEnabled, _, enabled, _color, normalSelections, refSelection]) => {\n            this._clear();\n\n            if (!enabled) return;\n            const selections = refSelectionEnabled ? refSelection : normalSelections;\n\n            this._rangeCollection.reset();\n            this._transformSelection(selections, workbook.getActiveSheet());\n            this.render(this._rangeCollection.getRanges());\n        }));\n    }\n\n    addSelection(range: IRange, sheet: Worksheet): void {\n        if (range.rangeType === RANGE_TYPE.COLUMN || range.rangeType === RANGE_TYPE.ROW || range.rangeType === RANGE_TYPE.ALL) {\n            return;\n        }\n        const maxRow = sheet.getRowCount();\n        const maxColumn = sheet.getColumnCount();\n        const { startRow, endRow, startColumn, endColumn } = range;\n        const left = {\n            startRow,\n            endRow,\n            startColumn: 0,\n            endColumn: startColumn - 1,\n        };\n        const right = {\n            startRow,\n            endRow,\n            startColumn: endColumn + 1,\n            endColumn: maxColumn,\n        };\n        const top = {\n            startRow: 0,\n            endRow: startRow - 1,\n            startColumn,\n            endColumn,\n        };\n        const bottom = {\n            startRow: endRow + 1,\n            endRow: maxRow,\n            startColumn,\n            endColumn,\n        };\n\n        for (const range of [left, right, top, bottom]) {\n            // test if the range is valid\n            if (range.startRow <= range.endRow && range.startColumn <= range.endColumn) {\n                this._rangeCollection.addRange(range);\n            }\n        }\n    }\n\n    private _clear(): void {\n        this._shapes.forEach((shape) => {\n            shape.dispose();\n        });\n        this._shapes = [];\n    }\n\n    private _addShapes(range: IRange, index: number, scene: Scene, skeleton: SpreadsheetSkeleton): void {\n        const { startRow, endRow, startColumn, endColumn } = range;\n        const startPosition = getCoordByCell(startRow, startColumn, scene, skeleton);\n        const endPosition = getCoordByCell(endRow, endColumn, scene, skeleton);\n        const { startX, startY } = startPosition;\n        const { endX, endY } = endPosition;\n        const width = endX - startX;\n        const height = endY - startY;\n\n        const shapeProps = {\n            left: startX,\n            top: startY,\n            color: new ColorKit(this._color).toRgb(),\n            width,\n            height,\n            zIndex: SHEETS_CROSSHAIR_HIGHLIGHT_Z_INDEX,\n            evented: false,\n        };\n        const currentShapes = new SheetCrossHairHighlightShape(`crosshair-${index}`, shapeProps);\n        this._shapes.push(currentShapes);\n        scene.addObject(currentShapes);\n    }\n\n    render(ranges: IRange[]): void {\n        const skeleton = this._sheetSkeletonManagerService.getCurrentSkeleton();\n        if (!skeleton) {\n            return;\n        }\n\n        const { scene } = this._context;\n        this._clear();\n        for (let i = 0; i < ranges.length; i++) {\n            const range = ranges[i];\n            this._addShapes(range, i, scene, skeleton);\n        }\n        scene.makeDirty(true);\n    }\n\n    override async dispose(): Promise<void> {\n        super.dispose();\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Dependency } from '@univerjs/core';\nimport type { IUniverSheetsCrosshairHighlightConfig } from './controllers/config.schema';\nimport { IConfigService, Inject, Injector, merge, Plugin, UniverInstanceType } from '@univerjs/core';\nimport { IRenderManagerService } from '@univerjs/engine-render';\nimport { defaultPluginConfig, SHEETS_CROSSHAIR_HIGHLIGHT_PLUGIN_CONFIG_KEY } from './controllers/config.schema';\nimport { SheetsCrosshairHighlightController } from './controllers/crosshair.controller';\nimport { SheetsCrosshairHighlightService } from './services/crosshair.service';\nimport { SheetCrosshairHighlightRenderController } from './views/widgets/crosshair-highlight.render-controller';\n\nexport class UniverSheetsCrosshairHighlightPlugin extends Plugin {\n    static override pluginName: string = 'SHEET_CROSSHAIR_HIGHLIGHT_PLUGIN';\n    static override type = UniverInstanceType.UNIVER_SHEET;\n\n    constructor(\n        private readonly _config: Partial<IUniverSheetsCrosshairHighlightConfig> = defaultPluginConfig,\n        @Inject(Injector) protected readonly _injector: Injector,\n        @IRenderManagerService private readonly _renderManagerService: IRenderManagerService,\n        @IConfigService private readonly _configService: IConfigService\n    ) {\n        super();\n\n        // Manage the plugin configuration.\n        const { ...rest } = merge(\n            {},\n            defaultPluginConfig,\n            this._config\n        );\n        this._configService.setConfig(SHEETS_CROSSHAIR_HIGHLIGHT_PLUGIN_CONFIG_KEY, rest);\n    }\n\n    override onStarting(): void {\n        ([\n            [SheetsCrosshairHighlightService],\n            [SheetsCrosshairHighlightController],\n        ] as Dependency[]).forEach((d) => this._injector.add(d));\n    }\n\n    override onReady(): void {\n        ([\n            [SheetCrosshairHighlightRenderController],\n        ] as Dependency[]).forEach((d) => this._injector.add(d));\n        this._injector.get(SheetsCrosshairHighlightController);\n        this._renderManagerService.registerRenderModule(UniverInstanceType.UNIVER_SHEET, [SheetCrosshairHighlightRenderController] as Dependency);\n    }\n}\n"],
  "mappings": "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",
  "names": ["range", "range"]
}
