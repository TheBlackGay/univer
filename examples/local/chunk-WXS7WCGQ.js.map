{
  "version": 3,
  "sources": ["../../packages/sheets-conditional-formatting/src/base/const.ts", "../../packages/sheets-conditional-formatting/src/utils/anchor.ts", "../../packages/sheets-conditional-formatting/src/utils/create-cf-id.ts", "../../packages/sheets-conditional-formatting/src/models/conditional-formatting-rule-model.ts", "../../packages/sheets-conditional-formatting/src/commands/mutations/move-conditional-rule.mutation.ts", "../../packages/sheets-conditional-formatting/src/commands/mutations/delete-conditional-rule.mutation.ts", "../../packages/sheets-conditional-formatting/src/commands/mutations/add-conditional-rule.mutation.ts", "../../packages/sheets-conditional-formatting/src/commands/commands/add-cf.command.ts", "../../packages/sheets-conditional-formatting/src/commands/mutations/set-conditional-rule.mutation.ts", "../../packages/sheets-conditional-formatting/src/commands/commands/clear-range-cf.command.ts", "../../packages/sheets-conditional-formatting/src/commands/commands/clear-worksheet-cf.command.ts", "../../packages/sheets-conditional-formatting/src/commands/commands/delete-cf.command.ts", "../../packages/sheets-conditional-formatting/src/commands/commands/move-cf.command.ts", "../../packages/sheets-conditional-formatting/src/commands/commands/set-cf.command.ts", "../../packages/sheets-conditional-formatting/src/commands/mutations/formula-mark-dirty.mutation.ts", "../../packages/sheets-conditional-formatting/src/controllers/config.schema.ts", "../../packages/sheets-conditional-formatting/src/services/conditional-formatting-formula.service.ts", "../../packages/sheets-conditional-formatting/src/models/calculate-unit-v2/base-calculate-unit.ts", "../../packages/sheets-conditional-formatting/src/models/calculate-unit-v2/utils.ts", "../../packages/sheets-conditional-formatting/src/models/calculate-unit-v2/color-scale-calculate-unit.ts", "../../packages/sheets-conditional-formatting/src/render/data-bar.render.ts", "../../packages/sheets-conditional-formatting/src/models/calculate-unit-v2/data-bar-calculate-unit.ts", "../../packages/sheets-conditional-formatting/src/models/calculate-unit-v2/highlight-cell-calculate-unit.ts", "../../packages/sheets-conditional-formatting/src/models/calculate-unit-v2/icon-set-calculate-unit.ts", "../../packages/sheets-conditional-formatting/src/models/conditional-formatting-view-model.ts", "../../packages/sheets-conditional-formatting/src/services/conditional-formatting.service.ts", "../../packages/sheets-conditional-formatting/src/plugin.ts", "../../packages/sheets-conditional-formatting/src/assets/icon-map.json", "../../packages/sheets-conditional-formatting/src/models/icon-map.ts", "../../packages/sheets-conditional-formatting/src/render/icon.render.ts", "../../packages/sheets-conditional-formatting/src/utils/remove-undefined-attr.ts"],
  "sourcesContent": ["/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IConditionFormattingRule, ITextHighlightCell } from '../models/type';\n\nexport const SHEET_CONDITIONAL_FORMATTING_PLUGIN = 'SHEET_CONDITIONAL_FORMATTING_PLUGIN';\nexport enum CFTextOperator {\n    beginsWith = 'beginsWith',\n    endsWith = 'endsWith',\n    containsText = 'containsText',\n    notContainsText = 'notContainsText',\n    equal = 'equal',\n    notEqual = 'notEqual',\n    containsBlanks = 'containsBlanks',\n    notContainsBlanks = 'notContainsBlanks',\n    containsErrors = 'containsErrors',\n    notContainsErrors = 'notContainsErrors',\n}\nexport enum CFTimePeriodOperator {\n    today = 'today',\n    yesterday = 'yesterday',\n    tomorrow = 'tomorrow',\n    last7Days = 'last7Days',\n    thisMonth = 'thisMonth',\n    lastMonth = 'lastMonth',\n    nextMonth = 'nextMonth',\n    thisWeek = 'thisWeek',\n    lastWeek = 'lastWeek',\n    nextWeek = 'nextWeek',\n}\nexport enum CFNumberOperator {\n    greaterThan = 'greaterThan',\n    greaterThanOrEqual = 'greaterThanOrEqual',\n    lessThan = 'lessThan',\n    lessThanOrEqual = 'lessThanOrEqual',\n    notBetween = 'notBetween',\n    between = 'between',\n    equal = 'equal',\n    notEqual = 'notEqual',\n}\n\nexport enum CFRuleType {\n    highlightCell = 'highlightCell',\n    dataBar = 'dataBar',\n    colorScale = 'colorScale',\n    iconSet = 'iconSet',\n}\nexport enum CFSubRuleType {\n    uniqueValues = 'uniqueValues',\n    duplicateValues = 'duplicateValues',\n    rank = 'rank',\n    text = 'text',\n    timePeriod = 'timePeriod',\n    number = 'number',\n    average = 'average',\n    formula = 'formula',\n\n}\n\nexport enum CFValueType {\n    num = 'num',\n    min = 'min',\n    max = 'max',\n    percent = 'percent',\n\n    percentile = 'percentile',\n\n    formula = 'formula',\n}\n\nexport const DEFAULT_BG_COLOR = '#fff';\nexport const DEFAULT_FONT_COLOR = '#000000';\n\nexport const createDefaultRule = () => ({\n    cfId: undefined as unknown as string,\n    ranges: [],\n    stopIfTrue: false,\n    rule: { type: CFRuleType.highlightCell, subType: CFSubRuleType.text, operator: CFTextOperator.containsText } as ITextHighlightCell,\n} as IConditionFormattingRule);\n\nexport const createDefaultValue = (subType: CFSubRuleType, operator: CFTextOperator | CFNumberOperator | CFTimePeriodOperator) => {\n    switch (subType) {\n        case CFSubRuleType.text:{\n            if ([CFTextOperator.beginsWith, CFTextOperator.containsText, CFTextOperator.endsWith, CFTextOperator.equal, CFTextOperator.notContainsText, CFTextOperator.notEqual].includes(operator as CFTextOperator)) {\n                return '';\n            }\n            break;\n        }\n        case CFSubRuleType.number:{\n            if ([CFNumberOperator.between, CFNumberOperator.notBetween].includes(operator as CFNumberOperator)) {\n                return [10, 100] as [number, number];\n            }\n            return 10;\n        }\n    }\n    return '';\n};\n\nexport const createDefaultValueByValueType = (type: CFValueType, defaultValue?: number) => {\n    switch (type) {\n        case CFValueType.formula:{\n            return '=';\n        }\n        case CFValueType.max:\n        case CFValueType.min:{\n            return '';\n        }\n        case CFValueType.percent:\n        case CFValueType.percentile:\n        case CFValueType.num:{\n            return defaultValue !== undefined ? defaultValue : 10;\n        }\n    }\n    return '';\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface IAnchor {\n    id: string;\n    type: 'before' | 'after' | 'self';\n}\n\nexport const findIndexByAnchor = <T = unknown[]>(anchor: IAnchor, ruleList: T[], get: (v: T) => string): number | null => {\n    if (!ruleList) {\n        return null;\n    }\n    const anchorIndex = ruleList.findIndex((rule) => get(rule) === anchor.id);\n    if (anchorIndex < 0) {\n        return null;\n    }\n    switch (anchor.type) {\n        case 'after': {\n            return anchorIndex + 1;\n        }\n        case 'before': {\n            return anchorIndex - 1;\n        }\n        case 'self': {\n            return anchorIndex;\n        }\n    }\n};\n/**\n * This function has side effects that modify the ruleList\n * @param {IAnchor} start\n * @param {IAnchor} end\n * @param {ReturnType<ConditionalFormattingRuleModel['getSubunitRules']>} ruleList\n * @return {*}\n */\nexport const moveByAnchor = <T = unknown[]>(start: IAnchor, end: IAnchor, ruleList: T[], get: (v: T) => string) => {\n    if (!ruleList) {\n        return null;\n    }\n    const startIndex = findIndexByAnchor(start, ruleList, get);\n    let endIndex = findIndexByAnchor(end, ruleList, get);\n\n    if (startIndex === null || endIndex === null || startIndex === endIndex) {\n        return;\n    }\n    const rule = ruleList.splice(startIndex, 1)[0];\n\n    if (startIndex < endIndex) {\n        endIndex = findIndexByAnchor(end, ruleList, get)!;\n    }\n\n    switch (end.type) {\n        case 'before': {\n            ruleList.splice(endIndex + 1, 0, rule);\n            break;\n        }\n        case 'self':\n        case 'after': {\n            ruleList.splice(endIndex, 0, rule);\n            break;\n        }\n    }\n};\n\n/**\n * Only [after,after] and [after,before] can support symmetric operations\n */\nexport const transformSupportSymmetryAnchor = <T = unknown[]>(start: IAnchor, end: IAnchor, ruleList: T[], get: (v: T) => string): [IAnchor, IAnchor] | null => {\n    if (start.type === 'after' && ['after', 'before'].includes(end.type)) {\n        return [start, end];\n    }\n    const _start = { ...start };\n    const _end = { ...end };\n    if (_start.type !== 'after') {\n        const index = findIndexByAnchor(_start, ruleList, get);\n        if (index === null) {\n            return null;\n        }\n        if (index - 1 < 0) {\n            const nextItem = ruleList[index + 1];\n            if (!nextItem) {\n                return null;\n            } else {\n                _start.id = get(nextItem);\n                _start.type = 'before';\n            }\n        } else {\n            const id = get(ruleList[index - 1]);\n            _start.id = id;\n            _start.type = 'after';\n        }\n    }\n    if (!['after', 'before'].includes(_end.type)) {\n        const index = findIndexByAnchor(_end, ruleList, get);\n        if (index === null) {\n            return null;\n        }\n        if (index === 0) {\n            _end.type = 'before';\n        } else if (index - 1 >= 0) {\n            const id = get(ruleList[index - 1]);\n            _end.id = id;\n            _end.type = 'after';\n        } else if (index + 1 <= ruleList.length - 1) {\n            const id = get(ruleList[index + 1]);\n            _end.id = id;\n            _end.type = 'before';\n        } else {\n            return null;\n        }\n    }\n    if (_start.id === _end.id && _start.type === _end.type) {\n        return null;\n    }\n    return [_start, _end];\n};\nexport const anchorUndoFactory = (start: IAnchor, end: IAnchor): [IAnchor, IAnchor] | null => {\n    if (['after', 'before'].includes(end.type)) {\n        if (start.type === 'after') {\n            return [end, start];\n        } else if (start.type === 'before') {\n            return [end, { ...start, type: 'self' }];\n        }\n    }\n    return null;\n};\n\nexport const isAnchorEqual = (anchor1: IAnchor, anchor2: IAnchor) => {\n    return anchor1.id === anchor2.id && anchor1.type === anchor2.type;\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Tools } from '@univerjs/core';\n\n// Given that unit and sunUnit will change in the case of replica creation, the ID will not be spelled in here\nexport const createCfId = () => `${Tools.generateRandomId(8)}`;\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAnchor } from '../utils/anchor';\nimport type { IConditionFormattingRule, IRuleModel } from './type';\nimport { Tools } from '@univerjs/core';\nimport { Subject } from 'rxjs';\nimport { findIndexByAnchor, moveByAnchor } from '../utils/anchor';\n\nimport { createCfId } from '../utils/create-cf-id';\n\ntype RuleOperatorType = 'delete' | 'set' | 'add' | 'sort';\n\nexport class ConditionalFormattingRuleModel {\n    //  Map<unitID ,<sheetId ,IConditionFormattingRule[]>>\n    private _model: IRuleModel = new Map();\n    private _ruleChange$ = new Subject<{ rule: IConditionFormattingRule; oldRule?: IConditionFormattingRule; unitId: string; subUnitId: string; type: RuleOperatorType }>();\n    public $ruleChange = this._ruleChange$.asObservable();\n\n    private _ensureList(unitId: string, subUnitId: string) {\n        let list = this.getSubunitRules(unitId, subUnitId);\n        if (!list) {\n            list = [];\n            let unitMap = this._model.get(unitId);\n            if (!unitMap) {\n                unitMap = new Map<string, IConditionFormattingRule[]>();\n                this._model.set(unitId, unitMap);\n            }\n            unitMap.set(subUnitId, list);\n        }\n        return list;\n    }\n\n    getRule(unitId: string, subUnitId: string, cfId?: string) {\n        const list = this.getSubunitRules(unitId, subUnitId);\n        if (list) {\n            return list.find((item) => item.cfId === cfId);\n        }\n        return null;\n    }\n\n    getUnitRules(unitId: string) {\n        const map = this._model.get(unitId);\n        return map || null;\n    }\n\n    getSubunitRules(unitId: string, subUnitId: string) {\n        const list = this._model.get(unitId)?.get(subUnitId);\n        return list || null;\n    }\n\n    deleteRule(unitId: string, subUnitId: string, cfId: string) {\n        const list = this.getSubunitRules(unitId, subUnitId);\n        if (list) {\n            const index = list.findIndex((e) => e.cfId === cfId);\n            const rule = list[index];\n            if (rule) {\n                list.splice(index, 1);\n                this._ruleChange$.next({ rule, subUnitId, unitId, type: 'delete' });\n            }\n        }\n    }\n\n    setRule(unitId: string, subUnitId: string, rule: IConditionFormattingRule, oldCfId: string) {\n        const list = this._ensureList(unitId, subUnitId);\n        const oldRule = list.find((item) => item.cfId === oldCfId);\n        if (oldRule) {\n            const cloneRule = Tools.deepClone(oldRule);\n            Object.assign(oldRule, rule);\n            this._ruleChange$.next({ rule: oldRule, subUnitId, unitId, type: 'set', oldRule: cloneRule });\n        }\n    }\n\n    addRule(unitId: string, subUnitId: string, rule: IConditionFormattingRule) {\n        const list = this._ensureList(unitId, subUnitId);\n        const item = list.find((item) => item.cfId === rule.cfId);\n        if (!item) {\n            // The new conditional formatting has a higher priority\n            list.unshift(rule);\n        }\n        this._ruleChange$.next({ rule, subUnitId, unitId, type: 'add' });\n    }\n\n    /**\n     * example [1,2,3,4,5,6],if you move behind 5 to 2, then cfId=5,targetId=2.\n     * if targetId does not exist, it defaults to top\n     */\n    moveRulePriority(unitId: string, subUnitId: string, start: IAnchor, end: IAnchor) {\n        const list = this._ensureList(unitId, subUnitId);\n        const curIndex = findIndexByAnchor(start, list, (rule) => rule.cfId);\n        const targetCfIndex = findIndexByAnchor(end, list, (rule) => rule.cfId);\n        if (targetCfIndex === null || curIndex === null || targetCfIndex === curIndex) {\n            return;\n        }\n        const rule = list[curIndex];\n        if (rule) {\n            moveByAnchor(start, end, list, (rule) => rule.cfId);\n            this._ruleChange$.next({ rule, subUnitId, unitId, type: 'sort' });\n        }\n    }\n\n    createCfId(_unitId: string, _subUnitId: string) {\n        return createCfId();\n    }\n\n    deleteUnitId(unitId: string) {\n        this._model.delete(unitId);\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IMutation } from '@univerjs/core';\n\nimport type { IAnchor } from '../../utils/anchor';\nimport { CommandType } from '@univerjs/core';\nimport { ConditionalFormattingRuleModel } from '../../models/conditional-formatting-rule-model';\nimport { anchorUndoFactory } from '../../utils/anchor';\n\nexport interface IMoveConditionalRuleMutationParams {\n    unitId: string;\n    subUnitId: string;\n    start: IAnchor;\n    end: IAnchor;\n}\n\nexport const MoveConditionalRuleMutation: IMutation<IMoveConditionalRuleMutationParams> = {\n    type: CommandType.MUTATION,\n    id: 'sheet.mutation.move-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { unitId, subUnitId, start, end } = params;\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        conditionalFormattingRuleModel.moveRulePriority(unitId, subUnitId, start, end);\n        return true;\n    },\n};\nexport const MoveConditionalRuleMutationUndoFactory = (param: IMoveConditionalRuleMutationParams) => {\n    const { unitId, subUnitId } = param;\n    const undo = anchorUndoFactory(param.start, param.end);\n\n    if (!undo) {\n        return [];\n    }\n    const [start, end] = undo;\n\n    return [{ id: MoveConditionalRuleMutation.id, params: { unitId, subUnitId, start, end } as IMoveConditionalRuleMutationParams },\n    ];\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, IMutation, IMutationInfo } from '@univerjs/core';\nimport type { IAddConditionalRuleMutationParams } from './add-conditional-rule.mutation';\nimport type { IMoveConditionalRuleMutationParams } from './move-conditional-rule.mutation';\nimport { CommandType, Tools } from '@univerjs/core';\nimport { ConditionalFormattingRuleModel } from '../../models/conditional-formatting-rule-model';\nimport { transformSupportSymmetryAnchor } from '../../utils/anchor';\nimport { AddConditionalRuleMutation } from './add-conditional-rule.mutation';\nimport { MoveConditionalRuleMutation } from './move-conditional-rule.mutation';\n\nexport interface IDeleteConditionalRuleMutationParams {\n    unitId: string;\n    subUnitId: string;\n    cfId: string;\n}\nexport const DeleteConditionalRuleMutationUndoFactory = (accessor: IAccessor, param: IDeleteConditionalRuleMutationParams) => {\n    const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n    const { unitId, subUnitId, cfId } = param;\n    const ruleList = ([...(conditionalFormattingRuleModel.getSubunitRules(unitId, subUnitId) || [])]);\n    const index = ruleList.findIndex((item) => item.cfId === cfId);\n    const beforeRule = ruleList[index - 1];\n    if (index > -1) {\n        const rule = ruleList[index];\n        const result: IMutationInfo[] = [{\n            id: AddConditionalRuleMutation.id,\n            params: { unitId, subUnitId, rule: Tools.deepClone(rule) } as IAddConditionalRuleMutationParams,\n        }];\n        ruleList.splice(index, 1);\n        if (index !== 0) {\n            const firstRule = ruleList[0];\n            if (firstRule) {\n                const transformResult = transformSupportSymmetryAnchor({ id: firstRule.cfId, type: 'before' }, { id: beforeRule.cfId, type: 'after' }, ruleList, (rule) => rule.cfId);\n                if (!transformResult) {\n                    return result;\n                }\n                const [start, end] = transformResult;\n                const params: IMoveConditionalRuleMutationParams = {\n                    unitId,\n                    subUnitId,\n                    start,\n                    end,\n                };\n                result.push({ id: MoveConditionalRuleMutation.id, params });\n            }\n        }\n        return result;\n    }\n    return [];\n};\nexport const DeleteConditionalRuleMutation: IMutation<IDeleteConditionalRuleMutationParams> = {\n    type: CommandType.MUTATION,\n    id: 'sheet.mutation.delete-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { unitId, subUnitId, cfId } = params;\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        conditionalFormattingRuleModel.deleteRule(unitId, subUnitId, cfId);\n        return true;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, IMutation } from '@univerjs/core';\nimport {\n    CommandType,\n} from '@univerjs/core';\nimport { ConditionalFormattingRuleModel } from '../../models/conditional-formatting-rule-model';\nimport type { IConditionFormattingRule } from '../../models/type';\nimport type { IDeleteConditionalRuleMutationParams } from './delete-conditional-rule.mutation';\nimport { DeleteConditionalRuleMutation } from './delete-conditional-rule.mutation';\n\nexport interface IAddConditionalRuleMutationParams {\n    unitId: string;\n    subUnitId: string;\n    rule: IConditionFormattingRule;\n}\nexport const AddConditionalRuleMutationUndoFactory = (accessor: IAccessor, param: IAddConditionalRuleMutationParams) => {\n    return { id: DeleteConditionalRuleMutation.id, params: { unitId: param.unitId, subUnitId: param.subUnitId, cfId: param.rule.cfId } as IDeleteConditionalRuleMutationParams };\n};\nexport const AddConditionalRuleMutation: IMutation<IAddConditionalRuleMutationParams> = {\n    type: CommandType.MUTATION,\n    id: 'sheet.mutation.add-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { unitId, subUnitId, rule } = params;\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        conditionalFormattingRuleModel.addRule(unitId, subUnitId, rule);\n        return true;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand } from '@univerjs/core';\nimport type { IConditionFormattingRule } from '../../models/type';\nimport type { MakePropertyOptional } from '../../utils/type';\nimport type { IAddConditionalRuleMutationParams } from '../mutations/add-conditional-rule.mutation';\nimport {\n    CommandType,\n    ICommandService,\n    IUndoRedoService,\n    IUniverInstanceService,\n} from '@univerjs/core';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { ConditionalFormattingRuleModel } from '../../models/conditional-formatting-rule-model';\nimport { AddConditionalRuleMutation, AddConditionalRuleMutationUndoFactory } from '../mutations/add-conditional-rule.mutation';\n\nexport interface IAddCfCommandParams {\n    unitId?: string;\n    subUnitId?: string;\n    rule: MakePropertyOptional<IConditionFormattingRule, 'cfId'>;\n};\n\nexport const AddCfCommand: ICommand<IAddCfCommandParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheet.command.add-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { rule } = params;\n        const undoRedoService = accessor.get(IUndoRedoService);\n        const commandService = accessor.get(ICommandService);\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n        const target = getSheetCommandTarget(univerInstanceService, params);\n        if (!target) return false;\n\n        const { unitId, subUnitId } = target;\n        const cfId = conditionalFormattingRuleModel.createCfId(unitId, subUnitId);\n        const config: IAddConditionalRuleMutationParams = { unitId, subUnitId, rule: { ...rule, cfId: rule.cfId || cfId } };\n        const undo = AddConditionalRuleMutationUndoFactory(accessor, config);\n        const result = commandService.syncExecuteCommand(AddConditionalRuleMutation.id, config);\n        if (result) {\n            undoRedoService.pushUndoRedo({\n                unitID: unitId,\n                redoMutations: [{ id: AddConditionalRuleMutation.id, params: config }],\n                undoMutations: [undo],\n            });\n        }\n\n        return result;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, IMutation } from '@univerjs/core';\nimport type { IConditionFormattingRule } from '../../models/type';\nimport { CommandType, Tools } from '@univerjs/core';\nimport { ConditionalFormattingRuleModel } from '../../models/conditional-formatting-rule-model';\n\nexport interface ISetConditionalRuleMutationParams {\n    unitId: string;\n    subUnitId: string;\n    cfId?: string;\n    rule: IConditionFormattingRule;\n}\n\nexport const SetConditionalRuleMutation: IMutation<ISetConditionalRuleMutationParams> = {\n    type: CommandType.MUTATION,\n    id: 'sheet.mutation.set-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const { unitId, subUnitId, rule } = params;\n        const cfId = params.cfId || params.rule.cfId;\n\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        conditionalFormattingRuleModel.setRule(unitId, subUnitId, rule, cfId);\n        return true;\n    },\n};\n\nexport const setConditionalRuleMutationUndoFactory = (accessor: IAccessor, param: ISetConditionalRuleMutationParams) => {\n    const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n    const { unitId, subUnitId } = param;\n    const cfId = param.cfId || param.rule.cfId;\n    const rule = conditionalFormattingRuleModel.getRule(unitId, subUnitId, cfId);\n    if (rule) {\n        return [{\n            id: SetConditionalRuleMutation.id,\n            params: {\n                unitId,\n                subUnitId,\n                cfId,\n                rule: Tools.deepClone(rule),\n            } as ISetConditionalRuleMutationParams,\n        }];\n    }\n    return [];\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand, IMutationInfo, IRange } from '@univerjs/core';\nimport type { IConditionFormattingRule } from '../../models/type';\nimport type { IDeleteConditionalRuleMutationParams } from '../mutations/delete-conditional-rule.mutation';\nimport type { ISetConditionalRuleMutationParams } from '../mutations/set-conditional-rule.mutation';\nimport {\n    CommandType,\n    ICommandService,\n    IUndoRedoService,\n    IUniverInstanceService,\n    ObjectMatrix,\n    Range,\n    sequenceExecute,\n} from '@univerjs/core';\nimport { createTopMatrixFromMatrix, findAllRectangle, getSheetCommandTarget, SheetsSelectionsService } from '@univerjs/sheets';\nimport { ConditionalFormattingRuleModel } from '../../models/conditional-formatting-rule-model';\nimport { DeleteConditionalRuleMutation, DeleteConditionalRuleMutationUndoFactory } from '../mutations/delete-conditional-rule.mutation';\nimport { SetConditionalRuleMutation, setConditionalRuleMutationUndoFactory } from '../mutations/set-conditional-rule.mutation';\n\nexport interface IClearRangeCfParams {\n    ranges?: IRange[];\n    unitId?: string;\n    subUnitId?: string;\n}\nexport const ClearRangeCfCommand: ICommand<IClearRangeCfParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheet.command.clear-range-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n        const commandService = accessor.get(ICommandService);\n        const undoRedoService = accessor.get(IUndoRedoService);\n        const selectionManagerService = accessor.get(SheetsSelectionsService);\n\n        const target = getSheetCommandTarget(univerInstanceService, params);\n        if (!target) return false;\n\n        const { unitId, subUnitId } = target;\n        const ranges = selectionManagerService.getCurrentSelections()?.map((selection) => selection.range) || [];\n        const allRuleList = conditionalFormattingRuleModel.getSubunitRules(unitId, subUnitId);\n        if (!allRuleList?.length || !ranges.length) {\n            return false;\n        }\n\n        const redos: IMutationInfo[] = [];\n        const undos: IMutationInfo[] = [];\n        allRuleList.forEach((oldRule) => {\n            const matrix = new ObjectMatrix<1>();\n            oldRule.ranges.forEach((range) => {\n                Range.foreach(range, (row, col) => {\n                    matrix.setValue(row, col, 1);\n                });\n            });\n            ranges.forEach((range) => {\n                Range.foreach(range, (row, col) => {\n                    matrix.realDeleteValue(row, col);\n                });\n            });\n            const newRanges = findAllRectangle(createTopMatrixFromMatrix(matrix));\n            if (newRanges.length) {\n                const rule: IConditionFormattingRule = { ...oldRule, ranges: newRanges };\n                const params = { unitId, subUnitId, rule } as ISetConditionalRuleMutationParams;\n                const undo = setConditionalRuleMutationUndoFactory(accessor, params);\n                redos.push({ id: SetConditionalRuleMutation.id, params });\n                undos.push(...undo);\n            } else {\n                const params = { unitId, subUnitId, cfId: oldRule.cfId } as IDeleteConditionalRuleMutationParams;\n                const undo = DeleteConditionalRuleMutationUndoFactory(accessor, params);\n                redos.push({ id: DeleteConditionalRuleMutation.id, params });\n                undos.push(...undo);\n            }\n        });\n\n        const result = sequenceExecute(redos, commandService).result;\n        if (result) {\n            undoRedoService.pushUndoRedo({\n                unitID: unitId,\n                redoMutations: redos,\n                undoMutations: undos,\n            });\n        }\n        return result;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand, IMutationInfo } from '@univerjs/core';\nimport type { IDeleteConditionalRuleMutationParams } from '../mutations/delete-conditional-rule.mutation';\nimport {\n    CommandType,\n    ICommandService,\n    IUndoRedoService,\n    IUniverInstanceService,\n    sequenceExecute,\n} from '@univerjs/core';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { ConditionalFormattingRuleModel } from '../../models/conditional-formatting-rule-model';\nimport { DeleteConditionalRuleMutation, DeleteConditionalRuleMutationUndoFactory } from '../mutations/delete-conditional-rule.mutation';\n\nexport interface IClearWorksheetCfParams {\n    unitId?: string;\n    subUnitId?: string;\n}\nexport const ClearWorksheetCfCommand: ICommand<IClearWorksheetCfParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheet.command.clear-worksheet-conditional-rule',\n    handler(accessor, params) {\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n        const commandService = accessor.get(ICommandService);\n        const undoRedoService = accessor.get(IUndoRedoService);\n\n        const target = getSheetCommandTarget(univerInstanceService, params);\n        if (!target) return false;\n\n        const { unitId, subUnitId } = target;\n        const ruleList = conditionalFormattingRuleModel.getSubunitRules(unitId, subUnitId);\n        if (!ruleList?.length) {\n            return false;\n        }\n        const configList: IDeleteConditionalRuleMutationParams[] = ruleList.map((rule) => ({ cfId: rule.cfId, unitId, subUnitId }));\n        const redos: IMutationInfo[] = configList.map((config) => ({ id: DeleteConditionalRuleMutation.id, params: config }));\n        const undos: IMutationInfo[] = configList.map((config) => DeleteConditionalRuleMutationUndoFactory(accessor, config)[0]);\n\n        const result = sequenceExecute(redos, commandService).result;\n        if (result) {\n            undoRedoService.pushUndoRedo({\n                unitID: unitId,\n                redoMutations: redos,\n                undoMutations: undos,\n            });\n        }\n        return result;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand } from '@univerjs/core';\nimport type { IDeleteConditionalRuleMutationParams } from '../mutations/delete-conditional-rule.mutation';\nimport {\n    CommandType,\n    ICommandService,\n    IUndoRedoService,\n    IUniverInstanceService,\n} from '@univerjs/core';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { DeleteConditionalRuleMutation, DeleteConditionalRuleMutationUndoFactory } from '../mutations/delete-conditional-rule.mutation';\n\nexport interface IDeleteCfCommandParams {\n    unitId?: string;\n    subUnitId?: string;\n    cfId: string;\n}\nexport const DeleteCfCommand: ICommand<IDeleteCfCommandParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheet.command.delete-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n        const undoRedoService = accessor.get(IUndoRedoService);\n        const commandService = accessor.get(ICommandService);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n        const target = getSheetCommandTarget(univerInstanceService, params);\n        if (!target) return false;\n\n        const { unitId, subUnitId } = target;\n        const config: IDeleteConditionalRuleMutationParams = { unitId, subUnitId, cfId: params.cfId };\n        const undos = DeleteConditionalRuleMutationUndoFactory(accessor, config);\n        const result = commandService.syncExecuteCommand(DeleteConditionalRuleMutation.id, config);\n        if (result) {\n            undoRedoService.pushUndoRedo({ unitID: unitId, undoMutations: undos, redoMutations: [{ id: DeleteConditionalRuleMutation.id, params: config }] });\n        }\n        return result;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand } from '@univerjs/core';\nimport type { IAnchor } from '../../utils/anchor';\nimport type { IMoveConditionalRuleMutationParams } from '../mutations/move-conditional-rule.mutation';\nimport {\n    CommandType,\n    ICommandService,\n    IUndoRedoService,\n    IUniverInstanceService,\n} from '@univerjs/core';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { ConditionalFormattingRuleModel } from '../../models/conditional-formatting-rule-model';\nimport { transformSupportSymmetryAnchor } from '../../utils/anchor';\nimport { MoveConditionalRuleMutation, MoveConditionalRuleMutationUndoFactory } from '../mutations/move-conditional-rule.mutation';\n\nexport interface IMoveCfCommandParams {\n    unitId?: string;\n    subUnitId?: string;\n    start: IAnchor;\n    end: IAnchor;\n};\nexport const MoveCfCommand: ICommand<IMoveCfCommandParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheet.command.move-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n\n        const undoRedoService = accessor.get(IUndoRedoService);\n        const commandService = accessor.get(ICommandService);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n        const conditionalFormattingRuleModel = accessor.get(ConditionalFormattingRuleModel);\n\n        const target = getSheetCommandTarget(univerInstanceService, params);\n        if (!target) return false;\n\n        const { unitId, subUnitId } = target;\n        const anchorList = transformSupportSymmetryAnchor(params.start, params.end, conditionalFormattingRuleModel.getSubunitRules(unitId, subUnitId) || [], (rule) => rule.cfId);\n        if (!anchorList) {\n            return false;\n        }\n        const [start, end] = anchorList;\n        const config: IMoveConditionalRuleMutationParams = { unitId, subUnitId, start, end };\n        const undos = MoveConditionalRuleMutationUndoFactory(config);\n        const result = commandService.syncExecuteCommand(MoveConditionalRuleMutation.id, config);\n        if (result) {\n            undoRedoService.pushUndoRedo({\n                unitID: unitId,\n                redoMutations: [{ id: MoveConditionalRuleMutation.id, params: config }],\n                undoMutations: undos,\n            });\n        }\n\n        return result;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICommand } from '@univerjs/core';\nimport type { IConditionFormattingRule } from '../../models/type';\nimport type { ISetConditionalRuleMutationParams } from '../mutations/set-conditional-rule.mutation';\nimport {\n    CommandType,\n    ICommandService,\n    IUndoRedoService,\n    IUniverInstanceService,\n} from '@univerjs/core';\nimport { getSheetCommandTarget } from '@univerjs/sheets';\nimport { SetConditionalRuleMutation, setConditionalRuleMutationUndoFactory } from '../mutations/set-conditional-rule.mutation';\n\nexport interface ISetCfCommandParams {\n    unitId?: string;\n    subUnitId?: string;\n    cfId?: string;\n    rule: IConditionFormattingRule;\n};\nexport const SetCfCommand: ICommand<ISetCfCommandParams> = {\n    type: CommandType.COMMAND,\n    id: 'sheet.command.set-conditional-rule',\n    handler(accessor, params) {\n        if (!params) {\n            return false;\n        }\n\n        const undoRedoService = accessor.get(IUndoRedoService);\n        const commandService = accessor.get(ICommandService);\n        const univerInstanceService = accessor.get(IUniverInstanceService);\n\n        const target = getSheetCommandTarget(univerInstanceService, params);\n        if (!target) return false;\n\n        const { unitId, subUnitId } = target;\n        const config: ISetConditionalRuleMutationParams = { unitId, subUnitId, rule: params.rule, cfId: params.cfId };\n        const undos = setConditionalRuleMutationUndoFactory(accessor, config);\n        const result = commandService.syncExecuteCommand(SetConditionalRuleMutation.id, config);\n        if (result) {\n            undoRedoService.pushUndoRedo({ unitID: unitId, undoMutations: undos, redoMutations: [{ id: SetConditionalRuleMutation.id, params: config }] });\n        }\n        return result;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IMutation } from '@univerjs/core';\nimport { CommandType } from '@univerjs/core';\n\nexport interface IConditionalFormattingFormulaMarkDirtyParams { [unitId: string]: { [sunUnitId: string]: { [formulaId: string]: boolean } } }\nexport const ConditionalFormattingFormulaMarkDirty: IMutation<IConditionalFormattingFormulaMarkDirtyParams> = {\n    type: CommandType.MUTATION,\n    id: 'sheet.mutation.conditional-formatting-formula-mark-dirty',\n    handler() {\n        return true;\n    },\n};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const SHEETS_CONDITIONAL_FORMATTING_PLUGIN_CONFIG_KEY = 'ssheets-conditional-formatting.config';\n\nexport const configSymbol = Symbol(SHEETS_CONDITIONAL_FORMATTING_PLUGIN_CONFIG_KEY);\n\nexport interface IUniverSheetsConditionalFormattingConfig {\n}\n\nexport const defaultPluginConfig: IUniverSheetsConditionalFormattingConfig = {};\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, IRange, Nullable } from '@univerjs/core';\nimport type { IRemoveOtherFormulaMutationParams, ISetFormulaCalculationResultMutation, ISetOtherFormulaMutationParams } from '@univerjs/engine-formula';\nimport type { IConditionalFormattingFormulaMarkDirtyParams } from '../commands/mutations/formula-mark-dirty.mutation';\nimport type { IConditionalFormattingRuleConfig } from '../models/type';\n\nimport { BooleanNumber, CellValueType, Disposable, ICommandService, Inject, ObjectMatrix, RefAlias, Tools } from '@univerjs/core';\nimport {\n    IActiveDirtyManagerService,\n    RemoveOtherFormulaMutation,\n    SetFormulaCalculationResultMutation,\n    SetOtherFormulaMutation,\n} from '@univerjs/engine-formula';\nimport { Subject } from 'rxjs';\n\nimport { CFRuleType, CFValueType } from '../base/const';\n\nimport { ConditionalFormattingFormulaMarkDirty } from '../commands/mutations/formula-mark-dirty.mutation';\nimport { ConditionalFormattingRuleModel } from '../models/conditional-formatting-rule-model';\n\n// eslint-disable-next-line ts/consistent-type-definitions\ntype IFormulaItem = {\n    formulaText: string;\n    cfId: string;\n    id: string;\n    unitId: string;\n    subUnitId: string;\n    ranges: IRange[];\n    status: FormulaResultStatus;\n    formulaId: string;\n    result: ObjectMatrix<string | number | boolean | undefined | null | void>;\n};\nexport enum FormulaResultStatus {\n    NOT_REGISTER = 1,\n    SUCCESS,\n    WAIT,\n    ERROR,\n}\n\nconst getResultFromFormula = (formulaResult: Nullable<ICellData>[][]) => {\n    const v = formulaResult && formulaResult[0] && formulaResult[0][0];\n    if (v?.t === CellValueType.BOOLEAN) {\n        return v.v === BooleanNumber.TRUE || v.v === true;\n    }\n    return v ? v.v : false;\n};\n// TODO: @Gggpound\n// It may be possible later to abstract a service that manages the results of an asynchronous calculation to handle the use of the last calculation before waiting for the result to return.\nexport class ConditionalFormattingFormulaService extends Disposable {\n    // Cache Formula ID and formula mapping.\n    private _formulaMap: Map<string, Map<string, RefAlias<IFormulaItem, 'id' | 'formulaId'>>> = new Map();\n\n    private _result$ = new Subject<IFormulaItem & { isAllFinished: boolean }>();\n    public result$ = this._result$.asObservable();\n\n    constructor(\n        @Inject(ICommandService) private _commandService: ICommandService,\n        @Inject(IActiveDirtyManagerService) private _activeDirtyManagerService: IActiveDirtyManagerService,\n        @Inject(ConditionalFormattingRuleModel) private _conditionalFormattingRuleModel: ConditionalFormattingRuleModel\n\n    ) {\n        super();\n        this._initFormulaCalculationResultChange();\n        this._initRuleChange();\n    }\n\n    private _initRuleChange() {\n        const isNeedMarkFormulaDirty = (rule: IConditionalFormattingRuleConfig) => {\n            switch (rule.type) {\n                case CFRuleType.colorScale: {\n                    return rule.config.some((item) => item.value.type === CFValueType.formula);\n                }\n                case CFRuleType.dataBar: {\n                    return [rule.config.max, rule.config.min].some((item) => item.type === CFValueType.formula);\n                }\n                case CFRuleType.iconSet: {\n                    return rule.config.some((item) => item.value.type === CFValueType.formula);\n                }\n            }\n        };\n        this.disposeWithMe(this._conditionalFormattingRuleModel.$ruleChange.subscribe((option) => {\n            const { unitId, subUnitId, rule, oldRule } = option;\n            if (option.type === 'delete') {\n                this._removeFormulaByCfId(unitId, subUnitId, rule.cfId);\n            }\n            if (option.type === 'set') {\n                if (isNeedMarkFormulaDirty(rule.rule) || (oldRule && isNeedMarkFormulaDirty(oldRule.rule))) {\n                    this._removeFormulaByCfId(unitId, subUnitId, rule.cfId);\n                }\n            }\n        }));\n    }\n\n    private _initFormulaCalculationResultChange() {\n        // Gets the result of the formula calculation and caches it\n        this.disposeWithMe(this._commandService.onCommandExecuted((commandInfo) => {\n            if (commandInfo.id === SetFormulaCalculationResultMutation.id) {\n                const params = commandInfo.params as ISetFormulaCalculationResultMutation;\n                for (const unitId in params.unitOtherData) {\n                    for (const subUnitId in params.unitOtherData[unitId]) {\n                        for (const formulaId in params.unitOtherData[unitId]![subUnitId]) {\n                            const resultMatrix = new ObjectMatrix(params.unitOtherData[unitId][subUnitId][formulaId]);\n                            const formulaMapAlias = this._ensureSubunitFormulaMap(unitId, subUnitId).getValue(formulaId, ['formulaId']);\n                            if (!formulaMapAlias) {\n                                continue;\n                            }\n                            const ranges = formulaMapAlias.ranges;\n\n                            if (!ranges) {\n                                continue;\n                            }\n                            const resultObject = formulaMapAlias.result;\n\n                            // The engine's calculation result only has the offset, and the actual position needs to be calculated from the upper left corner.\n                            const startRow = ranges[0].startRow;\n                            const startCol = ranges[0].startColumn;\n\n                            resultMatrix.forValue((row, col, value) => {\n                                resultObject.setValue(startRow + row, startCol + col, getResultFromFormula(value));\n                            });\n\n                            formulaMapAlias.status = FormulaResultStatus.SUCCESS;\n                            const allFormulaMapAlias = this._getAllFormulaResultByCfId(unitId, subUnitId, formulaMapAlias.cfId);\n                            const isAllFinished = allFormulaMapAlias.every((item) => item.status === FormulaResultStatus.SUCCESS);\n                            this._result$.next({ ...formulaMapAlias, isAllFinished });\n                        }\n                    }\n                }\n            }\n        }));\n\n        // Register formula with Dirty Logic\n        this._activeDirtyManagerService.register(ConditionalFormattingFormulaMarkDirty.id, {\n            commandId: ConditionalFormattingFormulaMarkDirty.id,\n            getDirtyData(commandInfo) {\n                const params = commandInfo.params as IConditionalFormattingFormulaMarkDirtyParams;\n                return {\n                    dirtyUnitOtherFormulaMap: params,\n                };\n            },\n        });\n    }\n\n    private _ensureSubunitFormulaMap(unitId: string, subUnitId: string) {\n        let unitMap = this._formulaMap.get(unitId);\n        if (!unitMap) {\n            unitMap = new Map<string, RefAlias<IFormulaItem, 'formulaId' | 'id'>>();\n            this._formulaMap.set(unitId, unitMap);\n        }\n        let subUnitMap = unitMap.get(subUnitId);\n        if (!subUnitMap) {\n            subUnitMap = new RefAlias<IFormulaItem, 'formulaId' | 'id'>([], ['formulaId', 'id']);\n            unitMap.set(subUnitId, subUnitMap);\n        }\n        return subUnitMap;\n    }\n\n    public getSubUnitFormulaMap(unitId: string, subUnitId: string) {\n        return this._formulaMap.get(unitId)?.get(subUnitId);\n    }\n\n    public registerFormulaWithRange(unitId: string, subUnitId: string, cfId: string, formulaText: string, ranges: IRange[] = [{ startRow: 0, endRow: 0, startColumn: 0, endColumn: 0 }]) {\n        const formulaMap = this._ensureSubunitFormulaMap(unitId, subUnitId);\n        const cfFormulaId = this.createCFormulaId(cfId, formulaText);\n        if (formulaMap.getValue(cfFormulaId, ['id'])) {\n            return;\n        }\n        const formulaId = this._createFormulaId(unitId, subUnitId);\n        formulaMap.addValue({\n            formulaText,\n            unitId,\n            subUnitId,\n            cfId,\n            id: cfFormulaId,\n            ranges,\n            formulaId,\n            status: FormulaResultStatus.WAIT,\n            result: new ObjectMatrix(),\n        });\n        const params: ISetOtherFormulaMutationParams = {\n            unitId,\n            subUnitId,\n            formulaMap: {\n                [formulaId]: {\n                    f: formulaText,\n                    ranges,\n                },\n            },\n        };\n\n        this._commandService.executeCommand(SetOtherFormulaMutation.id, params, { onlyLocal: true }).then(() => {\n            this._commandService.executeCommand(ConditionalFormattingFormulaMarkDirty.id, { [unitId]: { [subUnitId]: { [formulaId]: true } } }, { onlyLocal: true });\n        });\n    }\n\n    private _removeFormulaByCfId(unitId: string, subUnitId: string, cfId: string) {\n        const values = this.deleteCache(unitId, subUnitId, cfId);\n        const formulaIdList = values.map((item) => item.formulaId);\n        this._commandService.executeCommand(RemoveOtherFormulaMutation.id, { unitId, subUnitId, formulaIdList } as IRemoveOtherFormulaMutationParams, { onlyLocal: true });\n    }\n\n    public getFormulaResultWithCoords(unitId: string, subUnitId: string, cfId: string, formulaText: string, row: number = 0, col: number = 0) {\n        const map = this.getSubUnitFormulaMap(unitId, subUnitId);\n        if (!map) {\n            return { status: FormulaResultStatus.NOT_REGISTER };\n        }\n        const item = map.getValue(this.createCFormulaId(cfId, formulaText), ['id']);\n        if (!item) {\n            return { status: FormulaResultStatus.NOT_REGISTER };\n        }\n        if (FormulaResultStatus.SUCCESS === item.status && item.result) {\n            const result = item.result.getValue(row, col);\n            return { result, status: FormulaResultStatus.SUCCESS };\n        }\n\n        if (item.status === FormulaResultStatus.WAIT) {\n            return { status: FormulaResultStatus.WAIT };\n        }\n\n        return { status: FormulaResultStatus.ERROR };\n    }\n\n    public getFormulaMatrix(unitId: string, subUnitId: string, cfId: string, formulaText: string) {\n        const map = this.getSubUnitFormulaMap(unitId, subUnitId);\n        if (!map) {\n            return { status: FormulaResultStatus.NOT_REGISTER };\n        }\n        const item = map.getValue(this.createCFormulaId(cfId, formulaText), ['id']);\n        if (!item) {\n            return { status: FormulaResultStatus.NOT_REGISTER };\n        }\n        if (FormulaResultStatus.SUCCESS === item.status && item.result) {\n            const result = item.result;\n            return { result, status: FormulaResultStatus.SUCCESS };\n        }\n    }\n\n    /**\n     * If `formulaText` is not provided, then all caches related to `cfId` will be deleted.\n     */\n    public deleteCache(unitId: string, subUnitId: string, cfId: string, formulaText?: string) {\n        const map = this.getSubUnitFormulaMap(unitId, subUnitId);\n        if (!map) {\n            return [];\n        }\n        if (formulaText) {\n            const key = this.createCFormulaId(cfId, formulaText);\n            map.deleteValue(key, ['id']);\n            return [];\n        } else {\n            const values = map.getValues().filter((v) => v.cfId === cfId);\n            values.forEach((e) => {\n                map.deleteValue(e.formulaId, ['formulaId']);\n            });\n            return values;\n        }\n    }\n\n    private _getAllFormulaResultByCfId(unitId: string, subUnitId: string, cfId: string) {\n        const map = this.getSubUnitFormulaMap(unitId, subUnitId);\n        if (!map) {\n            return [];\n        }\n        const values = map.getValues().filter((v) => v.cfId === cfId);\n        return values;\n    }\n\n    /**\n     * The external environment is not aware of`formulaId`;it communicates internally with the formula engine.\n     */\n    private _createFormulaId(unitId: string, subUnitId: string) {\n        return `sheet.cf_${unitId}_${subUnitId}_${Tools.generateRandomId(8)}`;\n    }\n\n    /**\n     * A conditional formatting may have multiple formulas;if the formulas are identical,then the results will be consistent.\n     */\n    public createCFormulaId(cfId: string, formulaText: string) {\n        return `${cfId}_${formulaText}`;\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IAccessor, ICellData, Nullable, Workbook, Worksheet } from '@univerjs/core';\nimport type { IConditionFormattingRule } from '../type';\nimport { LRUMap } from '@univerjs/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\nexport enum CalculateEmitStatus {\n\n    preComputingStart = 'preComputingStart',\n    preComputing = 'preComputing',\n    preComputingEnd = 'preComputingEnd',\n    preComputingError = 'preComputingError',\n\n}\nexport interface IContext {\n    unitId: string;\n    subUnitId: string;\n    workbook: Workbook;\n    worksheet: Worksheet;\n    accessor: IAccessor;\n    rule: IConditionFormattingRule;\n    getCellValue: (row: number, col: number,) => ICellData;\n    limit: number;\n}\n/**\n * Processing Main Path Calculation Logic\n */\nexport abstract class BaseCalculateUnit<C = any, S = any> {\n    /**\n     * 3nd-level cache\n     */\n    private _cache: LRUMap<string, Nullable<S>>;\n\n    protected _preComputingStatus$ = new BehaviorSubject<CalculateEmitStatus>(CalculateEmitStatus.preComputingStart);\n    public preComputingStatus$ = this._preComputingStatus$.asObservable().pipe(distinctUntilChanged());\n    /**\n     * 2nd-level cache\n     */\n    private _preComputingCache: Nullable<C>;\n    private _rule: IConditionFormattingRule;\n\n    constructor(private _context: IContext) {\n        this._cache = new LRUMap(_context.limit);\n        this._rule = _context.rule;\n        this._preComputingCache = null;\n        this._initClearCacheListener();\n    }\n\n    public setCacheLength(length: number) {\n        this._cache.limit = length;\n    }\n\n    public clearCache() {\n        this._cache.clear();\n    }\n\n    public resetPreComputingCache() {\n        this._preComputingStatus$.next(CalculateEmitStatus.preComputingStart);\n        this._preComputingCache = null;\n    }\n\n    public updateRule(rule: IConditionFormattingRule) {\n        this._rule = rule;\n        this.resetPreComputingCache();\n    }\n\n    public getCell(row: number, col: number) {\n        const key = this._createKey(row, col);\n\n        if (this._preComputingStatus$.getValue() === CalculateEmitStatus.preComputing) {\n            // If the pre-calculation is not yet complete, return the previous result directly.\n            return this._cache.get(key);\n        }\n        let preComputingResult = this.getPreComputingResult(row, col);\n        if (preComputingResult === null) {\n            this._preComputingStatus$.next(CalculateEmitStatus.preComputingStart);\n            this.preComputing(row, col, this._getContext());\n            preComputingResult = this.getPreComputingResult(row, col);\n\n            if (preComputingResult === null) {\n                // If the calculation is not yet complete, return the previous cache.\n                return this._cache.get(key);\n            }\n        }\n\n        this._preComputingStatus$.next(CalculateEmitStatus.preComputingEnd);\n\n        if (this._cache.has(key)) {\n            return this._cache.get(key);\n        }\n        const result = this.getCellResult(row, col, preComputingResult, this._getContext());\n        if (result !== null) {\n            this._setCache(row, col, result);\n        }\n        return result;\n    }\n    // If a null value is set, it indicates that caching is not required.\n    abstract preComputing(row: number, col: number, context: IContext): void;\n\n    /**\n     * If a null value is returned, it indicates that caching is not required.\n     */\n    protected abstract getCellResult(row: number, col: number, preComputingResult: Nullable<C>, context: IContext): Nullable<S>;\n\n    protected setPreComputingCache(v: C) {\n        this._preComputingCache = v;\n    }\n\n    protected getPreComputingResult(_row: number, _col: number) {\n        return this._preComputingCache;\n    }\n\n    private _createKey(row: number, col: number) {\n        return `${row}_${col}`;\n    }\n\n    private _setCache(row: number, col: number, v: Nullable<S>) {\n        const key = this._createKey(row, col);\n        this._cache.set(key, v);\n    }\n\n    private _getContext() {\n        return { ...this._context, rule: this._rule };\n    }\n\n    private _initClearCacheListener() {\n        this.preComputingStatus$.subscribe((e) => {\n            if (e === CalculateEmitStatus.preComputingEnd) {\n                this.clearCache();\n            }\n        });\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CellValue, ICellData, IObjectMatrixPrimitiveType, IRange, Nullable } from '@univerjs/core';\nimport type { IConditionFormattingRule, IValueConfig } from '../../models/type';\nimport type { IContext } from './base-calculate-unit';\nimport { BooleanNumber, CellValueType, ColorKit, dayjs, ObjectMatrix, Range } from '@univerjs/core';\nimport { BooleanValue } from '@univerjs/engine-formula';\nimport { CFNumberOperator, CFValueType } from '../../base/const';\nimport { ConditionalFormattingFormulaService, FormulaResultStatus } from '../../services/conditional-formatting-formula.service';\nimport { ConditionalFormattingViewModel } from '../conditional-formatting-view-model';\n\nexport function isFloatsEqual(a: number, b: number) {\n    return Math.abs(a - b) < Number.EPSILON;\n}\nexport const isNullable = (v: any) => [undefined, null].includes(v);\nexport const getCellValue = (cell?: ICellData) => {\n    if (!cell) {\n        return null;\n    }\n    if (cell.t === CellValueType.BOOLEAN) {\n        return cell.v === BooleanNumber.TRUE ? BooleanValue.TRUE : BooleanValue.FALSE;\n    }\n    const v = cell.v;\n    const dataStream = cell.p?.body?.dataStream.replace(/\\r\\n$/, '');\n    return !isNullable(v) ? v : !isNullable(dataStream) ? dataStream : null;\n};\nconst DAY_SIZE = 86400;\n\nexport function toYMD_1900(ord: number, leap1900 = true) {\n    if (leap1900 && ord >= 0) {\n        if (ord === 0) {\n            return [1900, 1, 0];\n        }\n        if (ord === 60) {\n            return [1900, 2, 29];\n        }\n        if (ord < 60) {\n            return [1900, (ord < 32 ? 1 : 2), ((ord - 1) % 31) + 1];\n        }\n    }\n    let l = ord + 68569 + 2415019;\n    const n = Math.floor((4 * l) / 146097);\n    l = l - Math.floor((146097 * n + 3) / 4);\n    const i = Math.floor((4000 * (l + 1)) / 1461001);\n    l = l - Math.floor((1461 * i) / 4) + 31;\n    const j = Math.floor((80 * l) / 2447);\n    const nDay = l - Math.floor((2447 * j) / 80);\n    l = Math.floor(j / 11);\n    const nMonth = j + 2 - (12 * l);\n    const nYear = 100 * (n - 49) + i + l;\n    return [nYear | 0, nMonth | 0, nDay | 0];\n}\nexport const serialTimeToTimestamp = (value: number) => {\n    let date = (value | 0);\n    const t = DAY_SIZE * (value - date);\n    let time = Math.floor(t); // in seconds\n    // date \"epsilon\" correction\n    if ((t - time) > 0.9999) {\n        time += 1;\n        if (time === DAY_SIZE) {\n            time = 0;\n            date += 1;\n        }\n    }\n    // serial date/time to gregorian calendar\n    const x = (time < 0) ? DAY_SIZE + time : time;\n    const [y, m, d] = toYMD_1900(value, true);\n    const hh = Math.floor((x / 60) / 60) % 60;\n    const mm = Math.floor(x / 60) % 60;\n    const ss = Math.floor(x) % 60;\n    // return it as a native date object\n    const dt = dayjs(`${y}/${m}/${d} ${hh}:${mm}:${ss}`);\n    const result = dt.valueOf();\n    return result;\n};\n// eslint-disable-next-line max-lines-per-function\nexport const getValueByType = (value: IValueConfig, matrix: ObjectMatrix<number>, context: IContext & { cfId: string }) => {\n    switch (value.type) {\n        case CFValueType.max: {\n            let max = 0;\n            matrix.forValue((row, col, value) => {\n                if (value > max) {\n                    max = value;\n                }\n            });\n            return {\n                status: FormulaResultStatus.SUCCESS,\n                result: max,\n            };\n        }\n        case CFValueType.min: {\n            let min: number | undefined;\n            matrix.forValue((row, col, value) => {\n                if (min === undefined) {\n                    min = value;\n                }\n                if (value < min!) {\n                    min = value;\n                }\n            });\n            return {\n                status: FormulaResultStatus.SUCCESS,\n                result: min,\n            };\n        }\n        case CFValueType.percent: {\n            let max: number | undefined;\n            let min: number | undefined;\n            matrix.forValue((row, col, value) => {\n                if (max === undefined || min === undefined) {\n                    max = value;\n                    min = value;\n                }\n                if (value > max!) {\n                    max = value;\n                }\n                if (value < min!) {\n                    min = value;\n                }\n            });\n\n            const length = (max || 0) - (min || 0);\n            const v = Math.max(Math.min(Number(value.value) || 0, 100), 0);\n            return {\n                status: FormulaResultStatus.SUCCESS,\n                result: length * (v / 100) + (min || 0),\n            };\n        }\n        case CFValueType.percentile: {\n            const list = matrix.toNativeArray().sort((a, b) => a - b);\n            const v = Math.max(Math.min(Number(value.value) || 0, 100), 0);\n            const index = (list.length - 1) * v / 100;\n            const intIndex = Math.floor(index);\n            const decimalIndex = index - intIndex;\n            const result = list[intIndex] + (list[Math.min(intIndex + 1, list.length - 1)] - list[intIndex]) * decimalIndex;\n            return {\n                status: FormulaResultStatus.SUCCESS,\n                result,\n            };\n        }\n\n        case CFValueType.formula: {\n            const { accessor, unitId, subUnitId, cfId } = context;\n            const formulaText = String(value.value);\n            const conditionalFormattingFormulaService = accessor.get(ConditionalFormattingFormulaService);\n            conditionalFormattingFormulaService.registerFormulaWithRange(unitId, subUnitId, cfId, formulaText);\n            const result = conditionalFormattingFormulaService.getFormulaResultWithCoords(unitId, subUnitId, cfId, formulaText);\n            return result;\n        }\n        case CFValueType.num: {\n            const v = Number(value.value);\n            return {\n                status: FormulaResultStatus.SUCCESS,\n                result: Number.isNaN(v) ? 0 : v,\n            };\n        }\n    }\n};\n\nexport const getCacheStyleMatrix = <S = any>(unitId: string, subUnitId: string, rule: IConditionFormattingRule, context: IContext) => {\n    const { accessor } = context;\n    const conditionalFormattingViewModel = accessor.get(ConditionalFormattingViewModel);\n    const matrix = new ObjectMatrix<S>();\n    rule.ranges.forEach((range) => {\n        Range.foreach(range, (row, col) => {\n            const cellCfItem = conditionalFormattingViewModel.getCellCfs(unitId, subUnitId, row, col);\n            if (cellCfItem) {\n                const item = cellCfItem.find((item) => item.cfId === rule.cfId);\n                item?.result && matrix.setValue(row, col, item.result);\n            }\n        });\n    });\n    return matrix;\n};\n// eslint-disable-next-line complexity\nexport const compareWithNumber = (config: { operator: CFNumberOperator; value: number | [number, number] }, v: number) => {\n    switch (config.operator) {\n        case CFNumberOperator.between: {\n            if (typeof config.value !== 'object' || !(config.value as unknown as Array<number>).length) {\n                return;\n            }\n            const start = Math.min(...config.value as [number, number]);\n            const end = Math.max(...config.value as [number, number]);\n            return v >= start && v <= end;\n        }\n        case CFNumberOperator.notBetween: {\n            if (typeof config.value !== 'object' || !(config.value as unknown as Array<number>).length) {\n                return;\n            }\n            const start = Math.min(...config.value as [number, number]);\n            const end = Math.max(...config.value as [number, number]);\n            return !(v >= start && v <= end);\n        }\n        case CFNumberOperator.equal: {\n            const condition = (config.value || 0) as number;\n            return isFloatsEqual(condition, v);\n        }\n        case CFNumberOperator.notEqual: {\n            const condition = (config.value || 0) as number;\n            return !isFloatsEqual(condition, v);\n        }\n        case CFNumberOperator.greaterThan: {\n            const condition = (config.value || 0) as number;\n            return v > condition;\n        }\n        case CFNumberOperator.greaterThanOrEqual: {\n            const condition = (config.value || 0) as number;\n            return v >= condition;\n        }\n        case CFNumberOperator.lessThan: {\n            const condition = (config.value || 0) as number;\n            return v < condition;\n        }\n        case CFNumberOperator.lessThanOrEqual: {\n            const condition = (config.value || 0) as number;\n            return v <= condition;\n        }\n        default: {\n            return false;\n        }\n    }\n};\nexport const getOppositeOperator = (operator: CFNumberOperator) => {\n    switch (operator) {\n        case CFNumberOperator.greaterThan: {\n            return CFNumberOperator.lessThanOrEqual;\n        }\n        case CFNumberOperator.greaterThanOrEqual: {\n            return CFNumberOperator.lessThan;\n        }\n        case CFNumberOperator.lessThan: {\n            return CFNumberOperator.greaterThanOrEqual;\n        }\n        case CFNumberOperator.lessThanOrEqual: {\n            return CFNumberOperator.greaterThan;\n        }\n    }\n    return operator;\n};\n\nexport const getColorScaleFromValue = (colorList: { color: ColorKit; value: number }[], value: number) => {\n    interface IRgbColor {\n        b: number;\n        g: number;\n        r: number;\n        a?: number;\n    }\n    const prefixRgba = (rgb: IRgbColor): Required<IRgbColor> => {\n        if (rgb.a !== undefined) {\n            return rgb as Required<IRgbColor>;\n        } else {\n            return { ...rgb, a: 1 };\n        }\n    };\n    const index = colorList.findIndex((item) => item.value >= value);\n    const preIndex = index - 1;\n    if (index === 0) {\n        return colorList[0].color.toRgbString();\n    } else if (preIndex >= 0) {\n        const minItem = colorList[preIndex];\n        const maxItem = colorList[index];\n\n        if (minItem.color.isValid && maxItem.color.isValid) {\n            const minRgb = prefixRgba(minItem.color.toRgb());\n            const maxRgb = prefixRgba(maxItem.color.toRgb());\n            const length = maxItem.value - minItem.value;\n            const v = (value - minItem.value) / length;\n            const rgbResult = ['r', 'g', 'b', 'a'].reduce((obj, key) => {\n                const minV = minRgb[key as unknown as keyof IRgbColor];\n                obj[key as unknown as keyof IRgbColor] = (maxRgb[key as unknown as keyof IRgbColor] - minV) * v + minV;\n                return obj;\n            }, {} as IRgbColor);\n            const result = new ColorKit(rgbResult).toRgbString();\n            return result;\n        }\n    } else {\n        return colorList[colorList.length - 1].color.toRgbString();\n    }\n};\n\nexport const filterRange = (ranges: IRange[], maxRow: number, maxCol: number): IRange[] => {\n    return ranges.map((range) => {\n        if (range.startColumn > maxCol || range.startRow > maxRow) {\n            return null as unknown as IRange;\n        }\n        const _range = { ...range };\n        _range.endRow = Math.min(_range.endRow, maxRow);\n        _range.endColumn = Math.min(_range.endColumn, maxCol);\n        return _range;\n    }).filter((range) => !!range);\n};\n\nexport function getMaxInFormulaResult(result: IObjectMatrixPrimitiveType<Nullable<CellValue>>) {\n    let max = 0;\n    new ObjectMatrix(result).forValue((row, col, value) => {\n        max = Math.max(Number.isNaN(max) ? 0 : max, Number(value));\n    });\n    return max;\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IColorScale, IConditionFormattingRule } from '../type';\nimport type { IContext } from './base-calculate-unit';\nimport { CellValueType, ColorKit, ObjectMatrix, Range } from '@univerjs/core';\nimport { isObject } from '@univerjs/engine-render';\nimport { CFValueType } from '../../base/const';\nimport { FormulaResultStatus } from '../../services/conditional-formatting-formula.service';\nimport { BaseCalculateUnit, CalculateEmitStatus } from './base-calculate-unit';\nimport { filterRange, getColorScaleFromValue, getValueByType, isNullable } from './utils';\n\ninterface IConfigItem {\n    value: number;\n    color: ColorKit;\n}\n\nexport class ColorScaleCalculateUnit extends BaseCalculateUnit<IConfigItem[], string> {\n    override preComputing(_row: number, _col: number, context: IContext): void {\n        const rule = context.rule as IConditionFormattingRule<IColorScale>;\n        const worksheet = context.worksheet;\n        const matrix = new ObjectMatrix<number>();\n        const isNeedMatrix = !rule.rule.config.every((item) => item.value.type === CFValueType.num);\n        if (isNeedMatrix) {\n            const ranges = filterRange(rule.ranges, worksheet.getMaxRows() - 1, worksheet.getMaxColumns() - 1);\n            ranges.forEach((range) => {\n                Range.foreach(range, (row, col) => {\n                    const cell = context.getCellValue(row, col);\n                    const v = cell && cell.v;\n                    if (!isNullable(v) && cell?.t === CellValueType.NUMBER) {\n                        const _value = Number(v);\n                        !Number.isNaN(_value) && matrix.setValue(row, col, _value);\n                    }\n                });\n            });\n        }\n        const _configList = [...rule.rule.config].sort((a, b) => a.index - b.index).map((config) => {\n            return {\n                value: getValueByType(config.value, matrix, {\n                    ...context,\n                    cfId: rule.cfId,\n                }),\n                color: new ColorKit(config.color),\n            };\n        });\n        const isAllFinished = !_configList.some((item) => isObject(item.value) ? item.value.status !== FormulaResultStatus.SUCCESS : false);\n\n        if (isAllFinished) {\n            const colorList = _configList\n                .map((item) => item.color)\n                .reduce((result, color, index) => {\n                    result.result.push({ color, value: result.sortValue[index] });\n                    return result;\n                }, {\n                    result: [] as { value: number; color: ColorKit }[],\n                    sortValue: _configList.map((item) => item.value.result as number).sort((a, b) => a - b),\n                })\n                .result;\n            this.setPreComputingCache(colorList);\n            this._preComputingStatus$.next(CalculateEmitStatus.preComputingEnd);\n            return;\n        }\n        this._preComputingStatus$.next(CalculateEmitStatus.preComputing);\n    }\n\n    protected override getCellResult(row: number, col: number, preComputingResult: IConfigItem[], context: IContext) {\n        if (!preComputingResult) {\n            return null;\n        }\n        const value = context.getCellValue(row, col);\n        if (value.t === CellValueType.NUMBER) {\n            const v = Number(value.v);\n            if (!Number.isNaN(v)) {\n                const color = getColorScaleFromValue(preComputingResult, v);\n                return color;\n            }\n        }\n        return undefined;\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, IScale } from '@univerjs/core';\nimport type { SpreadsheetSkeleton, UniverRenderingContext } from '@univerjs/engine-render';\nimport type { IDataBarCellData } from './type';\nimport { Range } from '@univerjs/core';\nimport { FIX_ONE_PIXEL_BLUR_OFFSET, SheetExtension, SpreadsheetExtensionRegistry } from '@univerjs/engine-render';\n\nexport const dataBarUKey = 'sheet-conditional-rule-data-bar';\nexport const defaultDataBarPositiveColor = '#ffbe38';\nexport const defaultDataBarNativeColor = '#abd91a';\n\nexport const defaultPlaceholderColor = '#000';\n\nconst EXTENSION_Z_INDEX = 34;\n\nexport class DataBar extends SheetExtension {\n    private _paddingRightAndLeft = 2;\n    private _paddingTopAndBottom = 2;\n    override uKey = dataBarUKey;\n\n    override Z_INDEX = EXTENSION_Z_INDEX;\n    _radius = 1;\n\n    // eslint-disable-next-line max-lines-per-function\n    override draw(\n        ctx: UniverRenderingContext,\n        _parentScale: IScale,\n        spreadsheetSkeleton: SpreadsheetSkeleton,\n        diffRanges: IRange[]\n    ) {\n        const { worksheet } = spreadsheetSkeleton;\n\n        if (!worksheet) {\n            return false;\n        }\n        ctx.save();\n        // ctx.globalCompositeOperation = 'destination-over';\n        Range.foreach(spreadsheetSkeleton.rowColumnSegment, (row, col) => {\n            if (!worksheet.getRowVisible(row) || !worksheet.getColVisible(col)) {\n                return;\n            }\n            const cellData = worksheet.getCell(row, col) as IDataBarCellData;\n            if (cellData && cellData.dataBar) {\n                const { color, value, startPoint, isGradient } = cellData.dataBar;\n                const cellInfo = spreadsheetSkeleton.getCellWithCoordByIndex(row, col, false);\n                let { isMerged, isMergedMainCell, mergeInfo, startY, endY, startX, endX } = cellInfo;\n                if (isMerged) {\n                    return;\n                }\n                if (isMergedMainCell) {\n                    startY = mergeInfo.startY;\n                    endY = mergeInfo.endY;\n                    startX = mergeInfo.startX;\n                    endX = mergeInfo.endX;\n                }\n                if (!this.isRenderDiffRangesByCell(mergeInfo, diffRanges)) {\n                    return;\n                }\n                const borderWidth = endX - startX;\n                const borderHeight = (endY + FIX_ONE_PIXEL_BLUR_OFFSET) - startY;\n                const width = borderWidth - this._paddingRightAndLeft * 2;\n                const height = borderHeight - this._paddingTopAndBottom * 2;\n                if (value > 0) {\n                    // Width less than 1, almost invisible\n                    const dataBarWidth = Math.max(width * (1 - startPoint / 100) * value / 100, 1);\n                    const x0 = startX + this._paddingRightAndLeft + (startPoint / 100) * width;\n                    const y0 = startY + this._paddingTopAndBottom;\n                    if (isGradient) {\n                        const gradient = ctx.createLinearGradient(x0, y0, x0 + dataBarWidth, y0);\n                        gradient.addColorStop(0, color);\n                        gradient.addColorStop(1, 'rgb(255 255 255)');\n                        ctx.fillStyle = gradient;\n                        ctx.strokeStyle = color;\n                        ctx.lineWidth = 1;\n                    } else {\n                        ctx.fillStyle = color;\n                    }\n\n                    this._drawRectWithRoundedCorner(ctx, x0, y0, dataBarWidth, height, false, true, true, false);\n                    if (isGradient) {\n                        ctx.stroke();\n                    }\n                } else {\n                    // Width less than 1, almost invisible\n                    const dataBarWidth = Math.max(width * startPoint / 100 * Math.abs(value) / 100, 1);\n                    const x0 = startX + this._paddingRightAndLeft + (startPoint / 100) * width - dataBarWidth;\n                    const y0 = startY + this._paddingTopAndBottom;\n                    if (isGradient) {\n                        const gradient = ctx.createLinearGradient(x0, y0, x0 + dataBarWidth, y0);\n                        gradient.addColorStop(0, 'rgb(255 255 255)');\n                        gradient.addColorStop(1, color);\n                        ctx.fillStyle = gradient;\n                        ctx.strokeStyle = color;\n                        ctx.lineWidth = 1;\n                    } else {\n                        ctx.fillStyle = color;\n                    }\n\n                    this._drawRectWithRoundedCorner(ctx, x0, y0, dataBarWidth, height, true, false, false, true);\n                    if (isGradient) {\n                        ctx.stroke();\n                    }\n                }\n            }\n        });\n        ctx.restore();\n    }\n\n    private _drawRectWithRoundedCorner(ctx: UniverRenderingContext, x: number, y: number, width: number, height: number, topLeftRadius: boolean, topRightRadius: boolean, bottomRightRadius: boolean, bottomLeftRadius: boolean) {\n        const radius = this._radius;\n        if (!height || !width) {\n            return;\n        }\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        if (topRightRadius) {\n            ctx.arcTo(x + width, y, x + width, y + radius, radius);\n        } else {\n            ctx.lineTo(x + width, y);\n        }\n        ctx.lineTo(x + width, y + height - radius);\n        if (bottomRightRadius) {\n            ctx.arcTo(x + width, y + height, x + width - radius, y + height, radius);\n        } else {\n            ctx.lineTo(x + width, y + height);\n        }\n        ctx.lineTo(x + radius, y + height);\n        if (bottomLeftRadius) {\n            ctx.arcTo(x, y + height, x, y + height - radius, radius);\n        } else {\n            ctx.lineTo(x, y + height);\n        }\n        ctx.lineTo(x, y + radius);\n        if (topLeftRadius) {\n            ctx.arcTo(x, y, x + radius, y, radius);\n        } else {\n            ctx.lineTo(x, y);\n        }\n        ctx.closePath();\n        ctx.fill();\n    }\n}\n\nSpreadsheetExtensionRegistry.add(DataBar);\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData } from '@univerjs/core';\nimport type { IConditionFormattingRule, IDataBar } from '../type';\nimport type { IContext } from './base-calculate-unit';\nimport { CellValueType, ObjectMatrix, Range } from '@univerjs/core';\nimport { CFValueType } from '../../base/const';\nimport { defaultDataBarNativeColor, defaultDataBarPositiveColor, defaultPlaceholderColor } from '../../render/data-bar.render';\nimport { FormulaResultStatus } from '../../services/conditional-formatting-formula.service';\nimport { BaseCalculateUnit, CalculateEmitStatus } from './base-calculate-unit';\nimport { filterRange, getValueByType, isNullable } from './utils';\n\nconst getSafeValue = (v: number) => Math.max(Math.min(100, v), 0);\n\nconst getValue = (row: number, col: number, getCell: (row: number, col: number) => ICellData) => {\n    const cell = getCell(row, col);\n    if (cell && cell.t === CellValueType.NUMBER) {\n        const value = Number(cell.v);\n        return Number.isNaN(value) ? null : value;\n    }\n    return null;\n};\ninterface IConfig {\n    min: number;\n    max: number;\n    startPoint: number;\n}\nexport class DataBarCalculateUnit extends BaseCalculateUnit<IConfig> {\n    override preComputing(row: number, col: number, context: IContext): void {\n        const rule = context.rule as IConditionFormattingRule<IDataBar>;\n        const ruleConfig = rule.rule;\n        const worksheet = context.worksheet;\n        const matrix = new ObjectMatrix<number>();\n        const isNeedMatrix = ![rule.rule.config.max, rule.rule.config.min].every((e) => e.type === CFValueType.num);\n        if (isNeedMatrix) {\n            const ranges = filterRange(rule.ranges, worksheet.getMaxRows() - 1, worksheet.getMaxColumns() - 1);\n            ranges.forEach((range) => {\n                Range.foreach(range, (row, col) => {\n                    const cell = context.getCellValue(row, col);\n                    const v = cell && cell.v;\n                    if (!isNullable(v) && cell?.t === CellValueType.NUMBER) {\n                        const _value = Number(v);\n                        !Number.isNaN(_value) && matrix.setValue(row, col, _value);\n                    }\n                });\n            });\n        }\n        const _min = getValueByType(ruleConfig.config.min, matrix, { ...context, cfId: rule.cfId });\n        const _max = getValueByType(ruleConfig.config.max, matrix, { ...context, cfId: rule.cfId });\n        let min = 0;\n        let max = 0;\n\n        // If the formula triggers the calculation, wait for the result,\n        // and use the previous style cache until the result comes out\u3002\n        if (_min.status === FormulaResultStatus.SUCCESS) {\n            const v = Number(_min.result); // Get the minimum value\n            min = Number.isNaN(v) ? 0 : v;\n        } else {\n            this._preComputingStatus$.next(CalculateEmitStatus.preComputing);\n            return;\n        }\n\n        if (_max.status === FormulaResultStatus.SUCCESS) {\n            const maxResult = Number(_max.result); // Get the maximum value\n            const v = Number.isNaN(maxResult) ? 0 : maxResult;\n            max = Math.max(v, min);\n            min = Math.min(v, min);\n            let startPoint = 50;\n            if (min < 0 && max <= 0) {\n                startPoint = 100;\n            } else if (min < 0 && max > 0) {\n                const length = Math.abs(max) + Math.abs(min);\n                startPoint = Math.abs(min) / length * 100;\n            } else if (min >= 0 && max > 0) {\n                startPoint = 0;\n            }\n            this.setPreComputingCache({ min, max, startPoint });\n            this._preComputingStatus$.next(CalculateEmitStatus.preComputingEnd);\n            return;\n        }\n        this._preComputingStatus$.next(CalculateEmitStatus.preComputing);\n    }\n\n    // eslint-disable-next-line complexity\n    protected override getCellResult(row: number, col: number, preComputingResult: IConfig, context: IContext) {\n        const { min, max, startPoint } = preComputingResult;\n        const rule = context.rule as IConditionFormattingRule<IDataBar>;\n        const ruleConfig = rule.rule;\n        const isShowValue = ruleConfig.isShowValue;\n        const isGradient = ruleConfig.config.isGradient;\n        const value = getValue(row, col, context.getCellValue);\n        if (value === null || value < min || (min === max || max < min)) {\n            return undefined;\n        }\n\n        if (value === 0) {\n            // Renders a placeholder if the current value is 0\n            return { color: defaultPlaceholderColor, startPoint, value: 0, isGradient, isShowValue };\n        }\n        if (min < 0 && max <= 0) {\n            const length = max - min;\n\n            const v = getSafeValue((max - value) / length * 100);\n            if (v === 0) {\n                // Renders noting if the result value is 0\n                return undefined;\n            }\n            return { color: ruleConfig.config.nativeColor || defaultDataBarNativeColor, startPoint, value: -v, isGradient, isShowValue };\n        } else if (min < 0 && max > 0) {\n            if (value > 0) {\n                const v = getSafeValue(Math.min(value / max, 1) * 100);\n                if (v === 0) {\n                    return undefined;\n                }\n                return { color: ruleConfig.config.positiveColor || defaultDataBarPositiveColor, startPoint, value: v, isGradient, isShowValue };\n            } else {\n                const v = getSafeValue(Math.min(Math.abs(value) / Math.abs(min), 1) * 100);\n                if (v === 0) {\n                    return undefined;\n                }\n                return { color: ruleConfig.config.nativeColor || defaultDataBarNativeColor, startPoint, value: -v, isGradient, isShowValue };\n            }\n        } else if (min >= 0 && max > 0) {\n            const length = max - min;\n            const startPoint = 0;\n            const v = getSafeValue((1 - (max - value) / length) * 100);\n            if (v === 0) {\n                return undefined;\n            }\n            return { color: ruleConfig.config.positiveColor || defaultDataBarPositiveColor, startPoint, value: v, isGradient, isShowValue };\n        }\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IStyleData, Nullable } from '@univerjs/core';\nimport type { IAverageHighlightCell, IFormulaHighlightCell, IHighlightCell, INumberHighlightCell, IRankHighlightCell, ITextHighlightCell, ITimePeriodHighlightCell } from '../type';\nimport type { IContext } from './base-calculate-unit';\nimport { CellValueType, dayjs, Range, Tools } from '@univerjs/core';\nimport { ERROR_TYPE_SET } from '@univerjs/engine-formula';\nimport { CFNumberOperator, CFSubRuleType, CFTextOperator, CFTimePeriodOperator } from '../../base/const';\nimport { ConditionalFormattingFormulaService, FormulaResultStatus } from '../../services/conditional-formatting-formula.service';\nimport { BaseCalculateUnit, CalculateEmitStatus } from './base-calculate-unit';\nimport { compareWithNumber, getCellValue, isFloatsEqual, isNullable, serialTimeToTimestamp } from './utils';\n\ninterface IConfig {\n    value: any;\n    type: CFSubRuleType;\n}\nexport class HighlightCellCalculateUnit extends BaseCalculateUnit<Nullable<IConfig>, Nullable<IStyleData>> {\n    // eslint-disable-next-line max-lines-per-function\n    override preComputing(row: number, col: number, context: IContext): void {\n        const ruleConfig = context.rule.rule as IHighlightCell;\n        const ranges = context.rule.ranges;\n        // eslint-disable-next-line max-lines-per-function, complexity\n        const getCache = () => {\n            switch (ruleConfig.subType) {\n                case CFSubRuleType.average: {\n                    let sum = 0;\n                    let count = 0;\n                    ranges.forEach((range) => {\n                        Range.foreach(range, (row, col) => {\n                            const cell = context.getCellValue(row, col);\n                            const v = getCellValue(cell || undefined);\n                            if (cell && cell.t === CellValueType.NUMBER && v !== undefined) {\n                                sum += Number(v) || 0;\n                                count++;\n                            }\n                        });\n                    });\n                    return { value: sum / count, type: ruleConfig.subType };\n                }\n                case CFSubRuleType.uniqueValues:\n                case CFSubRuleType.duplicateValues: {\n                    const cacheMap: Map<any, number> = new Map();\n                    ranges.forEach((range) => {\n                        Range.foreach(range, (row, col) => {\n                            const cell = context.getCellValue(row, col);\n                            const v = getCellValue(cell || undefined);\n                            if (v !== undefined) {\n                                const cache = cacheMap.get(v);\n                                if (cache) {\n                                    cacheMap.set(v, cache + 1);\n                                } else {\n                                    cacheMap.set(v, 1);\n                                }\n                            }\n                        });\n                    });\n                    return { value: cacheMap, type: ruleConfig.subType };\n                }\n                case CFSubRuleType.rank: {\n                    let allValue: number[] = [];\n                    ranges.forEach((range) => {\n                        Range.foreach(range, (row, col) => {\n                            const cell = context.getCellValue(row, col);\n                            const v = getCellValue(cell || undefined);\n                            if (cell && cell.t === CellValueType.NUMBER && v !== undefined) {\n                                allValue.push(Number(v) || 0);\n                            }\n                        });\n                    });\n                    allValue.sort((a, b) => b - a);\n                    const configRule = context.rule.rule as IRankHighlightCell;\n                    if (configRule.isPercent) {\n                        if (configRule.isBottom) {\n                            allValue = allValue.toReversed();\n                        }\n\n                        // Calculate the index directly based on the threshold percentage.\n                        const threshold = Tools.clamp(configRule.value, 0, 100) / 100;\n                        const targetIndex = Math.floor(threshold * allValue.length);\n                        // Ensure the index is within bounds\n                        const safeIndex = Tools.clamp(targetIndex - 1, 0, allValue.length - 1);\n                        return { value: allValue[safeIndex], type: ruleConfig.subType };\n                    }\n\n                    const targetIndex = Math.floor(Tools.clamp(configRule.isBottom ? (configRule.value - 1) : configRule.value, 0, allValue.length));\n                    if (configRule.isBottom) {\n                        return { value: allValue[allValue.length - targetIndex - 1], type: ruleConfig.subType };\n                    } else {\n                        return { value: allValue[Math.max(targetIndex - 1, 0)], type: ruleConfig.subType };\n                    }\n                }\n                case CFSubRuleType.formula: {\n                    const _ruleConfig = ruleConfig as IFormulaHighlightCell;\n                    const conditionalFormattingFormulaService = context.accessor.get(ConditionalFormattingFormulaService);\n                    conditionalFormattingFormulaService.registerFormulaWithRange(context.unitId, context.subUnitId, context.rule.cfId, _ruleConfig.value, context.rule.ranges);\n                    const result = conditionalFormattingFormulaService.getFormulaMatrix(context.unitId, context.subUnitId, context.rule.cfId, _ruleConfig.value);\n                    if (result && result.status === FormulaResultStatus.SUCCESS) {\n                        this._preComputingStatus$.next(CalculateEmitStatus.preComputingEnd);\n                        return {\n                            value: result.result,\n                            type: ruleConfig.subType,\n                        };\n                    } else {\n                        this._preComputingStatus$.next(CalculateEmitStatus.preComputing);\n                    }\n                    return null;\n                }\n                case CFSubRuleType.timePeriod: {\n                    const subRuleConfig = ruleConfig as ITimePeriodHighlightCell;\n                    switch (subRuleConfig.operator) {\n                        case CFTimePeriodOperator.last7Days: {\n                            return {\n                                value: {\n                                    start: dayjs().subtract(7, 'day').valueOf(),\n                                    end: dayjs().valueOf(),\n                                },\n                                type: ruleConfig.subType,\n                            };\n                        }\n                        case CFTimePeriodOperator.lastMonth: {\n                            return {\n                                value: {\n                                    start: dayjs().startOf('month').subtract(1, 'month').valueOf(),\n                                    end: dayjs().endOf('month').subtract(1, 'month').valueOf(),\n                                },\n                                type: ruleConfig.subType,\n                            };\n                        }\n                        case CFTimePeriodOperator.lastWeek: {\n                            return {\n                                value: {\n                                    start: dayjs().startOf('week').subtract(1, 'week').valueOf(),\n                                    end: dayjs().endOf('week').subtract(1, 'week').valueOf(),\n                                },\n                                type: ruleConfig.subType,\n                            };\n                        }\n                        case CFTimePeriodOperator.nextMonth: {\n                            return {\n                                value: {\n                                    start: dayjs().startOf('month').add(1, 'month').valueOf(),\n                                    end: dayjs().endOf('month').add(1, 'month').valueOf(),\n                                },\n                                type: ruleConfig.subType,\n                            };\n                        }\n                        case CFTimePeriodOperator.nextWeek: {\n                            return {\n                                value: {\n                                    start: dayjs().startOf('week').add(1, 'week').valueOf(),\n                                    end: dayjs().endOf('week').add(1, 'week').valueOf(),\n                                },\n                                type: ruleConfig.subType,\n                            };\n                        }\n                        case CFTimePeriodOperator.thisMonth: {\n                            return {\n                                value: {\n                                    start: dayjs().startOf('month').valueOf(),\n                                    end: dayjs().endOf('month').valueOf(),\n                                },\n                                type: ruleConfig.subType,\n                            };\n                        }\n                        case CFTimePeriodOperator.thisWeek: {\n                            return {\n                                value: {\n                                    start: dayjs().startOf('week').valueOf(),\n                                    end: dayjs().endOf('week').valueOf(),\n                                },\n                                type: ruleConfig.subType,\n                            };\n                        }\n                        case CFTimePeriodOperator.today: {\n                            return {\n                                value: {\n                                    start: dayjs().startOf('day').valueOf(),\n                                    end: dayjs().endOf('day').valueOf(),\n                                },\n                                type: ruleConfig.subType,\n                            };\n                        }\n                        case CFTimePeriodOperator.tomorrow: {\n                            return {\n                                value: {\n                                    start: dayjs().startOf('day').add(1, 'day').valueOf(),\n                                    end: dayjs().endOf('day').add(1, 'day').valueOf(),\n                                },\n                                type: ruleConfig.subType,\n                            };\n                        }\n                        case CFTimePeriodOperator.yesterday: {\n                            return {\n                                value: {\n                                    start: dayjs().startOf('day').subtract(1, 'day').valueOf(),\n                                    end: dayjs().endOf('day').subtract(1, 'day').valueOf(),\n                                },\n                                type: ruleConfig.subType,\n                            };\n                        }\n                    }\n                }\n            }\n        };\n        const result = getCache();\n        this.setPreComputingCache(result);\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    protected override getCellResult(row: number, col: number, preComputingResult: Nullable<IConfig>, context: IContext) {\n        const cellValue = context.getCellValue(row, col);\n        const ruleConfig = context.rule.rule as IHighlightCell;\n        // eslint-disable-next-line max-lines-per-function, complexity\n        const run = () => {\n            switch (ruleConfig.subType) {\n                case CFSubRuleType.number: {\n                    const v = cellValue && Number(cellValue.v);\n                    const isNumber = cellValue?.t === CellValueType.NUMBER;\n                    const subRuleConfig = ruleConfig as INumberHighlightCell;\n                    if (!isNumber) {\n                        if ([CFNumberOperator.notEqual, CFNumberOperator.notBetween].includes(subRuleConfig.operator)) {\n                            return true;\n                        }\n                        return false;\n                    }\n\n                    if (isNullable(v) || Number.isNaN(v)) {\n                        return;\n                    }\n\n                    return compareWithNumber({ operator: subRuleConfig.operator, value: subRuleConfig.value || 0 }, v || 0);\n                }\n                case CFSubRuleType.text: {\n                    const subRuleConfig = ruleConfig as ITextHighlightCell;\n                    const value = getCellValue(cellValue!);\n                    const v = value === null ? '' : String(value);\n                    const condition = subRuleConfig.value || '';\n                    switch (subRuleConfig.operator) {\n                        case CFTextOperator.beginsWith: {\n                            return v.startsWith(condition);\n                        }\n                        case CFTextOperator.containsBlanks: {\n                            return /^\\s*$/.test(v);\n                        }\n                        case CFTextOperator.notContainsBlanks: {\n                            return !/^\\s*$/.test(v);\n                        }\n                        case CFTextOperator.containsErrors: {\n                            return (ERROR_TYPE_SET as Set<unknown>).has(v);\n                        }\n                        case CFTextOperator.notContainsErrors: {\n                            return !(ERROR_TYPE_SET as Set<unknown>).has(v);\n                        }\n                        case CFTextOperator.containsText: {\n                            return v.indexOf(condition) > -1;\n                        }\n                        case CFTextOperator.notContainsText: {\n                            return v.indexOf(condition) === -1;\n                        }\n                        case CFTextOperator.endsWith: {\n                            return v.endsWith(condition);\n                        }\n                        case CFTextOperator.equal: {\n                            return v === condition;\n                        }\n                        case CFTextOperator.notEqual: {\n                            return v !== condition;\n                        }\n                        default: {\n                            return false;\n                        }\n                    }\n                }\n                case CFSubRuleType.timePeriod: {\n                    const value = getCellValue(cellValue!);\n                    if (isNullable(value) || Number.isNaN(Number(value)) || cellValue?.t !== CellValueType.NUMBER || !preComputingResult) {\n                        return;\n                    }\n                    const v = serialTimeToTimestamp(Number(value));\n                    const { start, end } = preComputingResult.value!;\n                    return v >= start && v <= end;\n                }\n                case CFSubRuleType.average: {\n                    const value = cellValue && cellValue.v;\n                    const v = Number(value);\n                    const isNumber = cellValue?.t === CellValueType.NUMBER;\n                    const subRuleConfig = ruleConfig as IAverageHighlightCell;\n\n                    if (!isNumber) {\n                        if (CFNumberOperator.notEqual === subRuleConfig.operator) {\n                            return true;\n                        }\n                        return false;\n                    }\n\n                    if (isNullable(value) || Number.isNaN(v) || !preComputingResult) {\n                        return false;\n                    }\n\n                    const average = preComputingResult.value;\n\n                    switch (subRuleConfig.operator) {\n                        case CFNumberOperator.greaterThan: {\n                            return v > average;\n                        }\n                        case CFNumberOperator.greaterThanOrEqual: {\n                            return v >= average;\n                        }\n                        case CFNumberOperator.lessThan: {\n                            return v < average;\n                        }\n                        case CFNumberOperator.lessThanOrEqual: {\n                            return v <= average;\n                        }\n                        case CFNumberOperator.equal: {\n                            return isFloatsEqual(v, average);\n                        }\n                        case CFNumberOperator.notEqual: {\n                            return !isFloatsEqual(v, average);\n                        }\n                        default: {\n                            return false;\n                        }\n                    }\n                }\n                case CFSubRuleType.rank: {\n                    const value = getCellValue(cellValue!);\n\n                    const v = Number(value);\n\n                    if (isNullable(value) || Number.isNaN(v) || cellValue?.t !== CellValueType.NUMBER || !preComputingResult) {\n                        return false;\n                    }\n\n                    const targetValue = preComputingResult.value;\n                    const subRuleConfig = ruleConfig as IRankHighlightCell;\n                    if (subRuleConfig.isBottom) {\n                        return v <= targetValue;\n                    } else {\n                        return v >= targetValue;\n                    }\n                }\n                case CFSubRuleType.uniqueValues: {\n                    const value = getCellValue(cellValue!);\n\n                    if (isNullable(value) || !preComputingResult) {\n                        return false;\n                    }\n                    const uniqueCache = preComputingResult.value;\n                    return uniqueCache.get(value) === 1;\n                }\n                case CFSubRuleType.duplicateValues: {\n                    const value = getCellValue(cellValue!);\n\n                    if (isNullable(value) || !preComputingResult) {\n                        return false;\n                    }\n                    const uniqueCache = preComputingResult.value;\n                    return uniqueCache.get(value) !== 1;\n                }\n                case CFSubRuleType.formula: {\n                    // const _ruleConfig = ruleConfig as IFormulaHighlightCell;\n                    const cache = preComputingResult?.value;\n                    if (cache) {\n                        const value = cache.getValue(row, col);\n                        return value === true;\n                    }\n                    return false;\n                }\n            }\n        };\n        const result = run();\n        return result ? ruleConfig.style : {};\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ICellData, Nullable } from '@univerjs/core';\nimport type { CFNumberOperator } from '../../base/const';\nimport type { IIconSet } from '../type';\nimport type { IContext } from './base-calculate-unit';\nimport { CellValueType, ObjectMatrix, Range } from '@univerjs/core';\nimport { CFValueType } from '../../base/const';\nimport { FormulaResultStatus } from '../../services/conditional-formatting-formula.service';\nimport { BaseCalculateUnit, CalculateEmitStatus } from './base-calculate-unit';\nimport { compareWithNumber, filterRange, getOppositeOperator, getValueByType, isNullable } from './utils';\n\nconst getValue = (row: number, col: number, getCell: (row: number, col: number) => ICellData) => {\n    const cell = getCell(row, col);\n    if (cell && cell.t === CellValueType.NUMBER) {\n        const value = Number(cell.v);\n        return Number.isNaN(value) ? null : value;\n    }\n    return null;\n};\ninterface IConfigItem {\n    operator: CFNumberOperator;\n    value: number;\n    iconType: string;\n    iconId: string;\n}\nexport class IconSetCalculateUnit extends BaseCalculateUnit<IConfigItem[]> {\n    override preComputing(_row: number, _col: number, context: IContext): void {\n        const ruleConfig = context.rule.rule as IIconSet;\n        const worksheet = context.worksheet;\n        const matrix = new ObjectMatrix<number>();\n        const isNeedMatrix = !ruleConfig.config.every((e) => e.value.type === CFValueType.num);\n        if (isNeedMatrix) {\n            const ranges = filterRange(context.rule.ranges, worksheet.getMaxRows() - 1, worksheet.getMaxColumns() - 1);\n            ranges.forEach((range) => {\n                Range.foreach(range, (row, col) => {\n                    const cell = context.getCellValue(row, col);\n                    const v = cell && cell.v;\n                    if (!isNullable(v) && cell?.t === CellValueType.NUMBER) {\n                        const _value = Number(v);\n                        !Number.isNaN(_value) && matrix.setValue(row, col, _value);\n                    }\n                });\n            });\n        }\n        const splitValueResult = ruleConfig.config.map((v) => getValueByType(v.value, matrix, { ...context, cfId: context.rule.cfId }));\n        const isAllFinished = !splitValueResult.some((item) => item.status !== FormulaResultStatus.SUCCESS);\n        if (isAllFinished) {\n            const splitValue = splitValueResult.map((item, index) => ({\n                operator: ruleConfig.config[index].operator,\n                value: Number(item.result) || 0,\n            })).reduce((result, cur, index, list) => {\n                const item = ruleConfig.config[index];\n                if (!index || index === list.length - 1) {\n                    result.push({ ...cur, iconId: item.iconId, iconType: item.iconType });\n                } else {\n                    const pre = list[index - 1];\n                    if (!compareWithNumber(pre, cur.value)) {\n                        result.push({ ...cur, iconId: item.iconId, iconType: item.iconType });\n                    }\n                }\n                return result;\n            }, [] as { operator: CFNumberOperator; value: number; iconType: string; iconId: string }[]);\n            this.setPreComputingCache(splitValue);\n            this._preComputingStatus$.next(CalculateEmitStatus.preComputingEnd);\n            return;\n        }\n        this._preComputingStatus$.next(CalculateEmitStatus.preComputing);\n    }\n\n    protected override getCellResult(row: number, col: number, preComputingResult: Nullable<IConfigItem[]>, context: IContext) {\n        if (!preComputingResult) {\n            return null;\n        }\n        const value = getValue(row, col, context.getCellValue);\n\n        if (value === null) {\n            return;\n        }\n        const ruleConfig = context.rule.rule as IIconSet;\n\n        const isShowValue = ruleConfig.isShowValue === undefined ? true : !!ruleConfig.isShowValue;\n\n        for (let index = 0; index < preComputingResult.length; index++) {\n            const item = preComputingResult[index];\n            const start = { ...item };\n            const end = { ...item };\n            const { iconId, iconType } = item;\n            if (index === 0) {\n                if (compareWithNumber(item, value)) {\n                    return { iconId, iconType, isShowValue };\n                }\n            } else if (index === preComputingResult.length - 1) {\n                return { iconId, iconType, isShowValue };\n            } else {\n                const pre = preComputingResult[index - 1];\n                end.operator = getOppositeOperator(pre.operator);\n                end.value = pre.value;\n                if (compareWithNumber(start, value) && compareWithNumber(end, value)) {\n                    return { iconId, iconType, isShowValue };\n                }\n            }\n        }\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Workbook } from '@univerjs/core';\nimport type { BaseCalculateUnit, IContext } from './calculate-unit-v2/base-calculate-unit';\nimport type { IConditionFormattingRule } from './type';\nimport { Disposable, Inject, Injector, IUniverInstanceService, LRUMap, RTree } from '@univerjs/core';\nimport { Subject } from 'rxjs';\nimport { bufferTime, filter, map } from 'rxjs/operators';\nimport { CFRuleType, CFSubRuleType } from '../base/const';\nimport { ConditionalFormattingFormulaService } from '../services/conditional-formatting-formula.service';\nimport { ColorScaleCalculateUnit } from './calculate-unit-v2/color-scale-calculate-unit';\nimport { DataBarCalculateUnit } from './calculate-unit-v2/data-bar-calculate-unit';\nimport { HighlightCellCalculateUnit } from './calculate-unit-v2/highlight-cell-calculate-unit';\nimport { IconSetCalculateUnit } from './calculate-unit-v2/icon-set-calculate-unit';\nimport { ConditionalFormattingRuleModel } from './conditional-formatting-rule-model';\n\n// The default is a 50-row,20-column viewable area.\nexport const CONDITIONAL_FORMATTING_VIEWPORT_CACHE_LENGTH = 50 * 20 * 3 * 3;\nexport class ConditionalFormattingViewModel extends Disposable {\n    //  Map<unitID ,<sheetId ,ObjectMatrix>>\n    private _calculateUnitManagers: Map<string, Map<string, Map<string, BaseCalculateUnit>>> = new Map();\n    private _rTreeManager: RTree = new RTree();\n\n    /**\n     * 1nd-level cache\n     */\n    private _cellCache = new LRUMap<string, { cfId: string; result: any; priority: number }[]>(CONDITIONAL_FORMATTING_VIEWPORT_CACHE_LENGTH);\n\n    private _markDirty$ = new Subject<{ cfId: string; unitId: string; subUnitId: string; isImmediately?: boolean }>();\n    /**\n     * The rendering layer listens to this variable to determine whether a reRender is necessary.\n     * @memberof ConditionalFormattingViewModel\n     */\n    public markDirty$ = this._markDirty$.asObservable();\n    constructor(\n        @Inject(Injector) private _injector: Injector,\n        @Inject(ConditionalFormattingRuleModel) private _conditionalFormattingRuleModel: ConditionalFormattingRuleModel,\n        @Inject(ConditionalFormattingFormulaService) private _conditionalFormattingFormulaService: ConditionalFormattingFormulaService,\n        @IUniverInstanceService private _univerInstanceService: IUniverInstanceService\n    ) {\n        super();\n        this._initRuleListener();\n        this._handleCustomFormulasSeparately();\n        this._initCFFormulaListener();\n    }\n\n    private _initCFFormulaListener() {\n        // If a conditional format depends on multiple formula results,removing the 2nd level cache when a single result is returned can cause screen flickering.\n        // It is necessary to wait until all results are ready before removing the cache.\n        this.disposeWithMe(\n            this._conditionalFormattingFormulaService.result$.subscribe(({ unitId, subUnitId, cfId, isAllFinished }) => {\n                if (isAllFinished) {\n                    this._markRuleDirtyAtOnce(unitId, subUnitId, cfId, isAllFinished);\n                }\n            })\n        );\n    }\n\n    public getCellCfs(unitId: string, subUnitId: string, row: number, col: number) {\n        const key = this._createCacheKey(unitId, subUnitId, row, col);\n        if (this._cellCache.has(key)) {\n            return this._cellCache.get(key);\n        }\n        const result = this._getCellCfs(unitId, subUnitId, row, col);\n        if (result.length) {\n            this._cellCache.set(key, result);\n        }\n        return result;\n    }\n\n    private _getCellCfs(unitId: string, subUnitId: string, row: number, col: number) {\n        const subunitRules = this._conditionalFormattingRuleModel.getSubunitRules(unitId, subUnitId) ?? [];\n        const _calculateUnitManagers = this._ensureCalculateUnitManager(unitId, subUnitId);\n        const list = this._rTreeManager.bulkSearch([{ unitId, sheetId: subUnitId, range: { startColumn: col, endColumn: col, startRow: row, endRow: row } }]);\n        const rules = subunitRules.filter((rule) => list.has(rule.cfId));\n        if (!rules.length) {\n            return [];\n        }\n        const result = rules.map((rule) => {\n            const calculateUnit = _calculateUnitManagers.get(rule.cfId);\n            if (!calculateUnit) {\n                return null;\n            }\n            return {\n                cfId: rule.cfId,\n                result: calculateUnit.getCell(row, col),\n            };\n        }).filter((e) => !!e).map((e, index) => ({ ...e, priority: index }));\n        return result;\n    }\n\n    /**\n     `isNeedResetPreComputingCache` indicates whether it is necessary to remove the 2nd-level cache for each rule individually.\n     Generally, when the logic of a rule calculation is modified, the cache for that rule needs to be removed.\n     Changes in style/priority do not require the clearing of the 2nd-level cache.\n     Rule changes/region changes require the removal of the 2nd-level cache.\n     There is also a situation where preComputing is asynchronously calculated.\n     After the calculation is finished, it is only for marking as dirty, and the 2nd-level cache need to be cleared.\n     * @param {boolean} [isNeedResetPreComputingCache]\n     */\n    private _markRuleDirtyAtOnce = (unitId: string, subUnitId: string, cfId: string, isNeedResetPreComputingCache: boolean = true) => {\n        this._cellCache.clear();\n        if (isNeedResetPreComputingCache) {\n            const _calculateUnitManagers = this._ensureCalculateUnitManager(unitId, subUnitId);\n            const calculateUnit = _calculateUnitManagers.get(cfId);\n            if (calculateUnit) {\n                calculateUnit.resetPreComputingCache();\n            }\n        }\n\n        this._markDirty$.next({\n            unitId,\n            subUnitId,\n            cfId,\n        });\n    };\n\n    /**\n     * For the same condition format being marked dirty multiple times at the same time,\n     * it will cause the style cache to be cleared, thereby causing the screen to flicker.\n     * Here,multiple dirties are merged into one..\n     */\n    public markRuleDirty = (() => {\n        const rxItem = new Subject<{ unitId: string; subUnitId: string; cfId: string; isNeedResetPreComputingCache: boolean }>();\n        this.disposeWithMe(rxItem.pipe(bufferTime(100), filter((e) => !!e.length), map((list) => {\n            const set = new Set();\n            const result: typeof list = [];\n            list.forEach((item) => {\n                const kye = `${item.unitId}_${item.subUnitId}_${item.cfId}`;\n                if (set.has(kye)) {\n                    if (item.isNeedResetPreComputingCache) {\n                        const i = result.find((e) => e.cfId === item.cfId)!;\n                        i.isNeedResetPreComputingCache = true;\n                    }\n                    return;\n                }\n                set.add(kye);\n                result.push({ ...item });\n            });\n            return result;\n        })).subscribe((list) => {\n            list.forEach((item) => {\n                this._markRuleDirtyAtOnce(item.unitId, item.subUnitId, item.cfId, item.isNeedResetPreComputingCache);\n            });\n        }));\n        return (unitId: string, subUnitId: string, cfId: string, isNeedResetPreComputingCache: boolean = true) => {\n            rxItem.next({ unitId, subUnitId, cfId, isNeedResetPreComputingCache });\n        };\n    })();\n\n    private _handleCustomFormulasSeparately() {\n        this.disposeWithMe(\n            this._conditionalFormattingRuleModel.$ruleChange.subscribe((e) => {\n                if (e.type === 'set') {\n                    const { unitId, subUnitId } = e;\n                    const oldRule = e.oldRule!;\n                    // If the range of a custom formula is modified,then the cached formulas must be cleared and recalculated.\n                    if (oldRule.rule.type === CFRuleType.highlightCell && oldRule.rule.subType === CFSubRuleType.formula) {\n                        this._conditionalFormattingFormulaService.deleteCache(unitId, subUnitId, oldRule.cfId);\n                    }\n                }\n            })\n        );\n    }\n\n    private _initRuleListener() {\n        this.disposeWithMe(\n            this._conditionalFormattingRuleModel.$ruleChange.subscribe((e) => {\n                const { unitId, subUnitId, rule } = e;\n                const { cfId, ranges } = rule;\n                const calculateUnitManager = this._ensureCalculateUnitManager(unitId, subUnitId);\n                this.markRuleDirty(unitId, subUnitId, cfId);\n                switch (e.type) {\n                    case 'add': {\n                        this._rTreeManager.bulkInsert(ranges.map((r) => ({ unitId, sheetId: subUnitId, id: cfId, range: r })));\n                        const instance = this._createRuleCalculateUnitInstance(unitId, subUnitId, rule);\n                        if (!instance) {\n                            return;\n                        }\n                        calculateUnitManager.set(rule.cfId, instance);\n                        break;\n                    }\n                    case 'delete': {\n                        this._rTreeManager.bulkRemove(ranges.map((r) => ({ unitId, sheetId: subUnitId, id: cfId, range: r })));\n                        calculateUnitManager.delete(rule.cfId);\n                        break;\n                    }\n                    case 'set': {\n                        const oldRule = e.oldRule!;\n\n                        this._rTreeManager.bulkRemove(oldRule.ranges.map((r) => ({ unitId, sheetId: subUnitId, id: oldRule.cfId, range: r })));\n                        this._rTreeManager.bulkInsert(ranges.map((r) => ({ unitId, sheetId: subUnitId, id: cfId, range: r })));\n                        if (oldRule.rule.type !== rule.rule.type) {\n                            const instance = this._createRuleCalculateUnitInstance(unitId, subUnitId, rule);\n                            if (!instance) {\n                                return;\n                            }\n                            calculateUnitManager.delete(oldRule.cfId);\n                            calculateUnitManager.set(rule.cfId, instance);\n                        } else {\n                            const instance = calculateUnitManager.get(oldRule.cfId);\n                            if (!instance) {\n                                return;\n                            }\n                            instance.updateRule(rule);\n                        }\n                    }\n                }\n            })\n        );\n    }\n\n    private _ensureCalculateUnitManager(unitId: string, subUnitId: string) {\n        let unitMap = this._calculateUnitManagers.get(unitId);\n        if (!unitMap) {\n            unitMap = new Map();\n            this._calculateUnitManagers.set(unitId, unitMap);\n        }\n        let subUnitMap = unitMap.get(subUnitId);\n        if (!subUnitMap) {\n            subUnitMap = new Map();\n            unitMap.set(subUnitId, subUnitMap);\n        }\n        return subUnitMap;\n    }\n\n    private _createRuleCalculateUnitInstance(unitId: string, subUnitId: string, rule: IConditionFormattingRule) {\n        const workbook = this._univerInstanceService.getUnit<Workbook>(unitId);\n        const worksheet = workbook?.getSheetBySheetId(subUnitId);\n        if (!workbook || !worksheet) {\n            return;\n        }\n        const context: IContext = {\n            workbook,\n            worksheet,\n            unitId,\n            subUnitId,\n            accessor: this._injector,\n            rule,\n            limit: CONDITIONAL_FORMATTING_VIEWPORT_CACHE_LENGTH,\n            getCellValue: (row: number, col: number) => worksheet.getCellRaw(row, col) || {},\n        };\n        switch (rule.rule.type) {\n            case CFRuleType.colorScale: {\n                return new ColorScaleCalculateUnit(context);\n            }\n            case CFRuleType.dataBar: {\n                return new DataBarCalculateUnit(context);\n            }\n            case CFRuleType.highlightCell: {\n                return new HighlightCellCalculateUnit(context);\n            }\n            case CFRuleType.iconSet: {\n                return new IconSetCalculateUnit(context);\n            }\n        }\n    }\n\n    private _createCacheKey(unitId: string, subUnitId: string, row: number, col: number) {\n        return `${unitId}_${subUnitId}_${row}_${col}`;\n    }\n\n    public setCacheLength(length: number = CONDITIONAL_FORMATTING_VIEWPORT_CACHE_LENGTH) {\n        if (this._cellCache.limit === length) {\n            return;\n        }\n        this._cellCache.limit = length;\n        this._calculateUnitManagers.forEach((subunitMap) => {\n            subunitMap.forEach((unitMap) => {\n                unitMap.forEach((unit) => {\n                    unit.setCacheLength(length);\n                });\n            });\n        });\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IMutationInfo, IRange, Workbook } from '@univerjs/core';\nimport type { IInsertColMutationParams, IMoveColumnsMutationParams, IMoveRangeMutationParams, IMoveRowsMutationParams, IRemoveRowsMutationParams, IRemoveSheetCommandParams, IReorderRangeMutationParams, ISetRangeValuesMutationParams } from '@univerjs/sheets';\nimport type { IDeleteConditionalRuleMutationParams } from '../commands/mutations/delete-conditional-rule.mutation';\nimport type { IConditionFormattingRule, IHighlightCell, IRuleModelJson } from '../models/type';\nimport type { IDataBarCellData, IDataBarRenderParams, IIconSetCellData, IIconSetRenderParams } from '../render/type';\nimport { Disposable, ICommandService, Inject, Injector, IResourceManagerService, IUniverInstanceService, ObjectMatrix, Rectangle, Tools, UniverInstanceType } from '@univerjs/core';\nimport { InsertColMutation, InsertRowMutation, MoveColsMutation, MoveRangeMutation, MoveRowsMutation, RemoveColMutation, RemoveRowMutation, RemoveSheetCommand, ReorderRangeMutation, SetRangeValuesMutation, SheetInterceptorService } from '@univerjs/sheets';\nimport { CFRuleType, SHEET_CONDITIONAL_FORMATTING_PLUGIN } from '../base/const';\nimport { DeleteConditionalRuleMutation, DeleteConditionalRuleMutationUndoFactory } from '../commands/mutations/delete-conditional-rule.mutation';\nimport { ConditionalFormattingRuleModel } from '../models/conditional-formatting-rule-model';\nimport { ConditionalFormattingViewModel } from '../models/conditional-formatting-view-model';\n\nexport class ConditionalFormattingService extends Disposable {\n    get _conditionalFormattingViewModelV2() {\n        return this._injector.get(ConditionalFormattingViewModel);\n    }\n\n    constructor(\n        @Inject(ConditionalFormattingRuleModel) private _conditionalFormattingRuleModel: ConditionalFormattingRuleModel,\n        @Inject(Injector) private _injector: Injector,\n        @Inject(IUniverInstanceService) private _univerInstanceService: IUniverInstanceService,\n        @Inject(IResourceManagerService) private _resourceManagerService: IResourceManagerService,\n        @Inject(SheetInterceptorService) private _sheetInterceptorService: SheetInterceptorService,\n        @Inject(ICommandService) private _commandService: ICommandService\n    ) {\n        super();\n        this._initCellChange();\n        this._initSnapshot();\n        this._initSheetChange();\n    }\n\n    public composeStyle(unitId: string, subUnitId: string, row: number, col: number) {\n        const cellCfs = this._conditionalFormattingViewModelV2.getCellCfs(unitId, subUnitId, row, col);\n\n        if (cellCfs && cellCfs?.length) {\n            // High priority should be applied at the back, overwriting the previous results.\n            // reverse is a side-effect function that changes the original array.\n            const ruleList = cellCfs.map((item) => this._conditionalFormattingRuleModel.getRule(unitId, subUnitId, item.cfId)!).filter((rule) => !!rule).reverse();\n            const endIndex = ruleList.findIndex((rule) => rule?.stopIfTrue);\n            if (endIndex > -1) {\n                ruleList.splice(endIndex + 1);\n            }\n            const result = ruleList.reduce((pre, rule) => {\n                const type = rule.rule.type;\n                const ruleCacheItem = cellCfs.find((cache) => cache.cfId === rule.cfId);\n\n                if (type === CFRuleType.highlightCell) {\n                    ruleCacheItem!.result && Tools.deepMerge(pre, { style: ruleCacheItem!.result });\n                } else if (type === CFRuleType.colorScale) {\n                    const ruleCache = ruleCacheItem?.result;\n                    if (ruleCache && typeof ruleCache === 'string') {\n                        pre.style = { ...(pre.style ?? {}), bg: { rgb: ruleCache } };\n                    }\n                } else if (type === CFRuleType.dataBar) {\n                    const ruleCache = ruleCacheItem?.result as IDataBarRenderParams;\n                    if (ruleCache) {\n                        pre.dataBar = ruleCache;\n                        pre.isShowValue = ruleCache.isShowValue;\n                    }\n                } else if (type === CFRuleType.iconSet) {\n                    const ruleCache = ruleCacheItem?.result as IIconSetRenderParams;\n                    if (ruleCache) {\n                        pre.iconSet = ruleCache;\n                        pre.isShowValue = ruleCache.isShowValue;\n                    }\n                }\n                return pre;\n            }, {} as { style?: IHighlightCell['style'] } & IDataBarCellData & IIconSetCellData & { isShowValue: boolean });\n            return result;\n        }\n        return null;\n    }\n\n    private _initSnapshot() {\n        const toJson = (unitID: string) => {\n            const map = this._conditionalFormattingRuleModel.getUnitRules(unitID);\n            const resultMap: IRuleModelJson[keyof IRuleModelJson] = {};\n            if (map) {\n                map.forEach((v, key) => {\n                    resultMap[key] = v;\n                });\n                return JSON.stringify(resultMap);\n            }\n            return '';\n        };\n        const parseJson = (json: string): IRuleModelJson[keyof IRuleModelJson] => {\n            if (!json) {\n                return {};\n            }\n            try {\n                return JSON.parse(json);\n            } catch (err) {\n                return {};\n            }\n        };\n        this.disposeWithMe(\n            this._resourceManagerService.registerPluginResource<IRuleModelJson[keyof IRuleModelJson]>({\n                pluginName: SHEET_CONDITIONAL_FORMATTING_PLUGIN,\n                businesses: [UniverInstanceType.UNIVER_SHEET],\n                toJson: (unitID) => toJson(unitID),\n                parseJson: (json) => parseJson(json),\n                onUnLoad: (unitID) => {\n                    this._conditionalFormattingRuleModel.deleteUnitId(unitID);\n                },\n                onLoad: (unitID, value) => {\n                    Object.keys(value).forEach((subunitId) => {\n                        const ruleList = [...value[subunitId]].reverse();\n                        ruleList.forEach((rule) => {\n                            this._conditionalFormattingRuleModel.addRule(unitID, subunitId, rule);\n                        });\n                    });\n                },\n            })\n        );\n    }\n\n    private _initSheetChange() {\n        this.disposeWithMe(\n            this._sheetInterceptorService.interceptCommand({\n                getMutations: (commandInfo) => {\n                    if (commandInfo.id === RemoveSheetCommand.id) {\n                        const params = commandInfo.params as IRemoveSheetCommandParams;\n                        const unitId = params.unitId || getUnitId(this._univerInstanceService);\n                        const subUnitId = params.subUnitId || getSubUnitId(this._univerInstanceService);\n\n                        if (!subUnitId) {\n                            return { redos: [], undos: [] };\n                        }\n\n                        const ruleList = this._conditionalFormattingRuleModel.getSubunitRules(unitId, subUnitId);\n                        if (!ruleList) {\n                            return { redos: [], undos: [] };\n                        }\n\n                        const redos: IMutationInfo[] = [];\n                        const undos: IMutationInfo[] = [];\n\n                        ruleList.forEach((item) => {\n                            const params: IDeleteConditionalRuleMutationParams = {\n                                unitId,\n                                subUnitId,\n                                cfId: item.cfId,\n                            };\n                            redos.push({\n                                id: DeleteConditionalRuleMutation.id,\n                                params,\n                            });\n                            undos.push(...DeleteConditionalRuleMutationUndoFactory(this._injector, params));\n                        });\n\n                        return {\n                            redos,\n                            undos,\n                        };\n                    }\n                    return { redos: [], undos: [] };\n                },\n            })\n        );\n    }\n\n    // eslint-disable-next-line max-lines-per-function\n    private _initCellChange() {\n        this.disposeWithMe(\n            // eslint-disable-next-line max-lines-per-function\n            this._commandService.onCommandExecuted((commandInfo) => {\n                const collectRule = (unitId: string, subUnitId: string, cellData: [number, number][]) => {\n                    const ruleIds: Set<string> = new Set();\n                    cellData.forEach(([row, col]) => {\n                        const ruleItem = this._conditionalFormattingViewModelV2.getCellCfs(unitId, subUnitId, row, col);\n                        ruleItem?.forEach((item) => ruleIds.add(item.cfId));\n                    });\n                    return [...ruleIds].map((cfId) => this._conditionalFormattingRuleModel.getRule(unitId, subUnitId, cfId) as IConditionFormattingRule).filter((rule) => !!rule);\n                };\n\n                switch (commandInfo.id) {\n                    case SetRangeValuesMutation.id: {\n                        const params = commandInfo.params as ISetRangeValuesMutationParams;\n                        const { subUnitId, unitId, cellValue } = params;\n                        const cellMatrix: [number, number][] = [];\n                        new ObjectMatrix(cellValue).forValue((row, col, value) => {\n                            // When P and V are involved\n                            const result = value && Object.keys(value).some((key) => ['p', 'v'].includes(key));\n                            if (result) {\n                                cellMatrix.push([row, col]);\n                            }\n                        });\n                        const rules = collectRule(unitId, subUnitId, cellMatrix);\n                        rules.forEach((rule) => {\n                            this._conditionalFormattingViewModelV2.markRuleDirty(unitId, subUnitId, rule.cfId);\n                        });\n                        break;\n                    }\n                    case InsertColMutation.id:\n                    case RemoveColMutation.id: {\n                        const { range, unitId, subUnitId } = commandInfo.params as IInsertColMutationParams;\n                        const allRules = this._conditionalFormattingRuleModel.getSubunitRules(unitId, subUnitId);\n                        const effectRange: IRange = { ...range, endColumn: Number.MAX_SAFE_INTEGER };\n                        if (allRules) {\n                            const effectRule = allRules.filter((rule) => rule.ranges.some((ruleRange) => Rectangle.intersects(ruleRange, effectRange)));\n                            effectRule.forEach((rule) => {\n                                this._conditionalFormattingViewModelV2.markRuleDirty(unitId, subUnitId, rule.cfId);\n                            });\n                        }\n                        break;\n                    }\n                    case RemoveRowMutation.id:\n                    case InsertRowMutation.id: {\n                        const { range, unitId, subUnitId } = commandInfo.params as IRemoveRowsMutationParams;\n                        const allRules = this._conditionalFormattingRuleModel.getSubunitRules(unitId, subUnitId);\n                        const effectRange: IRange = { ...range, endRow: Number.MAX_SAFE_INTEGER };\n                        if (allRules) {\n                            const effectRule = allRules.filter((rule) => rule.ranges.some((ruleRange) => Rectangle.intersects(ruleRange, effectRange)));\n                            effectRule.forEach((rule) => {\n                                this._conditionalFormattingViewModelV2.markRuleDirty(unitId, subUnitId, rule.cfId);\n                            });\n                        }\n                        break;\n                    }\n                    case MoveRowsMutation.id: {\n                        const { sourceRange, targetRange, unitId, subUnitId } = commandInfo.params as IMoveRowsMutationParams;\n                        const allRules = this._conditionalFormattingRuleModel.getSubunitRules(unitId, subUnitId);\n                        const effectRange: IRange = {\n                            startRow: Math.min(sourceRange.startRow, targetRange.startRow),\n                            endRow: Number.MAX_SAFE_INTEGER,\n                            startColumn: 0,\n                            endColumn: Number.MAX_SAFE_INTEGER,\n                        };\n                        if (allRules) {\n                            const effectRule = allRules.filter((rule) => rule.ranges.some((ruleRange) => Rectangle.intersects(ruleRange, effectRange)));\n                            effectRule.forEach((rule) => {\n                                this._conditionalFormattingViewModelV2.markRuleDirty(unitId, subUnitId, rule.cfId);\n                            });\n                        }\n                        break;\n                    }\n                    case MoveColsMutation.id: {\n                        const { sourceRange, targetRange, unitId, subUnitId } = commandInfo.params as IMoveColumnsMutationParams;\n                        const allRules = this._conditionalFormattingRuleModel.getSubunitRules(unitId, subUnitId);\n                        const effectRange: IRange = {\n                            startRow: 0,\n                            endRow: Number.MAX_SAFE_INTEGER,\n                            startColumn: Math.min(sourceRange.startColumn, targetRange.startColumn),\n                            endColumn: Number.MAX_SAFE_INTEGER,\n                        };\n                        if (allRules) {\n                            const effectRule = allRules.filter((rule) => rule.ranges.some((ruleRange) => Rectangle.intersects(ruleRange, effectRange)));\n                            effectRule.forEach((rule) => {\n                                this._conditionalFormattingViewModelV2.markRuleDirty(unitId, subUnitId, rule.cfId);\n                            });\n                        }\n                        break;\n                    }\n                    case MoveRangeMutation.id: {\n                        const { unitId, to, from } = commandInfo.params as IMoveRangeMutationParams;\n                        const handleSubUnit = (value: IMoveRangeMutationParams['from']) => {\n                            const cellMatrix: [number, number][] = [];\n                            new ObjectMatrix(value.value).forValue((row, col) => {\n                                cellMatrix.push([row, col]);\n                            });\n                            const rules = collectRule(unitId, value.subUnitId, cellMatrix);\n                            rules.forEach((rule) => {\n                                this._conditionalFormattingViewModelV2.markRuleDirty(unitId, value.subUnitId, rule.cfId);\n                            });\n                        };\n                        handleSubUnit(to);\n                        handleSubUnit(from);\n                        break;\n                    }\n                    case ReorderRangeMutation.id: {\n                        const { range, unitId, subUnitId } = commandInfo.params as IReorderRangeMutationParams;\n                        const allRules = this._conditionalFormattingRuleModel.getSubunitRules(unitId, subUnitId);\n                        if (allRules) {\n                            const effectRule = allRules.filter((rule) => rule.ranges.some((ruleRange) => Rectangle.intersects(ruleRange, range)));\n                            effectRule.forEach((rule) => {\n                                this._conditionalFormattingViewModelV2.markRuleDirty(unitId, subUnitId, rule.cfId);\n                            });\n                        }\n                        break;\n                    }\n                }\n            })\n        );\n    }\n}\n\nconst getUnitId = (u: IUniverInstanceService) => u.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getUnitId();\nconst getSubUnitId = (u: IUniverInstanceService) => u.getCurrentUnitForType<Workbook>(UniverInstanceType.UNIVER_SHEET)!.getActiveSheet()?.getSheetId();\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Dependency } from '@univerjs/core';\nimport type { IUniverSheetsConditionalFormattingConfig } from './controllers/config.schema';\nimport { ICommandService, IConfigService, Inject, Injector, merge, Plugin, touchDependencies, UniverInstanceType } from '@univerjs/core';\nimport { SHEET_CONDITIONAL_FORMATTING_PLUGIN } from './base/const';\nimport { AddCfCommand } from './commands/commands/add-cf.command';\nimport { ClearRangeCfCommand } from './commands/commands/clear-range-cf.command';\nimport { ClearWorksheetCfCommand } from './commands/commands/clear-worksheet-cf.command';\nimport { DeleteCfCommand } from './commands/commands/delete-cf.command';\nimport { MoveCfCommand } from './commands/commands/move-cf.command';\nimport { SetCfCommand } from './commands/commands/set-cf.command';\nimport { AddConditionalRuleMutation } from './commands/mutations/add-conditional-rule.mutation';\nimport { DeleteConditionalRuleMutation } from './commands/mutations/delete-conditional-rule.mutation';\nimport { ConditionalFormattingFormulaMarkDirty } from './commands/mutations/formula-mark-dirty.mutation';\nimport { MoveConditionalRuleMutation } from './commands/mutations/move-conditional-rule.mutation';\nimport { SetConditionalRuleMutation } from './commands/mutations/set-conditional-rule.mutation';\nimport {\n    defaultPluginConfig,\n    SHEETS_CONDITIONAL_FORMATTING_PLUGIN_CONFIG_KEY,\n} from './controllers/config.schema';\nimport { ConditionalFormattingRuleModel } from './models/conditional-formatting-rule-model';\nimport { ConditionalFormattingViewModel } from './models/conditional-formatting-view-model';\nimport { ConditionalFormattingFormulaService } from './services/conditional-formatting-formula.service';\nimport { ConditionalFormattingService } from './services/conditional-formatting.service';\n\nexport class UniverSheetsConditionalFormattingPlugin extends Plugin {\n    static override pluginName = SHEET_CONDITIONAL_FORMATTING_PLUGIN;\n    static override type = UniverInstanceType.UNIVER_SHEET;\n\n    constructor(\n        private readonly _config: Partial<IUniverSheetsConditionalFormattingConfig> = defaultPluginConfig,\n        @Inject(Injector) override readonly _injector: Injector,\n        @Inject(ICommandService) private _commandService: ICommandService,\n        @IConfigService private readonly _configService: IConfigService\n    ) {\n        super();\n\n        // Manage the plugin configuration.\n        const { ...rest } = merge(\n            {},\n            defaultPluginConfig,\n            this._config\n        );\n        this._configService.setConfig(SHEETS_CONDITIONAL_FORMATTING_PLUGIN_CONFIG_KEY, rest);\n\n        ([\n            [ConditionalFormattingService],\n            [ConditionalFormattingFormulaService],\n            [ConditionalFormattingRuleModel],\n            [ConditionalFormattingViewModel],\n        ] as Dependency[]).forEach((dependency) => {\n            this._injector.add(dependency);\n        });\n\n        [\n            AddCfCommand,\n            ClearRangeCfCommand,\n            ClearWorksheetCfCommand,\n            DeleteCfCommand,\n            MoveCfCommand,\n            SetCfCommand,\n            AddConditionalRuleMutation,\n            DeleteConditionalRuleMutation,\n            SetConditionalRuleMutation,\n            MoveConditionalRuleMutation,\n            ConditionalFormattingFormulaMarkDirty,\n        ].forEach((m) => {\n            this._commandService.registerCommand(m);\n        });\n    }\n\n    override onStarting(): void {\n        this._injector.get(ConditionalFormattingService);\n        touchDependencies(this._injector, [[ConditionalFormattingService], [ConditionalFormattingViewModel]]);\n    }\n}\n", "{\n    \"feedback\": {\n        \"mistake\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%229.99999%22%20cy%3D%2210%22%20r%3D%227.03704%22%20fill%3D%22%23FE4B4B%22%2F%3E%0A%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M6.87359%206.87332C6.6146%207.13231%206.6146%207.55221%206.87359%207.8112L9.062%209.99961L6.87356%2012.188C6.61457%2012.447%206.61457%2012.8669%206.87356%2013.1259C7.13255%2013.3849%207.55245%2013.3849%207.81144%2013.1259L9.99987%2010.9375L12.1882%2013.1258C12.4472%2013.3848%2012.8671%2013.3848%2013.1261%2013.1258C13.3851%2012.8669%2013.3851%2012.447%2013.1261%2012.188L10.9378%209.99961L13.1261%207.81127C13.3851%207.55228%2013.3851%207.13238%2013.1261%206.87339C12.8671%206.61441%2012.4472%206.61441%2012.1882%206.87339L9.99987%209.06173L7.81147%206.87332C7.55248%206.61433%207.13257%206.61433%206.87359%206.87332Z%22%20fill%3D%22%23FFFFFF%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"warn\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%229.99999%22%20cy%3D%2210%22%20r%3D%227.03704%22%20fill%3D%22%23FFBD37%22%2F%3E%0A%3Cpath%20d%3D%22M9.16817%206.67735C9.16646%206.61745%209.1656%206.5875%209.16653%206.56236C9.18103%206.16817%209.49136%205.84883%209.88497%205.82306C9.91008%205.82141%209.94004%205.82141%209.99996%205.82141V5.82141C10.0599%205.82141%2010.0899%205.82141%2010.115%205.82306C10.5086%205.84883%2010.8189%206.16817%2010.8334%206.56236C10.8343%206.5875%2010.8335%206.61745%2010.8318%206.67735L10.7043%2011.131C10.6934%2011.5121%2010.3812%2011.8154%209.99995%2011.8154V11.8154C9.61866%2011.8154%209.30655%2011.5121%209.29564%2011.131L9.16817%206.67735Z%22%20fill%3D%22%23FFFFFF%22%2F%3E%0A%3Crect%20x%3D%229.31488%22%20y%3D%2212.8086%22%20width%3D%221.37006%22%20height%3D%221.37006%22%20rx%3D%220.685032%22%20fill%3D%22%23FFFFFF%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"correct\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M17.037%2010C17.037%2013.8865%2013.8864%2017.0371%209.99999%2017.0371C6.11354%2017.0371%202.96295%2013.8865%202.96295%2010C2.96295%206.1136%206.11354%202.96301%209.99999%202.96301C13.8864%202.96301%2017.037%206.1136%2017.037%2010Z%22%20fill%3D%22%2359D01E%22%2F%3E%0A%3Cpath%20d%3D%22M13.9239%207.17477C13.6638%206.91472%2013.2422%206.91472%2012.9821%207.17477L8.74433%2011.4126L7.01786%209.6861C6.75781%209.42606%206.33619%209.42606%206.07614%209.6861C5.81609%209.94615%205.81609%2010.3678%206.07614%2010.6278L8.27349%2012.8252C8.53354%2013.0852%208.95516%2013.0852%209.21521%2012.8252L9.2195%2012.8209L13.9239%208.1165C14.1839%207.85645%2014.1839%207.43482%2013.9239%207.17477Z%22%20fill%3D%22%23FFFFFF%22%2F%3E%0A%3C%2Fsvg%3E%0A\"\n    },\n    \"star\": {\n        \"starEmpty\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M10.3437%203.3312L11.6861%206.67412C11.8451%207.0699%2012.2165%207.33978%2012.6421%207.36863L16.2362%207.61233C16.5693%207.63492%2016.7048%208.05202%2016.4486%208.26608L13.6841%2010.5758C13.3568%2010.8493%2013.215%2011.2859%2013.319%2011.6996L14.1979%2015.1931C14.2793%2015.5168%2013.9245%2015.7746%2013.6418%2015.5971L10.5908%2013.6817C10.2296%2013.4549%209.77045%2013.4549%209.40924%2013.6817L6.35828%2015.5971C6.07553%2015.7746%205.72072%2015.5168%205.80217%2015.1931L6.68105%2011.6996C6.7851%2011.2859%206.64322%2010.8493%206.31592%2010.5758L3.55145%208.26607C3.29525%208.05202%203.43078%207.63492%203.76386%207.61233L7.358%207.36863C7.78352%207.33978%208.15498%207.0699%208.31391%206.67412L9.65633%203.3312C9.78074%203.0214%2010.2193%203.0214%2010.3437%203.3312Z%22%20fill%3D%22%23fff%22%20stroke%3D%22%23FFBD37%22%20stroke-width%3D%220.740741%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"starIncomplete\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cg%20clip-path%3D%22url(%23clip0_613_177)%22%3E%0A%3Cmask%20id%3D%22mask0_613_177%22%20style%3D%22mask-type%3Aalpha%22%20maskUnits%3D%22userSpaceOnUse%22%20x%3D%2210%22%20y%3D%220%22%20width%3D%2210%22%20height%3D%2220%22%3E%0A%3Crect%20x%3D%2210.3704%22%20y%3D%220.37037%22%20width%3D%229.25926%22%20height%3D%2219.2593%22%20fill%3D%22%23C4C4C4%22%20stroke%3D%22%23F7D564%22%20stroke-width%3D%220.740741%22%2F%3E%0A%3C%2Fmask%3E%0A%3Cg%20mask%3D%22url(%23mask0_613_177)%22%3E%0A%3Cpath%20d%3D%22M10.3437%203.3312L11.6861%206.67412C11.845%207.0699%2012.2165%207.33978%2012.642%207.36863L16.2361%207.61233C16.5692%207.63492%2016.7047%208.05202%2016.4485%208.26608L13.6841%2010.5758C13.3568%2010.8493%2013.2149%2011.2859%2013.3189%2011.6996L14.1978%2015.1931C14.2793%2015.5168%2013.9245%2015.7746%2013.6417%2015.5971L10.5908%2013.6817C10.2295%2013.4549%209.77039%2013.4549%209.40918%2013.6817L6.35822%2015.5971C6.07547%2015.7746%205.72066%2015.5168%205.80211%2015.1931L6.68098%2011.6996C6.78504%2011.2859%206.64316%2010.8493%206.31586%2010.5758L3.55139%208.26607C3.29519%208.05202%203.43072%207.63492%203.7638%207.61233L7.35793%207.36863C7.78346%207.33978%208.15491%207.0699%208.31385%206.67412L9.65627%203.3312C9.78068%203.0214%2010.2192%203.0214%2010.3437%203.3312Z%22%20fill%3D%22%23fff%22%20stroke%3D%22%23FFBD37%22%20stroke-width%3D%220.740741%22%2F%3E%0A%3C%2Fg%3E%0A%3Cmask%20id%3D%22mask1_613_177%22%20style%3D%22mask-type%3Aalpha%22%20maskUnits%3D%22userSpaceOnUse%22%20x%3D%220%22%20y%3D%220%22%20width%3D%2210%22%20height%3D%2220%22%3E%0A%3Crect%20width%3D%2210%22%20height%3D%2220%22%20fill%3D%22%23C4C4C4%22%2F%3E%0A%3C%2Fmask%3E%0A%3Cg%20mask%3D%22url(%23mask1_613_177)%22%3E%0A%3Cpath%20d%3D%22M10.3437%203.3312L11.6861%206.67412C11.845%207.0699%2012.2165%207.33978%2012.642%207.36863L16.2361%207.61233C16.5692%207.63492%2016.7047%208.05202%2016.4485%208.26608L13.6841%2010.5758C13.3568%2010.8493%2013.2149%2011.2859%2013.3189%2011.6996L14.1978%2015.1931C14.2793%2015.5168%2013.9245%2015.7746%2013.6417%2015.5971L10.5908%2013.6817C10.2295%2013.4549%209.77039%2013.4549%209.40918%2013.6817L6.35822%2015.5971C6.07547%2015.7746%205.72066%2015.5168%205.80211%2015.1931L6.68098%2011.6996C6.78504%2011.2859%206.64316%2010.8493%206.31586%2010.5758L3.55139%208.26607C3.29519%208.05202%203.43072%207.63492%203.7638%207.61233L7.35793%207.36863C7.78346%207.33978%208.15491%207.0699%208.31385%206.67412L9.65627%203.3312C9.78068%203.0214%2010.2192%203.0214%2010.3437%203.3312Z%22%20fill%3D%22%23FFBD37%22%20stroke%3D%22%23FFBD37%22%20stroke-width%3D%220.740741%22%2F%3E%0A%3C%2Fg%3E%0A%3C%2Fg%3E%0A%3Cdefs%3E%0A%3CclipPath%20id%3D%22clip0_613_177%22%3E%0A%3Crect%20width%3D%2220%22%20height%3D%2220%22%20fill%3D%22white%22%2F%3E%0A%3C%2FclipPath%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A\",\n        \"starFull\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M10.3437%203.3312L11.6861%206.67412C11.8451%207.0699%2012.2165%207.33978%2012.6421%207.36863L16.2362%207.61233C16.5693%207.63492%2016.7048%208.05202%2016.4486%208.26608L13.6841%2010.5758C13.3568%2010.8493%2013.215%2011.2859%2013.319%2011.6996L14.1979%2015.1931C14.2793%2015.5168%2013.9245%2015.7746%2013.6418%2015.5971L10.5908%2013.6817C10.2296%2013.4549%209.77045%2013.4549%209.40924%2013.6817L6.35828%2015.5971C6.07553%2015.7746%205.72072%2015.5168%205.80217%2015.1931L6.68105%2011.6996C6.7851%2011.2859%206.64322%2010.8493%206.31592%2010.5758L3.55145%208.26607C3.29525%208.05202%203.43078%207.63492%203.76386%207.61233L7.358%207.36863C7.78352%207.33978%208.15498%207.0699%208.31391%206.67412L9.65633%203.3312C9.78074%203.0214%2010.2193%203.0214%2010.3437%203.3312Z%22%20fill%3D%22%23FFBD37%22%20stroke%3D%22%23FFBD37%22%20stroke-width%3D%220.740741%22%2F%3E%0A%3C%2Fsvg%3E%0A\"\n    },\n    \"progress\": {\n        \"progress0\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%2210%22%20cy%3D%229.99993%22%20r%3D%226.66667%22%20stroke%3D%22%237A7A7A%22%20stroke-width%3D%220.740741%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"progress25\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%2210%22%20cy%3D%229.99993%22%20r%3D%226.66667%22%20stroke%3D%22%237A7A7A%22%20stroke-width%3D%220.740741%22%2F%3E%0A%3Cpath%20d%3D%22M16.2963%209.99991C16.2963%209.17307%2016.1335%208.35432%2015.8171%207.59042C15.5006%206.82652%2015.0369%206.13242%2014.4522%205.54776C13.8675%204.96309%2013.1734%204.49931%2012.4095%204.18289C11.6456%203.86647%2010.8269%203.70361%2010%203.70361L10%209.99991H16.2963Z%22%20fill%3D%22%237A7A7A%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"progress50\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%2210%22%20cy%3D%229.99993%22%20r%3D%226.66667%22%20stroke%3D%22%237A7A7A%22%20stroke-width%3D%220.740741%22%2F%3E%0A%3Cpath%20d%3D%22M10%2016.2962C11.6699%2016.2962%2013.2714%2015.6328%2014.4522%2014.4521C15.633%2013.2713%2016.2963%2011.6698%2016.2963%209.99991C16.2963%208.33003%2015.633%206.72854%2014.4522%205.54776C13.2714%204.36697%2011.6699%203.70361%2010%203.70361L10%209.99991L10%2016.2962Z%22%20fill%3D%22%237A7A7A%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"progress75\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%2210%22%20cy%3D%229.99993%22%20r%3D%226.66667%22%20stroke%3D%22%237A7A7A%22%20stroke-width%3D%220.740741%22%2F%3E%0A%3Cpath%20d%3D%22M3.70374%209.99991C3.70374%2011.2452%204.07301%2012.4625%204.76485%2013.4979C5.4567%2014.5334%206.44005%2015.3404%207.59054%2015.8169C8.74104%2016.2935%2010.007%2016.4182%2011.2284%2016.1752C12.4497%2015.9323%2013.5716%2015.3326%2014.4522%2014.4521C15.3327%2013.5715%2015.9324%2012.4496%2016.1753%2011.2283C16.4183%2010.0069%2016.2936%208.74092%2015.8171%207.59042C15.3405%206.43992%2014.5335%205.45658%2013.4981%204.76473C12.4626%204.07288%2011.2453%203.70361%2010%203.70361L10%209.99991L3.70374%209.99991Z%22%20fill%3D%22%237A7A7A%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"progress100\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%2210%22%20cy%3D%229.99993%22%20r%3D%226.66667%22%20stroke%3D%22%237A7A7A%22%20stroke-width%3D%220.740741%22%2F%3E%0A%3Ccircle%20cx%3D%2210%22%20cy%3D%229.99991%22%20r%3D%226.2963%22%20fill%3D%22%237A7A7A%22%2F%3E%0A%3C%2Fsvg%3E%0A\"\n    },\n    \"signal\": {\n        \"signal0\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%2214.4764%22%20y%3D%222.98926%22%20width%3D%222.3%22%20height%3D%2214.0597%22%20rx%3D%220.5%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%2210.7255%22%20y%3D%225.93921%22%20width%3D%222.3%22%20height%3D%2211.1096%22%20rx%3D%220.5%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%226.97455%22%20y%3D%229.70435%22%20width%3D%222.3%22%20height%3D%227.3443%22%20rx%3D%220.5%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%223.22363%22%20y%3D%2213.3302%22%20width%3D%222.3%22%20height%3D%223.71851%22%20rx%3D%220.5%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"signal25\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%2214.4764%22%20y%3D%222.98926%22%20width%3D%222.3%22%20height%3D%2214.0597%22%20rx%3D%220.5%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%2210.7255%22%20y%3D%225.93921%22%20width%3D%222.3%22%20height%3D%2211.1096%22%20rx%3D%220.5%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%226.97455%22%20y%3D%229.70435%22%20width%3D%222.3%22%20height%3D%227.3443%22%20rx%3D%220.5%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%223.22363%22%20y%3D%2213.3302%22%20width%3D%222.3%22%20height%3D%223.71851%22%20rx%3D%220.5%22%20fill%3D%22%230493EE%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"signal50\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%2214.4764%22%20y%3D%222.98926%22%20width%3D%222.3%22%20height%3D%2214.0597%22%20rx%3D%220.5%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%2210.7255%22%20y%3D%225.93921%22%20width%3D%222.3%22%20height%3D%2211.1096%22%20rx%3D%220.5%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%226.97455%22%20y%3D%229.70435%22%20width%3D%222.3%22%20height%3D%227.3443%22%20rx%3D%220.5%22%20fill%3D%22%230493EE%22%2F%3E%0A%3Crect%20x%3D%223.22363%22%20y%3D%2213.3302%22%20width%3D%222.3%22%20height%3D%223.71851%22%20rx%3D%220.5%22%20fill%3D%22%230493EE%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"signal75\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%2214.4764%22%20y%3D%222.98926%22%20width%3D%222.3%22%20height%3D%2214.0597%22%20rx%3D%220.5%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%2210.7255%22%20y%3D%225.93921%22%20width%3D%222.3%22%20height%3D%2211.1096%22%20rx%3D%220.5%22%20fill%3D%22%230493EE%22%2F%3E%0A%3Crect%20x%3D%226.97455%22%20y%3D%229.70435%22%20width%3D%222.3%22%20height%3D%227.3443%22%20rx%3D%220.5%22%20fill%3D%22%230493EE%22%2F%3E%0A%3Crect%20x%3D%223.22363%22%20y%3D%2213.3302%22%20width%3D%222.3%22%20height%3D%223.71851%22%20rx%3D%220.5%22%20fill%3D%22%230493EE%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"signal100\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%2214.4764%22%20y%3D%222.98926%22%20width%3D%222.3%22%20height%3D%2214.0597%22%20rx%3D%220.5%22%20fill%3D%22%230493EE%22%2F%3E%0A%3Crect%20x%3D%2210.7255%22%20y%3D%225.93933%22%20width%3D%222.3%22%20height%3D%2211.1096%22%20rx%3D%220.5%22%20fill%3D%22%230493EE%22%2F%3E%0A%3Crect%20x%3D%226.97455%22%20y%3D%229.70447%22%20width%3D%222.3%22%20height%3D%227.3443%22%20rx%3D%220.5%22%20fill%3D%22%230493EE%22%2F%3E%0A%3Crect%20x%3D%223.22363%22%20y%3D%2213.3302%22%20width%3D%222.3%22%20height%3D%223.71851%22%20rx%3D%220.5%22%20fill%3D%22%230493EE%22%2F%3E%0A%3C%2Fsvg%3E%0A\"\n    },\n    \"feeling\": {\n        \"guffaw\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M16.887%2010C16.887%2013.8037%2013.8036%2016.8871%209.99999%2016.8871C6.19638%2016.8871%203.11295%2013.8037%203.11295%2010C3.11295%206.19644%206.19638%203.11301%209.99999%203.11301C13.8036%203.11301%2016.887%206.19644%2016.887%2010Z%22%20fill%3D%22%23FFBD37%22%20stroke%3D%22%238F5F00%22%20stroke-width%3D%220.3%22%2F%3E%0A%3Crect%20x%3D%227.40741%22%20y%3D%227.40735%22%20width%3D%221.48148%22%20height%3D%221.48148%22%20rx%3D%220.740741%22%20fill%3D%22%238F5F00%22%2F%3E%0A%3Crect%20x%3D%2211.1111%22%20y%3D%227.40735%22%20width%3D%221.48148%22%20height%3D%221.48148%22%20rx%3D%220.740741%22%20fill%3D%22%238F5F00%22%2F%3E%0A%3Cpath%20d%3D%22M12.5355%2013.5821C13.0482%2013.1841%2013.3951%2012.6107%2013.5405%2012.0327C13.5934%2011.8226%2013.5051%2011.6349%2013.3518%2011.5331C13.2036%2011.4346%2013.0031%2011.4203%2012.8265%2011.5131C11.0615%2012.4407%208.94609%2012.4427%207.1828%2011.513C7.00629%2011.4199%206.80602%2011.4343%206.65798%2011.5329C6.50518%2011.6346%206.41701%2011.8217%206.46844%2012.0312C6.61029%2012.609%206.95079%2013.1833%207.46449%2013.5821C8.14361%2014.1093%209.05608%2014.3999%2010%2014.3999C10.9439%2014.3999%2011.8564%2014.1093%2012.5355%2013.5821Z%22%20fill%3D%22white%22%20stroke%3D%22%238F5F00%22%20stroke-width%3D%220.4%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"smile\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%229.99999%22%20cy%3D%2210%22%20r%3D%226.88704%22%20fill%3D%22%23FFBD37%22%20stroke%3D%22%238F5F00%22%20stroke-width%3D%220.3%22%2F%3E%0A%3Crect%20x%3D%227.40741%22%20y%3D%227.40735%22%20width%3D%221.48148%22%20height%3D%221.48148%22%20rx%3D%220.740741%22%20fill%3D%22%238F5F00%22%2F%3E%0A%3Crect%20x%3D%2211.1111%22%20y%3D%227.40735%22%20width%3D%221.48148%22%20height%3D%221.48148%22%20rx%3D%220.740741%22%20fill%3D%22%238F5F00%22%2F%3E%0A%3Cpath%20d%3D%22M7.03705%2011.8518C7.03705%2011.8518%207.77779%2013.7037%2010%2013.7037C12.2222%2013.7037%2012.963%2011.8518%2012.963%2011.8518%22%20stroke%3D%22%238F5F00%22%20stroke-width%3D%220.962963%22%20stroke-linecap%3D%22round%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"noninductive\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%229.99999%22%20cy%3D%2210%22%20r%3D%226.88704%22%20fill%3D%22%23FFBD37%22%20stroke%3D%22%238F5F00%22%20stroke-width%3D%220.3%22%2F%3E%0A%3Crect%20x%3D%227.40741%22%20y%3D%227.9259%22%20width%3D%221.48148%22%20height%3D%221.11111%22%20rx%3D%220.555556%22%20fill%3D%22%238F5F00%22%2F%3E%0A%3Crect%20x%3D%2211.1111%22%20y%3D%227.9259%22%20width%3D%221.48148%22%20height%3D%221.11111%22%20rx%3D%220.555556%22%20fill%3D%22%238F5F00%22%2F%3E%0A%3Cpath%20d%3D%22M7.03705%2012.5927C7.03705%2012.5927%208.14816%2012.5927%2010.3704%2012.5927C12.5926%2012.5927%2012.963%2012.5927%2012.963%2012.5927%22%20stroke%3D%22%238F5F00%22%20stroke-width%3D%220.962963%22%20stroke-linecap%3D%22round%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"dissatisfied\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%229.99999%22%20cy%3D%2210%22%20r%3D%226.88704%22%20fill%3D%22%23FFBD37%22%20stroke%3D%22%238F5F00%22%20stroke-width%3D%220.3%22%2F%3E%0A%3Crect%20x%3D%227.40741%22%20y%3D%227.40735%22%20width%3D%221.48148%22%20height%3D%221.48148%22%20rx%3D%220.740741%22%20fill%3D%22%238F5F00%22%2F%3E%0A%3Crect%20x%3D%2211.1111%22%20y%3D%227.40735%22%20width%3D%221.48148%22%20height%3D%221.48148%22%20rx%3D%220.740741%22%20fill%3D%22%238F5F00%22%2F%3E%0A%3Cpath%20d%3D%22M7.03705%2013.7037C7.03705%2013.7037%207.77779%2011.8519%2010%2011.8519C12.2222%2011.8519%2012.963%2013.7037%2012.963%2013.7037%22%20stroke%3D%22%238F5F00%22%20stroke-width%3D%220.962963%22%20stroke-linecap%3D%22round%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"impatient\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%229.99999%22%20cy%3D%2210%22%20r%3D%226.88704%22%20fill%3D%22%23FFBD37%22%20stroke%3D%22%238F5F00%22%20stroke-width%3D%220.3%22%2F%3E%0A%3Crect%20x%3D%227.40741%22%20y%3D%227.40735%22%20width%3D%221.48148%22%20height%3D%221.48148%22%20rx%3D%220.740741%22%20fill%3D%22%238F5F00%22%2F%3E%0A%3Crect%20x%3D%2211.1111%22%20y%3D%227.40735%22%20width%3D%221.48148%22%20height%3D%221.48148%22%20rx%3D%220.740741%22%20fill%3D%22%238F5F00%22%2F%3E%0A%3Cpath%20d%3D%22M7.47573%2011.731C6.96306%2012.129%206.61613%2012.7024%206.47071%2013.2804C6.41784%2013.4905%206.50617%2013.6782%206.65942%2013.78C6.80761%2013.8785%207.00813%2013.8928%207.18477%2013.8C8.9498%2012.8724%2011.0652%2012.8704%2012.8285%2013.8002C13.005%2013.8932%2013.2052%2013.8788%2013.3533%2013.7802C13.5061%2013.6785%2013.5942%2013.4914%2013.5428%2013.2819C13.401%2012.7041%2013.0605%2012.1298%2012.5468%2011.731C11.8676%2011.2038%2010.9552%2010.9132%2010.0112%2010.9132C9.06732%2010.9132%208.15485%2011.2038%207.47573%2011.731Z%22%20fill%3D%22white%22%20stroke%3D%22%238F5F00%22%20stroke-width%3D%220.4%22%2F%3E%0A%3C%2Fsvg%3E%0A\"\n    },\n    \"arrow\": {\n        \"down-red\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M8.90467%203.99244C8.84611%204.1338%208.84611%204.31301%208.84611%204.67143V13.716L5.92068%2010.7906C5.66724%2010.5371%205.54052%2010.4104%205.39916%2010.3519C5.21067%2010.2738%204.9989%2010.2738%204.81041%2010.3519C4.66905%2010.4104%204.54233%2010.5371%204.28889%2010.7906C4.03545%2011.044%203.90873%2011.1707%203.85018%2011.3121C3.77211%2011.5006%203.77211%2011.7124%203.85018%2011.9008C3.90873%2012.0422%204.03545%2012.1689%204.28889%2012.4224L9.03476%2017.1682C9.07839%2017.2127%209.12737%2017.2617%209.18231%2017.3166L9.18239%2017.3167L9.18241%2017.3167C9.40545%2017.5398%209.53035%2017.6647%209.65346%2017.7313C9.67085%2017.7408%209.6882%2017.7492%209.70577%2017.7564C9.89425%2017.8345%2010.106%2017.8345%2010.2945%2017.7564C10.4359%2017.6979%2010.5626%2017.5712%2010.816%2017.3177C10.8986%2017.2352%2010.9677%2017.1661%2011.0253%2017.1056L15.7095%2012.4214L15.7095%2012.4213C15.963%2012.1679%2016.0897%2012.0412%2016.1482%2011.8998C16.2263%2011.7114%2016.2263%2011.4996%2016.1482%2011.3111C16.0897%2011.1697%2015.963%2011.043%2015.7095%2010.7896C15.4561%2010.5361%2015.3294%2010.4094%2015.188%2010.3509C14.9995%2010.2728%2014.7878%2010.2728%2014.5993%2010.3509C14.4579%2010.4094%2014.3312%2010.5361%2014.0778%2010.7896L14.0777%2010.7896L11.1538%2013.7135V4.67142C11.1538%204.31301%2011.1538%204.1338%2011.0953%203.99244C11.0172%203.80395%2010.8674%203.6542%2010.6789%203.57613C10.5376%203.51758%2010.3584%203.51758%209.99996%203.51758C9.64154%203.51758%209.46233%203.51758%209.32097%203.57613C9.13249%203.6542%208.98274%203.80395%208.90467%203.99244Z%22%20fill%3D%22%23FE4B4B%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"right-gold\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M3.32508%2011.7609C3.46644%2011.8194%203.64565%2011.8194%204.00407%2011.8194H13.049L10.1235%2014.745C9.87002%2014.9984%209.7433%2015.1251%209.68475%2015.2665C9.60668%2015.455%209.60668%2015.6668%209.68475%2015.8552C9.7433%2015.9966%209.87002%2016.1233%2010.1235%2016.3768C10.3769%2016.6302%2010.5036%2016.7569%2010.645%2016.8155C10.8335%2016.8935%2011.0452%2016.8935%2011.2337%2016.8155C11.3751%2016.7569%2011.5018%2016.6302%2011.7552%2016.3768L16.5105%2011.6215C16.5524%2011.5803%2016.5983%2011.5344%2016.6493%2011.4834L16.6495%2011.4831C16.8561%2011.2765%2016.9785%2011.1542%2017.0484%2011.0394C17.0648%2011.0128%2017.0782%2010.9866%2017.0893%2010.9599C17.1674%2010.7714%2017.1674%2010.5596%2017.0893%2010.3711C17.0308%2010.2298%2016.904%2010.1031%2016.6506%209.84962C16.5685%209.76752%2016.4997%209.69872%2016.4394%209.64123L11.7542%204.95601C11.5007%204.70257%2011.374%204.57585%2011.2327%204.5173C11.0442%204.43923%2010.8324%204.43923%2010.6439%204.5173C10.5026%204.57585%2010.3758%204.70257%2010.1224%204.95601L10.1224%204.95601C9.86895%205.20945%209.74223%205.33617%209.68368%205.47753C9.60561%205.66601%209.60561%205.87779%209.68368%206.06627C9.74223%206.20764%209.86895%206.33436%2010.1224%206.5878L13.0463%209.51175H4.00407C3.64565%209.51175%203.46644%209.51175%203.32508%209.5703C3.1366%209.64837%202.98685%209.79812%202.90877%209.98661C2.85022%2010.128%202.85022%2010.3072%202.85022%2010.6656C2.85022%2011.024%202.85022%2011.2032%202.90877%2011.3446C2.98685%2011.5331%203.1366%2011.6828%203.32508%2011.7609Z%22%20fill%3D%22%23FFBD37%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"up-green\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M11.0936%2017.3406C11.1522%2017.1992%2011.1522%2017.02%2011.1522%2016.6616V7.61701L14.0776%2010.5424C14.3311%2010.7959%2014.4578%2010.9226%2014.5991%2010.9811C14.7876%2011.0592%2014.9994%2011.0592%2015.1879%2010.9811C15.3292%2010.9226%2015.456%2010.7959%2015.7094%2010.5424C15.9628%2010.289%2016.0896%2010.1623%2016.1481%2010.0209C16.2262%209.83243%2016.2262%209.62066%2016.1481%209.43217C16.0896%209.29081%2015.9628%209.16409%2015.7094%208.91065L10.9645%204.16576C10.9207%204.12105%2010.8714%204.07178%2010.8161%204.01648L10.8159%204.0163C10.5916%203.792%2010.4666%203.66696%2010.3428%203.60058C10.3261%203.59154%2010.3094%203.58358%2010.2925%203.57658C10.104%203.49851%209.89226%203.49851%209.70378%203.57658C9.56242%203.63514%209.4357%203.76186%209.18226%204.0153C9.09955%204.09801%209.03034%204.16722%208.97258%204.22785L4.28878%208.91166C4.03534%209.1651%203.90862%209.29182%203.85006%209.43318C3.77199%209.62166%203.77199%209.83344%203.85006%2010.0219C3.90862%2010.1633%204.03534%2010.29%204.28878%2010.5434C4.54221%2010.7969%204.66893%2010.9236%204.8103%2010.9822C4.99878%2011.0602%205.21056%2011.0602%205.39904%2010.9822C5.5404%2010.9236%205.66712%2010.7969%205.92056%2010.5434L5.92056%2010.5434L8.84449%207.61951V16.6616C8.84449%2017.02%208.84449%2017.1992%208.90305%2017.3406C8.98112%2017.5291%209.13087%2017.6788%209.31935%2017.7569C9.46072%2017.8154%209.63992%2017.8154%209.99834%2017.8154C10.3568%2017.8154%2010.536%2017.8154%2010.6773%2017.7569C10.8658%2017.6788%2011.0156%2017.5291%2011.0936%2017.3406Z%22%20fill%3D%22%2359D01E%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"rightAndDown-gold\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M4.5062%206.72126C4.56476%206.86262%204.69148%206.98934%204.94492%207.24278L11.3404%2013.6382L7.20313%2013.6382C6.84471%2013.6382%206.66551%2013.6382%206.52414%2013.6968C6.33566%2013.7749%206.18591%2013.9246%206.10784%2014.1131C6.04928%2014.2545%206.04928%2014.4337%206.04928%2014.7921C6.04928%2015.1505%206.04928%2015.3297%206.10784%2015.4711C6.18591%2015.6596%206.33566%2015.8093%206.52414%2015.8874C6.66551%2015.9459%206.84471%2015.9459%207.20313%2015.9459L13.9194%2015.9459C13.9805%2015.9465%2014.0484%2015.9465%2014.1243%2015.9465H14.1243C14.4353%2015.9465%2014.6114%2015.9465%2014.7449%2015.9082C14.7659%2015.9023%2014.7859%2015.8954%2014.8052%2015.8874C14.9937%2015.8093%2015.1434%2015.6596%2015.2215%2015.4711C15.2801%2015.3297%2015.2801%2015.1505%2015.2801%2014.7921C15.2801%2014.6767%2015.2801%2014.5799%2015.2781%2014.497L15.2781%207.86957C15.2781%207.51115%2015.2781%207.33194%2015.2195%207.19058C15.1415%207.0021%2014.9917%206.85235%2014.8032%206.77428C14.6619%206.71572%2014.4827%206.71572%2014.1243%206.71572C13.7658%206.71572%2013.5866%206.71572%2013.4453%206.77428C13.2568%206.85235%2013.107%207.0021%2013.029%207.19058C12.9704%207.33194%2012.9704%207.51115%2012.9704%207.86957L12.9704%2012.0047L6.5767%205.61099C6.32326%205.35755%206.19654%205.23083%206.05518%205.17228C5.8667%205.09421%205.65492%205.09421%205.46644%205.17228C5.32508%205.23083%205.19836%205.35755%204.94492%205.61099C4.69148%205.86443%204.56476%205.99115%204.5062%206.13251C4.42813%206.32099%204.42813%206.53277%204.5062%206.72126Z%22%20fill%3D%22%23FFBD37%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"rightAndUp-gold\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M6.05431%2016.1597C6.19567%2016.1012%206.32239%2015.9745%206.57583%2015.721L12.9712%209.32568L12.9712%2013.4626C12.9712%2013.821%2012.9712%2014.0002%2013.0297%2014.1416C13.1078%2014.3301%2013.2576%2014.4798%2013.446%2014.5579C13.5874%2014.6164%2013.7666%2014.6164%2014.125%2014.6164C14.4834%2014.6164%2014.6626%2014.6164%2014.804%2014.5579C14.9925%2014.4798%2015.1422%2014.3301%2015.2203%2014.1416C15.2789%2014.0002%2015.2789%2013.821%2015.2789%2013.4626L15.2789%206.75233C15.2795%206.68972%2015.2795%206.62004%2015.2795%206.54182L15.2795%206.54157C15.2795%206.22585%2015.2795%206.04918%2015.2395%205.91495C15.2339%205.89605%2015.2276%205.878%2015.2203%205.86053C15.1422%205.67204%2014.9925%205.52229%2014.804%205.44422C14.6626%205.38567%2014.4834%205.38567%2014.125%205.38567L14.125%205.38567C14.0075%205.38567%2013.9093%205.38567%2013.8254%205.38773L7.20256%205.38773C6.84414%205.38773%206.66493%205.38773%206.52357%205.44628C6.33509%205.52436%206.18534%205.6741%206.10727%205.86259C6.04871%206.00395%206.04871%206.18315%206.04871%206.54156V6.54157L6.04871%206.54159C6.04871%206.9%206.04871%207.0792%206.10727%207.22056C6.18534%207.40905%206.33509%207.55879%206.52357%207.63687C6.66493%207.69542%206.84414%207.69542%207.20256%207.69542H11.3379L4.94405%2014.0892C4.69061%2014.3427%204.56389%2014.4694%204.50533%2014.6108C4.42726%2014.7992%204.42726%2015.011%204.50533%2015.1995C4.56389%2015.3409%204.69061%2015.4676%204.94405%2015.721C5.19749%2015.9745%205.32421%2016.1012%205.46557%2016.1597C5.65405%2016.2378%205.86583%2016.2378%206.05431%2016.1597Z%22%20fill%3D%22%23FFBD37%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"down-gray\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M8.90467%203.99244C8.84611%204.1338%208.84611%204.31301%208.84611%204.67143V13.716L5.92068%2010.7906C5.66724%2010.5371%205.54052%2010.4104%205.39916%2010.3519C5.21067%2010.2738%204.9989%2010.2738%204.81041%2010.3519C4.66905%2010.4104%204.54233%2010.5371%204.28889%2010.7906C4.03545%2011.044%203.90873%2011.1707%203.85018%2011.3121C3.77211%2011.5006%203.77211%2011.7124%203.85018%2011.9008C3.90873%2012.0422%204.03545%2012.1689%204.28889%2012.4224L9.03476%2017.1682C9.07839%2017.2127%209.12737%2017.2617%209.18231%2017.3166L9.18239%2017.3167L9.18241%2017.3167C9.40545%2017.5398%209.53035%2017.6647%209.65346%2017.7313C9.67085%2017.7408%209.6882%2017.7492%209.70577%2017.7564C9.89425%2017.8345%2010.106%2017.8345%2010.2945%2017.7564C10.4359%2017.6979%2010.5626%2017.5712%2010.816%2017.3177C10.8986%2017.2352%2010.9677%2017.1661%2011.0253%2017.1056L15.7095%2012.4214L15.7095%2012.4213C15.963%2012.1679%2016.0897%2012.0412%2016.1482%2011.8998C16.2263%2011.7114%2016.2263%2011.4996%2016.1482%2011.3111C16.0897%2011.1697%2015.963%2011.043%2015.7095%2010.7896C15.4561%2010.5361%2015.3294%2010.4094%2015.188%2010.3509C14.9995%2010.2728%2014.7878%2010.2728%2014.5993%2010.3509C14.4579%2010.4094%2014.3312%2010.5361%2014.0778%2010.7896L14.0777%2010.7896L11.1538%2013.7135V4.67142C11.1538%204.31301%2011.1538%204.1338%2011.0953%203.99244C11.0172%203.80395%2010.8674%203.6542%2010.6789%203.57613C10.5376%203.51758%2010.3584%203.51758%209.99996%203.51758C9.64154%203.51758%209.46233%203.51758%209.32097%203.57613C9.13249%203.6542%208.98274%203.80395%208.90467%203.99244Z%22%20fill%3D%22%23999999%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"right-gray\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M3.32508%2011.7609C3.46644%2011.8194%203.64565%2011.8194%204.00407%2011.8194H13.049L10.1235%2014.745C9.87002%2014.9984%209.7433%2015.1251%209.68475%2015.2665C9.60668%2015.455%209.60668%2015.6668%209.68475%2015.8552C9.7433%2015.9966%209.87002%2016.1233%2010.1235%2016.3768C10.3769%2016.6302%2010.5036%2016.7569%2010.645%2016.8155C10.8335%2016.8935%2011.0452%2016.8935%2011.2337%2016.8155C11.3751%2016.7569%2011.5018%2016.6302%2011.7552%2016.3768L16.5105%2011.6215C16.5524%2011.5803%2016.5983%2011.5344%2016.6493%2011.4834L16.6495%2011.4831C16.8561%2011.2765%2016.9785%2011.1542%2017.0484%2011.0394C17.0648%2011.0128%2017.0782%2010.9866%2017.0893%2010.9599C17.1674%2010.7714%2017.1674%2010.5596%2017.0893%2010.3711C17.0308%2010.2298%2016.904%2010.1031%2016.6506%209.84962C16.5685%209.76752%2016.4997%209.69872%2016.4394%209.64123L11.7542%204.95601C11.5007%204.70257%2011.374%204.57585%2011.2327%204.5173C11.0442%204.43923%2010.8324%204.43923%2010.6439%204.5173C10.5026%204.57585%2010.3758%204.70257%2010.1224%204.95601L10.1224%204.95601C9.86895%205.20945%209.74223%205.33617%209.68368%205.47753C9.60561%205.66601%209.60561%205.87779%209.68368%206.06627C9.74223%206.20764%209.86895%206.33436%2010.1224%206.5878L13.0463%209.51175H4.00407C3.64565%209.51175%203.46644%209.51175%203.32508%209.5703C3.1366%209.64837%202.98685%209.79812%202.90877%209.98661C2.85022%2010.128%202.85022%2010.3072%202.85022%2010.6656C2.85022%2011.024%202.85022%2011.2032%202.90877%2011.3446C2.98685%2011.5331%203.1366%2011.6828%203.32508%2011.7609Z%22%20fill%3D%22%23999999%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"up-gray\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M11.0936%2017.3406C11.1522%2017.1992%2011.1522%2017.02%2011.1522%2016.6616V7.61701L14.0776%2010.5424C14.3311%2010.7959%2014.4578%2010.9226%2014.5991%2010.9811C14.7876%2011.0592%2014.9994%2011.0592%2015.1879%2010.9811C15.3292%2010.9226%2015.456%2010.7959%2015.7094%2010.5424C15.9628%2010.289%2016.0896%2010.1623%2016.1481%2010.0209C16.2262%209.83243%2016.2262%209.62066%2016.1481%209.43217C16.0896%209.29081%2015.9628%209.16409%2015.7094%208.91065L10.9645%204.16576C10.9207%204.12105%2010.8714%204.07178%2010.8161%204.01648L10.8159%204.0163C10.5916%203.792%2010.4666%203.66696%2010.3428%203.60058C10.3261%203.59154%2010.3094%203.58358%2010.2925%203.57658C10.104%203.49851%209.89226%203.49851%209.70378%203.57658C9.56242%203.63514%209.4357%203.76186%209.18226%204.0153C9.09955%204.09801%209.03034%204.16722%208.97258%204.22785L4.28878%208.91166C4.03534%209.1651%203.90862%209.29182%203.85006%209.43318C3.77199%209.62166%203.77199%209.83344%203.85006%2010.0219C3.90862%2010.1633%204.03534%2010.29%204.28878%2010.5434C4.54221%2010.7969%204.66893%2010.9236%204.8103%2010.9822C4.99878%2011.0602%205.21056%2011.0602%205.39904%2010.9822C5.5404%2010.9236%205.66712%2010.7969%205.92056%2010.5434L5.92056%2010.5434L8.84449%207.61951V16.6616C8.84449%2017.02%208.84449%2017.1992%208.90305%2017.3406C8.98112%2017.5291%209.13087%2017.6788%209.31935%2017.7569C9.46072%2017.8154%209.63992%2017.8154%209.99834%2017.8154C10.3568%2017.8154%2010.536%2017.8154%2010.6773%2017.7569C10.8658%2017.6788%2011.0156%2017.5291%2011.0936%2017.3406Z%22%20fill%3D%22%23999999%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"rightAndDown-gray\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M4.5062%206.72126C4.56476%206.86262%204.69148%206.98934%204.94492%207.24278L11.3404%2013.6382L7.20313%2013.6382C6.84471%2013.6382%206.66551%2013.6382%206.52414%2013.6968C6.33566%2013.7749%206.18591%2013.9246%206.10784%2014.1131C6.04928%2014.2545%206.04928%2014.4337%206.04928%2014.7921C6.04928%2015.1505%206.04928%2015.3297%206.10784%2015.4711C6.18591%2015.6596%206.33566%2015.8093%206.52414%2015.8874C6.66551%2015.9459%206.84471%2015.9459%207.20313%2015.9459L13.9194%2015.9459C13.9805%2015.9465%2014.0484%2015.9465%2014.1243%2015.9465H14.1243C14.4353%2015.9465%2014.6114%2015.9465%2014.7449%2015.9082C14.7659%2015.9023%2014.7859%2015.8954%2014.8052%2015.8874C14.9937%2015.8093%2015.1434%2015.6596%2015.2215%2015.4711C15.2801%2015.3297%2015.2801%2015.1505%2015.2801%2014.7921C15.2801%2014.6767%2015.2801%2014.5799%2015.2781%2014.497L15.2781%207.86957C15.2781%207.51115%2015.2781%207.33194%2015.2195%207.19058C15.1415%207.0021%2014.9917%206.85235%2014.8032%206.77428C14.6619%206.71572%2014.4827%206.71572%2014.1243%206.71572C13.7658%206.71572%2013.5866%206.71572%2013.4453%206.77428C13.2568%206.85235%2013.107%207.0021%2013.029%207.19058C12.9704%207.33194%2012.9704%207.51115%2012.9704%207.86957L12.9704%2012.0047L6.5767%205.61099C6.32326%205.35755%206.19654%205.23083%206.05518%205.17228C5.8667%205.09421%205.65492%205.09421%205.46644%205.17228C5.32508%205.23083%205.19836%205.35755%204.94492%205.61099C4.69148%205.86443%204.56476%205.99115%204.5062%206.13251C4.42813%206.32099%204.42813%206.53277%204.5062%206.72126Z%22%20fill%3D%22%23999999%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"rightAndUp-gray\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M6.05431%2016.1597C6.19567%2016.1012%206.32239%2015.9745%206.57583%2015.721L12.9712%209.32568L12.9712%2013.4626C12.9712%2013.821%2012.9712%2014.0002%2013.0297%2014.1416C13.1078%2014.3301%2013.2576%2014.4798%2013.446%2014.5579C13.5874%2014.6164%2013.7666%2014.6164%2014.125%2014.6164C14.4834%2014.6164%2014.6626%2014.6164%2014.804%2014.5579C14.9925%2014.4798%2015.1422%2014.3301%2015.2203%2014.1416C15.2789%2014.0002%2015.2789%2013.821%2015.2789%2013.4626L15.2789%206.75233C15.2795%206.68972%2015.2795%206.62004%2015.2795%206.54182L15.2795%206.54157C15.2795%206.22585%2015.2795%206.04918%2015.2395%205.91495C15.2339%205.89605%2015.2276%205.878%2015.2203%205.86053C15.1422%205.67204%2014.9925%205.52229%2014.804%205.44422C14.6626%205.38567%2014.4834%205.38567%2014.125%205.38567L14.125%205.38567C14.0075%205.38567%2013.9093%205.38567%2013.8254%205.38773L7.20256%205.38773C6.84414%205.38773%206.66493%205.38773%206.52357%205.44628C6.33509%205.52436%206.18534%205.6741%206.10727%205.86259C6.04871%206.00395%206.04871%206.18315%206.04871%206.54156V6.54157L6.04871%206.54159C6.04871%206.9%206.04871%207.0792%206.10727%207.22056C6.18534%207.40905%206.33509%207.55879%206.52357%207.63687C6.66493%207.69542%206.84414%207.69542%207.20256%207.69542H11.3379L4.94405%2014.0892C4.69061%2014.3427%204.56389%2014.4694%204.50533%2014.6108C4.42726%2014.7992%204.42726%2015.011%204.50533%2015.1995C4.56389%2015.3409%204.69061%2015.4676%204.94405%2015.721C5.19749%2015.9745%205.32421%2016.1012%205.46557%2016.1597C5.65405%2016.2378%205.86583%2016.2378%206.05431%2016.1597Z%22%20fill%3D%22%23999999%22%2F%3E%0A%3C%2Fsvg%3E%0A\"\n    },\n    \"shape\": {\n        \"cross\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%223.70374%22%20y%3D%228.14795%22%20width%3D%2212.5926%22%20height%3D%223.7037%22%20rx%3D%220.740741%22%20fill%3D%22%23FFBD37%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"up\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M9.44533%205.81157C9.74012%205.47858%2010.2598%205.47858%2010.5546%205.81157L16.2868%2012.2867C16.71%2012.7647%2016.3706%2013.5184%2015.7322%2013.5184H4.26776C3.62933%2013.5184%203.28995%2012.7647%203.71313%2012.2867L9.44533%205.81157Z%22%20fill%3D%22%2359D01E%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"down\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M10.5547%2014.1884C10.2599%2014.5214%209.74019%2014.5214%209.4454%2014.1884L3.71321%207.71335C3.29002%207.23532%203.6294%206.48161%204.26784%206.48161L15.7322%206.48161C16.3707%206.48161%2016.7101%207.23532%2016.2869%207.71335L10.5547%2014.1884Z%22%20fill%3D%22%23FE4B4B%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"rhomboid-red\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M2.1415%2011.1984C1.8412%2010.9074%201.8412%2010.4256%202.1415%2010.1346L9.48467%203.01785C9.77196%202.73942%2010.2284%202.73942%2010.5157%203.01786L17.8586%2010.1346C18.1589%2010.4256%2018.1589%2010.9074%2017.8586%2011.1984L10.5157%2018.3151C10.2284%2018.5936%209.77196%2018.5936%209.48467%2018.3152L2.1415%2011.1984Z%22%20fill%3D%22%23FE4B4B%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"rhomboid-gold\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M2.1415%2011.1984C1.8412%2010.9074%201.8412%2010.4256%202.1415%2010.1346L9.48467%203.01785C9.77196%202.73942%2010.2284%202.73942%2010.5157%203.01786L17.8586%2010.1346C18.1589%2010.4256%2018.1589%2010.9074%2017.8586%2011.1984L10.5157%2018.3151C10.2284%2018.5936%209.77196%2018.5936%209.48467%2018.3152L2.1415%2011.1984Z%22%20fill%3D%22%23FFBD37%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"roundness-greed\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%2210%22%20cy%3D%2210.6664%22%20r%3D%227.03704%22%20fill%3D%22%2359D01E%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"roundness-gold\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%2210%22%20cy%3D%2210.6664%22%20r%3D%227.03704%22%20fill%3D%22%23FFBD37%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"roundness-red\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%2210%22%20cy%3D%2210.6664%22%20r%3D%227.03704%22%20fill%3D%22%23FE4B4B%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"roundness-pink\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%2210%22%20cy%3D%2210.6664%22%20r%3D%227.03704%22%20fill%3D%22%23FB9D9D%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"roundness-gray\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%2210%22%20cy%3D%2210.6664%22%20r%3D%227.03704%22%20fill%3D%22%23999999%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"roundness-black\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Ccircle%20cx%3D%2210%22%20cy%3D%2210.6664%22%20r%3D%227.03704%22%20fill%3D%22black%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"triangle-gold\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cg%20clip-path%3D%22url(%23clip0_613_237)%22%3E%0A%3Cpath%20d%3D%22M9.32308%204.41301C9.58368%203.82623%2010.4164%203.82623%2010.677%204.413L15.9526%2016.2917C16.1701%2016.7815%2015.8115%2017.3331%2015.2756%2017.3331H4.72454C4.18858%2017.3331%203.83002%2016.7815%204.04756%2016.2917L9.32308%204.41301Z%22%20fill%3D%22%23FFBD37%22%2F%3E%0A%3C%2Fg%3E%0A%3Cdefs%3E%0A%3CclipPath%20id%3D%22clip0_613_237%22%3E%0A%3Crect%20width%3D%2220%22%20height%3D%2220%22%20fill%3D%22white%22%20transform%3D%22translate(0%200.666504)%22%2F%3E%0A%3C%2FclipPath%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A\",\n        \"indicate-greed\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%222.76941%22%20y%3D%222.76941%22%20width%3D%2214.4612%22%20height%3D%2214.4612%22%20rx%3D%223%22%20fill%3D%22black%22%2F%3E%0A%3Ccircle%20cx%3D%2210%22%20cy%3D%2210%22%20r%3D%224.5%22%20fill%3D%22%2359D01E%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"indicate-gold\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%222.76941%22%20y%3D%222.76941%22%20width%3D%2214.4612%22%20height%3D%2214.4612%22%20rx%3D%223%22%20fill%3D%22black%22%2F%3E%0A%3Ccircle%20cx%3D%2210%22%20cy%3D%2210%22%20r%3D%224.5%22%20fill%3D%22%23FFBD37%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"indicate-red\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%222.76941%22%20y%3D%222.76941%22%20width%3D%2214.4612%22%20height%3D%2214.4612%22%20rx%3D%223%22%20fill%3D%22black%22%2F%3E%0A%3Ccircle%20cx%3D%2210%22%20cy%3D%2210%22%20r%3D%224.5%22%20fill%3D%22%23FE4B4B%22%2F%3E%0A%3C%2Fsvg%3E%0A\"\n    },\n    \"feedback2\": {\n        \"mistake2\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M4.12194%206.33702C4.1805%206.47839%204.30722%206.6051%204.56066%206.85854L8.36822%2010.6661L4.56062%2014.4737C4.30718%2014.7272%204.18046%2014.8539%204.12191%2014.9952C4.04384%2015.1837%204.04384%2015.3955%204.12191%2015.584C4.18046%2015.7253%204.30718%2015.8521%204.56062%2016.1055C4.81406%2016.3589%204.94078%2016.4857%205.08214%2016.5442C5.27062%2016.6223%205.4824%2016.6223%205.67089%2016.5442C5.81225%2016.4857%205.93897%2016.3589%206.19241%2016.1055L10%2012.2979L13.8074%2016.1053C14.0609%2016.3588%2014.1876%2016.4855%2014.329%2016.544C14.5174%2016.6221%2014.7292%2016.6221%2014.9177%2016.544C15.0591%2016.4855%2015.1858%2016.3588%2015.4392%2016.1053L15.4392%2016.1053C15.6927%2015.8519%2015.8194%2015.7252%2015.8779%2015.5838C15.956%2015.3953%2015.956%2015.1835%2015.8779%2014.9951C15.8194%2014.8537%2015.6927%2014.727%2015.4392%2014.4735L15.4392%2014.4735L11.6318%2010.6661L15.4392%206.85872C15.6926%206.60528%2015.8193%206.47856%2015.8779%206.3372C15.956%206.14871%2015.956%205.93694%2015.8779%205.74845C15.8193%205.60709%2015.6926%205.48037%2015.4392%205.22693C15.1857%204.97349%2015.059%204.84677%2014.9177%204.78822C14.7292%204.71015%2014.5174%204.71015%2014.3289%204.78822C14.1876%204.84677%2014.0608%204.97349%2013.8074%205.22693L10%209.03433L6.19244%205.22676C5.939%204.97332%205.81228%204.8466%205.67092%204.78805C5.48244%204.70997%205.27066%204.70997%205.08218%204.78805C4.94082%204.8466%204.8141%204.97332%204.56066%205.22676L4.56066%205.22676C4.30722%205.4802%204.1805%205.60692%204.12194%205.74828C4.04387%205.93676%204.04387%206.14854%204.12194%206.33702Z%22%20fill%3D%22%23FE4B4B%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"warn2\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M8.49778%205.00963C8.48513%204.56774%208.47881%204.3468%208.56086%204.17746C8.63301%204.02856%208.75124%203.90689%208.89802%203.83052C9.06494%203.74365%209.28597%203.74365%209.72805%203.74365H10.272C10.714%203.74365%2010.9351%203.74365%2011.102%203.83052C11.2488%203.9069%2011.367%204.02856%2011.4392%204.17746C11.5212%204.3468%2011.5149%204.56775%2011.5022%205.00964L11.2644%2013.3173C11.2524%2013.737%2011.2464%2013.9468%2011.1609%2014.1065C11.0857%2014.2471%2010.9687%2014.3609%2010.826%2014.432C10.6639%2014.5129%2010.454%2014.5129%2010.0342%2014.5129H9.96582C9.54601%2014.5129%209.33611%2014.5129%209.17397%2014.432C9.0313%2014.3609%208.91426%2014.2471%208.83904%2014.1065C8.75357%2013.9468%208.74756%2013.737%208.73555%2013.3173L8.49778%205.00963Z%22%20fill%3D%22%23FFBD37%22%2F%3E%0A%3Crect%20x%3D%228.76917%22%20y%3D%2215.2817%22%20width%3D%222.46154%22%20height%3D%222.46154%22%20rx%3D%220.769231%22%20fill%3D%22%23FFBD37%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"correct2\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cg%20clip-path%3D%22url(%23clip0_613_248)%22%3E%0A%3Cpath%20d%3D%22M15.689%205.69723C15.5476%205.75578%2015.4209%205.8825%2015.1675%206.13594L7.82436%2013.4791L4.83279%2010.4875C4.57935%2010.2341%204.45263%2010.1073%204.31127%2010.0488C4.12278%209.97071%203.91101%209.97071%203.72252%2010.0488C3.58116%2010.1073%203.45444%2010.2341%203.201%2010.4875C2.94756%2010.7409%202.82084%2010.8676%202.76229%2011.009C2.68422%2011.1975%202.68422%2011.4093%202.76229%2011.5978C2.82084%2011.7391%202.94756%2011.8658%203.201%2012.1193L7.0085%2015.9268C7.26194%2016.1802%207.38866%2016.3069%207.53002%2016.3655C7.7185%2016.4436%207.93028%2016.4436%208.11876%2016.3655C8.26013%2016.3069%208.38685%2016.1802%208.64028%2015.9268C8.66387%2015.9032%208.68636%2015.8807%208.7078%2015.8592L16.7993%207.76772C17.0527%207.51428%2017.1794%207.38756%2017.238%207.2462C17.3161%207.05772%2017.3161%206.84594%2017.238%206.65746C17.1794%206.5161%2017.0527%206.38938%2016.7993%206.13594C16.5458%205.8825%2016.4191%205.75578%2016.2777%205.69723C16.0893%205.61915%2015.8775%205.61915%2015.689%205.69723Z%22%20fill%3D%22%2359D01E%22%2F%3E%0A%3C%2Fg%3E%0A%3Cdefs%3E%0A%3CclipPath%20id%3D%22clip0_613_248%22%3E%0A%3Crect%20width%3D%2220%22%20height%3D%2220%22%20fill%3D%22white%22%20transform%3D%22translate(0%200.666504)%22%2F%3E%0A%3C%2FclipPath%3E%0A%3C%2Fdefs%3E%0A%3C%2Fsvg%3E%0A\"\n    },\n    \"flag\": {\n        \"flag-green\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M15.4274%204.74935C14.0982%205.1012%2013.1363%205.13675%2012.3604%205.03379C11.5776%204.93009%2010.9487%204.68342%2010.2456%204.40416L10.2246%204.39527C9.53411%204.1212%208.76945%203.8175%207.81312%203.69157C6.84279%203.56268%205.71016%203.61898%204.24802%204.0049C4.09343%204.04217%203.95538%204.13393%203.85649%204.26515C3.7576%204.39636%203.70374%204.55925%203.70374%204.72712V17.3197C3.70374%2017.5162%203.79534%2017.7046%203.92654%2017.8435C4.05773%2017.9824%204.25893%2018.0605%204.44448%2018.0605C4.63002%2018.0605%204.84911%2017.9824%204.98031%2017.8435C5.11151%2017.7046%205.18522%2017.5162%205.18522%2017.3197V14.9123V12.5049C6.24649%2012.2738%206.97081%2012.2605%207.63962%2012.3486C8.42246%2012.4523%209.05139%2012.699%209.75448%2012.9782L9.77546%2012.9871C10.466%2013.2612%2011.2306%2013.5649%2012.1869%2013.6908C13.1601%2013.8197%2014.2976%2013.7627%2015.7667%2013.3738C15.8866%2013.3421%2016.0727%2013.2135%2016.1483%2013.111C16.2238%2013.0084%2016.2963%2012.8204%2016.2963%2012.6553V5.46787C16.2963%205.35535%2016.2721%205.24432%2016.2255%205.1432C16.1788%205.04208%2016.1111%204.95353%2016.0274%204.88428C15.9436%204.81502%2015.846%204.76688%2015.7421%204.7435C15.6382%204.72012%2015.494%204.73173%2015.4274%204.74935Z%22%20fill%3D%22%2359D01E%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"flag-gold\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M15.4274%204.74935C14.0982%205.1012%2013.1363%205.13675%2012.3604%205.03379C11.5776%204.93009%2010.9487%204.68342%2010.2456%204.40416L10.2246%204.39527C9.53411%204.1212%208.76945%203.8175%207.81312%203.69157C6.84279%203.56268%205.71016%203.61898%204.24802%204.0049C4.09343%204.04217%203.95538%204.13393%203.85649%204.26515C3.7576%204.39636%203.70374%204.55925%203.70374%204.72712V17.3197C3.70374%2017.5162%203.79534%2017.7046%203.92654%2017.8435C4.05773%2017.9824%204.25893%2018.0605%204.44448%2018.0605C4.63002%2018.0605%204.84911%2017.9824%204.98031%2017.8435C5.11151%2017.7046%205.18522%2017.5162%205.18522%2017.3197V14.9123V12.5049C6.24649%2012.2738%206.97081%2012.2605%207.63962%2012.3486C8.42246%2012.4523%209.05139%2012.699%209.75448%2012.9782L9.77546%2012.9871C10.466%2013.2612%2011.2306%2013.5649%2012.1869%2013.6908C13.1601%2013.8197%2014.2976%2013.7627%2015.7667%2013.3738C15.8866%2013.3421%2016.0727%2013.2135%2016.1483%2013.111C16.2238%2013.0084%2016.2963%2012.8204%2016.2963%2012.6553V5.46787C16.2963%205.35535%2016.2721%205.24432%2016.2255%205.1432C16.1788%205.04208%2016.1111%204.95353%2016.0274%204.88428C15.9436%204.81502%2015.846%204.76688%2015.7421%204.7435C15.6382%204.72012%2015.494%204.73173%2015.4274%204.74935Z%22%20fill%3D%22%23FFBD37%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"flag-red\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2221%22%20viewBox%3D%220%200%2020%2021%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M15.4274%204.74935C14.0982%205.1012%2013.1363%205.13675%2012.3604%205.03379C11.5776%204.93009%2010.9487%204.68342%2010.2456%204.40416L10.2246%204.39527C9.53411%204.1212%208.76945%203.8175%207.81312%203.69157C6.84279%203.56268%205.71016%203.61898%204.24802%204.0049C4.09343%204.04217%203.95538%204.13393%203.85649%204.26515C3.7576%204.39636%203.70374%204.55925%203.70374%204.72712V17.3197C3.70374%2017.5162%203.79534%2017.7046%203.92654%2017.8435C4.05773%2017.9824%204.25893%2018.0605%204.44448%2018.0605C4.63002%2018.0605%204.84911%2017.9824%204.98031%2017.8435C5.11151%2017.7046%205.18522%2017.5162%205.18522%2017.3197V14.9123V12.5049C6.24649%2012.2738%206.97081%2012.2605%207.63962%2012.3486C8.42246%2012.4523%209.05139%2012.699%209.75448%2012.9782L9.77546%2012.9871C10.466%2013.2612%2011.2306%2013.5649%2012.1869%2013.6908C13.1601%2013.8197%2014.2976%2013.7627%2015.7667%2013.3738C15.8866%2013.3421%2016.0727%2013.2135%2016.1483%2013.111C16.2238%2013.0084%2016.2963%2012.8204%2016.2963%2012.6553V5.46787C16.2963%205.35535%2016.2721%205.24432%2016.2255%205.1432C16.1788%205.04208%2016.1111%204.95353%2016.0274%204.88428C15.9436%204.81502%2015.846%204.76688%2015.7421%204.7435C15.6382%204.72012%2015.494%204.73173%2015.4274%204.74935Z%22%20fill%3D%22%23FE4B4B%22%2F%3E%0A%3C%2Fsvg%3E%0A\"\n    },\n    \"cell\": {\n        \"cell-0\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%224%22%20y%3D%2211.001%22%20width%3D%225%22%20height%3D%225%22%20rx%3D%221%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%2211%22%20y%3D%2211.001%22%20width%3D%225%22%20height%3D%225%22%20rx%3D%221%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%224%22%20y%3D%224.00098%22%20width%3D%225%22%20height%3D%225%22%20rx%3D%221%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%2211%22%20y%3D%224.00098%22%20width%3D%225%22%20height%3D%225%22%20rx%3D%221%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"cell-25\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%224%22%20y%3D%2211.001%22%20width%3D%225%22%20height%3D%225%22%20rx%3D%221%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%2211%22%20y%3D%2211.001%22%20width%3D%225%22%20height%3D%225%22%20rx%3D%221%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%224.25%22%20y%3D%224.25098%22%20width%3D%224.5%22%20height%3D%224.5%22%20rx%3D%220.75%22%20fill%3D%22%230493EE%22%20stroke%3D%22%230493EE%22%20stroke-width%3D%220.5%22%2F%3E%0A%3Crect%20x%3D%2211%22%20y%3D%224.00098%22%20width%3D%225%22%20height%3D%225%22%20rx%3D%221%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"cell-50\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%224%22%20y%3D%2211.001%22%20width%3D%225%22%20height%3D%225%22%20rx%3D%221%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%2211%22%20y%3D%2211.001%22%20width%3D%225%22%20height%3D%225%22%20rx%3D%221%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%224.25%22%20y%3D%224.25098%22%20width%3D%224.5%22%20height%3D%224.5%22%20rx%3D%220.75%22%20fill%3D%22%230493EE%22%20stroke%3D%22%230493EE%22%20stroke-width%3D%220.5%22%2F%3E%0A%3Crect%20x%3D%2211.25%22%20y%3D%224.25098%22%20width%3D%224.5%22%20height%3D%224.5%22%20rx%3D%220.75%22%20fill%3D%22%230493EE%22%20stroke%3D%22%230493EE%22%20stroke-width%3D%220.5%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"cell-75\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%224.25%22%20y%3D%2211.251%22%20width%3D%224.5%22%20height%3D%224.5%22%20rx%3D%220.75%22%20fill%3D%22%230493EE%22%20stroke%3D%22%230493EE%22%20stroke-width%3D%220.5%22%2F%3E%0A%3Crect%20x%3D%2211%22%20y%3D%2211.001%22%20width%3D%225%22%20height%3D%225%22%20rx%3D%221%22%20fill%3D%22%23E5E5E5%22%2F%3E%0A%3Crect%20x%3D%224.25%22%20y%3D%224.25098%22%20width%3D%224.5%22%20height%3D%224.5%22%20rx%3D%220.75%22%20fill%3D%22%230493EE%22%20stroke%3D%22%230493EE%22%20stroke-width%3D%220.5%22%2F%3E%0A%3Crect%20x%3D%2211.25%22%20y%3D%224.25098%22%20width%3D%224.5%22%20height%3D%224.5%22%20rx%3D%220.75%22%20fill%3D%22%230493EE%22%20stroke%3D%22%230493EE%22%20stroke-width%3D%220.5%22%2F%3E%0A%3C%2Fsvg%3E%0A\",\n        \"cell-100\": \"data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Crect%20x%3D%224.25%22%20y%3D%2211.251%22%20width%3D%224.5%22%20height%3D%224.5%22%20rx%3D%220.75%22%20fill%3D%22%230493EE%22%20stroke%3D%22%230493EE%22%20stroke-width%3D%220.5%22%2F%3E%0A%3Crect%20x%3D%2211.25%22%20y%3D%2211.251%22%20width%3D%224.5%22%20height%3D%224.5%22%20rx%3D%220.75%22%20fill%3D%22%230493EE%22%20stroke%3D%22%230493EE%22%20stroke-width%3D%220.5%22%2F%3E%0A%3Crect%20x%3D%224.25%22%20y%3D%224.25098%22%20width%3D%224.5%22%20height%3D%224.5%22%20rx%3D%220.75%22%20fill%3D%22%230493EE%22%20stroke%3D%22%230493EE%22%20stroke-width%3D%220.5%22%2F%3E%0A%3Crect%20x%3D%2211.25%22%20y%3D%224.25098%22%20width%3D%224.5%22%20height%3D%224.5%22%20rx%3D%220.75%22%20fill%3D%22%230493EE%22%20stroke%3D%22%230493EE%22%20stroke-width%3D%220.5%22%2F%3E%0A%3C%2Fsvg%3E%0A\"\n    }\n}\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ICON_MAP from '../assets/icon-map.json';\n\nexport type IIconItem = string;\n\nexport const iconGroup: { title: string; group: { name: string; list: string[] }[] }[] = [\n    {\n        title: 'sheet.cf.iconSet.direction',\n        group: [\n            { name: '3Arrows', list: [ICON_MAP.arrow['up-green'], ICON_MAP.arrow['right-gold'], ICON_MAP.arrow['down-red']] },\n            { name: '3ArrowsGray', list: [ICON_MAP.arrow['up-gray'], ICON_MAP.arrow['right-gray'], ICON_MAP.arrow['down-gray']] },\n            { name: '4Arrows', list: [ICON_MAP.arrow['up-green'], ICON_MAP.arrow['rightAndUp-gold'], ICON_MAP.arrow['rightAndDown-gold'], ICON_MAP.arrow['down-red']] },\n            { name: '4ArrowsGray', list: [ICON_MAP.arrow['up-gray'], ICON_MAP.arrow['rightAndUp-gray'], ICON_MAP.arrow['rightAndDown-gray'], ICON_MAP.arrow['down-gray']] },\n            { name: '5Arrows', list: [ICON_MAP.arrow['up-green'], ICON_MAP.arrow['rightAndUp-gold'], ICON_MAP.arrow['right-gold'], ICON_MAP.arrow['rightAndDown-gold'], ICON_MAP.arrow['down-red']] },\n            { name: '5ArrowsGray', list: [ICON_MAP.arrow['up-gray'], ICON_MAP.arrow['rightAndUp-gray'], ICON_MAP.arrow['right-gray'], ICON_MAP.arrow['rightAndDown-gray'], ICON_MAP.arrow['down-gray']] },\n            { name: '3Triangles', list: [ICON_MAP.shape.up, ICON_MAP.shape.cross, ICON_MAP.shape.down] },\n        ],\n    },\n    {\n        title: 'sheet.cf.iconSet.shape',\n        group: [\n            {\n                name: '3TrafficLights1',\n                list: [ICON_MAP.shape['roundness-greed'], ICON_MAP.shape['roundness-gold'], ICON_MAP.shape['roundness-red']],\n            },\n            {\n                name: '3Signs',\n                list: [ICON_MAP.shape['roundness-greed'], ICON_MAP.shape['triangle-gold'], ICON_MAP.shape['rhomboid-red']],\n            },\n            { name: '3TrafficLights2', list: [ICON_MAP.shape['indicate-greed'], ICON_MAP.shape['indicate-gold'], ICON_MAP.shape['indicate-red']] },\n            {\n                name: '4RedToBlack',\n                list: [ICON_MAP.shape['roundness-red'], ICON_MAP.shape['roundness-pink'], ICON_MAP.shape['roundness-gray'], ICON_MAP.shape['roundness-black']],\n            },\n            {\n                name: '4TrafficLights',\n                list: [ICON_MAP.shape['roundness-greed'], ICON_MAP.shape['roundness-gold'], ICON_MAP.shape['roundness-red'], ICON_MAP.shape['roundness-black']],\n            },\n        ],\n    },\n    {\n        title: 'sheet.cf.iconSet.mark',\n        group: [\n            {\n                name: '3Symbols',\n                list: [ICON_MAP.feedback.correct, ICON_MAP.feedback.warn, ICON_MAP.feedback.mistake],\n            },\n            {\n                name: '3Symbols2',\n                list: [ICON_MAP.feedback2.correct2, ICON_MAP.feedback2.warn2, ICON_MAP.feedback2.mistake2],\n            },\n            {\n                name: '3Flags',\n                list: [ICON_MAP.flag['flag-green'], ICON_MAP.flag['flag-gold'], ICON_MAP.flag['flag-red']],\n            },\n\n        ],\n    },\n    {\n        title: 'sheet.cf.iconSet.rank',\n        group: [\n            {\n                name: '4Rating',\n                list: [ICON_MAP.signal.signal25, ICON_MAP.signal.signal50, ICON_MAP.signal.signal75, ICON_MAP.signal.signal100],\n            },\n            {\n                name: '5Rating',\n                list: [ICON_MAP.signal.signal0, ICON_MAP.signal.signal25, ICON_MAP.signal.signal50, ICON_MAP.signal.signal75, ICON_MAP.signal.signal100],\n            },\n            {\n                name: '5Quarters',\n                list: [ICON_MAP.progress.progress100, ICON_MAP.progress.progress75, ICON_MAP.progress.progress50, ICON_MAP.progress.progress25, ICON_MAP.progress.progress0],\n            },\n            {\n                name: '_5Felling',\n                list: [ICON_MAP.feeling.guffaw, ICON_MAP.feeling.smile, ICON_MAP.feeling.noninductive, ICON_MAP.feeling.dissatisfied, ICON_MAP.feeling.impatient],\n            },\n            {\n                name: '5Boxes',\n                list: [ICON_MAP.cell['cell-100'], ICON_MAP.cell['cell-75'], ICON_MAP.cell['cell-50'], ICON_MAP.cell['cell-25'], ICON_MAP.cell['cell-0']],\n            },\n            {\n                name: '3Stars',\n                list: [ICON_MAP.star.starFull, ICON_MAP.star.starIncomplete, ICON_MAP.star.starEmpty],\n            },\n        ],\n    },\n];\n\nexport const iconMap = iconGroup.reduce((result, cur) => {\n    const { group } = cur;\n    for (const v of group) {\n        result[v.name] = v.list;\n    }\n    return result;\n}, {} as Record<string, string[]>);\nexport type IIconType = keyof typeof iconMap;\n\nfor (const key in iconMap) {\n    const v = iconMap[key as IIconType];\n    Object.freeze(v);\n}\nexport const EMPTY_ICON_TYPE = 'EMPTY_ICON_TYPE';\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { IRange, IScale } from '@univerjs/core';\nimport type { SpreadsheetSkeleton, UniverRenderingContext } from '@univerjs/engine-render';\nimport type { IIconType } from '../models/icon-map';\nimport type { IIconSetCellData } from './type';\nimport { Range } from '@univerjs/core';\nimport { SheetExtension, SpreadsheetExtensionRegistry } from '@univerjs/engine-render';\nimport { EMPTY_ICON_TYPE, iconMap } from '../models/icon-map';\n\nexport const IconUKey = 'sheet-conditional-rule-icon';\nconst EXTENSION_Z_INDEX = 35;\nexport const DEFAULT_WIDTH = 15;\nexport const DEFAULT_PADDING = 2;\n\nexport class ConditionalFormattingIcon extends SheetExtension {\n    private _paddingRightAndLeft = DEFAULT_PADDING;\n\n    private _width = DEFAULT_WIDTH;\n\n    private _imageMap: Map<string, HTMLImageElement> = new Map();\n    override uKey = IconUKey;\n\n    override Z_INDEX = EXTENSION_Z_INDEX;\n    _radius = 1;\n    constructor() {\n        super();\n        this._init();\n    }\n\n    override draw(\n        ctx: UniverRenderingContext,\n        _parentScale: IScale,\n        spreadsheetSkeleton: SpreadsheetSkeleton,\n        diffRanges: IRange[]\n    ) {\n        const { worksheet } = spreadsheetSkeleton;\n        if (!worksheet) {\n            return false;\n        }\n        ctx.save();\n        // ctx.globalCompositeOperation = 'destination-over';\n        Range.foreach(spreadsheetSkeleton.rowColumnSegment, (row, col) => {\n            if (!worksheet.getRowVisible(row) || !worksheet.getColVisible(col)) {\n                return;\n            }\n            const cellData = worksheet.getCell(row, col) as IIconSetCellData;\n            if (cellData?.iconSet) {\n                const { iconType, iconId } = cellData.iconSet;\n                if (iconType === EMPTY_ICON_TYPE) {\n                    return;\n                }\n                const icon = this._imageMap.get(this._createKey(iconType, iconId));\n                if (!icon) {\n                    return;\n                }\n                const cellInfo = spreadsheetSkeleton.getCellWithCoordByIndex(row, col, false);\n                let { isMerged, isMergedMainCell, mergeInfo, startY, endY, startX, endX } = cellInfo;\n                if (isMerged) {\n                    return;\n                }\n                if (isMergedMainCell) {\n                    startY = mergeInfo.startY;\n                    endY = mergeInfo.endY;\n                    startX = mergeInfo.startX;\n                    endX = mergeInfo.endX;\n                }\n                if (!this.isRenderDiffRangesByCell(mergeInfo, diffRanges)) {\n                    return;\n                }\n                const borderWidth = endX - startX;\n                const borderHeight = endY - startY;\n                if (this._width > borderHeight || this._width > borderWidth + this._paddingRightAndLeft * 2) {\n                    return;\n                }\n                // Highly centered processing\n                const y = (borderHeight - this._width) / 2 + startY;\n                ctx.drawImage(icon, startX + this._paddingRightAndLeft, y, this._width, this._width);\n            }\n        });\n        ctx.restore();\n    }\n\n    private _init() {\n        for (const type in iconMap) {\n            const list = iconMap[type as IIconType];\n            list.forEach((base64, index) => {\n                const key = this._createKey(type as IIconType, String(index));\n                const image = new Image();\n                image.onload = () => {\n                    this._imageMap.set(key, image);\n                };\n                image.src = base64;\n            });\n        }\n    }\n\n    private _createKey(iconType: IIconType, iconIndex: string) {\n        return `${iconType}_${iconIndex}`;\n    }\n}\n\nSpreadsheetExtensionRegistry.add(ConditionalFormattingIcon);\n", "/**\n * Copyright 2023-present DreamNum Co., Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function removeUndefinedAttr<T = unknown>(obj: T): T {\n    if (typeof obj !== 'object' || obj === null) {\n        return obj;\n    }\n\n    const result: Record<string, any> = {};\n\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            const value = removeUndefinedAttr(obj[key]);\n            if (value !== undefined) {\n                result[key] = value;\n            }\n        }\n    }\n\n    return result as T;\n}\n"],
  "mappings": "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",
  "names": ["CFTimePeriodOperator", "CFNumberOperator", "map", "item", "rule", "rule", "params", "map", "dayjs", "value", "row", "col", "startPoint", "row", "col", "targetIndex", "result", "dayjs", "getValue", "map", "params", "EXTENSION_Z_INDEX"]
}
